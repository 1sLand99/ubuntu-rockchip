From bbdc7912cd48ff9e13e2d0e67eb5e533b8441883 Mon Sep 17 00:00:00 2001
From: Steve Hay <me@stevenhay.com>
Date: Fri, 17 Feb 2023 02:43:35 +0100
Subject: [PATCH] 9Tripod / Updated wifi/bt drivers.

- DRIVERVERSION   "v5.14.2-28-g6011b0372.20220328"
- BTCOEXVERSION   "COEX20210319-5555"

Signed-off-by: Steve Hay <me@stevenhay.com>
---
 .../wireless/rockchip_wlan/rtl8821cs/Kconfig  |     1 -
 .../wireless/rockchip_wlan/rtl8821cs/Makefile |    38 +-
 .../rtl8821cs/core/crypto/aes-ccm.c           |     1 -
 .../rtl8821cs/core/crypto/aes-ctr.c           |     1 -
 .../rtl8821cs/core/crypto/aes-gcm.c           |     1 -
 .../rtl8821cs/core/crypto/aes-internal-enc.c  |     5 +-
 .../rtl8821cs/core/crypto/aes-internal.c      |     1 -
 .../rtl8821cs/core/crypto/aes-omac1.c         |     1 -
 .../rtl8821cs/core/crypto/aes-siv.c           |     1 -
 .../rockchip_wlan/rtl8821cs/core/crypto/aes.h |     1 -
 .../rtl8821cs/core/crypto/aes_i.h             |     1 -
 .../rtl8821cs/core/crypto/aes_siv.h           |     1 -
 .../rtl8821cs/core/crypto/aes_wrap.h          |     1 -
 .../rtl8821cs/core/crypto/ccmp.c              |    22 +-
 .../rtl8821cs/core/crypto/gcmp.c              |    14 +-
 .../rtl8821cs/core/crypto/rtw_crypto_wrap.c   |     1 -
 .../rtl8821cs/core/crypto/rtw_crypto_wrap.h   |     1 -
 .../rtl8821cs/core/crypto/sha256-internal.c   |     1 -
 .../rtl8821cs/core/crypto/sha256-prf.c        |     1 -
 .../rtl8821cs/core/crypto/sha256.c            |     1 -
 .../rtl8821cs/core/crypto/sha256.h            |     1 -
 .../rtl8821cs/core/crypto/sha256_i.h          |     1 -
 .../rtl8821cs/core/crypto/wlancrypto_wrap.h   |    13 +-
 .../rtl8821cs/core/efuse/rtw_efuse.c          |    48 +-
 .../rtl8821cs/core/mesh/rtw_mesh.c            |    38 +-
 .../rtl8821cs/core/mesh/rtw_mesh.h            |     1 -
 .../rtl8821cs/core/mesh/rtw_mesh_hwmp.c       |     1 -
 .../rtl8821cs/core/mesh/rtw_mesh_hwmp.h       |     1 -
 .../rtl8821cs/core/mesh/rtw_mesh_pathtbl.c    |     1 -
 .../rtl8821cs/core/mesh/rtw_mesh_pathtbl.h    |     1 -
 .../rtl8821cs/core/monitor/rtw_radiotap.c     |     1 -
 .../rtl8821cs/core/monitor/rtw_radiotap.h     |     1 -
 .../rockchip_wlan/rtl8821cs/core/rtw_ap.c     |   546 +-
 .../rtl8821cs/core/rtw_beamforming.c          |     5 +-
 .../rockchip_wlan/rtl8821cs/core/rtw_br_ext.c |     1 -
 .../rockchip_wlan/rtl8821cs/core/rtw_bt_mp.c  |     1 -
 .../rockchip_wlan/rtl8821cs/core/rtw_btcoex.c |     1 -
 .../rtl8821cs/core/rtw_btcoex_wifionly.c      |     1 -
 .../rockchip_wlan/rtl8821cs/core/rtw_chplan.c |  5461 ++--
 .../rockchip_wlan/rtl8821cs/core/rtw_chplan.h |   259 +-
 .../rockchip_wlan/rtl8821cs/core/rtw_cmd.c    |   426 +-
 .../rockchip_wlan/rtl8821cs/core/rtw_debug.c  |   298 +-
 .../rockchip_wlan/rtl8821cs/core/rtw_eeprom.c |     1 -
 .../rockchip_wlan/rtl8821cs/core/rtw_ft.c     |     3 +-
 .../rtl8821cs/core/rtw_ieee80211.c            |   261 +-
 .../rockchip_wlan/rtl8821cs/core/rtw_io.c     |     7 +-
 .../rtl8821cs/core/rtw_ioctl_query.c          |     1 -
 .../rtl8821cs/core/rtw_ioctl_set.c            |    20 +-
 .../rockchip_wlan/rtl8821cs/core/rtw_iol.c    |     1 -
 .../rockchip_wlan/rtl8821cs/core/rtw_mbo.c    |     3 +-
 .../rockchip_wlan/rtl8821cs/core/rtw_mem.c    |     1 -
 .../rockchip_wlan/rtl8821cs/core/rtw_mi.c     |    34 +-
 .../rockchip_wlan/rtl8821cs/core/rtw_mlme.c   |   453 +-
 .../rtl8821cs/core/rtw_mlme_ext.c             |  1513 +-
 .../rockchip_wlan/rtl8821cs/core/rtw_mp.c     |    11 +-
 .../rockchip_wlan/rtl8821cs/core/rtw_odm.c    |    33 +-
 .../rockchip_wlan/rtl8821cs/core/rtw_p2p.c    |    35 +-
 .../rtl8821cs/core/rtw_pwrctrl.c              |   155 +-
 .../rockchip_wlan/rtl8821cs/core/rtw_recv.c   |   425 +-
 .../rockchip_wlan/rtl8821cs/core/rtw_rf.c     |   265 +-
 .../rockchip_wlan/rtl8821cs/core/rtw_rm.c     |    67 +-
 .../rockchip_wlan/rtl8821cs/core/rtw_rm_fsm.c |     1 -
 .../rtl8821cs/core/rtw_rm_util.c              |    53 +-
 .../rockchip_wlan/rtl8821cs/core/rtw_roch.c   |  1181 +-
 .../rockchip_wlan/rtl8821cs/core/rtw_rson.c   |     1 -
 .../rockchip_wlan/rtl8821cs/core/rtw_sdio.c   |     1 -
 .../rtl8821cs/core/rtw_security.c             |    13 +-
 .../rockchip_wlan/rtl8821cs/core/rtw_sreset.c |     1 -
 .../rtl8821cs/core/rtw_sta_mgt.c              |    31 +-
 .../rtl8821cs/core/rtw_swcrypto.c             |    21 +-
 .../rockchip_wlan/rtl8821cs/core/rtw_tdls.c   |    66 +-
 .../rockchip_wlan/rtl8821cs/core/rtw_vht.c    |   274 +-
 .../rockchip_wlan/rtl8821cs/core/rtw_wapi.c   |    16 +-
 .../rtl8821cs/core/rtw_wapi_sms4.c            |     1 -
 .../rtl8821cs/core/rtw_wlan_util.c            |   347 +-
 .../rockchip_wlan/rtl8821cs/core/rtw_wnm.c    |     1 -
 .../rockchip_wlan/rtl8821cs/core/rtw_xmit.c   |   330 +-
 .../rtl8821cs/core/wds/rtw_wds.c              |     1 -
 .../rtl8821cs/core/wds/rtw_wds.h              |     1 -
 .../rtl8821cs/hal/HalPwrSeqCmd.c              |     1 -
 .../rtl8821cs/hal/btc/btc_basic_types.h       |     1 -
 .../rtl8821cs/hal/btc/halbtc8821c1ant.c       |    47 +-
 .../rtl8821cs/hal/btc/halbtc8821c1ant.h       |     1 -
 .../rtl8821cs/hal/btc/halbtc8821c2ant.c       |    16 +-
 .../rtl8821cs/hal/btc/halbtc8821c2ant.h       |     1 -
 .../rtl8821cs/hal/btc/halbtc8821cwifionly.c   |     3 +-
 .../rtl8821cs/hal/btc/halbtc8821cwifionly.h   |     1 -
 .../rtl8821cs/hal/btc/halbtcoutsrc.h          |    32 +-
 .../rtl8821cs/hal/btc/mp_precomp.h            |     1 -
 .../rtl8821cs/hal/efuse/efuse_mask.h          |     1 -
 .../efuse/rtl8821c/HalEfuseMask8821C_PCIE.c   |     1 -
 .../efuse/rtl8821c/HalEfuseMask8821C_PCIE.h   |     1 -
 .../efuse/rtl8821c/HalEfuseMask8821C_SDIO.c   |     1 -
 .../efuse/rtl8821c/HalEfuseMask8821C_SDIO.h   |     1 -
 .../efuse/rtl8821c/HalEfuseMask8821C_USB.c    |     1 -
 .../efuse/rtl8821c/HalEfuseMask8821C_USB.h    |     1 -
 .../rockchip_wlan/rtl8821cs/hal/hal_btcoex.c  |    83 +-
 .../rtl8821cs/hal/hal_btcoex_wifionly.c       |     1 -
 .../rockchip_wlan/rtl8821cs/hal/hal_com.c     |  3893 ++-
 .../rockchip_wlan/rtl8821cs/hal/hal_com_c2h.h |     1 -
 .../rtl8821cs/hal/hal_com_phycfg.c            |   170 +-
 .../rockchip_wlan/rtl8821cs/hal/hal_dm.c      |    46 +-
 .../rockchip_wlan/rtl8821cs/hal/hal_dm.h      |     2 +-
 .../rockchip_wlan/rtl8821cs/hal/hal_dm_acs.c  |    31 +-
 .../rockchip_wlan/rtl8821cs/hal/hal_dm_acs.h  |     5 +-
 .../rockchip_wlan/rtl8821cs/hal/hal_halmac.c  |    26 +-
 .../rockchip_wlan/rtl8821cs/hal/hal_halmac.h  |     7 +-
 .../rtl8821cs/hal/hal_hci/hal_sdio.c          |     1 -
 .../rtl8821cs/hal/hal_hci/hal_sdio_coex.c     |     1 -
 .../rockchip_wlan/rtl8821cs/hal/hal_intf.c    |    40 +-
 .../rockchip_wlan/rtl8821cs/hal/hal_mcc.c     |     1 -
 .../rockchip_wlan/rtl8821cs/hal/hal_mp.c      |   122 +-
 .../rockchip_wlan/rtl8821cs/hal/hal_phy.c     |     1 -
 .../rtl8821cs/hal/halmac/halmac_2_platform.h  |     1 -
 .../halmac_8821c/halmac_8821c_cfg.h           |     1 -
 .../halmac_8821c/halmac_cfg_wmac_8821c.c      |     1 -
 .../halmac_8821c/halmac_cfg_wmac_8821c.h      |     1 -
 .../halmac_8821c/halmac_common_8821c.c        |     1 -
 .../halmac_8821c/halmac_common_8821c.h        |     1 -
 .../halmac_8821c/halmac_gpio_8821c.c          |     1 -
 .../halmac_8821c/halmac_gpio_8821c.h          |     1 -
 .../halmac_8821c/halmac_init_8821c.c          |     1 -
 .../halmac_8821c/halmac_init_8821c.h          |     1 -
 .../halmac_8821c/halmac_phy_8821c.c           |     1 -
 .../halmac_8821c/halmac_pwr_seq_8821c.c       |     1 -
 .../halmac_8821c/halmac_pwr_seq_8821c.h       |     1 -
 .../halmac_8821c/halmac_sdio_8821c.c          |     1 -
 .../halmac_8821c/halmac_sdio_8821c.h          |     1 -
 .../hal/halmac/halmac_88xx/halmac_88xx_cfg.h  |     1 -
 .../halmac/halmac_88xx/halmac_bb_rf_88xx.c    |     1 -
 .../halmac/halmac_88xx/halmac_bb_rf_88xx.h    |     1 -
 .../halmac/halmac_88xx/halmac_cfg_wmac_88xx.c |     1 -
 .../halmac/halmac_88xx/halmac_cfg_wmac_88xx.h |     1 -
 .../halmac/halmac_88xx/halmac_common_88xx.c   |     1 -
 .../halmac/halmac_88xx/halmac_common_88xx.h   |     1 -
 .../halmac/halmac_88xx/halmac_efuse_88xx.c    |     1 -
 .../halmac/halmac_88xx/halmac_efuse_88xx.h    |     1 -
 .../halmac/halmac_88xx/halmac_flash_88xx.c    |     1 -
 .../halmac/halmac_88xx/halmac_flash_88xx.h    |     1 -
 .../hal/halmac/halmac_88xx/halmac_fw_88xx.c   |     1 -
 .../hal/halmac/halmac_88xx/halmac_fw_88xx.h   |     1 -
 .../hal/halmac/halmac_88xx/halmac_gpio_88xx.c |     1 -
 .../hal/halmac/halmac_88xx/halmac_gpio_88xx.h |     1 -
 .../hal/halmac/halmac_88xx/halmac_init_88xx.c |     1 -
 .../hal/halmac/halmac_88xx/halmac_init_88xx.h |     1 -
 .../hal/halmac/halmac_88xx/halmac_mimo_88xx.c |     1 -
 .../hal/halmac/halmac_88xx/halmac_mimo_88xx.h |     1 -
 .../hal/halmac/halmac_88xx/halmac_sdio_88xx.c |     1 -
 .../hal/halmac/halmac_88xx/halmac_sdio_88xx.h |     1 -
 .../rtl8821cs/hal/halmac/halmac_api.c         |     1 -
 .../rtl8821cs/hal/halmac/halmac_api.h         |     3 +-
 .../rtl8821cs/hal/halmac/halmac_bit2.h        |     1 -
 .../rtl8821cs/hal/halmac/halmac_bit_8197f.h   |     1 -
 .../rtl8821cs/hal/halmac/halmac_bit_8812f.h   |     1 -
 .../rtl8821cs/hal/halmac/halmac_bit_8814b.h   |     1 -
 .../rtl8821cs/hal/halmac/halmac_bit_8821c.h   |     1 -
 .../rtl8821cs/hal/halmac/halmac_bit_8822b.h   |     1 -
 .../rtl8821cs/hal/halmac/halmac_bit_8822c.h   |     1 -
 .../rtl8821cs/hal/halmac/halmac_dbg.c         |     1 -
 .../rtl8821cs/hal/halmac/halmac_dbg.h         |     1 -
 .../rtl8821cs/hal/halmac/halmac_fw_info.h     |     1 -
 .../hal/halmac/halmac_fw_offload_c2h_ap.h     |     1 -
 .../hal/halmac/halmac_fw_offload_c2h_nic.h    |     1 -
 .../hal/halmac/halmac_fw_offload_h2c_ap.h     |     1 -
 .../hal/halmac/halmac_fw_offload_h2c_nic.h    |     1 -
 .../rtl8821cs/hal/halmac/halmac_gpio_cmd.h    |     1 -
 .../hal/halmac/halmac_h2c_extra_info_ap.h     |     1 -
 .../hal/halmac/halmac_h2c_extra_info_nic.h    |     1 -
 .../rtl8821cs/hal/halmac/halmac_hw_cfg.h      |     1 -
 .../hal/halmac/halmac_intf_phy_cmd.h          |     1 -
 .../hal/halmac/halmac_original_c2h_ap.h       |     1 -
 .../hal/halmac/halmac_original_c2h_nic.h      |     1 -
 .../hal/halmac/halmac_original_h2c_ap.h       |     1 -
 .../hal/halmac/halmac_original_h2c_nic.h      |     1 -
 .../rtl8821cs/hal/halmac/halmac_pcie_reg.h    |     1 -
 .../rtl8821cs/hal/halmac/halmac_pwr_seq_cmd.h |     1 -
 .../rtl8821cs/hal/halmac/halmac_reg2.h        |     1 -
 .../rtl8821cs/hal/halmac/halmac_reg_8197f.h   |     1 -
 .../rtl8821cs/hal/halmac/halmac_reg_8812f.h   |     1 -
 .../rtl8821cs/hal/halmac/halmac_reg_8814b.h   |     1 -
 .../rtl8821cs/hal/halmac/halmac_reg_8821c.h   |     1 -
 .../rtl8821cs/hal/halmac/halmac_reg_8822b.h   |     1 -
 .../rtl8821cs/hal/halmac/halmac_reg_8822c.h   |     1 -
 .../rtl8821cs/hal/halmac/halmac_rx_bd_nic.h   |     1 -
 .../rtl8821cs/hal/halmac/halmac_rx_desc_ap.h  |     1 -
 .../hal/halmac/halmac_rx_desc_chip.h          |     1 -
 .../rtl8821cs/hal/halmac/halmac_rx_desc_nic.h |     1 -
 .../rtl8821cs/hal/halmac/halmac_sdio_reg.h    |     1 -
 .../hal/halmac/halmac_state_machine.h         |     1 -
 .../rtl8821cs/hal/halmac/halmac_tx_bd_nic.h   |     1 -
 .../rtl8821cs/hal/halmac/halmac_tx_desc_ap.h  |     1 -
 .../hal/halmac/halmac_tx_desc_buffer_ap.h     |     1 -
 .../hal/halmac/halmac_tx_desc_buffer_chip.h   |     1 -
 .../hal/halmac/halmac_tx_desc_buffer_nic.h    |     1 -
 .../hal/halmac/halmac_tx_desc_chip.h          |     1 -
 .../hal/halmac/halmac_tx_desc_ie_ap.h         |     1 -
 .../hal/halmac/halmac_tx_desc_ie_chip.h       |     1 -
 .../hal/halmac/halmac_tx_desc_ie_nic.h        |     1 -
 .../rtl8821cs/hal/halmac/halmac_tx_desc_nic.h |     1 -
 .../rtl8821cs/hal/halmac/halmac_type.h        |     8 +-
 .../rtl8821cs/hal/halmac/halmac_usb_reg.h     |     1 -
 .../rockchip_wlan/rtl8821cs/hal/led/hal_led.c |     3 +-
 .../rtl8821cs/hal/led/hal_sdio_led.c          |     1 -
 .../rtl8821cs/hal/phydm/ap_makefile.mk        |    14 +-
 .../rtl8821cs/hal/phydm/halhwimg.h            |     1 -
 .../rtl8821cs/hal/phydm/halrf/halphyrf_ap.c   |    29 +-
 .../rtl8821cs/hal/phydm/halrf/halphyrf_ap.h   |     1 -
 .../rtl8821cs/hal/phydm/halrf/halphyrf_ce.c   |     3 +-
 .../rtl8821cs/hal/phydm/halrf/halphyrf_ce.h   |     1 -
 .../rtl8821cs/hal/phydm/halrf/halphyrf_iot.c  |     4 +-
 .../rtl8821cs/hal/phydm/halrf/halphyrf_iot.h  |     1 -
 .../rtl8821cs/hal/phydm/halrf/halphyrf_win.c  |    22 +-
 .../rtl8821cs/hal/phydm/halrf/halphyrf_win.h  |     3 +-
 .../rtl8821cs/hal/phydm/halrf/halrf.c         |   792 +-
 .../rtl8821cs/hal/phydm/halrf/halrf.h         |    47 +-
 .../rtl8821cs/hal/phydm/halrf/halrf_debug.c   |     3 +-
 .../rtl8821cs/hal/phydm/halrf/halrf_debug.h   |     1 -
 .../rtl8821cs/hal/phydm/halrf/halrf_dpk.h     |    52 +-
 .../hal/phydm/halrf/halrf_features.h          |     1 -
 .../rtl8821cs/hal/phydm/halrf/halrf_iqk.h     |    27 +-
 .../rtl8821cs/hal/phydm/halrf/halrf_kfree.c   |   316 +-
 .../rtl8821cs/hal/phydm/halrf/halrf_kfree.h   |    21 +-
 .../hal/phydm/halrf/halrf_powertracking.c     |    17 +-
 .../hal/phydm/halrf/halrf_powertracking.h     |     1 -
 .../hal/phydm/halrf/halrf_powertracking_ap.c  |    49 +-
 .../hal/phydm/halrf/halrf_powertracking_ap.h  |     1 -
 .../hal/phydm/halrf/halrf_powertracking_ce.c  |    19 +-
 .../hal/phydm/halrf/halrf_powertracking_ce.h  |     1 -
 .../hal/phydm/halrf/halrf_powertracking_iot.c |     1 -
 .../hal/phydm/halrf/halrf_powertracking_iot.h |     9 +-
 .../hal/phydm/halrf/halrf_powertracking_win.c |    33 +-
 .../hal/phydm/halrf/halrf_powertracking_win.h |     1 -
 .../rtl8821cs/hal/phydm/halrf/halrf_psd.c     |   242 +-
 .../rtl8821cs/hal/phydm/halrf/halrf_psd.h     |    11 +-
 .../hal/phydm/halrf/halrf_txgapcal.c          |     1 -
 .../hal/phydm/halrf/halrf_txgapcal.h          |     1 -
 .../phydm/halrf/rtl8821c/halhwimg8821c_rf.c   |    11 +-
 .../phydm/halrf/rtl8821c/halhwimg8821c_rf.h   |     1 -
 .../hal/phydm/halrf/rtl8821c/halrf_8821c.c    |    18 +-
 .../hal/phydm/halrf/rtl8821c/halrf_8821c.h    |     1 -
 .../phydm/halrf/rtl8821c/halrf_iqk_8821c.c    |     1 -
 .../phydm/halrf/rtl8821c/halrf_iqk_8821c.h    |     1 -
 .../halrf/rtl8821c/version_rtl8821c_rf.h      |     1 -
 .../rtl8821cs/hal/phydm/mp_precomp.h          |     1 -
 .../rockchip_wlan/rtl8821cs/hal/phydm/phydm.c |    61 +-
 .../rockchip_wlan/rtl8821cs/hal/phydm/phydm.h |    35 +-
 .../rtl8821cs/hal/phydm/phydm.mk              |    11 +
 .../rtl8821cs/hal/phydm/phydm_adaptivity.c    |   361 +-
 .../rtl8821cs/hal/phydm/phydm_adaptivity.h    |    25 +-
 .../rtl8821cs/hal/phydm/phydm_adc_sampling.c  |   153 +-
 .../rtl8821cs/hal/phydm/phydm_adc_sampling.h  |     3 +-
 .../rtl8821cs/hal/phydm/phydm_antdect.c       |     1 -
 .../rtl8821cs/hal/phydm/phydm_antdect.h       |     1 -
 .../rtl8821cs/hal/phydm/phydm_antdiv.c        |   131 +-
 .../rtl8821cs/hal/phydm/phydm_antdiv.h        |     9 +-
 .../rtl8821cs/hal/phydm/phydm_api.c           |    68 +-
 .../rtl8821cs/hal/phydm/phydm_api.h           |     1 -
 .../rtl8821cs/hal/phydm/phydm_auto_dbg.c      |     1 -
 .../rtl8821cs/hal/phydm/phydm_auto_dbg.h      |     1 -
 .../rtl8821cs/hal/phydm/phydm_beamforming.c   |     1 -
 .../rtl8821cs/hal/phydm/phydm_beamforming.h   |     1 -
 .../rtl8821cs/hal/phydm/phydm_cck_pd.c        |    65 +-
 .../rtl8821cs/hal/phydm/phydm_cck_pd.h        |     2 +-
 .../hal/phydm/phydm_cck_rx_pathdiv.c          |     1 -
 .../hal/phydm/phydm_cck_rx_pathdiv.h          |     1 -
 .../rtl8821cs/hal/phydm/phydm_ccx.c           |  4216 +--
 .../rtl8821cs/hal/phydm/phydm_ccx.h           |   137 +-
 .../rtl8821cs/hal/phydm/phydm_cfotracking.c   |    19 +-
 .../rtl8821cs/hal/phydm/phydm_cfotracking.h   |     1 -
 .../rtl8821cs/hal/phydm/phydm_debug.c         |    98 +-
 .../rtl8821cs/hal/phydm/phydm_debug.h         |     1 -
 .../rtl8821cs/hal/phydm/phydm_dfs.c           |   813 +-
 .../rtl8821cs/hal/phydm/phydm_dfs.h           |    28 +-
 .../rtl8821cs/hal/phydm/phydm_dig.c           |   292 +-
 .../rtl8821cs/hal/phydm/phydm_dig.h           |    25 +-
 .../rtl8821cs/hal/phydm/phydm_direct_bf.c     |     1 -
 .../rtl8821cs/hal/phydm/phydm_direct_bf.h     |     1 -
 .../hal/phydm/phydm_dynamictxpower.c          |     5 +-
 .../hal/phydm/phydm_dynamictxpower.h          |     1 -
 .../rtl8821cs/hal/phydm/phydm_features.h      |     1 -
 .../rtl8821cs/hal/phydm/phydm_features_ap.h   |     5 +-
 .../rtl8821cs/hal/phydm/phydm_features_ce.h   |     7 +-
 .../hal/phydm/phydm_features_ce2_kernel.h     |     1 -
 .../rtl8821cs/hal/phydm/phydm_features_iot.h  |     5 +-
 .../rtl8821cs/hal/phydm/phydm_features_win.h  |     5 +-
 .../rtl8821cs/hal/phydm/phydm_hwconfig.c      |    90 +-
 .../rtl8821cs/hal/phydm/phydm_hwconfig.h      |     1 -
 .../rtl8821cs/hal/phydm/phydm_interface.c     |    39 +-
 .../rtl8821cs/hal/phydm/phydm_interface.h     |     7 +-
 .../rtl8821cs/hal/phydm/phydm_lna_sat.c       |    77 +-
 .../rtl8821cs/hal/phydm/phydm_lna_sat.h       |     1 -
 .../rtl8821cs/hal/phydm/phydm_math_lib.c      |     1 -
 .../rtl8821cs/hal/phydm/phydm_math_lib.h      |     1 -
 .../rtl8821cs/hal/phydm/phydm_mp.c            |    88 +-
 .../rtl8821cs/hal/phydm/phydm_mp.h            |     1 -
 .../rtl8821cs/hal/phydm/phydm_noisemonitor.c  |     1 -
 .../rtl8821cs/hal/phydm/phydm_noisemonitor.h  |     1 -
 .../rtl8821cs/hal/phydm/phydm_pathdiv.c       |     1 -
 .../rtl8821cs/hal/phydm/phydm_pathdiv.h       |     1 -
 .../rtl8821cs/hal/phydm/phydm_phystatus.c     |     3 +-
 .../rtl8821cs/hal/phydm/phydm_phystatus.h     |     1 -
 .../hal/phydm/phydm_pmac_tx_setting.c         |     2 +-
 .../hal/phydm/phydm_pmac_tx_setting.h         |     1 -
 .../rtl8821cs/hal/phydm/phydm_pow_train.c     |     1 -
 .../rtl8821cs/hal/phydm/phydm_pow_train.h     |     1 -
 .../rtl8821cs/hal/phydm/phydm_pre_define.h    |    37 +-
 .../rtl8821cs/hal/phydm/phydm_precomp.h       |    17 +-
 .../rtl8821cs/hal/phydm/phydm_primary_cca.c   |     1 -
 .../rtl8821cs/hal/phydm/phydm_primary_cca.h   |     1 -
 .../rtl8821cs/hal/phydm/phydm_psd.c           |     1 -
 .../rtl8821cs/hal/phydm/phydm_psd.h           |     1 -
 .../rtl8821cs/hal/phydm/phydm_rainfo.c        |     6 +-
 .../rtl8821cs/hal/phydm/phydm_rainfo.h        |     1 -
 .../rtl8821cs/hal/phydm/phydm_reg.h           |     1 -
 .../rtl8821cs/hal/phydm/phydm_regdefine11ac.h |     1 -
 .../rtl8821cs/hal/phydm/phydm_regdefine11n.h  |     1 -
 .../rtl8821cs/hal/phydm/phydm_regtable.h      |    21 +-
 .../rtl8821cs/hal/phydm/phydm_rssi_monitor.c  |     1 -
 .../rtl8821cs/hal/phydm/phydm_rssi_monitor.h  |     1 -
 .../rtl8821cs/hal/phydm/phydm_smt_ant.c       |     1 -
 .../rtl8821cs/hal/phydm/phydm_smt_ant.h       |     1 -
 .../rtl8821cs/hal/phydm/phydm_soml.c          |     1 -
 .../rtl8821cs/hal/phydm/phydm_soml.h          |     1 -
 .../rtl8821cs/hal/phydm/phydm_types.h         |    11 +-
 .../hal/phydm/rtl8821c/halhwimg8821c_bb.c     |    11 +-
 .../hal/phydm/rtl8821c/halhwimg8821c_bb.h     |     1 -
 .../hal/phydm/rtl8821c/halhwimg8821c_mac.c    |     3 +-
 .../hal/phydm/rtl8821c/halhwimg8821c_mac.h    |     1 -
 .../rtl8821cs/hal/phydm/rtl8821c/mp_precomp.h |     1 -
 .../hal/phydm/rtl8821c/phydm_hal_api8821c.c   |     1 -
 .../hal/phydm/rtl8821c/phydm_hal_api8821c.h   |     1 -
 .../hal/phydm/rtl8821c/phydm_regconfig8821c.c |     1 -
 .../hal/phydm/rtl8821c/phydm_regconfig8821c.h |     1 -
 .../hal/phydm/rtl8821c/phydm_rtl8821c.c       |     1 -
 .../hal/phydm/rtl8821c/phydm_rtl8821c.h       |     1 -
 .../hal/phydm/rtl8821c/version_rtl8821c.h     |     7 +-
 .../rtl8821cs/hal/phydm/txbf/halcomtxbf.c     |     1 -
 .../rtl8821cs/hal/phydm/txbf/halcomtxbf.h     |     1 -
 .../rtl8821cs/hal/phydm/txbf/haltxbf8192e.c   |     1 -
 .../rtl8821cs/hal/phydm/txbf/haltxbf8192e.h   |     1 -
 .../rtl8821cs/hal/phydm/txbf/haltxbf8814a.c   |     1 -
 .../rtl8821cs/hal/phydm/txbf/haltxbf8814a.h   |     1 -
 .../rtl8821cs/hal/phydm/txbf/haltxbf8822b.c   |     1 -
 .../rtl8821cs/hal/phydm/txbf/haltxbf8822b.h   |     1 -
 .../hal/phydm/txbf/haltxbfinterface.c         |     1 -
 .../hal/phydm/txbf/haltxbfinterface.h         |     1 -
 .../rtl8821cs/hal/phydm/txbf/haltxbfjaguar.c  |     1 -
 .../rtl8821cs/hal/phydm/txbf/haltxbfjaguar.h  |     1 -
 .../hal/phydm/txbf/phydm_hal_txbf_api.c       |     6 +-
 .../hal/phydm/txbf/phydm_hal_txbf_api.h       |     1 -
 .../rtl8821cs/hal/rtl8821c/hal8821c_fw.c      | 27298 ++++++++--------
 .../rtl8821cs/hal/rtl8821c/hal8821c_fw.h      |     9 +-
 .../rtl8821cs/hal/rtl8821c/rtl8821c.h         |     1 -
 .../rtl8821cs/hal/rtl8821c/rtl8821c_cmd.c     |     5 +-
 .../rtl8821cs/hal/rtl8821c/rtl8821c_dm.c      |     1 -
 .../rtl8821cs/hal/rtl8821c/rtl8821c_halinit.c |     1 -
 .../rtl8821cs/hal/rtl8821c/rtl8821c_mac.c     |     1 -
 .../rtl8821cs/hal/rtl8821c/rtl8821c_ops.c     |    20 +-
 .../rtl8821cs/hal/rtl8821c/rtl8821c_phy.c     |     4 +-
 .../rtl8821cs/hal/rtl8821c/sdio/rtl8821cs.h   |     1 -
 .../hal/rtl8821c/sdio/rtl8821cs_halinit.c     |     1 -
 .../hal/rtl8821c/sdio/rtl8821cs_halinit.h     |     1 -
 .../hal/rtl8821c/sdio/rtl8821cs_halmac.c      |     1 -
 .../hal/rtl8821c/sdio/rtl8821cs_halmac.h      |     1 -
 .../hal/rtl8821c/sdio/rtl8821cs_io.c          |     1 -
 .../hal/rtl8821c/sdio/rtl8821cs_io.h          |     1 -
 .../hal/rtl8821c/sdio/rtl8821cs_led.c         |     1 -
 .../hal/rtl8821c/sdio/rtl8821cs_led.h         |     1 -
 .../hal/rtl8821c/sdio/rtl8821cs_ops.c         |     1 -
 .../hal/rtl8821c/sdio/rtl8821cs_recv.c        |     9 +-
 .../hal/rtl8821c/sdio/rtl8821cs_recv.h        |     1 -
 .../hal/rtl8821c/sdio/rtl8821cs_xmit.c        |     1 -
 .../hal/rtl8821c/sdio/rtl8821cs_xmit.h        |     1 -
 .../rockchip_wlan/rtl8821cs/halmac.mk         |     5 -
 .../rtl8821cs/include/Hal8188EPhyCfg.h        |     1 -
 .../rtl8821cs/include/Hal8188EPhyReg.h        |     1 -
 .../rtl8821cs/include/Hal8188EPwrSeq.h        |     1 -
 .../rtl8821cs/include/Hal8188FPhyCfg.h        |     1 -
 .../rtl8821cs/include/Hal8188FPhyReg.h        |     1 -
 .../rtl8821cs/include/Hal8188FPwrSeq.h        |     1 -
 .../rtl8821cs/include/Hal8192EPhyCfg.h        |     1 -
 .../rtl8821cs/include/Hal8192EPhyReg.h        |     1 -
 .../rtl8821cs/include/Hal8192EPwrSeq.h        |     1 -
 .../rtl8821cs/include/Hal8192FPhyCfg.h        |     1 -
 .../rtl8821cs/include/Hal8192FPhyReg.h        |     1 -
 .../rtl8821cs/include/Hal8192FPwrSeq.h        |     1 -
 .../rtl8821cs/include/Hal8703BPhyCfg.h        |     1 -
 .../rtl8821cs/include/Hal8703BPhyReg.h        |     1 -
 .../rtl8821cs/include/Hal8703BPwrSeq.h        |     1 -
 .../rtl8821cs/include/Hal8710BPhyCfg.h        |     1 -
 .../rtl8821cs/include/Hal8710BPhyReg.h        |     1 -
 .../rtl8821cs/include/Hal8710BPwrSeq.h        |     1 -
 .../rtl8821cs/include/Hal8723BPhyCfg.h        |     1 -
 .../rtl8821cs/include/Hal8723BPhyReg.h        |     1 -
 .../rtl8821cs/include/Hal8723BPwrSeq.h        |     1 -
 .../rtl8821cs/include/Hal8723DPhyCfg.h        |     1 -
 .../rtl8821cs/include/Hal8723DPhyReg.h        |     1 -
 .../rtl8821cs/include/Hal8723DPwrSeq.h        |     1 -
 .../rtl8821cs/include/Hal8723PwrSeq.h         |     1 -
 .../rtl8821cs/include/Hal8812PhyCfg.h         |     1 -
 .../rtl8821cs/include/Hal8812PhyReg.h         |     1 -
 .../rtl8821cs/include/Hal8812PwrSeq.h         |     1 -
 .../rtl8821cs/include/Hal8814PhyCfg.h         |     1 -
 .../rtl8821cs/include/Hal8814PhyReg.h         |     1 -
 .../rtl8821cs/include/Hal8814PwrSeq.h         |     1 -
 .../rtl8821cs/include/Hal8821APwrSeq.h        |     1 -
 .../rtl8821cs/include/HalPwrSeqCmd.h          |     1 -
 .../rtl8821cs/include/HalVerDef.h             |     1 -
 .../rtl8821cs/include/autoconf.h              |     2 +-
 .../rtl8821cs/include/basic_types.h           |     1 -
 .../rtl8821cs/include/byteorder/big_endian.h  |     1 -
 .../rtl8821cs/include/byteorder/generic.h     |     1 -
 .../include/byteorder/little_endian.h         |     1 -
 .../rtl8821cs/include/byteorder/swab.h        |     1 -
 .../rtl8821cs/include/byteorder/swabb.h       |     1 -
 .../rtl8821cs/include/circ_buf.h              |     1 -
 .../rtl8821cs/include/cmd_osdep.h             |     1 -
 .../rtl8821cs/include/cmn_info/rtw_sta_info.h |     1 -
 .../rtl8821cs/include/custom_gpio.h           |     1 -
 .../rtl8821cs/include/drv_conf.h              |    78 +-
 .../rtl8821cs/include/drv_types.h             |   131 +-
 .../rtl8821cs/include/drv_types_ce.h          |     1 -
 .../rtl8821cs/include/drv_types_gspi.h        |     1 -
 .../rtl8821cs/include/drv_types_linux.h       |     1 -
 .../rtl8821cs/include/drv_types_pci.h         |     1 -
 .../rtl8821cs/include/drv_types_sdio.h        |     1 -
 .../rtl8821cs/include/drv_types_xp.h          |     1 -
 .../rtl8821cs/include/ethernet.h              |     1 -
 .../rtl8821cs/include/gspi_hal.h              |     1 -
 .../rtl8821cs/include/gspi_ops.h              |     1 -
 .../rtl8821cs/include/gspi_ops_linux.h        |     1 -
 .../rtl8821cs/include/gspi_osintf.h           |     1 -
 .../rockchip_wlan/rtl8821cs/include/h2clbk.h  |     1 -
 .../rtl8821cs/include/hal_btcoex.h            |     1 -
 .../rtl8821cs/include/hal_btcoex_wifionly.h   |     1 -
 .../rockchip_wlan/rtl8821cs/include/hal_com.h |    31 +-
 .../rtl8821cs/include/hal_com_h2c.h           |    14 +-
 .../rtl8821cs/include/hal_com_led.h           |     1 -
 .../rtl8821cs/include/hal_com_phycfg.h        |    13 +-
 .../rtl8821cs/include/hal_com_reg.h           |     1 -
 .../rtl8821cs/include/hal_data.h              |    10 +-
 .../rtl8821cs/include/hal_gspi.h              |     1 -
 .../rtl8821cs/include/hal_ic_cfg.h            |    22 +-
 .../rtl8821cs/include/hal_intf.h              |    12 +-
 .../rockchip_wlan/rtl8821cs/include/hal_pg.h  |     1 -
 .../rockchip_wlan/rtl8821cs/include/hal_phy.h |     1 -
 .../rtl8821cs/include/hal_phy_reg.h           |     1 -
 .../rtl8821cs/include/hal_sdio.h              |     1 -
 .../rtl8821cs/include/hal_sdio_coex.h         |     1 -
 .../rtl8821cs/include/ieee80211.h             |    64 +-
 .../rtl8821cs/include/ieee80211_ext.h         |     1 -
 .../rtl8821cs/include/if_ether.h              |     1 -
 .../rockchip_wlan/rtl8821cs/include/ip.h      |     1 -
 .../rtl8821cs/include/linux/wireless.h        |     1 -
 .../rtl8821cs/include/mlme_osdep.h            |     1 -
 .../rtl8821cs/include/nic_spec.h              |     1 -
 .../rtl8821cs/include/osdep_intf.h            |     1 -
 .../rtl8821cs/include/osdep_service.h         |    23 +-
 .../rtl8821cs/include/osdep_service_bsd.h     |     1 -
 .../rtl8821cs/include/osdep_service_ce.h      |     1 -
 .../rtl8821cs/include/osdep_service_linux.h   |    25 +-
 .../rtl8821cs/include/osdep_service_xp.h      |     1 -
 .../rockchip_wlan/rtl8821cs/include/pci_hal.h |     1 -
 .../rockchip_wlan/rtl8821cs/include/pci_ops.h |     1 -
 .../rtl8821cs/include/pci_osintf.h            |     1 -
 .../rtl8821cs/include/recv_osdep.h            |     3 +-
 .../rtl8821cs/include/rtl8188e_cmd.h          |     1 -
 .../rtl8821cs/include/rtl8188e_dm.h           |     1 -
 .../rtl8821cs/include/rtl8188e_hal.h          |     1 -
 .../rtl8821cs/include/rtl8188e_led.h          |     1 -
 .../rtl8821cs/include/rtl8188e_recv.h         |     1 -
 .../rtl8821cs/include/rtl8188e_rf.h           |     1 -
 .../rtl8821cs/include/rtl8188e_spec.h         |     1 -
 .../rtl8821cs/include/rtl8188e_sreset.h       |     1 -
 .../rtl8821cs/include/rtl8188e_xmit.h         |     5 +-
 .../rtl8821cs/include/rtl8188f_cmd.h          |     1 -
 .../rtl8821cs/include/rtl8188f_dm.h           |     1 -
 .../rtl8821cs/include/rtl8188f_hal.h          |     1 -
 .../rtl8821cs/include/rtl8188f_led.h          |     1 -
 .../rtl8821cs/include/rtl8188f_recv.h         |     1 -
 .../rtl8821cs/include/rtl8188f_rf.h           |     1 -
 .../rtl8821cs/include/rtl8188f_spec.h         |     1 -
 .../rtl8821cs/include/rtl8188f_sreset.h       |     1 -
 .../rtl8821cs/include/rtl8188f_xmit.h         |     3 +-
 .../rtl8821cs/include/rtl8192e_cmd.h          |     1 -
 .../rtl8821cs/include/rtl8192e_dm.h           |     1 -
 .../rtl8821cs/include/rtl8192e_hal.h          |     1 -
 .../rtl8821cs/include/rtl8192e_led.h          |     1 -
 .../rtl8821cs/include/rtl8192e_recv.h         |     1 -
 .../rtl8821cs/include/rtl8192e_rf.h           |     1 -
 .../rtl8821cs/include/rtl8192e_spec.h         |     1 -
 .../rtl8821cs/include/rtl8192e_sreset.h       |     1 -
 .../rtl8821cs/include/rtl8192e_xmit.h         |     5 +-
 .../rtl8821cs/include/rtl8192f_cmd.h          |     1 -
 .../rtl8821cs/include/rtl8192f_dm.h           |     5 +-
 .../rtl8821cs/include/rtl8192f_hal.h          |     7 +-
 .../rtl8821cs/include/rtl8192f_led.h          |     1 -
 .../rtl8821cs/include/rtl8192f_recv.h         |     1 -
 .../rtl8821cs/include/rtl8192f_rf.h           |    10 +-
 .../rtl8821cs/include/rtl8192f_spec.h         |     1 -
 .../rtl8821cs/include/rtl8192f_sreset.h       |     1 -
 .../rtl8821cs/include/rtl8192f_xmit.h         |     3 +-
 .../rtl8821cs/include/rtl8703b_cmd.h          |     1 -
 .../rtl8821cs/include/rtl8703b_dm.h           |     1 -
 .../rtl8821cs/include/rtl8703b_hal.h          |     1 -
 .../rtl8821cs/include/rtl8703b_led.h          |     1 -
 .../rtl8821cs/include/rtl8703b_recv.h         |     1 -
 .../rtl8821cs/include/rtl8703b_rf.h           |     1 -
 .../rtl8821cs/include/rtl8703b_spec.h         |     1 -
 .../rtl8821cs/include/rtl8703b_sreset.h       |     1 -
 .../rtl8821cs/include/rtl8703b_xmit.h         |     1 -
 .../rtl8821cs/include/rtl8710b_cmd.h          |     1 -
 .../rtl8821cs/include/rtl8710b_dm.h           |     1 -
 .../rtl8821cs/include/rtl8710b_hal.h          |     1 -
 .../rtl8821cs/include/rtl8710b_led.h          |     1 -
 .../rtl8821cs/include/rtl8710b_lps_poff.h     |     1 -
 .../rtl8821cs/include/rtl8710b_recv.h         |     1 -
 .../rtl8821cs/include/rtl8710b_rf.h           |     1 -
 .../rtl8821cs/include/rtl8710b_spec.h         |     1 -
 .../rtl8821cs/include/rtl8710b_sreset.h       |     1 -
 .../rtl8821cs/include/rtl8710b_xmit.h         |     1 -
 .../rtl8821cs/include/rtl8723b_cmd.h          |     1 -
 .../rtl8821cs/include/rtl8723b_dm.h           |     1 -
 .../rtl8821cs/include/rtl8723b_hal.h          |     1 -
 .../rtl8821cs/include/rtl8723b_led.h          |     1 -
 .../rtl8821cs/include/rtl8723b_recv.h         |     1 -
 .../rtl8821cs/include/rtl8723b_rf.h           |     1 -
 .../rtl8821cs/include/rtl8723b_spec.h         |     1 -
 .../rtl8821cs/include/rtl8723b_sreset.h       |     1 -
 .../rtl8821cs/include/rtl8723b_xmit.h         |     1 -
 .../rtl8821cs/include/rtl8723d_cmd.h          |     1 -
 .../rtl8821cs/include/rtl8723d_dm.h           |     1 -
 .../rtl8821cs/include/rtl8723d_hal.h          |     1 -
 .../rtl8821cs/include/rtl8723d_led.h          |     1 -
 .../rtl8821cs/include/rtl8723d_lps_poff.h     |     1 -
 .../rtl8821cs/include/rtl8723d_recv.h         |     1 -
 .../rtl8821cs/include/rtl8723d_rf.h           |     1 -
 .../rtl8821cs/include/rtl8723d_spec.h         |     1 -
 .../rtl8821cs/include/rtl8723d_sreset.h       |     1 -
 .../rtl8821cs/include/rtl8723d_xmit.h         |     3 +-
 .../rtl8821cs/include/rtl8723f_hal.h          |    26 +-
 .../rtl8821cs/include/rtl8723fs_hal.h         |     1 -
 .../rtl8821cs/include/rtl8723fu_hal.h         |     1 -
 .../rtl8821cs/include/rtl8812a_cmd.h          |     1 -
 .../rtl8821cs/include/rtl8812a_dm.h           |     1 -
 .../rtl8821cs/include/rtl8812a_hal.h          |     1 -
 .../rtl8821cs/include/rtl8812a_led.h          |     1 -
 .../rtl8821cs/include/rtl8812a_recv.h         |     1 -
 .../rtl8821cs/include/rtl8812a_rf.h           |     1 -
 .../rtl8821cs/include/rtl8812a_spec.h         |     1 -
 .../rtl8821cs/include/rtl8812a_sreset.h       |     1 -
 .../rtl8821cs/include/rtl8812a_xmit.h         |     3 +-
 .../rtl8821cs/include/rtl8814a_cmd.h          |     1 -
 .../rtl8821cs/include/rtl8814a_dm.h           |     1 -
 .../rtl8821cs/include/rtl8814a_hal.h          |     3 +-
 .../rtl8821cs/include/rtl8814a_led.h          |     1 -
 .../rtl8821cs/include/rtl8814a_recv.h         |     1 -
 .../rtl8821cs/include/rtl8814a_rf.h           |     1 -
 .../rtl8821cs/include/rtl8814a_spec.h         |     1 -
 .../rtl8821cs/include/rtl8814a_sreset.h       |     1 -
 .../rtl8821cs/include/rtl8814a_xmit.h         |     1 -
 .../rtl8821cs/include/rtl8814b_hal.h          |     1 -
 .../rtl8821cs/include/rtl8814be_hal.h         |     1 -
 .../rtl8821cs/include/rtl8814bu_hal.h         |     1 -
 .../rtl8821cs/include/rtl8821a_spec.h         |     1 -
 .../rtl8821cs/include/rtl8821a_xmit.h         |     1 -
 .../rtl8821cs/include/rtl8821c_dm.h           |     1 -
 .../rtl8821cs/include/rtl8821c_hal.h          |     1 -
 .../rtl8821cs/include/rtl8821c_spec.h         |     1 -
 .../rtl8821cs/include/rtl8821ce_hal.h         |     1 -
 .../rtl8821cs/include/rtl8821cs_hal.h         |     1 -
 .../rtl8821cs/include/rtl8821cu_hal.h         |     1 -
 .../rtl8821cs/include/rtl8822b_hal.h          |     1 -
 .../rtl8821cs/include/rtl8822be_hal.h         |     1 -
 .../rtl8821cs/include/rtl8822bs_hal.h         |     1 -
 .../rtl8821cs/include/rtl8822bu_hal.h         |     5 +-
 .../rtl8821cs/include/rtl8822c_hal.h          |     1 -
 .../rtl8821cs/include/rtl8822ce_hal.h         |     1 -
 .../rtl8821cs/include/rtl8822cs_hal.h         |     1 -
 .../rtl8821cs/include/rtl8822cu_hal.h         |     5 +-
 .../rtl8821cs/include/rtw_android.h           |     1 -
 .../rockchip_wlan/rtl8821cs/include/rtw_ap.h  |   294 +-
 .../rtl8821cs/include/rtw_beamforming.h       |     1 -
 .../rtl8821cs/include/rtw_br_ext.h            |     1 -
 .../rtl8821cs/include/rtw_bt_mp.h             |     1 -
 .../rtl8821cs/include/rtw_btcoex.h            |     1 -
 .../rtl8821cs/include/rtw_btcoex_wifionly.h   |     1 -
 .../rtl8821cs/include/rtw_byteorder.h         |     1 -
 .../rockchip_wlan/rtl8821cs/include/rtw_cmd.h |    53 +-
 .../rtl8821cs/include/rtw_debug.h             |     8 +-
 .../rtl8821cs/include/rtw_eeprom.h            |     1 -
 .../rtl8821cs/include/rtw_efuse.h             |     3 +-
 .../rtl8821cs/include/rtw_event.h             |     1 -
 .../rockchip_wlan/rtl8821cs/include/rtw_ft.h  |     1 -
 .../rockchip_wlan/rtl8821cs/include/rtw_ht.h  |     1 -
 .../rockchip_wlan/rtl8821cs/include/rtw_io.h  |     1 -
 .../rtl8821cs/include/rtw_ioctl.h             |     1 -
 .../rtl8821cs/include/rtw_ioctl_query.h       |     1 -
 .../rtl8821cs/include/rtw_ioctl_set.h         |     5 +-
 .../rockchip_wlan/rtl8821cs/include/rtw_iol.h |     1 -
 .../rockchip_wlan/rtl8821cs/include/rtw_mbo.h |     1 -
 .../rockchip_wlan/rtl8821cs/include/rtw_mcc.h |     1 -
 .../rockchip_wlan/rtl8821cs/include/rtw_mem.h |     1 -
 .../rockchip_wlan/rtl8821cs/include/rtw_mi.h  |     5 +-
 .../rtl8821cs/include/rtw_mlme.h              |    36 +-
 .../rtl8821cs/include/rtw_mlme_ext.h          |    59 +-
 .../rockchip_wlan/rtl8821cs/include/rtw_mp.h  |    12 +-
 .../rtl8821cs/include/rtw_mp_phy_regdef.h     |     1 -
 .../rockchip_wlan/rtl8821cs/include/rtw_odm.h |     2 +-
 .../rockchip_wlan/rtl8821cs/include/rtw_p2p.h |     1 -
 .../rtl8821cs/include/rtw_pwrctrl.h           |    11 +-
 .../rockchip_wlan/rtl8821cs/include/rtw_qos.h |     1 -
 .../rtl8821cs/include/rtw_recv.h              |    92 +-
 .../rockchip_wlan/rtl8821cs/include/rtw_rf.h  |    73 +-
 .../rockchip_wlan/rtl8821cs/include/rtw_rm.h  |     9 +-
 .../rtl8821cs/include/rtw_rm_fsm.h            |     1 -
 .../rtl8821cs/include/rtw_rm_util.h           |     1 -
 .../rtl8821cs/include/rtw_roch.h              |   123 +-
 .../rtl8821cs/include/rtw_rson.h              |     1 -
 .../rtl8821cs/include/rtw_sdio.h              |     1 -
 .../rtl8821cs/include/rtw_security.h          |     4 +-
 .../rtl8821cs/include/rtw_sreset.h            |     1 -
 .../rtl8821cs/include/rtw_swcrypto.h          |    99 +-
 .../rtl8821cs/include/rtw_tdls.h              |     1 -
 .../rtl8821cs/include/rtw_version.h           |     5 +-
 .../rockchip_wlan/rtl8821cs/include/rtw_vht.h |    71 +-
 .../rtl8821cs/include/rtw_wapi.h              |    15 +-
 .../rockchip_wlan/rtl8821cs/include/rtw_wnm.h |     1 -
 .../rtl8821cs/include/rtw_xmit.h              |    15 +-
 .../rtl8821cs/include/sdio_hal.h              |     1 -
 .../rtl8821cs/include/sdio_ops.h              |     1 -
 .../rtl8821cs/include/sdio_ops_ce.h           |     1 -
 .../rtl8821cs/include/sdio_ops_linux.h        |     1 -
 .../rtl8821cs/include/sdio_ops_xp.h           |     1 -
 .../rtl8821cs/include/sdio_osintf.h           |     1 -
 .../rtl8821cs/include/sta_info.h              |     7 +-
 .../rockchip_wlan/rtl8821cs/include/usb_hal.h |     1 -
 .../rockchip_wlan/rtl8821cs/include/usb_ops.h |     4 -
 .../rtl8821cs/include/usb_ops_linux.h         |     3 +-
 .../rtl8821cs/include/usb_osintf.h            |     1 -
 .../rtl8821cs/include/usb_vendor_req.h        |     1 -
 .../rockchip_wlan/rtl8821cs/include/wifi.h    |     6 +-
 .../rtl8821cs/include/wlan_bssdef.h           |     4 +-
 .../rtl8821cs/include/xmit_osdep.h            |     6 +-
 .../os_dep/linux/custom_gpio_linux.c          |     1 -
 .../rtl8821cs/os_dep/linux/ioctl_cfg80211.c   |   501 +-
 .../rtl8821cs/os_dep/linux/ioctl_cfg80211.h   |    15 +-
 .../rtl8821cs/os_dep/linux/ioctl_linux.c      |   117 +-
 .../rtl8821cs/os_dep/linux/ioctl_mp.c         |   244 +-
 .../rtl8821cs/os_dep/linux/mlme_linux.c       |     1 -
 .../rtl8821cs/os_dep/linux/nlrtw.c            |     1 -
 .../rtl8821cs/os_dep/linux/nlrtw.h            |     1 -
 .../rtl8821cs/os_dep/linux/os_intfs.c         |   508 +-
 .../rtl8821cs/os_dep/linux/recv_linux.c       |    12 +-
 .../rtl8821cs/os_dep/linux/rhashtable.c       |     1 -
 .../rtl8821cs/os_dep/linux/rhashtable.h       |     1 -
 .../rtl8821cs/os_dep/linux/rtw_android.c      |     8 +-
 .../rtl8821cs/os_dep/linux/rtw_cfgvendor.c    |    24 +-
 .../rtl8821cs/os_dep/linux/rtw_cfgvendor.h    |    17 +-
 .../rtl8821cs/os_dep/linux/rtw_proc.c         |   245 +-
 .../rtl8821cs/os_dep/linux/rtw_proc.h         |     1 -
 .../rtl8821cs/os_dep/linux/rtw_rhashtable.c   |     1 -
 .../rtl8821cs/os_dep/linux/rtw_rhashtable.h   |     1 -
 .../rtl8821cs/os_dep/linux/sdio_intf.c        |    39 +-
 .../rtl8821cs/os_dep/linux/sdio_ops_linux.c   |     1 -
 .../rtl8821cs/os_dep/linux/wifi_regd.c        |   462 +-
 .../rtl8821cs/os_dep/linux/wifi_regd.h        |     6 +-
 .../rtl8821cs/os_dep/linux/xmit_linux.c       |    21 +-
 .../rtl8821cs/os_dep/osdep_service.c          |   367 +-
 .../platform/custom_country_chplan.h          |     3 +-
 .../platform/platform_ARM_SUN50IW1P1_sdio.c   |     1 -
 .../platform/platform_ARM_SUNnI_sdio.c        |     1 -
 .../platform/platform_ARM_SUNxI_sdio.c        |     1 -
 .../platform/platform_ARM_SUNxI_usb.c         |     1 -
 .../platform/platform_ARM_WMT_sdio.c          |     1 -
 .../rtl8821cs/platform/platform_RTK_DMP_usb.c |     1 -
 .../platform/platform_aml_s905_sdio.c         |     1 -
 .../platform/platform_aml_s905_sdio.h         |     1 -
 .../platform/platform_arm_act_sdio.c          |     1 -
 .../platform/platform_hisilicon_hi3798_sdio.c |     1 -
 .../platform/platform_hisilicon_hi3798_sdio.h |     1 -
 .../rtl8821cs/platform/platform_ops.c         |     4 -
 .../rtl8821cs/platform/platform_ops.h         |     1 -
 .../rtl8821cs/platform/platform_sprd_sdio.c   |     1 -
 .../platform/platform_zte_zx296716_sdio.c     |     1 -
 .../platform/platform_zte_zx296716_sdio.h     |     1 -
 .../rockchip_wlan/rtl8821cs/rtl8821c.mk       |     1 -
 687 files changed, 34031 insertions(+), 24011 deletions(-)

diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/Kconfig b/drivers/net/wireless/rockchip_wlan/rtl8821cs/Kconfig
index 4b4fd2e70f4e..68da3417e2f5 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/Kconfig
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/Kconfig
@@ -1,4 +1,3 @@
-# SPDX-License-Identifier: GPL-2.0
 config RTL8821CS
 	tristate "Realtek 8821C SDIO WiFi"
 	help
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/Makefile b/drivers/net/wireless/rockchip_wlan/rtl8821cs/Makefile
index 797d011e6756..a3313c7fe0fb 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/Makefile
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/Makefile
@@ -1,4 +1,3 @@
-# SPDX-License-Identifier: GPL-2.0
 EXTRA_CFLAGS += $(USER_EXTRA_CFLAGS)
 EXTRA_CFLAGS += -O1
 #EXTRA_CFLAGS += -O3
@@ -45,6 +44,7 @@ CONFIG_RTL8710B = n
 CONFIG_RTL8192F = n
 CONFIG_RTL8822C = n
 CONFIG_RTL8814B = n
+CONFIG_RTL8814C = n
 CONFIG_RTL8723F = n
 ######################### Interface ###########################
 CONFIG_USB_HCI = n
@@ -70,9 +70,10 @@ CONFIG_TXPWR_BY_RATE = y
 CONFIG_TXPWR_BY_RATE_EN = y
 CONFIG_TXPWR_LIMIT = y
 CONFIG_TXPWR_LIMIT_EN = n
-CONFIG_RTW_CHPLAN = 0xFF
+CONFIG_RTW_CHPLAN = 0xFFFF
 CONFIG_RTW_ADAPTIVITY_EN = disable
 CONFIG_RTW_ADAPTIVITY_MODE = normal
+CONFIG_80211D = n
 CONFIG_SIGNAL_SCALE_MAPPING = n
 CONFIG_80211W = y
 CONFIG_REDUCE_TX_CPU_LOADING = n
@@ -91,10 +92,10 @@ CONFIG_IP_R_MONITOR = n #arp VOQ and high rate
 # user priority mapping rule : tos, dscp
 CONFIG_RTW_UP_MAPPING_RULE = tos
 CONFIG_RTW_MBO = n
-
+CONFIG_WAKE_ON_BT = n
 ########################## Android ###########################
 # CONFIG_RTW_ANDROID - 0: no Android, 4/5/6/7/8/9/10/11 : Android version
-CONFIG_RTW_ANDROID = 11
+CONFIG_RTW_ANDROID = 12
 
 ifeq ($(shell test $(CONFIG_RTW_ANDROID) -gt 0; echo $$?), 0)
 EXTRA_CFLAGS += -DCONFIG_RTW_ANDROID=$(CONFIG_RTW_ANDROID)
@@ -110,14 +111,14 @@ CONFIG_RTW_LOG_LEVEL = 2
 CONFIG_PROC_DEBUG = y
 
 ######################## Wake On Lan ##########################
-CONFIG_WOWLAN = y
-#bit3: ARP enable, bit2: deauth, bit1: unicast, bit0: magic pkt.
-CONFIG_WAKEUP_TYPE = 0xf
+CONFIG_WOWLAN = n
+#bit2: deauth, bit1: unicast, bit0: magic pkt.
+CONFIG_WAKEUP_TYPE = 0x7
 CONFIG_WOW_LPS_MODE = default
 #bit0: disBBRF off, #bit1: Wireless remote controller (WRC)
 CONFIG_SUSPEND_TYPE = 0
 CONFIG_WOW_STA_MIX = n
-CONFIG_GPIO_WAKEUP = y
+CONFIG_GPIO_WAKEUP = n
 # Please contact with RTK support team first. After getting the agreement from RTK support team, 
 # you are just able to modify the CONFIG_WAKEUP_GPIO_IDX with customized requirement.
 CONFIG_WAKEUP_GPIO_IDX = default
@@ -1004,12 +1005,16 @@ endif
 ########### HAL_RTL8814B #################################
 ifeq ($(CONFIG_RTL8814B), y)
 RTL871X := rtl8814b
+ifeq ($(CONFIG_RTL8814C), y)
+MODULE_NAME = 8814ce
+else
 ifeq ($(CONFIG_USB_HCI), y)
 MODULE_NAME = 8814bu
 endif
 ifeq ($(CONFIG_PCI_HCI), y)
 MODULE_NAME = 8814be
 endif
+endif
 
 endif
 
@@ -1148,7 +1153,7 @@ else ifeq ($(CONFIG_TXPWR_LIMIT_EN), auto)
 EXTRA_CFLAGS += -DCONFIG_TXPWR_LIMIT_EN=2
 endif
 
-ifneq ($(CONFIG_RTW_CHPLAN), 0xFF)
+ifneq ($(CONFIG_RTW_CHPLAN), 0xFFFF)
 EXTRA_CFLAGS += -DCONFIG_RTW_CHPLAN=$(CONFIG_RTW_CHPLAN)
 endif
 
@@ -1164,6 +1169,8 @@ ifeq ($(CONFIG_RTW_ADAPTIVITY_EN), disable)
 EXTRA_CFLAGS += -DCONFIG_RTW_ADAPTIVITY_EN=0
 else ifeq ($(CONFIG_RTW_ADAPTIVITY_EN), enable)
 EXTRA_CFLAGS += -DCONFIG_RTW_ADAPTIVITY_EN=1
+else ifeq ($(CONFIG_RTW_ADAPTIVITY_EN), auto)
+EXTRA_CFLAGS += -DCONFIG_RTW_ADAPTIVITY_EN=2
 endif
 
 ifeq ($(CONFIG_RTW_ADAPTIVITY_MODE), normal)
@@ -1172,6 +1179,10 @@ else ifeq ($(CONFIG_RTW_ADAPTIVITY_MODE), carrier_sense)
 EXTRA_CFLAGS += -DCONFIG_RTW_ADAPTIVITY_MODE=1
 endif
 
+ifeq ($(CONFIG_80211D), y)
+EXTRA_CFLAGS += -DCONFIG_80211D
+endif
+
 ifeq ($(CONFIG_SIGNAL_SCALE_MAPPING), y)
 EXTRA_CFLAGS += -DCONFIG_SIGNAL_SCALE_MAPPING
 endif
@@ -1331,6 +1342,10 @@ EXTRA_CFLAGS += -DCONFIG_RTW_MBO -DCONFIG_RTW_80211K -DCONFIG_RTW_WNM -DCONFIG_R
 EXTRA_CFLAGS += -DCONFIG_RTW_80211R
 endif
 
+ifeq ($(CONFIG_WAKE_ON_BT), y)
+EXTRA_CFLAGS += -DCONFIG_WAKE_ON_BT
+endif
+
 ifeq ($(CONFIG_PLATFORM_I386_PC), y)
 EXTRA_CFLAGS += -DCONFIG_LITTLE_ENDIAN
 EXTRA_CFLAGS += -DCONFIG_IOCTL_CFG80211 -DRTW_USE_CFG80211_STA_EVENT
@@ -1702,7 +1717,6 @@ EXTRA_CFLAGS += -DCONFIG_LITTLE_ENDIAN -DCONFIG_PLATFORM_ANDROID -DCONFIG_PLATFO
 # default setting for Android 4.1, 4.2, 4.3, 4.4
 EXTRA_CFLAGS += -DCONFIG_IOCTL_CFG80211 -DRTW_USE_CFG80211_STA_EVENT
 EXTRA_CFLAGS += -DCONFIG_CONCURRENT_MODE
-EXTRA_CFLAGS += -DCONFIG_RESUME_IN_WORKQUEUE
 # default setting for Power control
 #EXTRA_CFLAGS += -DRTW_ENABLE_WIFI_CONTROL_FUNC
 ifeq ($(CONFIG_SDIO_HCI), y)
@@ -1917,6 +1931,7 @@ KSRC:= $(CFGDIR)/../../kernel/linux-$(KERNEL_VER)
 endif
 
 ifeq ($(CONFIG_PLATFORM_ARM_RTD299X), y)
+EXTRA_CFLAGS += -DCONFIG_PLATFORM_ARM_RTD299X
 EXTRA_CFLAGS += -DCONFIG_LITTLE_ENDIAN
 EXTRA_CFLAGS += -DCONFIG_CONCURRENT_MODE
 EXTRA_CFLAGS += -DCONFIG_IOCTL_CFG80211 -DRTW_USE_CFG80211_STA_EVENT
@@ -2354,6 +2369,9 @@ ifeq ($(CONFIG_RTL8814B), y)
 include $(src)/rtl8814b.mk
 endif
 
+ifeq ($(CONFIG_RTL8814C), y)
+EXTRA_CFLAGS += -DCONFIG_RTL8814C
+endif
 ########### HAL_RTL8723F #################################
 ifeq ($(CONFIG_RTL8723F), y)
 include $(src)/rtl8723f.mk
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/core/crypto/aes-ccm.c b/drivers/net/wireless/rockchip_wlan/rtl8821cs/core/crypto/aes-ccm.c
index b6c40d944db7..dceec778a6d7 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/core/crypto/aes-ccm.c
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/core/crypto/aes-ccm.c
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /*
  * Counter with CBC-MAC (CCM) with AES
  *
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/core/crypto/aes-ctr.c b/drivers/net/wireless/rockchip_wlan/rtl8821cs/core/crypto/aes-ctr.c
index 01d99c62e09f..6c06851ddc68 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/core/crypto/aes-ctr.c
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/core/crypto/aes-ctr.c
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /*
  * AES-128/192/256 CTR
  *
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/core/crypto/aes-gcm.c b/drivers/net/wireless/rockchip_wlan/rtl8821cs/core/crypto/aes-gcm.c
index e5fe797c92ac..47088102b9cc 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/core/crypto/aes-gcm.c
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/core/crypto/aes-gcm.c
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /*
  * Galois/Counter Mode (GCM) and GMAC with AES
  *
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/core/crypto/aes-internal-enc.c b/drivers/net/wireless/rockchip_wlan/rtl8821cs/core/crypto/aes-internal-enc.c
index 67e3a7f3571e..17c8ed5f527d 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/core/crypto/aes-internal-enc.c
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/core/crypto/aes-internal-enc.c
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /*
  * AES (Rijndael) cipher - encrypt
  *
@@ -114,14 +113,14 @@ void * aes_encrypt_init(const u8 *key, size_t len)
 	return rk;
 }
 
-
+/*
 int aes_encrypt(void *ctx, const u8 *plain, u8 *crypt)
 {
 	u32 *rk = ctx;
 	rijndaelEncrypt(ctx, rk[AES_PRIV_NR_POS], plain, crypt);
 	return 0;
 }
-
+*/
 
 void aes_encrypt_deinit(void *ctx)
 {
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/core/crypto/aes-internal.c b/drivers/net/wireless/rockchip_wlan/rtl8821cs/core/crypto/aes-internal.c
index c980909a794d..57d653949991 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/core/crypto/aes-internal.c
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/core/crypto/aes-internal.c
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /*
  * AES (Rijndael) cipher
  *
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/core/crypto/aes-omac1.c b/drivers/net/wireless/rockchip_wlan/rtl8821cs/core/crypto/aes-omac1.c
index 0e5277468f61..30b52629f4be 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/core/crypto/aes-omac1.c
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/core/crypto/aes-omac1.c
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /*
  * One-key CBC MAC (OMAC1) hash with AES
  *
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/core/crypto/aes-siv.c b/drivers/net/wireless/rockchip_wlan/rtl8821cs/core/crypto/aes-siv.c
index 4997140e3a2c..58656f2b5de4 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/core/crypto/aes-siv.c
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/core/crypto/aes-siv.c
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /*
  * AES SIV (RFC 5297)
  * Copyright (c) 2013 Cozybit, Inc.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/core/crypto/aes.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/core/crypto/aes.h
index a391aa850873..8ab3de2ee83f 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/core/crypto/aes.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/core/crypto/aes.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /*
  * AES functions
  * Copyright (c) 2003-2006, Jouni Malinen <j@w1.fi>
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/core/crypto/aes_i.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/core/crypto/aes_i.h
index bfb74235f0e5..54375cf35583 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/core/crypto/aes_i.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/core/crypto/aes_i.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /*
  * AES (Rijndael) cipher
  * Copyright (c) 2003-2012, Jouni Malinen <j@w1.fi>
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/core/crypto/aes_siv.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/core/crypto/aes_siv.h
index 6ee69f2615e3..fb05d80c1f12 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/core/crypto/aes_siv.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/core/crypto/aes_siv.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /*
  * AES SIV (RFC 5297)
  * Copyright (c) 2013 Cozybit, Inc.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/core/crypto/aes_wrap.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/core/crypto/aes_wrap.h
index 47b6bf18e36f..b70b1d26e550 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/core/crypto/aes_wrap.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/core/crypto/aes_wrap.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /*
  * AES-based functions
  *
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/core/crypto/ccmp.c b/drivers/net/wireless/rockchip_wlan/rtl8821cs/core/crypto/ccmp.c
index b1a648dae4b3..3ebd487a97a4 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/core/crypto/ccmp.c
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/core/crypto/ccmp.c
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /*
  * CTR with CBC-MAC Protocol (CCMP)
  * Copyright (c) 2010-2012, Jouni Malinen <j@w1.fi>
@@ -15,7 +14,7 @@
 
 
 
-static void ccmp_aad_nonce(const struct ieee80211_hdr *hdr, const u8 *data,
+static void ccmp_aad_nonce(_adapter *padapter, const struct ieee80211_hdr *hdr, const u8 *data,
 			   u8 *aad, size_t *aad_len, u8 *nonce)
 {
 	u16 fc, stype, seq;
@@ -59,7 +58,8 @@ static void ccmp_aad_nonce(const struct ieee80211_hdr *hdr, const u8 *data,
 	pos += addr4 * ETH_ALEN;
 	if (qos) {
 		pos[0] &= ~0x70;
-		if (1 /* FIX: either device has SPP A-MSDU Capab = 0 */)
+		/* only spp mode need to refer QoS bit7 */
+		if (padapter->registrypriv.amsdu_mode != RTW_AMSDU_MODE_SPP)
 			pos[0] &= ~0x80;
 		pos++;
 		*pos++ = 0x00;
@@ -135,7 +135,7 @@ static void ccmp_aad_nonce_pv1(const u8 *hdr, const u8 *a1, const u8 *a2,
 }
 
 
-u8 * ccmp_decrypt(const u8 *tk, const struct ieee80211_hdr *hdr,
+u8 * ccmp_decrypt(_adapter *padapter, const u8 *tk, const struct ieee80211_hdr *hdr,
 		  const u8 *data, size_t data_len, size_t *decrypted_len)
 {
 	u8 aad[30], nonce[13];
@@ -153,7 +153,7 @@ u8 * ccmp_decrypt(const u8 *tk, const struct ieee80211_hdr *hdr,
 	mlen = data_len - 8 - 8;
 
 	os_memset(aad, 0, sizeof(aad));
-	ccmp_aad_nonce(hdr, data, aad, &aad_len, nonce);
+	ccmp_aad_nonce(padapter, hdr, data, aad, &aad_len, nonce);
 	wpa_hexdump(_MSG_EXCESSIVE_, "CCMP AAD", aad, aad_len);
 	wpa_hexdump(_MSG_EXCESSIVE_, "CCMP nonce", nonce, 13);
 
@@ -187,7 +187,7 @@ void ccmp_get_pn(u8 *pn, const u8 *data)
 }
 
 
-u8 * ccmp_encrypt(const u8 *tk, u8 *frame, size_t len, size_t hdrlen, u8 *qos,
+u8 * ccmp_encrypt(_adapter *padapter, const u8 *tk, u8 *frame, size_t len, size_t hdrlen, u8 *qos,
 		  u8 *pn, int keyid, size_t *encrypted_len)
 {
 	u8 aad[30], nonce[13];
@@ -226,7 +226,7 @@ u8 * ccmp_encrypt(const u8 *tk, u8 *frame, size_t len, size_t hdrlen, u8 *qos,
 	}
 
 	os_memset(aad, 0, sizeof(aad));
-	ccmp_aad_nonce(hdr, crypt + hdrlen, aad, &aad_len, nonce);
+	ccmp_aad_nonce(padapter, hdr, crypt + hdrlen, aad, &aad_len, nonce);
 	wpa_hexdump(_MSG_EXCESSIVE_, "CCMP AAD", aad, aad_len);
 	wpa_hexdump(_MSG_EXCESSIVE_, "CCMP nonce", nonce, 13);
 
@@ -286,7 +286,7 @@ u8 * ccmp_encrypt_pv1(const u8 *tk, const u8 *a1, const u8 *a2, const u8 *a3,
 }
 
 
-u8 * ccmp_256_decrypt(const u8 *tk, const struct ieee80211_hdr *hdr,
+u8 * ccmp_256_decrypt(_adapter *padapter, const u8 *tk, const struct ieee80211_hdr *hdr,
 		      const u8 *data, size_t data_len, size_t *decrypted_len)
 {
 	u8 aad[30], nonce[13];
@@ -304,7 +304,7 @@ u8 * ccmp_256_decrypt(const u8 *tk, const struct ieee80211_hdr *hdr,
 	mlen = data_len - 8 - 16;
 
 	os_memset(aad, 0, sizeof(aad));
-	ccmp_aad_nonce(hdr, data, aad, &aad_len, nonce);
+	ccmp_aad_nonce(padapter, hdr, data, aad, &aad_len, nonce);
 	wpa_hexdump(_MSG_EXCESSIVE_, "CCMP-256 AAD", aad, aad_len);
 	wpa_hexdump(_MSG_EXCESSIVE_, "CCMP-256 nonce", nonce, 13);
 
@@ -327,7 +327,7 @@ u8 * ccmp_256_decrypt(const u8 *tk, const struct ieee80211_hdr *hdr,
 }
 
 
-u8 * ccmp_256_encrypt(const u8 *tk, u8 *frame, size_t len, size_t hdrlen,
+u8 * ccmp_256_encrypt(_adapter *padapter, const u8 *tk, u8 *frame, size_t len, size_t hdrlen,
 		      u8 *qos, u8 *pn, int keyid, size_t *encrypted_len)
 {
 	u8 aad[30], nonce[13];
@@ -366,7 +366,7 @@ u8 * ccmp_256_encrypt(const u8 *tk, u8 *frame, size_t len, size_t hdrlen,
 	}
 
 	os_memset(aad, 0, sizeof(aad));
-	ccmp_aad_nonce(hdr, crypt + hdrlen, aad, &aad_len, nonce);
+	ccmp_aad_nonce(padapter, hdr, crypt + hdrlen, aad, &aad_len, nonce);
 	wpa_hexdump(_MSG_EXCESSIVE_, "CCMP-256 AAD", aad, aad_len);
 	wpa_hexdump(_MSG_EXCESSIVE_, "CCMP-256 nonce", nonce, 13);
 
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/core/crypto/gcmp.c b/drivers/net/wireless/rockchip_wlan/rtl8821cs/core/crypto/gcmp.c
index db9a8c31fea5..9141d55202b0 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/core/crypto/gcmp.c
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/core/crypto/gcmp.c
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /*
  * GCM with GMAC Protocol (GCMP)
  * Copyright (c) 2012, Jouni Malinen <j@w1.fi>
@@ -14,7 +13,7 @@
 #include "wlancrypto_wrap.h"
 
 
-static void gcmp_aad_nonce(const struct ieee80211_hdr *hdr, const u8 *data,
+static void gcmp_aad_nonce(_adapter * padapter, const struct ieee80211_hdr *hdr, const u8 *data,
 			   u8 *aad, size_t *aad_len, u8 *nonce)
 {
 	u16 fc, stype, seq;
@@ -55,7 +54,8 @@ static void gcmp_aad_nonce(const struct ieee80211_hdr *hdr, const u8 *data,
 	pos += addr4 * ETH_ALEN;
 	if (qos) {
 		pos[0] &= ~0x70;
-		if (1 /* FIX: either device has SPP A-MSDU Capab = 0 */)
+		/* only spp mode need to refer QoS bit7 */
+		if (padapter->registrypriv.amsdu_mode != RTW_AMSDU_MODE_SPP)
 			pos[0] &= ~0x80;
 		pos++;
 		*pos++ = 0x00;
@@ -82,7 +82,7 @@ static void gcmp_aad_nonce(const struct ieee80211_hdr *hdr, const u8 *data,
  * @data_len: length of @data (PN + enc_data + MIC)
  * @decrypted_len: length of the data decrypted
  */
-u8 * gcmp_decrypt(const u8 *tk, size_t tk_len, const struct ieee80211_hdr *hdr,
+u8 * gcmp_decrypt(_adapter *padapter, const u8 *tk, size_t tk_len, const struct ieee80211_hdr *hdr,
 		  const u8 *data, size_t data_len, size_t *decrypted_len)
 {
 	u8 aad[30], nonce[12], *plain;
@@ -100,7 +100,7 @@ u8 * gcmp_decrypt(const u8 *tk, size_t tk_len, const struct ieee80211_hdr *hdr,
 	mlen = data_len - 8 - 16;
 
 	os_memset(aad, 0, sizeof(aad));
-	gcmp_aad_nonce(hdr, data, aad, &aad_len, nonce);
+	gcmp_aad_nonce(padapter, hdr, data, aad, &aad_len, nonce);
 	wpa_hexdump(_MSG_EXCESSIVE_, "GCMP AAD", aad, aad_len);
 	wpa_hexdump(_MSG_EXCESSIVE_, "GCMP nonce", nonce, sizeof(nonce));
 
@@ -136,7 +136,7 @@ u8 * gcmp_decrypt(const u8 *tk, size_t tk_len, const struct ieee80211_hdr *hdr,
  * @encrypted_len: length of the encrypted frame 
  *                 including mac header, pn, payload and MIC
  */
-u8 * gcmp_encrypt(const u8 *tk, size_t tk_len, const u8 *frame, size_t len,
+u8 * gcmp_encrypt(_adapter *padapter, const u8 *tk, size_t tk_len, const u8 *frame, size_t len,
 		  size_t hdrlen, const u8 *qos,
 		  const u8 *pn, int keyid, size_t *encrypted_len)
 {
@@ -175,7 +175,7 @@ u8 * gcmp_encrypt(const u8 *tk, size_t tk_len, const u8 *frame, size_t len,
 	}
 
 	os_memset(aad, 0, sizeof(aad));
-	gcmp_aad_nonce(hdr, crypt + hdrlen, aad, &aad_len, nonce);
+	gcmp_aad_nonce(padapter, hdr, crypt + hdrlen, aad, &aad_len, nonce);
 	wpa_hexdump(_MSG_EXCESSIVE_, "GCMP AAD", aad, aad_len);
 	wpa_hexdump(_MSG_EXCESSIVE_, "GCMP nonce", nonce, sizeof(nonce));
 
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/core/crypto/rtw_crypto_wrap.c b/drivers/net/wireless/rockchip_wlan/rtl8821cs/core/crypto/rtw_crypto_wrap.c
index 19e1754754dd..8fdb3c903bb7 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/core/crypto/rtw_crypto_wrap.c
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/core/crypto/rtw_crypto_wrap.c
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 #include "rtw_crypto_wrap.h"
 
 #ifndef DEBUG_CRYPTO
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/core/crypto/rtw_crypto_wrap.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/core/crypto/rtw_crypto_wrap.h
index 32384923732d..9b64a14194ef 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/core/crypto/rtw_crypto_wrap.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/core/crypto/rtw_crypto_wrap.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 #ifndef RTW_CRYTO_WRAP_H
 #define RTW_CRYTO_WRAP_H
 
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/core/crypto/sha256-internal.c b/drivers/net/wireless/rockchip_wlan/rtl8821cs/core/crypto/sha256-internal.c
index 3a269aa8c4fa..98228ea3378c 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/core/crypto/sha256-internal.c
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/core/crypto/sha256-internal.c
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /*
  * SHA-256 hash implementation and interface functions
  * Copyright (c) 2003-2011, Jouni Malinen <j@w1.fi>
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/core/crypto/sha256-prf.c b/drivers/net/wireless/rockchip_wlan/rtl8821cs/core/crypto/sha256-prf.c
index df0cd7b89b99..642b38ff618c 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/core/crypto/sha256-prf.c
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/core/crypto/sha256-prf.c
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /*
  * SHA256-based PRF (IEEE 802.11r)
  * Copyright (c) 2003-2016, Jouni Malinen <j@w1.fi>
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/core/crypto/sha256.c b/drivers/net/wireless/rockchip_wlan/rtl8821cs/core/crypto/sha256.c
index d881814a86a2..ea5d9e3f2dd6 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/core/crypto/sha256.c
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/core/crypto/sha256.c
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /*
  * SHA-256 hash implementation and interface functions
  * Copyright (c) 2003-2012, Jouni Malinen <j@w1.fi>
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/core/crypto/sha256.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/core/crypto/sha256.h
index 2d4726dae8f4..5219022edd7d 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/core/crypto/sha256.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/core/crypto/sha256.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /*
  * SHA256 hash implementation and interface functions
  * Copyright (c) 2003-2016, Jouni Malinen <j@w1.fi>
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/core/crypto/sha256_i.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/core/crypto/sha256_i.h
index 4d6f3108eff3..11ddd6b14716 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/core/crypto/sha256_i.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/core/crypto/sha256_i.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /*
  * SHA-256 internal definitions
  * Copyright (c) 2003-2011, Jouni Malinen <j@w1.fi>
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/core/crypto/wlancrypto_wrap.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/core/crypto/wlancrypto_wrap.h
index 919931db3127..b909a43932aa 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/core/crypto/wlancrypto_wrap.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/core/crypto/wlancrypto_wrap.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /*
  * wlantest - IEEE 802.11 protocol monitoring and testing tool
  * Copyright (c) 2010-2013, Jouni Malinen <j@w1.fi>
@@ -13,22 +12,22 @@
 int sha256_vector(size_t num_elem, const u8 *addr[], const size_t *len,
 	u8 *mac);
 
-u8* ccmp_decrypt(const u8 *tk, const struct ieee80211_hdr *hdr,
+u8* ccmp_decrypt(_adapter *padapter, const u8 *tk, const struct ieee80211_hdr *hdr,
 	const u8 *data, size_t data_len, size_t *decrypted_len);
-u8* ccmp_encrypt(const u8 *tk, u8 *frame, size_t len, size_t hdrlen, u8 *qos,
+u8* ccmp_encrypt(_adapter *padapter, const u8 *tk, u8 *frame, size_t len, size_t hdrlen, u8 *qos,
 	u8 *pn, int keyid, size_t *encrypted_len);
 u8* ccmp_encrypt_pv1(const u8 *tk, const u8 *a1, const u8 *a2, const u8 *a3,
 	const u8 *frame, size_t len,
 	size_t hdrlen, const u8 *pn, int keyid,
 	size_t *encrypted_len);
-u8* ccmp_256_decrypt(const u8 *tk, const struct ieee80211_hdr *hdr,
+u8* ccmp_256_decrypt(_adapter *padapter, const u8 *tk, const struct ieee80211_hdr *hdr,
 	const u8 *data, size_t data_len, size_t *decrypted_len);
-u8* ccmp_256_encrypt(const u8 *tk, u8 *frame, size_t len, size_t hdrlen,
+u8* ccmp_256_encrypt(_adapter *padapter, const u8 *tk, u8 *frame, size_t len, size_t hdrlen,
 	u8 *qos, u8 *pn, int keyid, size_t *encrypted_len);
 
-u8* gcmp_decrypt(const u8 *tk, size_t tk_len, const struct ieee80211_hdr *hdr,
+u8* gcmp_decrypt(_adapter *padapter, const u8 *tk, size_t tk_len, const struct ieee80211_hdr *hdr,
 	const u8 *data, size_t data_len, size_t *decrypted_len);
-u8* gcmp_encrypt(const u8 *tk, size_t tk_len, const u8 *frame, size_t len,
+u8* gcmp_encrypt(_adapter *padapter, const u8 *tk, size_t tk_len, const u8 *frame, size_t len,
 	size_t hdrlen, const u8 *qos,
 	const u8 *pn, int keyid, size_t *encrypted_len);
 
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/core/efuse/rtw_efuse.c b/drivers/net/wireless/rockchip_wlan/rtl8821cs/core/efuse/rtw_efuse.c
index 1f301e651517..fbd8cdadd04c 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/core/efuse/rtw_efuse.c
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/core/efuse/rtw_efuse.c
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017 Realtek Corporation.
@@ -80,6 +79,16 @@ BOOLEAN efuse_IsBT_Masked(PADAPTER pAdapter, u16 Offset)
 		return (IS_BT_MASKED(8822C, _MSDIO, Offset)) ? TRUE : FALSE;
 #endif
 #endif /*#ifdef CONFIG_RTL8822C*/
+#ifdef CONFIG_RTL8723F
+#ifdef CONFIG_USB_HCI
+		if (IS_HARDWARE_TYPE_8723F(pAdapter))
+			return (IS_BT_MASKED(8723F, _MUSB, Offset)) ? TRUE : FALSE;
+#endif
+#ifdef CONFIG_SDIO_HCI
+		if (IS_HARDWARE_TYPE_8723F(pAdapter))
+			return (IS_BT_MASKED(8723F, _MSDIO, Offset)) ? TRUE : FALSE;
+#endif
+#endif /*#ifdef CONFIG_RTL8723F*/
 #endif /* CONFIG_BT_EFUSE_MASK */
 	return FALSE;
 }
@@ -103,6 +112,16 @@ if (IS_HARDWARE_TYPE_8822CU(pAdapter))
 		GET_BT_MASK_ARRAY(8822C, _MSDIO, pArray);
 #endif
 #endif /*#ifdef CONFIG_RTL8822C*/
+#ifdef CONFIG_RTL8723F
+#ifdef CONFIG_USB_HCI
+	if (IS_HARDWARE_TYPE_8723FU(pAdapter))
+			GET_BT_MASK_ARRAY(8723F, _MUSB, pArray);
+#endif
+#ifdef CONFIG_SDIO_HCI
+		if (IS_HARDWARE_TYPE_8723FS(pAdapter))
+			GET_BT_MASK_ARRAY(8723F, _MSDIO, pArray);
+#endif
+#endif /*#ifdef CONFIG_RTL8723F*/
 #endif /* CONFIG_BT_EFUSE_MASK */
 
 }
@@ -126,6 +145,16 @@ u16 rtw_get_bt_efuse_mask_arraylen(PADAPTER pAdapter)
 		return GET_BT_MASK_ARRAY_LEN(8822C, _MSDIO);
 #endif
 #endif /*#ifdef CONFIG_RTL8822C*/
+#ifdef CONFIG_RTL8723F
+#ifdef CONFIG_USB_HCI
+		if (IS_HARDWARE_TYPE_8723FU(pAdapter))
+			return GET_BT_MASK_ARRAY_LEN(8723F, _MUSB);
+#endif
+#ifdef CONFIG_SDIO_HCI
+		if (IS_HARDWARE_TYPE_8723FS(pAdapter))
+			return GET_BT_MASK_ARRAY_LEN(8723F, _MSDIO);
+#endif
+#endif /*CONFIG_RTL8723F*/
 #endif /* CONFIG_BT_EFUSE_MASK */
 
 	return 0;
@@ -939,13 +968,14 @@ void rtw_efuse_analyze(PADAPTER	padapter, u8 Type, u8 Fake)
 	j = 0;
 
 	for (i = 0; i < mapLen; i++) {
-		if (i % 16 == 0)
+		if (i % 16 == 0) {
 			RTW_PRINT_SEL(RTW_DBGDUMP, "0x%03x: ", i);
 			_RTW_PRINT_SEL(RTW_DBGDUMP, "%02X%s"
 				, pEfuseHal->fakeEfuseInitMap[i]
 				, ((i + 1) % 16 == 0) ? "\n" : (((i + 1) % 8 == 0) ? "	  " : " ")
 			);
 		}
+	}
 	_RTW_PRINT_SEL(RTW_DBGDUMP, "\n");
 
 out_free_buffer:
@@ -3237,7 +3267,14 @@ void EFUSE_ShadowMapUpdate(
 	/* PlatformMoveMemory((void *)&pHalData->EfuseMap[EFUSE_MODIFY_MAP][0], */
 	/* (void *)&pHalData->EfuseMap[EFUSE_INIT_MAP][0], mapLen); */
 #endif /* !RTW_HALMAC */
+#ifdef CONFIG_MP_INCLUDED
+	if (rtw_mp_mode_check(pAdapter)) {
+		PEFUSE_HAL pEfuseHal = &pHalData->EfuseHal;
 
+		if (GET_EFUSE_UPDATE_ON(pAdapter))
+			_rtw_memcpy(pHalData->efuse_eeprom_data, pEfuseHal->fakeEfuseModifiedMap, mapLen);
+	}
+#endif
 	rtw_mask_map_read(pAdapter, 0x00, mapLen, pHalData->efuse_eeprom_data);
 
 	rtw_dump_cur_efuse(pAdapter);
@@ -3384,7 +3421,7 @@ u8 rtw_efuse_file_read(PADAPTER padapter, u8 *filepath, u8 *buf, u32 len)
 	return _TRUE;
 }
 
-
+#if !defined(CONFIG_RTW_ANDROID_GKI)
 u8 rtw_efuse_file_store(PADAPTER padapter, u8 *filepath, u8 *buf, u32 len)
 {
 	int err = 0, i = 0, j = 0, mapLen = 0 ;
@@ -3420,6 +3457,7 @@ u8 rtw_efuse_file_store(PADAPTER padapter, u8 *filepath, u8 *buf, u32 len)
 
 	return err;
 }
+#endif /* !defined(CONFIG_RTW_ANDROID_GKI) */
 
 #ifdef CONFIG_EFUSE_CONFIG_FILE
 u32 rtw_read_efuse_from_file(const char *path, u8 *buf, int map_size)
@@ -3432,10 +3470,10 @@ u32 rtw_read_efuse_from_file(const char *path, u8 *buf, int map_size)
 	u32 ret = _FAIL;
 
 	u8 *file_data = NULL;
-	u32 file_size, read_size, pos = 0;
+	u32 file_size = 16384, read_size, pos = 0;
 	u8 *map = NULL;
 
-	if (rtw_is_file_readable_with_size(path, &file_size) != _TRUE) {
+	if (rtw_readable_file_sz_chk(path, file_size) != _TRUE) {
 		RTW_PRINT("%s %s is not readable\n", __func__, path);
 		goto exit;
 	}
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/core/mesh/rtw_mesh.c b/drivers/net/wireless/rockchip_wlan/rtl8821cs/core/mesh/rtw_mesh.c
index 380fc8933596..95605d964fc0 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/core/mesh/rtw_mesh.c
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/core/mesh/rtw_mesh.c
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017 Realtek Corporation.
@@ -249,7 +248,7 @@ int rtw_bss_is_candidate_mesh_peer(_adapter *adapter, WLAN_BSSID_EX *target, u8
 		rsn_ie = rtw_get_wpa2_ie(BSS_EX_TLV_IES(target), &rsn_ie_len, BSS_EX_TLV_IES_LEN(target));
 		if (!rsn_ie || rsn_ie_len == 0)
 			goto exit;
-		if (rtw_parse_wpa2_ie(rsn_ie, rsn_ie_len + 2, &group_cipher, &pairwise_cipher, &gmcs, NULL, &mfp_opt) != _SUCCESS)
+		if (rtw_parse_wpa2_ie(rsn_ie, rsn_ie_len + 2, &group_cipher, &pairwise_cipher, &gmcs, NULL, &mfp_opt, NULL) != _SUCCESS)
 			goto exit;
 		if ((sec->mfp_opt == MFP_REQUIRED && mfp_opt < MFP_OPTIONAL)
 			|| (mfp_opt == MFP_REQUIRED && sec->mfp_opt < MFP_OPTIONAL))
@@ -1172,7 +1171,7 @@ void dump_mesh_networks(void *sel, _adapter *adapter)
 				rsn_ie = rtw_get_wpa2_ie(BSS_EX_TLV_IES(&network->network)
 							, &rsn_ie_len, BSS_EX_TLV_IES_LEN(&network->network));
 				if (rsn_ie && rsn_ie_len)
-					rtw_parse_wpa2_ie(rsn_ie, rsn_ie_len + 2, &gcs, &pcs, &gmcs, NULL, &mfp_opt);
+					rtw_parse_wpa2_ie(rsn_ie, rsn_ie_len + 2, &gcs, &pcs, &gmcs, NULL, &mfp_opt, NULL);
 			}
 			RTW_PRINT_SEL(sel, "* "MAC_FMT" %3d            %-32s %2x%2x%2x%2x%2x"
 				" %03x %03x %c%03x"
@@ -1214,7 +1213,7 @@ void dump_mesh_networks(void *sel, _adapter *adapter)
 		if (auth_pid && auth_pid <= 2) {
 			rsn_ie = rtw_get_wpa2_ie(BSS_EX_TLV_IES(&network->network), &rsn_ie_len, BSS_EX_TLV_IES_LEN(&network->network));
 			if (rsn_ie && rsn_ie_len)
-				rtw_parse_wpa2_ie(rsn_ie, rsn_ie_len + 2, &gcs, &pcs, &gmcs, NULL, &mfp_opt);
+				rtw_parse_wpa2_ie(rsn_ie, rsn_ie_len + 2, &gcs, &pcs, &gmcs, NULL, &mfp_opt, NULL);
 		}
 		age_ms = rtw_get_passing_time_ms(network->last_scanned);
 		#if CONFIG_RTW_MESH_ACNODE_PREVENT
@@ -2955,7 +2954,7 @@ u8 rtw_mesh_ps_annc(_adapter *adapter, u8 ps)
 	return annc_cnt;
 }
 
-static void mpath_tx_tasklet_hdl(void *priv)
+static void mpath_tx_tasklet_hdl(unsigned long priv)
 {
 	_adapter *adapter = (_adapter *)priv;
 	struct rtw_mesh_info *minfo = &adapter->mesh_info;
@@ -3378,7 +3377,7 @@ void rtw_mesh_init_mesh_info(_adapter *adapter)
 
 	_rtw_init_queue(&minfo->mpath_tx_queue);
 	tasklet_init(&minfo->mpath_tx_tasklet
-		, (void(*)(unsigned long))mpath_tx_tasklet_hdl
+		, mpath_tx_tasklet_hdl
 		, (unsigned long)adapter);
 
 	rtw_mrc_init(adapter);
@@ -3695,7 +3694,7 @@ int rtw_mesh_addr_resolve(_adapter *adapter, u16 os_qid, struct xmit_frame *xfra
 				, etherhdr.h_dest, adapter_mac_addr(adapter), ae_need, NULL, 0
 				, os_qid, b2u_list, &b2u_num, &b2u_mseq);
 			if (bmc_need == _FALSE) {
-				res = RTW_BMC_NO_NEED;
+				res = RTW_ORI_NO_NEED;
 				goto exit;
 			}
 		}
@@ -3917,7 +3916,7 @@ int rtw_mesh_rx_data_validate_hdr(_adapter *adapter, union recv_frame *rframe, s
 			stop_sta_xmit(adapter, *sta);
 	} else {
 		if ((*sta)->state & WIFI_SLEEP_STATE)
-			wakeup_sta_to_xmit(adapter, *sta);
+			wakeup_sta_to_xmit(adapter, *sta, ALL_FRAME);
 	}
 
 	if (is_ra_bmc)
@@ -4087,7 +4086,7 @@ int rtw_mesh_rx_msdu_act_check(union recv_frame *rframe
 	int act = 0;
 	u8 ae_need;
 #if CONFIG_RTW_MESH_DATA_BMC_TO_UC
-	bool bmc_need = _TRUE;
+	bool ori_need = _TRUE;
 	u8 b2u_num = 0;
 #endif
 
@@ -4319,12 +4318,12 @@ int rtw_mesh_rx_msdu_act_check(union recv_frame *rframe
 	if (is_mda_bmc
 		&& rtw_mfwd_b2u_policy_chk(mcfg->b2u_flags_mfwd, mda, rattrib->to_fr_ds == 3)
 	) {
-		bmc_need = rtw_mesh_data_bmc_to_uc(adapter
+		ori_need = rtw_mesh_data_bmc_to_uc(adapter
 			, da, sa, mda, msa, ae_need, rframe->u.hdr.psta->cmn.mac_addr, mctrl->ttl - 1
 			, os_qid, b2u_list, &b2u_num, &fwd_mseq);
 	}
 
-	if (bmc_need == _TRUE)
+	if (ori_need == _TRUE)
 #endif
 	{
 		xframe = rtw_alloc_xmitframe(&adapter->xmitpriv, os_qid);
@@ -4363,12 +4362,17 @@ int rtw_mesh_rx_msdu_act_check(union recv_frame *rframe
 		*fwd_frame = xframe;
 	}
 
-	act |= RTW_RX_MSDU_ACT_FORWARD;
-	if (is_mda_bmc)
-		minfo->mshstats.fwded_mcast++;
-	else
-		minfo->mshstats.fwded_unicast++;
-	minfo->mshstats.fwded_frames++;
+#if CONFIG_RTW_MESH_DATA_BMC_TO_UC
+	if (ori_need || b2u_num)
+#endif
+	{
+		act |= RTW_RX_MSDU_ACT_FORWARD;
+		if (is_mda_bmc)
+			minfo->mshstats.fwded_mcast++;
+		else
+			minfo->mshstats.fwded_unicast++;
+		minfo->mshstats.fwded_frames++;
+	}
 
 exit:
 	return act;
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/core/mesh/rtw_mesh.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/core/mesh/rtw_mesh.h
index 01b591d645f4..5410ba404468 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/core/mesh/rtw_mesh.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/core/mesh/rtw_mesh.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/core/mesh/rtw_mesh_hwmp.c b/drivers/net/wireless/rockchip_wlan/rtl8821cs/core/mesh/rtw_mesh_hwmp.c
index 848918ab49fb..04be425b2140 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/core/mesh/rtw_mesh_hwmp.c
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/core/mesh/rtw_mesh_hwmp.c
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/core/mesh/rtw_mesh_hwmp.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/core/mesh/rtw_mesh_hwmp.h
index 1702bf22f4df..943341781602 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/core/mesh/rtw_mesh_hwmp.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/core/mesh/rtw_mesh_hwmp.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/core/mesh/rtw_mesh_pathtbl.c b/drivers/net/wireless/rockchip_wlan/rtl8821cs/core/mesh/rtw_mesh_pathtbl.c
index c30fb5003a02..b74b56792d75 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/core/mesh/rtw_mesh_pathtbl.c
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/core/mesh/rtw_mesh_pathtbl.c
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/core/mesh/rtw_mesh_pathtbl.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/core/mesh/rtw_mesh_pathtbl.h
index 0d494cddc192..be0c40980c9e 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/core/mesh/rtw_mesh_pathtbl.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/core/mesh/rtw_mesh_pathtbl.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/core/monitor/rtw_radiotap.c b/drivers/net/wireless/rockchip_wlan/rtl8821cs/core/monitor/rtw_radiotap.c
index 94d3bf707c4d..e9ebc7d7ace7 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/core/monitor/rtw_radiotap.c
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/core/monitor/rtw_radiotap.c
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/core/monitor/rtw_radiotap.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/core/monitor/rtw_radiotap.h
index 106d902b8676..affacd1855b4 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/core/monitor/rtw_radiotap.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/core/monitor/rtw_radiotap.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/core/rtw_ap.c b/drivers/net/wireless/rockchip_wlan/rtl8821cs/core/rtw_ap.c
index 9b7bb0d03403..070318e284b1 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/core/rtw_ap.c
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/core/rtw_ap.c
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017 Realtek Corporation.
@@ -169,11 +168,12 @@ static void update_BCNTIM(_adapter *padapter)
 void rtw_add_bcn_ie(_adapter *padapter, WLAN_BSSID_EX *pnetwork, u8 index, u8 *data, u8 len)
 {
 	PNDIS_802_11_VARIABLE_IEs	pIE;
-	u8	bmatch = _FALSE;
-	u8	*pie = pnetwork->IEs;
-	u8	*p = NULL, *dst_ie = NULL, *premainder_ie = NULL, *pbackup_remainder_ie = NULL;
-	u32	i, offset, ielen = 0, ie_offset, remainder_ielen = 0;
+	u8 bmatch = _FALSE;
+	u8 *pie = pnetwork->IEs;
+	u8 *p = NULL, *dst_ie = NULL, *premainder_ie = NULL, *pbackup_remainder_ie = NULL;
+	u32 i, offset, ielen = 0, ie_offset, remainder_ielen = 0;
 
+	/* Search element id (index) exits or not */
 	for (i = sizeof(NDIS_802_11_FIXED_IEs); i < pnetwork->IELength;) {
 		pIE = (PNDIS_802_11_VARIABLE_IEs)(pnetwork->IEs + i);
 
@@ -191,6 +191,7 @@ void rtw_add_bcn_ie(_adapter *padapter, WLAN_BSSID_EX *pnetwork, u8 index, u8 *d
 		i += (pIE->Length + 2);
 	}
 
+	/* Backup remainder IE */
 	if (p != NULL && ielen > 0) {
 		ielen += 2;
 
@@ -221,7 +222,7 @@ void rtw_add_bcn_ie(_adapter *padapter, WLAN_BSSID_EX *pnetwork, u8 index, u8 *d
 	_rtw_memcpy(dst_ie, data, len);
 	dst_ie += len;
 
-	/* copy remainder IE */
+	/* Append remainder IE */
 	if (pbackup_remainder_ie) {
 		_rtw_memcpy(dst_ie, pbackup_remainder_ie, remainder_ielen);
 
@@ -410,6 +411,18 @@ void	expire_timeout_chk(_adapter *padapter)
 	int stainfo_offset;
 	u8 flush_num = 0;
 	char flush_list[NUM_STA]={0};
+	u8 data_flush = _FALSE;
+	#ifdef CONFIG_RTW_MGMT_QUEUE
+	u8 mgmt_flush = _FALSE;
+	#endif
+	struct dvobj_priv *dvobj = NULL;
+	struct rf_ctl_t *rfctl;
+	dvobj = adapter_to_dvobj(padapter);
+	rfctl = dvobj_to_rfctl(dvobj);
+
+	/* AP is under CAC, so don't check STA alive or not */
+	if (IS_UNDER_CAC(rfctl))
+		return;
 
 #ifdef CONFIG_RTW_MESH
 	if (MLME_IS_MESH(padapter)
@@ -631,13 +644,31 @@ void	expire_timeout_chk(_adapter *padapter)
 			}
 		} else {
 			/* TODO: Aging mechanism to digest frames in sleep_q to avoid running out of xmitframe */
-			if (psta->sleepq_len > (NR_XMITFRAME / pstapriv->asoc_list_cnt)
-			    && padapter->xmitpriv.free_xmitframe_cnt < ((NR_XMITFRAME / pstapriv->asoc_list_cnt) / 2)
-			   ) {
-				RTW_INFO(FUNC_ADPT_FMT" sta:"MAC_FMT", sleepq_len:%u, free_xmitframe_cnt:%u, asoc_list_cnt:%u, clear sleep_q\n"
-					, FUNC_ADPT_ARG(padapter), MAC_ARG(psta->cmn.mac_addr)
+
+			#ifdef CONFIG_RTW_MGMT_QUEUE
+			if (psta->mgmt_sleepq_len >= (NR_XMIT_EXTBUFF / pstapriv->asoc_list_cnt)
+				&& padapter->xmitpriv.free_xframe_ext_cnt < ((NR_XMIT_EXTBUFF / pstapriv->asoc_list_cnt) / 2))
+				mgmt_flush = _TRUE;
+			#endif
+
+			if (psta->sleepq_len >= (NR_XMITFRAME / pstapriv->asoc_list_cnt)
+				&& padapter->xmitpriv.free_xmitframe_cnt < ((NR_XMITFRAME / pstapriv->asoc_list_cnt) / 2))
+				data_flush = _TRUE;
+
+			if (data_flush
+				#ifdef CONFIG_RTW_MGMT_QUEUE
+				|| mgmt_flush
+				#endif
+				) {
+				RTW_INFO(FUNC_ADPT_FMT" sta:"MAC_FMT", flush sta's data and management frames\n"
+					, FUNC_ADPT_ARG(padapter), MAC_ARG(psta->cmn.mac_addr));
+				RTW_INFO("sleepq_len:%u, free_xmitframe_cnt:%u, asoc_list_cnt:%u, clear sleep_q\n"
 					, psta->sleepq_len, padapter->xmitpriv.free_xmitframe_cnt, pstapriv->asoc_list_cnt);
-				wakeup_sta_to_xmit(padapter, psta);
+				#ifdef CONFIG_RTW_MGMT_QUEUE
+				RTW_INFO("mgmt_sleepq_len:%u, free_xframe_ext_cnt:%u, asoc_list_cnt:%u, clear mgmt_sleep_q\n"
+					, psta->mgmt_sleepq_len, padapter->xmitpriv.free_xframe_ext_cnt, pstapriv->asoc_list_cnt);
+				#endif
+				wakeup_sta_to_xmit(padapter, psta, ALL_FRAME);
 			}
 		}
 	}
@@ -727,7 +758,7 @@ void	expire_timeout_chk(_adapter *padapter)
 				#ifdef CONFIG_RTW_TOKEN_BASED_XMIT
 				if (psta->tbtx_enable)
 					pstapriv->tbtx_asoc_list_cnt--;
-				#endif				
+				#endif
 				STA_SET_MESH_PLINK(psta, NULL);
 			}
 			_exit_critical_bh(&pstapriv->asoc_list_lock, &irqL);
@@ -1119,7 +1150,7 @@ void update_sta_info_apmode(_adapter *padapter, struct sta_info *psta)
 			&& !GET_HT_OP_ELE_STA_CHL_WIDTH(phtpriv_sta->ht_op))
 			psta->cmn.bw_mode = CHANNEL_WIDTH_20;
 
-		if (psta->ht_40mhz_intolerant)
+		if ((psta->ht_40mhz_intolerant)||(pmlmepriv->sw_to_20mhz))
 			psta->cmn.bw_mode = CHANNEL_WIDTH_20;
 
 		if (pmlmeext->cur_bwmode < psta->cmn.bw_mode)
@@ -1208,18 +1239,6 @@ void update_sta_info_apmode(_adapter *padapter, struct sta_info *psta)
 	_exit_critical_bh(&psta->lock, &irqL);
 }
 
-#ifdef CONFIG_RTW_80211K
-static void update_rm_cap(u8 *frame_head, _adapter *pa, u32 pktlen, int offset)
-{
-	u8 *res;
-	sint len;
-
-	res = rtw_get_ie(frame_head + offset, _EID_RRM_EN_CAP_IE_, &len,
-			 pktlen - offset);
-	if (res != NULL)
-		_rtw_memcpy((void *)pa->rmpriv.rm_en_cap_def, (res + 2), len);
-}
-#endif
 
 static void update_ap_info(_adapter *padapter, struct sta_info *psta)
 {
@@ -1707,10 +1726,9 @@ void start_bss_network(_adapter *padapter, struct createbss_parm *parm)
 #endif /* #CONFIG_80211N_HT */
 
 #ifdef CONFIG_80211AC_VHT
-	if (pmlmepriv->vhtpriv.vht_option) {
-		pmlmeinfo->VHT_enable = _TRUE;
+	pmlmeinfo->VHT_enable = pmlmepriv->vhtpriv.vht_option;
+	if (pmlmeinfo->VHT_enable)
 		update_hw_vht_param(padapter);
-	}
 #endif /* CONFIG_80211AC_VHT */
 
 	if (pmlmepriv->cur_network.join_res != _TRUE) { /* setting only at  first time */
@@ -1872,6 +1890,10 @@ void start_bss_network(_adapter *padapter, struct createbss_parm *parm)
 		#endif
 
 		update_beacon(pdvobj->padapters[i], _TIM_IE_, NULL, _FALSE, 0);
+		#ifdef CONFIG_ACTIVE_TPC_REPORT
+		if (MLME_ACTIVE_TPC_REPORT(mlme))
+			update_beacon(pdvobj->padapters[i], WLAN_EID_TPC_REPORT, NULL, _FALSE, 0);
+		#endif
 	}
 
 	if (mlme_act != MLME_OPCH_SWITCH
@@ -1955,7 +1977,7 @@ int rtw_check_beacon_data(_adapter *padapter, u8 *pbuf,  int len)
 	int group_cipher, pairwise_cipher, gmcs;
 	u32 akm;
 	u8 mfp_opt = MFP_NO;
-	u8	channel, network_type;
+	u8 channel, network_type;
 	u8 OUI1[] = {0x00, 0x50, 0xf2, 0x01};
 	u8 WMM_PARA_IE[] = {0x00, 0x50, 0xf2, 0x02, 0x01, 0x01};
 	HT_CAP_AMPDU_DENSITY best_ampdu_density;
@@ -1965,8 +1987,8 @@ int rtw_check_beacon_data(_adapter *padapter, u8 *pbuf,  int len)
 	WLAN_BSSID_EX *pbss_network = (WLAN_BSSID_EX *)&pmlmepriv->cur_network.network;
 	u8 *ie = pbss_network->IEs;
 	u8 vht_cap = _FALSE;
-	struct mlme_ext_priv	*pmlmeext = &(padapter->mlmeextpriv);
-	struct mlme_ext_info	*pmlmeinfo = &(pmlmeext->mlmext_info);
+	struct mlme_ext_priv *pmlmeext = &(padapter->mlmeextpriv);
+	struct mlme_ext_info *pmlmeinfo = &(pmlmeext->mlmext_info);
 	struct rf_ctl_t *rfctl = adapter_to_rfctl(padapter);
 	u8 rf_num = 0;
 	int ret_rm;
@@ -2059,6 +2081,22 @@ int rtw_check_beacon_data(_adapter *padapter, u8 *pbuf,  int len)
 	/*	support rate ie & ext support ie & IElen & SupportedRates	*/
 	network_type = rtw_update_rate_bymode(pbss_network, pregistrypriv->wireless_mode);
 
+	/* Active TPC report */
+#ifdef CONFIG_ACTIVE_TPC_REPORT
+	pmlmepriv->active_tpc_report = 0;
+	p = rtw_get_ie(ie + _BEACON_IE_OFFSET_, WLAN_EID_TPC_REPORT, &ie_len, (pbss_network->IELength - _BEACON_IE_OFFSET_));
+	if (REGSTY_IS_ACTIVE_TPC_REPORT_CAPABLE(pregistrypriv)) {
+		if (p && ie_len != 0)
+			pmlmepriv->active_tpc_report = 1;
+		else if (REGSTY_IS_ACTIVE_TPC_REPORT_AUTO(pregistrypriv)) {
+			rtw_set_ie_tpc_report(pbss_network->IEs + pbss_network->IELength, &pbss_network->IELength, 0, 0);
+			pmlmepriv->active_tpc_report = 1;
+		}
+	}
+	if (!MLME_ACTIVE_TPC_REPORT(pmlmepriv) && p)
+#endif
+		rtw_remove_bcn_ie(padapter, pbss_network, WLAN_EID_TPC_REPORT);
+
 	/* parsing ERP_IE */
 	p = rtw_get_ie(ie + _BEACON_IE_OFFSET_, _ERPINFO_IE_, &ie_len, (pbss_network->IELength - _BEACON_IE_OFFSET_));
 	if (p && ie_len > 0)  {
@@ -2090,7 +2128,7 @@ int rtw_check_beacon_data(_adapter *padapter, u8 *pbuf,  int len)
 	psecuritypriv->akmp = 0;
 	p = rtw_get_ie(ie + _BEACON_IE_OFFSET_, _RSN_IE_2_, &ie_len, (pbss_network->IELength - _BEACON_IE_OFFSET_));
 	if (p && ie_len > 0) {
-		if (rtw_parse_wpa2_ie(p, ie_len + 2, &group_cipher, &pairwise_cipher, &gmcs, &akm, &mfp_opt) == _SUCCESS) {
+		if (rtw_parse_wpa2_ie(p, ie_len + 2, &group_cipher, &pairwise_cipher, &gmcs, &akm, &mfp_opt, NULL) == _SUCCESS) {
 			psecuritypriv->dot11AuthAlgrthm = dot11AuthAlgrthm_8021X;
 			psecuritypriv->ndisauthtype = Ndis802_11AuthModeWPA2PSK;
 			psecuritypriv->dot8021xalg = 1;/* psk,  todo:802.1x */
@@ -2228,11 +2266,12 @@ int rtw_check_beacon_data(_adapter *padapter, u8 *pbuf,  int len)
 	}
 	psecuritypriv->mfp_opt = mfp_opt;
 
-#ifdef CONFIG_RTW_80211K
-	/* RRM */
-	update_rm_cap(pbuf, padapter, len, _BEACON_IE_OFFSET_);
+	/* Parsing extended capabilities IE */
+	rtw_parse_ext_cap_ie(pmlmepriv->ext_capab_ie_data, &(pmlmepriv->ext_capab_ie_len), ie \
+		, pbss_network->IELength, _BEACON_IE_OFFSET_);
 
-#endif /* CONFIG_RTW_80211K */
+	/* RRM */
+	rm_update_cap(pbuf, padapter, len, _BEACON_IE_OFFSET_);
 
 	/* wmm */
 	ie_len = 0;
@@ -2422,28 +2461,32 @@ int rtw_check_beacon_data(_adapter *padapter, u8 *pbuf,  int len)
 #endif
 
 #ifdef CONFIG_80211AC_VHT
-	pmlmepriv->ori_vht_en = 0;
+	pmlmepriv->vhtpriv.upper_layer_setting = _FALSE;
 	pmlmepriv->vhtpriv.vht_option = _FALSE;
 
 	if (pmlmepriv->htpriv.ht_option == _TRUE
 		&& pbss_network->Configuration.DSConfig > 14
 		&& REGSTY_IS_11AC_ENABLE(pregistrypriv)
 		&& is_supported_vht(pregistrypriv->wireless_mode)
-		&& (!rfctl->country_ent || COUNTRY_CHPLAN_EN_11AC(rfctl->country_ent))
+		&& RFCTL_REG_EN_11AC(rfctl)
 	) {
-		/* Parsing VHT CAP IE */
-		p = rtw_get_ie(ie + _BEACON_IE_OFFSET_, EID_VHTCapability, &ie_len, (pbss_network->IELength - _BEACON_IE_OFFSET_));
+		/* Parsing VHT_CAP_IE */
+		p = rtw_get_ie(ie + _BEACON_IE_OFFSET_, EID_VHTCapability, 
+			&ie_len, (pbss_network->IELength - _BEACON_IE_OFFSET_));
 		if (p && ie_len > 0)
 			vht_cap = _TRUE;
+		else
+			RTW_INFO(FUNC_ADPT_FMT" No vht_capability_ie from hostapd/wpa_supplicant\n", FUNC_ADPT_ARG(padapter));
 
-		/* Parsing VHT OPERATION IE */
-
-		if (vht_cap == _TRUE
-			&& MLME_IS_MESH(padapter) /* allow only mesh temporarily before VHT IE checking is ready */
-		) {
-			rtw_check_for_vht20(padapter, ie + _BEACON_IE_OFFSET_, pbss_network->IELength - _BEACON_IE_OFFSET_);
-			pmlmepriv->ori_vht_en = 1;
+		/* Update VHT related IEs */
+		if (vht_cap == _TRUE) {
+			RTW_INFO(FUNC_ADPT_FMT" VHT IEs is configured by hostapd/wpa_supplicant\n", FUNC_ADPT_ARG(padapter));
+			pmlmepriv->vhtpriv.upper_layer_setting = _TRUE;
 			pmlmepriv->vhtpriv.vht_option = _TRUE;
+
+			rtw_check_for_vht20(padapter, ie + _BEACON_IE_OFFSET_, 
+					pbss_network->IELength - _BEACON_IE_OFFSET_);
+			rtw_check_vht_ies(padapter, pbss_network);
 		} else if (REGSTY_IS_11AC_AUTO(pregistrypriv)) {
 			rtw_vht_ies_detach(padapter, pbss_network);
 			rtw_vht_ies_attach(padapter, pbss_network);
@@ -2459,12 +2502,10 @@ int rtw_check_beacon_data(_adapter *padapter, u8 *pbuf,  int len)
 					is_supported_ht(padapter->registrypriv.wireless_mode) &&
 		pbss_network->Configuration.DSConfig <= 14 && padapter->registrypriv.wifi_spec == 1 &&
 		pbss_network->IELength + 10 <= MAX_IE_SZ) {
-		uint len = 0;
 
-		SET_EXT_CAPABILITY_ELE_BSS_COEXIST(pmlmepriv->ext_capab_ie_data, 1);
-		pmlmepriv->ext_capab_ie_len = 10;
-		rtw_set_ie(pbss_network->IEs + pbss_network->IELength, EID_EXTCapability, 8, pmlmepriv->ext_capab_ie_data, &len);
-		pbss_network->IELength += pmlmepriv->ext_capab_ie_len;
+		rtw_add_ext_cap_info(pmlmepriv->ext_capab_ie_data, &(pmlmepriv->ext_capab_ie_len), BSS_COEXT);
+		rtw_update_ext_cap_ie(pmlmepriv->ext_capab_ie_data, pmlmepriv->ext_capab_ie_len, pbss_network->IEs, \
+			&(pbss_network->IELength), _BEACON_IE_OFFSET_);
 	}
 #endif /* CONFIG_80211N_HT */
 
@@ -3016,26 +3057,41 @@ static void associated_stainfo_update(_adapter *padapter, struct sta_info *psta,
 
 }
 
-static void update_bcn_ext_capab_ie(_adapter *padapter)
+#ifdef CONFIG_ACTIVE_TPC_REPORT
+static bool rtw_update_bss_tpc_report(_adapter *adapter, WLAN_BSSID_EX *bss)
 {
-	sint ie_len = 0;
-	unsigned char	*pbuf;
-	struct mlme_priv *pmlmepriv = &(padapter->mlmepriv);
-	struct mlme_ext_priv	*pmlmeext = &(padapter->mlmeextpriv);
-	struct mlme_ext_info	*pmlmeinfo = &(pmlmeext->mlmext_info);
-	WLAN_BSSID_EX *pnetwork = &(pmlmeinfo->network);
-	u8 *ie = pnetwork->IEs;
-	u8 null_extcap_data[8] = {0};
+	struct mlme_ext_priv *mlmeext = &adapter->mlmeextpriv;
+	u8 *ie;
+	int ie_len;
+	bool updated = 0;
+	u8 tx_power = 0;
+	u8 link_margin = 0;
+	s16 eirp_mbm;
+
+	ie = rtw_get_ie(BSS_EX_TLV_IES(bss), WLAN_EID_TPC_REPORT, &ie_len, BSS_EX_TLV_IES_LEN(bss));
+	if (!ie || ie_len != 2) {
+		rtw_warn_on(1);
+		goto exit;
+	}
 
-	pbuf = rtw_get_ie(ie + _BEACON_IE_OFFSET_, _EXT_CAP_IE_, &ie_len, (pnetwork->IELength - _BEACON_IE_OFFSET_));
-	if (pbuf && ie_len > 0)
-		rtw_remove_bcn_ie(padapter, pnetwork, _EXT_CAP_IE_);
+	eirp_mbm = phy_get_txpwr_total_mbm(adapter, mlmeext->tx_rate_section, mlmeext->tx_rate
+		, mlmeext->cur_bwmode, rtw_get_center_ch(mlmeext->cur_channel, mlmeext->cur_bwmode, mlmeext->cur_ch_offset)
+		, mlmeext->cur_channel, 0, 1, NULL);
 
-	if ((pmlmepriv->ext_capab_ie_len > 0) &&
-	    (_rtw_memcmp(pmlmepriv->ext_capab_ie_data, null_extcap_data, sizeof(null_extcap_data)) == _FALSE))
-		rtw_add_bcn_ie(padapter, pnetwork, _EXT_CAP_IE_, pmlmepriv->ext_capab_ie_data, pmlmepriv->ext_capab_ie_len);
+	if (eirp_mbm > 0)
+		tx_power = eirp_mbm / MBM_PDBM;
 
+	if (*(ie + 3) != tx_power
+		|| *(ie + 4) != link_margin
+	) {
+		updated = 1;
+		rtw_set_ie_tpc_report(ie, NULL , tx_power, link_margin);
+	}
+
+exit:
+	return updated;
 }
+#endif
 
 static void update_bcn_erpinfo_ie(_adapter *padapter)
 {
@@ -3251,6 +3307,76 @@ static void update_bcn_p2p_ie(_adapter *padapter)
 
 }
 
+static u8 update_csa_ie(_adapter *padapter)
+{
+	_adapter *linking_adapter;
+	struct mlme_priv *pmlmepriv = &(padapter->mlmepriv);
+	struct mlme_ext_priv *pmlmeext = &(padapter->mlmeextpriv);
+	struct mlme_ext_info *pmlmeinfo = &(pmlmeext->mlmext_info);
+	struct dvobj_priv *dvobj = adapter_to_dvobj(padapter);
+	struct rf_ctl_t *rfctl = dvobj_to_rfctl(dvobj);
+	WLAN_BSSID_EX *pnetwork = &(pmlmeinfo->network);
+	sint ie_len = 0;
+	unsigned char	*pbuf;
+	u8 update = _FALSE;
+	u8 *ie = pnetwork->IEs;
+	u8 csa_data[WLAN_EID_CSA_IE_LEN] = {0}, ifbmp = 0;
+
+	if (rfctl->ap_csa_en == AP_CSA_DISABLE || rfctl->ap_csa_en == CSA_IE_REMOVE)
+		return update;
+
+	csa_data[CSA_NEW_CH] = rfctl->ap_csa_ch;
+	csa_data[CSA_SWITCH_COUNT] = rfctl->ap_csa_switch_cnt;
+
+	pbuf = rtw_get_ie(ie + _BEACON_IE_OFFSET_, WLAN_EID_CHANNEL_SWITCH \
+		, &ie_len, (pnetwork->IELength - _BEACON_IE_OFFSET_));
+
+	if (pbuf && ie_len == WLAN_EID_CSA_IE_LEN && csa_data[CSA_SWITCH_COUNT] > 0) {
+		/* RTW_INFO("%s, ch=%d, switch_count=%d, update CSA IE\n", __FUNCTION__, 
+			csa_data[CSA_NEW_CH], csa_data[CSA_SWITCH_COUNT]); */
+		pbuf[4] = rfctl->ap_csa_switch_cnt;
+		update = _TRUE;
+	} else if (!pbuf && csa_data[CSA_SWITCH_COUNT] > 0) {
+		RTW_INFO("%s, ch=%d, switch_count=%d, add CSA IE\n", __FUNCTION__\
+			, csa_data[CSA_NEW_CH], csa_data[CSA_SWITCH_COUNT]);
+		rtw_add_bcn_ie(padapter, pnetwork, WLAN_EID_CHANNEL_SWITCH, csa_data, WLAN_EID_CSA_IE_LEN);
+		update = _TRUE;
+	} else if (pbuf && ie_len > 0 && csa_data[CSA_SWITCH_COUNT] == 0) {
+		RTW_INFO("%s, ch=%d, switch_count=%d, remove CSA IE\n", __FUNCTION__ \
+			, csa_data[CSA_NEW_CH], csa_data[CSA_SWITCH_COUNT]);
+
+		if (pbuf) {
+			rtw_remove_bcn_ie(padapter, pnetwork, WLAN_EID_CHANNEL_SWITCH);
+			update = _TRUE;
+		}
+
+		if (rfctl->ap_csa_en == AP_SWITCH_CH_CSA) {
+			ifbmp = BIT(padapter->iface_id);
+			rtw_change_bss_chbw_cmd(padapter, 0, ifbmp, 0, rfctl->ap_csa_ch, rfctl->ap_csa_ch_width, rfctl->ap_csa_ch_offset);
+			rfctl->ap_csa_en = CSA_IE_REMOVE;
+		}
+#ifdef CONFIG_CONCURRENT_MODE
+		else if (rfctl->ap_csa_en == CSA_STA_JOINBSS) {
+			linking_adapter = rtw_mi_get_linking_adapter(padapter);
+			if (linking_adapter) {
+				rfctl->ap_csa_en = CSA_IE_REMOVE;
+				pmlmepriv = &(linking_adapter->mlmepriv);
+				rtw_joinbss_cmd(linking_adapter, &(pmlmepriv->candidate_network));
+			} else {
+				RTW_ERR("Can't find the linking STA\n");
+			}
+		}
+#endif
+	} else {
+		RTW_INFO("%s, unexpected case\n", __FUNCTION__);
+	}
+
+	if (rfctl->ap_csa_switch_cnt > 0)
+		rfctl->ap_csa_switch_cnt--;
+
+	return update;
+}
+
 static void update_bcn_vendor_spec_ie(_adapter *padapter, u8 *oui)
 {
 	RTW_INFO("%s\n", __FUNCTION__);
@@ -3292,6 +3418,12 @@ void _update_beacon(_adapter *padapter, u8 ie_id, u8 *oui, u8 tx, u8 flags, cons
 		update_BCNTIM(padapter);
 		break;
 
+#ifdef CONFIG_ACTIVE_TPC_REPORT
+	case WLAN_EID_TPC_REPORT:
+		updated = rtw_update_bss_tpc_report(padapter, &(pmlmeext->mlmext_info.network));
+		break;
+#endif
+
 	case _ERPINFO_IE_:
 		update_bcn_erpinfo_ie(padapter);
 		break;
@@ -3308,10 +3440,6 @@ void _update_beacon(_adapter *padapter, u8 ie_id, u8 *oui, u8 tx, u8 flags, cons
 		update_bcn_htinfo_ie(padapter);
 		break;
 
-	case _EXT_CAP_IE_:
-		update_bcn_ext_capab_ie(padapter);
-		break;
-
 #ifdef CONFIG_RTW_MESH
 	case WLAN_EID_MESH_CONFIG:
 		updated = rtw_mesh_update_bss_peering_status(padapter, &(pmlmeext->mlmext_info.network));
@@ -3319,6 +3447,9 @@ void _update_beacon(_adapter *padapter, u8 ie_id, u8 *oui, u8 tx, u8 flags, cons
 		updated |= rtw_mesh_update_bss_forwarding_state(padapter, &(pmlmeext->mlmext_info.network));
 		break;
 #endif
+	case WLAN_EID_CHANNEL_SWITCH:
+		updated = update_csa_ie(padapter);
+		break;
 
 	case _VENDOR_SPECIFIC_IE_:
 		update_bcn_vendor_spec_ie(padapter, oui);
@@ -3364,6 +3495,8 @@ void rtw_process_public_act_bsscoex(_adapter *padapter, u8 *pframe, uint frame_l
 	u8 *frame_body = pframe + sizeof(struct rtw_ieee80211_hdr_3addr);
 	uint frame_body_len = frame_len - sizeof(struct rtw_ieee80211_hdr_3addr);
 	u8 category, action;
+	struct macid_ctl_t *macid_ctl = &padapter->dvobj->macid_ctl;
+	int i;
 
 	psta = rtw_get_stainfo(pstapriv, get_addr2_ptr(pframe));
 	if (psta == NULL)
@@ -3409,6 +3542,15 @@ void rtw_process_public_act_bsscoex(_adapter *padapter, u8 *pframe, uint frame_l
 		update_beacon(padapter, _HT_ADD_INFO_IE_, NULL, _TRUE, 0);
 
 		associated_stainfo_update(padapter, psta, STA_INFO_UPDATE_BW);
+		if (pmlmepriv->sw_to_20mhz) {
+			for (i = 0; i < MACID_NUM_SW_LIMIT; i++) {
+				psta = macid_ctl->sta[i];
+				if (psta && !is_broadcast_mac_addr(psta->cmn.mac_addr)) {
+					psta->cmn.bw_mode = CHANNEL_WIDTH_20;
+					rtw_dm_ra_mask_wk_cmd(padapter, (u8 *)psta);
+				}
+			}
+		}
 	}
 
 
@@ -3869,6 +4011,10 @@ u8 ap_free_sta(_adapter *padapter, struct sta_info *psta, bool active, u16 reaso
 
 		if (!MLME_IS_MESH(padapter))
 			issue_deauth(padapter, psta->cmn.mac_addr, reason);
+
+		/* Flush buffered management frames */
+		if (psta->state & WIFI_SLEEP_STATE)
+			wakeup_sta_to_xmit(padapter, psta, UNI_MGMT);
 	}
 
 #ifdef CONFIG_RTW_MESH
@@ -3885,8 +4031,6 @@ u8 ap_free_sta(_adapter *padapter, struct sta_info *psta, bool active, u16 reaso
 	psta->htpriv.candidate_tid_bitmap = 0x0;/* reset */
 #endif
 
-
-
 	_enter_critical_bh(&psta->lock, &irqL);
 	psta->state &= ~(WIFI_ASOC_STATE | WIFI_UNDER_KEY_HANDSHAKE);
 
@@ -3925,12 +4069,11 @@ u8 ap_free_sta(_adapter *padapter, struct sta_info *psta, bool active, u16 reaso
 	beacon_updated = bss_cap_update_on_sta_leave(padapter, psta);
 
 	report_del_sta_event(padapter, psta->cmn.mac_addr, reason, enqueue, _FALSE);
-	
+
 	/* clear cam entry / key */
 	rtw_clearstakey_cmd(padapter, psta, enqueue);
-	
-	return beacon_updated;
 
+	return beacon_updated;
 }
 
 int rtw_ap_inform_ch_switch(_adapter *padapter, u8 new_ch, u8 ch_offset)
@@ -4026,7 +4169,7 @@ int rtw_sta_flush(_adapter *padapter, bool enqueue)
 		#endif
 	}
 
-	if (!MLME_IS_MESH(padapter))
+	if (MLME_IS_ASOC(padapter) && !MLME_IS_MESH(padapter))
 		issue_deauth(padapter, bc_addr, WLAN_REASON_DEAUTH_LEAVING);
 
 	associated_clients_update(padapter, _TRUE, STA_INFO_UPDATE_ALL);
@@ -4247,10 +4390,6 @@ void stop_ap_mode(_adapter *padapter)
 	padapter->securitypriv.ndisauthtype = Ndis802_11AuthModeOpen;
 	padapter->securitypriv.ndisencryptstatus = Ndis802_11WEPDisabled;
 
-#ifdef CONFIG_DFS_MASTER
-	rtw_dfs_rd_en_decision(padapter, self_action, 0);
-#endif
-
 	rtw_rfctl_update_op_mode(adapter_to_rfctl(padapter), BIT(padapter->iface_id), 0);
 
 	/* free scan queue */
@@ -4330,6 +4469,15 @@ void stop_ap_mode(_adapter *padapter)
 	if (MLME_IS_AP(padapter))
 		rtw_wds_pathtbl_unregister(padapter);
 #endif
+
+#ifdef CONFIG_DFS_MASTER
+	rtw_dfs_rd_en_decision(padapter, self_action, 0);
+#endif
+
+#ifdef CONFIG_FW_MULTI_PORT_SUPPORT
+	/* Disable beacon early interrupt IMR of AP mode */
+	rtw_hal_set_ap_bcn_imr_cmd(padapter, 0);
+#endif
 }
 
 #endif /* CONFIG_NATIVEAP_MLME */
@@ -4366,7 +4514,7 @@ void rtw_ap_update_bss_chbw(_adapter *adapter, WLAN_BSSID_EX *bss, u8 ch, u8 bw,
 	if (vhtpriv->vht_option == _TRUE) {
 		u8 *vht_cap_ie, *vht_op_ie;
 		int vht_cap_ielen, vht_op_ielen;
-		u8	center_freq;
+		u8 center_freq;
 
 		vht_cap_ie = rtw_get_ie((bss->IEs + sizeof(NDIS_802_11_FIXED_IEs)), EID_VHTCapability, &vht_cap_ielen, (bss->IELength - sizeof(NDIS_802_11_FIXED_IEs)));
 		vht_op_ie = rtw_get_ie((bss->IEs + sizeof(NDIS_802_11_FIXED_IEs)), EID_VHTOperation, &vht_op_ielen, (bss->IELength - sizeof(NDIS_802_11_FIXED_IEs)));
@@ -4390,10 +4538,12 @@ void rtw_ap_update_bss_chbw(_adapter *adapter, WLAN_BSSID_EX *bss, u8 ch, u8 bw,
 		/* update vht op ie */
 		if (vht_op_ie && vht_op_ielen) {
 			if (bw < CHANNEL_WIDTH_80) {
+				RTW_INFO(FUNC_ADPT_FMT" update VHT 20/40M\n", FUNC_ADPT_ARG(adapter));
 				SET_VHT_OPERATION_ELE_CHL_WIDTH(vht_op_ie + 2, 0);
 				SET_VHT_OPERATION_ELE_CHL_CENTER_FREQ1(vht_op_ie + 2, 0);
 				SET_VHT_OPERATION_ELE_CHL_CENTER_FREQ2(vht_op_ie + 2, 0);
 			} else if (bw == CHANNEL_WIDTH_80) {
+				RTW_INFO(FUNC_ADPT_FMT" update VHT 80M, center_freq = %u\n", FUNC_ADPT_ARG(adapter), center_freq);
 				SET_VHT_OPERATION_ELE_CHL_WIDTH(vht_op_ie + 2, 1);
 				SET_VHT_OPERATION_ELE_CHL_CENTER_FREQ1(vht_op_ie + 2, center_freq);
 				SET_VHT_OPERATION_ELE_CHL_CENTER_FREQ2(vht_op_ie + 2, 0);
@@ -4463,6 +4613,7 @@ static u8 rtw_ap_update_chbw_by_ifbmp(struct dvobj_priv *dvobj, u8 ifbmp
 	, u8 dec_ch[], u8 dec_bw[], u8 dec_offset[]
 	, const char *caller)
 {
+	struct rf_ctl_t *rfctl = dvobj_to_rfctl(dvobj);
 	_adapter *iface;
 	struct mlme_ext_priv *mlmeext;
 	WLAN_BSSID_EX *network;
@@ -4515,7 +4666,10 @@ static u8 rtw_ap_update_chbw_by_ifbmp(struct dvobj_priv *dvobj, u8 ifbmp
 					rtw_ap_inform_ch_switch(iface, dec_ch[i], dec_offset[i]);
 				else
 				#endif
-					rtw_sta_flush(iface, _FALSE);
+				{
+					if(rfctl->ap_csa_en == AP_CSA_DISABLE)
+						rtw_sta_flush(iface, _FALSE);
+				}
 			}
 		}
 
@@ -5231,6 +5385,7 @@ u16 rtw_ap_parse_sta_security_ie(_adapter *adapter, struct sta_info *sta, struct
 	int group_cipher = 0, pairwise_cipher = 0, gmcs = 0;
 	u32 akm = 0;
 	u8 mfp_opt = MFP_NO;
+	u8 spp_opt = 0;
 	u16 status = _STATS_SUCCESSFUL_;
 
 	sta->dot8021xalg = 0;
@@ -5245,7 +5400,7 @@ u16 rtw_ap_parse_sta_security_ie(_adapter *adapter, struct sta_info *sta, struct
 		wpa_ie = elems->rsn_ie;
 		wpa_ie_len = elems->rsn_ie_len;
 
-		if (rtw_parse_wpa2_ie(wpa_ie - 2, wpa_ie_len + 2, &group_cipher, &pairwise_cipher, &gmcs, &akm, &mfp_opt) == _SUCCESS) {
+		if (rtw_parse_wpa2_ie(wpa_ie - 2, wpa_ie_len + 2, &group_cipher, &pairwise_cipher, &gmcs, &akm, &mfp_opt, &spp_opt) == _SUCCESS) {
 			sta->dot8021xalg = 1;/* psk, todo:802.1x */
 			sta->wpa_psk |= BIT(1);
 
@@ -5308,6 +5463,11 @@ u16 rtw_ap_parse_sta_security_ie(_adapter *adapter, struct sta_info *sta, struct
 		wpa_ie = NULL;
 		wpa_ie_len = 0;
 	}
+	if (sec->dot11PrivacyAlgrthm != _NO_PRIVACY_) {
+		/*check if amsdu is allowed */
+		if (rtw_check_amsdu_disable(adapter->registrypriv.amsdu_mode, spp_opt) == _TRUE)
+			sta->flags |= WLAN_STA_AMSDU_DISABLE;
+	}
 
 	if ((sec->mfp_opt == MFP_REQUIRED && mfp_opt < MFP_OPTIONAL)
 		|| (mfp_opt == MFP_REQUIRED && sec->mfp_opt < MFP_OPTIONAL)
@@ -5646,11 +5806,12 @@ static int rtw_ap_nexthop_resolve(_adapter *adapter, struct xmit_frame *xframe)
 	int ret = _SUCCESS;
 
 #ifdef CONFIG_RTW_WDS
-	if (adapter_use_wds(adapter)
-		&& rtw_wds_nexthop_lookup(adapter, attrib->dst, attrib->ra) == 0
-	) {
-		if (_rtw_memcmp(attrib->dst, attrib->ra, ETH_ALEN) == _FALSE)
-			attrib->wds = 1;
+	if (adapter_use_wds(adapter)) {
+		if (rtw_wds_nexthop_lookup(adapter, attrib->dst, attrib->ra) == 0) {
+			if (_rtw_memcmp(attrib->dst, attrib->ra, ETH_ALEN) == _FALSE)
+				attrib->wds = 1;
+		} else
+			ret = _FAIL;
 	} else
 #endif
 		_rtw_memcpy(attrib->ra, attrib->dst, ETH_ALEN);
@@ -5658,7 +5819,73 @@ static int rtw_ap_nexthop_resolve(_adapter *adapter, struct xmit_frame *xframe)
 	return ret;
 }
 
-int rtw_ap_addr_resolve(_adapter *adapter, u16 os_qid, struct xmit_frame *xframe, _pkt *pkt, _list *b2u_list)
+#ifdef CONFIG_RTW_WDS
+static void rtw_ap_data_flood_for_unknown_da(_adapter *adapter
+	, const u8 *da, const u8 *sa, const u8 *ori_ta
+	, u16 os_qid, _list *f_list)
+{
+	struct sta_priv *stapriv = &adapter->stapriv;
+	struct xmit_priv *xmitpriv = &adapter->xmitpriv;
+	_irqL irqL;
+	_list *head, *list;
+	struct sta_info *sta;
+	char sta_id[NUM_STA];
+	u8 sta_num = 0;
+	int i;
+
+	_enter_critical_bh(&stapriv->asoc_list_lock, &irqL);
+	head = &stapriv->asoc_list;
+	list = get_next(head);
+
+	while ((rtw_end_of_queue_search(head, list)) == _FALSE) {
+		int stainfo_offset;
+
+		sta = LIST_CONTAINOR(list, struct sta_info, asoc_list);
+		list = get_next(list);
+
+		stainfo_offset = rtw_stainfo_offset(stapriv, sta);
+		if (stainfo_offset_valid(stainfo_offset))
+			sta_id[sta_num++] = stainfo_offset;
+	}
+	_exit_critical_bh(&stapriv->asoc_list_lock, &irqL);
+
+	if (!sta_num)
+		goto exit;
+
+	for (i = 0; i < sta_num; i++) {
+		struct xmit_frame *frame;
+		struct pkt_attrib *attrib;
+
+		sta = rtw_get_stainfo_by_offset(stapriv, sta_id[i]);
+		if (!(sta->state & WIFI_ASOC_STATE)
+			|| !(sta->flags & WLAN_STA_WDS)
+			|| _rtw_memcmp(sta->cmn.mac_addr, sa, ETH_ALEN) == _TRUE
+			|| (ori_ta && _rtw_memcmp(sta->cmn.mac_addr, ori_ta, ETH_ALEN) == _TRUE)
+			|| is_broadcast_mac_addr(sta->cmn.mac_addr)
+			|| is_zero_mac_addr(sta->cmn.mac_addr))
+			continue;
+
+		frame = rtw_alloc_xmitframe(xmitpriv, os_qid);
+		if (!frame)
+			break;
+
+		attrib = &frame->attrib;
+
+		_rtw_memcpy(attrib->ra, sta->cmn.mac_addr, ETH_ALEN);
+		_rtw_memcpy(attrib->ta, adapter_mac_addr(adapter), ETH_ALEN);
+		_rtw_memcpy(attrib->dst, da, ETH_ALEN);
+		_rtw_memcpy(attrib->src, sa, ETH_ALEN);
+		attrib->wds = 1;
+
+		rtw_list_insert_tail(&frame->list, f_list);
+	}
+
+exit:
+	return;
+}
+#endif /* CONFIG_RTW_WDS */
+
+int rtw_ap_addr_resolve(_adapter *adapter, u16 os_qid, struct xmit_frame *xframe, _pkt *pkt, _list *f_list)
 {
 	struct pkt_file pktfile;
 	struct ethhdr etherhdr;
@@ -5666,9 +5893,6 @@ int rtw_ap_addr_resolve(_adapter *adapter, u16 os_qid, struct xmit_frame *xframe
 	struct rtw_mesh_path *mpath = NULL, *mppath = NULL;
 	u8 is_da_mcast;
 	u8 addr4_need;
-#if CONFIG_RTW_AP_DATA_BMC_TO_UC
-	bool bmc_need = _TRUE;
-#endif
 	int res = _SUCCESS;
 
 	_rtw_open_pktfile(pkt, &pktfile);
@@ -5676,10 +5900,10 @@ int rtw_ap_addr_resolve(_adapter *adapter, u16 os_qid, struct xmit_frame *xframe
 		res = _FAIL;
 		goto exit;
 	}
-	
+
 	xframe->pkt = pkt;
-#if CONFIG_RTW_AP_DATA_BMC_TO_UC
-	_rtw_init_listhead(b2u_list);
+#if defined(CONFIG_RTW_WDS) || CONFIG_RTW_AP_DATA_BMC_TO_UC
+	_rtw_init_listhead(f_list);
 #endif
 
 	is_da_mcast = IS_MCAST(etherhdr.h_dest);
@@ -5689,10 +5913,10 @@ int rtw_ap_addr_resolve(_adapter *adapter, u16 os_qid, struct xmit_frame *xframe
 			&& adapter->registrypriv.wifi_spec == 0
 			&& adapter->xmitpriv.free_xmitframe_cnt > (NR_XMITFRAME / 4)
 		) {
-			bmc_need = rtw_ap_data_bmc_to_uc(adapter
-				, etherhdr.h_dest, etherhdr.h_source, NULL, os_qid, b2u_list);
-			if (bmc_need == _FALSE) {
-				res = RTW_BMC_NO_NEED;
+			if (rtw_ap_data_bmc_to_uc(adapter
+				, etherhdr.h_dest, etherhdr.h_source, NULL, os_qid, f_list) == 0
+			) {
+				res = RTW_ORI_NO_NEED;
 				goto exit;
 			}
 		}
@@ -5707,8 +5931,17 @@ int rtw_ap_addr_resolve(_adapter *adapter, u16 os_qid, struct xmit_frame *xframe
 
 	if (is_da_mcast)
 		_rtw_memcpy(attrib->ra, attrib->dst, ETH_ALEN);
-	else
+	else {
 		res = rtw_ap_nexthop_resolve(adapter, xframe);
+		#ifdef CONFIG_RTW_WDS
+		if (res != _SUCCESS) {
+			/* unknown DA, flood frame to every WDS STA */
+			rtw_ap_data_flood_for_unknown_da(adapter
+				, etherhdr.h_dest, etherhdr.h_source, NULL, os_qid, f_list);
+			res = RTW_ORI_NO_NEED;
+		}
+		#endif
+	}
 
 exit:
 	return res;
@@ -5768,10 +6001,10 @@ int rtw_ap_rx_data_validate_hdr(_adapter *adapter, union recv_frame *rframe, str
 #endif
 
 	process_pwrbit_data(adapter, rframe, *sta);
-	
+
 	if ((get_frame_sub_type(whdr) & WIFI_QOS_DATA_TYPE) == WIFI_QOS_DATA_TYPE)
 		process_wmmps_data(adapter, rframe, *sta);
-	
+
 	if (get_frame_sub_type(whdr) & BIT(6)) {
 		/* No data, will not indicate to upper layer, temporily count it here */
 		count_rx_stats(adapter, rframe, *sta);
@@ -5788,12 +6021,12 @@ int rtw_ap_rx_data_validate_hdr(_adapter *adapter, union recv_frame *rframe, str
 int rtw_ap_rx_msdu_act_check(union recv_frame *rframe
 	, const u8 *da, const u8 *sa
 	, u8 *msdu, enum rtw_rx_llc_hdl llc_hdl
-	, struct xmit_frame **fwd_frame, _list *b2u_list)
+	, struct xmit_frame **fwd_frame, _list *f_list)
 {
 	_adapter *adapter = rframe->u.hdr.adapter;
 	struct rx_pkt_attrib *rattrib = &rframe->u.hdr.attrib;
 	struct rtw_wds_path *wpath;
-	u8 is_da_bmc = IS_MCAST(da); 
+	u8 is_da_bmc = IS_MCAST(da);
 	u8 is_da_self = !is_da_bmc && _rtw_memcmp(da, adapter_mac_addr(adapter), ETH_ALEN);
 	u8 is_da_peer = 0;
 	int in_wds_tbl = 0;
@@ -5802,9 +6035,6 @@ int rtw_ap_rx_msdu_act_check(union recv_frame *rframe
 	struct pkt_attrib *xattrib;
 	u8 fwd_ra[ETH_ALEN] = {0};
 	int act = 0;
-#if CONFIG_RTW_AP_DATA_BMC_TO_UC
-	bool bmc_need = _TRUE;
-#endif
 
 #ifdef CONFIG_RTW_WDS
 	/* update/create wds info for SA, RA */
@@ -5865,7 +6095,13 @@ int rtw_ap_rx_msdu_act_check(union recv_frame *rframe
 
 	/* DA is unknown*/
 	act |= RTW_RX_MSDU_ACT_INDICATE;
-	goto exit;
+	if (adapter->mlmepriv.ap_isolate) {
+		/*
+		* unknown DA and ap_isolate, indicate only
+		* (bridge will not forward packets to originating port)
+		*/
+		goto exit;
+	}
 
 fwd_chk:
 
@@ -5874,48 +6110,70 @@ int rtw_ap_rx_msdu_act_check(union recv_frame *rframe
 
 	os_qid = rtw_os_recv_select_queue(msdu, llc_hdl);
 
-#if CONFIG_RTW_AP_DATA_BMC_TO_UC
-	_rtw_init_listhead(b2u_list);
-
-	if (is_da_bmc
-		&& rtw_ap_fwd_b2u_policy_chk(adapter->b2u_flags_ap_fwd, da, rattrib->to_fr_ds == 3 && !IS_MCAST(rattrib->ra))
-		&& adapter->registrypriv.wifi_spec == 0
-		&& adapter->xmitpriv.free_xmitframe_cnt > (NR_XMITFRAME / 4)
-	) {
-		bmc_need = rtw_ap_data_bmc_to_uc(adapter
-			, da, sa, rframe->u.hdr.psta->cmn.mac_addr
-			, os_qid, b2u_list);
-	}
+#if defined(CONFIG_RTW_WDS) || CONFIG_RTW_AP_DATA_BMC_TO_UC
+	_rtw_init_listhead(f_list);
+#endif
 
-	if (bmc_need == _TRUE)
+#if CONFIG_RTW_AP_DATA_BMC_TO_UC
+	if (is_da_bmc) {
+		if (rtw_ap_fwd_b2u_policy_chk(adapter->b2u_flags_ap_fwd, da, rattrib->to_fr_ds == 3 && !IS_MCAST(rattrib->ra))
+			&& adapter->registrypriv.wifi_spec == 0
+			&& adapter->xmitpriv.free_xmitframe_cnt > (NR_XMITFRAME / 4)
+		) {
+			if (rtw_ap_data_bmc_to_uc(adapter
+				, da, sa, rframe->u.hdr.psta->cmn.mac_addr
+				, os_qid, f_list) == 0
+			) {
+				if (!rtw_is_list_empty(f_list))
+					goto set_act_fwd;
+				else
+					goto exit;
+			}
+		}
+	} else
 #endif
-	{
-		xframe = rtw_alloc_xmitframe(&adapter->xmitpriv, os_qid);
-		if (!xframe) {
-			#ifdef DBG_TX_DROP_FRAME
-			RTW_INFO("DBG_TX_DROP_FRAME "FUNC_ADPT_FMT" rtw_alloc_xmitframe fail\n"
-				, FUNC_ADPT_ARG(adapter));
-			#endif
+#ifdef CONFIG_RTW_WDS
+	if (adapter_use_wds(adapter) && !in_wds_tbl && !is_da_peer) {
+		/* unknown DA, flood frame to every WDS STA except receiving one */
+		rtw_ap_data_flood_for_unknown_da(adapter
+			, da, sa, rframe->u.hdr.psta->cmn.mac_addr
+			, os_qid, f_list);
+		if (!rtw_is_list_empty(f_list))
+			goto set_act_fwd;
+		else
 			goto exit;
-		}
+	} else
+#endif
+	;
 
-		xattrib = &xframe->attrib;
+	xframe = rtw_alloc_xmitframe(&adapter->xmitpriv, os_qid);
+	if (!xframe) {
+		#ifdef DBG_TX_DROP_FRAME
+		RTW_INFO("DBG_TX_DROP_FRAME "FUNC_ADPT_FMT" rtw_alloc_xmitframe fail\n"
+			, FUNC_ADPT_ARG(adapter));
+		#endif
+		goto exit;
+	}
 
-		_rtw_memcpy(xattrib->dst, da, ETH_ALEN);
-		_rtw_memcpy(xattrib->src, sa, ETH_ALEN);
-		_rtw_memcpy(xattrib->ta, adapter_mac_addr(adapter), ETH_ALEN);
+	xattrib = &xframe->attrib;
 
-		#ifdef CONFIG_RTW_WDS
-		if (in_wds_tbl && _rtw_memcmp(da, fwd_ra, ETH_ALEN) == _FALSE) {
-			_rtw_memcpy(xattrib->ra, fwd_ra, ETH_ALEN);
-			xattrib->wds = 1;			
-		} else
-		#endif
-			_rtw_memcpy(xattrib->ra, da, ETH_ALEN);
+	_rtw_memcpy(xattrib->dst, da, ETH_ALEN);
+	_rtw_memcpy(xattrib->src, sa, ETH_ALEN);
+	_rtw_memcpy(xattrib->ta, adapter_mac_addr(adapter), ETH_ALEN);
 
-		*fwd_frame = xframe;
-	}
+	#ifdef CONFIG_RTW_WDS
+	if (in_wds_tbl && _rtw_memcmp(da, fwd_ra, ETH_ALEN) == _FALSE) {
+		_rtw_memcpy(xattrib->ra, fwd_ra, ETH_ALEN);
+		xattrib->wds = 1;
+	} else
+	#endif
+		_rtw_memcpy(xattrib->ra, da, ETH_ALEN);
+
+	*fwd_frame = xframe;
 
+#if defined(CONFIG_RTW_WDS) || CONFIG_RTW_AP_DATA_BMC_TO_UC
+set_act_fwd:
+#endif
 	act |= RTW_RX_MSDU_ACT_FORWARD;
 
 exit:
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/core/rtw_beamforming.c b/drivers/net/wireless/rockchip_wlan/rtl8821cs/core/rtw_beamforming.c
index bd96beff7bdf..7bafe3d40914 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/core/rtw_beamforming.c
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/core/rtw_beamforming.c
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017 Realtek Corporation.
@@ -116,7 +115,7 @@ static void _get_sta_beamform_cap(PADAPTER adapter, struct sta_info *sta,
 	mlme = &adapter->mlmepriv;
 
 	if (is_supported_ht(sta->wireless_mode) == _FALSE)
-		return;
+		goto get_bfcap_next;
 
 	/* HT */
 	if (check_fwstate(mlme, WIFI_AP_STATE)) {
@@ -155,8 +154,8 @@ static void _get_sta_beamform_cap(PADAPTER adapter, struct sta_info *sta,
 		}
 	}
 
+get_bfcap_next:
 #ifdef CONFIG_80211AC_VHT
-
 	if (is_supported_vht(sta->wireless_mode) == _FALSE)
 		return;
 
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/core/rtw_br_ext.c b/drivers/net/wireless/rockchip_wlan/rtl8821cs/core/rtw_br_ext.c
index 5e64a8f3edac..9a0effd8b7ea 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/core/rtw_br_ext.c
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/core/rtw_br_ext.c
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/core/rtw_bt_mp.c b/drivers/net/wireless/rockchip_wlan/rtl8821cs/core/rtw_bt_mp.c
index aa889bd45575..ce7aa29f7d11 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/core/rtw_bt_mp.c
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/core/rtw_bt_mp.c
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/core/rtw_btcoex.c b/drivers/net/wireless/rockchip_wlan/rtl8821cs/core/rtw_btcoex.c
index a0dcf219a482..5081cddfc2c7 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/core/rtw_btcoex.c
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/core/rtw_btcoex.c
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2013 - 2017 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/core/rtw_btcoex_wifionly.c b/drivers/net/wireless/rockchip_wlan/rtl8821cs/core/rtw_btcoex_wifionly.c
index ed3cfc750240..d9872b0221e7 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/core/rtw_btcoex_wifionly.c
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/core/rtw_btcoex_wifionly.c
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2013 - 2017 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/core/rtw_chplan.c b/drivers/net/wireless/rockchip_wlan/rtl8821cs/core/rtw_chplan.c
index 1c7ba5fa40a9..7a295ac0e55e 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/core/rtw_chplan.c
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/core/rtw_chplan.c
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2018 Realtek Corporation.
@@ -17,370 +16,349 @@
 
 #include <drv_types.h>
 
-#define RTW_DOMAIN_MAP_VER		"54"
-#define RTW_DOMAIN_MAP_M_VER	"g"
-#define RTW_COUNTRY_MAP_VER		"27"
+#define RTW_DOMAIN_MAP_VER		"57"
+#define RTW_DOMAIN_MAP_M_VER	"h"
+#define RTW_COUNTRY_MAP_VER		"31"
 
-struct ch_list_t {
-	u8 *len_ch_attr;
+struct ch_list_t {
+	u8 *len_ch_attr;
 };
 
-#define CLA_2G_12_14_PASSIVE	BIT0
-
-#define CLA_5G_B1_PASSIVE		BIT0
-#define CLA_5G_B2_PASSIVE		BIT1
-#define CLA_5G_B3_PASSIVE		BIT2
-#define CLA_5G_B4_PASSIVE		BIT3
-#define CLA_5G_B2_DFS			BIT4
-#define CLA_5G_B3_DFS			BIT5
-#define CLA_5G_B4_DFS			BIT6
-
-#define CH_LIST_ENT(_len, arg...) \
-	{.len_ch_attr = (u8[_len + 2]) {_len, ##arg}, }
-
-#define CH_LIST_LEN(_ch_list) (_ch_list.len_ch_attr[0])
-#define CH_LIST_CH(_ch_list, _i) (_ch_list.len_ch_attr[_i + 1])
-#define CH_LIST_ATTRIB(_ch_list) (_ch_list.len_ch_attr[CH_LIST_LEN(_ch_list) + 1])
-
-enum rtw_chd_2g {
-	RTW_CHD_2G_00 = 0,
-	RTW_CHD_2G_01 = 1,
-	RTW_CHD_2G_02 = 2,
-	RTW_CHD_2G_03 = 3,
-	RTW_CHD_2G_04 = 4,
-	RTW_CHD_2G_05 = 5,
-	RTW_CHD_2G_06 = 6,
-
-	RTW_CHD_2G_MAX,
-	RTW_CHD_2G_NULL = RTW_CHD_2G_00,
+#define CLA_2G_12_14_PASSIVE	BIT0
+
+#define CLA_5G_B1_PASSIVE		BIT0
+#define CLA_5G_B2_PASSIVE		BIT1
+#define CLA_5G_B3_PASSIVE		BIT2
+#define CLA_5G_B4_PASSIVE		BIT3
+#define CLA_5G_B2_DFS			BIT4
+#define CLA_5G_B3_DFS			BIT5
+#define CLA_5G_B4_DFS			BIT6
+
+#define CLA_6G_B1_PASSIVE		BIT0
+#define CLA_6G_B2_PASSIVE		BIT1
+#define CLA_6G_B3_PASSIVE		BIT2
+#define CLA_6G_B4_PASSIVE		BIT3
+
+#define CH_LIST_ENT(_len, arg...) \
+	{.len_ch_attr = (u8[_len + 2]) {_len, ##arg}, }
+
+#define CH_LIST_LEN(_ch_list) (_ch_list.len_ch_attr[0])
+#define CH_LIST_CH(_ch_list, _i) (_ch_list.len_ch_attr[_i + 1])
+#define CH_LIST_ATTRIB(_ch_list) (_ch_list.len_ch_attr[CH_LIST_LEN(_ch_list) + 1])
+
+enum rtw_chd_2g {
+	RTW_CHD_2G_INVALID = 0,
+
+	RTW_CHD_2G_00,
+	RTW_CHD_2G_01,
+	RTW_CHD_2G_02,
+	RTW_CHD_2G_03,
+	RTW_CHD_2G_04,
+	RTW_CHD_2G_05,
+	RTW_CHD_2G_06,
+
+	RTW_CHD_2G_MAX,
+	RTW_CHD_2G_NULL = RTW_CHD_2G_00,
 };
 
-enum rtw_chd_5g {
-	RTW_CHD_5G_00 = 0,
-	RTW_CHD_5G_01 = 1,
-	RTW_CHD_5G_02 = 2,
-	RTW_CHD_5G_03 = 3,
-	RTW_CHD_5G_04 = 4,
-	RTW_CHD_5G_05 = 5,
-	RTW_CHD_5G_06 = 6,
-	RTW_CHD_5G_07 = 7,
-	RTW_CHD_5G_08 = 8,
-	RTW_CHD_5G_09 = 9,
-	RTW_CHD_5G_10 = 10,
-	RTW_CHD_5G_11 = 11,
-	RTW_CHD_5G_12 = 12,
-	RTW_CHD_5G_13 = 13,
-	RTW_CHD_5G_14 = 14,
-	RTW_CHD_5G_15 = 15,
-	RTW_CHD_5G_16 = 16,
-	RTW_CHD_5G_17 = 17,
-	RTW_CHD_5G_18 = 18,
-	RTW_CHD_5G_19 = 19,
-	RTW_CHD_5G_20 = 20,
-	RTW_CHD_5G_21 = 21,
-	RTW_CHD_5G_22 = 22,
-	RTW_CHD_5G_23 = 23,
-	RTW_CHD_5G_24 = 24,
-	RTW_CHD_5G_25 = 25,
-	RTW_CHD_5G_26 = 26,
-	RTW_CHD_5G_27 = 27,
-	RTW_CHD_5G_28 = 28,
-	RTW_CHD_5G_29 = 29,
-	RTW_CHD_5G_30 = 30,
-	RTW_CHD_5G_31 = 31,
-	RTW_CHD_5G_32 = 32,
-	RTW_CHD_5G_33 = 33,
-	RTW_CHD_5G_34 = 34,
-	RTW_CHD_5G_35 = 35,
-	RTW_CHD_5G_36 = 36,
-	RTW_CHD_5G_37 = 37,
-	RTW_CHD_5G_38 = 38,
-	RTW_CHD_5G_39 = 39,
-	RTW_CHD_5G_40 = 40,
-	RTW_CHD_5G_41 = 41,
-	RTW_CHD_5G_42 = 42,
-	RTW_CHD_5G_43 = 43,
-	RTW_CHD_5G_44 = 44,
-	RTW_CHD_5G_45 = 45,
-	RTW_CHD_5G_46 = 46,
-	RTW_CHD_5G_47 = 47,
-	RTW_CHD_5G_48 = 48,
-	RTW_CHD_5G_49 = 49,
-	RTW_CHD_5G_50 = 50,
-	RTW_CHD_5G_51 = 51,
-
-	RTW_CHD_5G_MAX,
-	RTW_CHD_5G_NULL = RTW_CHD_5G_00,
+enum rtw_chd_5g {
+	RTW_CHD_5G_INVALID = 0,
+
+	RTW_CHD_5G_00,
+	RTW_CHD_5G_01,
+	RTW_CHD_5G_02,
+	RTW_CHD_5G_03,
+	RTW_CHD_5G_04,
+	RTW_CHD_5G_05,
+	RTW_CHD_5G_06,
+	RTW_CHD_5G_07,
+	RTW_CHD_5G_08,
+	RTW_CHD_5G_09,
+	RTW_CHD_5G_10,
+	RTW_CHD_5G_11,
+	RTW_CHD_5G_12,
+	RTW_CHD_5G_13,
+	RTW_CHD_5G_14,
+	RTW_CHD_5G_15,
+	RTW_CHD_5G_16,
+	RTW_CHD_5G_17,
+	RTW_CHD_5G_18,
+	RTW_CHD_5G_19,
+	RTW_CHD_5G_20,
+	RTW_CHD_5G_21,
+	RTW_CHD_5G_22,
+	RTW_CHD_5G_23,
+	RTW_CHD_5G_24,
+	RTW_CHD_5G_25,
+	RTW_CHD_5G_26,
+	RTW_CHD_5G_27,
+	RTW_CHD_5G_28,
+	RTW_CHD_5G_29,
+	RTW_CHD_5G_30,
+	RTW_CHD_5G_31,
+	RTW_CHD_5G_32,
+	RTW_CHD_5G_33,
+	RTW_CHD_5G_34,
+	RTW_CHD_5G_35,
+	RTW_CHD_5G_36,
+	RTW_CHD_5G_37,
+	RTW_CHD_5G_38,
+	RTW_CHD_5G_39,
+	RTW_CHD_5G_40,
+	RTW_CHD_5G_41,
+	RTW_CHD_5G_42,
+	RTW_CHD_5G_43,
+	RTW_CHD_5G_44,
+	RTW_CHD_5G_45,
+	RTW_CHD_5G_46,
+	RTW_CHD_5G_47,
+	RTW_CHD_5G_48,
+	RTW_CHD_5G_49,
+	RTW_CHD_5G_50,
+	RTW_CHD_5G_51,
+	RTW_CHD_5G_52,
+
+	RTW_CHD_5G_MAX,
+	RTW_CHD_5G_NULL = RTW_CHD_5G_00,
 };
 
-static const struct ch_list_t rtw_channel_def_2g[] = {
-	/* 0, RTW_CHD_2G_00 */	CH_LIST_ENT(0, 0),
-	/* 1, RTW_CHD_2G_01 */	CH_LIST_ENT(13, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, CLA_2G_12_14_PASSIVE),
-	/* 2, RTW_CHD_2G_02 */	CH_LIST_ENT(13, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0),
-	/* 3, RTW_CHD_2G_03 */	CH_LIST_ENT(11, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 0),
-	/* 4, RTW_CHD_2G_04 */	CH_LIST_ENT(14, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 0),
-	/* 5, RTW_CHD_2G_05 */	CH_LIST_ENT(4, 10, 11, 12, 13, 0),
-	/* 6, RTW_CHD_2G_06 */	CH_LIST_ENT(14, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, CLA_2G_12_14_PASSIVE),
-};
-
-#if CONFIG_IEEE80211_BAND_5GHZ
-static const struct ch_list_t rtw_channel_def_5g[] = {
-	/* 0, RTW_CHD_5G_00 */	CH_LIST_ENT(0, 0),
-	/* 1, RTW_CHD_5G_01 */	CH_LIST_ENT(21, 36, 40, 44, 48, 52, 56, 60, 64, 100, 104, 108, 112, 116, 132, 136, 140, 149, 153, 157, 161, 165, CLA_5G_B2_DFS | CLA_5G_B3_DFS),
-	/* 2, RTW_CHD_5G_02 */	CH_LIST_ENT(19, 36, 40, 44, 48, 52, 56, 60, 64, 100, 104, 108, 112, 116, 120, 124, 128, 132, 136, 140, CLA_5G_B2_DFS | CLA_5G_B3_DFS),
-	/* 3, RTW_CHD_5G_03 */	CH_LIST_ENT(24, 36, 40, 44, 48, 52, 56, 60, 64, 100, 104, 108, 112, 116, 120, 124, 128, 132, 136, 140, 149, 153, 157, 161, 165, CLA_5G_B2_DFS | CLA_5G_B3_DFS),
-	/* 4, RTW_CHD_5G_04 */	CH_LIST_ENT(22, 36, 40, 44, 48, 52, 56, 60, 64, 100, 104, 108, 112, 116, 120, 124, 128, 132, 149, 153, 157, 161, 165, CLA_5G_B2_DFS | CLA_5G_B3_DFS),
-	/* 5, RTW_CHD_5G_05 */	CH_LIST_ENT(19, 36, 40, 44, 48, 52, 56, 60, 64, 100, 104, 108, 112, 116, 120, 124, 149, 153, 157, 161, CLA_5G_B2_DFS | CLA_5G_B3_DFS),
-	/* 6, RTW_CHD_5G_06 */	CH_LIST_ENT(9, 36, 40, 44, 48, 149, 153, 157, 161, 165, 0),
-	/* 7, RTW_CHD_5G_07 */	CH_LIST_ENT(13, 36, 40, 44, 48, 52, 56, 60, 64, 149, 153, 157, 161, 165, CLA_5G_B2_DFS),
-	/* 8, RTW_CHD_5G_08 */	CH_LIST_ENT(12, 36, 40, 44, 48, 52, 56, 60, 64, 149, 153, 157, 161, CLA_5G_B2_DFS),
-	/* 9, RTW_CHD_5G_09 */	CH_LIST_ENT(5, 149, 153, 157, 161, 165, 0),
-	/* 10, RTW_CHD_5G_10 */	CH_LIST_ENT(8, 36, 40, 44, 48, 52, 56, 60, 64, CLA_5G_B2_DFS),
-	/* 11, RTW_CHD_5G_11 */	CH_LIST_ENT(11, 100, 104, 108, 112, 116, 120, 124, 128, 132, 136, 140, CLA_5G_B3_DFS),
-	/* 12, RTW_CHD_5G_12 */	CH_LIST_ENT(16, 56, 60, 64, 100, 104, 108, 112, 116, 132, 136, 140, 149, 153, 157, 161, 165, CLA_5G_B2_DFS | CLA_5G_B3_DFS),
-	/* 13, RTW_CHD_5G_13 */	CH_LIST_ENT(8, 56, 60, 64, 149, 153, 157, 161, 165, CLA_5G_B2_DFS),
-	/* 14, RTW_CHD_5G_14 */	CH_LIST_ENT(4, 36, 40, 44, 48, 0),
-	/* 15, RTW_CHD_5G_15 */	CH_LIST_ENT(4, 149, 153, 157, 161, 0),
-	/* 16, RTW_CHD_5G_16 */	CH_LIST_ENT(11, 100, 104, 108, 112, 116, 120, 124, 128, 132, 136, 140, 0),
-	/* 17, RTW_CHD_5G_17 */	CH_LIST_ENT(16, 36, 40, 44, 48, 52, 56, 60, 64, 132, 136, 140, 149, 153, 157, 161, 165, CLA_5G_B2_DFS | CLA_5G_B3_DFS),
-	/* 18, RTW_CHD_5G_18 */	CH_LIST_ENT(17, 52, 56, 60, 64, 100, 104, 108, 112, 116, 132, 136, 140, 149, 153, 157, 161, 165, CLA_5G_B2_DFS | CLA_5G_B3_DFS),
-	/* 19, RTW_CHD_5G_19 */	CH_LIST_ENT(16, 36, 40, 44, 48, 52, 56, 60, 64, 100, 104, 108, 112, 116, 132, 136, 140, CLA_5G_B2_DFS | CLA_5G_B3_DFS),
-	/* 20, RTW_CHD_5G_20 */	CH_LIST_ENT(20, 36, 40, 44, 48, 52, 56, 60, 64, 100, 104, 108, 112, 116, 132, 136, 140, 149, 153, 157, 161, CLA_5G_B2_DFS | CLA_5G_B3_DFS),
-	/* 21, RTW_CHD_5G_21 */	CH_LIST_ENT(11, 36, 40, 44, 48, 52, 56, 60, 64, 132, 136, 140, CLA_5G_B2_DFS | CLA_5G_B3_DFS),
-	/* 22, RTW_CHD_5G_22 */	CH_LIST_ENT(25, 36, 40, 44, 48, 52, 56, 60, 64, 100, 104, 108, 112, 116, 120, 124, 128, 132, 136, 140, 144, 149, 153, 157, 161, 165, CLA_5G_B2_DFS | CLA_5G_B3_DFS),
-	/* 23, RTW_CHD_5G_23 */	CH_LIST_ENT(21, 36, 40, 44, 48, 52, 56, 60, 64, 100, 104, 108, 112, 116, 120, 124, 128, 149, 153, 157, 161, 165, CLA_5G_B2_DFS | CLA_5G_B3_DFS),
-	/* 24, RTW_CHD_5G_24 */	CH_LIST_ENT(24, 36, 40, 44, 48, 52, 56, 60, 64, 100, 104, 108, 112, 116, 120, 124, 128, 132, 136, 140, 149, 153, 157, 161, 165, CLA_5G_B2_PASSIVE | CLA_5G_B3_PASSIVE | CLA_5G_B4_PASSIVE),
-	/* 25, RTW_CHD_5G_25 */	CH_LIST_ENT(24, 36, 40, 44, 48, 52, 56, 60, 64, 100, 104, 108, 112, 116, 120, 124, 128, 132, 136, 140, 149, 153, 157, 161, 165, CLA_5G_B2_PASSIVE | CLA_5G_B3_PASSIVE),
-	/* 26, RTW_CHD_5G_26 */	CH_LIST_ENT(24, 36, 40, 44, 48, 52, 56, 60, 64, 100, 104, 108, 112, 116, 120, 124, 128, 132, 136, 140, 149, 153, 157, 161, 165, CLA_5G_B1_PASSIVE | CLA_5G_B2_PASSIVE | CLA_5G_B3_PASSIVE),
-	/* 27, RTW_CHD_5G_27 */	CH_LIST_ENT(21, 36, 40, 44, 48, 52, 56, 60, 64, 100, 104, 108, 112, 116, 132, 136, 140, 149, 153, 157, 161, 165, CLA_5G_B2_PASSIVE | CLA_5G_B3_PASSIVE),
-	/* 28, RTW_CHD_5G_28 */	CH_LIST_ENT(13, 36, 40, 44, 48, 52, 56, 60, 64, 149, 153, 157, 161, 165, CLA_5G_B2_PASSIVE),
-	/* 29, RTW_CHD_5G_29 */	CH_LIST_ENT(13, 36, 40, 44, 48, 52, 56, 60, 64, 149, 153, 157, 161, 165, CLA_5G_B1_PASSIVE | CLA_5G_B2_PASSIVE),
-	/* 30, RTW_CHD_5G_30 */	CH_LIST_ENT(9, 36, 40, 44, 48, 149, 153, 157, 161, 165, CLA_5G_B1_PASSIVE | CLA_5G_B4_PASSIVE),
-	/* 31, RTW_CHD_5G_31 */	CH_LIST_ENT(24, 36, 40, 44, 48, 52, 56, 60, 64, 100, 104, 108, 112, 116, 120, 124, 128, 132, 136, 140, 149, 153, 157, 161, 165, CLA_5G_B1_PASSIVE | CLA_5G_B2_PASSIVE | CLA_5G_B3_PASSIVE | CLA_5G_B4_PASSIVE),
-	/* 32, RTW_CHD_5G_32 */	CH_LIST_ENT(9, 52, 56, 60, 64, 149, 153, 157, 161, 165, CLA_5G_B2_DFS),
-	/* 33, RTW_CHD_5G_33 */	CH_LIST_ENT(22, 36, 40, 44, 48, 52, 56, 60, 64, 100, 104, 108, 112, 116, 132, 136, 140, 144, 149, 153, 157, 161, 165, CLA_5G_B2_DFS | CLA_5G_B3_DFS),
-	/* 34, RTW_CHD_5G_34 */	CH_LIST_ENT(13, 100, 104, 108, 112, 116, 132, 136, 140, 149, 153, 157, 161, 165, CLA_5G_B3_DFS),
-	/* 35, RTW_CHD_5G_35 */	CH_LIST_ENT(8, 100, 104, 108, 112, 116, 132, 136, 140, CLA_5G_B3_DFS),
-	/* 36, RTW_CHD_5G_36 */	CH_LIST_ENT(25, 36, 40, 44, 48, 52, 56, 60, 64, 100, 104, 108, 112, 116, 120, 124, 128, 132, 136, 140, 144, 149, 153, 157, 161, 165, CLA_5G_B1_PASSIVE | CLA_5G_B2_PASSIVE | CLA_5G_B2_DFS | CLA_5G_B3_PASSIVE | CLA_5G_B3_DFS | CLA_5G_B4_PASSIVE),
-	/* 37, RTW_CHD_5G_37 */	CH_LIST_ENT(8, 36, 40, 44, 48, 52, 56, 60, 64, CLA_5G_B1_PASSIVE | CLA_5G_B2_PASSIVE),
-	/* 38, RTW_CHD_5G_38 */	CH_LIST_ENT(16, 52, 56, 60, 64, 100, 104, 108, 112, 116, 120, 124, 128, 132, 136, 140, 144, CLA_5G_B2_DFS | CLA_5G_B3_DFS),
-	/* 39, RTW_CHD_5G_39 */	CH_LIST_ENT(21, 36, 40, 44, 48, 52, 56, 60, 64, 100, 104, 108, 112, 116, 120, 124, 128, 149, 153, 157, 161, 165, CLA_5G_B1_PASSIVE | CLA_5G_B2_DFS | CLA_5G_B3_DFS | CLA_5G_B4_DFS),
-	/* 40, RTW_CHD_5G_40 */	CH_LIST_ENT(21, 36, 40, 44, 48, 52, 56, 60, 64, 100, 104, 108, 112, 116, 132, 136, 140, 149, 153, 157, 161, 165, CLA_5G_B1_PASSIVE | CLA_5G_B2_DFS | CLA_5G_B3_DFS),
-	/* 41, RTW_CHD_5G_41 */	CH_LIST_ENT(24, 36, 40, 44, 48, 52, 56, 60, 64, 100, 104, 108, 112, 116, 120, 124, 128, 132, 136, 140, 149, 153, 157, 161, 165, CLA_5G_B2_DFS | CLA_5G_B3_DFS | CLA_5G_B4_PASSIVE),
-	/* 42, RTW_CHD_5G_42 */	CH_LIST_ENT(24, 36, 40, 44, 48, 52, 56, 60, 64, 100, 104, 108, 112, 116, 120, 124, 128, 132, 136, 140, 149, 153, 157, 161, 165, CLA_5G_B1_PASSIVE | CLA_5G_B2_DFS | CLA_5G_B3_DFS | CLA_5G_B4_PASSIVE),
-	/* 43, RTW_CHD_5G_43 */	CH_LIST_ENT(23, 36, 40, 44, 48, 52, 56, 60, 64, 100, 104, 108, 112, 116, 120, 124, 128, 136, 140, 149, 153, 157, 161, 165, CLA_5G_B1_PASSIVE | CLA_5G_B2_PASSIVE | CLA_5G_B3_PASSIVE | CLA_5G_B4_PASSIVE),
-	/* 44, RTW_CHD_5G_44 */	CH_LIST_ENT(21, 36, 40, 44, 48, 52, 56, 60, 64, 100, 104, 108, 112, 116, 132, 136, 140, 149, 153, 157, 161, 165, CLA_5G_B1_PASSIVE | CLA_5G_B2_PASSIVE | CLA_5G_B3_PASSIVE | CLA_5G_B4_PASSIVE),
-	/* 45, RTW_CHD_5G_45 */	CH_LIST_ENT(13, 36, 40, 44, 48, 52, 56, 60, 64, 149, 153, 157, 161, 165, CLA_5G_B1_PASSIVE | CLA_5G_B2_PASSIVE | CLA_5G_B4_PASSIVE),
-	/* 46, RTW_CHD_5G_46 */	CH_LIST_ENT(12, 36, 40, 44, 48, 52, 56, 60, 64, 149, 153, 157, 161, CLA_5G_B2_PASSIVE),
-	/* 47, RTW_CHD_5G_47 */	CH_LIST_ENT(19, 36, 40, 44, 48, 52, 56, 60, 64, 100, 104, 108, 112, 116, 120, 124, 128, 132, 136, 140, CLA_5G_B2_PASSIVE | CLA_5G_B3_PASSIVE),
-	/* 48, RTW_CHD_5G_48 */	CH_LIST_ENT(20, 36, 40, 44, 48, 52, 56, 60, 64, 100, 104, 108, 112, 116, 120, 124, 128, 132, 136, 140, 144, CLA_5G_B2_DFS | CLA_5G_B3_DFS),
-	/* 49, RTW_CHD_5G_49 */	CH_LIST_ENT(17, 36, 40, 44, 48, 52, 56, 60, 64, 100, 104, 108, 112, 116, 120, 124, 128, 132, CLA_5G_B2_DFS | CLA_5G_B3_DFS),
-	/* 50, RTW_CHD_5G_50 */	CH_LIST_ENT(17, 36, 40, 44, 48, 52, 56, 60, 64, 132, 136, 140, 144, 149, 153, 157, 161, 165, CLA_5G_B2_DFS | CLA_5G_B3_DFS),
-	/* 51, RTW_CHD_5G_51 */	CH_LIST_ENT(13, 36, 40, 44, 48, 52, 56, 60, 64, 100, 104, 108, 112, 116, CLA_5G_B2_DFS | CLA_5G_B3_DFS),
-};
-#endif /* CONFIG_IEEE80211_BAND_5GHZ */
+static const struct ch_list_t rtw_channel_def_2g[] = {
+	/* RTW_CHD_2G_INVALID */	CH_LIST_ENT(0, 0),
+	/* RTW_CHD_2G_00 */	CH_LIST_ENT(0, 0),
+	/* RTW_CHD_2G_01 */	CH_LIST_ENT(13, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, CLA_2G_12_14_PASSIVE),
+	/* RTW_CHD_2G_02 */	CH_LIST_ENT(13, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0),
+	/* RTW_CHD_2G_03 */	CH_LIST_ENT(11, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 0),
+	/* RTW_CHD_2G_04 */	CH_LIST_ENT(14, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 0),
+	/* RTW_CHD_2G_05 */	CH_LIST_ENT(4, 10, 11, 12, 13, 0),
+	/* RTW_CHD_2G_06 */	CH_LIST_ENT(14, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, CLA_2G_12_14_PASSIVE),
+};
+
+#if CONFIG_IEEE80211_BAND_5GHZ
+static const struct ch_list_t rtw_channel_def_5g[] = {
+	/* RTW_CHD_5G_INVALID */	CH_LIST_ENT(0, 0),
+	/* RTW_CHD_5G_00 */	CH_LIST_ENT(0, 0),
+	/* RTW_CHD_5G_01 */	CH_LIST_ENT(21, 36, 40, 44, 48, 52, 56, 60, 64, 100, 104, 108, 112, 116, 132, 136, 140, 149, 153, 157, 161, 165, CLA_5G_B2_DFS | CLA_5G_B3_DFS),
+	/* RTW_CHD_5G_02 */	CH_LIST_ENT(19, 36, 40, 44, 48, 52, 56, 60, 64, 100, 104, 108, 112, 116, 120, 124, 128, 132, 136, 140, CLA_5G_B2_DFS | CLA_5G_B3_DFS),
+	/* RTW_CHD_5G_03 */	CH_LIST_ENT(24, 36, 40, 44, 48, 52, 56, 60, 64, 100, 104, 108, 112, 116, 120, 124, 128, 132, 136, 140, 149, 153, 157, 161, 165, CLA_5G_B2_DFS | CLA_5G_B3_DFS),
+	/* RTW_CHD_5G_04 */	CH_LIST_ENT(22, 36, 40, 44, 48, 52, 56, 60, 64, 100, 104, 108, 112, 116, 120, 124, 128, 132, 149, 153, 157, 161, 165, CLA_5G_B2_DFS | CLA_5G_B3_DFS),
+	/* RTW_CHD_5G_05 */	CH_LIST_ENT(19, 36, 40, 44, 48, 52, 56, 60, 64, 100, 104, 108, 112, 116, 120, 124, 149, 153, 157, 161, CLA_5G_B2_DFS | CLA_5G_B3_DFS),
+	/* RTW_CHD_5G_06 */	CH_LIST_ENT(9, 36, 40, 44, 48, 149, 153, 157, 161, 165, 0),
+	/* RTW_CHD_5G_07 */	CH_LIST_ENT(13, 36, 40, 44, 48, 52, 56, 60, 64, 149, 153, 157, 161, 165, CLA_5G_B2_DFS),
+	/* RTW_CHD_5G_08 */	CH_LIST_ENT(12, 36, 40, 44, 48, 52, 56, 60, 64, 149, 153, 157, 161, CLA_5G_B2_DFS),
+	/* RTW_CHD_5G_09 */	CH_LIST_ENT(5, 149, 153, 157, 161, 165, 0),
+	/* RTW_CHD_5G_10 */	CH_LIST_ENT(8, 36, 40, 44, 48, 52, 56, 60, 64, CLA_5G_B2_DFS),
+	/* RTW_CHD_5G_11 */	CH_LIST_ENT(11, 100, 104, 108, 112, 116, 120, 124, 128, 132, 136, 140, CLA_5G_B3_DFS),
+	/* RTW_CHD_5G_12 */	CH_LIST_ENT(16, 56, 60, 64, 100, 104, 108, 112, 116, 132, 136, 140, 149, 153, 157, 161, 165, CLA_5G_B2_DFS | CLA_5G_B3_DFS),
+	/* RTW_CHD_5G_13 */	CH_LIST_ENT(8, 56, 60, 64, 149, 153, 157, 161, 165, CLA_5G_B2_DFS),
+	/* RTW_CHD_5G_14 */	CH_LIST_ENT(4, 36, 40, 44, 48, 0),
+	/* RTW_CHD_5G_15 */	CH_LIST_ENT(4, 149, 153, 157, 161, 0),
+	/* RTW_CHD_5G_16 */	CH_LIST_ENT(11, 100, 104, 108, 112, 116, 120, 124, 128, 132, 136, 140, 0),
+	/* RTW_CHD_5G_17 */	CH_LIST_ENT(16, 36, 40, 44, 48, 52, 56, 60, 64, 132, 136, 140, 149, 153, 157, 161, 165, CLA_5G_B2_DFS | CLA_5G_B3_DFS),
+	/* RTW_CHD_5G_18 */	CH_LIST_ENT(17, 52, 56, 60, 64, 100, 104, 108, 112, 116, 132, 136, 140, 149, 153, 157, 161, 165, CLA_5G_B2_DFS | CLA_5G_B3_DFS),
+	/* RTW_CHD_5G_19 */	CH_LIST_ENT(16, 36, 40, 44, 48, 52, 56, 60, 64, 100, 104, 108, 112, 116, 132, 136, 140, CLA_5G_B2_DFS | CLA_5G_B3_DFS),
+	/* RTW_CHD_5G_20 */	CH_LIST_ENT(20, 36, 40, 44, 48, 52, 56, 60, 64, 100, 104, 108, 112, 116, 132, 136, 140, 149, 153, 157, 161, CLA_5G_B2_DFS | CLA_5G_B3_DFS),
+	/* RTW_CHD_5G_21 */	CH_LIST_ENT(11, 36, 40, 44, 48, 52, 56, 60, 64, 132, 136, 140, CLA_5G_B2_DFS | CLA_5G_B3_DFS),
+	/* RTW_CHD_5G_22 */	CH_LIST_ENT(25, 36, 40, 44, 48, 52, 56, 60, 64, 100, 104, 108, 112, 116, 120, 124, 128, 132, 136, 140, 144, 149, 153, 157, 161, 165, CLA_5G_B2_DFS | CLA_5G_B3_DFS),
+	/* RTW_CHD_5G_23 */	CH_LIST_ENT(21, 36, 40, 44, 48, 52, 56, 60, 64, 100, 104, 108, 112, 116, 120, 124, 128, 149, 153, 157, 161, 165, CLA_5G_B2_DFS | CLA_5G_B3_DFS),
+	/* RTW_CHD_5G_24 */	CH_LIST_ENT(24, 36, 40, 44, 48, 52, 56, 60, 64, 100, 104, 108, 112, 116, 120, 124, 128, 132, 136, 140, 149, 153, 157, 161, 165, CLA_5G_B2_PASSIVE | CLA_5G_B3_PASSIVE | CLA_5G_B4_PASSIVE),
+	/* RTW_CHD_5G_25 */	CH_LIST_ENT(24, 36, 40, 44, 48, 52, 56, 60, 64, 100, 104, 108, 112, 116, 120, 124, 128, 132, 136, 140, 149, 153, 157, 161, 165, CLA_5G_B2_PASSIVE | CLA_5G_B3_PASSIVE),
+	/* RTW_CHD_5G_26 */	CH_LIST_ENT(24, 36, 40, 44, 48, 52, 56, 60, 64, 100, 104, 108, 112, 116, 120, 124, 128, 132, 136, 140, 149, 153, 157, 161, 165, CLA_5G_B1_PASSIVE | CLA_5G_B2_PASSIVE | CLA_5G_B3_PASSIVE),
+	/* RTW_CHD_5G_27 */	CH_LIST_ENT(21, 36, 40, 44, 48, 52, 56, 60, 64, 100, 104, 108, 112, 116, 132, 136, 140, 149, 153, 157, 161, 165, CLA_5G_B2_PASSIVE | CLA_5G_B3_PASSIVE),
+	/* RTW_CHD_5G_28 */	CH_LIST_ENT(13, 36, 40, 44, 48, 52, 56, 60, 64, 149, 153, 157, 161, 165, CLA_5G_B2_PASSIVE),
+	/* RTW_CHD_5G_29 */	CH_LIST_ENT(13, 36, 40, 44, 48, 52, 56, 60, 64, 149, 153, 157, 161, 165, CLA_5G_B1_PASSIVE | CLA_5G_B2_PASSIVE),
+	/* RTW_CHD_5G_30 */	CH_LIST_ENT(9, 36, 40, 44, 48, 149, 153, 157, 161, 165, CLA_5G_B1_PASSIVE | CLA_5G_B4_PASSIVE),
+	/* RTW_CHD_5G_31 */	CH_LIST_ENT(24, 36, 40, 44, 48, 52, 56, 60, 64, 100, 104, 108, 112, 116, 120, 124, 128, 132, 136, 140, 149, 153, 157, 161, 165, CLA_5G_B1_PASSIVE | CLA_5G_B2_PASSIVE | CLA_5G_B3_PASSIVE | CLA_5G_B4_PASSIVE),
+	/* RTW_CHD_5G_32 */	CH_LIST_ENT(9, 52, 56, 60, 64, 149, 153, 157, 161, 165, CLA_5G_B2_DFS),
+	/* RTW_CHD_5G_33 */	CH_LIST_ENT(22, 36, 40, 44, 48, 52, 56, 60, 64, 100, 104, 108, 112, 116, 132, 136, 140, 144, 149, 153, 157, 161, 165, CLA_5G_B2_DFS | CLA_5G_B3_DFS),
+	/* RTW_CHD_5G_34 */	CH_LIST_ENT(13, 100, 104, 108, 112, 116, 132, 136, 140, 149, 153, 157, 161, 165, CLA_5G_B3_DFS),
+	/* RTW_CHD_5G_35 */	CH_LIST_ENT(8, 100, 104, 108, 112, 116, 132, 136, 140, CLA_5G_B3_DFS),
+	/* RTW_CHD_5G_36 */	CH_LIST_ENT(25, 36, 40, 44, 48, 52, 56, 60, 64, 100, 104, 108, 112, 116, 120, 124, 128, 132, 136, 140, 144, 149, 153, 157, 161, 165, CLA_5G_B1_PASSIVE | CLA_5G_B2_PASSIVE | CLA_5G_B2_DFS | CLA_5G_B3_PASSIVE | CLA_5G_B3_DFS | CLA_5G_B4_PASSIVE),
+	/* RTW_CHD_5G_37 */	CH_LIST_ENT(8, 36, 40, 44, 48, 52, 56, 60, 64, CLA_5G_B1_PASSIVE | CLA_5G_B2_PASSIVE),
+	/* RTW_CHD_5G_38 */	CH_LIST_ENT(16, 52, 56, 60, 64, 100, 104, 108, 112, 116, 120, 124, 128, 132, 136, 140, 144, CLA_5G_B2_DFS | CLA_5G_B3_DFS),
+	/* RTW_CHD_5G_39 */	CH_LIST_ENT(21, 36, 40, 44, 48, 52, 56, 60, 64, 100, 104, 108, 112, 116, 120, 124, 128, 149, 153, 157, 161, 165, CLA_5G_B1_PASSIVE | CLA_5G_B2_DFS | CLA_5G_B3_DFS | CLA_5G_B4_DFS),
+	/* RTW_CHD_5G_40 */	CH_LIST_ENT(21, 36, 40, 44, 48, 52, 56, 60, 64, 100, 104, 108, 112, 116, 132, 136, 140, 149, 153, 157, 161, 165, CLA_5G_B1_PASSIVE | CLA_5G_B2_DFS | CLA_5G_B3_DFS),
+	/* RTW_CHD_5G_41 */	CH_LIST_ENT(24, 36, 40, 44, 48, 52, 56, 60, 64, 100, 104, 108, 112, 116, 120, 124, 128, 132, 136, 140, 149, 153, 157, 161, 165, CLA_5G_B2_DFS | CLA_5G_B3_DFS | CLA_5G_B4_PASSIVE),
+	/* RTW_CHD_5G_42 */	CH_LIST_ENT(24, 36, 40, 44, 48, 52, 56, 60, 64, 100, 104, 108, 112, 116, 120, 124, 128, 132, 136, 140, 149, 153, 157, 161, 165, CLA_5G_B1_PASSIVE | CLA_5G_B2_DFS | CLA_5G_B3_DFS | CLA_5G_B4_PASSIVE),
+	/* RTW_CHD_5G_43 */	CH_LIST_ENT(23, 36, 40, 44, 48, 52, 56, 60, 64, 100, 104, 108, 112, 116, 120, 124, 128, 136, 140, 149, 153, 157, 161, 165, CLA_5G_B1_PASSIVE | CLA_5G_B2_PASSIVE | CLA_5G_B3_PASSIVE | CLA_5G_B4_PASSIVE),
+	/* RTW_CHD_5G_44 */	CH_LIST_ENT(21, 36, 40, 44, 48, 52, 56, 60, 64, 100, 104, 108, 112, 116, 132, 136, 140, 149, 153, 157, 161, 165, CLA_5G_B1_PASSIVE | CLA_5G_B2_PASSIVE | CLA_5G_B3_PASSIVE | CLA_5G_B4_PASSIVE),
+	/* RTW_CHD_5G_45 */	CH_LIST_ENT(13, 36, 40, 44, 48, 52, 56, 60, 64, 149, 153, 157, 161, 165, CLA_5G_B1_PASSIVE | CLA_5G_B2_PASSIVE | CLA_5G_B4_PASSIVE),
+	/* RTW_CHD_5G_46 */	CH_LIST_ENT(12, 36, 40, 44, 48, 52, 56, 60, 64, 149, 153, 157, 161, CLA_5G_B2_PASSIVE),
+	/* RTW_CHD_5G_47 */	CH_LIST_ENT(19, 36, 40, 44, 48, 52, 56, 60, 64, 100, 104, 108, 112, 116, 120, 124, 128, 132, 136, 140, CLA_5G_B2_PASSIVE | CLA_5G_B3_PASSIVE),
+	/* RTW_CHD_5G_48 */	CH_LIST_ENT(20, 36, 40, 44, 48, 52, 56, 60, 64, 100, 104, 108, 112, 116, 120, 124, 128, 132, 136, 140, 144, CLA_5G_B2_DFS | CLA_5G_B3_DFS),
+	/* RTW_CHD_5G_49 */	CH_LIST_ENT(17, 36, 40, 44, 48, 52, 56, 60, 64, 100, 104, 108, 112, 116, 120, 124, 128, 132, CLA_5G_B2_DFS | CLA_5G_B3_DFS),
+	/* RTW_CHD_5G_50 */	CH_LIST_ENT(17, 36, 40, 44, 48, 52, 56, 60, 64, 132, 136, 140, 144, 149, 153, 157, 161, 165, CLA_5G_B2_DFS | CLA_5G_B3_DFS),
+	/* RTW_CHD_5G_51 */	CH_LIST_ENT(13, 36, 40, 44, 48, 52, 56, 60, 64, 100, 104, 108, 112, 116, CLA_5G_B2_DFS | CLA_5G_B3_DFS),
+	/* RTW_CHD_5G_52 */	CH_LIST_ENT(28, 36, 40, 44, 48, 52, 56, 60, 64, 100, 104, 108, 112, 116, 120, 124, 128, 132, 136, 140, 144, 149, 153, 157, 161, 165, 169, 173, 177, CLA_5G_B2_DFS | CLA_5G_B3_DFS),
+};
+#endif /* CONFIG_IEEE80211_BAND_5GHZ */
 
 struct chplan_ent_t {
-	u8 regd_2g; /* value of REGULATION_TXPWR_LMT */
-	u8 chd_2g;
+	u8 regd_2g; /* value of enum rtw_regd */
+	u8 chd_2g;
 #if CONFIG_IEEE80211_BAND_5GHZ
-	u8 regd_5g; /* value of REGULATION_TXPWR_LMT */
-	u8 chd_5g;
+	u8 regd_5g; /* value of enum rtw_regd */
+	u8 chd_5g;
 #endif
 };
 
 #if CONFIG_IEEE80211_BAND_5GHZ
-#define CHPLAN_ENT(_regd_2g, _chd_2g, _regd_5g, _chd_5g) {.regd_2g = _regd_2g, .chd_2g = _chd_2g, .regd_5g = _regd_5g, .chd_5g = _chd_5g}
+#define CHPLAN_ENT(_regd_2g, _chd_2g, _regd_5g, _chd_5g) {.regd_2g = RTW_REGD_##_regd_2g, .chd_2g = RTW_CHD_2G_##_chd_2g, .regd_5g = RTW_REGD_##_regd_5g, .chd_5g = RTW_CHD_5G_##_chd_5g}
 #else
-#define CHPLAN_ENT(_regd_2g, _chd_2g, _regd_5g, _chd_5g) {.regd_2g = _regd_2g, .chd_2g = _chd_2g}
+#define CHPLAN_ENT(_regd_2g, _chd_2g, _regd_5g, _chd_5g) {.regd_2g = RTW_REGD_##_regd_2g, .chd_2g = RTW_CHD_2G_##_chd_2g}
 #endif
 
-#define CHPLAN_ENT_NOT_DEFINED CHPLAN_ENT(TXPWR_LMT_NONE, RTW_CHD_2G_NULL, TXPWR_LMT_NONE, RTW_CHD_5G_NULL)
-
-static const struct chplan_ent_t RTW_ChannelPlanMap[] = {
-	/* 0x00 */	CHPLAN_ENT(TXPWR_LMT_ETSI,		RTW_CHD_2G_02,	TXPWR_LMT_ETSI,		RTW_CHD_5G_49),
-	/* 0x01 */	CHPLAN_ENT(TXPWR_LMT_ETSI,		RTW_CHD_2G_02,	TXPWR_LMT_ETSI,		RTW_CHD_5G_50),
-	/* 0x02 */	CHPLAN_ENT(TXPWR_LMT_ETSI,		RTW_CHD_2G_03,	TXPWR_LMT_ETSI,		RTW_CHD_5G_07),
-	/* 0x03 */	CHPLAN_ENT(TXPWR_LMT_ACMA,		RTW_CHD_2G_02,	TXPWR_LMT_ACMA,		RTW_CHD_5G_33),
-	/* 0x04 */	CHPLAN_ENT(TXPWR_LMT_ETSI,		RTW_CHD_2G_02,	TXPWR_LMT_ETSI,		RTW_CHD_5G_51),
-	/* 0x05 */	CHPLAN_ENT_NOT_DEFINED,
-	/* 0x06 */	CHPLAN_ENT_NOT_DEFINED,
-	/* 0x07 */	CHPLAN_ENT_NOT_DEFINED,
-	/* 0x08 */	CHPLAN_ENT_NOT_DEFINED,
-	/* 0x09 */	CHPLAN_ENT_NOT_DEFINED,
-	/* 0x0A */	CHPLAN_ENT_NOT_DEFINED,
-	/* 0x0B */	CHPLAN_ENT_NOT_DEFINED,
-	/* 0x0C */	CHPLAN_ENT_NOT_DEFINED,
-	/* 0x0D */	CHPLAN_ENT_NOT_DEFINED,
-	/* 0x0E */	CHPLAN_ENT_NOT_DEFINED,
-	/* 0x0F */	CHPLAN_ENT_NOT_DEFINED,
-	/* 0x10 */	CHPLAN_ENT_NOT_DEFINED,
-	/* 0x11 */	CHPLAN_ENT_NOT_DEFINED,
-	/* 0x12 */	CHPLAN_ENT_NOT_DEFINED,
-	/* 0x13 */	CHPLAN_ENT_NOT_DEFINED,
-	/* 0x14 */	CHPLAN_ENT_NOT_DEFINED,
-	/* 0x15 */	CHPLAN_ENT_NOT_DEFINED,
-	/* 0x16 */	CHPLAN_ENT_NOT_DEFINED,
-	/* 0x17 */	CHPLAN_ENT_NOT_DEFINED,
-	/* 0x18 */	CHPLAN_ENT_NOT_DEFINED,
-	/* 0x19 */	CHPLAN_ENT_NOT_DEFINED,
-	/* 0x1A */	CHPLAN_ENT_NOT_DEFINED,
-	/* 0x1B */	CHPLAN_ENT_NOT_DEFINED,
-	/* 0x1C */	CHPLAN_ENT_NOT_DEFINED,
-	/* 0x1D */	CHPLAN_ENT_NOT_DEFINED,
-	/* 0x1E */	CHPLAN_ENT_NOT_DEFINED,
-	/* 0x1F */	CHPLAN_ENT_NOT_DEFINED,
-	/* 0x20 */	CHPLAN_ENT(TXPWR_LMT_WW,		RTW_CHD_2G_01,	TXPWR_LMT_NONE,		RTW_CHD_5G_00),
-	/* 0x21 */	CHPLAN_ENT(TXPWR_LMT_ETSI,		RTW_CHD_2G_02,	TXPWR_LMT_NONE,		RTW_CHD_5G_00),
-	/* 0x22 */	CHPLAN_ENT(TXPWR_LMT_FCC,		RTW_CHD_2G_03,	TXPWR_LMT_NONE,		RTW_CHD_5G_00),
-	/* 0x23 */	CHPLAN_ENT(TXPWR_LMT_MKK,		RTW_CHD_2G_04,	TXPWR_LMT_NONE,		RTW_CHD_5G_00),
-	/* 0x24 */	CHPLAN_ENT(TXPWR_LMT_ETSI,		RTW_CHD_2G_05,	TXPWR_LMT_NONE,		RTW_CHD_5G_00),
-	/* 0x25 */	CHPLAN_ENT(TXPWR_LMT_FCC,		RTW_CHD_2G_03,	TXPWR_LMT_FCC,		RTW_CHD_5G_03),
-	/* 0x26 */	CHPLAN_ENT(TXPWR_LMT_ETSI,		RTW_CHD_2G_01,	TXPWR_LMT_ETSI,		RTW_CHD_5G_02),
-	/* 0x27 */	CHPLAN_ENT(TXPWR_LMT_MKK,		RTW_CHD_2G_04,	TXPWR_LMT_MKK,		RTW_CHD_5G_02),
-	/* 0x28 */	CHPLAN_ENT(TXPWR_LMT_KCC,		RTW_CHD_2G_01,	TXPWR_LMT_KCC,		RTW_CHD_5G_05),
-	/* 0x29 */	CHPLAN_ENT(TXPWR_LMT_FCC,		RTW_CHD_2G_01,	TXPWR_LMT_FCC,		RTW_CHD_5G_06),
-	/* 0x2A */	CHPLAN_ENT(TXPWR_LMT_FCC,		RTW_CHD_2G_02,	TXPWR_LMT_NONE,		RTW_CHD_5G_00),
-	/* 0x2B */	CHPLAN_ENT(TXPWR_LMT_IC,		RTW_CHD_2G_02,	TXPWR_LMT_IC,		RTW_CHD_5G_33),
-	/* 0x2C */	CHPLAN_ENT(TXPWR_LMT_MKK,		RTW_CHD_2G_02,	TXPWR_LMT_NONE,		RTW_CHD_5G_00),
-	/* 0x2D */	CHPLAN_ENT(TXPWR_LMT_CHILE,		RTW_CHD_2G_01,	TXPWR_LMT_CHILE,	RTW_CHD_5G_22),
-	/* 0x2E */	CHPLAN_ENT(TXPWR_LMT_WW,		RTW_CHD_2G_03,	TXPWR_LMT_WW,		RTW_CHD_5G_37),
-	/* 0x2F */	CHPLAN_ENT(TXPWR_LMT_CHILE,		RTW_CHD_2G_01,	TXPWR_LMT_CHILE,	RTW_CHD_5G_38),
-	/* 0x30 */	CHPLAN_ENT(TXPWR_LMT_FCC,		RTW_CHD_2G_01,	TXPWR_LMT_FCC,		RTW_CHD_5G_07),
-	/* 0x31 */	CHPLAN_ENT(TXPWR_LMT_FCC,		RTW_CHD_2G_01,	TXPWR_LMT_FCC,		RTW_CHD_5G_08),
-	/* 0x32 */	CHPLAN_ENT(TXPWR_LMT_FCC,		RTW_CHD_2G_01,	TXPWR_LMT_FCC,		RTW_CHD_5G_09),
-	/* 0x33 */	CHPLAN_ENT(TXPWR_LMT_FCC,		RTW_CHD_2G_01,	TXPWR_LMT_FCC,		RTW_CHD_5G_10),
-	/* 0x34 */	CHPLAN_ENT(TXPWR_LMT_FCC,		RTW_CHD_2G_03,	TXPWR_LMT_FCC,		RTW_CHD_5G_01),
-	/* 0x35 */	CHPLAN_ENT(TXPWR_LMT_ETSI,		RTW_CHD_2G_01,	TXPWR_LMT_ETSI,		RTW_CHD_5G_03),
-	/* 0x36 */	CHPLAN_ENT(TXPWR_LMT_ETSI,		RTW_CHD_2G_01,	TXPWR_LMT_ETSI,		RTW_CHD_5G_04),
-	/* 0x37 */	CHPLAN_ENT(TXPWR_LMT_MKK,		RTW_CHD_2G_04,	TXPWR_LMT_MKK,		RTW_CHD_5G_10),
-	/* 0x38 */	CHPLAN_ENT(TXPWR_LMT_MKK,		RTW_CHD_2G_04,	TXPWR_LMT_MKK,		RTW_CHD_5G_11),
-	/* 0x39 */	CHPLAN_ENT(TXPWR_LMT_NCC,		RTW_CHD_2G_03,	TXPWR_LMT_NCC,		RTW_CHD_5G_12),
-	/* 0x3A */	CHPLAN_ENT(TXPWR_LMT_ETSI,		RTW_CHD_2G_02,	TXPWR_LMT_ETSI,		RTW_CHD_5G_02),
-	/* 0x3B */	CHPLAN_ENT(TXPWR_LMT_ACMA,		RTW_CHD_2G_02,	TXPWR_LMT_ACMA,		RTW_CHD_5G_01),
-	/* 0x3C */	CHPLAN_ENT(TXPWR_LMT_ETSI,		RTW_CHD_2G_02,	TXPWR_LMT_ETSI,		RTW_CHD_5G_10),
-	/* 0x3D */	CHPLAN_ENT(TXPWR_LMT_ETSI,		RTW_CHD_2G_02,	TXPWR_LMT_ETSI,		RTW_CHD_5G_15),
-	/* 0x3E */	CHPLAN_ENT(TXPWR_LMT_KCC,		RTW_CHD_2G_02,	TXPWR_LMT_KCC,		RTW_CHD_5G_03),
-	/* 0x3F */	CHPLAN_ENT(TXPWR_LMT_FCC,		RTW_CHD_2G_03,	TXPWR_LMT_FCC,		RTW_CHD_5G_22),
-	/* 0x40 */	CHPLAN_ENT(TXPWR_LMT_NCC,		RTW_CHD_2G_03,	TXPWR_LMT_NCC,		RTW_CHD_5G_13),
-	/* 0x41 */	CHPLAN_ENT(TXPWR_LMT_WW,		RTW_CHD_2G_06,	TXPWR_LMT_NONE,		RTW_CHD_5G_00),
-	/* 0x42 */	CHPLAN_ENT(TXPWR_LMT_ETSI,		RTW_CHD_2G_02,	TXPWR_LMT_ETSI,		RTW_CHD_5G_14),
-	/* 0x43 */	CHPLAN_ENT(TXPWR_LMT_FCC,		RTW_CHD_2G_03,	TXPWR_LMT_FCC,		RTW_CHD_5G_06),
-	/* 0x44 */	CHPLAN_ENT(TXPWR_LMT_NCC,		RTW_CHD_2G_03,	TXPWR_LMT_NCC,		RTW_CHD_5G_09),
-	/* 0x45 */	CHPLAN_ENT(TXPWR_LMT_ACMA,		RTW_CHD_2G_01,	TXPWR_LMT_ACMA,		RTW_CHD_5G_01),
-	/* 0x46 */	CHPLAN_ENT(TXPWR_LMT_FCC,		RTW_CHD_2G_03,	TXPWR_LMT_FCC,		RTW_CHD_5G_15),
-	/* 0x47 */	CHPLAN_ENT(TXPWR_LMT_ETSI,		RTW_CHD_2G_01,	TXPWR_LMT_ETSI,		RTW_CHD_5G_10),
-	/* 0x48 */	CHPLAN_ENT(TXPWR_LMT_ETSI,		RTW_CHD_2G_01,	TXPWR_LMT_ETSI,		RTW_CHD_5G_07),
-	/* 0x49 */	CHPLAN_ENT(TXPWR_LMT_ETSI,		RTW_CHD_2G_01,	TXPWR_LMT_ETSI,		RTW_CHD_5G_06),
-	/* 0x4A */	CHPLAN_ENT(TXPWR_LMT_IC,		RTW_CHD_2G_03,	TXPWR_LMT_IC,		RTW_CHD_5G_33),
-	/* 0x4B */	CHPLAN_ENT(TXPWR_LMT_KCC,		RTW_CHD_2G_02,	TXPWR_LMT_KCC,		RTW_CHD_5G_22),
-	/* 0x4C */	CHPLAN_ENT(TXPWR_LMT_FCC,		RTW_CHD_2G_03,	TXPWR_LMT_FCC,		RTW_CHD_5G_28),
-	/* 0x4D */	CHPLAN_ENT(TXPWR_LMT_MEXICO,	RTW_CHD_2G_02,	TXPWR_LMT_MEXICO,	RTW_CHD_5G_01),
-	/* 0x4E */	CHPLAN_ENT(TXPWR_LMT_ETSI,		RTW_CHD_2G_02,	TXPWR_LMT_ETSI,		RTW_CHD_5G_42),
-	/* 0x4F */	CHPLAN_ENT(TXPWR_LMT_NONE,		RTW_CHD_2G_00,	TXPWR_LMT_MKK,		RTW_CHD_5G_43),
-	/* 0x50 */	CHPLAN_ENT(TXPWR_LMT_ETSI,		RTW_CHD_2G_01,	TXPWR_LMT_ETSI,		RTW_CHD_5G_16),
-	/* 0x51 */	CHPLAN_ENT(TXPWR_LMT_ETSI,		RTW_CHD_2G_01,	TXPWR_LMT_ETSI,		RTW_CHD_5G_09),
-	/* 0x52 */	CHPLAN_ENT(TXPWR_LMT_ETSI,		RTW_CHD_2G_01,	TXPWR_LMT_ETSI,		RTW_CHD_5G_17),
-	/* 0x53 */	CHPLAN_ENT(TXPWR_LMT_NCC,		RTW_CHD_2G_03,	TXPWR_LMT_NCC,		RTW_CHD_5G_18),
-	/* 0x54 */	CHPLAN_ENT(TXPWR_LMT_ETSI,		RTW_CHD_2G_01,	TXPWR_LMT_ETSI,		RTW_CHD_5G_15),
-	/* 0x55 */	CHPLAN_ENT(TXPWR_LMT_FCC,		RTW_CHD_2G_03,	TXPWR_LMT_FCC,		RTW_CHD_5G_01),
-	/* 0x56 */	CHPLAN_ENT(TXPWR_LMT_ETSI,		RTW_CHD_2G_01,	TXPWR_LMT_ETSI,		RTW_CHD_5G_19),
-	/* 0x57 */	CHPLAN_ENT(TXPWR_LMT_FCC,		RTW_CHD_2G_03,	TXPWR_LMT_FCC,		RTW_CHD_5G_20),
-	/* 0x58 */	CHPLAN_ENT(TXPWR_LMT_MKK,		RTW_CHD_2G_02,	TXPWR_LMT_MKK,		RTW_CHD_5G_14),
-	/* 0x59 */	CHPLAN_ENT(TXPWR_LMT_ETSI,		RTW_CHD_2G_01,	TXPWR_LMT_ETSI,		RTW_CHD_5G_21),
-	/* 0x5A */	CHPLAN_ENT(TXPWR_LMT_NONE,		RTW_CHD_2G_00,	TXPWR_LMT_FCC,		RTW_CHD_5G_44),
-	/* 0x5B */	CHPLAN_ENT(TXPWR_LMT_NONE,		RTW_CHD_2G_00,	TXPWR_LMT_FCC,		RTW_CHD_5G_45),
-	/* 0x5C */	CHPLAN_ENT(TXPWR_LMT_NONE,		RTW_CHD_2G_00,	TXPWR_LMT_FCC,		RTW_CHD_5G_43),
-	/* 0x5D */	CHPLAN_ENT(TXPWR_LMT_ETSI,		RTW_CHD_2G_02,	TXPWR_LMT_ETSI,		RTW_CHD_5G_08),
-	/* 0x5E */	CHPLAN_ENT(TXPWR_LMT_ETSI,		RTW_CHD_2G_02,	TXPWR_LMT_ETSI,		RTW_CHD_5G_03),
-	/* 0x5F */	CHPLAN_ENT(TXPWR_LMT_MKK,		RTW_CHD_2G_02,	TXPWR_LMT_MKK,		RTW_CHD_5G_47),
-	/* 0x60 */	CHPLAN_ENT(TXPWR_LMT_FCC,		RTW_CHD_2G_03,	TXPWR_LMT_FCC,		RTW_CHD_5G_09),
-	/* 0x61 */	CHPLAN_ENT(TXPWR_LMT_FCC,		RTW_CHD_2G_02,	TXPWR_LMT_FCC,		RTW_CHD_5G_01),
-	/* 0x62 */	CHPLAN_ENT(TXPWR_LMT_FCC,		RTW_CHD_2G_02,	TXPWR_LMT_FCC,		RTW_CHD_5G_03),
-	/* 0x63 */	CHPLAN_ENT(TXPWR_LMT_ETSI,		RTW_CHD_2G_01,	TXPWR_LMT_ETSI,		RTW_CHD_5G_23),
-	/* 0x64 */	CHPLAN_ENT(TXPWR_LMT_MKK,		RTW_CHD_2G_02,	TXPWR_LMT_MKK,		RTW_CHD_5G_24),
-	/* 0x65 */	CHPLAN_ENT(TXPWR_LMT_ETSI,		RTW_CHD_2G_02,	TXPWR_LMT_ETSI,		RTW_CHD_5G_24),
-	/* 0x66 */	CHPLAN_ENT(TXPWR_LMT_FCC,		RTW_CHD_2G_03,	TXPWR_LMT_FCC,		RTW_CHD_5G_27),
-	/* 0x67 */	CHPLAN_ENT(TXPWR_LMT_FCC,		RTW_CHD_2G_03,	TXPWR_LMT_FCC,		RTW_CHD_5G_25),
-	/* 0x68 */	CHPLAN_ENT(TXPWR_LMT_FCC,		RTW_CHD_2G_02,	TXPWR_LMT_FCC,		RTW_CHD_5G_27),
-	/* 0x69 */	CHPLAN_ENT(TXPWR_LMT_FCC,		RTW_CHD_2G_02,	TXPWR_LMT_FCC,		RTW_CHD_5G_25),
-	/* 0x6A */	CHPLAN_ENT(TXPWR_LMT_ETSI,		RTW_CHD_2G_02,	TXPWR_LMT_ETSI,		RTW_CHD_5G_25),
-	/* 0x6B */	CHPLAN_ENT(TXPWR_LMT_FCC,		RTW_CHD_2G_01,	TXPWR_LMT_FCC,		RTW_CHD_5G_29),
-	/* 0x6C */	CHPLAN_ENT(TXPWR_LMT_FCC,		RTW_CHD_2G_01,	TXPWR_LMT_FCC,		RTW_CHD_5G_26),
-	/* 0x6D */	CHPLAN_ENT(TXPWR_LMT_FCC,		RTW_CHD_2G_02,	TXPWR_LMT_FCC,		RTW_CHD_5G_28),
-	/* 0x6E */	CHPLAN_ENT(TXPWR_LMT_FCC,		RTW_CHD_2G_01,	TXPWR_LMT_FCC,		RTW_CHD_5G_25),
-	/* 0x6F */	CHPLAN_ENT(TXPWR_LMT_NONE,		RTW_CHD_2G_00,	TXPWR_LMT_ETSI,		RTW_CHD_5G_06),
-	/* 0x70 */	CHPLAN_ENT(TXPWR_LMT_NONE,		RTW_CHD_2G_00,	TXPWR_LMT_ETSI,		RTW_CHD_5G_30),
-	/* 0x71 */	CHPLAN_ENT(TXPWR_LMT_NONE,		RTW_CHD_2G_00,	TXPWR_LMT_ETSI,		RTW_CHD_5G_25),
-	/* 0x72 */	CHPLAN_ENT(TXPWR_LMT_NONE,		RTW_CHD_2G_00,	TXPWR_LMT_ETSI,		RTW_CHD_5G_31),
-	/* 0x73 */	CHPLAN_ENT(TXPWR_LMT_FCC,		RTW_CHD_2G_01,	TXPWR_LMT_FCC,		RTW_CHD_5G_01),
-	/* 0x74 */	CHPLAN_ENT(TXPWR_LMT_FCC,		RTW_CHD_2G_02,	TXPWR_LMT_FCC,		RTW_CHD_5G_19),
-	/* 0x75 */	CHPLAN_ENT(TXPWR_LMT_ETSI,		RTW_CHD_2G_01,	TXPWR_LMT_ETSI,		RTW_CHD_5G_32),
-	/* 0x76 */	CHPLAN_ENT(TXPWR_LMT_FCC,		RTW_CHD_2G_02,	TXPWR_LMT_FCC,		RTW_CHD_5G_22),
-	/* 0x77 */	CHPLAN_ENT(TXPWR_LMT_ETSI,		RTW_CHD_2G_01,	TXPWR_LMT_ETSI,		RTW_CHD_5G_34),
-	/* 0x78 */	CHPLAN_ENT(TXPWR_LMT_FCC,		RTW_CHD_2G_03,	TXPWR_LMT_FCC,		RTW_CHD_5G_35),
-	/* 0x79 */	CHPLAN_ENT(TXPWR_LMT_MKK,		RTW_CHD_2G_02,	TXPWR_LMT_MKK,		RTW_CHD_5G_02),
-	/* 0x7A */	CHPLAN_ENT(TXPWR_LMT_ETSI,		RTW_CHD_2G_02,	TXPWR_LMT_ETSI,		RTW_CHD_5G_28),
-	/* 0x7B */	CHPLAN_ENT(TXPWR_LMT_ETSI,		RTW_CHD_2G_02,	TXPWR_LMT_ETSI,		RTW_CHD_5G_46),
-	/* 0x7C */	CHPLAN_ENT(TXPWR_LMT_ETSI,		RTW_CHD_2G_02,	TXPWR_LMT_ETSI,		RTW_CHD_5G_47),
-	/* 0x7D */	CHPLAN_ENT(TXPWR_LMT_MKK,		RTW_CHD_2G_04,	TXPWR_LMT_MKK,		RTW_CHD_5G_48),
-	/* 0x7E */	CHPLAN_ENT(TXPWR_LMT_MKK,		RTW_CHD_2G_02,	TXPWR_LMT_MKK,		RTW_CHD_5G_48),
-	/* 0x7F */	CHPLAN_ENT(TXPWR_LMT_FCC,		RTW_CHD_2G_01,	TXPWR_LMT_FCC,		RTW_CHD_5G_03),
+#define CHPLAN_ENT_NOT_DEFINED CHPLAN_ENT(NA, INVALID, NA, INVALID)
+
+static const struct chplan_ent_t RTW_ChannelPlanMap[] = {
+	[0x00] = CHPLAN_ENT(ETSI , 02, ETSI , 49),
+	[0x01] = CHPLAN_ENT(ETSI , 02, ETSI , 50),
+	[0x02] = CHPLAN_ENT(ETSI , 03, ETSI , 07),
+	[0x03] = CHPLAN_ENT(ACMA , 02, ACMA , 33),
+	[0x04] = CHPLAN_ENT(ETSI , 02, ETSI , 51),
+	[0x05] = CHPLAN_ENT(ETSI , 02, ETSI , 06),
+	[0x06] = CHPLAN_ENT(ETSI , 02, ETSI , 07),
+	[0x07] = CHPLAN_ENT(ETSI , 02, ETSI , 23),
+	[0x08] = CHPLAN_ENT(ETSI , 02, ETSI , 21),
+	[0x09] = CHPLAN_ENT(ETSI , 02, ETSI , 17),
+	[0x1A] = CHPLAN_ENT(NA   , 00, NA   , 00),
+	[0x1B] = CHPLAN_ENT(FCC  , 02, FCC  , 52),
+	[0x20] = CHPLAN_ENT(WW   , 01, NA   , 00),
+	[0x21] = CHPLAN_ENT(ETSI , 02, NA   , 00),
+	[0x22] = CHPLAN_ENT(FCC  , 03, NA   , 00),
+	[0x23] = CHPLAN_ENT(MKK  , 04, NA   , 00),
+	[0x24] = CHPLAN_ENT(ETSI , 05, NA   , 00),
+	[0x25] = CHPLAN_ENT(FCC  , 03, FCC  , 03),
+	[0x26] = CHPLAN_ENT(ETSI , 01, ETSI , 02),
+	[0x27] = CHPLAN_ENT(MKK  , 04, MKK  , 02),
+	[0x28] = CHPLAN_ENT(KCC  , 01, KCC  , 05),
+	[0x29] = CHPLAN_ENT(FCC  , 01, FCC  , 06),
+	[0x2A] = CHPLAN_ENT(FCC  , 02, NA   , 00),
+	[0x2B] = CHPLAN_ENT(IC   , 02, IC   , 33),
+	[0x2C] = CHPLAN_ENT(MKK  , 02, NA   , 00),
+	[0x2D] = CHPLAN_ENT(CHILE, 01, CHILE, 22),
+	[0x2E] = CHPLAN_ENT(WW   , 03, WW   , 37),
+	[0x2F] = CHPLAN_ENT(CHILE, 01, CHILE, 38),
+	[0x30] = CHPLAN_ENT(FCC  , 01, FCC  , 07),
+	[0x31] = CHPLAN_ENT(FCC  , 01, FCC  , 08),
+	[0x32] = CHPLAN_ENT(FCC  , 01, FCC  , 09),
+	[0x33] = CHPLAN_ENT(FCC  , 01, FCC  , 10),
+	[0x34] = CHPLAN_ENT(FCC  , 03, FCC  , 01),
+	[0x35] = CHPLAN_ENT(ETSI , 01, ETSI , 03),
+	[0x36] = CHPLAN_ENT(ETSI , 01, ETSI , 04),
+	[0x37] = CHPLAN_ENT(MKK  , 04, MKK  , 10),
+	[0x38] = CHPLAN_ENT(MKK  , 04, MKK  , 11),
+	[0x39] = CHPLAN_ENT(NCC  , 03, NCC  , 12),
+	[0x3A] = CHPLAN_ENT(ETSI , 02, ETSI , 02),
+	[0x3B] = CHPLAN_ENT(ACMA , 02, ACMA , 01),
+	[0x3C] = CHPLAN_ENT(ETSI , 02, ETSI , 10),
+	[0x3D] = CHPLAN_ENT(ETSI , 02, ETSI , 15),
+	[0x3E] = CHPLAN_ENT(KCC  , 02, KCC  , 03),
+	[0x3F] = CHPLAN_ENT(FCC  , 03, FCC  , 22),
+	[0x40] = CHPLAN_ENT(NCC  , 03, NCC  , 13),
+	[0x41] = CHPLAN_ENT(WW   , 06, NA   , 00),
+	[0x42] = CHPLAN_ENT(ETSI , 02, ETSI , 14),
+	[0x43] = CHPLAN_ENT(FCC  , 03, FCC  , 06),
+	[0x44] = CHPLAN_ENT(NCC  , 03, NCC  , 09),
+	[0x45] = CHPLAN_ENT(ACMA , 01, ACMA , 01),
+	[0x46] = CHPLAN_ENT(FCC  , 03, FCC  , 15),
+	[0x47] = CHPLAN_ENT(ETSI , 01, ETSI , 10),
+	[0x48] = CHPLAN_ENT(ETSI , 01, ETSI , 07),
+	[0x49] = CHPLAN_ENT(ETSI , 01, ETSI , 06),
+	[0x4A] = CHPLAN_ENT(IC   , 03, IC   , 33),
+	[0x4B] = CHPLAN_ENT(KCC  , 02, KCC  , 22),
+	[0x4C] = CHPLAN_ENT(FCC  , 03, FCC  , 28),
+	[0x4D] = CHPLAN_ENT(MEX  , 02, MEX  , 01),
+	[0x4E] = CHPLAN_ENT(ETSI , 02, ETSI , 42),
+	[0x4F] = CHPLAN_ENT(NA   , 00, MKK  , 43),
+	[0x50] = CHPLAN_ENT(ETSI , 01, ETSI , 16),
+	[0x51] = CHPLAN_ENT(ETSI , 01, ETSI , 09),
+	[0x52] = CHPLAN_ENT(ETSI , 01, ETSI , 17),
+	[0x53] = CHPLAN_ENT(NCC  , 03, NCC  , 18),
+	[0x54] = CHPLAN_ENT(ETSI , 01, ETSI , 15),
+	[0x55] = CHPLAN_ENT(FCC  , 03, FCC  , 01),
+	[0x56] = CHPLAN_ENT(ETSI , 01, ETSI , 19),
+	[0x57] = CHPLAN_ENT(FCC  , 03, FCC  , 20),
+	[0x58] = CHPLAN_ENT(MKK  , 02, MKK  , 14),
+	[0x59] = CHPLAN_ENT(ETSI , 01, ETSI , 21),
+	[0x5A] = CHPLAN_ENT(NA   , 00, FCC  , 44),
+	[0x5B] = CHPLAN_ENT(NA   , 00, FCC  , 45),
+	[0x5C] = CHPLAN_ENT(NA   , 00, FCC  , 43),
+	[0x5D] = CHPLAN_ENT(ETSI , 02, ETSI , 08),
+	[0x5E] = CHPLAN_ENT(ETSI , 02, ETSI , 03),
+	[0x5F] = CHPLAN_ENT(MKK  , 02, MKK  , 47),
+	[0x60] = CHPLAN_ENT(FCC  , 03, FCC  , 09),
+	[0x61] = CHPLAN_ENT(FCC  , 02, FCC  , 01),
+	[0x62] = CHPLAN_ENT(FCC  , 02, FCC  , 03),
+	[0x63] = CHPLAN_ENT(ETSI , 01, ETSI , 23),
+	[0x64] = CHPLAN_ENT(MKK  , 02, MKK  , 24),
+	[0x65] = CHPLAN_ENT(ETSI , 02, ETSI , 24),
+	[0x66] = CHPLAN_ENT(FCC  , 03, FCC  , 27),
+	[0x67] = CHPLAN_ENT(FCC  , 03, FCC  , 25),
+	[0x68] = CHPLAN_ENT(FCC  , 02, FCC  , 27),
+	[0x69] = CHPLAN_ENT(FCC  , 02, FCC  , 25),
+	[0x6A] = CHPLAN_ENT(ETSI , 02, ETSI , 25),
+	[0x6B] = CHPLAN_ENT(FCC  , 01, FCC  , 29),
+	[0x6C] = CHPLAN_ENT(FCC  , 01, FCC  , 26),
+	[0x6D] = CHPLAN_ENT(FCC  , 02, FCC  , 28),
+	[0x6E] = CHPLAN_ENT(FCC  , 01, FCC  , 25),
+	[0x6F] = CHPLAN_ENT(NA   , 00, ETSI , 06),
+	[0x70] = CHPLAN_ENT(NA   , 00, ETSI , 30),
+	[0x71] = CHPLAN_ENT(NA   , 00, ETSI , 25),
+	[0x72] = CHPLAN_ENT(NA   , 00, ETSI , 31),
+	[0x73] = CHPLAN_ENT(FCC  , 01, FCC  , 01),
+	[0x74] = CHPLAN_ENT(FCC  , 02, FCC  , 19),
+	[0x75] = CHPLAN_ENT(ETSI , 01, ETSI , 32),
+	[0x76] = CHPLAN_ENT(FCC  , 02, FCC  , 22),
+	[0x77] = CHPLAN_ENT(ETSI , 01, ETSI , 34),
+	[0x78] = CHPLAN_ENT(FCC  , 03, FCC  , 35),
+	[0x79] = CHPLAN_ENT(MKK  , 02, MKK  , 02),
+	[0x7A] = CHPLAN_ENT(ETSI , 02, ETSI , 28),
+	[0x7B] = CHPLAN_ENT(ETSI , 02, ETSI , 46),
+	[0x7C] = CHPLAN_ENT(ETSI , 02, ETSI , 47),
+	[0x7D] = CHPLAN_ENT(MKK  , 04, MKK  , 48),
+	[0x7E] = CHPLAN_ENT(MKK  , 02, MKK  , 48),
+	[0x7F] = CHPLAN_ENT(WW   , 01, WW   , 36),
 };
 
-const int RTW_ChannelPlanMap_size = sizeof(RTW_ChannelPlanMap) / sizeof(RTW_ChannelPlanMap[0]);
-
-u8 rtw_chplan_get_default_regd_2g(u8 id)
-{
-	return RTW_ChannelPlanMap[id].regd_2g;
-}
+const int RTW_ChannelPlanMap_size = sizeof(RTW_ChannelPlanMap) / sizeof(RTW_ChannelPlanMap[0]);
 
-u8 rtw_chplan_get_default_regd_5g(u8 id)
-{
-#if CONFIG_IEEE80211_BAND_5GHZ
-	return RTW_ChannelPlanMap[id].regd_5g;
-#else
-	return TXPWR_LMT_NONE;
-#endif
-}
+u8 rtw_chplan_get_default_regd_2g(u8 id)
+{
+	if (id < RTW_ChannelPlanMap_size)
+		return RTW_ChannelPlanMap[id].regd_2g;
+	return RTW_REGD_NA;
+}
 
-u8 rtw_chplan_get_default_regd(u8 id)
+u8 rtw_chplan_get_default_regd_5g(u8 id)
 {
-	u8 regd_2g = rtw_chplan_get_default_regd_2g(id);
-	u8 regd_5g = rtw_chplan_get_default_regd_5g(id);
-
-	if (regd_2g != TXPWR_LMT_NONE && regd_5g != TXPWR_LMT_NONE) {
-		if (regd_2g != regd_5g)
-			RTW_WARN("channel_plan:0x%02x, regd_2g:%u, regd_5g:%u not the same\n", id, regd_2g, regd_5g);
-		return regd_5g;
-	}
-	return regd_2g != TXPWR_LMT_NONE ? regd_2g : regd_5g;
+#if CONFIG_IEEE80211_BAND_5GHZ
+	if (id < RTW_ChannelPlanMap_size)
+		return RTW_ChannelPlanMap[id].regd_5g;
+#endif
+	return RTW_REGD_NA;
 }
 
-bool rtw_chplan_is_empty(u8 id)
+bool rtw_is_channel_plan_valid(u8 id)
 {
-	const struct chplan_ent_t *chplan_map = &RTW_ChannelPlanMap[id];
+	if (id < RTW_ChannelPlanMap_size) {
+		const struct chplan_ent_t *chplan_map = &RTW_ChannelPlanMap[id];
 
-	if (chplan_map->chd_2g == RTW_CHD_2G_NULL
-		#if CONFIG_IEEE80211_BAND_5GHZ
-		&& chplan_map->chd_5g == RTW_CHD_5G_NULL
-		#endif
-	)
-		return _TRUE;
+		if (chplan_map->chd_2g != RTW_CHD_2G_INVALID
+			#if CONFIG_IEEE80211_BAND_5GHZ
+			&& chplan_map->chd_5g != RTW_CHD_5G_INVALID
+			#endif
+		)
+			return _TRUE;
+	}
 
 	return _FALSE;
 }
 
-bool rtw_is_channel_plan_valid(u8 id)
-{
-	return id < RTW_ChannelPlanMap_size && !rtw_chplan_is_empty(id);
-}
-
 bool rtw_regsty_is_excl_chs(struct registry_priv *regsty, u8 ch)
 {
 	int i;
 
-	for (i = 0; i < MAX_CHANNEL_NUM; i++) {
+	for (i = 0; i < MAX_CHANNEL_NUM_2G_5G; i++) {
 		if (regsty->excl_chs[i] == 0)
 			break;
 		if (regsty->excl_chs[i] == ch)
@@ -389,50 +367,276 @@ bool rtw_regsty_is_excl_chs(struct registry_priv *regsty, u8 ch)
 	return _FALSE;
 }
 
-const char *_regd_src_str[] = {
-	[REGD_SRC_RTK_PRIV] = "RTK_PRIV",
-	[REGD_SRC_OS] = "OS",
-	[REGD_SRC_NUM] = "UNKNOWN",
-};
+/*
+ * Search the @param ch in chplan by given @param id
+ * @id: the given channel plan id
+ * @ch: the given channel number
+ *
+ * return the index of channel_num in channel_set, -1 if not found
+ */
+static bool rtw_chplan_get_ch(u8 id, const u32 ch, u8 *flags)
+{
+	u8 index, chan, attrib;
+
+	if (flags)
+		*flags = 0;
+
+#if CONFIG_IEEE80211_BAND_5GHZ
+	if (ch > 14) {
+		u8 chd_5g = RTW_ChannelPlanMap[id].chd_5g;
+
+		attrib = CH_LIST_ATTRIB(rtw_channel_def_5g[chd_5g]);
+
+		for (index = 0; index < CH_LIST_LEN(rtw_channel_def_5g[chd_5g]); index++) {
+			if (CH_LIST_CH(rtw_channel_def_5g[chd_5g], index) == ch) {
+				if (flags) {
+					if ((rtw_is_5g_band1(ch) && (attrib & CLA_5G_B1_PASSIVE)) /* band1 passive */
+						|| (rtw_is_5g_band2(ch) && (attrib & CLA_5G_B2_PASSIVE)) /* band2 passive */
+						|| (rtw_is_5g_band3(ch) && (attrib & CLA_5G_B3_PASSIVE)) /* band3 passive */
+						|| (rtw_is_5g_band4(ch) && (attrib & CLA_5G_B4_PASSIVE)) /* band4 passive */
+					)
+						*flags |= RTW_CHF_NO_IR;
+
+					if ((rtw_is_5g_band2(ch) && (attrib & CLA_5G_B2_DFS))
+						|| (rtw_is_5g_band3(ch) && (attrib & CLA_5G_B3_DFS))
+						|| (rtw_is_5g_band4(ch) && (attrib & CLA_5G_B4_DFS)))
+						*flags |= RTW_CHF_DFS;
+				}
+				return 1;
+			}
+		}
+	} else
+#endif /* CONFIG_IEEE80211_BAND_5GHZ */
+	 {
+		u8 chd_2g = RTW_ChannelPlanMap[id].chd_2g;
+
+		attrib = CH_LIST_ATTRIB(rtw_channel_def_2g[chd_2g]);
+
+		for (index = 0; index < CH_LIST_LEN(rtw_channel_def_2g[chd_2g]); index++) {
+			if (CH_LIST_CH(rtw_channel_def_2g[chd_2g], index) == ch) {
+				if (flags) {
+					if (ch >= 12 && ch <= 14 && (attrib & CLA_2G_12_14_PASSIVE))
+						*flags |= RTW_CHF_NO_IR;
+				}
+				return 1;
+			}
+		}
+	}
+
+	return 0;
+}
+
+#if CONFIG_IEEE80211_BAND_6GHZ
+enum rtw_chd_6g {
+	RTW_CHD_6G_INVALID = 0,
+
+	RTW_CHD_6G_00,
+	RTW_CHD_6G_01,
+	RTW_CHD_6G_02,
+	RTW_CHD_6G_03,
+	RTW_CHD_6G_04,
+	RTW_CHD_6G_05,	/* 6G Worldwide */
+
+	RTW_CHD_6G_MAX,
+	RTW_CHD_6G_NULL = RTW_CHD_6G_00,
+};
+
+static const struct ch_list_t rtw_channel_def_6g[] = {
+	/* RTW_CHD_6G_INVALID */	CH_LIST_ENT(0, 0),
+	/* RTW_CHD_6G_00 */	CH_LIST_ENT(0, 0),
+	/* RTW_CHD_6G_01 */	CH_LIST_ENT(24, 1, 5, 9, 13, 17, 21, 25, 29, 33, 37, 41, 45, 49, 53, 57, 61, 65, 69, 73, 77, 81, 85, 89, 93, 0),
+	/* RTW_CHD_6G_02 */	CH_LIST_ENT(6, 97, 101, 105, 109, 113, 117, 0),
+	/* RTW_CHD_6G_03 */	CH_LIST_ENT(18, 121, 125, 129, 133, 137, 141, 145, 149, 153, 157, 161, 165, 169, 173, 177, 181, 185, 189, 0),
+	/* RTW_CHD_6G_04 */	CH_LIST_ENT(11, 193, 197, 201, 205, 209, 213, 217, 221, 225, 229, 233, 0),
+	/* RTW_CHD_6G_05 */	CH_LIST_ENT(59, 1, 5, 9, 13, 17, 21, 25, 29, 33, 37, 41, 45, 49, 53, 57, 61, 65, 69, 73, 77, 81, 85, 89, 93, 97, 101, 105, 109, 113, 117, 121, 125, 129, 133, 137, 141, 145, 149, 153, 157, 161, 165, 169, 173, 177, 181, 185, 189, 193, 197, 201, 205, 209, 213, 217, 221, 225, 229, 233, CLA_6G_B1_PASSIVE | CLA_6G_B2_PASSIVE | CLA_6G_B3_PASSIVE | CLA_6G_B4_PASSIVE),
+};
+
+struct chplan_6g_ent_t {
+	u8 regd; /* value of enum rtw_regd */
+	u8 chd;
+};
+
+#define CHPLAN_6G_ENT(_regd, _chd) {.regd = RTW_REGD_##_regd, .chd = RTW_CHD_6G_##_chd}
+
+#define CHPLAN_6G_ENT_NOT_DEFINED CHPLAN_6G_ENT(NA, INVALID)
+
+static const struct chplan_6g_ent_t rtw_chplan_6g_map[] = {
+	[0x00] = CHPLAN_6G_ENT(NA   , 00),
+	[0x01] = CHPLAN_6G_ENT(FCC  , 01),
+	[0x02] = CHPLAN_6G_ENT(FCC  , 02),
+	[0x03] = CHPLAN_6G_ENT(FCC  , 03),
+	[0x04] = CHPLAN_6G_ENT(FCC  , 04),
+	[0x7F] = CHPLAN_6G_ENT(WW   , 05),
+};
+
+const int rtw_chplan_6g_map_size = sizeof(rtw_chplan_6g_map) / sizeof(rtw_chplan_6g_map[0]);
+
+u8 rtw_chplan_get_default_regd_6g(u8 id)
+{
+	if (id < rtw_chplan_6g_map_size)
+		return rtw_chplan_6g_map[id].regd;
+	return RTW_REGD_NA;
+}
+
+bool rtw_is_channel_plan_6g_valid(u8 id)
+{
+	if (id < rtw_chplan_6g_map_size) {
+		const struct chplan_6g_ent_t *chplan_map = &rtw_chplan_6g_map[id];
+
+		if (chplan_map->chd != RTW_CHD_6G_INVALID)
+			return _TRUE;
+	}
 
-static u8 init_channel_set_from_rtk_priv(_adapter *padapter, RT_CHANNEL_INFO *channel_set)
+	return _FALSE;
+}
+
+bool rtw_regsty_is_excl_chs_6g(struct registry_priv *regsty, u8 ch)
 {
-	struct rf_ctl_t *rfctl = adapter_to_rfctl(padapter);
-	struct registry_priv *regsty = adapter_to_regsty(padapter);
-	u8 ChannelPlan = rfctl->ChannelPlan;
-	u8 index, chanset_size = 0;
-	u8 b5GBand = _FALSE, b2_4GBand = _FALSE;
-	u8 ch, attrib;
-#ifdef CONFIG_DFS_MASTER
 	int i;
+
+	for (i = 0; i < MAX_CHANNEL_NUM_6G; i++) {
+		if (regsty->excl_chs_6g[i] == 0)
+			break;
+		if (regsty->excl_chs_6g[i] == ch)
+			return _TRUE;
+	}
+	return _FALSE;
+}
+
+/*
+ * Search the @param ch in chplan by given @param id
+ * @id: the given channel plan id
+ * @ch: the given channel number
+ *
+ * return the index of channel_num in channel_set, -1 if not found
+ */
+static bool rtw_chplan_6g_get_ch(u8 id, const u32 ch, u8 *flags)
+{
+	u8 index, chan, attrib;
+	u8 chd_6g;
+
+	if (flags)
+		*flags = 0;
+
+	chd_6g = rtw_chplan_6g_map[id].chd;
+
+	attrib = CH_LIST_ATTRIB(rtw_channel_def_6g[chd_6g]);
+
+	for (index = 0; index < CH_LIST_LEN(rtw_channel_def_6g[chd_6g]); index++) {
+		if (CH_LIST_CH(rtw_channel_def_6g[chd_6g], index) == ch) {
+			if (flags) {
+				if ((rtw_is_6g_band1(ch) && (attrib & CLA_6G_B1_PASSIVE)) /* band1 passive */
+					|| (rtw_is_6g_band2(ch) && (attrib & CLA_6G_B2_PASSIVE)) /* band2 passive */
+					|| (rtw_is_6g_band3(ch) && (attrib & CLA_6G_B3_PASSIVE)) /* band3 passive */
+					|| (rtw_is_6g_band4(ch) && (attrib & CLA_6G_B4_PASSIVE)) /* band4 passive */
+				)
+					*flags |= RTW_CHF_NO_IR;
+			}
+			return 1;
+		}
+	}
+
+	return 0;
+}
+#endif /* CONFIG_IEEE80211_BAND_6GHZ */
+
+
+/*
+ * Check if the @param ch, bw, offset is valid for the given @param id, id_6g
+ * @ch_set: the given channel set
+ * @ch: the given channel number
+ * @bw: the given bandwidth
+ * @offset: the given channel offset
+ *
+ * return valid (1) or not (0)
+ */
+u8 rtw_chplan_is_chbw_valid(u8 id, u8 id_6g, BAND_TYPE band, u8 ch, u8 bw, u8 offset
+	, bool allow_primary_passive, bool allow_passive, struct registry_priv *regsty)
+{
+	u8 cch;
+	u8 *op_chs;
+	u8 op_ch_num;
+	u8 op_ch;
+	u8 valid = 0;
+	int i;
+	int ch_idx;
+	u8 flags;
+
+#if CONFIG_IEEE80211_BAND_6GHZ
+	if (band == BAND_ON_6G)
+		goto exit;
 #endif
 
-	if (!rtw_is_channel_plan_valid(ChannelPlan)) {
-		RTW_ERR("ChannelPlan ID 0x%02X error !!!!!\n", ChannelPlan);
-		return chanset_size;
+	cch = rtw_get_center_ch(ch, bw, offset); /* TODO: 6G */
+
+	if (!rtw_get_op_chs_by_cch_bw(cch, bw, &op_chs, &op_ch_num)) /* TODO: 6G  */
+		goto exit;
+
+	for (i = 0; i < op_ch_num; i++) {
+		op_ch = *(op_chs + i);
+		if (0)
+			RTW_INFO("%u,%u,%u - cch:%u, bw:%u, op_ch:%u\n", ch, bw, offset, cch, bw, op_ch);
+		#if CONFIG_IEEE80211_BAND_6GHZ
+		if (band == BAND_ON_6G) {
+			if (!rtw_chplan_6g_get_ch(id_6g, op_ch, &flags)
+				|| (regsty && rtw_regsty_is_excl_chs_6g(regsty, op_ch) == _TRUE))
+				break;
+		} else
+		#endif
+		{
+			if (!rtw_chplan_get_ch(id, op_ch, &flags)
+				|| (regsty && rtw_regsty_is_excl_chs(regsty, op_ch) == _TRUE))
+				break;
+		}
+		if (flags & RTW_CHF_NO_IR) {
+			if (!allow_passive
+				|| (!allow_primary_passive && op_ch == ch))
+				break;
+		}
 	}
 
-	_rtw_memset(channel_set, 0, sizeof(RT_CHANNEL_INFO) * MAX_CHANNEL_NUM);
+	if (op_ch_num != 0 && i == op_ch_num)
+		valid = 1;
 
-	if (IsSupported24G(regsty->wireless_mode) && hal_chk_band_cap(padapter, BAND_CAP_2G))
-		b2_4GBand = _TRUE;
+exit:
+	return valid;
+}
 
-	if (is_supported_5g(regsty->wireless_mode) && hal_chk_band_cap(padapter, BAND_CAP_5G))
-		b5GBand = _TRUE;
+const char *_regd_src_str[] = {
+	[REGD_SRC_RTK_PRIV] = "RTK_PRIV",
+	[REGD_SRC_OS] = "OS",
+	[REGD_SRC_NUM] = "UNKNOWN",
+};
 
-	if (b2_4GBand == _FALSE && b5GBand == _FALSE) {
-		RTW_WARN("HW band_cap has no intersection with SW wireless_mode setting\n");
-		return chanset_size;
+static u8 init_channel_set_from_rtk_priv_2g_5g(_adapter *adapter, RT_CHANNEL_INFO *channel_set, u8 *ch_num)
+{
+	struct rf_ctl_t *rfctl = adapter_to_rfctl(adapter);
+	struct registry_priv *regsty = adapter_to_regsty(adapter);
+	u8 chplan = rfctl->ChannelPlan;
+	u8 index, chanset_size = *ch_num;
+	u8 b5GBand = _FALSE, b2_4GBand = _FALSE;
+	u8 ch, attrib;
+
+	if (!rtw_is_channel_plan_valid(chplan)) {
+		RTW_ERR(FUNC_ADPT_FMT" invalid chplan:0x%02X\n", FUNC_ADPT_ARG(adapter), chplan);
+		goto exit;
 	}
+	RTW_INFO(FUNC_ADPT_FMT" chplan:0x%02X\n", FUNC_ADPT_ARG(adapter), chplan);
+
+	if (IsSupported24G(regsty->wireless_mode) && hal_chk_band_cap(adapter, BAND_CAP_2G))
+		b2_4GBand = _TRUE;
+
+	if (is_supported_5g(regsty->wireless_mode) && hal_chk_band_cap(adapter, BAND_CAP_5G))
+		b5GBand = _TRUE;
 
 	if (b2_4GBand) {
-		u8 chd_2g = RTW_ChannelPlanMap[ChannelPlan].chd_2g;
-
-		attrib = CH_LIST_ATTRIB(rtw_channel_def_2g[chd_2g]);
+		u8 chd_2g = RTW_ChannelPlanMap[chplan].chd_2g;
 
-		for (index = 0; index < CH_LIST_LEN(rtw_channel_def_2g[chd_2g]); index++) {
-			ch = CH_LIST_CH(rtw_channel_def_2g[chd_2g], index);
-			if (rtw_regsty_is_excl_chs(regsty, ch) == _TRUE)
+		attrib = CH_LIST_ATTRIB(rtw_channel_def_2g[chd_2g]);
+
+		for (index = 0; index < CH_LIST_LEN(rtw_channel_def_2g[chd_2g]); index++) {
+			ch = CH_LIST_CH(rtw_channel_def_2g[chd_2g], index);
+			if (rtw_regsty_is_excl_chs(regsty, ch) == _TRUE)
 				continue;
 
 			if (chanset_size >= MAX_CHANNEL_NUM) {
@@ -440,15 +644,16 @@ static u8 init_channel_set_from_rtk_priv(_adapter *padapter, RT_CHANNEL_INFO *ch
 				break;
 			}
 
-			channel_set[chanset_size].ChannelNum = ch;
-
-			if (ch >= 12 && ch <= 14 && (attrib & CLA_2G_12_14_PASSIVE))
-				channel_set[chanset_size].flags |= RTW_CHF_NO_IR;
-
-			if (channel_set[chanset_size].flags & RTW_CHF_NO_IR) {
-				if (rfctl->country_ent || ch <= 11)
-					RTW_INFO("ch%u is PASSIVE\n", ch);
-			}
+			channel_set[chanset_size].band = BAND_ON_2_4G;
+			channel_set[chanset_size].ChannelNum = ch;
+
+			if (ch >= 12 && ch <= 14 && (attrib & CLA_2G_12_14_PASSIVE))
+				channel_set[chanset_size].flags |= RTW_CHF_NO_IR;
+
+			if (channel_set[chanset_size].flags & RTW_CHF_NO_IR) {
+				if (!rtw_rfctl_reg_allow_beacon_hint(rfctl) || !rtw_chinfo_allow_beacon_hint(&channel_set[chanset_size]))
+					RTW_INFO("band:%s ch%u is NO_IR while beacon hint not allowed\n", band_str(BAND_ON_2_4G), ch);
+			}
 
 			chanset_size++;
 		}
@@ -456,20 +661,20 @@ static u8 init_channel_set_from_rtk_priv(_adapter *padapter, RT_CHANNEL_INFO *ch
 
 #if CONFIG_IEEE80211_BAND_5GHZ
 	if (b5GBand) {
-		bool dfs;
-		u8 chd_5g = RTW_ChannelPlanMap[ChannelPlan].chd_5g;
-
-		attrib = CH_LIST_ATTRIB(rtw_channel_def_5g[chd_5g]);
-
-		for (index = 0; index < CH_LIST_LEN(rtw_channel_def_5g[chd_5g]); index++) {
-			ch = CH_LIST_CH(rtw_channel_def_5g[chd_5g], index);
-			if (rtw_regsty_is_excl_chs(regsty, ch) == _TRUE)
+		bool dfs;
+		u8 chd_5g = RTW_ChannelPlanMap[chplan].chd_5g;
+
+		attrib = CH_LIST_ATTRIB(rtw_channel_def_5g[chd_5g]);
+
+		for (index = 0; index < CH_LIST_LEN(rtw_channel_def_5g[chd_5g]); index++) {
+			ch = CH_LIST_CH(rtw_channel_def_5g[chd_5g], index);
+			if (rtw_regsty_is_excl_chs(regsty, ch) == _TRUE)
 				continue;
-			dfs = (rtw_is_5g_band2(ch) && (attrib & CLA_5G_B2_DFS))
-				|| (rtw_is_5g_band3(ch) && (attrib & CLA_5G_B3_DFS))
-				|| (rtw_is_5g_band4(ch) && (attrib & CLA_5G_B4_DFS));
+			dfs = (rtw_is_5g_band2(ch) && (attrib & CLA_5G_B2_DFS))
+				|| (rtw_is_5g_band3(ch) && (attrib & CLA_5G_B3_DFS))
+				|| (rtw_is_5g_band4(ch) && (attrib & CLA_5G_B4_DFS));
 			#if !CONFIG_DFS
-			if (dfs)
+			if (dfs)
 				continue;
 			#endif
 
@@ -478,152 +683,524 @@ static u8 init_channel_set_from_rtk_priv(_adapter *padapter, RT_CHANNEL_INFO *ch
 				break;
 			}
 
-			channel_set[chanset_size].ChannelNum = ch;
+			channel_set[chanset_size].band = BAND_ON_5G;
+			channel_set[chanset_size].ChannelNum = ch;
 
-			if ((rtw_is_5g_band1(ch) && (attrib & CLA_5G_B1_PASSIVE)) /* band1 passive */
-				|| (rtw_is_5g_band2(ch) && (attrib & CLA_5G_B2_PASSIVE)) /* band2 passive */
-				|| (rtw_is_5g_band3(ch) && (attrib & CLA_5G_B3_PASSIVE)) /* band3 passive */
-				|| (rtw_is_5g_band4(ch) && (attrib & CLA_5G_B4_PASSIVE)) /* band4 passive */
+			if ((rtw_is_5g_band1(ch) && (attrib & CLA_5G_B1_PASSIVE)) /* band1 passive */
+				|| (rtw_is_5g_band2(ch) && (attrib & CLA_5G_B2_PASSIVE)) /* band2 passive */
+				|| (rtw_is_5g_band3(ch) && (attrib & CLA_5G_B3_PASSIVE)) /* band3 passive */
+				|| (rtw_is_5g_band4(ch) && (attrib & CLA_5G_B4_PASSIVE)) /* band4 passive */
 			)
-				channel_set[chanset_size].flags |= RTW_CHF_NO_IR;
-
-			if (dfs)
-				channel_set[chanset_size].flags |= RTW_CHF_DFS;
-
-			if (channel_set[chanset_size].flags & RTW_CHF_NO_IR) {
-				if (rfctl->country_ent || (channel_set[chanset_size].flags & RTW_CHF_DFS))
-					RTW_INFO("ch%u is PASSIVE%s\n", ch, dfs ? " DFS" : "");
-			}
+				channel_set[chanset_size].flags |= RTW_CHF_NO_IR;
+
+			if (dfs)
+				channel_set[chanset_size].flags |= RTW_CHF_DFS;
+
+			if (channel_set[chanset_size].flags & RTW_CHF_NO_IR) {
+				if (!rtw_rfctl_reg_allow_beacon_hint(rfctl) || !rtw_chinfo_allow_beacon_hint(&channel_set[chanset_size]))
+					RTW_INFO("band:%s ch%u is NO_IR%s while beacon hint not allowed\n", band_str(BAND_ON_5G), ch, dfs ? " DFS" : "");
+			}
 
 			chanset_size++;
 		}
 	}
+#endif /* CONFIG_IEEE80211_BAND_5GHZ */
+
+exit:
+	*ch_num = chanset_size;
+
+	return chanset_size;
+}
+
+#if CONFIG_IEEE80211_BAND_6GHZ
+static u8 init_channel_set_from_rtk_priv_6g(_adapter *adapter, RT_CHANNEL_INFO *channel_set, u8 *ch_num)
+{
+	struct rf_ctl_t *rfctl = adapter_to_rfctl(adapter);
+	struct registry_priv *regsty = adapter_to_regsty(adapter);
+	u8 chplan_6g = rfctl->chplan_6g;
+	u8 index, chanset_size = *ch_num;
+	bool band_6g = _FALSE;
+	u8 chd_6g;
+	u8 ch, attrib;
+
+	if (!rtw_is_channel_plan_6g_valid(chplan_6g)) {
+		RTW_ERR(FUNC_ADPT_FMT" invalid chplan_6g:0x%02X\n", FUNC_ADPT_ARG(adapter), chplan_6g);
+		goto exit;
+	}
+	RTW_INFO(FUNC_ADPT_FMT" chplan_6g:0x%02X\n", FUNC_ADPT_ARG(adapter), chplan_6g);
+
+	band_6g = _TRUE; /* TODO: SW conf & HW cap check */
+	if (!band_6g)
+		goto exit;
+
+	chd_6g = rtw_chplan_6g_map[chplan_6g].chd;
+
+	attrib = CH_LIST_ATTRIB(rtw_channel_def_6g[chd_6g]);
+
+	for (index = 0; index < CH_LIST_LEN(rtw_channel_def_6g[chd_6g]); index++) {
+		ch = CH_LIST_CH(rtw_channel_def_6g[chd_6g], index);
+		if (rtw_regsty_is_excl_chs_6g(regsty, ch) == _TRUE)
+			continue;
+		if (chanset_size >= MAX_CHANNEL_NUM) {
+			RTW_WARN("chset size can't exceed MAX_CHANNEL_NUM(%u)\n", MAX_CHANNEL_NUM);
+			break;
+		}
+
+		channel_set[chanset_size].band = BAND_ON_6G;
+		channel_set[chanset_size].ChannelNum = ch;
+
+		if ((rtw_is_6g_band1(ch) && (attrib & CLA_6G_B1_PASSIVE)) /* band1 passive */
+			|| (rtw_is_6g_band2(ch) && (attrib & CLA_6G_B2_PASSIVE)) /* band2 passive */
+			|| (rtw_is_6g_band3(ch) && (attrib & CLA_6G_B3_PASSIVE)) /* band3 passive */
+			|| (rtw_is_6g_band4(ch) && (attrib & CLA_6G_B4_PASSIVE)) /* band4 passive */
+		)
+			channel_set[chanset_size].flags |= RTW_CHF_NO_IR;
+
+		chanset_size++;
+	}
+
+exit:
+	*ch_num = chanset_size;
+
+	return chanset_size;
+}
+#endif /* CONFIG_IEEE80211_BAND_6GHZ */
+
+static u8 init_channel_set_from_rtk_priv(_adapter *adapter, RT_CHANNEL_INFO *channel_set)
+{
+	u8 chanset_size = 0;
+#ifdef CONFIG_DFS_MASTER
+	int i;
+#endif
+
+	_rtw_memset(channel_set, 0, sizeof(RT_CHANNEL_INFO) * MAX_CHANNEL_NUM);
+
+	init_channel_set_from_rtk_priv_2g_5g(adapter, channel_set, &chanset_size);
+
+#if CONFIG_IEEE80211_BAND_6GHZ
+	init_channel_set_from_rtk_priv_6g(adapter, channel_set, &chanset_size);
+#endif
 
-	#ifdef CONFIG_DFS_MASTER
+#ifdef CONFIG_DFS_MASTER
 	for (i = 0; i < chanset_size; i++)
 		channel_set[i].non_ocp_end_time = rtw_get_current_time();
-	#endif
-#endif /* CONFIG_IEEE80211_BAND_5GHZ */
+#endif
 
 	if (chanset_size)
-		RTW_INFO(FUNC_ADPT_FMT" ChannelPlan ID:0x%02x, ch num:%d\n"
-			, FUNC_ADPT_ARG(padapter), ChannelPlan, chanset_size);
+		RTW_INFO(FUNC_ADPT_FMT" ch num:%d\n", FUNC_ADPT_ARG(adapter), chanset_size);
 	else
-		RTW_WARN(FUNC_ADPT_FMT" ChannelPlan ID:0x%02x, final chset has no channel\n"
-			, FUNC_ADPT_ARG(padapter), ChannelPlan);
+		RTW_WARN(FUNC_ADPT_FMT" final chset has no channel\n", FUNC_ADPT_ARG(adapter));
 
 	return chanset_size;
 }
 
-u8 init_channel_set(_adapter *adapter)
-{
-	struct rf_ctl_t *rfctl = adapter_to_rfctl(adapter);
-
-	if (rfctl->regd_src == REGD_SRC_RTK_PRIV)
-		return init_channel_set_from_rtk_priv(adapter, rfctl->channel_set);
-#ifdef CONFIG_REGD_SRC_FROM_OS
-	else if (rfctl->regd_src == REGD_SRC_OS)
-		return rtw_os_init_channel_set(adapter, rfctl->channel_set);
-#endif
-	else
-		rtw_warn_on(1);
-
-	return 0;
-}
-
-bool rtw_chset_is_dfs_range(struct _RT_CHANNEL_INFO *chset, u32 hi, u32 lo)
-{
-	u8 hi_ch = rtw_freq2ch(hi);
-	u8 lo_ch = rtw_freq2ch(lo);
-	int i;
-
-	for (i = 0; i < MAX_CHANNEL_NUM && chset[i].ChannelNum != 0; i++){
-		if (!(chset[i].flags & RTW_CHF_DFS))
-			continue;
-		if (hi_ch > chset[i].ChannelNum && lo_ch < chset[i].ChannelNum)
-			return 1;
-	}
-
-	return 0;
-}
-
-bool rtw_chset_is_dfs_ch(struct _RT_CHANNEL_INFO *chset, u8 ch)
-{
-	int i;
-
-	for (i = 0; i < MAX_CHANNEL_NUM && chset[i].ChannelNum != 0; i++){
-		if (chset[i].ChannelNum == ch)
-			return chset[i].flags & RTW_CHF_DFS ? 1 : 0;
-	}
-
-	return 0;
-}
-
-bool rtw_chset_is_dfs_chbw(struct _RT_CHANNEL_INFO *chset, u8 ch, u8 bw, u8 offset)
-{
-	u32 hi, lo;
-
-	if (!rtw_chbw_to_freq_range(ch, bw, offset, &hi, &lo))
-		return 0;
-
-	return rtw_chset_is_dfs_range(chset, hi, lo);
-}
-
-u8 rtw_process_beacon_hint(_adapter *adapter, WLAN_BSSID_EX *bss)
-{
-#ifndef RTW_CHPLAN_BEACON_HINT_NON_WORLD_WIDE
-#define RTW_CHPLAN_BEACON_HINT_NON_WORLD_WIDE 0
-#endif
-
-#ifndef RTW_CHPLAN_BEACON_HINT_ON_2G_CH_1_11
-#define RTW_CHPLAN_BEACON_HINT_ON_2G_CH_1_11 0
-#endif
-
-#ifndef RTW_CHPLAN_BEACON_HINT_ON_DFS_CH
-#define RTW_CHPLAN_BEACON_HINT_ON_DFS_CH 0
-#endif
-
-	struct rf_ctl_t *rfctl = adapter_to_rfctl(adapter);
-	RT_CHANNEL_INFO *chset = rfctl->channel_set;
-	u8 ch = bss->Configuration.DSConfig;
-	int chset_idx = rtw_chset_search_ch(chset, ch);
-	u8 act_cnt = 0;
-
-	if (chset_idx < 0)
-		goto exit;
-
-	if ((chset[chset_idx].flags & RTW_CHF_NO_IR)
-		&& (RTW_CHPLAN_BEACON_HINT_NON_WORLD_WIDE || !rfctl->country_ent || IS_ALPHA2_WORLDWIDE(rfctl->country_ent->alpha2))
-		&& (RTW_CHPLAN_BEACON_HINT_ON_2G_CH_1_11 || !(ch <= 11))
-		&& (RTW_CHPLAN_BEACON_HINT_ON_DFS_CH || !(chset[chset_idx].flags & RTW_CHF_DFS))
-	) {
-		RTW_INFO("%s: change ch:%d to active\n", __func__, ch);
-		chset[chset_idx].flags &= ~RTW_CHF_NO_IR;
-		act_cnt++;
-	}
-
-exit:
-	return act_cnt;
-}
-
-const char *_rtw_dfs_regd_str[] = {
-	[RTW_DFS_REGD_NONE]	= "NONE",
-	[RTW_DFS_REGD_FCC]	= "FCC",
-	[RTW_DFS_REGD_MKK]	= "MKK",
-	[RTW_DFS_REGD_ETSI]	= "ETSI",
-};
-
-#ifdef CONFIG_80211AC_VHT
-#define COUNTRY_CHPLAN_ASSIGN_EN_11AC(_val) , .en_11ac = (_val)
+u8 init_channel_set(_adapter *adapter)
+{
+	struct rf_ctl_t *rfctl = adapter_to_rfctl(adapter);
+
+	if (rfctl->regd_src == REGD_SRC_RTK_PRIV)
+		rfctl->max_chan_nums = init_channel_set_from_rtk_priv(adapter, rfctl->channel_set);
+#ifdef CONFIG_REGD_SRC_FROM_OS
+	else if (rfctl->regd_src == REGD_SRC_OS)
+		rfctl->max_chan_nums = rtw_os_init_channel_set(adapter, rfctl->channel_set);
+#endif
+	else {
+		rfctl->max_chan_nums = 0;
+		rtw_warn_on(1);
+	}
+
+	return rfctl->max_chan_nums;
+}
+
+bool rtw_chset_is_dfs_range(struct _RT_CHANNEL_INFO *chset, u32 hi, u32 lo)
+{
+	u8 hi_ch = rtw_freq2ch(hi);
+	u8 lo_ch = rtw_freq2ch(lo);
+	int i;
+
+	for (i = 0; i < MAX_CHANNEL_NUM && chset[i].ChannelNum != 0; i++){
+		if (!(chset[i].flags & RTW_CHF_DFS))
+			continue;
+		if (hi_ch > chset[i].ChannelNum && lo_ch < chset[i].ChannelNum)
+			return 1;
+	}
+
+	return 0;
+}
+
+bool rtw_chset_is_dfs_ch(struct _RT_CHANNEL_INFO *chset, u8 ch)
+{
+	int i;
+
+	for (i = 0; i < MAX_CHANNEL_NUM && chset[i].ChannelNum != 0; i++){
+		if (chset[i].ChannelNum == ch)
+			return chset[i].flags & RTW_CHF_DFS ? 1 : 0;
+	}
+
+	return 0;
+}
+
+bool rtw_chset_is_dfs_chbw(struct _RT_CHANNEL_INFO *chset, u8 ch, u8 bw, u8 offset)
+{
+	u32 hi, lo;
+
+	if (!rtw_chbw_to_freq_range(ch, bw, offset, &hi, &lo))
+		return 0;
+
+	return rtw_chset_is_dfs_range(chset, hi, lo);
+}
+
+/* channel specific beacon hint rules */
+#ifndef RTW_CHPLAN_BEACON_HINT_ON_2G_CH_1_11
+#define RTW_CHPLAN_BEACON_HINT_ON_2G_CH_1_11 0
+#endif
+#ifndef RTW_CHPLAN_BEACON_HINT_ON_DFS_CH
+#define RTW_CHPLAN_BEACON_HINT_ON_DFS_CH 0
+#endif
+
+bool rtw_chinfo_allow_beacon_hint(struct _RT_CHANNEL_INFO *chinfo)
+{
+	return (RTW_CHPLAN_BEACON_HINT_ON_2G_CH_1_11 || !(chinfo->band == BAND_ON_2_4G && chinfo->ChannelNum <= 11))
+		&& (RTW_CHPLAN_BEACON_HINT_ON_DFS_CH || !(chinfo->flags & RTW_CHF_DFS));
+}
+
+u8 rtw_process_beacon_hint(_adapter *adapter, WLAN_BSSID_EX *bss)
+{
+	struct rf_ctl_t *rfctl = adapter_to_rfctl(adapter);
+	RT_CHANNEL_INFO *chset = rfctl->channel_set;
+	u8 ch = bss->Configuration.DSConfig;
+	int chset_idx = rtw_chset_search_ch(chset, ch);
+	RT_CHANNEL_INFO *chinfo;
+	u8 act_cnt = 0;
+
+	if (chset_idx < 0)
+		goto exit;
+
+	chinfo = &chset[chset_idx];
+
+	if ((chinfo->flags & RTW_CHF_NO_IR)
+		&& rtw_rfctl_reg_allow_beacon_hint(rfctl)
+		&& rtw_chinfo_allow_beacon_hint(chinfo)
+	) {
+		RTW_INFO("%s: change band:%s ch:%d to active\n", __func__, band_str(chinfo->band), ch);
+		chinfo->flags &= ~RTW_CHF_NO_IR;
+		act_cnt++;
+	}
+
+exit:
+	return act_cnt;
+}
+
+const char *const _regd_inr_str[] = {
+	[RTW_REGD_SET_BY_INIT]			= "INIT",
+	[RTW_REGD_SET_BY_USER]			= "USER",
+	[RTW_REGD_SET_BY_COUNTRY_IE]	= "COUNTRY_IE",
+	[RTW_REGD_SET_BY_DRIVER]		= "DRIVER",
+	[RTW_REGD_SET_BY_CORE]			= "CORE",
+	[RTW_REGD_SET_BY_NUM]			= "UNKNOWN",
+};
+
+const char *const _regd_str[] = {
+	[RTW_REGD_NA]		= "NA",
+	[RTW_REGD_FCC]		= "FCC",
+	[RTW_REGD_MKK]		= "MKK",
+	[RTW_REGD_ETSI]		= "ETSI",
+	[RTW_REGD_IC]		= "IC",
+	[RTW_REGD_KCC]		= "KCC",
+	[RTW_REGD_NCC]		= "NCC",
+	[RTW_REGD_ACMA]		= "ACMA",
+	[RTW_REGD_CHILE]	= "CHILE",
+	[RTW_REGD_MEX]		= "MEX",
+	[RTW_REGD_WW]		= "WW",
+};
+
+const char *const _rtw_edcca_mode_str[] = {
+	[RTW_EDCCA_NORMAL]	= "NORMAL",
+	[RTW_EDCCA_ADAPT]	= "ADAPT",
+	[RTW_EDCCA_CS]		= "CS",
+};
+
+const char *_rtw_dfs_regd_str[] = {
+	[RTW_DFS_REGD_NONE]	= "NONE",
+	[RTW_DFS_REGD_FCC]	= "FCC",
+	[RTW_DFS_REGD_MKK]	= "MKK",
+	[RTW_DFS_REGD_ETSI]	= "ETSI",
+};
+
+const char *const _txpwr_lmt_str[] = {
+	[TXPWR_LMT_NONE]	= "NONE",
+	[TXPWR_LMT_FCC]		= "FCC",
+	[TXPWR_LMT_MKK]		= "MKK",
+	[TXPWR_LMT_ETSI]	= "ETSI",
+	[TXPWR_LMT_IC]		= "IC",
+	[TXPWR_LMT_KCC]		= "KCC",
+	[TXPWR_LMT_NCC]		= "NCC",
+	[TXPWR_LMT_ACMA]	= "ACMA",
+	[TXPWR_LMT_CHILE]	= "CHILE",
+	[TXPWR_LMT_UKRAINE]	= "UKRAINE",
+	[TXPWR_LMT_MEXICO]	= "MEXICO",
+	[TXPWR_LMT_CN]		= "CN",
+	[TXPWR_LMT_QATAR]	= "QATAR",
+	[TXPWR_LMT_WW]		= "WW",
+	[TXPWR_LMT_NUM]		= NULL,
+};
+
+const REGULATION_TXPWR_LMT _txpwr_lmt_alternate[] = {
+	[TXPWR_LMT_NONE]	= TXPWR_LMT_NONE,
+	[TXPWR_LMT_FCC]		= TXPWR_LMT_FCC,
+	[TXPWR_LMT_MKK]		= TXPWR_LMT_MKK,
+	[TXPWR_LMT_ETSI]	= TXPWR_LMT_ETSI,
+	[TXPWR_LMT_WW]		= TXPWR_LMT_WW,
+	[TXPWR_LMT_NUM]		= TXPWR_LMT_NUM,
+
+	[TXPWR_LMT_IC]		= TXPWR_LMT_FCC,
+	[TXPWR_LMT_KCC]		= TXPWR_LMT_ETSI,
+	[TXPWR_LMT_NCC]		= TXPWR_LMT_FCC,
+	[TXPWR_LMT_ACMA]	= TXPWR_LMT_ETSI,
+	[TXPWR_LMT_CHILE]	= TXPWR_LMT_FCC,
+	[TXPWR_LMT_UKRAINE]	= TXPWR_LMT_ETSI,
+	[TXPWR_LMT_MEXICO]	= TXPWR_LMT_FCC,
+	[TXPWR_LMT_CN]		= TXPWR_LMT_ETSI,
+	[TXPWR_LMT_QATAR]	= TXPWR_LMT_ETSI,
+};
+
+const enum rtw_edcca_mode _rtw_regd_to_edcca_mode[RTW_REGD_NUM] = {
+	[RTW_REGD_NA] = RTW_EDCCA_MODE_NUM,
+	[RTW_REGD_MKK] = RTW_EDCCA_CS,
+	[RTW_REGD_ETSI] = RTW_EDCCA_ADAPT,
+	[RTW_REGD_WW] = RTW_EDCCA_ADAPT,
+};
+
+const REGULATION_TXPWR_LMT _rtw_regd_to_txpwr_lmt[] = {
+	[RTW_REGD_NA]		= TXPWR_LMT_NUM,
+	[RTW_REGD_FCC]		= TXPWR_LMT_FCC,
+	[RTW_REGD_MKK]		= TXPWR_LMT_MKK,
+	[RTW_REGD_ETSI]		= TXPWR_LMT_ETSI,
+	[RTW_REGD_IC]		= TXPWR_LMT_IC,
+	[RTW_REGD_KCC]		= TXPWR_LMT_KCC,
+	[RTW_REGD_NCC]		= TXPWR_LMT_NCC,
+	[RTW_REGD_ACMA]		= TXPWR_LMT_ACMA,
+	[RTW_REGD_CHILE]	= TXPWR_LMT_CHILE,
+	[RTW_REGD_MEX]		= TXPWR_LMT_MEXICO,
+	[RTW_REGD_WW]		= TXPWR_LMT_WW,
+};
+
+char *rtw_get_edcca_modes_str(char *buf, u8 modes[])
+{
+#define EDCCA_MODE_SEQ_COMPARE(result, operand) (result == RTW_EDCCA_MODE_NUM ? operand : (operand == RTW_EDCCA_MODE_NUM ? result : (result != operand ? -1 : result)))
+
+	int mode = RTW_EDCCA_MODE_NUM;
+	int cnt = 0;
+
+	mode = EDCCA_MODE_SEQ_COMPARE(mode, modes[BAND_ON_2_4G]);
+#if CONFIG_IEEE80211_BAND_5GHZ
+	mode = EDCCA_MODE_SEQ_COMPARE(mode, modes[BAND_ON_5G]);
+#endif
+#if CONFIG_IEEE80211_BAND_6GHZ
+	mode = EDCCA_MODE_SEQ_COMPARE(mode, modes[BAND_ON_6G]);
+#endif
+
+	if (mode != -1) { /* all available values are the same */
+		cnt += snprintf(buf + cnt, EDCCA_MODES_STR_LEN - cnt - 1, "%s(%u)", rtw_edcca_mode_str(mode), mode);
+		if (cnt >= EDCCA_MODES_STR_LEN - 1)
+			goto exit;
+	} else {
+		cnt += snprintf(buf + cnt, EDCCA_MODES_STR_LEN - cnt - 1, "%s(%u) ", rtw_edcca_mode_str(modes[BAND_ON_2_4G]), modes[BAND_ON_2_4G]);
+		if (cnt >= EDCCA_MODES_STR_LEN - 1)
+			goto exit;
+		#if CONFIG_IEEE80211_BAND_5GHZ
+		cnt += snprintf(buf + cnt, EDCCA_MODES_STR_LEN - cnt - 1, "%s(%u) ", rtw_edcca_mode_str(modes[BAND_ON_5G]), modes[BAND_ON_5G]);
+		if (cnt >= EDCCA_MODES_STR_LEN - 1)
+			goto exit;
+		#endif
+		#if CONFIG_IEEE80211_BAND_6GHZ
+		cnt += snprintf(buf + cnt, EDCCA_MODES_STR_LEN - cnt - 1, "%s(%u) ", rtw_edcca_mode_str(modes[BAND_ON_6G]), modes[BAND_ON_6G]);
+		if (cnt >= EDCCA_MODES_STR_LEN - 1)
+			goto exit;
+		#endif
+		buf[cnt - 1] = 0;
+	}
+
+exit:
+	return buf;
+}
+
+void rtw_edcca_mode_update(struct dvobj_priv *dvobj)
+{
+	struct registry_priv *regsty = dvobj_to_regsty(dvobj);
+	struct rf_ctl_t *rfctl = dvobj_to_rfctl(dvobj);
+
+	if (regsty->adaptivity_en == 0) {
+		/* force disable */
+		rfctl->edcca_mode_2g = RTW_EDCCA_NORMAL;
+		#if CONFIG_IEEE80211_BAND_5GHZ
+		rfctl->edcca_mode_5g = RTW_EDCCA_NORMAL;
+		#endif
+		#if CONFIG_IEEE80211_BAND_6GHZ
+		rfctl->edcca_mode_6g = RTW_EDCCA_NORMAL;
+		#endif
+
+	} else if (regsty->adaptivity_en == 1) {
+		/* force enable */
+		if (!regsty->adaptivity_mode) {
+			/* adaptivity */
+			rfctl->edcca_mode_2g = RTW_EDCCA_ADAPT;
+			#if CONFIG_IEEE80211_BAND_5GHZ
+			rfctl->edcca_mode_5g = RTW_EDCCA_ADAPT;
+			#endif
+			#if CONFIG_IEEE80211_BAND_6GHZ
+			rfctl->edcca_mode_6g = RTW_EDCCA_ADAPT;
+			#endif
+		} else {
+			/* carrier sense */
+			rfctl->edcca_mode_2g = RTW_EDCCA_CS;
+			#if CONFIG_IEEE80211_BAND_5GHZ
+			rfctl->edcca_mode_5g = RTW_EDCCA_CS;
+			#endif
+			#if CONFIG_IEEE80211_BAND_6GHZ
+			rfctl->edcca_mode_6g = RTW_EDCCA_CS;
+			#endif
+		}
+
+	} else {
+		u8 modes[BAND_MAX];
+		char buf[EDCCA_MODES_STR_LEN];
+
+		/* by regulatory setting */
+		#ifdef CONFIG_REGD_SRC_FROM_OS
+		if (rfctl->regd_src == REGD_SRC_OS
+			&& rfctl->ChannelPlan == RTW_CHPLAN_UNSPECIFIED
+		) {
+			modes[BAND_ON_2_4G] = rfctl->edcca_mode_2g = RTW_EDCCA_ADAPT;
+			#if CONFIG_IEEE80211_BAND_5GHZ
+			modes[BAND_ON_5G] = rfctl->edcca_mode_5g = RTW_EDCCA_ADAPT;
+			#endif
+			#if CONFIG_IEEE80211_BAND_6GHZ
+			modes[BAND_ON_6G] = rfctl->edcca_mode_6g = RTW_EDCCA_ADAPT;
+			#endif
+			RTW_PRINT("mapping %scountry:%c%c to edcca_mode:%s\n"
+				, RFCTL_REG_WORLDWIDE(rfctl) ? "" : "unsupported "
+				, rfctl->alpha2[0]
+				, rfctl->alpha2[1]
+				, rtw_get_edcca_modes_str(buf, modes)
+			);
+		} else
+		#endif
+		{
+			modes[BAND_ON_2_4G] = rfctl->edcca_mode_2g =
+				rfctl->edcca_mode_2g_override != RTW_EDCCA_DEF ? rfctl->edcca_mode_2g_override :
+				rtw_regd_to_edcca_mode(rtw_chplan_get_default_regd_2g(rfctl->ChannelPlan));
+			#if CONFIG_IEEE80211_BAND_5GHZ
+			modes[BAND_ON_5G] = rfctl->edcca_mode_5g =
+				rfctl->edcca_mode_5g_override != RTW_EDCCA_DEF ? rfctl->edcca_mode_5g_override :
+				rtw_regd_to_edcca_mode(rtw_chplan_get_default_regd_5g(rfctl->ChannelPlan));
+			#endif
+			#if CONFIG_IEEE80211_BAND_6GHZ
+			modes[BAND_ON_6G] = rfctl->edcca_mode_6g =
+				rfctl->edcca_mode_6g_override != RTW_EDCCA_DEF ? rfctl->edcca_mode_6g_override :
+				rtw_regd_to_edcca_mode(rtw_chplan_get_default_regd_6g(rfctl->chplan_6g));
+			#endif
+			RTW_PRINT("update edcca_mode:%s\n"
+				, rtw_get_edcca_modes_str(buf, modes)
+			);
+		}
+	}
+}
+
+u8 rtw_get_edcca_mode(struct dvobj_priv *dvobj, BAND_TYPE band)
+{
+	struct rf_ctl_t *rfctl = dvobj_to_rfctl(dvobj);
+	u8 edcca_mode = RTW_EDCCA_NORMAL;
+
+	if (band == BAND_ON_2_4G)
+		edcca_mode = rfctl->edcca_mode_2g;
+	#if CONFIG_IEEE80211_BAND_5GHZ
+	else if (band == BAND_ON_5G)
+		edcca_mode = rfctl->edcca_mode_5g;
+	#endif
+	#if CONFIG_IEEE80211_BAND_6GHZ
+	else if (band == BAND_ON_6G)
+		edcca_mode = rfctl->edcca_mode_6g;
+	#endif
+
+	return edcca_mode;
+}
+
+char *rtw_get_txpwr_lmt_names_str(char *buf, const char *names[], u8 unknown_bmp)
+{
+#define NAME_DIFF ((void *)1)
+/* input comes form organized database, string with same content will not have different pointer */
+#define NAME_SEQ_COMPARE(result, operand) (result == NULL ? operand : (operand == NULL ? result : (result != operand ? NAME_DIFF : result)))
+
+	const char *name = NULL;
+	int cnt = 0;
+
+	name = NAME_SEQ_COMPARE(name, names[BAND_ON_2_4G]);
+#if CONFIG_IEEE80211_BAND_5GHZ
+	name = NAME_SEQ_COMPARE(name, names[BAND_ON_5G]);
+#endif
+#if CONFIG_IEEE80211_BAND_6GHZ
+	name = NAME_SEQ_COMPARE(name, names[BAND_ON_6G]);
+#endif
+
+	if (name != NAME_DIFF) { /* all available values are the same */
+		cnt += snprintf(buf + cnt, TXPWR_NAMES_STR_LEN - cnt - 1, "%s%s", (unknown_bmp & BIT(BAND_ON_2_4G)) ? "?" : "", name);
+		if (cnt >= TXPWR_NAMES_STR_LEN - 1)
+			goto exit;
+	} else {
+		cnt += snprintf(buf + cnt, TXPWR_NAMES_STR_LEN - cnt - 1, "%s%s ", (unknown_bmp & BIT(BAND_ON_2_4G)) ? "?" : "", names[BAND_ON_2_4G]);
+		if (cnt >= TXPWR_NAMES_STR_LEN - 1)
+			goto exit;
+		#if CONFIG_IEEE80211_BAND_5GHZ
+		cnt += snprintf(buf + cnt, TXPWR_NAMES_STR_LEN - cnt - 1, "%s%s ", (unknown_bmp & BIT(BAND_ON_5G)) ? "?" : "", names[BAND_ON_5G]);
+		if (cnt >= TXPWR_NAMES_STR_LEN - 1)
+			goto exit;
+		#endif
+		#if CONFIG_IEEE80211_BAND_6GHZ
+		cnt += snprintf(buf + cnt, TXPWR_NAMES_STR_LEN - cnt - 1, "%s%s ", (unknown_bmp & BIT(BAND_ON_6G)) ? "?" : "", names[BAND_ON_6G]);
+		if (cnt >= TXPWR_NAMES_STR_LEN - 1)
+			goto exit;
+		#endif
+		buf[cnt - 1] = 0;
+	}
+
+exit:
+	return buf;
+}
+
+#if CONFIG_IEEE80211_BAND_5GHZ
+#define COUNTRY_CHPLAN_ASSIGN_EDCCA_MODE_5G_OVERRIDE(_val) , .edcca_mode_5g_override = (_val)
+#else
+#define COUNTRY_CHPLAN_ASSIGN_EDCCA_MODE_5G_OVERRIDE(_val)
+#endif
+
+#if CONFIG_IEEE80211_BAND_6GHZ
+#define COUNTRY_CHPLAN_ASSIGN_CHPLAN_6G(_val) , .chplan_6g = (_val)
+#define COUNTRY_CHPLAN_ASSIGN_EDCCA_MODE_6G_OVERRIDE(_val) , .edcca_mode_6g_override = (_val)
 #else
-#define COUNTRY_CHPLAN_ASSIGN_EN_11AC(_val)
+#define COUNTRY_CHPLAN_ASSIGN_CHPLAN_6G(_val)
+#define COUNTRY_CHPLAN_ASSIGN_EDCCA_MODE_6G_OVERRIDE(_val)
 #endif
 
-#define COUNTRY_CHPLAN_ENT(_alpha2, _chplan, _en_11ac) \
+#if defined(CONFIG_80211AC_VHT) || defined(CONFIG_80211AX_HE)
+#define COUNTRY_CHPLAN_ASSIGN_PROTO_EN(_val) , .proto_en = (_val)
+#else
+#define COUNTRY_CHPLAN_ASSIGN_PROTO_EN(_val)
+#endif
+
+#define COUNTRY_CHPLAN_ENT(_alpha2, _chplan, _chplan_6g, _txpwr_lmt_override, _en_11ax, _en_11ac) \
 	{.alpha2 = (_alpha2), .chplan = (_chplan) \
-		COUNTRY_CHPLAN_ASSIGN_EN_11AC(_en_11ac) \
+		COUNTRY_CHPLAN_ASSIGN_CHPLAN_6G(_chplan_6g) \
+		, .edcca_mode_2g_override = RTW_EDCCA_DEF \
+		COUNTRY_CHPLAN_ASSIGN_EDCCA_MODE_5G_OVERRIDE(RTW_EDCCA_DEF) \
+		COUNTRY_CHPLAN_ASSIGN_EDCCA_MODE_6G_OVERRIDE(RTW_EDCCA_DEF) \
+		, .txpwr_lmt_override = TXPWR_LMT_##_txpwr_lmt_override \
+		COUNTRY_CHPLAN_ASSIGN_PROTO_EN((_en_11ax ? CHPLAN_PROTO_EN_AX : 0) | (_en_11ac ? CHPLAN_PROTO_EN_AC : 0)) \
 	}
 
+static const struct country_chplan world_wide_chplan =
+	COUNTRY_CHPLAN_ENT(WORLDWIDE_ALPHA2, RTW_CHPLAN_WORLDWIDE, RTW_CHPLAN_6G_WORLDWIDE, DEF, 1, 1);
+
 #ifdef CONFIG_CUSTOMIZED_COUNTRY_CHPLAN_MAP
 
 #include "../platform/custom_country_chplan.h"
@@ -631,1748 +1208,1759 @@ const char *_rtw_dfs_regd_str[] = {
 #elif RTW_DEF_MODULE_REGULATORY_CERT
 
 #if (RTW_DEF_MODULE_REGULATORY_CERT & RTW_MODULE_RTL8821AE_HMC_M2) /* 2013 certify */
-static const struct country_chplan RTL8821AE_HMC_M2_country_chplan_map[] = {
-	COUNTRY_CHPLAN_ENT("AE", 0x35, 1),
-	COUNTRY_CHPLAN_ENT("AL", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("AN", 0x76, 1),
-	COUNTRY_CHPLAN_ENT("AR", 0x61, 1),
-	COUNTRY_CHPLAN_ENT("AT", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("AU", 0x45, 1),
-	COUNTRY_CHPLAN_ENT("AZ", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("BA", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("BD", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("BE", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("BG", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("BH", 0x48, 1),
-	COUNTRY_CHPLAN_ENT("BO", 0x73, 1),
-	COUNTRY_CHPLAN_ENT("BR", 0x62, 1),
-	COUNTRY_CHPLAN_ENT("BW", 0x35, 1),
-	COUNTRY_CHPLAN_ENT("BY", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("CA", 0x34, 1),
-	COUNTRY_CHPLAN_ENT("CH", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("CI", 0x42, 1),
-	COUNTRY_CHPLAN_ENT("CL", 0x30, 1),
-	COUNTRY_CHPLAN_ENT("CN", 0x51, 1),
-	COUNTRY_CHPLAN_ENT("CO", 0x34, 1),
-	COUNTRY_CHPLAN_ENT("CR", 0x34, 1),
-	COUNTRY_CHPLAN_ENT("CY", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("CZ", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("DE", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("DK", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("DO", 0x34, 1),
-	COUNTRY_CHPLAN_ENT("DZ", 0x00, 1),
-	COUNTRY_CHPLAN_ENT("EC", 0x34, 1),
-	COUNTRY_CHPLAN_ENT("EE", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("EG", 0x47, 1),
-	COUNTRY_CHPLAN_ENT("ES", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("FI", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("FR", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("GB", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("GH", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("GR", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("GT", 0x34, 1),
-	COUNTRY_CHPLAN_ENT("HK", 0x35, 1),
-	COUNTRY_CHPLAN_ENT("HN", 0x32, 1),
-	COUNTRY_CHPLAN_ENT("HR", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("HU", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("ID", 0x3D, 0),
-	COUNTRY_CHPLAN_ENT("IE", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("IL", 0x47, 1),
-	COUNTRY_CHPLAN_ENT("IN", 0x48, 1),
-	COUNTRY_CHPLAN_ENT("IS", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("IT", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("JM", 0x32, 1),
-	COUNTRY_CHPLAN_ENT("JO", 0x49, 1),
-	COUNTRY_CHPLAN_ENT("JP", 0x27, 1),
-	COUNTRY_CHPLAN_ENT("KE", 0x47, 1),
-	COUNTRY_CHPLAN_ENT("KG", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("KH", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("KR", 0x28, 1),
-	COUNTRY_CHPLAN_ENT("KW", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("LB", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("LI", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("LK", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("LS", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("LT", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("LU", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("LV", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("MA", 0x47, 1),
-	COUNTRY_CHPLAN_ENT("MC", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("MD", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("ME", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("MK", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("MT", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("MX", 0x34, 1),
-	COUNTRY_CHPLAN_ENT("MY", 0x47, 1),
-	COUNTRY_CHPLAN_ENT("MZ", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("NG", 0x75, 1),
-	COUNTRY_CHPLAN_ENT("NI", 0x34, 1),
-	COUNTRY_CHPLAN_ENT("NL", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("NO", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("NZ", 0x45, 1),
-	COUNTRY_CHPLAN_ENT("OM", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("PA", 0x34, 1),
-	COUNTRY_CHPLAN_ENT("PE", 0x34, 1),
-	COUNTRY_CHPLAN_ENT("PG", 0x35, 1),
-	COUNTRY_CHPLAN_ENT("PH", 0x35, 1),
-	COUNTRY_CHPLAN_ENT("PK", 0x51, 1),
-	COUNTRY_CHPLAN_ENT("PL", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("PR", 0x34, 1),
-	COUNTRY_CHPLAN_ENT("PT", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("PY", 0x34, 1),
-	COUNTRY_CHPLAN_ENT("QA", 0x35, 1),
-	COUNTRY_CHPLAN_ENT("RO", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("RS", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("RU", 0x59, 1),
-	COUNTRY_CHPLAN_ENT("SA", 0x35, 1),
-	COUNTRY_CHPLAN_ENT("SE", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("SG", 0x35, 1),
-	COUNTRY_CHPLAN_ENT("SI", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("SK", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("SN", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("SV", 0x30, 1),
-	COUNTRY_CHPLAN_ENT("TH", 0x35, 1),
-	COUNTRY_CHPLAN_ENT("TN", 0x47, 1),
-	COUNTRY_CHPLAN_ENT("TR", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("TT", 0x76, 1),
-	COUNTRY_CHPLAN_ENT("TW", 0x39, 1),
-	COUNTRY_CHPLAN_ENT("UA", 0x36, 0),
-	COUNTRY_CHPLAN_ENT("UG", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("US", 0x34, 1),
-	COUNTRY_CHPLAN_ENT("UY", 0x30, 1),
-	COUNTRY_CHPLAN_ENT("VE", 0x30, 1),
-	COUNTRY_CHPLAN_ENT("VN", 0x35, 1),
-	COUNTRY_CHPLAN_ENT("ZA", 0x35, 1),
-	COUNTRY_CHPLAN_ENT("ZW", 0x26, 1),
+static const struct country_chplan RTL8821AE_HMC_M2_country_chplan_map[] = {
+	COUNTRY_CHPLAN_ENT("AE", 0x35, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("AL", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("AN", 0x76, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("AR", 0x61, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("AT", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("AU", 0x45, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("AZ", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("BA", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("BD", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("BE", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("BG", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("BH", 0x48, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("BO", 0x73, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("BR", 0x62, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("BW", 0x35, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("BY", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("CA", 0x34, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("CH", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("CI", 0x42, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("CL", 0x30, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("CN", 0x51, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("CO", 0x34, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("CR", 0x34, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("CY", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("CZ", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("DE", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("DK", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("DO", 0x34, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("DZ", 0x00, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("EC", 0x34, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("EE", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("EG", 0x47, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("ES", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("FI", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("FR", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("GB", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("GH", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("GR", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("GT", 0x34, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("HK", 0x35, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("HN", 0x32, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("HR", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("HU", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("ID", 0x3D, 0x00, DEF    , 0, 0),
+	COUNTRY_CHPLAN_ENT("IE", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("IL", 0x47, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("IN", 0x48, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("IS", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("IT", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("JM", 0x32, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("JO", 0x49, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("JP", 0x27, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("KE", 0x47, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("KG", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("KH", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("KR", 0x28, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("KW", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("LB", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("LI", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("LK", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("LS", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("LT", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("LU", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("LV", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("MA", 0x47, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("MC", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("MD", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("ME", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("MK", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("MT", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("MX", 0x34, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("MY", 0x47, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("MZ", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("NG", 0x75, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("NI", 0x34, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("NL", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("NO", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("NZ", 0x45, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("OM", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("PA", 0x34, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("PE", 0x34, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("PG", 0x35, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("PH", 0x35, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("PK", 0x51, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("PL", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("PR", 0x34, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("PT", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("PY", 0x34, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("QA", 0x35, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("RO", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("RS", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("RU", 0x59, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("SA", 0x35, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("SE", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("SG", 0x35, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("SI", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("SK", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("SN", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("SV", 0x30, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("TH", 0x35, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("TN", 0x47, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("TR", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("TT", 0x76, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("TW", 0x39, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("UA", 0x36, 0x00, DEF    , 0, 0),
+	COUNTRY_CHPLAN_ENT("UG", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("US", 0x34, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("UY", 0x30, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("VE", 0x30, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("VN", 0x35, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("ZA", 0x35, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("ZW", 0x26, 0x00, DEF    , 0, 1),
 };
 #endif
 
 #if (RTW_DEF_MODULE_REGULATORY_CERT & RTW_MODULE_RTL8821AU) /* 2014 certify */
-static const struct country_chplan RTL8821AU_country_chplan_map[] = {
-	COUNTRY_CHPLAN_ENT("AE", 0x35, 1),
-	COUNTRY_CHPLAN_ENT("AR", 0x61, 1),
-	COUNTRY_CHPLAN_ENT("AT", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("AU", 0x45, 1),
-	COUNTRY_CHPLAN_ENT("BE", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("CA", 0x34, 1),
-	COUNTRY_CHPLAN_ENT("CH", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("CN", 0x48, 1),
-	COUNTRY_CHPLAN_ENT("CY", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("CZ", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("DE", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("DK", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("EE", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("ES", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("FI", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("FR", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("GB", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("GR", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("HK", 0x35, 1),
-	COUNTRY_CHPLAN_ENT("HU", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("ID", 0x3D, 0),
-	COUNTRY_CHPLAN_ENT("IE", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("IS", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("IT", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("JO", 0x49, 1),
-	COUNTRY_CHPLAN_ENT("JP", 0x27, 1),
-	COUNTRY_CHPLAN_ENT("KR", 0x28, 1),
-	COUNTRY_CHPLAN_ENT("KW", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("LI", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("LT", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("LU", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("LV", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("MC", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("MT", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("NL", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("NO", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("NZ", 0x45, 1),
-	COUNTRY_CHPLAN_ENT("PL", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("PT", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("RU", 0x59, 0),
-	COUNTRY_CHPLAN_ENT("SA", 0x35, 1),
-	COUNTRY_CHPLAN_ENT("SE", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("SG", 0x35, 1),
-	COUNTRY_CHPLAN_ENT("SI", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("SK", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("TW", 0x39, 1),
-	COUNTRY_CHPLAN_ENT("UA", 0x36, 0),
-	COUNTRY_CHPLAN_ENT("US", 0x34, 1),
+static const struct country_chplan RTL8821AU_country_chplan_map[] = {
+	COUNTRY_CHPLAN_ENT("AE", 0x35, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("AR", 0x61, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("AT", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("AU", 0x45, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("BE", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("CA", 0x34, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("CH", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("CN", 0x48, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("CY", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("CZ", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("DE", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("DK", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("EE", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("ES", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("FI", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("FR", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("GB", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("GR", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("HK", 0x35, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("HU", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("ID", 0x3D, 0x00, DEF    , 0, 0),
+	COUNTRY_CHPLAN_ENT("IE", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("IS", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("IT", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("JO", 0x49, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("JP", 0x27, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("KR", 0x28, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("KW", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("LI", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("LT", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("LU", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("LV", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("MC", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("MT", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("NL", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("NO", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("NZ", 0x45, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("PL", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("PT", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("RU", 0x59, 0x00, DEF    , 0, 0),
+	COUNTRY_CHPLAN_ENT("SA", 0x35, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("SE", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("SG", 0x35, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("SI", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("SK", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("TW", 0x39, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("UA", 0x36, 0x00, DEF    , 0, 0),
+	COUNTRY_CHPLAN_ENT("US", 0x34, 0x00, DEF    , 0, 1),
 };
 #endif
 
 #if (RTW_DEF_MODULE_REGULATORY_CERT & RTW_MODULE_RTL8812AENF_NGFF) /* 2014 certify */
-static const struct country_chplan RTL8812AENF_NGFF_country_chplan_map[] = {
-	COUNTRY_CHPLAN_ENT("JP", 0x27, 1),
-	COUNTRY_CHPLAN_ENT("TW", 0x39, 1),
-	COUNTRY_CHPLAN_ENT("US", 0x34, 1),
+static const struct country_chplan RTL8812AENF_NGFF_country_chplan_map[] = {
+	COUNTRY_CHPLAN_ENT("JP", 0x27, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("TW", 0x39, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("US", 0x34, 0x00, DEF    , 0, 1),
 };
 #endif
 
 #if (RTW_DEF_MODULE_REGULATORY_CERT & RTW_MODULE_RTL8812AEBT_HMC) /* 2013 certify */
-static const struct country_chplan RTL8812AEBT_HMC_country_chplan_map[] = {
-	COUNTRY_CHPLAN_ENT("AE", 0x35, 1),
-	COUNTRY_CHPLAN_ENT("AT", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("AU", 0x45, 1),
-	COUNTRY_CHPLAN_ENT("BE", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("CA", 0x34, 1),
-	COUNTRY_CHPLAN_ENT("CH", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("CN", 0x48, 1),
-	COUNTRY_CHPLAN_ENT("CY", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("CZ", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("DE", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("DK", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("EE", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("ES", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("FI", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("FR", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("GB", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("GR", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("HK", 0x35, 1),
-	COUNTRY_CHPLAN_ENT("HR", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("HU", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("IE", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("IS", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("IT", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("JO", 0x49, 1),
-	COUNTRY_CHPLAN_ENT("JP", 0x27, 1),
-	COUNTRY_CHPLAN_ENT("KE", 0x47, 1),
-	COUNTRY_CHPLAN_ENT("KR", 0x28, 1),
-	COUNTRY_CHPLAN_ENT("KW", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("LI", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("LT", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("LU", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("LV", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("MC", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("MT", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("NG", 0x75, 1),
-	COUNTRY_CHPLAN_ENT("NL", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("NO", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("NZ", 0x45, 1),
-	COUNTRY_CHPLAN_ENT("OM", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("PL", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("PT", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("QA", 0x35, 1),
-	COUNTRY_CHPLAN_ENT("RU", 0x59, 0),
-	COUNTRY_CHPLAN_ENT("SA", 0x35, 1),
-	COUNTRY_CHPLAN_ENT("SE", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("SG", 0x35, 1),
-	COUNTRY_CHPLAN_ENT("SI", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("SK", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("TW", 0x39, 1),
-	COUNTRY_CHPLAN_ENT("UA", 0x36, 0),
-	COUNTRY_CHPLAN_ENT("US", 0x34, 1),
+static const struct country_chplan RTL8812AEBT_HMC_country_chplan_map[] = {
+	COUNTRY_CHPLAN_ENT("AE", 0x35, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("AT", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("AU", 0x45, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("BE", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("CA", 0x34, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("CH", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("CN", 0x48, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("CY", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("CZ", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("DE", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("DK", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("EE", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("ES", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("FI", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("FR", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("GB", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("GR", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("HK", 0x35, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("HR", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("HU", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("IE", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("IS", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("IT", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("JO", 0x49, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("JP", 0x27, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("KE", 0x47, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("KR", 0x28, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("KW", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("LI", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("LT", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("LU", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("LV", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("MC", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("MT", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("NG", 0x75, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("NL", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("NO", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("NZ", 0x45, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("OM", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("PL", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("PT", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("QA", 0x35, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("RU", 0x59, 0x00, DEF    , 0, 0),
+	COUNTRY_CHPLAN_ENT("SA", 0x35, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("SE", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("SG", 0x35, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("SI", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("SK", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("TW", 0x39, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("UA", 0x36, 0x00, DEF    , 0, 0),
+	COUNTRY_CHPLAN_ENT("US", 0x34, 0x00, DEF    , 0, 1),
 };
 #endif
 
 #if (RTW_DEF_MODULE_REGULATORY_CERT & RTW_MODULE_RTL8188EE_HMC_M2) /* 2012 certify */
-static const struct country_chplan RTL8188EE_HMC_M2_country_chplan_map[] = {
-	COUNTRY_CHPLAN_ENT("AE", 0x35, 1),
-	COUNTRY_CHPLAN_ENT("AL", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("AM", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("AN", 0x76, 1),
-	COUNTRY_CHPLAN_ENT("AR", 0x61, 1),
-	COUNTRY_CHPLAN_ENT("AT", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("AU", 0x45, 1),
-	COUNTRY_CHPLAN_ENT("AW", 0x34, 1),
-	COUNTRY_CHPLAN_ENT("AZ", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("BA", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("BB", 0x34, 1),
-	COUNTRY_CHPLAN_ENT("BD", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("BE", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("BF", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("BG", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("BH", 0x48, 1),
-	COUNTRY_CHPLAN_ENT("BI", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("BJ", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("BN", 0x47, 1),
-	COUNTRY_CHPLAN_ENT("BO", 0x73, 1),
-	COUNTRY_CHPLAN_ENT("BR", 0x62, 1),
-	COUNTRY_CHPLAN_ENT("BW", 0x35, 1),
-	COUNTRY_CHPLAN_ENT("BY", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("CA", 0x20, 1),
-	COUNTRY_CHPLAN_ENT("CD", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("CF", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("CG", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("CH", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("CI", 0x42, 1),
-	COUNTRY_CHPLAN_ENT("CL", 0x2D, 1),
-	COUNTRY_CHPLAN_ENT("CM", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("CN", 0x48, 1),
-	COUNTRY_CHPLAN_ENT("CO", 0x34, 1),
-	COUNTRY_CHPLAN_ENT("CR", 0x34, 1),
-	COUNTRY_CHPLAN_ENT("CV", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("CY", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("CZ", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("DE", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("DK", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("DO", 0x34, 1),
-	COUNTRY_CHPLAN_ENT("DZ", 0x00, 1),
-	COUNTRY_CHPLAN_ENT("EC", 0x34, 1),
-	COUNTRY_CHPLAN_ENT("EE", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("EG", 0x47, 1),
-	COUNTRY_CHPLAN_ENT("ES", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("ET", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("FI", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("FR", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("GA", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("GB", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("GD", 0x76, 1),
-	COUNTRY_CHPLAN_ENT("GH", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("GM", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("GN", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("GQ", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("GR", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("GT", 0x34, 1),
-	COUNTRY_CHPLAN_ENT("GW", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("HK", 0x35, 1),
-	COUNTRY_CHPLAN_ENT("HN", 0x32, 1),
-	COUNTRY_CHPLAN_ENT("HR", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("HT", 0x34, 1),
-	COUNTRY_CHPLAN_ENT("HU", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("ID", 0x5D, 1),
-	COUNTRY_CHPLAN_ENT("IE", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("IL", 0x47, 1),
-	COUNTRY_CHPLAN_ENT("IN", 0x48, 1),
-	COUNTRY_CHPLAN_ENT("IS", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("IT", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("JM", 0x32, 1),
-	COUNTRY_CHPLAN_ENT("JO", 0x49, 1),
-	COUNTRY_CHPLAN_ENT("JP", 0x27, 1),
-	COUNTRY_CHPLAN_ENT("KE", 0x47, 1),
-	COUNTRY_CHPLAN_ENT("KG", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("KH", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("KR", 0x28, 1),
-	COUNTRY_CHPLAN_ENT("KW", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("LB", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("LI", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("LK", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("LR", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("LS", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("LT", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("LU", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("LV", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("MA", 0x47, 1),
-	COUNTRY_CHPLAN_ENT("MC", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("MD", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("ME", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("MK", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("ML", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("MT", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("MU", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("MW", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("MX", 0x34, 1),
-	COUNTRY_CHPLAN_ENT("MY", 0x63, 1),
-	COUNTRY_CHPLAN_ENT("MZ", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("NE", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("NG", 0x75, 1),
-	COUNTRY_CHPLAN_ENT("NI", 0x34, 1),
-	COUNTRY_CHPLAN_ENT("NL", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("NO", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("NP", 0x48, 1),
-	COUNTRY_CHPLAN_ENT("NZ", 0x45, 1),
-	COUNTRY_CHPLAN_ENT("OM", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("PA", 0x34, 1),
-	COUNTRY_CHPLAN_ENT("PE", 0x34, 1),
-	COUNTRY_CHPLAN_ENT("PG", 0x35, 1),
-	COUNTRY_CHPLAN_ENT("PH", 0x35, 1),
-	COUNTRY_CHPLAN_ENT("PK", 0x51, 1),
-	COUNTRY_CHPLAN_ENT("PL", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("PR", 0x34, 1),
-	COUNTRY_CHPLAN_ENT("PT", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("PY", 0x34, 1),
-	COUNTRY_CHPLAN_ENT("QA", 0x35, 1),
-	COUNTRY_CHPLAN_ENT("RO", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("RS", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("RU", 0x59, 1),
-	COUNTRY_CHPLAN_ENT("RW", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("SA", 0x35, 1),
-	COUNTRY_CHPLAN_ENT("SC", 0x34, 1),
-	COUNTRY_CHPLAN_ENT("SE", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("SG", 0x35, 1),
-	COUNTRY_CHPLAN_ENT("SI", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("SK", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("SL", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("SN", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("SV", 0x30, 1),
-	COUNTRY_CHPLAN_ENT("TD", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("TG", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("TH", 0x35, 1),
-	COUNTRY_CHPLAN_ENT("TN", 0x47, 1),
-	COUNTRY_CHPLAN_ENT("TR", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("TT", 0x76, 1),
-	COUNTRY_CHPLAN_ENT("TW", 0x39, 1),
-	COUNTRY_CHPLAN_ENT("TZ", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("UA", 0x35, 1),
-	COUNTRY_CHPLAN_ENT("UG", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("US", 0x34, 1),
-	COUNTRY_CHPLAN_ENT("UY", 0x30, 1),
-	COUNTRY_CHPLAN_ENT("UZ", 0x47, 1),
-	COUNTRY_CHPLAN_ENT("VC", 0x34, 1),
-	COUNTRY_CHPLAN_ENT("VE", 0x30, 1),
-	COUNTRY_CHPLAN_ENT("VN", 0x35, 1),
-	COUNTRY_CHPLAN_ENT("ZA", 0x35, 1),
-	COUNTRY_CHPLAN_ENT("ZM", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("ZW", 0x26, 1),
+static const struct country_chplan RTL8188EE_HMC_M2_country_chplan_map[] = {
+	COUNTRY_CHPLAN_ENT("AE", 0x35, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("AL", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("AM", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("AN", 0x76, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("AR", 0x61, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("AT", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("AU", 0x45, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("AW", 0x34, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("AZ", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("BA", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("BB", 0x34, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("BD", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("BE", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("BF", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("BG", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("BH", 0x48, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("BI", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("BJ", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("BN", 0x47, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("BO", 0x73, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("BR", 0x62, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("BW", 0x35, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("BY", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("CA", 0x20, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("CD", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("CF", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("CG", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("CH", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("CI", 0x42, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("CL", 0x2D, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("CM", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("CN", 0x48, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("CO", 0x34, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("CR", 0x34, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("CV", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("CY", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("CZ", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("DE", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("DK", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("DO", 0x34, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("DZ", 0x00, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("EC", 0x34, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("EE", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("EG", 0x47, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("ES", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("ET", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("FI", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("FR", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("GA", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("GB", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("GD", 0x76, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("GH", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("GM", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("GN", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("GQ", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("GR", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("GT", 0x34, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("GW", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("HK", 0x35, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("HN", 0x32, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("HR", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("HT", 0x34, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("HU", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("ID", 0x5D, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("IE", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("IL", 0x47, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("IN", 0x48, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("IS", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("IT", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("JM", 0x32, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("JO", 0x49, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("JP", 0x27, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("KE", 0x47, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("KG", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("KH", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("KR", 0x28, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("KW", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("LB", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("LI", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("LK", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("LR", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("LS", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("LT", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("LU", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("LV", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("MA", 0x47, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("MC", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("MD", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("ME", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("MK", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("ML", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("MT", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("MU", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("MW", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("MX", 0x34, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("MY", 0x63, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("MZ", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("NE", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("NG", 0x75, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("NI", 0x34, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("NL", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("NO", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("NP", 0x48, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("NZ", 0x45, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("OM", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("PA", 0x34, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("PE", 0x34, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("PG", 0x35, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("PH", 0x35, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("PK", 0x51, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("PL", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("PR", 0x34, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("PT", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("PY", 0x34, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("QA", 0x35, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("RO", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("RS", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("RU", 0x59, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("RW", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("SA", 0x35, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("SC", 0x34, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("SE", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("SG", 0x35, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("SI", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("SK", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("SL", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("SN", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("SV", 0x30, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("TD", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("TG", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("TH", 0x35, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("TN", 0x47, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("TR", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("TT", 0x76, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("TW", 0x39, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("TZ", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("UA", 0x35, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("UG", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("US", 0x34, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("UY", 0x30, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("UZ", 0x47, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("VC", 0x34, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("VE", 0x30, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("VN", 0x35, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("ZA", 0x35, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("ZM", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("ZW", 0x26, 0x00, DEF    , 0, 1),
 };
 #endif
 
 #if (RTW_DEF_MODULE_REGULATORY_CERT & RTW_MODULE_RTL8723BE_HMC_M2) /* 2013 certify */
-static const struct country_chplan RTL8723BE_HMC_M2_country_chplan_map[] = {
-	COUNTRY_CHPLAN_ENT("AE", 0x35, 1),
-	COUNTRY_CHPLAN_ENT("AL", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("AM", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("AN", 0x76, 1),
-	COUNTRY_CHPLAN_ENT("AO", 0x47, 1),
-	COUNTRY_CHPLAN_ENT("AR", 0x61, 1),
-	COUNTRY_CHPLAN_ENT("AT", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("AU", 0x45, 1),
-	COUNTRY_CHPLAN_ENT("AW", 0x34, 1),
-	COUNTRY_CHPLAN_ENT("AZ", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("BA", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("BD", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("BE", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("BF", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("BG", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("BH", 0x48, 1),
-	COUNTRY_CHPLAN_ENT("BI", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("BJ", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("BO", 0x73, 1),
-	COUNTRY_CHPLAN_ENT("BR", 0x62, 1),
-	COUNTRY_CHPLAN_ENT("BS", 0x34, 1),
-	COUNTRY_CHPLAN_ENT("BW", 0x35, 1),
-	COUNTRY_CHPLAN_ENT("BY", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("CA", 0x20, 1),
-	COUNTRY_CHPLAN_ENT("CD", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("CF", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("CG", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("CH", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("CI", 0x42, 1),
-	COUNTRY_CHPLAN_ENT("CL", 0x2D, 1),
-	COUNTRY_CHPLAN_ENT("CM", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("CN", 0x48, 1),
-	COUNTRY_CHPLAN_ENT("CO", 0x34, 1),
-	COUNTRY_CHPLAN_ENT("CR", 0x34, 1),
-	COUNTRY_CHPLAN_ENT("CV", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("CY", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("CZ", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("DE", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("DK", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("DO", 0x34, 1),
-	COUNTRY_CHPLAN_ENT("DZ", 0x00, 1),
-	COUNTRY_CHPLAN_ENT("EC", 0x34, 1),
-	COUNTRY_CHPLAN_ENT("EE", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("EG", 0x47, 1),
-	COUNTRY_CHPLAN_ENT("ES", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("ET", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("FI", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("FR", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("GA", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("GB", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("GD", 0x76, 1),
-	COUNTRY_CHPLAN_ENT("GH", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("GM", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("GQ", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("GR", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("GT", 0x34, 1),
-	COUNTRY_CHPLAN_ENT("GW", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("HK", 0x35, 1),
-	COUNTRY_CHPLAN_ENT("HN", 0x32, 1),
-	COUNTRY_CHPLAN_ENT("HR", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("HU", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("ID", 0x5D, 1),
-	COUNTRY_CHPLAN_ENT("IE", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("IL", 0x47, 1),
-	COUNTRY_CHPLAN_ENT("IN", 0x48, 1),
-	COUNTRY_CHPLAN_ENT("IS", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("IT", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("JM", 0x32, 1),
-	COUNTRY_CHPLAN_ENT("JO", 0x49, 1),
-	COUNTRY_CHPLAN_ENT("JP", 0x27, 1),
-	COUNTRY_CHPLAN_ENT("KE", 0x47, 1),
-	COUNTRY_CHPLAN_ENT("KG", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("KH", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("KR", 0x28, 1),
-	COUNTRY_CHPLAN_ENT("KW", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("LB", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("LI", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("LK", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("LR", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("LS", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("LT", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("LU", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("LV", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("MA", 0x47, 1),
-	COUNTRY_CHPLAN_ENT("MC", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("MD", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("ME", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("MG", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("MK", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("ML", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("MR", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("MT", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("MU", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("MW", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("MX", 0x34, 1),
-	COUNTRY_CHPLAN_ENT("MY", 0x63, 1),
-	COUNTRY_CHPLAN_ENT("MZ", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("NE", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("NG", 0x75, 1),
-	COUNTRY_CHPLAN_ENT("NI", 0x34, 1),
-	COUNTRY_CHPLAN_ENT("NL", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("NO", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("NP", 0x48, 1),
-	COUNTRY_CHPLAN_ENT("NZ", 0x45, 1),
-	COUNTRY_CHPLAN_ENT("OM", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("PA", 0x34, 1),
-	COUNTRY_CHPLAN_ENT("PE", 0x34, 1),
-	COUNTRY_CHPLAN_ENT("PG", 0x35, 1),
-	COUNTRY_CHPLAN_ENT("PH", 0x35, 1),
-	COUNTRY_CHPLAN_ENT("PK", 0x51, 1),
-	COUNTRY_CHPLAN_ENT("PL", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("PR", 0x34, 1),
-	COUNTRY_CHPLAN_ENT("PT", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("PY", 0x34, 1),
-	COUNTRY_CHPLAN_ENT("QA", 0x35, 1),
-	COUNTRY_CHPLAN_ENT("RO", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("RS", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("RU", 0x59, 1),
-	COUNTRY_CHPLAN_ENT("RW", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("SA", 0x35, 1),
-	COUNTRY_CHPLAN_ENT("SE", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("SG", 0x35, 1),
-	COUNTRY_CHPLAN_ENT("SI", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("SK", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("SL", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("SN", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("SV", 0x30, 1),
-	COUNTRY_CHPLAN_ENT("SZ", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("TD", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("TG", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("TH", 0x35, 1),
-	COUNTRY_CHPLAN_ENT("TN", 0x47, 1),
-	COUNTRY_CHPLAN_ENT("TR", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("TT", 0x76, 1),
-	COUNTRY_CHPLAN_ENT("TW", 0x39, 1),
-	COUNTRY_CHPLAN_ENT("TZ", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("UA", 0x35, 1),
-	COUNTRY_CHPLAN_ENT("UG", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("US", 0x34, 1),
-	COUNTRY_CHPLAN_ENT("UY", 0x30, 1),
-	COUNTRY_CHPLAN_ENT("UZ", 0x47, 1),
-	COUNTRY_CHPLAN_ENT("VE", 0x30, 1),
-	COUNTRY_CHPLAN_ENT("VN", 0x35, 1),
-	COUNTRY_CHPLAN_ENT("ZA", 0x35, 1),
-	COUNTRY_CHPLAN_ENT("ZM", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("ZW", 0x26, 1),
+static const struct country_chplan RTL8723BE_HMC_M2_country_chplan_map[] = {
+	COUNTRY_CHPLAN_ENT("AE", 0x35, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("AL", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("AM", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("AN", 0x76, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("AO", 0x47, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("AR", 0x61, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("AT", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("AU", 0x45, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("AW", 0x34, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("AZ", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("BA", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("BD", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("BE", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("BF", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("BG", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("BH", 0x48, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("BI", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("BJ", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("BO", 0x73, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("BR", 0x62, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("BS", 0x34, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("BW", 0x35, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("BY", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("CA", 0x20, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("CD", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("CF", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("CG", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("CH", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("CI", 0x42, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("CL", 0x2D, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("CM", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("CN", 0x48, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("CO", 0x34, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("CR", 0x34, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("CV", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("CY", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("CZ", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("DE", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("DK", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("DO", 0x34, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("DZ", 0x00, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("EC", 0x34, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("EE", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("EG", 0x47, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("ES", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("ET", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("FI", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("FR", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("GA", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("GB", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("GD", 0x76, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("GH", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("GM", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("GQ", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("GR", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("GT", 0x34, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("GW", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("HK", 0x35, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("HN", 0x32, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("HR", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("HU", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("ID", 0x5D, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("IE", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("IL", 0x47, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("IN", 0x48, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("IS", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("IT", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("JM", 0x32, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("JO", 0x49, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("JP", 0x27, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("KE", 0x47, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("KG", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("KH", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("KR", 0x28, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("KW", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("LB", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("LI", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("LK", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("LR", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("LS", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("LT", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("LU", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("LV", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("MA", 0x47, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("MC", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("MD", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("ME", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("MG", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("MK", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("ML", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("MR", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("MT", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("MU", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("MW", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("MX", 0x34, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("MY", 0x63, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("MZ", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("NE", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("NG", 0x75, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("NI", 0x34, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("NL", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("NO", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("NP", 0x48, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("NZ", 0x45, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("OM", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("PA", 0x34, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("PE", 0x34, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("PG", 0x35, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("PH", 0x35, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("PK", 0x51, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("PL", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("PR", 0x34, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("PT", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("PY", 0x34, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("QA", 0x35, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("RO", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("RS", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("RU", 0x59, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("RW", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("SA", 0x35, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("SE", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("SG", 0x35, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("SI", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("SK", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("SL", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("SN", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("SV", 0x30, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("SZ", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("TD", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("TG", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("TH", 0x35, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("TN", 0x47, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("TR", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("TT", 0x76, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("TW", 0x39, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("TZ", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("UA", 0x35, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("UG", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("US", 0x34, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("UY", 0x30, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("UZ", 0x47, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("VE", 0x30, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("VN", 0x35, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("ZA", 0x35, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("ZM", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("ZW", 0x26, 0x00, DEF    , 0, 1),
 };
 #endif
 
 #if (RTW_DEF_MODULE_REGULATORY_CERT & RTW_MODULE_RTL8723BS_NGFF1216) /* 2014 certify */
-static const struct country_chplan RTL8723BS_NGFF1216_country_chplan_map[] = {
-	COUNTRY_CHPLAN_ENT("AE", 0x35, 1),
-	COUNTRY_CHPLAN_ENT("AL", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("AN", 0x76, 1),
-	COUNTRY_CHPLAN_ENT("AO", 0x47, 1),
-	COUNTRY_CHPLAN_ENT("AR", 0x61, 1),
-	COUNTRY_CHPLAN_ENT("AT", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("AU", 0x45, 1),
-	COUNTRY_CHPLAN_ENT("AZ", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("BA", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("BB", 0x34, 1),
-	COUNTRY_CHPLAN_ENT("BD", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("BE", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("BG", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("BH", 0x48, 1),
-	COUNTRY_CHPLAN_ENT("BO", 0x73, 1),
-	COUNTRY_CHPLAN_ENT("BR", 0x62, 1),
-	COUNTRY_CHPLAN_ENT("BW", 0x35, 1),
-	COUNTRY_CHPLAN_ENT("BY", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("CA", 0x20, 1),
-	COUNTRY_CHPLAN_ENT("CH", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("CI", 0x42, 1),
-	COUNTRY_CHPLAN_ENT("CL", 0x2D, 1),
-	COUNTRY_CHPLAN_ENT("CN", 0x48, 1),
-	COUNTRY_CHPLAN_ENT("CO", 0x34, 1),
-	COUNTRY_CHPLAN_ENT("CR", 0x34, 1),
-	COUNTRY_CHPLAN_ENT("CY", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("CZ", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("DE", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("DK", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("DO", 0x34, 1),
-	COUNTRY_CHPLAN_ENT("DZ", 0x00, 1),
-	COUNTRY_CHPLAN_ENT("EC", 0x34, 1),
-	COUNTRY_CHPLAN_ENT("EE", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("EG", 0x47, 1),
-	COUNTRY_CHPLAN_ENT("ES", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("FI", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("FR", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("GB", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("GH", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("GR", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("GT", 0x34, 1),
-	COUNTRY_CHPLAN_ENT("HK", 0x35, 1),
-	COUNTRY_CHPLAN_ENT("HN", 0x32, 1),
-	COUNTRY_CHPLAN_ENT("HR", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("HT", 0x34, 1),
-	COUNTRY_CHPLAN_ENT("HU", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("ID", 0x5D, 1),
-	COUNTRY_CHPLAN_ENT("IE", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("IL", 0x47, 1),
-	COUNTRY_CHPLAN_ENT("IN", 0x48, 1),
-	COUNTRY_CHPLAN_ENT("IS", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("IT", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("JM", 0x32, 1),
-	COUNTRY_CHPLAN_ENT("JO", 0x49, 1),
-	COUNTRY_CHPLAN_ENT("JP", 0x27, 1),
-	COUNTRY_CHPLAN_ENT("KE", 0x47, 1),
-	COUNTRY_CHPLAN_ENT("KG", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("KH", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("KR", 0x28, 1),
-	COUNTRY_CHPLAN_ENT("KW", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("LB", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("LI", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("LK", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("LS", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("LT", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("LU", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("LV", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("MA", 0x47, 1),
-	COUNTRY_CHPLAN_ENT("MC", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("MD", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("ME", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("MK", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("MQ", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("MT", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("MX", 0x34, 1),
-	COUNTRY_CHPLAN_ENT("MY", 0x63, 1),
-	COUNTRY_CHPLAN_ENT("MZ", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("NG", 0x75, 1),
-	COUNTRY_CHPLAN_ENT("NI", 0x34, 1),
-	COUNTRY_CHPLAN_ENT("NL", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("NO", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("NP", 0x48, 1),
-	COUNTRY_CHPLAN_ENT("NZ", 0x45, 1),
-	COUNTRY_CHPLAN_ENT("OM", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("PA", 0x34, 1),
-	COUNTRY_CHPLAN_ENT("PE", 0x34, 1),
-	COUNTRY_CHPLAN_ENT("PG", 0x35, 1),
-	COUNTRY_CHPLAN_ENT("PH", 0x35, 1),
-	COUNTRY_CHPLAN_ENT("PK", 0x51, 1),
-	COUNTRY_CHPLAN_ENT("PL", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("PR", 0x34, 1),
-	COUNTRY_CHPLAN_ENT("PT", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("PY", 0x34, 1),
-	COUNTRY_CHPLAN_ENT("QA", 0x35, 1),
-	COUNTRY_CHPLAN_ENT("RO", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("RS", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("RU", 0x59, 1),
-	COUNTRY_CHPLAN_ENT("SA", 0x35, 1),
-	COUNTRY_CHPLAN_ENT("SE", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("SG", 0x35, 1),
-	COUNTRY_CHPLAN_ENT("SI", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("SK", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("SN", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("SV", 0x30, 1),
-	COUNTRY_CHPLAN_ENT("TH", 0x35, 1),
-	COUNTRY_CHPLAN_ENT("TJ", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("TN", 0x47, 1),
-	COUNTRY_CHPLAN_ENT("TR", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("TT", 0x76, 1),
-	COUNTRY_CHPLAN_ENT("TW", 0x39, 1),
-	COUNTRY_CHPLAN_ENT("TZ", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("UA", 0x35, 1),
-	COUNTRY_CHPLAN_ENT("UG", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("US", 0x34, 1),
-	COUNTRY_CHPLAN_ENT("UY", 0x30, 1),
-	COUNTRY_CHPLAN_ENT("UZ", 0x47, 1),
-	COUNTRY_CHPLAN_ENT("VE", 0x30, 1),
-	COUNTRY_CHPLAN_ENT("VN", 0x35, 1),
-	COUNTRY_CHPLAN_ENT("YE", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("ZA", 0x35, 1),
-	COUNTRY_CHPLAN_ENT("ZW", 0x26, 1),
+static const struct country_chplan RTL8723BS_NGFF1216_country_chplan_map[] = {
+	COUNTRY_CHPLAN_ENT("AE", 0x35, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("AL", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("AN", 0x76, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("AO", 0x47, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("AR", 0x61, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("AT", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("AU", 0x45, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("AZ", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("BA", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("BB", 0x34, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("BD", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("BE", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("BG", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("BH", 0x48, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("BO", 0x73, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("BR", 0x62, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("BW", 0x35, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("BY", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("CA", 0x20, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("CH", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("CI", 0x42, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("CL", 0x2D, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("CN", 0x48, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("CO", 0x34, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("CR", 0x34, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("CY", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("CZ", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("DE", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("DK", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("DO", 0x34, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("DZ", 0x00, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("EC", 0x34, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("EE", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("EG", 0x47, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("ES", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("FI", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("FR", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("GB", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("GH", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("GR", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("GT", 0x34, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("HK", 0x35, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("HN", 0x32, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("HR", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("HT", 0x34, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("HU", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("ID", 0x5D, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("IE", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("IL", 0x47, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("IN", 0x48, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("IS", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("IT", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("JM", 0x32, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("JO", 0x49, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("JP", 0x27, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("KE", 0x47, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("KG", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("KH", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("KR", 0x28, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("KW", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("LB", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("LI", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("LK", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("LS", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("LT", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("LU", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("LV", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("MA", 0x47, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("MC", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("MD", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("ME", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("MK", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("MQ", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("MT", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("MX", 0x34, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("MY", 0x63, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("MZ", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("NG", 0x75, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("NI", 0x34, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("NL", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("NO", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("NP", 0x48, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("NZ", 0x45, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("OM", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("PA", 0x34, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("PE", 0x34, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("PG", 0x35, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("PH", 0x35, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("PK", 0x51, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("PL", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("PR", 0x34, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("PT", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("PY", 0x34, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("QA", 0x35, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("RO", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("RS", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("RU", 0x59, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("SA", 0x35, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("SE", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("SG", 0x35, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("SI", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("SK", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("SN", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("SV", 0x30, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("TH", 0x35, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("TJ", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("TN", 0x47, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("TR", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("TT", 0x76, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("TW", 0x39, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("TZ", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("UA", 0x35, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("UG", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("US", 0x34, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("UY", 0x30, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("UZ", 0x47, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("VE", 0x30, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("VN", 0x35, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("YE", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("ZA", 0x35, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("ZW", 0x26, 0x00, DEF    , 0, 1),
 };
 #endif
 
 #if (RTW_DEF_MODULE_REGULATORY_CERT & RTW_MODULE_RTL8192EEBT_HMC_M2) /* 2013 certify */
-static const struct country_chplan RTL8192EEBT_HMC_M2_country_chplan_map[] = {
-	COUNTRY_CHPLAN_ENT("AE", 0x35, 1),
-	COUNTRY_CHPLAN_ENT("AL", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("AM", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("AN", 0x76, 1),
-	COUNTRY_CHPLAN_ENT("AO", 0x47, 1),
-	COUNTRY_CHPLAN_ENT("AR", 0x61, 1),
-	COUNTRY_CHPLAN_ENT("AT", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("AU", 0x45, 1),
-	COUNTRY_CHPLAN_ENT("AW", 0x34, 1),
-	COUNTRY_CHPLAN_ENT("AZ", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("BA", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("BD", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("BE", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("BF", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("BG", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("BH", 0x48, 1),
-	COUNTRY_CHPLAN_ENT("BI", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("BJ", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("BO", 0x73, 1),
-	COUNTRY_CHPLAN_ENT("BR", 0x62, 1),
-	COUNTRY_CHPLAN_ENT("BW", 0x35, 1),
-	COUNTRY_CHPLAN_ENT("BY", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("CA", 0x20, 1),
-	COUNTRY_CHPLAN_ENT("CD", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("CF", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("CG", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("CH", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("CI", 0x42, 1),
-	COUNTRY_CHPLAN_ENT("CL", 0x2D, 1),
-	COUNTRY_CHPLAN_ENT("CM", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("CN", 0x48, 1),
-	COUNTRY_CHPLAN_ENT("CO", 0x34, 1),
-	COUNTRY_CHPLAN_ENT("CR", 0x34, 1),
-	COUNTRY_CHPLAN_ENT("CV", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("CY", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("CZ", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("DE", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("DJ", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("DK", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("DO", 0x34, 1),
-	COUNTRY_CHPLAN_ENT("DZ", 0x00, 1),
-	COUNTRY_CHPLAN_ENT("EC", 0x34, 1),
-	COUNTRY_CHPLAN_ENT("EE", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("EG", 0x47, 1),
-	COUNTRY_CHPLAN_ENT("EH", 0x47, 1),
-	COUNTRY_CHPLAN_ENT("ES", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("ET", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("FI", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("FR", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("GA", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("GB", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("GD", 0x76, 1),
-	COUNTRY_CHPLAN_ENT("GF", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("GH", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("GM", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("GQ", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("GR", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("GT", 0x34, 1),
-	COUNTRY_CHPLAN_ENT("GW", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("HK", 0x35, 1),
-	COUNTRY_CHPLAN_ENT("HN", 0x32, 1),
-	COUNTRY_CHPLAN_ENT("HR", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("HU", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("ID", 0x5D, 1),
-	COUNTRY_CHPLAN_ENT("IE", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("IL", 0x47, 1),
-	COUNTRY_CHPLAN_ENT("IN", 0x48, 1),
-	COUNTRY_CHPLAN_ENT("IS", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("IT", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("JM", 0x32, 1),
-	COUNTRY_CHPLAN_ENT("JO", 0x49, 1),
-	COUNTRY_CHPLAN_ENT("JP", 0x27, 1),
-	COUNTRY_CHPLAN_ENT("KE", 0x47, 1),
-	COUNTRY_CHPLAN_ENT("KG", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("KH", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("KR", 0x28, 1),
-	COUNTRY_CHPLAN_ENT("KW", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("LB", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("LI", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("LK", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("LR", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("LS", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("LT", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("LU", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("LV", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("MA", 0x47, 1),
-	COUNTRY_CHPLAN_ENT("MC", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("MD", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("ME", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("MK", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("ML", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("MR", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("MT", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("MU", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("MW", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("MX", 0x34, 1),
-	COUNTRY_CHPLAN_ENT("MY", 0x63, 1),
-	COUNTRY_CHPLAN_ENT("MZ", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("NE", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("NG", 0x75, 1),
-	COUNTRY_CHPLAN_ENT("NI", 0x34, 1),
-	COUNTRY_CHPLAN_ENT("NL", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("NO", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("NP", 0x48, 1),
-	COUNTRY_CHPLAN_ENT("NZ", 0x45, 1),
-	COUNTRY_CHPLAN_ENT("OM", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("PA", 0x34, 1),
-	COUNTRY_CHPLAN_ENT("PE", 0x34, 1),
-	COUNTRY_CHPLAN_ENT("PG", 0x35, 1),
-	COUNTRY_CHPLAN_ENT("PH", 0x35, 1),
-	COUNTRY_CHPLAN_ENT("PK", 0x51, 1),
-	COUNTRY_CHPLAN_ENT("PL", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("PR", 0x34, 1),
-	COUNTRY_CHPLAN_ENT("PT", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("PY", 0x34, 1),
-	COUNTRY_CHPLAN_ENT("QA", 0x35, 1),
-	COUNTRY_CHPLAN_ENT("RO", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("RS", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("RU", 0x59, 1),
-	COUNTRY_CHPLAN_ENT("RW", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("SA", 0x35, 1),
-	COUNTRY_CHPLAN_ENT("SC", 0x34, 1),
-	COUNTRY_CHPLAN_ENT("SE", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("SG", 0x35, 1),
-	COUNTRY_CHPLAN_ENT("SI", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("SK", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("SL", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("SN", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("ST", 0x34, 1),
-	COUNTRY_CHPLAN_ENT("SV", 0x30, 1),
-	COUNTRY_CHPLAN_ENT("TD", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("TF", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("TG", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("TH", 0x35, 1),
-	COUNTRY_CHPLAN_ENT("TN", 0x47, 1),
-	COUNTRY_CHPLAN_ENT("TR", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("TT", 0x76, 1),
-	COUNTRY_CHPLAN_ENT("TW", 0x39, 1),
-	COUNTRY_CHPLAN_ENT("TZ", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("UA", 0x35, 1),
-	COUNTRY_CHPLAN_ENT("UG", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("US", 0x34, 1),
-	COUNTRY_CHPLAN_ENT("UY", 0x30, 1),
-	COUNTRY_CHPLAN_ENT("UZ", 0x47, 1),
-	COUNTRY_CHPLAN_ENT("VE", 0x30, 1),
-	COUNTRY_CHPLAN_ENT("VN", 0x35, 1),
-	COUNTRY_CHPLAN_ENT("YT", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("ZA", 0x35, 1),
-	COUNTRY_CHPLAN_ENT("ZM", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("ZW", 0x26, 1),
+static const struct country_chplan RTL8192EEBT_HMC_M2_country_chplan_map[] = {
+	COUNTRY_CHPLAN_ENT("AE", 0x35, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("AL", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("AM", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("AN", 0x76, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("AO", 0x47, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("AR", 0x61, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("AT", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("AU", 0x45, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("AW", 0x34, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("AZ", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("BA", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("BD", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("BE", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("BF", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("BG", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("BH", 0x48, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("BI", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("BJ", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("BO", 0x73, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("BR", 0x62, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("BW", 0x35, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("BY", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("CA", 0x20, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("CD", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("CF", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("CG", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("CH", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("CI", 0x42, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("CL", 0x2D, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("CM", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("CN", 0x48, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("CO", 0x34, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("CR", 0x34, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("CV", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("CY", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("CZ", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("DE", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("DJ", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("DK", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("DO", 0x34, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("DZ", 0x00, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("EC", 0x34, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("EE", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("EG", 0x47, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("EH", 0x47, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("ES", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("ET", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("FI", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("FR", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("GA", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("GB", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("GD", 0x76, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("GF", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("GH", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("GM", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("GQ", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("GR", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("GT", 0x34, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("GW", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("HK", 0x35, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("HN", 0x32, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("HR", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("HU", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("ID", 0x5D, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("IE", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("IL", 0x47, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("IN", 0x48, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("IS", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("IT", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("JM", 0x32, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("JO", 0x49, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("JP", 0x27, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("KE", 0x47, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("KG", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("KH", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("KR", 0x28, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("KW", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("LB", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("LI", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("LK", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("LR", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("LS", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("LT", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("LU", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("LV", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("MA", 0x47, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("MC", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("MD", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("ME", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("MK", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("ML", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("MR", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("MT", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("MU", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("MW", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("MX", 0x34, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("MY", 0x63, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("MZ", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("NE", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("NG", 0x75, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("NI", 0x34, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("NL", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("NO", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("NP", 0x48, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("NZ", 0x45, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("OM", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("PA", 0x34, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("PE", 0x34, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("PG", 0x35, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("PH", 0x35, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("PK", 0x51, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("PL", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("PR", 0x34, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("PT", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("PY", 0x34, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("QA", 0x35, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("RO", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("RS", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("RU", 0x59, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("RW", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("SA", 0x35, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("SC", 0x34, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("SE", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("SG", 0x35, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("SI", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("SK", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("SL", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("SN", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("ST", 0x34, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("SV", 0x30, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("TD", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("TF", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("TG", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("TH", 0x35, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("TN", 0x47, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("TR", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("TT", 0x76, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("TW", 0x39, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("TZ", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("UA", 0x35, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("UG", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("US", 0x34, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("UY", 0x30, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("UZ", 0x47, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("VE", 0x30, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("VN", 0x35, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("YT", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("ZA", 0x35, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("ZM", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("ZW", 0x26, 0x00, DEF    , 0, 1),
 };
 #endif
 
 #if (RTW_DEF_MODULE_REGULATORY_CERT & RTW_MODULE_RTL8723DE_NGFF1630) /* 2016 certify */
-static const struct country_chplan RTL8723DE_NGFF1630_country_chplan_map[] = {
-	COUNTRY_CHPLAN_ENT("AE", 0x35, 1),
-	COUNTRY_CHPLAN_ENT("AL", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("AN", 0x76, 1),
-	COUNTRY_CHPLAN_ENT("AR", 0x61, 1),
-	COUNTRY_CHPLAN_ENT("AT", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("AU", 0x45, 1),
-	COUNTRY_CHPLAN_ENT("AZ", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("BA", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("BD", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("BE", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("BG", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("BH", 0x48, 1),
-	COUNTRY_CHPLAN_ENT("BO", 0x73, 1),
-	COUNTRY_CHPLAN_ENT("BR", 0x62, 1),
-	COUNTRY_CHPLAN_ENT("BY", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("CA", 0x2A, 1),
-	COUNTRY_CHPLAN_ENT("CH", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("CI", 0x42, 1),
-	COUNTRY_CHPLAN_ENT("CL", 0x2D, 1),
-	COUNTRY_CHPLAN_ENT("CN", 0x48, 1),
-	COUNTRY_CHPLAN_ENT("CO", 0x76, 1),
-	COUNTRY_CHPLAN_ENT("CR", 0x76, 1),
-	COUNTRY_CHPLAN_ENT("CY", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("CZ", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("DE", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("DK", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("DO", 0x76, 1),
-	COUNTRY_CHPLAN_ENT("DZ", 0x00, 1),
-	COUNTRY_CHPLAN_ENT("EC", 0x76, 1),
-	COUNTRY_CHPLAN_ENT("EE", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("EG", 0x47, 1),
-	COUNTRY_CHPLAN_ENT("ES", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("FI", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("FR", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("GB", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("GH", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("GR", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("GT", 0x61, 1),
-	COUNTRY_CHPLAN_ENT("HK", 0x35, 1),
-	COUNTRY_CHPLAN_ENT("HN", 0x32, 1),
-	COUNTRY_CHPLAN_ENT("HR", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("HU", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("ID", 0x5D, 1),
-	COUNTRY_CHPLAN_ENT("IE", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("IL", 0x47, 1),
-	COUNTRY_CHPLAN_ENT("IN", 0x48, 1),
-	COUNTRY_CHPLAN_ENT("IS", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("IT", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("JM", 0x32, 1),
-	COUNTRY_CHPLAN_ENT("JO", 0x49, 1),
-	COUNTRY_CHPLAN_ENT("JP", 0x27, 1),
-	COUNTRY_CHPLAN_ENT("KE", 0x47, 1),
-	COUNTRY_CHPLAN_ENT("KG", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("KH", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("KR", 0x28, 1),
-	COUNTRY_CHPLAN_ENT("KW", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("KZ", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("LB", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("LI", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("LK", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("LS", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("LT", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("LU", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("LV", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("MA", 0x47, 1),
-	COUNTRY_CHPLAN_ENT("MC", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("MD", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("ME", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("MK", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("MT", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("MX", 0x34, 1),
-	COUNTRY_CHPLAN_ENT("MY", 0x63, 1),
-	COUNTRY_CHPLAN_ENT("MZ", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("NA", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("NG", 0x75, 1),
-	COUNTRY_CHPLAN_ENT("NI", 0x76, 1),
-	COUNTRY_CHPLAN_ENT("NL", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("NO", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("NZ", 0x45, 1),
-	COUNTRY_CHPLAN_ENT("OM", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("PA", 0x76, 1),
-	COUNTRY_CHPLAN_ENT("PE", 0x76, 1),
-	COUNTRY_CHPLAN_ENT("PG", 0x35, 1),
-	COUNTRY_CHPLAN_ENT("PH", 0x35, 1),
-	COUNTRY_CHPLAN_ENT("PK", 0x51, 1),
-	COUNTRY_CHPLAN_ENT("PL", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("PR", 0x76, 1),
-	COUNTRY_CHPLAN_ENT("PT", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("PY", 0x76, 1),
-	COUNTRY_CHPLAN_ENT("QA", 0x35, 1),
-	COUNTRY_CHPLAN_ENT("RO", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("RS", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("RU", 0x59, 1),
-	COUNTRY_CHPLAN_ENT("SA", 0x35, 1),
-	COUNTRY_CHPLAN_ENT("SE", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("SG", 0x35, 1),
-	COUNTRY_CHPLAN_ENT("SI", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("SK", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("SN", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("SV", 0x30, 1),
-	COUNTRY_CHPLAN_ENT("TH", 0x35, 1),
-	COUNTRY_CHPLAN_ENT("TN", 0x47, 1),
-	COUNTRY_CHPLAN_ENT("TR", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("TT", 0x76, 1),
-	COUNTRY_CHPLAN_ENT("TW", 0x76, 1),
-	COUNTRY_CHPLAN_ENT("UA", 0x35, 1),
-	COUNTRY_CHPLAN_ENT("US", 0x76, 1),
-	COUNTRY_CHPLAN_ENT("UY", 0x30, 1),
-	COUNTRY_CHPLAN_ENT("VE", 0x30, 1),
-	COUNTRY_CHPLAN_ENT("VN", 0x35, 1),
-	COUNTRY_CHPLAN_ENT("ZA", 0x35, 1),
-	COUNTRY_CHPLAN_ENT("ZW", 0x26, 1),
+static const struct country_chplan RTL8723DE_NGFF1630_country_chplan_map[] = {
+	COUNTRY_CHPLAN_ENT("AE", 0x35, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("AL", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("AN", 0x76, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("AR", 0x61, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("AT", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("AU", 0x45, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("AZ", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("BA", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("BD", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("BE", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("BG", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("BH", 0x48, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("BO", 0x73, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("BR", 0x62, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("BY", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("CA", 0x2A, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("CH", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("CI", 0x42, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("CL", 0x2D, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("CN", 0x48, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("CO", 0x76, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("CR", 0x76, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("CY", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("CZ", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("DE", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("DK", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("DO", 0x76, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("DZ", 0x00, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("EC", 0x76, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("EE", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("EG", 0x47, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("ES", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("FI", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("FR", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("GB", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("GH", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("GR", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("GT", 0x61, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("HK", 0x35, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("HN", 0x32, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("HR", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("HU", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("ID", 0x5D, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("IE", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("IL", 0x47, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("IN", 0x48, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("IS", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("IT", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("JM", 0x32, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("JO", 0x49, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("JP", 0x27, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("KE", 0x47, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("KG", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("KH", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("KR", 0x28, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("KW", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("KZ", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("LB", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("LI", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("LK", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("LS", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("LT", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("LU", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("LV", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("MA", 0x47, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("MC", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("MD", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("ME", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("MK", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("MT", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("MX", 0x34, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("MY", 0x63, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("MZ", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("NA", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("NG", 0x75, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("NI", 0x76, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("NL", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("NO", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("NZ", 0x45, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("OM", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("PA", 0x76, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("PE", 0x76, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("PG", 0x35, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("PH", 0x35, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("PK", 0x51, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("PL", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("PR", 0x76, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("PT", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("PY", 0x76, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("QA", 0x35, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("RO", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("RS", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("RU", 0x59, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("SA", 0x35, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("SE", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("SG", 0x35, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("SI", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("SK", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("SN", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("SV", 0x30, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("TH", 0x35, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("TN", 0x47, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("TR", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("TT", 0x76, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("TW", 0x76, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("UA", 0x35, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("US", 0x76, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("UY", 0x30, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("VE", 0x30, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("VN", 0x35, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("ZA", 0x35, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("ZW", 0x26, 0x00, DEF    , 0, 1),
 };
 #endif
 
 #if (RTW_DEF_MODULE_REGULATORY_CERT & RTW_MODULE_RTL8822BE) /* 2016 certify */
-static const struct country_chplan RTL8822BE_country_chplan_map[] = {
-	COUNTRY_CHPLAN_ENT("AE", 0x35, 1),
-	COUNTRY_CHPLAN_ENT("AL", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("AM", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("AN", 0x76, 1),
-	COUNTRY_CHPLAN_ENT("AO", 0x47, 1),
-	COUNTRY_CHPLAN_ENT("AR", 0x61, 1),
-	COUNTRY_CHPLAN_ENT("AT", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("AU", 0x45, 1),
-	COUNTRY_CHPLAN_ENT("AZ", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("BA", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("BB", 0x76, 1),
-	COUNTRY_CHPLAN_ENT("BD", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("BE", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("BF", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("BG", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("BH", 0x48, 1),
-	COUNTRY_CHPLAN_ENT("BI", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("BJ", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("BM", 0x76, 1),
-	COUNTRY_CHPLAN_ENT("BN", 0x47, 1),
-	COUNTRY_CHPLAN_ENT("BO", 0x73, 1),
-	COUNTRY_CHPLAN_ENT("BR", 0x62, 1),
-	COUNTRY_CHPLAN_ENT("BS", 0x76, 1),
-	COUNTRY_CHPLAN_ENT("BW", 0x35, 1),
-	COUNTRY_CHPLAN_ENT("BY", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("CA", 0x2B, 1),
-	COUNTRY_CHPLAN_ENT("CD", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("CF", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("CG", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("CH", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("CI", 0x42, 1),
-	COUNTRY_CHPLAN_ENT("CL", 0x2D, 1),
-	COUNTRY_CHPLAN_ENT("CM", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("CN", 0x48, 1),
-	COUNTRY_CHPLAN_ENT("CO", 0x76, 1),
-	COUNTRY_CHPLAN_ENT("CR", 0x76, 1),
-	COUNTRY_CHPLAN_ENT("CV", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("CY", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("CZ", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("DE", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("DJ", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("DK", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("DO", 0x76, 1),
-	COUNTRY_CHPLAN_ENT("DZ", 0x00, 1),
-	COUNTRY_CHPLAN_ENT("EC", 0x76, 1),
-	COUNTRY_CHPLAN_ENT("EE", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("EG", 0x47, 1),
-	COUNTRY_CHPLAN_ENT("EH", 0x47, 1),
-	COUNTRY_CHPLAN_ENT("ES", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("FI", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("FJ", 0x76, 1),
-	COUNTRY_CHPLAN_ENT("FR", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("GA", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("GB", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("GE", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("GH", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("GI", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("GL", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("GM", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("GN", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("GP", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("GQ", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("GR", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("GT", 0x61, 1),
-	COUNTRY_CHPLAN_ENT("GU", 0x76, 1),
-	COUNTRY_CHPLAN_ENT("GW", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("HK", 0x35, 1),
-	COUNTRY_CHPLAN_ENT("HN", 0x32, 1),
-	COUNTRY_CHPLAN_ENT("HR", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("HT", 0x76, 1),
-	COUNTRY_CHPLAN_ENT("HU", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("ID", 0x3D, 0),
-	COUNTRY_CHPLAN_ENT("IE", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("IL", 0x47, 1),
-	COUNTRY_CHPLAN_ENT("IN", 0x48, 1),
-	COUNTRY_CHPLAN_ENT("IS", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("IT", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("JM", 0x32, 1),
-	COUNTRY_CHPLAN_ENT("JO", 0x49, 1),
-	COUNTRY_CHPLAN_ENT("JP", 0x27, 1),
-	COUNTRY_CHPLAN_ENT("KE", 0x47, 1),
-	COUNTRY_CHPLAN_ENT("KG", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("KH", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("KR", 0x28, 1),
-	COUNTRY_CHPLAN_ENT("KW", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("KZ", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("LB", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("LI", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("LK", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("LR", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("LS", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("LT", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("LU", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("LV", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("MA", 0x47, 1),
-	COUNTRY_CHPLAN_ENT("MC", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("MD", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("ME", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("MG", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("MK", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("ML", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("MO", 0x35, 1),
-	COUNTRY_CHPLAN_ENT("MQ", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("MR", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("MT", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("MU", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("MW", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("MX", 0x4D, 1),
-	COUNTRY_CHPLAN_ENT("MY", 0x63, 1),
-	COUNTRY_CHPLAN_ENT("MZ", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("NA", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("NE", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("NG", 0x75, 1),
-	COUNTRY_CHPLAN_ENT("NI", 0x76, 1),
-	COUNTRY_CHPLAN_ENT("NL", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("NO", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("NP", 0x48, 1),
-	COUNTRY_CHPLAN_ENT("NZ", 0x45, 1),
-	COUNTRY_CHPLAN_ENT("OM", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("PA", 0x76, 1),
-	COUNTRY_CHPLAN_ENT("PE", 0x76, 1),
-	COUNTRY_CHPLAN_ENT("PG", 0x35, 1),
-	COUNTRY_CHPLAN_ENT("PH", 0x35, 1),
-	COUNTRY_CHPLAN_ENT("PK", 0x51, 1),
-	COUNTRY_CHPLAN_ENT("PL", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("PR", 0x76, 1),
-	COUNTRY_CHPLAN_ENT("PT", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("PY", 0x76, 1),
-	COUNTRY_CHPLAN_ENT("QA", 0x35, 1),
-	COUNTRY_CHPLAN_ENT("RO", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("RS", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("RU", 0x59, 1),
-	COUNTRY_CHPLAN_ENT("SA", 0x35, 1),
-	COUNTRY_CHPLAN_ENT("SC", 0x76, 1),
-	COUNTRY_CHPLAN_ENT("SE", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("SG", 0x35, 1),
-	COUNTRY_CHPLAN_ENT("SI", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("SK", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("SL", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("SN", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("ST", 0x76, 1),
-	COUNTRY_CHPLAN_ENT("SV", 0x30, 1),
-	COUNTRY_CHPLAN_ENT("TD", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("TF", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("TG", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("TH", 0x35, 1),
-	COUNTRY_CHPLAN_ENT("TJ", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("TN", 0x47, 1),
-	COUNTRY_CHPLAN_ENT("TR", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("TT", 0x76, 1),
-	COUNTRY_CHPLAN_ENT("TW", 0x76, 1),
-	COUNTRY_CHPLAN_ENT("TZ", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("UA", 0x35, 1),
-	COUNTRY_CHPLAN_ENT("UG", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("US", 0x76, 1),
-	COUNTRY_CHPLAN_ENT("UY", 0x30, 1),
-	COUNTRY_CHPLAN_ENT("UZ", 0x47, 1),
-	COUNTRY_CHPLAN_ENT("VE", 0x30, 1),
-	COUNTRY_CHPLAN_ENT("VN", 0x35, 1),
-	COUNTRY_CHPLAN_ENT("YT", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("ZA", 0x35, 1),
-	COUNTRY_CHPLAN_ENT("ZM", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("ZW", 0x26, 1),
+static const struct country_chplan RTL8822BE_country_chplan_map[] = {
+	COUNTRY_CHPLAN_ENT("AE", 0x35, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("AL", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("AM", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("AN", 0x76, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("AO", 0x47, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("AR", 0x61, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("AT", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("AU", 0x45, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("AZ", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("BA", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("BB", 0x76, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("BD", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("BE", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("BF", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("BG", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("BH", 0x48, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("BI", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("BJ", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("BM", 0x76, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("BN", 0x47, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("BO", 0x73, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("BR", 0x62, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("BS", 0x76, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("BW", 0x35, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("BY", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("CA", 0x2B, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("CD", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("CF", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("CG", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("CH", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("CI", 0x42, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("CL", 0x2D, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("CM", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("CN", 0x48, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("CO", 0x76, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("CR", 0x76, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("CV", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("CY", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("CZ", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("DE", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("DJ", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("DK", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("DO", 0x76, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("DZ", 0x00, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("EC", 0x76, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("EE", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("EG", 0x47, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("EH", 0x47, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("ES", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("FI", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("FJ", 0x76, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("FR", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("GA", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("GB", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("GE", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("GH", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("GI", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("GL", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("GM", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("GN", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("GP", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("GQ", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("GR", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("GT", 0x61, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("GU", 0x76, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("GW", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("HK", 0x35, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("HN", 0x32, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("HR", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("HT", 0x76, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("HU", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("ID", 0x3D, 0x00, DEF    , 0, 0),
+	COUNTRY_CHPLAN_ENT("IE", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("IL", 0x47, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("IN", 0x48, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("IS", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("IT", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("JM", 0x32, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("JO", 0x49, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("JP", 0x27, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("KE", 0x47, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("KG", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("KH", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("KR", 0x28, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("KW", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("KZ", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("LB", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("LI", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("LK", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("LR", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("LS", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("LT", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("LU", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("LV", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("MA", 0x47, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("MC", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("MD", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("ME", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("MG", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("MK", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("ML", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("MO", 0x35, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("MQ", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("MR", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("MT", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("MU", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("MW", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("MX", 0x4D, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("MY", 0x63, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("MZ", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("NA", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("NE", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("NG", 0x75, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("NI", 0x76, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("NL", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("NO", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("NP", 0x48, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("NZ", 0x45, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("OM", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("PA", 0x76, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("PE", 0x76, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("PG", 0x35, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("PH", 0x35, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("PK", 0x51, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("PL", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("PR", 0x76, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("PT", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("PY", 0x76, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("QA", 0x35, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("RO", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("RS", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("RU", 0x59, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("SA", 0x35, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("SC", 0x76, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("SE", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("SG", 0x35, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("SI", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("SK", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("SL", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("SN", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("ST", 0x76, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("SV", 0x30, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("TD", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("TF", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("TG", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("TH", 0x35, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("TJ", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("TN", 0x47, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("TR", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("TT", 0x76, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("TW", 0x76, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("TZ", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("UA", 0x35, 0x00, UKRAINE, 0, 1),
+	COUNTRY_CHPLAN_ENT("UG", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("US", 0x76, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("UY", 0x30, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("UZ", 0x47, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("VE", 0x30, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("VN", 0x35, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("YT", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("ZA", 0x35, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("ZM", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("ZW", 0x26, 0x00, DEF    , 0, 1),
 };
 #endif
 
 #if (RTW_DEF_MODULE_REGULATORY_CERT & RTW_MODULE_RTL8821CE) /* 2016 certify */
-static const struct country_chplan RTL8821CE_country_chplan_map[] = {
-	COUNTRY_CHPLAN_ENT("AE", 0x35, 1),
-	COUNTRY_CHPLAN_ENT("AL", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("AM", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("AN", 0x76, 1),
-	COUNTRY_CHPLAN_ENT("AO", 0x47, 1),
-	COUNTRY_CHPLAN_ENT("AR", 0x61, 1),
-	COUNTRY_CHPLAN_ENT("AT", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("AU", 0x45, 1),
-	COUNTRY_CHPLAN_ENT("AZ", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("BA", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("BB", 0x76, 1),
-	COUNTRY_CHPLAN_ENT("BD", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("BE", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("BF", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("BG", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("BH", 0x48, 1),
-	COUNTRY_CHPLAN_ENT("BI", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("BJ", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("BM", 0x76, 1),
-	COUNTRY_CHPLAN_ENT("BN", 0x47, 1),
-	COUNTRY_CHPLAN_ENT("BO", 0x73, 1),
-	COUNTRY_CHPLAN_ENT("BR", 0x62, 1),
-	COUNTRY_CHPLAN_ENT("BS", 0x76, 1),
-	COUNTRY_CHPLAN_ENT("BW", 0x35, 1),
-	COUNTRY_CHPLAN_ENT("BY", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("CA", 0x2B, 1),
-	COUNTRY_CHPLAN_ENT("CD", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("CF", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("CG", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("CH", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("CI", 0x42, 1),
-	COUNTRY_CHPLAN_ENT("CL", 0x2D, 1),
-	COUNTRY_CHPLAN_ENT("CM", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("CN", 0x48, 1),
-	COUNTRY_CHPLAN_ENT("CO", 0x76, 1),
-	COUNTRY_CHPLAN_ENT("CR", 0x76, 1),
-	COUNTRY_CHPLAN_ENT("CV", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("CY", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("CZ", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("DE", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("DJ", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("DK", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("DO", 0x76, 1),
-	COUNTRY_CHPLAN_ENT("DZ", 0x00, 1),
-	COUNTRY_CHPLAN_ENT("EC", 0x76, 1),
-	COUNTRY_CHPLAN_ENT("EE", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("EG", 0x47, 1),
-	COUNTRY_CHPLAN_ENT("EH", 0x47, 1),
-	COUNTRY_CHPLAN_ENT("ES", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("ET", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("FI", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("FJ", 0x76, 1),
-	COUNTRY_CHPLAN_ENT("FR", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("GA", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("GB", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("GE", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("GH", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("GI", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("GL", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("GM", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("GN", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("GP", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("GQ", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("GR", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("GT", 0x61, 1),
-	COUNTRY_CHPLAN_ENT("GU", 0x76, 1),
-	COUNTRY_CHPLAN_ENT("GW", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("HK", 0x35, 1),
-	COUNTRY_CHPLAN_ENT("HN", 0x32, 1),
-	COUNTRY_CHPLAN_ENT("HR", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("HT", 0x76, 1),
-	COUNTRY_CHPLAN_ENT("HU", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("ID", 0x3D, 0),
-	COUNTRY_CHPLAN_ENT("IE", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("IL", 0x47, 1),
-	COUNTRY_CHPLAN_ENT("IN", 0x48, 1),
-	COUNTRY_CHPLAN_ENT("IS", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("IT", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("JM", 0x32, 1),
-	COUNTRY_CHPLAN_ENT("JO", 0x49, 1),
-	COUNTRY_CHPLAN_ENT("JP", 0x27, 1),
-	COUNTRY_CHPLAN_ENT("KE", 0x47, 1),
-	COUNTRY_CHPLAN_ENT("KG", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("KH", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("KR", 0x28, 1),
-	COUNTRY_CHPLAN_ENT("KW", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("KZ", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("LB", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("LI", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("LK", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("LR", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("LS", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("LT", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("LU", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("LV", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("MA", 0x47, 1),
-	COUNTRY_CHPLAN_ENT("MC", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("MD", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("ME", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("MG", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("MK", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("ML", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("MO", 0x35, 1),
-	COUNTRY_CHPLAN_ENT("MQ", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("MR", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("MT", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("MU", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("MW", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("MX", 0x4D, 1),
-	COUNTRY_CHPLAN_ENT("MY", 0x63, 1),
-	COUNTRY_CHPLAN_ENT("MZ", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("NA", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("NE", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("NG", 0x75, 1),
-	COUNTRY_CHPLAN_ENT("NI", 0x76, 1),
-	COUNTRY_CHPLAN_ENT("NL", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("NO", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("NP", 0x48, 1),
-	COUNTRY_CHPLAN_ENT("NZ", 0x45, 1),
-	COUNTRY_CHPLAN_ENT("OM", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("PA", 0x76, 1),
-	COUNTRY_CHPLAN_ENT("PE", 0x76, 1),
-	COUNTRY_CHPLAN_ENT("PG", 0x35, 1),
-	COUNTRY_CHPLAN_ENT("PH", 0x35, 1),
-	COUNTRY_CHPLAN_ENT("PK", 0x51, 1),
-	COUNTRY_CHPLAN_ENT("PL", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("PR", 0x76, 1),
-	COUNTRY_CHPLAN_ENT("PT", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("PY", 0x76, 1),
-	COUNTRY_CHPLAN_ENT("QA", 0x35, 1),
-	COUNTRY_CHPLAN_ENT("RO", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("RS", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("RU", 0x59, 1),
-	COUNTRY_CHPLAN_ENT("SA", 0x35, 1),
-	COUNTRY_CHPLAN_ENT("SC", 0x76, 1),
-	COUNTRY_CHPLAN_ENT("SE", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("SG", 0x35, 1),
-	COUNTRY_CHPLAN_ENT("SI", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("SK", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("SL", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("SN", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("ST", 0x76, 1),
-	COUNTRY_CHPLAN_ENT("SV", 0x30, 1),
-	COUNTRY_CHPLAN_ENT("TD", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("TF", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("TG", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("TH", 0x35, 1),
-	COUNTRY_CHPLAN_ENT("TJ", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("TN", 0x47, 1),
-	COUNTRY_CHPLAN_ENT("TR", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("TW", 0x76, 1),
-	COUNTRY_CHPLAN_ENT("TZ", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("UA", 0x35, 1),
-	COUNTRY_CHPLAN_ENT("UG", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("US", 0x76, 1),
-	COUNTRY_CHPLAN_ENT("UY", 0x30, 1),
-	COUNTRY_CHPLAN_ENT("UZ", 0x47, 1),
-	COUNTRY_CHPLAN_ENT("VE", 0x30, 1),
-	COUNTRY_CHPLAN_ENT("VN", 0x35, 1),
-	COUNTRY_CHPLAN_ENT("YT", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("ZA", 0x35, 1),
-	COUNTRY_CHPLAN_ENT("ZM", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("ZW", 0x26, 1),
+static const struct country_chplan RTL8821CE_country_chplan_map[] = {
+	COUNTRY_CHPLAN_ENT("AE", 0x35, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("AL", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("AM", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("AN", 0x76, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("AO", 0x47, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("AR", 0x61, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("AT", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("AU", 0x45, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("AZ", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("BA", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("BB", 0x76, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("BD", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("BE", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("BF", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("BG", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("BH", 0x48, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("BI", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("BJ", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("BM", 0x76, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("BN", 0x47, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("BO", 0x73, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("BR", 0x62, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("BS", 0x76, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("BW", 0x35, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("BY", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("CA", 0x2B, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("CD", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("CF", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("CG", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("CH", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("CI", 0x42, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("CL", 0x2D, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("CM", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("CN", 0x48, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("CO", 0x76, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("CR", 0x76, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("CV", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("CY", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("CZ", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("DE", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("DJ", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("DK", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("DO", 0x76, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("DZ", 0x00, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("EC", 0x76, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("EE", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("EG", 0x47, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("EH", 0x47, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("ES", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("ET", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("FI", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("FJ", 0x76, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("FR", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("GA", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("GB", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("GE", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("GH", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("GI", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("GL", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("GM", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("GN", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("GP", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("GQ", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("GR", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("GT", 0x61, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("GU", 0x76, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("GW", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("HK", 0x35, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("HN", 0x32, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("HR", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("HT", 0x76, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("HU", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("ID", 0x3D, 0x00, DEF    , 0, 0),
+	COUNTRY_CHPLAN_ENT("IE", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("IL", 0x47, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("IN", 0x48, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("IS", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("IT", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("JM", 0x32, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("JO", 0x49, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("JP", 0x27, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("KE", 0x47, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("KG", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("KH", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("KR", 0x28, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("KW", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("KZ", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("LB", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("LI", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("LK", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("LR", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("LS", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("LT", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("LU", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("LV", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("MA", 0x47, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("MC", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("MD", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("ME", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("MG", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("MK", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("ML", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("MO", 0x35, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("MQ", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("MR", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("MT", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("MU", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("MW", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("MX", 0x4D, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("MY", 0x63, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("MZ", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("NA", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("NE", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("NG", 0x75, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("NI", 0x76, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("NL", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("NO", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("NP", 0x48, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("NZ", 0x45, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("OM", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("PA", 0x76, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("PE", 0x76, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("PG", 0x35, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("PH", 0x35, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("PK", 0x51, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("PL", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("PR", 0x76, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("PT", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("PY", 0x76, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("QA", 0x35, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("RO", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("RS", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("RU", 0x59, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("SA", 0x35, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("SC", 0x76, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("SE", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("SG", 0x35, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("SI", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("SK", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("SL", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("SN", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("ST", 0x76, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("SV", 0x30, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("TD", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("TF", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("TG", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("TH", 0x35, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("TJ", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("TN", 0x47, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("TR", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("TW", 0x76, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("TZ", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("UA", 0x35, 0x00, UKRAINE, 0, 1),
+	COUNTRY_CHPLAN_ENT("UG", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("US", 0x76, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("UY", 0x30, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("UZ", 0x47, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("VE", 0x30, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("VN", 0x35, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("YT", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("ZA", 0x35, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("ZM", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("ZW", 0x26, 0x00, DEF    , 0, 1),
 };
 #endif
 
 #if (RTW_DEF_MODULE_REGULATORY_CERT & RTW_MODULE_RTL8822CE) /* 2018 certify */
-static const struct country_chplan RTL8822CE_country_chplan_map[] = {
-	COUNTRY_CHPLAN_ENT("AE", 0x35, 1),
-	COUNTRY_CHPLAN_ENT("AL", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("AM", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("AN", 0x76, 1),
-	COUNTRY_CHPLAN_ENT("AO", 0x47, 1),
-	COUNTRY_CHPLAN_ENT("AR", 0x61, 1),
-	COUNTRY_CHPLAN_ENT("AT", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("AU", 0x45, 1),
-	COUNTRY_CHPLAN_ENT("AW", 0x76, 1),
-	COUNTRY_CHPLAN_ENT("AZ", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("BA", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("BB", 0x76, 1),
-	COUNTRY_CHPLAN_ENT("BD", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("BE", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("BF", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("BG", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("BH", 0x48, 1),
-	COUNTRY_CHPLAN_ENT("BI", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("BJ", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("BM", 0x76, 1),
-	COUNTRY_CHPLAN_ENT("BN", 0x47, 1),
-	COUNTRY_CHPLAN_ENT("BO", 0x73, 1),
-	COUNTRY_CHPLAN_ENT("BR", 0x62, 1),
-	COUNTRY_CHPLAN_ENT("BS", 0x76, 1),
-	COUNTRY_CHPLAN_ENT("BW", 0x35, 1),
-	COUNTRY_CHPLAN_ENT("BY", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("CA", 0x2B, 1),
-	COUNTRY_CHPLAN_ENT("CD", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("CF", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("CG", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("CH", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("CI", 0x42, 1),
-	COUNTRY_CHPLAN_ENT("CL", 0x2D, 1),
-	COUNTRY_CHPLAN_ENT("CM", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("CN", 0x48, 1),
-	COUNTRY_CHPLAN_ENT("CO", 0x76, 1),
-	COUNTRY_CHPLAN_ENT("CR", 0x76, 1),
-	COUNTRY_CHPLAN_ENT("CV", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("CY", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("CZ", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("DE", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("DJ", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("DK", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("DO", 0x76, 1),
-	COUNTRY_CHPLAN_ENT("DZ", 0x00, 1),
-	COUNTRY_CHPLAN_ENT("EC", 0x76, 1),
-	COUNTRY_CHPLAN_ENT("EE", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("EG", 0x47, 1),
-	COUNTRY_CHPLAN_ENT("EH", 0x47, 1),
-	COUNTRY_CHPLAN_ENT("ES", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("ET", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("FI", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("FJ", 0x76, 1),
-	COUNTRY_CHPLAN_ENT("FR", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("GA", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("GB", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("GE", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("GH", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("GI", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("GL", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("GM", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("GN", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("GP", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("GQ", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("GR", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("GT", 0x61, 1),
-	COUNTRY_CHPLAN_ENT("GU", 0x76, 1),
-	COUNTRY_CHPLAN_ENT("GW", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("HK", 0x35, 1),
-	COUNTRY_CHPLAN_ENT("HN", 0x32, 1),
-	COUNTRY_CHPLAN_ENT("HR", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("HT", 0x76, 1),
-	COUNTRY_CHPLAN_ENT("HU", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("IE", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("IL", 0x47, 1),
-	COUNTRY_CHPLAN_ENT("IN", 0x48, 1),
-	COUNTRY_CHPLAN_ENT("IS", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("IT", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("JM", 0x32, 1),
-	COUNTRY_CHPLAN_ENT("JO", 0x49, 1),
-	COUNTRY_CHPLAN_ENT("JP", 0x27, 1),
-	COUNTRY_CHPLAN_ENT("KE", 0x47, 1),
-	COUNTRY_CHPLAN_ENT("KG", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("KH", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("KM", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("KR", 0x4B, 1),
-	COUNTRY_CHPLAN_ENT("KW", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("KZ", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("LB", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("LI", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("LK", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("LR", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("LS", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("LT", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("LU", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("LV", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("MA", 0x47, 1),
-	COUNTRY_CHPLAN_ENT("MC", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("MD", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("ME", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("MG", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("MK", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("ML", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("MO", 0x35, 1),
-	COUNTRY_CHPLAN_ENT("MQ", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("MR", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("MT", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("MU", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("MW", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("MX", 0x4D, 1),
-	COUNTRY_CHPLAN_ENT("MY", 0x63, 1),
-	COUNTRY_CHPLAN_ENT("MZ", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("NA", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("NE", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("NG", 0x75, 1),
-	COUNTRY_CHPLAN_ENT("NI", 0x76, 1),
-	COUNTRY_CHPLAN_ENT("NL", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("NO", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("NP", 0x48, 1),
-	COUNTRY_CHPLAN_ENT("NZ", 0x45, 1),
-	COUNTRY_CHPLAN_ENT("OM", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("PA", 0x76, 1),
-	COUNTRY_CHPLAN_ENT("PE", 0x76, 1),
-	COUNTRY_CHPLAN_ENT("PG", 0x35, 1),
-	COUNTRY_CHPLAN_ENT("PH", 0x35, 1),
-	COUNTRY_CHPLAN_ENT("PK", 0x51, 1),
-	COUNTRY_CHPLAN_ENT("PL", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("PR", 0x76, 1),
-	COUNTRY_CHPLAN_ENT("PT", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("PY", 0x76, 1),
-	COUNTRY_CHPLAN_ENT("QA", 0x35, 1),
-	COUNTRY_CHPLAN_ENT("RO", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("RS", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("RU", 0x59, 1),
-	COUNTRY_CHPLAN_ENT("SA", 0x35, 1),
-	COUNTRY_CHPLAN_ENT("SC", 0x76, 1),
-	COUNTRY_CHPLAN_ENT("SE", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("SG", 0x35, 1),
-	COUNTRY_CHPLAN_ENT("SI", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("SK", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("SL", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("SN", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("ST", 0x76, 1),
-	COUNTRY_CHPLAN_ENT("SV", 0x30, 1),
-	COUNTRY_CHPLAN_ENT("SZ", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("TD", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("TF", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("TG", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("TH", 0x35, 1),
-	COUNTRY_CHPLAN_ENT("TJ", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("TN", 0x47, 1),
-	COUNTRY_CHPLAN_ENT("TR", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("TW", 0x76, 1),
-	COUNTRY_CHPLAN_ENT("TZ", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("UA", 0x35, 1),
-	COUNTRY_CHPLAN_ENT("UG", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("US", 0x76, 1),
-	COUNTRY_CHPLAN_ENT("UY", 0x30, 1),
-	COUNTRY_CHPLAN_ENT("UZ", 0x47, 1),
-	COUNTRY_CHPLAN_ENT("VE", 0x30, 1),
-	COUNTRY_CHPLAN_ENT("VN", 0x35, 1),
-	COUNTRY_CHPLAN_ENT("YT", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("ZA", 0x35, 1),
-	COUNTRY_CHPLAN_ENT("ZM", 0x26, 1),
-	COUNTRY_CHPLAN_ENT("ZW", 0x26, 1),
+static const struct country_chplan RTL8822CE_country_chplan_map[] = {
+	COUNTRY_CHPLAN_ENT("AE", 0x35, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("AL", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("AM", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("AN", 0x76, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("AO", 0x47, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("AR", 0x61, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("AT", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("AU", 0x45, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("AW", 0x76, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("AZ", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("BA", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("BB", 0x76, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("BD", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("BE", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("BF", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("BG", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("BH", 0x48, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("BI", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("BJ", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("BM", 0x76, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("BN", 0x47, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("BO", 0x73, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("BR", 0x62, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("BS", 0x76, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("BW", 0x35, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("BY", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("CA", 0x2B, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("CD", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("CF", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("CG", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("CH", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("CI", 0x42, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("CL", 0x2D, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("CM", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("CN", 0x48, 0x00, CN     , 0, 1),
+	COUNTRY_CHPLAN_ENT("CO", 0x76, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("CR", 0x76, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("CV", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("CY", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("CZ", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("DE", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("DJ", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("DK", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("DO", 0x76, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("DZ", 0x00, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("EC", 0x76, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("EE", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("EG", 0x47, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("EH", 0x47, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("ES", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("ET", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("FI", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("FJ", 0x76, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("FR", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("GA", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("GB", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("GE", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("GH", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("GI", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("GL", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("GM", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("GN", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("GP", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("GQ", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("GR", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("GT", 0x61, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("GU", 0x76, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("GW", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("HK", 0x35, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("HN", 0x32, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("HR", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("HT", 0x76, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("HU", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("IE", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("IL", 0x47, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("IN", 0x48, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("IS", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("IT", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("JM", 0x32, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("JO", 0x49, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("JP", 0x27, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("KE", 0x47, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("KG", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("KH", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("KM", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("KR", 0x4B, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("KW", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("KZ", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("LB", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("LI", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("LK", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("LR", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("LS", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("LT", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("LU", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("LV", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("MA", 0x47, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("MC", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("MD", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("ME", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("MG", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("MK", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("ML", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("MO", 0x35, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("MQ", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("MR", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("MT", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("MU", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("MW", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("MX", 0x4D, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("MY", 0x63, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("MZ", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("NA", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("NE", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("NG", 0x75, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("NI", 0x76, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("NL", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("NO", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("NP", 0x48, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("NZ", 0x45, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("OM", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("PA", 0x76, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("PE", 0x76, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("PG", 0x35, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("PH", 0x35, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("PK", 0x51, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("PL", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("PR", 0x76, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("PT", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("PY", 0x76, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("QA", 0x35, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("RO", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("RS", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("RU", 0x59, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("SA", 0x35, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("SC", 0x76, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("SE", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("SG", 0x35, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("SI", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("SK", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("SL", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("SN", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("ST", 0x76, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("SV", 0x30, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("SZ", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("TD", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("TF", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("TG", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("TH", 0x35, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("TJ", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("TN", 0x47, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("TR", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("TW", 0x76, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("TZ", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("UA", 0x35, 0x00, UKRAINE, 0, 1),
+	COUNTRY_CHPLAN_ENT("UG", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("US", 0x76, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("UY", 0x30, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("UZ", 0x47, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("VE", 0x30, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("VN", 0x35, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("YT", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("ZA", 0x35, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("ZM", 0x26, 0x00, DEF    , 0, 1),
+	COUNTRY_CHPLAN_ENT("ZW", 0x26, 0x00, DEF    , 0, 1),
 };
 #endif
 
 /**
- * rtw_def_module_country_chplan_map -
- * @hal_map: returned map
- * @return: size of map
+ * rtw_def_module_country_chplan_map -
+ * @hal_map: returned map
+ * @return: size of map
  */
-static u16 rtw_def_module_country_chplan_map(const struct country_chplan **hal_map)
+static u16 rtw_def_module_country_chplan_map(const struct country_chplan **hal_map)
 {
 	u16 hal_map_sz = 0;
 
 	/* TODO: runtime selection for multi driver */
 #if (RTW_DEF_MODULE_REGULATORY_CERT == RTW_MODULE_RTL8821AE_HMC_M2)
-	*hal_map = RTL8821AE_HMC_M2_country_chplan_map;
-	hal_map_sz = sizeof(RTL8821AE_HMC_M2_country_chplan_map) / sizeof(struct country_chplan);
+	*hal_map = RTL8821AE_HMC_M2_country_chplan_map;
+	hal_map_sz = sizeof(RTL8821AE_HMC_M2_country_chplan_map) / sizeof(struct country_chplan);
 #elif (RTW_DEF_MODULE_REGULATORY_CERT == RTW_MODULE_RTL8821AU)
-	*hal_map = RTL8821AU_country_chplan_map;
-	hal_map_sz = sizeof(RTL8821AU_country_chplan_map) / sizeof(struct country_chplan);
+	*hal_map = RTL8821AU_country_chplan_map;
+	hal_map_sz = sizeof(RTL8821AU_country_chplan_map) / sizeof(struct country_chplan);
 #elif (RTW_DEF_MODULE_REGULATORY_CERT == RTW_MODULE_RTL8812AENF_NGFF)
-	*hal_map = RTL8812AENF_NGFF_country_chplan_map;
-	hal_map_sz = sizeof(RTL8812AENF_NGFF_country_chplan_map) / sizeof(struct country_chplan);
+	*hal_map = RTL8812AENF_NGFF_country_chplan_map;
+	hal_map_sz = sizeof(RTL8812AENF_NGFF_country_chplan_map) / sizeof(struct country_chplan);
 #elif (RTW_DEF_MODULE_REGULATORY_CERT == RTW_MODULE_RTL8812AEBT_HMC)
-	*hal_map = RTL8812AEBT_HMC_country_chplan_map;
-	hal_map_sz = sizeof(RTL8812AEBT_HMC_country_chplan_map) / sizeof(struct country_chplan);
+	*hal_map = RTL8812AEBT_HMC_country_chplan_map;
+	hal_map_sz = sizeof(RTL8812AEBT_HMC_country_chplan_map) / sizeof(struct country_chplan);
 #elif (RTW_DEF_MODULE_REGULATORY_CERT == RTW_MODULE_RTL8188EE_HMC_M2)
-	*hal_map = RTL8188EE_HMC_M2_country_chplan_map;
-	hal_map_sz = sizeof(RTL8188EE_HMC_M2_country_chplan_map) / sizeof(struct country_chplan);
+	*hal_map = RTL8188EE_HMC_M2_country_chplan_map;
+	hal_map_sz = sizeof(RTL8188EE_HMC_M2_country_chplan_map) / sizeof(struct country_chplan);
 #elif (RTW_DEF_MODULE_REGULATORY_CERT == RTW_MODULE_RTL8723BE_HMC_M2)
-	*hal_map = RTL8723BE_HMC_M2_country_chplan_map;
-	hal_map_sz = sizeof(RTL8723BE_HMC_M2_country_chplan_map) / sizeof(struct country_chplan);
+	*hal_map = RTL8723BE_HMC_M2_country_chplan_map;
+	hal_map_sz = sizeof(RTL8723BE_HMC_M2_country_chplan_map) / sizeof(struct country_chplan);
 #elif (RTW_DEF_MODULE_REGULATORY_CERT == RTW_MODULE_RTL8723BS_NGFF1216)
-	*hal_map = RTL8723BS_NGFF1216_country_chplan_map;
-	hal_map_sz = sizeof(RTL8723BS_NGFF1216_country_chplan_map) / sizeof(struct country_chplan);
+	*hal_map = RTL8723BS_NGFF1216_country_chplan_map;
+	hal_map_sz = sizeof(RTL8723BS_NGFF1216_country_chplan_map) / sizeof(struct country_chplan);
 #elif (RTW_DEF_MODULE_REGULATORY_CERT == RTW_MODULE_RTL8192EEBT_HMC_M2)
-	*hal_map = RTL8192EEBT_HMC_M2_country_chplan_map;
-	hal_map_sz = sizeof(RTL8192EEBT_HMC_M2_country_chplan_map) / sizeof(struct country_chplan);
+	*hal_map = RTL8192EEBT_HMC_M2_country_chplan_map;
+	hal_map_sz = sizeof(RTL8192EEBT_HMC_M2_country_chplan_map) / sizeof(struct country_chplan);
 #elif (RTW_DEF_MODULE_REGULATORY_CERT == RTW_MODULE_RTL8723DE_NGFF1630)
-	*hal_map = RTL8723DE_NGFF1630_country_chplan_map;
-	hal_map_sz = sizeof(RTL8723DE_NGFF1630_country_chplan_map) / sizeof(struct country_chplan);
+	*hal_map = RTL8723DE_NGFF1630_country_chplan_map;
+	hal_map_sz = sizeof(RTL8723DE_NGFF1630_country_chplan_map) / sizeof(struct country_chplan);
 #elif (RTW_DEF_MODULE_REGULATORY_CERT == RTW_MODULE_RTL8822BE)
-	*hal_map = RTL8822BE_country_chplan_map;
-	hal_map_sz = sizeof(RTL8822BE_country_chplan_map) / sizeof(struct country_chplan);
+	*hal_map = RTL8822BE_country_chplan_map;
+	hal_map_sz = sizeof(RTL8822BE_country_chplan_map) / sizeof(struct country_chplan);
 #elif (RTW_DEF_MODULE_REGULATORY_CERT == RTW_MODULE_RTL8821CE)
-	*hal_map = RTL8821CE_country_chplan_map;
-	hal_map_sz = sizeof(RTL8821CE_country_chplan_map) / sizeof(struct country_chplan);
+	*hal_map = RTL8821CE_country_chplan_map;
+	hal_map_sz = sizeof(RTL8821CE_country_chplan_map) / sizeof(struct country_chplan);
 #elif (RTW_DEF_MODULE_REGULATORY_CERT == RTW_MODULE_RTL8822CE)
-	*hal_map = RTL8822CE_country_chplan_map;
-	hal_map_sz = sizeof(RTL8822CE_country_chplan_map) / sizeof(struct country_chplan);
+	*hal_map = RTL8822CE_country_chplan_map;
+	hal_map_sz = sizeof(RTL8822CE_country_chplan_map) / sizeof(struct country_chplan);
 #endif
 
-	return hal_map_sz;
+	return hal_map_sz;
 }
-#else
+#else
 
 static const struct country_chplan country_chplan_map[] = {
-	COUNTRY_CHPLAN_ENT("AD", 0x26, 1), /* Andorra */
-	COUNTRY_CHPLAN_ENT("AE", 0x35, 1), /* United Arab Emirates */
-	COUNTRY_CHPLAN_ENT("AF", 0x42, 1), /* Afghanistan */
-	COUNTRY_CHPLAN_ENT("AG", 0x76, 1), /* Antigua & Barbuda */
-	COUNTRY_CHPLAN_ENT("AI", 0x26, 1), /* Anguilla(UK) */
-	COUNTRY_CHPLAN_ENT("AL", 0x26, 1), /* Albania */
-	COUNTRY_CHPLAN_ENT("AM", 0x26, 1), /* Armenia */
-	COUNTRY_CHPLAN_ENT("AN", 0x76, 1), /* Netherlands Antilles */
-	COUNTRY_CHPLAN_ENT("AO", 0x47, 1), /* Angola */
-	COUNTRY_CHPLAN_ENT("AQ", 0x26, 1), /* Antarctica */
-	COUNTRY_CHPLAN_ENT("AR", 0x61, 1), /* Argentina */
-	COUNTRY_CHPLAN_ENT("AS", 0x76, 1), /* American Samoa */
-	COUNTRY_CHPLAN_ENT("AT", 0x26, 1), /* Austria */
-	COUNTRY_CHPLAN_ENT("AU", 0x45, 1), /* Australia */
-	COUNTRY_CHPLAN_ENT("AW", 0x76, 1), /* Aruba */
-	COUNTRY_CHPLAN_ENT("AZ", 0x26, 1), /* Azerbaijan */
-	COUNTRY_CHPLAN_ENT("BA", 0x26, 1), /* Bosnia & Herzegovina */
-	COUNTRY_CHPLAN_ENT("BB", 0x76, 1), /* Barbados */
-	COUNTRY_CHPLAN_ENT("BD", 0x26, 1), /* Bangladesh */
-	COUNTRY_CHPLAN_ENT("BE", 0x26, 1), /* Belgium */
-	COUNTRY_CHPLAN_ENT("BF", 0x26, 1), /* Burkina Faso */
-	COUNTRY_CHPLAN_ENT("BG", 0x26, 1), /* Bulgaria */
-	COUNTRY_CHPLAN_ENT("BH", 0x48, 1), /* Bahrain */
-	COUNTRY_CHPLAN_ENT("BI", 0x26, 1), /* Burundi */
-	COUNTRY_CHPLAN_ENT("BJ", 0x26, 1), /* Benin */
-	COUNTRY_CHPLAN_ENT("BM", 0x76, 1), /* Bermuda (UK) */
-	COUNTRY_CHPLAN_ENT("BN", 0x47, 1), /* Brunei */
-	COUNTRY_CHPLAN_ENT("BO", 0x73, 1), /* Bolivia */
-	COUNTRY_CHPLAN_ENT("BR", 0x62, 1), /* Brazil */
-	COUNTRY_CHPLAN_ENT("BS", 0x76, 1), /* Bahamas */
-	COUNTRY_CHPLAN_ENT("BT", 0x26, 1), /* Bhutan */
-	COUNTRY_CHPLAN_ENT("BV", 0x26, 1), /* Bouvet Island (Norway) */
-	COUNTRY_CHPLAN_ENT("BW", 0x35, 1), /* Botswana */
-	COUNTRY_CHPLAN_ENT("BY", 0x26, 1), /* Belarus */
-	COUNTRY_CHPLAN_ENT("BZ", 0x76, 1), /* Belize */
-	COUNTRY_CHPLAN_ENT("CA", 0x2B, 1), /* Canada */
-	COUNTRY_CHPLAN_ENT("CC", 0x26, 1), /* Cocos (Keeling) Islands (Australia) */
-	COUNTRY_CHPLAN_ENT("CD", 0x26, 1), /* Congo, Republic of the */
-	COUNTRY_CHPLAN_ENT("CF", 0x26, 1), /* Central African Republic */
-	COUNTRY_CHPLAN_ENT("CG", 0x26, 1), /* Congo, Democratic Republic of the. Zaire */
-	COUNTRY_CHPLAN_ENT("CH", 0x26, 1), /* Switzerland */
-	COUNTRY_CHPLAN_ENT("CI", 0x42, 1), /* Cote d'Ivoire */
-	COUNTRY_CHPLAN_ENT("CK", 0x26, 1), /* Cook Islands */
-	COUNTRY_CHPLAN_ENT("CL", 0x2D, 1), /* Chile */
-	COUNTRY_CHPLAN_ENT("CM", 0x26, 1), /* Cameroon */
-	COUNTRY_CHPLAN_ENT("CN", 0x48, 1), /* China */
-	COUNTRY_CHPLAN_ENT("CO", 0x76, 1), /* Colombia */
-	COUNTRY_CHPLAN_ENT("CR", 0x76, 1), /* Costa Rica */
-	COUNTRY_CHPLAN_ENT("CV", 0x26, 1), /* Cape Verde */
-	COUNTRY_CHPLAN_ENT("CX", 0x45, 1), /* Christmas Island (Australia) */
-	COUNTRY_CHPLAN_ENT("CY", 0x26, 1), /* Cyprus */
-	COUNTRY_CHPLAN_ENT("CZ", 0x26, 1), /* Czech Republic */
-	COUNTRY_CHPLAN_ENT("DE", 0x26, 1), /* Germany */
-	COUNTRY_CHPLAN_ENT("DJ", 0x26, 1), /* Djibouti */
-	COUNTRY_CHPLAN_ENT("DK", 0x26, 1), /* Denmark */
-	COUNTRY_CHPLAN_ENT("DM", 0x76, 1), /* Dominica */
-	COUNTRY_CHPLAN_ENT("DO", 0x76, 1), /* Dominican Republic */
-	COUNTRY_CHPLAN_ENT("DZ", 0x00, 1), /* Algeria */
-	COUNTRY_CHPLAN_ENT("EC", 0x76, 1), /* Ecuador */
-	COUNTRY_CHPLAN_ENT("EE", 0x26, 1), /* Estonia */
-	COUNTRY_CHPLAN_ENT("EG", 0x47, 1), /* Egypt */
-	COUNTRY_CHPLAN_ENT("EH", 0x47, 1), /* Western Sahara */
-	COUNTRY_CHPLAN_ENT("ER", 0x26, 1), /* Eritrea */
-	COUNTRY_CHPLAN_ENT("ES", 0x26, 1), /* Spain, Canary Islands, Ceuta, Melilla */
-	COUNTRY_CHPLAN_ENT("ET", 0x26, 1), /* Ethiopia */
-	COUNTRY_CHPLAN_ENT("FI", 0x26, 1), /* Finland */
-	COUNTRY_CHPLAN_ENT("FJ", 0x76, 1), /* Fiji */
-	COUNTRY_CHPLAN_ENT("FK", 0x26, 1), /* Falkland Islands (Islas Malvinas) (UK) */
-	COUNTRY_CHPLAN_ENT("FM", 0x76, 1), /* Micronesia, Federated States of (USA) */
-	COUNTRY_CHPLAN_ENT("FO", 0x26, 1), /* Faroe Islands (Denmark) */
-	COUNTRY_CHPLAN_ENT("FR", 0x26, 1), /* France */
-	COUNTRY_CHPLAN_ENT("GA", 0x26, 1), /* Gabon */
-	COUNTRY_CHPLAN_ENT("GB", 0x26, 1), /* Great Britain (United Kingdom; England) */
-	COUNTRY_CHPLAN_ENT("GD", 0x76, 1), /* Grenada */
-	COUNTRY_CHPLAN_ENT("GE", 0x26, 1), /* Georgia */
-	COUNTRY_CHPLAN_ENT("GF", 0x26, 1), /* French Guiana */
-	COUNTRY_CHPLAN_ENT("GG", 0x26, 1), /* Guernsey (UK) */
-	COUNTRY_CHPLAN_ENT("GH", 0x26, 1), /* Ghana */
-	COUNTRY_CHPLAN_ENT("GI", 0x26, 1), /* Gibraltar (UK) */
-	COUNTRY_CHPLAN_ENT("GL", 0x26, 1), /* Greenland (Denmark) */
-	COUNTRY_CHPLAN_ENT("GM", 0x26, 1), /* Gambia */
-	COUNTRY_CHPLAN_ENT("GN", 0x26, 1), /* Guinea */
-	COUNTRY_CHPLAN_ENT("GP", 0x26, 1), /* Guadeloupe (France) */
-	COUNTRY_CHPLAN_ENT("GQ", 0x26, 1), /* Equatorial Guinea */
-	COUNTRY_CHPLAN_ENT("GR", 0x26, 1), /* Greece */
-	COUNTRY_CHPLAN_ENT("GS", 0x26, 1), /* South Georgia and the Sandwich Islands (UK) */
-	COUNTRY_CHPLAN_ENT("GT", 0x61, 1), /* Guatemala */
-	COUNTRY_CHPLAN_ENT("GU", 0x76, 1), /* Guam (USA) */
-	COUNTRY_CHPLAN_ENT("GW", 0x26, 1), /* Guinea-Bissau */
-	COUNTRY_CHPLAN_ENT("GY", 0x44, 1), /* Guyana */
-	COUNTRY_CHPLAN_ENT("HK", 0x35, 1), /* Hong Kong */
-	COUNTRY_CHPLAN_ENT("HM", 0x45, 1), /* Heard and McDonald Islands (Australia) */
-	COUNTRY_CHPLAN_ENT("HN", 0x32, 1), /* Honduras */
-	COUNTRY_CHPLAN_ENT("HR", 0x26, 1), /* Croatia */
-	COUNTRY_CHPLAN_ENT("HT", 0x76, 1), /* Haiti */
-	COUNTRY_CHPLAN_ENT("HU", 0x26, 1), /* Hungary */
-	COUNTRY_CHPLAN_ENT("ID", 0x5D, 1), /* Indonesia */
-	COUNTRY_CHPLAN_ENT("IE", 0x26, 1), /* Ireland */
-	COUNTRY_CHPLAN_ENT("IL", 0x47, 1), /* Israel */
-	COUNTRY_CHPLAN_ENT("IM", 0x26, 1), /* Isle of Man (UK) */
-	COUNTRY_CHPLAN_ENT("IN", 0x48, 1), /* India */
-	COUNTRY_CHPLAN_ENT("IO", 0x26, 1), /* British Indian Ocean Territory (UK) */
-	COUNTRY_CHPLAN_ENT("IQ", 0x26, 1), /* Iraq */
-	COUNTRY_CHPLAN_ENT("IR", 0x26, 0), /* Iran */
-	COUNTRY_CHPLAN_ENT("IS", 0x26, 1), /* Iceland */
-	COUNTRY_CHPLAN_ENT("IT", 0x26, 1), /* Italy */
-	COUNTRY_CHPLAN_ENT("JE", 0x26, 1), /* Jersey (UK) */
-	COUNTRY_CHPLAN_ENT("JM", 0x32, 1), /* Jamaica */
-	COUNTRY_CHPLAN_ENT("JO", 0x49, 1), /* Jordan */
-	COUNTRY_CHPLAN_ENT("JP", 0x27, 1), /* Japan- Telec */
-	COUNTRY_CHPLAN_ENT("KE", 0x47, 1), /* Kenya */
-	COUNTRY_CHPLAN_ENT("KG", 0x26, 1), /* Kyrgyzstan */
-	COUNTRY_CHPLAN_ENT("KH", 0x26, 1), /* Cambodia */
-	COUNTRY_CHPLAN_ENT("KI", 0x26, 1), /* Kiribati */
-	COUNTRY_CHPLAN_ENT("KM", 0x26, 1), /* Comoros */
-	COUNTRY_CHPLAN_ENT("KN", 0x76, 1), /* Saint Kitts and Nevis */
-	COUNTRY_CHPLAN_ENT("KR", 0x4B, 1), /* South Korea */
-	COUNTRY_CHPLAN_ENT("KW", 0x26, 1), /* Kuwait */
-	COUNTRY_CHPLAN_ENT("KY", 0x76, 1), /* Cayman Islands (UK) */
-	COUNTRY_CHPLAN_ENT("KZ", 0x26, 1), /* Kazakhstan */
-	COUNTRY_CHPLAN_ENT("LA", 0x26, 1), /* Laos */
-	COUNTRY_CHPLAN_ENT("LB", 0x26, 1), /* Lebanon */
-	COUNTRY_CHPLAN_ENT("LC", 0x76, 1), /* Saint Lucia */
-	COUNTRY_CHPLAN_ENT("LI", 0x26, 1), /* Liechtenstein */
-	COUNTRY_CHPLAN_ENT("LK", 0x26, 1), /* Sri Lanka */
-	COUNTRY_CHPLAN_ENT("LR", 0x26, 1), /* Liberia */
-	COUNTRY_CHPLAN_ENT("LS", 0x26, 1), /* Lesotho */
-	COUNTRY_CHPLAN_ENT("LT", 0x26, 1), /* Lithuania */
-	COUNTRY_CHPLAN_ENT("LU", 0x26, 1), /* Luxembourg */
-	COUNTRY_CHPLAN_ENT("LV", 0x26, 1), /* Latvia */
-	COUNTRY_CHPLAN_ENT("LY", 0x26, 1), /* Libya */
-	COUNTRY_CHPLAN_ENT("MA", 0x47, 1), /* Morocco */
-	COUNTRY_CHPLAN_ENT("MC", 0x26, 1), /* Monaco */
-	COUNTRY_CHPLAN_ENT("MD", 0x26, 1), /* Moldova */
-	COUNTRY_CHPLAN_ENT("ME", 0x26, 1), /* Montenegro */
-	COUNTRY_CHPLAN_ENT("MF", 0x76, 1), /* Saint Martin */
-	COUNTRY_CHPLAN_ENT("MG", 0x26, 1), /* Madagascar */
-	COUNTRY_CHPLAN_ENT("MH", 0x76, 1), /* Marshall Islands (USA) */
-	COUNTRY_CHPLAN_ENT("MK", 0x26, 1), /* Republic of Macedonia (FYROM) */
-	COUNTRY_CHPLAN_ENT("ML", 0x26, 1), /* Mali */
-	COUNTRY_CHPLAN_ENT("MM", 0x26, 1), /* Burma (Myanmar) */
-	COUNTRY_CHPLAN_ENT("MN", 0x26, 1), /* Mongolia */
-	COUNTRY_CHPLAN_ENT("MO", 0x35, 1), /* Macau */
-	COUNTRY_CHPLAN_ENT("MP", 0x76, 1), /* Northern Mariana Islands (USA) */
-	COUNTRY_CHPLAN_ENT("MQ", 0x26, 1), /* Martinique (France) */
-	COUNTRY_CHPLAN_ENT("MR", 0x26, 1), /* Mauritania */
-	COUNTRY_CHPLAN_ENT("MS", 0x26, 1), /* Montserrat (UK) */
-	COUNTRY_CHPLAN_ENT("MT", 0x26, 1), /* Malta */
-	COUNTRY_CHPLAN_ENT("MU", 0x26, 1), /* Mauritius */
-	COUNTRY_CHPLAN_ENT("MV", 0x47, 1), /* Maldives */
-	COUNTRY_CHPLAN_ENT("MW", 0x26, 1), /* Malawi */
-	COUNTRY_CHPLAN_ENT("MX", 0x4D, 1), /* Mexico */
-	COUNTRY_CHPLAN_ENT("MY", 0x63, 1), /* Malaysia */
-	COUNTRY_CHPLAN_ENT("MZ", 0x26, 1), /* Mozambique */
-	COUNTRY_CHPLAN_ENT("NA", 0x26, 1), /* Namibia */
-	COUNTRY_CHPLAN_ENT("NC", 0x26, 1), /* New Caledonia */
-	COUNTRY_CHPLAN_ENT("NE", 0x26, 1), /* Niger */
-	COUNTRY_CHPLAN_ENT("NF", 0x45, 1), /* Norfolk Island (Australia) */
-	COUNTRY_CHPLAN_ENT("NG", 0x75, 1), /* Nigeria */
-	COUNTRY_CHPLAN_ENT("NI", 0x76, 1), /* Nicaragua */
-	COUNTRY_CHPLAN_ENT("NL", 0x26, 1), /* Netherlands */
-	COUNTRY_CHPLAN_ENT("NO", 0x26, 1), /* Norway */
-	COUNTRY_CHPLAN_ENT("NP", 0x48, 1), /* Nepal */
-	COUNTRY_CHPLAN_ENT("NR", 0x26, 1), /* Nauru */
-	COUNTRY_CHPLAN_ENT("NU", 0x45, 1), /* Niue */
-	COUNTRY_CHPLAN_ENT("NZ", 0x45, 1), /* New Zealand */
-	COUNTRY_CHPLAN_ENT("OM", 0x26, 1), /* Oman */
-	COUNTRY_CHPLAN_ENT("PA", 0x76, 1), /* Panama */
-	COUNTRY_CHPLAN_ENT("PE", 0x76, 1), /* Peru */
-	COUNTRY_CHPLAN_ENT("PF", 0x26, 1), /* French Polynesia (France) */
-	COUNTRY_CHPLAN_ENT("PG", 0x35, 1), /* Papua New Guinea */
-	COUNTRY_CHPLAN_ENT("PH", 0x35, 1), /* Philippines */
-	COUNTRY_CHPLAN_ENT("PK", 0x51, 1), /* Pakistan */
-	COUNTRY_CHPLAN_ENT("PL", 0x26, 1), /* Poland */
-	COUNTRY_CHPLAN_ENT("PM", 0x26, 1), /* Saint Pierre and Miquelon (France) */
-	COUNTRY_CHPLAN_ENT("PR", 0x76, 1), /* Puerto Rico */
-	COUNTRY_CHPLAN_ENT("PT", 0x26, 1), /* Portugal */
-	COUNTRY_CHPLAN_ENT("PW", 0x76, 1), /* Palau */
-	COUNTRY_CHPLAN_ENT("PY", 0x76, 1), /* Paraguay */
-	COUNTRY_CHPLAN_ENT("QA", 0x35, 1), /* Qatar */
-	COUNTRY_CHPLAN_ENT("RE", 0x26, 1), /* Reunion (France) */
-	COUNTRY_CHPLAN_ENT("RO", 0x26, 1), /* Romania */
-	COUNTRY_CHPLAN_ENT("RS", 0x26, 1), /* Serbia, Kosovo */
-	COUNTRY_CHPLAN_ENT("RU", 0x59, 1), /* Russia(fac/gost), Kaliningrad */
-	COUNTRY_CHPLAN_ENT("RW", 0x26, 1), /* Rwanda */
-	COUNTRY_CHPLAN_ENT("SA", 0x35, 1), /* Saudi Arabia */
-	COUNTRY_CHPLAN_ENT("SB", 0x26, 1), /* Solomon Islands */
-	COUNTRY_CHPLAN_ENT("SC", 0x76, 1), /* Seychelles */
-	COUNTRY_CHPLAN_ENT("SE", 0x26, 1), /* Sweden */
-	COUNTRY_CHPLAN_ENT("SG", 0x35, 1), /* Singapore */
-	COUNTRY_CHPLAN_ENT("SH", 0x26, 1), /* Saint Helena (UK) */
-	COUNTRY_CHPLAN_ENT("SI", 0x26, 1), /* Slovenia */
-	COUNTRY_CHPLAN_ENT("SJ", 0x26, 1), /* Svalbard (Norway) */
-	COUNTRY_CHPLAN_ENT("SK", 0x26, 1), /* Slovakia */
-	COUNTRY_CHPLAN_ENT("SL", 0x26, 1), /* Sierra Leone */
-	COUNTRY_CHPLAN_ENT("SM", 0x26, 1), /* San Marino */
-	COUNTRY_CHPLAN_ENT("SN", 0x26, 1), /* Senegal */
-	COUNTRY_CHPLAN_ENT("SO", 0x26, 1), /* Somalia */
-	COUNTRY_CHPLAN_ENT("SR", 0x74, 1), /* Suriname */
-	COUNTRY_CHPLAN_ENT("ST", 0x76, 1), /* Sao Tome and Principe */
-	COUNTRY_CHPLAN_ENT("SV", 0x30, 1), /* El Salvador */
-	COUNTRY_CHPLAN_ENT("SX", 0x76, 1), /* Sint Marteen */
-	COUNTRY_CHPLAN_ENT("SZ", 0x26, 1), /* Swaziland */
-	COUNTRY_CHPLAN_ENT("TC", 0x26, 1), /* Turks and Caicos Islands (UK) */
-	COUNTRY_CHPLAN_ENT("TD", 0x26, 1), /* Chad */
-	COUNTRY_CHPLAN_ENT("TF", 0x26, 1), /* French Southern and Antarctic Lands (FR Southern Territories) */
-	COUNTRY_CHPLAN_ENT("TG", 0x26, 1), /* Togo */
-	COUNTRY_CHPLAN_ENT("TH", 0x35, 1), /* Thailand */
-	COUNTRY_CHPLAN_ENT("TJ", 0x26, 1), /* Tajikistan */
-	COUNTRY_CHPLAN_ENT("TK", 0x45, 1), /* Tokelau */
-	COUNTRY_CHPLAN_ENT("TM", 0x26, 1), /* Turkmenistan */
-	COUNTRY_CHPLAN_ENT("TN", 0x47, 1), /* Tunisia */
-	COUNTRY_CHPLAN_ENT("TO", 0x26, 1), /* Tonga */
-	COUNTRY_CHPLAN_ENT("TR", 0x26, 1), /* Turkey, Northern Cyprus */
-	COUNTRY_CHPLAN_ENT("TT", 0x76, 1), /* Trinidad & Tobago */
-	COUNTRY_CHPLAN_ENT("TV", 0x21, 0), /* Tuvalu */
-	COUNTRY_CHPLAN_ENT("TW", 0x76, 1), /* Taiwan */
-	COUNTRY_CHPLAN_ENT("TZ", 0x26, 1), /* Tanzania */
-	COUNTRY_CHPLAN_ENT("UA", 0x35, 1), /* Ukraine */
-	COUNTRY_CHPLAN_ENT("UG", 0x26, 1), /* Uganda */
-	COUNTRY_CHPLAN_ENT("US", 0x76, 1), /* United States of America (USA) */
-	COUNTRY_CHPLAN_ENT("UY", 0x30, 1), /* Uruguay */
-	COUNTRY_CHPLAN_ENT("UZ", 0x47, 1), /* Uzbekistan */
-	COUNTRY_CHPLAN_ENT("VA", 0x26, 1), /* Holy See (Vatican City) */
-	COUNTRY_CHPLAN_ENT("VC", 0x76, 1), /* Saint Vincent and the Grenadines */
-	COUNTRY_CHPLAN_ENT("VE", 0x30, 1), /* Venezuela */
-	COUNTRY_CHPLAN_ENT("VG", 0x76, 1), /* British Virgin Islands (UK) */
-	COUNTRY_CHPLAN_ENT("VI", 0x76, 1), /* United States Virgin Islands (USA) */
-	COUNTRY_CHPLAN_ENT("VN", 0x35, 1), /* Vietnam */
-	COUNTRY_CHPLAN_ENT("VU", 0x26, 1), /* Vanuatu */
-	COUNTRY_CHPLAN_ENT("WF", 0x26, 1), /* Wallis and Futuna (France) */
-	COUNTRY_CHPLAN_ENT("WS", 0x76, 1), /* Samoa */
-	COUNTRY_CHPLAN_ENT("YE", 0x26, 1), /* Yemen */
-	COUNTRY_CHPLAN_ENT("YT", 0x26, 1), /* Mayotte (France) */
-	COUNTRY_CHPLAN_ENT("ZA", 0x35, 1), /* South Africa */
-	COUNTRY_CHPLAN_ENT("ZM", 0x26, 1), /* Zambia */
-	COUNTRY_CHPLAN_ENT("ZW", 0x26, 1), /* Zimbabwe */
+	COUNTRY_CHPLAN_ENT("AD", 0x3A, 0x00, DEF    , 1, 1), /* Andorra */
+	COUNTRY_CHPLAN_ENT("AE", 0x5E, 0x00, DEF    , 1, 1), /* United Arab Emirates */
+	COUNTRY_CHPLAN_ENT("AF", 0x42, 0x00, DEF    , 1, 1), /* Afghanistan */
+	COUNTRY_CHPLAN_ENT("AG", 0x76, 0x00, DEF    , 1, 1), /* Antigua & Barbuda */
+	COUNTRY_CHPLAN_ENT("AI", 0x5E, 0x00, DEF    , 1, 1), /* Anguilla(UK) */
+	COUNTRY_CHPLAN_ENT("AL", 0x5E, 0x00, DEF    , 1, 1), /* Albania */
+	COUNTRY_CHPLAN_ENT("AM", 0x5E, 0x00, DEF    , 1, 1), /* Armenia */
+	COUNTRY_CHPLAN_ENT("AN", 0x76, 0x00, DEF    , 1, 1), /* Netherlands Antilles */
+	COUNTRY_CHPLAN_ENT("AO", 0x5E, 0x00, DEF    , 1, 1), /* Angola */
+	COUNTRY_CHPLAN_ENT("AQ", 0x26, 0x00, DEF    , 1, 1), /* Antarctica */
+	COUNTRY_CHPLAN_ENT("AR", 0x4D, 0x00, DEF    , 1, 1), /* Argentina */
+	COUNTRY_CHPLAN_ENT("AS", 0x76, 0x00, DEF    , 1, 1), /* American Samoa */
+	COUNTRY_CHPLAN_ENT("AT", 0x5E, 0x00, DEF    , 1, 1), /* Austria */
+	COUNTRY_CHPLAN_ENT("AU", 0x03, 0x00, DEF    , 1, 1), /* Australia */
+	COUNTRY_CHPLAN_ENT("AW", 0x76, 0x00, DEF    , 1, 1), /* Aruba */
+	COUNTRY_CHPLAN_ENT("AZ", 0x5E, 0x00, DEF    , 1, 1), /* Azerbaijan */
+	COUNTRY_CHPLAN_ENT("BA", 0x5E, 0x00, DEF    , 1, 1), /* Bosnia & Herzegovina */
+	COUNTRY_CHPLAN_ENT("BB", 0x76, 0x00, DEF    , 1, 1), /* Barbados */
+	COUNTRY_CHPLAN_ENT("BD", 0x5E, 0x00, DEF    , 1, 1), /* Bangladesh */
+	COUNTRY_CHPLAN_ENT("BE", 0x5E, 0x00, DEF    , 1, 1), /* Belgium */
+	COUNTRY_CHPLAN_ENT("BF", 0x5E, 0x00, DEF    , 1, 1), /* Burkina Faso */
+	COUNTRY_CHPLAN_ENT("BG", 0x5E, 0x00, DEF    , 1, 1), /* Bulgaria */
+	COUNTRY_CHPLAN_ENT("BH", 0x06, 0x00, DEF    , 1, 1), /* Bahrain */
+	COUNTRY_CHPLAN_ENT("BI", 0x3A, 0x00, DEF    , 1, 1), /* Burundi */
+	COUNTRY_CHPLAN_ENT("BJ", 0x3A, 0x00, DEF    , 1, 1), /* Benin */
+	COUNTRY_CHPLAN_ENT("BM", 0x76, 0x00, DEF    , 1, 1), /* Bermuda (UK) */
+	COUNTRY_CHPLAN_ENT("BN", 0x06, 0x00, DEF    , 1, 1), /* Brunei */
+	COUNTRY_CHPLAN_ENT("BO", 0x61, 0x00, DEF    , 1, 1), /* Bolivia */
+	COUNTRY_CHPLAN_ENT("BR", 0x62, 0x00, DEF    , 1, 1), /* Brazil */
+	COUNTRY_CHPLAN_ENT("BS", 0x76, 0x00, DEF    , 1, 1), /* Bahamas */
+	COUNTRY_CHPLAN_ENT("BT", 0x5E, 0x00, DEF    , 1, 1), /* Bhutan */
+	COUNTRY_CHPLAN_ENT("BV", 0x5E, 0x00, DEF    , 1, 1), /* Bouvet Island (Norway) */
+	COUNTRY_CHPLAN_ENT("BW", 0x5E, 0x00, DEF    , 1, 1), /* Botswana */
+	COUNTRY_CHPLAN_ENT("BY", 0x08, 0x00, DEF    , 0, 1), /* Belarus */
+	COUNTRY_CHPLAN_ENT("BZ", 0x76, 0x00, DEF    , 1, 1), /* Belize */
+	COUNTRY_CHPLAN_ENT("CA", 0x2B, 0x00, DEF    , 1, 1), /* Canada */
+	COUNTRY_CHPLAN_ENT("CC", 0x3A, 0x00, DEF    , 1, 1), /* Cocos (Keeling) Islands (Australia) */
+	COUNTRY_CHPLAN_ENT("CD", 0x3A, 0x00, DEF    , 1, 1), /* Congo, Republic of the */
+	COUNTRY_CHPLAN_ENT("CF", 0x3A, 0x00, DEF    , 1, 1), /* Central African Republic */
+	COUNTRY_CHPLAN_ENT("CG", 0x3A, 0x00, DEF    , 1, 1), /* Congo, Democratic Republic of the. Zaire */
+	COUNTRY_CHPLAN_ENT("CH", 0x5E, 0x00, DEF    , 1, 1), /* Switzerland */
+	COUNTRY_CHPLAN_ENT("CI", 0x42, 0x00, DEF    , 1, 1), /* Cote d'Ivoire */
+	COUNTRY_CHPLAN_ENT("CK", 0x5E, 0x00, DEF    , 1, 1), /* Cook Islands */
+	COUNTRY_CHPLAN_ENT("CL", 0x76, 0x00, CHILE  , 1, 1), /* Chile */
+	COUNTRY_CHPLAN_ENT("CM", 0x5E, 0x00, DEF    , 1, 1), /* Cameroon */
+	COUNTRY_CHPLAN_ENT("CN", 0x06, 0x00, CN     , 1, 1), /* China */
+	COUNTRY_CHPLAN_ENT("CO", 0x76, 0x00, DEF    , 1, 1), /* Colombia */
+	COUNTRY_CHPLAN_ENT("CR", 0x76, 0x00, DEF    , 1, 1), /* Costa Rica */
+	COUNTRY_CHPLAN_ENT("CV", 0x5E, 0x00, DEF    , 1, 1), /* Cape Verde */
+	COUNTRY_CHPLAN_ENT("CX", 0x03, 0x00, DEF    , 1, 1), /* Christmas Island (Australia) */
+	COUNTRY_CHPLAN_ENT("CY", 0x5E, 0x00, DEF    , 1, 1), /* Cyprus */
+	COUNTRY_CHPLAN_ENT("CZ", 0x5E, 0x00, DEF    , 1, 1), /* Czech Republic */
+	COUNTRY_CHPLAN_ENT("DE", 0x5E, 0x00, DEF    , 1, 1), /* Germany */
+	COUNTRY_CHPLAN_ENT("DJ", 0x3A, 0x00, DEF    , 1, 1), /* Djibouti */
+	COUNTRY_CHPLAN_ENT("DK", 0x5E, 0x00, DEF    , 1, 1), /* Denmark */
+	COUNTRY_CHPLAN_ENT("DM", 0x76, 0x00, DEF    , 1, 1), /* Dominica */
+	COUNTRY_CHPLAN_ENT("DO", 0x76, 0x00, DEF    , 1, 1), /* Dominican Republic */
+	COUNTRY_CHPLAN_ENT("DZ", 0x00, 0x00, DEF    , 1, 1), /* Algeria */
+	COUNTRY_CHPLAN_ENT("EC", 0x76, 0x00, DEF    , 1, 1), /* Ecuador */
+	COUNTRY_CHPLAN_ENT("EE", 0x5E, 0x00, DEF    , 1, 1), /* Estonia */
+	COUNTRY_CHPLAN_ENT("EG", 0x3C, 0x00, DEF    , 1, 1), /* Egypt */
+	COUNTRY_CHPLAN_ENT("EH", 0x3C, 0x00, DEF    , 1, 1), /* Western Sahara */
+	COUNTRY_CHPLAN_ENT("ER", 0x3A, 0x00, DEF    , 1, 1), /* Eritrea */
+	COUNTRY_CHPLAN_ENT("ES", 0x5E, 0x00, DEF    , 1, 1), /* Spain, Canary Islands, Ceuta, Melilla */
+	COUNTRY_CHPLAN_ENT("ET", 0x3A, 0x00, DEF    , 1, 1), /* Ethiopia */
+	COUNTRY_CHPLAN_ENT("FI", 0x5E, 0x00, DEF    , 1, 1), /* Finland */
+	COUNTRY_CHPLAN_ENT("FJ", 0x76, 0x00, DEF    , 1, 1), /* Fiji */
+	COUNTRY_CHPLAN_ENT("FK", 0x3A, 0x00, DEF    , 1, 1), /* Falkland Islands (Islas Malvinas) (UK) */
+	COUNTRY_CHPLAN_ENT("FM", 0x76, 0x00, DEF    , 1, 1), /* Micronesia, Federated States of (USA) */
+	COUNTRY_CHPLAN_ENT("FO", 0x3A, 0x00, DEF    , 1, 1), /* Faroe Islands (Denmark) */
+	COUNTRY_CHPLAN_ENT("FR", 0x5E, 0x00, DEF    , 1, 1), /* France */
+	COUNTRY_CHPLAN_ENT("GA", 0x5E, 0x00, DEF    , 1, 1), /* Gabon */
+	COUNTRY_CHPLAN_ENT("GB", 0x5E, 0x00, DEF    , 1, 1), /* Great Britain (United Kingdom; England) */
+	COUNTRY_CHPLAN_ENT("GD", 0x76, 0x00, DEF    , 1, 1), /* Grenada */
+	COUNTRY_CHPLAN_ENT("GE", 0x5E, 0x00, DEF    , 1, 1), /* Georgia */
+	COUNTRY_CHPLAN_ENT("GF", 0x3A, 0x00, DEF    , 1, 1), /* French Guiana */
+	COUNTRY_CHPLAN_ENT("GG", 0x5E, 0x00, DEF    , 1, 1), /* Guernsey (UK) */
+	COUNTRY_CHPLAN_ENT("GH", 0x5E, 0x00, DEF    , 1, 1), /* Ghana */
+	COUNTRY_CHPLAN_ENT("GI", 0x3A, 0x00, DEF    , 1, 1), /* Gibraltar (UK) */
+	COUNTRY_CHPLAN_ENT("GL", 0x5E, 0x00, DEF    , 1, 1), /* Greenland (Denmark) */
+	COUNTRY_CHPLAN_ENT("GM", 0x3A, 0x00, DEF    , 1, 1), /* Gambia */
+	COUNTRY_CHPLAN_ENT("GN", 0x3A, 0x00, DEF    , 1, 1), /* Guinea */
+	COUNTRY_CHPLAN_ENT("GP", 0x3A, 0x00, DEF    , 1, 1), /* Guadeloupe (France) */
+	COUNTRY_CHPLAN_ENT("GQ", 0x5E, 0x00, DEF    , 1, 1), /* Equatorial Guinea */
+	COUNTRY_CHPLAN_ENT("GR", 0x5E, 0x00, DEF    , 1, 1), /* Greece */
+	COUNTRY_CHPLAN_ENT("GS", 0x3A, 0x00, DEF    , 1, 1), /* South Georgia and the Sandwich Islands (UK) */
+	COUNTRY_CHPLAN_ENT("GT", 0x76, 0x00, DEF    , 1, 1), /* Guatemala */
+	COUNTRY_CHPLAN_ENT("GU", 0x76, 0x00, DEF    , 1, 1), /* Guam (USA) */
+	COUNTRY_CHPLAN_ENT("GW", 0x3A, 0x00, DEF    , 1, 1), /* Guinea-Bissau */
+	COUNTRY_CHPLAN_ENT("GY", 0x44, 0x00, DEF    , 1, 1), /* Guyana */
+	COUNTRY_CHPLAN_ENT("HK", 0x5E, 0x00, DEF    , 1, 1), /* Hong Kong */
+	COUNTRY_CHPLAN_ENT("HM", 0x03, 0x00, DEF    , 1, 1), /* Heard and McDonald Islands (Australia) */
+	COUNTRY_CHPLAN_ENT("HN", 0x32, 0x00, DEF    , 1, 1), /* Honduras */
+	COUNTRY_CHPLAN_ENT("HR", 0x5E, 0x00, DEF    , 1, 1), /* Croatia */
+	COUNTRY_CHPLAN_ENT("HT", 0x76, 0x00, DEF    , 0, 1), /* Haiti */
+	COUNTRY_CHPLAN_ENT("HU", 0x5E, 0x00, DEF    , 1, 1), /* Hungary */
+	COUNTRY_CHPLAN_ENT("ID", 0x5D, 0x00, DEF    , 1, 1), /* Indonesia */
+	COUNTRY_CHPLAN_ENT("IE", 0x5E, 0x00, DEF    , 1, 1), /* Ireland */
+	COUNTRY_CHPLAN_ENT("IL", 0x5E, 0x00, DEF    , 1, 1), /* Israel */
+	COUNTRY_CHPLAN_ENT("IM", 0x3A, 0x00, DEF    , 1, 1), /* Isle of Man (UK) */
+	COUNTRY_CHPLAN_ENT("IN", 0x06, 0x00, DEF    , 1, 1), /* India */
+	COUNTRY_CHPLAN_ENT("IO", 0x3A, 0x00, DEF    , 1, 1), /* British Indian Ocean Territory (UK) */
+	COUNTRY_CHPLAN_ENT("IQ", 0x05, 0x00, DEF    , 1, 1), /* Iraq */
+	COUNTRY_CHPLAN_ENT("IR", 0x3A, 0x00, DEF    , 0, 0), /* Iran */
+	COUNTRY_CHPLAN_ENT("IS", 0x5E, 0x00, DEF    , 1, 1), /* Iceland */
+	COUNTRY_CHPLAN_ENT("IT", 0x5E, 0x00, DEF    , 1, 1), /* Italy */
+	COUNTRY_CHPLAN_ENT("JE", 0x3A, 0x00, DEF    , 1, 1), /* Jersey (UK) */
+	COUNTRY_CHPLAN_ENT("JM", 0x76, 0x00, DEF    , 1, 1), /* Jamaica */
+	COUNTRY_CHPLAN_ENT("JO", 0x05, 0x00, DEF    , 1, 1), /* Jordan */
+	COUNTRY_CHPLAN_ENT("JP", 0x7D, 0x00, DEF    , 1, 1), /* Japan- Telec */
+	COUNTRY_CHPLAN_ENT("KE", 0x5E, 0x00, DEF    , 1, 1), /* Kenya */
+	COUNTRY_CHPLAN_ENT("KG", 0x5E, 0x00, DEF    , 1, 1), /* Kyrgyzstan */
+	COUNTRY_CHPLAN_ENT("KH", 0x5E, 0x00, DEF    , 1, 1), /* Cambodia */
+	COUNTRY_CHPLAN_ENT("KI", 0x5E, 0x00, DEF    , 1, 1), /* Kiribati */
+	COUNTRY_CHPLAN_ENT("KM", 0x3A, 0x00, DEF    , 1, 1), /* Comoros */
+	COUNTRY_CHPLAN_ENT("KN", 0x76, 0x00, DEF    , 1, 1), /* Saint Kitts and Nevis */
+	COUNTRY_CHPLAN_ENT("KR", 0x4B, 0x00, DEF    , 1, 1), /* South Korea */
+	COUNTRY_CHPLAN_ENT("KW", 0x5E, 0x00, DEF    , 1, 1), /* Kuwait */
+	COUNTRY_CHPLAN_ENT("KY", 0x76, 0x00, DEF    , 1, 1), /* Cayman Islands (UK) */
+	COUNTRY_CHPLAN_ENT("KZ", 0x5E, 0x00, DEF    , 1, 1), /* Kazakhstan */
+	COUNTRY_CHPLAN_ENT("LA", 0x5E, 0x00, DEF    , 1, 1), /* Laos */
+	COUNTRY_CHPLAN_ENT("LB", 0x5E, 0x00, DEF    , 1, 1), /* Lebanon */
+	COUNTRY_CHPLAN_ENT("LC", 0x76, 0x00, DEF    , 1, 1), /* Saint Lucia */
+	COUNTRY_CHPLAN_ENT("LI", 0x5E, 0x00, DEF    , 1, 1), /* Liechtenstein */
+	COUNTRY_CHPLAN_ENT("LK", 0x5E, 0x00, DEF    , 1, 1), /* Sri Lanka */
+	COUNTRY_CHPLAN_ENT("LR", 0x5E, 0x00, DEF    , 1, 1), /* Liberia */
+	COUNTRY_CHPLAN_ENT("LS", 0x5E, 0x00, DEF    , 1, 1), /* Lesotho */
+	COUNTRY_CHPLAN_ENT("LT", 0x5E, 0x00, DEF    , 1, 1), /* Lithuania */
+	COUNTRY_CHPLAN_ENT("LU", 0x5E, 0x00, DEF    , 1, 1), /* Luxembourg */
+	COUNTRY_CHPLAN_ENT("LV", 0x5E, 0x00, DEF    , 1, 1), /* Latvia */
+	COUNTRY_CHPLAN_ENT("LY", 0x5E, 0x00, DEF    , 1, 1), /* Libya */
+	COUNTRY_CHPLAN_ENT("MA", 0x3C, 0x00, DEF    , 1, 1), /* Morocco */
+	COUNTRY_CHPLAN_ENT("MC", 0x5E, 0x00, DEF    , 1, 1), /* Monaco */
+	COUNTRY_CHPLAN_ENT("MD", 0x5E, 0x00, DEF    , 1, 1), /* Moldova */
+	COUNTRY_CHPLAN_ENT("ME", 0x3A, 0x00, DEF    , 1, 1), /* Montenegro */
+	COUNTRY_CHPLAN_ENT("MF", 0x76, 0x00, DEF    , 1, 1), /* Saint Martin */
+	COUNTRY_CHPLAN_ENT("MG", 0x5E, 0x00, DEF    , 1, 1), /* Madagascar */
+	COUNTRY_CHPLAN_ENT("MH", 0x76, 0x00, DEF    , 1, 1), /* Marshall Islands (USA) */
+	COUNTRY_CHPLAN_ENT("MK", 0x3A, 0x00, DEF    , 1, 1), /* Republic of Macedonia (FYROM) */
+	COUNTRY_CHPLAN_ENT("ML", 0x5E, 0x00, DEF    , 1, 1), /* Mali */
+	COUNTRY_CHPLAN_ENT("MM", 0x3A, 0x00, DEF    , 1, 1), /* Burma (Myanmar) */
+	COUNTRY_CHPLAN_ENT("MN", 0x5E, 0x00, DEF    , 1, 1), /* Mongolia */
+	COUNTRY_CHPLAN_ENT("MO", 0x5E, 0x00, DEF    , 1, 1), /* Macau */
+	COUNTRY_CHPLAN_ENT("MP", 0x76, 0x00, DEF    , 1, 1), /* Northern Mariana Islands (USA) */
+	COUNTRY_CHPLAN_ENT("MQ", 0x3A, 0x00, DEF    , 1, 1), /* Martinique (France) */
+	COUNTRY_CHPLAN_ENT("MR", 0x5E, 0x00, DEF    , 1, 1), /* Mauritania */
+	COUNTRY_CHPLAN_ENT("MS", 0x3A, 0x00, DEF    , 1, 1), /* Montserrat (UK) */
+	COUNTRY_CHPLAN_ENT("MT", 0x5E, 0x00, DEF    , 1, 1), /* Malta */
+	COUNTRY_CHPLAN_ENT("MU", 0x5E, 0x00, DEF    , 1, 1), /* Mauritius */
+	COUNTRY_CHPLAN_ENT("MV", 0x3C, 0x00, DEF    , 1, 1), /* Maldives */
+	COUNTRY_CHPLAN_ENT("MW", 0x5E, 0x00, DEF    , 1, 1), /* Malawi */
+	COUNTRY_CHPLAN_ENT("MX", 0x4D, 0x00, DEF    , 1, 1), /* Mexico */
+	COUNTRY_CHPLAN_ENT("MY", 0x07, 0x00, DEF    , 1, 1), /* Malaysia */
+	COUNTRY_CHPLAN_ENT("MZ", 0x5E, 0x00, DEF    , 1, 1), /* Mozambique */
+	COUNTRY_CHPLAN_ENT("NA", 0x5E, 0x00, DEF    , 1, 1), /* Namibia */
+	COUNTRY_CHPLAN_ENT("NC", 0x3A, 0x00, DEF    , 1, 1), /* New Caledonia */
+	COUNTRY_CHPLAN_ENT("NE", 0x5E, 0x00, DEF    , 1, 1), /* Niger */
+	COUNTRY_CHPLAN_ENT("NF", 0x03, 0x00, DEF    , 1, 1), /* Norfolk Island (Australia) */
+	COUNTRY_CHPLAN_ENT("NG", 0x75, 0x00, DEF    , 1, 1), /* Nigeria */
+	COUNTRY_CHPLAN_ENT("NI", 0x76, 0x00, DEF    , 1, 1), /* Nicaragua */
+	COUNTRY_CHPLAN_ENT("NL", 0x5E, 0x00, DEF    , 1, 1), /* Netherlands */
+	COUNTRY_CHPLAN_ENT("NO", 0x5E, 0x00, DEF    , 1, 1), /* Norway */
+	COUNTRY_CHPLAN_ENT("NP", 0x06, 0x00, DEF    , 1, 1), /* Nepal */
+	COUNTRY_CHPLAN_ENT("NR", 0x3A, 0x00, DEF    , 1, 1), /* Nauru */
+	COUNTRY_CHPLAN_ENT("NU", 0x03, 0x00, DEF    , 1, 1), /* Niue */
+	COUNTRY_CHPLAN_ENT("NZ", 0x03, 0x00, DEF    , 1, 1), /* New Zealand */
+	COUNTRY_CHPLAN_ENT("OM", 0x5E, 0x00, DEF    , 1, 1), /* Oman */
+	COUNTRY_CHPLAN_ENT("PA", 0x76, 0x00, DEF    , 1, 1), /* Panama */
+	COUNTRY_CHPLAN_ENT("PE", 0x76, 0x00, DEF    , 1, 1), /* Peru */
+	COUNTRY_CHPLAN_ENT("PF", 0x3A, 0x00, DEF    , 1, 1), /* French Polynesia (France) */
+	COUNTRY_CHPLAN_ENT("PG", 0x5E, 0x00, DEF    , 1, 1), /* Papua New Guinea */
+	COUNTRY_CHPLAN_ENT("PH", 0x5E, 0x00, DEF    , 1, 1), /* Philippines */
+	COUNTRY_CHPLAN_ENT("PK", 0x51, 0x00, DEF    , 1, 1), /* Pakistan */
+	COUNTRY_CHPLAN_ENT("PL", 0x5E, 0x00, DEF    , 1, 1), /* Poland */
+	COUNTRY_CHPLAN_ENT("PM", 0x3A, 0x00, DEF    , 1, 1), /* Saint Pierre and Miquelon (France) */
+	COUNTRY_CHPLAN_ENT("PR", 0x76, 0x00, DEF    , 1, 1), /* Puerto Rico */
+	COUNTRY_CHPLAN_ENT("PS", 0x5E, 0x00, DEF    , 1, 1), /* Palestine */
+	COUNTRY_CHPLAN_ENT("PT", 0x5E, 0x00, DEF    , 1, 1), /* Portugal */
+	COUNTRY_CHPLAN_ENT("PW", 0x76, 0x00, DEF    , 1, 1), /* Palau */
+	COUNTRY_CHPLAN_ENT("PY", 0x76, 0x00, DEF    , 1, 1), /* Paraguay */
+	COUNTRY_CHPLAN_ENT("QA", 0x5E, 0x00, QATAR  , 1, 1), /* Qatar */
+	COUNTRY_CHPLAN_ENT("RE", 0x3A, 0x00, DEF    , 1, 1), /* Reunion (France) */
+	COUNTRY_CHPLAN_ENT("RO", 0x5E, 0x00, DEF    , 1, 1), /* Romania */
+	COUNTRY_CHPLAN_ENT("RS", 0x5E, 0x00, DEF    , 1, 1), /* Serbia */
+	COUNTRY_CHPLAN_ENT("RU", 0x09, 0x00, DEF    , 1, 1), /* Russia(fac/gost), Kaliningrad */
+	COUNTRY_CHPLAN_ENT("RW", 0x5E, 0x00, DEF    , 1, 1), /* Rwanda */
+	COUNTRY_CHPLAN_ENT("SA", 0x5E, 0x00, DEF    , 1, 1), /* Saudi Arabia */
+	COUNTRY_CHPLAN_ENT("SB", 0x3A, 0x00, DEF    , 1, 1), /* Solomon Islands */
+	COUNTRY_CHPLAN_ENT("SC", 0x76, 0x00, DEF    , 1, 1), /* Seychelles */
+	COUNTRY_CHPLAN_ENT("SE", 0x5E, 0x00, DEF    , 1, 1), /* Sweden */
+	COUNTRY_CHPLAN_ENT("SG", 0x5E, 0x00, DEF    , 1, 1), /* Singapore */
+	COUNTRY_CHPLAN_ENT("SH", 0x3A, 0x00, DEF    , 1, 1), /* Saint Helena (UK) */
+	COUNTRY_CHPLAN_ENT("SI", 0x5E, 0x00, DEF    , 1, 1), /* Slovenia */
+	COUNTRY_CHPLAN_ENT("SJ", 0x3A, 0x00, DEF    , 1, 1), /* Svalbard (Norway) */
+	COUNTRY_CHPLAN_ENT("SK", 0x5E, 0x00, DEF    , 1, 1), /* Slovakia */
+	COUNTRY_CHPLAN_ENT("SL", 0x5E, 0x00, DEF    , 1, 1), /* Sierra Leone */
+	COUNTRY_CHPLAN_ENT("SM", 0x3A, 0x00, DEF    , 1, 1), /* San Marino */
+	COUNTRY_CHPLAN_ENT("SN", 0x3A, 0x00, DEF    , 1, 1), /* Senegal */
+	COUNTRY_CHPLAN_ENT("SO", 0x3A, 0x00, DEF    , 1, 1), /* Somalia */
+	COUNTRY_CHPLAN_ENT("SR", 0x74, 0x00, DEF    , 1, 1), /* Suriname */
+	COUNTRY_CHPLAN_ENT("ST", 0x76, 0x00, DEF    , 1, 1), /* Sao Tome and Principe */
+	COUNTRY_CHPLAN_ENT("SV", 0x76, 0x00, DEF    , 1, 1), /* El Salvador */
+	COUNTRY_CHPLAN_ENT("SX", 0x76, 0x00, DEF    , 1, 1), /* Sint Marteen */
+	COUNTRY_CHPLAN_ENT("SZ", 0x5E, 0x00, DEF    , 1, 1), /* Swaziland */
+	COUNTRY_CHPLAN_ENT("TC", 0x3A, 0x00, DEF    , 1, 1), /* Turks and Caicos Islands (UK) */
+	COUNTRY_CHPLAN_ENT("TD", 0x3A, 0x00, DEF    , 1, 1), /* Chad */
+	COUNTRY_CHPLAN_ENT("TF", 0x3A, 0x00, DEF    , 1, 1), /* French Southern and Antarctic Lands (FR Southern Territories) */
+	COUNTRY_CHPLAN_ENT("TG", 0x5E, 0x00, DEF    , 1, 1), /* Togo */
+	COUNTRY_CHPLAN_ENT("TH", 0x5E, 0x00, DEF    , 1, 1), /* Thailand */
+	COUNTRY_CHPLAN_ENT("TJ", 0x5E, 0x00, DEF    , 1, 1), /* Tajikistan */
+	COUNTRY_CHPLAN_ENT("TK", 0x03, 0x00, DEF    , 1, 1), /* Tokelau */
+	COUNTRY_CHPLAN_ENT("TM", 0x3A, 0x00, DEF    , 1, 1), /* Turkmenistan */
+	COUNTRY_CHPLAN_ENT("TN", 0x04, 0x00, DEF    , 1, 1), /* Tunisia */
+	COUNTRY_CHPLAN_ENT("TO", 0x3A, 0x00, DEF    , 1, 1), /* Tonga */
+	COUNTRY_CHPLAN_ENT("TR", 0x5E, 0x00, DEF    , 1, 1), /* Turkey, Northern Cyprus */
+	COUNTRY_CHPLAN_ENT("TT", 0x76, 0x00, DEF    , 1, 1), /* Trinidad & Tobago */
+	COUNTRY_CHPLAN_ENT("TV", 0x21, 0x00, DEF    , 0, 0), /* Tuvalu */
+	COUNTRY_CHPLAN_ENT("TW", 0x76, 0x00, DEF    , 1, 1), /* Taiwan */
+	COUNTRY_CHPLAN_ENT("TZ", 0x5E, 0x00, DEF    , 1, 1), /* Tanzania */
+	COUNTRY_CHPLAN_ENT("UA", 0x5E, 0x00, UKRAINE, 1, 1), /* Ukraine */
+	COUNTRY_CHPLAN_ENT("UG", 0x3A, 0x00, DEF    , 1, 1), /* Uganda */
+	COUNTRY_CHPLAN_ENT("US", 0x76, 0x7F, DEF    , 1, 1), /* United States of America (USA) */
+	COUNTRY_CHPLAN_ENT("UY", 0x30, 0x00, DEF    , 1, 1), /* Uruguay */
+	COUNTRY_CHPLAN_ENT("UZ", 0x3C, 0x00, DEF    , 1, 1), /* Uzbekistan */
+	COUNTRY_CHPLAN_ENT("VA", 0x3A, 0x00, DEF    , 1, 1), /* Holy See (Vatican City) */
+	COUNTRY_CHPLAN_ENT("VC", 0x76, 0x00, DEF    , 1, 1), /* Saint Vincent and the Grenadines */
+	COUNTRY_CHPLAN_ENT("VE", 0x30, 0x00, DEF    , 1, 1), /* Venezuela */
+	COUNTRY_CHPLAN_ENT("VG", 0x76, 0x00, DEF    , 1, 1), /* British Virgin Islands (UK) */
+	COUNTRY_CHPLAN_ENT("VI", 0x76, 0x00, DEF    , 1, 1), /* United States Virgin Islands (USA) */
+	COUNTRY_CHPLAN_ENT("VN", 0x5E, 0x00, DEF    , 1, 1), /* Vietnam */
+	COUNTRY_CHPLAN_ENT("VU", 0x26, 0x00, DEF    , 1, 1), /* Vanuatu */
+	COUNTRY_CHPLAN_ENT("WF", 0x3A, 0x00, DEF    , 1, 1), /* Wallis and Futuna (France) */
+	COUNTRY_CHPLAN_ENT("WS", 0x76, 0x00, DEF    , 1, 1), /* Samoa */
+	COUNTRY_CHPLAN_ENT("XK", 0x3A, 0x00, DEF    , 1, 1), /* Kosovo */
+	COUNTRY_CHPLAN_ENT("YE", 0x3A, 0x00, DEF    , 1, 1), /* Yemen */
+	COUNTRY_CHPLAN_ENT("YT", 0x5E, 0x00, DEF    , 1, 1), /* Mayotte (France) */
+	COUNTRY_CHPLAN_ENT("ZA", 0x5E, 0x00, DEF    , 1, 1), /* South Africa */
+	COUNTRY_CHPLAN_ENT("ZM", 0x5E, 0x00, DEF    , 1, 1), /* Zambia */
+	COUNTRY_CHPLAN_ENT("ZW", 0x5E, 0x00, DEF    , 1, 1), /* Zimbabwe */
 };
-#endif /* CONFIG_CUSTOMIZED_COUNTRY_CHPLAN_MAP or RTW_DEF_MODULE_REGULATORY_CERT or newest */
+#endif /* CONFIG_CUSTOMIZED_COUNTRY_CHPLAN_MAP or RTW_DEF_MODULE_REGULATORY_CERT or newest */
+
+/*
+* rtw_get_chplan_worldwide -
+* @ent: the buf to copy country_chplan entry content
+*/
+void rtw_get_chplan_worldwide(struct country_chplan *ent)
+{
+	_rtw_memcpy(ent, &world_wide_chplan, sizeof(*ent));
+}
 
 /*
 * rtw_get_chplan_from_country -
 * @country_code: string of country code
+* @ent: the buf to copy country_chplan entry content
 *
-* Return pointer of struct country_chplan entry or NULL when unsupported country_code is given
+* Return _TRUE or _FALSE when unsupported country_code is given
 */
-const struct country_chplan *rtw_get_chplan_from_country(const char *country_code)
+bool rtw_get_chplan_from_country(const char *country_code, struct country_chplan *ent)
 {
-	const struct country_chplan *ent = NULL;
 	const struct country_chplan *map = NULL;
 	u16 map_sz = 0;
 	char code[2];
@@ -2384,8 +2972,8 @@ const struct country_chplan *rtw_get_chplan_from_country(const char *country_cod
 #ifdef CONFIG_CUSTOMIZED_COUNTRY_CHPLAN_MAP
 	map = CUSTOMIZED_country_chplan_map;
 	map_sz = sizeof(CUSTOMIZED_country_chplan_map) / sizeof(struct country_chplan);
-#elif RTW_DEF_MODULE_REGULATORY_CERT
-	map_sz = rtw_def_module_country_chplan_map(&map);
+#elif RTW_DEF_MODULE_REGULATORY_CERT
+	map_sz = rtw_def_module_country_chplan_map(&map);
 #else
 	map = country_chplan_map;
 	map_sz = sizeof(country_chplan_map) / sizeof(struct country_chplan);
@@ -2393,32 +2981,278 @@ const struct country_chplan *rtw_get_chplan_from_country(const char *country_cod
 
 	for (i = 0; i < map_sz; i++) {
 		if (strncmp(code, map[i].alpha2, 2) == 0) {
-			ent = &map[i];
-			break;
+			if (ent)
+				_rtw_memcpy(ent, &map[i], sizeof(*ent));
+			return _TRUE;
+		}
+	}
+
+	return _FALSE;
+}
+
+void rtw_chplan_ioctl_input_mapping(u16 *chplan, u16 *chplan_6g)
+{
+	if (chplan) {
+		if (*chplan == RTW_CHPLAN_IOCTL_UNSPECIFIED)
+			*chplan = RTW_CHPLAN_UNSPECIFIED;
+		else if (*chplan == RTW_CHPLAN_IOCTL_NULL)
+			*chplan = RTW_CHPLAN_NULL;
+	}
+
+	if (chplan_6g) {
+		if (*chplan_6g == RTW_CHPLAN_IOCTL_UNSPECIFIED)
+			*chplan_6g = RTW_CHPLAN_6G_UNSPECIFIED;
+		else if (*chplan_6g == RTW_CHPLAN_IOCTL_NULL)
+			*chplan_6g = RTW_CHPLAN_6G_NULL;
+	}
+}
+
+bool rtw_chplan_ids_is_world_wide(u8 chplan, u8 chplan_6g)
+{
+	return !(chplan == RTW_CHPLAN_NULL
+				#if CONFIG_IEEE80211_BAND_6GHZ
+				&& chplan_6g == RTW_CHPLAN_6G_NULL
+				#endif
+			)
+			&& (chplan == RTW_CHPLAN_WORLDWIDE || chplan == RTW_CHPLAN_NULL)
+			#if CONFIG_IEEE80211_BAND_6GHZ
+			&& (chplan_6g == RTW_CHPLAN_6G_WORLDWIDE || chplan_6g == RTW_CHPLAN_6G_NULL)
+			#endif
+			;
+}
+
+/*
+ * Check if the @param ch, bw, offset is valid for the given @param ent
+ * @ch_set: the given channel set
+ * @ch: the given channel number
+ * @bw: the given bandwidth
+ * @offset: the given channel offset
+ *
+ * return valid (1) or not (0)
+ */
+u8 rtw_country_chplan_is_chbw_valid(struct country_chplan *ent, BAND_TYPE band, u8 ch, u8 bw, u8 offset
+	, bool allow_primary_passive, bool allow_passive, struct registry_priv *regsty)
+{
+	u8 chplan_6g = RTW_CHPLAN_6G_NULL;
+	u8 valid = 0;
+
+	if (bw >= CHANNEL_WIDTH_80 && !COUNTRY_CHPLAN_EN_11AC(ent))
+		goto exit;
+
+	#if CONFIG_IEEE80211_BAND_6GHZ
+	chplan_6g = ent->chplan_6g;
+	#endif
+
+	valid = rtw_chplan_is_chbw_valid(ent->chplan, chplan_6g, band, ch, bw, offset
+		, allow_primary_passive, allow_passive, regsty);
+
+exit:
+	return valid;
+}
+
+static void rtw_country_chplan_get_edcca_modes(const struct country_chplan *ent, u8 modes[])
+{
+	modes[BAND_ON_2_4G] =
+		ent->edcca_mode_2g_override != RTW_EDCCA_DEF ? ent->edcca_mode_2g_override :
+		rtw_regd_to_edcca_mode(rtw_chplan_get_default_regd_2g(ent->chplan));
+	#if CONFIG_IEEE80211_BAND_5GHZ
+	modes[BAND_ON_5G] =
+		ent->edcca_mode_5g_override != RTW_EDCCA_DEF ? ent->edcca_mode_5g_override :
+		rtw_regd_to_edcca_mode(rtw_chplan_get_default_regd_5g(ent->chplan));
+	#endif
+	#if CONFIG_IEEE80211_BAND_6GHZ
+	modes[BAND_ON_6G] =
+		ent->edcca_mode_6g_override != RTW_EDCCA_DEF ? ent->edcca_mode_6g_override :
+		rtw_regd_to_edcca_mode(rtw_chplan_get_default_regd_6g(ent->chplan_6g));
+	#endif
+}
+
+static void rtw_country_chplan_get_txpwr_lmts(const struct country_chplan *ent, u8 txpwr_lmt[])
+{
+	txpwr_lmt[BAND_ON_2_4G] =
+		ent->txpwr_lmt_override != TXPWR_LMT_DEF ? ent->txpwr_lmt_override :
+		rtw_regd_to_txpwr_lmt(rtw_chplan_get_default_regd_2g(ent->chplan));
+	#if CONFIG_IEEE80211_BAND_5GHZ
+	txpwr_lmt[BAND_ON_5G] =
+		ent->txpwr_lmt_override != TXPWR_LMT_DEF ? ent->txpwr_lmt_override :
+		rtw_regd_to_txpwr_lmt(rtw_chplan_get_default_regd_5g(ent->chplan));
+	#endif
+	#if CONFIG_IEEE80211_BAND_6GHZ
+	txpwr_lmt[BAND_ON_6G] =
+		ent->txpwr_lmt_override != TXPWR_LMT_DEF ? ent->txpwr_lmt_override :
+		rtw_regd_to_txpwr_lmt(rtw_chplan_get_default_regd_6g(ent->chplan_6g));
+	#endif
+}
+
+#ifdef CONFIG_80211D
+const char *const _cis_status_str[] = {
+	[COUNTRY_IE_SLAVE_NOCOUNTRY]	= "NOCOUNTRY",
+	[COUNTRY_IE_SLAVE_UNKNOWN]		= "UNKNOWN",
+	[COUNTRY_IE_SLAVE_OPCH_NOEXIST]	= "OPCH_NOEXIST",
+	[COUNTRY_IE_SLAVE_APPLICABLE]	= "APPLICABLE",
+	[COUNTRY_IE_SLAVE_STATUS_NUM]	= "INVALID",
+};
+
+void dump_country_ie_slave_records(void *sel, struct rf_ctl_t *rfctl, bool skip_noset)
+{
+	int i;
+
+	RTW_PRINT_SEL(sel, "   %-6s %-4s %-4s %s\n", "alpha2", "band", "opch", "status");
+	for (i = 0; i < CONFIG_IFACE_NUMBER; i++) {
+		if (skip_noset && strncmp(rfctl->cisr[i].alpha2, "\x00\x00", 2) == 0)
+			continue;
+		RTW_PRINT_SEL(sel, "%c%d     "ALPHA2_FMT" %4s %4u %s\n"
+			, i == rfctl->effected_cisr_id ? '*' : ' ', i, ALPHA2_ARG(rfctl->cisr[i].alpha2)
+			, band_str(rfctl->cisr[i].band), rfctl->cisr[i].opch, cis_status_str(rfctl->cisr[i].status));
+	}
+}
+
+enum country_ie_slave_status rtw_get_chplan_from_recv_country_ie(_adapter *adapter
+		, BAND_TYPE band, u8 opch, const u8 *country_ie, struct country_chplan *ent
+		, struct country_ie_slave_record *cisr, const char *caller_msg)
+{
+	struct registry_priv *regsty = adapter_to_regsty(adapter);
+	const char *country_code = country_ie ? country_ie + 2 : NULL;
+	u8 chplan_6g = RTW_CHPLAN_6G_NULL;
+	enum country_ie_slave_status ret;
+
+	_rtw_memset(ent, 0, sizeof(*ent));
+
+	if (!country_code || strncmp(country_code, "XX", 2) == 0) {
+		if (caller_msg && country_code)
+			RTW_INFO("%s("ADPT_FMT") noncountry \"XX\"\n", caller_msg, ADPT_ARG(adapter));
+		ret = COUNTRY_IE_SLAVE_NOCOUNTRY;
+		goto exit;
+	}
+
+	if (!rtw_get_chplan_from_country(country_code, ent)) {
+		if (caller_msg) {
+			if (is_alpha(country_code[0]) == _FALSE || is_alpha(country_code[1]) == _FALSE) {
+				RTW_INFO("%s("ADPT_FMT") country_code is not alpha2, use world wide instead\n"
+					, caller_msg, ADPT_ARG(adapter));
+			} else {
+				RTW_INFO("%s("ADPT_FMT") unsupported country_code:\"%c%c\", use world wide\n"
+					, caller_msg, ADPT_ARG(adapter), country_code[0], country_code[1]);
+			}
+		}
+		rtw_get_chplan_worldwide(ent);
+		ret = COUNTRY_IE_SLAVE_UNKNOWN;
+		goto exit;
+	}
+
+	#if CONFIG_IEEE80211_BAND_6GHZ
+	chplan_6g = ent->chplan_6g;
+	#endif
+
+	if (!rtw_chplan_is_chbw_valid(ent->chplan, chplan_6g, band, opch
+			, CHANNEL_WIDTH_20, HAL_PRIME_CHNL_OFFSET_DONT_CARE, 1, 1, regsty)
+	) {
+		u8 edcca_modes[BAND_MAX];
+
+		if (caller_msg) {
+			RTW_INFO("%s("ADPT_FMT") \"%c%c\" no band:%s ch:%u, use world wide with ori edcca modes\n"
+				, caller_msg, ADPT_ARG(adapter), country_code[0], country_code[1], band_str(band), opch);
 		}
+		rtw_country_chplan_get_edcca_modes(ent, edcca_modes);
+		rtw_get_chplan_worldwide(ent);
+		ent->edcca_mode_2g_override = edcca_modes[BAND_ON_2_4G];
+		#if CONFIG_IEEE80211_BAND_5GHZ
+		ent->edcca_mode_5g_override = edcca_modes[BAND_ON_5G];
+		#endif
+		#if CONFIG_IEEE80211_BAND_6GHZ
+		ent->edcca_mode_6g_override = edcca_modes[BAND_ON_6G];
+		#endif
+		ret = COUNTRY_IE_SLAVE_OPCH_NOEXIST;
+		goto exit;
+	}
+
+	if (caller_msg) {
+		RTW_INFO("%s("ADPT_FMT") country_code:\"%c%c\" is applicapble\n"
+			, caller_msg, ADPT_ARG(adapter), country_code[0], country_code[1]);
+	}
+	ret = COUNTRY_IE_SLAVE_APPLICABLE;
+
+exit:
+	if (cisr) {
+		_rtw_memcpy(cisr->alpha2, country_code ? country_code : "\x00\x00", 2);
+		cisr->band = band;
+		cisr->opch = opch;
+		cisr->status = ret;
 	}
 
-	return ent;
+	return ret;
+}
+
+enum country_ie_slave_status rtw_get_chplan_from_cisrs(struct rf_ctl_t *rfctl
+	, struct country_chplan *ent, const char *caller_msg)
+{
+	struct dvobj_priv *dvobj = rfctl_to_dvobj(rfctl);
+	_adapter *adapter = dvobj->padapters[rfctl->effected_cisr_id];
+	struct country_ie_slave_record *cisr = &rfctl->cisr[rfctl->effected_cisr_id];
+	const u8 country_ie[4] = {WLAN_EID_COUNTRY, 2, cisr->alpha2[0], cisr->alpha2[1]};
+	enum country_ie_slave_status status;
+
+	status = rtw_get_chplan_from_recv_country_ie(adapter, cisr->band, cisr->opch, country_ie, ent, NULL, caller_msg);
+	rtw_warn_on(cisr->status != status);
+
+	return status;
 }
+#endif /* CONFIG_80211D */
 
-void dump_country_chplan(void *sel, const struct country_chplan *ent)
+void dump_country_chplan(void *sel, const struct country_chplan *ent, bool regd_info)
 {
-	char buf[16];
-
-	if (ent->chplan == RTW_CHPLAN_UNSPECIFIED)
-		sprintf(buf, "NA");
-	else
-		sprintf(buf, "0x%02X", ent->chplan);
-
-	RTW_PRINT_SEL(sel, "\"%c%c\", %s%s\n"
-		, ent->alpha2[0], ent->alpha2[1], buf
-		, COUNTRY_CHPLAN_EN_11AC(ent) ? " ac" : ""
-	);
+	char buf[16];
+	char *pos = buf;
+
+	if (ent->chplan == RTW_CHPLAN_UNSPECIFIED)
+		pos += sprintf(pos, "NA");
+	else
+		pos += sprintf(pos, "0x%02X", ent->chplan);
+
+#if CONFIG_IEEE80211_BAND_6GHZ
+	if (ent->chplan_6g == RTW_CHPLAN_6G_UNSPECIFIED)
+		pos += sprintf(pos, " NA");
+	else
+		pos += sprintf(pos, " 0x%02X", ent->chplan_6g);
+#endif
+
+	RTW_PRINT_SEL(sel, "\"%c%c\", %s"
+		, ent->alpha2[0], ent->alpha2[1], buf);
+
+	if (regd_info) {
+		u8 edcca_modes[BAND_MAX];
+		u8 txpwr_lmts[BAND_MAX];
+
+		rtw_country_chplan_get_edcca_modes(ent, edcca_modes);
+		_RTW_PRINT_SEL(sel, " {%-6s", rtw_edcca_mode_str(edcca_modes[BAND_ON_2_4G]));
+		#if CONFIG_IEEE80211_BAND_5GHZ
+		_RTW_PRINT_SEL(sel, " %-6s", rtw_edcca_mode_str(edcca_modes[BAND_ON_5G]));
+		#endif
+		#if CONFIG_IEEE80211_BAND_6GHZ
+		_RTW_PRINT_SEL(sel, " %-6s", rtw_edcca_mode_str(edcca_modes[BAND_ON_6G]));
+		#endif
+		_RTW_PRINT_SEL(sel, "}");
+
+		rtw_country_chplan_get_txpwr_lmts(ent, txpwr_lmts);
+		_RTW_PRINT_SEL(sel, " {%-7s", txpwr_lmt_str(txpwr_lmts[BAND_ON_2_4G]));
+		#if CONFIG_IEEE80211_BAND_5GHZ
+		_RTW_PRINT_SEL(sel, " %-7s", txpwr_lmt_str(txpwr_lmts[BAND_ON_5G]));
+		#endif
+		#if CONFIG_IEEE80211_BAND_6GHZ
+		_RTW_PRINT_SEL(sel, " %-7s", txpwr_lmt_str(txpwr_lmts[BAND_ON_6G]));
+		#endif
+		_RTW_PRINT_SEL(sel, "}");
+	}
+
+	_RTW_PRINT_SEL(sel, " %s", COUNTRY_CHPLAN_EN_11AX(ent) ? "ax" : "  ");
+	_RTW_PRINT_SEL(sel, " %s", COUNTRY_CHPLAN_EN_11AC(ent) ? "ac" : "  ");
+
+	_RTW_PRINT_SEL(sel, "\n");
 }
 
-void dump_country_chplan_map(void *sel)
+void dump_country_chplan_map(void *sel, bool regd_info)
 {
-	const struct country_chplan *ent;
+	struct country_chplan ent;
 	u8 code[2];
 
 #if RTW_DEF_MODULE_REGULATORY_CERT
@@ -2428,15 +3262,33 @@ void dump_country_chplan_map(void *sel)
 	RTW_PRINT_SEL(sel, "CONFIG_CUSTOMIZED_COUNTRY_CHPLAN_MAP\n");
 #endif
 
+	rtw_get_chplan_worldwide(&ent);
+	dump_country_chplan(sel, &ent, regd_info);
+
 	for (code[0] = 'A'; code[0] <= 'Z'; code[0]++) {
 		for (code[1] = 'A'; code[1] <= 'Z'; code[1]++) {
-			ent = rtw_get_chplan_from_country(code);
-			if (!ent)
+			if (!rtw_get_chplan_from_country(code, &ent))
 				continue;
 
-			dump_country_chplan(sel, ent);
+			dump_country_chplan(sel, &ent, regd_info);
+		}
+	}
+}
+
+void dump_country_list(void *sel)
+{
+	u8 code[2];
+
+	RTW_PRINT_SEL(sel, "%s ", WORLDWIDE_ALPHA2);
+
+	for (code[0] = 'A'; code[0] <= 'Z'; code[0]++) {
+		for (code[1] = 'A'; code[1] <= 'Z'; code[1]++) {
+			if (!rtw_get_chplan_from_country(code, NULL))
+				continue;
+			_RTW_PRINT_SEL(sel, "%c%c ", code[0], code[1]);
 		}
 	}
+	_RTW_PRINT_SEL(sel, "\n");
 }
 
 void dump_chplan_id_list(void *sel)
@@ -2444,74 +3296,211 @@ void dump_chplan_id_list(void *sel)
 	u8 first = 1;
 	int i;
 
-	for (i = 0; i < RTW_ChannelPlanMap_size; i++) {
+	for (i = 0; i < RTW_ChannelPlanMap_size; i++) {
+		if (!rtw_is_channel_plan_valid(i))
+			continue;
+
+		if (first) {
+			RTW_PRINT_SEL(sel, "0x%02X ", i);
+			first = 0;
+		} else
+			_RTW_PRINT_SEL(sel, "0x%02X ", i);
+	}
+	if (first == 0)
+		_RTW_PRINT_SEL(sel, "\n");
+}
+
+void dump_chplan_country_list(void *sel)
+{
+	int i;
+
+	for (i = 0; i < RTW_ChannelPlanMap_size; i++) {
+		struct country_chplan ent;
+		u8 code[2];
+		u8 first;
+
 		if (!rtw_is_channel_plan_valid(i))
 			continue;
 
+		first = 1;
+		for (code[0] = 'A'; code[0] <= 'Z'; code[0]++) {
+			for (code[1] = 'A'; code[1] <= 'Z'; code[1]++) {
+				if (!rtw_get_chplan_from_country(code, &ent) || ent.chplan != i)
+					continue;
+
+				if (first) {
+					RTW_PRINT_SEL(sel, "0x%02X %c%c ", i, code[0], code[1]);
+					first = 0;
+				} else
+					_RTW_PRINT_SEL(sel, "%c%c ", code[0], code[1]);
+			}
+		}
+		if (first == 0)
+			_RTW_PRINT_SEL(sel, "\n");
+	}
+}
+
+#if CONFIG_IEEE80211_BAND_6GHZ
+void dump_chplan_6g_id_list(void *sel)
+{
+	u8 first = 1;
+	int i;
+
+	for (i = 0; i < rtw_chplan_6g_map_size; i++) {
+		if (!rtw_is_channel_plan_6g_valid(i))
+			continue;
+
 		if (first) {
 			RTW_PRINT_SEL(sel, "0x%02X ", i);
 			first = 0;
 		} else
 			_RTW_PRINT_SEL(sel, "0x%02X ", i);
 	}
+	if (first == 0)
+		_RTW_PRINT_SEL(sel, "\n");
+}
+
+void dump_chplan_6g_country_list(void *sel)
+{
+	int i;
+
+	for (i = 0; i < rtw_chplan_6g_map_size; i++) {
+		struct country_chplan ent;
+		u8 code[2];
+		u8 first;
+
+		if (!rtw_is_channel_plan_6g_valid(i))
+			continue;
+
+		first = 1;
+		for (code[0] = 'A'; code[0] <= 'Z'; code[0]++) {
+			for (code[1] = 'A'; code[1] <= 'Z'; code[1]++) {
+				if (!rtw_get_chplan_from_country(code, &ent) || ent.chplan_6g != i)
+					continue;
+
+				if (first) {
+					RTW_PRINT_SEL(sel, "0x%02X %c%c ", i, code[0], code[1]);
+					first = 0;
+				} else
+					_RTW_PRINT_SEL(sel, "%c%c ", code[0], code[1]);
+			}
+		}
+		if (first == 0)
+			_RTW_PRINT_SEL(sel, "\n");
+	}
 }
+#endif /* CONFIG_IEEE80211_BAND_6GHZ */
 
-#ifdef CONFIG_RTW_DEBUG
+#ifdef CONFIG_RTW_DEBUG
 void dump_chplan_test(void *sel)
 {
 	int i, j;
 
-	/* check redundent */
-	for (i = 0; i < RTW_CHD_2G_MAX; i++) {
-		for (j = 0; j < i; j++) {
-			if (CH_LIST_LEN(rtw_channel_def_2g[i]) == CH_LIST_LEN(rtw_channel_def_2g[j])
-				&& _rtw_memcmp(&CH_LIST_CH(rtw_channel_def_2g[i], 0), &CH_LIST_CH(rtw_channel_def_2g[j], 0), CH_LIST_LEN(rtw_channel_def_2g[i]) + 1) == _TRUE)
-				RTW_PRINT_SEL(sel, "2G chd:%u and %u is the same\n", i, j);
-		}
-	}
-
-	/* check invalid channel */
-	for (i = 0; i < RTW_CHD_2G_MAX; i++) {
-		for (j = 0; j < CH_LIST_LEN(rtw_channel_def_2g[i]); j++) {
-			if (rtw_ch2freq(CH_LIST_CH(rtw_channel_def_2g[i], j)) == 0)
-				RTW_PRINT_SEL(sel, "2G invalid ch:%u at (%d,%d)\n", CH_LIST_CH(rtw_channel_def_2g[i], j), i, j);
+	/* check 2G CHD redundent */
+	for (i = RTW_CHD_2G_00; i < RTW_CHD_2G_MAX; i++) {
+		for (j = RTW_CHD_2G_00; j < i; j++) {
+			if (CH_LIST_LEN(rtw_channel_def_2g[i]) == CH_LIST_LEN(rtw_channel_def_2g[j])
+				&& _rtw_memcmp(&CH_LIST_CH(rtw_channel_def_2g[i], 0), &CH_LIST_CH(rtw_channel_def_2g[j], 0), CH_LIST_LEN(rtw_channel_def_2g[i]) + 1) == _TRUE)
+				RTW_PRINT_SEL(sel, "2G chd:%u and %u is the same\n", i, j);
+		}
+	}
+
+	/* check 2G CHD invalid channel */
+	for (i = RTW_CHD_2G_00; i < RTW_CHD_2G_MAX; i++) {
+		for (j = 0; j < CH_LIST_LEN(rtw_channel_def_2g[i]); j++) {
+			if (rtw_ch2freq(CH_LIST_CH(rtw_channel_def_2g[i], j)) == 0)
+				RTW_PRINT_SEL(sel, "2G invalid ch:%u at (%d,%d)\n", CH_LIST_CH(rtw_channel_def_2g[i], j), i, j);
 		}
 	}
 
 #if CONFIG_IEEE80211_BAND_5GHZ
-	/* check redundent */
-	for (i = 0; i < RTW_CHD_5G_MAX; i++) {
-		for (j = 0; j < i; j++) {
-			if (CH_LIST_LEN(rtw_channel_def_5g[i]) == CH_LIST_LEN(rtw_channel_def_5g[j])
-				&& _rtw_memcmp(&CH_LIST_CH(rtw_channel_def_5g[i], 0), &CH_LIST_CH(rtw_channel_def_5g[j], 0), CH_LIST_LEN(rtw_channel_def_5g[i]) + 1) == _TRUE)
-				RTW_PRINT_SEL(sel, "5G chd:%u and %u is the same\n", i, j);
-		}
-	}
-
-	/* check invalid channel */
-	for (i = 0; i < RTW_CHD_5G_MAX; i++) {
-		for (j = 0; j < CH_LIST_LEN(rtw_channel_def_5g[i]); j++) {
-			if (rtw_ch2freq(CH_LIST_CH(rtw_channel_def_5g[i], j)) == 0)
-				RTW_PRINT_SEL(sel, "5G invalid ch:%u at (%d,%d)\n", CH_LIST_CH(rtw_channel_def_5g[i], j), i, j);
+	/* check 5G CHD redundent */
+	for (i = RTW_CHD_5G_00; i < RTW_CHD_5G_MAX; i++) {
+		for (j = RTW_CHD_5G_00; j < i; j++) {
+			if (CH_LIST_LEN(rtw_channel_def_5g[i]) == CH_LIST_LEN(rtw_channel_def_5g[j])
+				&& _rtw_memcmp(&CH_LIST_CH(rtw_channel_def_5g[i], 0), &CH_LIST_CH(rtw_channel_def_5g[j], 0), CH_LIST_LEN(rtw_channel_def_5g[i]) + 1) == _TRUE)
+				RTW_PRINT_SEL(sel, "5G chd:%u and %u is the same\n", i, j);
+		}
+	}
+
+	/* check 5G CHD invalid channel */
+	for (i = RTW_CHD_5G_00; i < RTW_CHD_5G_MAX; i++) {
+		for (j = 0; j < CH_LIST_LEN(rtw_channel_def_5g[i]); j++) {
+			if (rtw_ch2freq(CH_LIST_CH(rtw_channel_def_5g[i], j)) == 0)
+				RTW_PRINT_SEL(sel, "5G invalid ch:%u at (%d,%d)\n", CH_LIST_CH(rtw_channel_def_5g[i], j), i, j);
+		}
+	}
+#endif
+
+#if CONFIG_IEEE80211_BAND_6GHZ
+	/* check 6G CHD redundent */
+	for (i = RTW_CHD_6G_00; i < RTW_CHD_6G_MAX; i++) {
+		for (j = RTW_CHD_6G_00; j < i; j++) {
+			if (CH_LIST_LEN(rtw_channel_def_6g[i]) == CH_LIST_LEN(rtw_channel_def_6g[j])
+				&& _rtw_memcmp(&CH_LIST_CH(rtw_channel_def_6g[i], 0), &CH_LIST_CH(rtw_channel_def_6g[j], 0), CH_LIST_LEN(rtw_channel_def_6g[i]) + 1) == _TRUE)
+				RTW_PRINT_SEL(sel, "6G chd:%u and %u is the same\n", i, j);
+		}
+	}
+
+	/* check 6G CHD invalid channel */
+	for (i = RTW_CHD_6G_00; i < RTW_CHD_6G_MAX; i++) {
+		for (j = 0; j < CH_LIST_LEN(rtw_channel_def_6g[i]); j++) {
+			if (rtw_6gch2freq(CH_LIST_CH(rtw_channel_def_6g[i], j)) == 0)
+				RTW_PRINT_SEL(sel, "6G invalid ch:%u at (%d,%d)\n", CH_LIST_CH(rtw_channel_def_6g[i], j), i, j);
+		}
+	}
+#endif
+
+	/* check chplan 2G_5G redundent */
+	for (i = 0; i < RTW_ChannelPlanMap_size; i++) {
+		if (!rtw_is_channel_plan_valid(i))
+			continue;
+		for (j = 0; j < i; j++) {
+			if (!rtw_is_channel_plan_valid(j))
+				continue;
+			if (_rtw_memcmp(&RTW_ChannelPlanMap[i], &RTW_ChannelPlanMap[j], sizeof(RTW_ChannelPlanMap[i])) == _TRUE)
+				RTW_PRINT_SEL(sel, "channel plan 0x%02x and 0x%02x is the same\n", i, j);
+		}
+	}
+
+#if CONFIG_IEEE80211_BAND_6GHZ
+	/* check chplan 6G redundent */
+	for (i = 0; i < rtw_chplan_6g_map_size; i++) {
+		if (!rtw_is_channel_plan_6g_valid(i))
+			continue;
+		for (j = 0; j < i; j++) {
+			if (!rtw_is_channel_plan_6g_valid(j))
+				continue;
+			if (_rtw_memcmp(&rtw_chplan_6g_map[i], &rtw_chplan_6g_map[j], sizeof(rtw_chplan_6g_map[i])) == _TRUE)
+				RTW_PRINT_SEL(sel, "channel plan 6g 0x%02x and 0x%02x is the same\n", i, j);
 		}
 	}
 #endif
-
-	/* check redundent */
-	for (i = 0; i < RTW_ChannelPlanMap_size; i++) {
-		if (!rtw_is_channel_plan_valid(i))
-			continue;
-		for (j = 0; j < i; j++) {
-			if (!rtw_is_channel_plan_valid(j))
-				continue;
-			if (_rtw_memcmp(&RTW_ChannelPlanMap[i], &RTW_ChannelPlanMap[j], sizeof(RTW_ChannelPlanMap[i])) == _TRUE)
-				RTW_PRINT_SEL(sel, "channel plan 0x%02x and 0x%02x is the same\n", i, j);
-		}
-	}
+
+
+	/* check country invalid chplan/chplan_6g */
+{
+	struct country_chplan ent;
+	u8 code[2];
+
+	for (code[0] = 'A'; code[0] <= 'Z'; code[0]++) {
+		for (code[1] = 'A'; code[1] <= 'Z'; code[1]++) {
+			if (!rtw_get_chplan_from_country(code, &ent))
+				continue;
+			if (!rtw_is_channel_plan_valid(ent.chplan))
+				RTW_PRINT_SEL(sel, "country \"%c%c\" has invalid chplan:0x%02X\n", code[0], code[1], ent.chplan);
+			#if CONFIG_IEEE80211_BAND_6GHZ
+			if (!rtw_is_channel_plan_6g_valid(ent.chplan_6g))
+				RTW_PRINT_SEL(sel, "country \"%c%c\" has invalid chplan_6g:0x%02X\n", code[0], code[1], ent.chplan_6g);
+			#endif
+		}
+	}
+}
+
 }
-#endif /* CONFIG_RTW_DEBUG */
+#endif /* CONFIG_RTW_DEBUG */
 
 void dump_chplan_ver(void *sel)
 {
-	RTW_PRINT_SEL(sel, "%s%s-%s\n", RTW_DOMAIN_MAP_VER, RTW_DOMAIN_MAP_M_VER, RTW_COUNTRY_MAP_VER);
+	RTW_PRINT_SEL(sel, "%s%s-%s\n", RTW_DOMAIN_MAP_VER, RTW_DOMAIN_MAP_M_VER, RTW_COUNTRY_MAP_VER);
 }
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/core/rtw_chplan.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/core/rtw_chplan.h
index f0e7dd6ca8dd..dc5e2c46f232 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/core/rtw_chplan.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/core/rtw_chplan.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2018 Realtek Corporation.
@@ -16,33 +15,58 @@
 #ifndef __RTW_CHPLAN_H__
 #define __RTW_CHPLAN_H__
 
-#define RTW_CHPLAN_UNSPECIFIED 0xFF
+#define RTW_CHPLAN_IOCTL_NULL			0xFFFE /* special value by ioctl: null(empty) chplan */
+#define RTW_CHPLAN_IOCTL_UNSPECIFIED	0xFFFF /* special value by ioctl: no change (keep original) */
 
-u8 rtw_chplan_get_default_regd(u8 id);
-bool rtw_chplan_is_empty(u8 id);
-bool rtw_is_channel_plan_valid(u8 id);
-bool rtw_regsty_is_excl_chs(struct registry_priv *regsty, u8 ch);
+#define RTW_CHPLAN_NULL			0x1A
+#define RTW_CHPLAN_WORLDWIDE	0x7F
+#define RTW_CHPLAN_UNSPECIFIED	0xFF
+#define RTW_CHPLAN_6G_NULL			0x00
+#define RTW_CHPLAN_6G_WORLDWIDE		0x7F
+#define RTW_CHPLAN_6G_UNSPECIFIED	0xFF
 
-enum regd_src_t {
-	REGD_SRC_RTK_PRIV = 0, /* Regulatory settings from Realtek framework (Realtek defined or customized) */
-	REGD_SRC_OS = 1, /* Regulatory settings from OS */
-	REGD_SRC_NUM,
+u8 rtw_chplan_get_default_regd_2g(u8 id);
+u8 rtw_chplan_get_default_regd_5g(u8 id);
+bool rtw_is_channel_plan_valid(u8 id);
+bool rtw_regsty_is_excl_chs(struct registry_priv *regsty, u8 ch);
+
+#if CONFIG_IEEE80211_BAND_6GHZ
+u8 rtw_chplan_get_default_regd_6g(u8 id);
+bool rtw_is_channel_plan_6g_valid(u8 id);
+bool rtw_regsty_is_excl_chs_6g(struct registry_priv *regsty, u8 ch);
+#endif
+
+u8 rtw_chplan_is_chbw_valid(u8 id, u8 id_6g, BAND_TYPE band, u8 ch, u8 bw, u8 offset
+	, bool allow_primary_passive, bool allow_passive, struct registry_priv *regsty);
+
+enum regd_src_t {
+	REGD_SRC_RTK_PRIV = 0, /* Regulatory settings from Realtek framework (Realtek defined or customized) */
+	REGD_SRC_OS = 1, /* Regulatory settings from OS */
+	REGD_SRC_NUM,
 };
 
-#define regd_src_is_valid(src) ((src) < REGD_SRC_NUM)
-
-extern const char *_regd_src_str[];
-#define regd_src_str(src) ((src) >= REGD_SRC_NUM ? _regd_src_str[REGD_SRC_NUM] : _regd_src_str[src])
+#define regd_src_is_valid(src) ((src) < REGD_SRC_NUM)
+
+extern const char *_regd_src_str[];
+#define regd_src_str(src) ((src) >= REGD_SRC_NUM ? _regd_src_str[REGD_SRC_NUM] : _regd_src_str[src])
 
 struct _RT_CHANNEL_INFO;
-u8 init_channel_set(_adapter *adapter);
-bool rtw_chset_is_dfs_range(struct _RT_CHANNEL_INFO *chset, u32 hi, u32 lo);
-bool rtw_chset_is_dfs_ch(struct _RT_CHANNEL_INFO *chset, u8 ch);
-bool rtw_chset_is_dfs_chbw(struct _RT_CHANNEL_INFO *chset, u8 ch, u8 bw, u8 offset);
-u8 rtw_process_beacon_hint(_adapter *adapter, WLAN_BSSID_EX *bss);
+u8 init_channel_set(_adapter *adapter);
+bool rtw_chset_is_dfs_range(struct _RT_CHANNEL_INFO *chset, u32 hi, u32 lo);
+bool rtw_chset_is_dfs_ch(struct _RT_CHANNEL_INFO *chset, u8 ch);
+bool rtw_chset_is_dfs_chbw(struct _RT_CHANNEL_INFO *chset, u8 ch, u8 bw, u8 offset);
+bool rtw_chinfo_allow_beacon_hint(struct _RT_CHANNEL_INFO *chinfo);
+u8 rtw_process_beacon_hint(_adapter *adapter, WLAN_BSSID_EX *bss);
+
+#define ALPHA2_FMT "%c%c"
+#define ALPHA2_ARG(a2) ((is_alpha(a2[0]) || is_decimal(a2[0])) ? a2[0] : '-'), ((is_alpha(a2[1]) || is_decimal(a2[1])) ? a2[1] : '-')
+
+#define WORLDWIDE_ALPHA2	"00"
+#define UNSPEC_ALPHA2		"99"
 
-#define IS_ALPHA2_NO_SPECIFIED(_alpha2) ((*((u16 *)(_alpha2))) == 0xFFFF)
-#define IS_ALPHA2_WORLDWIDE(_alpha2) (strncmp(_alpha2, "00", 2) == 0)
+#define IS_ALPHA2_WORLDWIDE(_alpha2)	(strncmp(_alpha2, WORLDWIDE_ALPHA2, 2) == 0)
+#define IS_ALPHA2_UNSPEC(_alpha2)		(strncmp(_alpha2, UNSPEC_ALPHA2, 2) == 0)
+#define SET_UNSPEC_ALPHA2(_alpha2)		do { _rtw_memcpy(_alpha2, UNSPEC_ALPHA2, 2); } while (0)
 
 #define RTW_MODULE_RTL8821AE_HMC_M2		BIT0	/* RTL8821AE(HMC + M.2) */
 #define RTW_MODULE_RTL8821AU			BIT1	/* RTL8821AU */
@@ -57,40 +81,191 @@ u8 rtw_process_beacon_hint(_adapter *adapter, WLAN_BSSID_EX *bss);
 #define RTW_MODULE_RTL8821CE			BIT10	/* RTL8821CE */
 #define RTW_MODULE_RTL8822CE			BIT11	/* RTL8822CE */
 
-enum rtw_dfs_regd {
-	RTW_DFS_REGD_NONE	= 0,
-	RTW_DFS_REGD_FCC	= 1,
-	RTW_DFS_REGD_MKK	= 2,
-	RTW_DFS_REGD_ETSI	= 3,
-	RTW_DFS_REGD_NUM,
-	RTW_DFS_REGD_AUTO	= 0xFF, /* follow channel plan */
-};
-
-extern const char *_rtw_dfs_regd_str[];
-#define rtw_dfs_regd_str(region) (((region) >= RTW_DFS_REGD_NUM) ? _rtw_dfs_regd_str[RTW_DFS_REGD_NONE] : _rtw_dfs_regd_str[(region)])
-
+enum rtw_regd_inr {
+	RTW_REGD_SET_BY_INIT = 0,
+	RTW_REGD_SET_BY_USER = 1,
+	RTW_REGD_SET_BY_COUNTRY_IE = 2,
+
+	/* below is not used for REGD_SRC_RTK_PRIV */
+	RTW_REGD_SET_BY_DRIVER = 3,
+	RTW_REGD_SET_BY_CORE = 4,
+
+	RTW_REGD_SET_BY_NUM,
+};
+
+extern const char *const _regd_inr_str[];
+#define regd_inr_str(inr) (((inr) >= RTW_REGD_SET_BY_NUM) ? _regd_inr_str[RTW_REGD_SET_BY_NUM] : _regd_inr_str[(inr)])
+
+enum rtw_regd {
+	RTW_REGD_NA = 0,
+	RTW_REGD_FCC = 1,
+	RTW_REGD_MKK = 2,
+	RTW_REGD_ETSI = 3,
+	RTW_REGD_IC = 4,
+	RTW_REGD_KCC = 5,
+	RTW_REGD_NCC = 6,
+	RTW_REGD_ACMA = 7,
+	RTW_REGD_CHILE = 8,
+	RTW_REGD_MEX = 9,
+	RTW_REGD_WW,
+	RTW_REGD_NUM,
+};
+
+extern const char *const _regd_str[];
+#define regd_str(regd) (((regd) >= RTW_REGD_NUM) ? _regd_str[RTW_REGD_NA] : _regd_str[(regd)])
+
+enum rtw_edcca_mode {
+	RTW_EDCCA_NORMAL	= 0, /* normal */
+	RTW_EDCCA_ADAPT		= 1, /* adaptivity */
+	RTW_EDCCA_CS		= 2, /* carrier sense */
+
+	RTW_EDCCA_MODE_NUM,
+	RTW_EDCCA_DEF		= RTW_EDCCA_MODE_NUM, /* default (ref to domain code), used at country chplan map's override field */
+};
+
+extern const char *const _rtw_edcca_mode_str[];
+#define rtw_edcca_mode_str(mode) (((mode) >= RTW_EDCCA_MODE_NUM) ? _rtw_edcca_mode_str[RTW_EDCCA_NORMAL] : _rtw_edcca_mode_str[(mode)])
+
+enum rtw_dfs_regd {
+	RTW_DFS_REGD_NONE	= 0,
+	RTW_DFS_REGD_FCC	= 1,
+	RTW_DFS_REGD_MKK	= 2,
+	RTW_DFS_REGD_ETSI	= 3,
+	RTW_DFS_REGD_NUM,
+	RTW_DFS_REGD_AUTO	= 0xFF, /* follow channel plan */
+};
+
+extern const char *_rtw_dfs_regd_str[];
+#define rtw_dfs_regd_str(region) (((region) >= RTW_DFS_REGD_NUM) ? _rtw_dfs_regd_str[RTW_DFS_REGD_NONE] : _rtw_dfs_regd_str[(region)])
+
+typedef enum _REGULATION_TXPWR_LMT {
+	TXPWR_LMT_NONE = 0, /* no limit */
+	TXPWR_LMT_FCC = 1,
+	TXPWR_LMT_MKK = 2,
+	TXPWR_LMT_ETSI = 3,
+	TXPWR_LMT_IC = 4,
+	TXPWR_LMT_KCC = 5,
+	TXPWR_LMT_NCC = 6,
+	TXPWR_LMT_ACMA = 7,
+	TXPWR_LMT_CHILE = 8,
+	TXPWR_LMT_UKRAINE = 9,
+	TXPWR_LMT_MEXICO = 10,
+	TXPWR_LMT_CN = 11,
+	TXPWR_LMT_QATAR = 12,
+	TXPWR_LMT_WW, /* smallest of all available limit, keep last */
+
+	TXPWR_LMT_NUM,
+	TXPWR_LMT_DEF = TXPWR_LMT_NUM, /* default (ref to domain code), used at country chplan map's override field */
+} REGULATION_TXPWR_LMT;
+
+extern const char *const _txpwr_lmt_str[];
+#define txpwr_lmt_str(regd) (((regd) >= TXPWR_LMT_NUM) ? _txpwr_lmt_str[TXPWR_LMT_NUM] : _txpwr_lmt_str[(regd)])
+
+extern const REGULATION_TXPWR_LMT _txpwr_lmt_alternate[];
+#define txpwr_lmt_alternate(ori) (((ori) > TXPWR_LMT_NUM) ? _txpwr_lmt_alternate[TXPWR_LMT_WW] : _txpwr_lmt_alternate[(ori)])
+
+#define TXPWR_LMT_ALTERNATE_DEFINED(txpwr_lmt) (txpwr_lmt_alternate(txpwr_lmt) != txpwr_lmt)
+
+extern const enum rtw_edcca_mode _rtw_regd_to_edcca_mode[RTW_REGD_NUM];
+#define rtw_regd_to_edcca_mode(regd) (((regd) >= RTW_REGD_NUM) ? RTW_EDCCA_NORMAL : _rtw_regd_to_edcca_mode[(regd)])
+
+extern const REGULATION_TXPWR_LMT _rtw_regd_to_txpwr_lmt[];
+#define rtw_regd_to_txpwr_lmt(regd) (((regd) >= RTW_REGD_NUM) ? TXPWR_LMT_WW : _rtw_regd_to_txpwr_lmt[(regd)])
+
+#define EDCCA_MODES_STR_LEN (((6 + 3 + 1) * BAND_MAX) + 1)
+char *rtw_get_edcca_modes_str(char *buf, u8 modes[]);
+void rtw_edcca_mode_update(struct dvobj_priv *dvobj);
+u8 rtw_get_edcca_mode(struct dvobj_priv *dvobj, BAND_TYPE band);
+
+#define TXPWR_NAMES_STR_LEN (((1 + 7 + 1) * BAND_MAX) + 1)
+char *rtw_get_txpwr_lmt_names_str(char *buf, const char *names[], u8 unknown_bmp);
+
+#define CHPLAN_PROTO_EN_AC		BIT0
+#define CHPLAN_PROTO_EN_AX		BIT1
+#define CHPLAN_PROTO_EN_ALL	0xFF
+
 struct country_chplan {
-	char alpha2[2]; /* "00" means worldwide */
+	char alpha2[2];
 	u8 chplan;
-#ifdef CONFIG_80211AC_VHT
-	u8 en_11ac;
+#if CONFIG_IEEE80211_BAND_6GHZ
+	u8 chplan_6g;
+#endif
+	u8 edcca_mode_2g_override:2;
+#if CONFIG_IEEE80211_BAND_5GHZ
+	u8 edcca_mode_5g_override:2;
+#endif
+#if CONFIG_IEEE80211_BAND_6GHZ
+	u8 edcca_mode_6g_override:2;
+#endif
+	u8 txpwr_lmt_override;
+#if defined(CONFIG_80211AX_HE) || defined(CONFIG_80211AC_VHT)
+	u8 proto_en;
 #endif
 };
 
 #ifdef CONFIG_80211AC_VHT
-#define COUNTRY_CHPLAN_EN_11AC(_ent) ((_ent)->en_11ac)
+#define COUNTRY_CHPLAN_EN_11AC(_ent) (((_ent)->proto_en & CHPLAN_PROTO_EN_AC) ? 1 : 0)
 #else
 #define COUNTRY_CHPLAN_EN_11AC(_ent) 0
 #endif
 
-const struct country_chplan *rtw_get_chplan_from_country(const char *country_code);
+#ifdef CONFIG_80211AX_HE
+#define COUNTRY_CHPLAN_EN_11AX(_ent) (((_ent)->proto_en & CHPLAN_PROTO_EN_AX) ? 1 : 0)
+#else
+#define COUNTRY_CHPLAN_EN_11AX(_ent) 0
+#endif
+
+void rtw_get_chplan_worldwide(struct country_chplan *ent);
+bool rtw_get_chplan_from_country(const char *country_code, struct country_chplan *ent);
+
+void rtw_chplan_ioctl_input_mapping(u16 *chplan, u16 *chplan_6g);
+bool rtw_chplan_ids_is_world_wide(u8 chplan, u8 chplan_6g);
 
-void dump_country_chplan(void *sel, const struct country_chplan *ent);
-void dump_country_chplan_map(void *sel);
+u8 rtw_country_chplan_is_chbw_valid(struct country_chplan *ent, BAND_TYPE band, u8 ch, u8 bw, u8 offset
+	, bool allow_primary_passive, bool allow_passive, struct registry_priv *regsty);
+
+enum country_ie_slave_status {
+	COUNTRY_IE_SLAVE_NOCOUNTRY		= 0,
+	COUNTRY_IE_SLAVE_UNKNOWN		= 1,
+	COUNTRY_IE_SLAVE_OPCH_NOEXIST	= 2,
+	COUNTRY_IE_SLAVE_APPLICABLE		= 3,
+
+	COUNTRY_IE_SLAVE_STATUS_NUM,
+};
+
+struct country_ie_slave_record {
+	char alpha2[2]; /* country code get from connected AP of STA ifaces, "\x00\x00" is not set */
+	BAND_TYPE band;
+	u8 opch;
+	enum country_ie_slave_status status;
+};
+
+#ifdef CONFIG_80211D
+extern const char *const _cis_status_str[];
+#define cis_status_str(s) (((s) >= COUNTRY_IE_SLAVE_STATUS_NUM) ? _cis_status_str[COUNTRY_IE_SLAVE_STATUS_NUM] : _cis_status_str[(s)])
+
+void dump_country_ie_slave_records(void *sel, struct rf_ctl_t *rfctl, bool skip_noset);
+
+enum country_ie_slave_status rtw_get_chplan_from_recv_country_ie(_adapter *adapter
+		, BAND_TYPE band, u8 opch, const u8 *country_ie, struct country_chplan *ent
+		, struct country_ie_slave_record *cisr, const char *caller_msg);
+
+enum country_ie_slave_status rtw_get_chplan_from_cisrs(struct rf_ctl_t *rfctl
+	, struct country_chplan *ent, const char *caller_msg);
+#endif
+
+void dump_country_chplan(void *sel, const struct country_chplan *ent, bool regd_info);
+void dump_country_chplan_map(void *sel, bool regd_info);
+void dump_country_list(void *sel);
 void dump_chplan_id_list(void *sel);
-#ifdef CONFIG_RTW_DEBUG
+void dump_chplan_country_list(void *sel);
+#if CONFIG_IEEE80211_BAND_6GHZ
+void dump_chplan_6g_id_list(void *sel);
+void dump_chplan_6g_country_list(void *sel);
+#endif
+#ifdef CONFIG_RTW_DEBUG
 void dump_chplan_test(void *sel);
-#endif
+#endif
 void dump_chplan_ver(void *sel);
 
 #endif /* __RTW_CHPLAN_H__ */
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/core/rtw_cmd.c b/drivers/net/wireless/rockchip_wlan/rtl8821cs/core/rtw_cmd.c
index 0a561e0b37b5..849868030410 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/core/rtw_cmd.c
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/core/rtw_cmd.c
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017 Realtek Corporation.
@@ -989,6 +988,56 @@ inline u8 rtw_change_bss_chbw_cmd(_adapter *adapter, int flags
 }
 #endif /* CONFIG_AP_MODE */
 
+#ifdef CONFIG_80211D
+/* Return corresponding country_chplan setting  */
+static bool rtw_joinbss_check_country_ie(_adapter *adapter, const WLAN_BSSID_EX *network, struct country_chplan *ent, WLAN_BSSID_EX *out_network)
+{
+	struct rf_ctl_t *rfctl = adapter_to_rfctl(adapter);
+	bool ret = 0;
+
+	if (rfctl->regd_src == REGD_SRC_RTK_PRIV
+		&& !rtw_rfctl_is_disable_sw_channel_plan(rfctl_to_dvobj(rfctl))
+	) {
+		struct mlme_priv *mlme = &adapter->mlmepriv;
+		const u8 *country_ie = NULL;
+		sint country_ie_len = 0;
+
+		if (rtw_iface_accept_country_ie(adapter)) {
+			country_ie = rtw_get_ie(BSS_EX_TLV_IES(network)
+				, WLAN_EID_COUNTRY, &country_ie_len, BSS_EX_TLV_IES_LEN(network));
+			if (country_ie) {
+				if (country_ie_len < 6) {
+					country_ie = NULL;
+					country_ie_len = 0;
+				} else
+					country_ie_len += 2;
+			}
+		}
+
+		if (country_ie) {
+			enum country_ie_slave_status status;
+
+			rtw_buf_update(&mlme->recv_country_ie, &mlme->recv_country_ie_len, country_ie, country_ie_len);
+
+			status = rtw_get_chplan_from_recv_country_ie(adapter
+				, network->Configuration.DSConfig > 14 ? BAND_ON_5G : BAND_ON_2_4G
+				, network->Configuration.DSConfig, country_ie, ent, NULL, __func__);
+			if (status != COUNTRY_IE_SLAVE_NOCOUNTRY)
+				ret = 1;
+
+			if (out_network) {
+				_rtw_memcpy(BSS_EX_IES(out_network) + BSS_EX_IES_LEN(out_network)
+					, country_ie, country_ie_len);
+				BSS_EX_IES_LEN(out_network) += country_ie_len;
+			}
+		} else
+			rtw_buf_free(&mlme->recv_country_ie, &mlme->recv_country_ie_len);
+	}
+
+	return ret;
+}
+#endif /* CONFIG_80211D */
+
 u8 rtw_joinbss_cmd(_adapter  *padapter, struct wlan_network *pnetwork)
 {
 	u8	*auth, res = _SUCCESS;
@@ -1000,6 +1049,10 @@ u8 rtw_joinbss_cmd(_adapter  *padapter, struct wlan_network *pnetwork)
 	struct qos_priv		*pqospriv = &pmlmepriv->qospriv;
 	struct security_priv	*psecuritypriv = &padapter->securitypriv;
 	struct registry_priv	*pregistrypriv = &padapter->registrypriv;
+#ifdef CONFIG_80211D
+	struct country_chplan country_ent;
+#endif
+	struct country_chplan *req_chplan = NULL;
 #ifdef CONFIG_80211N_HT
 	struct ht_priv			*phtpriv = &pmlmepriv->htpriv;
 #endif /* CONFIG_80211N_HT */
@@ -1052,6 +1105,8 @@ u8 rtw_joinbss_cmd(_adapter  *padapter, struct wlan_network *pnetwork)
 
 	pmlmeinfo->assoc_AP_vendor = check_assoc_AP(pnetwork->network.IEs, pnetwork->network.IELength);
 
+	rtw_phydm_update_ap_vendor_ie(padapter);
+
 #ifdef CONFIG_80211AC_VHT
 	/* save AP beamform_cap info for BCM IOT issue */
 	if (pmlmeinfo->assoc_AP_vendor == HT_IOT_PEER_BROADCOM)
@@ -1118,6 +1173,11 @@ u8 rtw_joinbss_cmd(_adapter  *padapter, struct wlan_network *pnetwork)
 		}
 	}
 
+#ifdef CONFIG_80211D
+	if (rtw_joinbss_check_country_ie(padapter, &pnetwork->network, &country_ent, psecnetwork))
+		req_chplan = &country_ent;
+#endif
+
 #ifdef CONFIG_80211N_HT
 	phtpriv->ht_option = _FALSE;
 	if (pregistrypriv->ht_enable && is_supported_ht(pregistrypriv->wireless_mode)) {
@@ -1134,7 +1194,7 @@ u8 rtw_joinbss_cmd(_adapter  *padapter, struct wlan_network *pnetwork)
 				/* rtw_restructure_ht_ie */
 				rtw_restructure_ht_ie(padapter, &pnetwork->network.IEs[12], &psecnetwork->IEs[0],
 					pnetwork->network.IELength - 12, &psecnetwork->IELength,
-					pnetwork->network.Configuration.DSConfig);
+					pnetwork->network.Configuration.DSConfig, req_chplan);
 			}
 		}
 	}
@@ -1144,7 +1204,8 @@ u8 rtw_joinbss_cmd(_adapter  *padapter, struct wlan_network *pnetwork)
 	if (phtpriv->ht_option
 		&& REGSTY_IS_11AC_ENABLE(pregistrypriv)
 		&& is_supported_vht(pregistrypriv->wireless_mode)
-		&& (!rfctl->country_ent || COUNTRY_CHPLAN_EN_11AC(rfctl->country_ent))
+		&& ((req_chplan && COUNTRY_CHPLAN_EN_11AC(req_chplan))
+			|| (!req_chplan && RFCTL_REG_EN_11AC(rfctl)))
 	) {
 		u8 vht_enable = 0;
 
@@ -1155,12 +1216,12 @@ u8 rtw_joinbss_cmd(_adapter  *padapter, struct wlan_network *pnetwork)
 
 		if (vht_enable == 1)
 			rtw_restructure_vht_ie(padapter, &pnetwork->network.IEs[0], &psecnetwork->IEs[0],
-				pnetwork->network.IELength, &psecnetwork->IELength);
+				pnetwork->network.IELength, &psecnetwork->IELength, req_chplan);
 	}
 #endif
 #endif /* CONFIG_80211N_HT */
 
-	rtw_append_exented_cap(padapter, &psecnetwork->IEs[0], &psecnetwork->IELength);
+	rtw_append_extended_cap(padapter, &psecnetwork->IEs[0], &psecnetwork->IELength);
 
 #ifdef CONFIG_RTW_80211R
 	rtw_ft_validate_akm_type(padapter, pnetwork);
@@ -1836,28 +1897,32 @@ u8 rtw_set_chbw_cmd(_adapter *padapter, u8 ch, u8 bw, u8 ch_offset, u8 flags)
 	return res;
 }
 
-static u8 _rtw_set_chplan_cmd(_adapter *adapter, int flags, u8 chplan, const struct country_chplan *country_ent, enum regd_src_t regd_src, u8 swconfig)
+static u8 _rtw_set_chplan_cmd(_adapter *adapter, int flags
+	, u8 chplan, u8 chplan_6g, const struct country_chplan *country_ent
+	, enum regd_src_t regd_src, enum rtw_regd_inr inr
+	, const struct country_ie_slave_record *cisr)
 {
 	struct cmd_obj *cmdobj;
-	struct	SetChannelPlan_param *parm;
+	struct SetChannelPlan_param *parm;
 	struct cmd_priv *pcmdpriv = &adapter->cmdpriv;
 	struct submit_ctx sctx;
+#ifdef PLATFORM_LINUX
+	bool rtnl_lock_needed = rtw_rtnl_lock_needed(adapter_to_dvobj(adapter));
+#endif
 	u8 res = _SUCCESS;
 
 	/* check if allow software config */
-	if (swconfig && rtw_hal_is_disable_sw_channel_plan(adapter) == _TRUE) {
+	if (rtw_rfctl_is_disable_sw_channel_plan(adapter_to_dvobj(adapter)) == _TRUE) {
 		res = _FAIL;
 		goto exit;
 	}
 
-	/* if country_entry is provided, replace chplan */
-	if (country_ent)
+	if (country_ent) {
+		/* if country_entry is provided, replace chplan */
 		chplan = country_ent->chplan;
-
-	/* check input parameter */
-	if (regd_src == REGD_SRC_RTK_PRIV && !rtw_is_channel_plan_valid(chplan)) {
-		res = _FAIL;
-		goto exit;
+		#if CONFIG_IEEE80211_BAND_6GHZ
+		chplan_6g = country_ent->chplan_6g;
+		#endif
 	}
 
 	/* prepare cmd parameter */
@@ -1867,8 +1932,27 @@ static u8 _rtw_set_chplan_cmd(_adapter *adapter, int flags, u8 chplan, const str
 		goto exit;
 	}
 	parm->regd_src = regd_src;
-	parm->country_ent = country_ent;
+	parm->inr = inr;
+	if (country_ent) {
+		_rtw_memcpy(&parm->country_ent, country_ent, sizeof(parm->country_ent));
+		parm->has_country = 1;
+	}
 	parm->channel_plan = chplan;
+#if CONFIG_IEEE80211_BAND_6GHZ
+	parm->channel_plan_6g = chplan_6g;
+#endif
+#ifdef CONFIG_80211D
+	if (cisr) {
+		_rtw_memcpy(&parm->cisr, cisr, sizeof(*cisr));
+		parm->has_cisr = 1;
+	}
+#endif
+#ifdef PLATFORM_LINUX
+	if (flags & (RTW_CMDF_DIRECTLY | RTW_CMDF_WAIT_ACK))
+		parm->rtnl_lock_needed = rtnl_lock_needed; /* synchronous call, follow caller's */
+	else
+		parm->rtnl_lock_needed = 1; /* asynchronous call, always needed */
+#endif
 
 	if (flags & RTW_CMDF_DIRECTLY) {
 		/* no need to enqueue, do the cmd hdl directly and free cmd parameter */
@@ -1911,8 +1995,24 @@ static u8 _rtw_set_chplan_cmd(_adapter *adapter, int flags, u8 chplan, const str
 				goto exit;
 			}
 			parm->regd_src = regd_src;
-			parm->country_ent = country_ent;
+			parm->inr = inr;
+			if (country_ent) {
+				_rtw_memcpy(&parm->country_ent, country_ent, sizeof(parm->country_ent));
+				parm->has_country = 1;
+			}
 			parm->channel_plan = chplan;
+			#if CONFIG_IEEE80211_BAND_6GHZ
+			parm->channel_plan_6g = chplan_6g;
+			#endif
+			#ifdef CONFIG_80211D
+			if (cisr) {
+				_rtw_memcpy(&parm->cisr, cisr, sizeof(*cisr));
+				parm->has_cisr = 1;
+			}
+			#endif
+			#ifdef PLATFORM_LINUX
+			parm->rtnl_lock_needed = rtnl_lock_needed; /* synchronous call, follow caller's */
+			#endif
 
 			if (H2C_SUCCESS != rtw_set_chplan_hdl(adapter, (u8 *)parm))
 				res = _FAIL;
@@ -1926,14 +2026,19 @@ static u8 _rtw_set_chplan_cmd(_adapter *adapter, int flags, u8 chplan, const str
 	return res;
 }
 
-inline u8 rtw_set_chplan_cmd(_adapter *adapter, int flags, u8 chplan, u8 swconfig)
+inline u8 rtw_set_chplan_cmd(_adapter *adapter, int flags, u8 chplan, u8 chplan_6g, enum rtw_regd_inr inr)
 {
-	return _rtw_set_chplan_cmd(adapter, flags, chplan, NULL, REGD_SRC_RTK_PRIV, swconfig);
+	return _rtw_set_chplan_cmd(adapter, flags, chplan, chplan_6g, NULL, REGD_SRC_RTK_PRIV, inr, NULL);
 }
 
-inline u8 rtw_set_country_cmd(_adapter *adapter, int flags, const char *country_code, u8 swconfig)
+inline u8 rtw_set_country_cmd(_adapter *adapter, int flags, const char *country_code, enum rtw_regd_inr inr)
 {
-	const struct country_chplan *ent;
+	struct country_chplan ent;
+
+	if (IS_ALPHA2_WORLDWIDE(country_code)) {
+		rtw_get_chplan_worldwide(&ent);
+		goto cmd;
+	}
 
 	if (is_alpha(country_code[0]) == _FALSE
 	    || is_alpha(country_code[1]) == _FALSE
@@ -1942,32 +2047,27 @@ inline u8 rtw_set_country_cmd(_adapter *adapter, int flags, const char *country_
 		return _FAIL;
 	}
 
-	ent = rtw_get_chplan_from_country(country_code);
-
-	if (ent == NULL) {
+	if (!rtw_get_chplan_from_country(country_code, &ent)) {
 		RTW_PRINT("%s unsupported country_code:\"%c%c\"\n", __func__, country_code[0], country_code[1]);
 		return _FAIL;
 	}
 
-	RTW_PRINT("%s country_code:\"%c%c\" mapping to chplan:0x%02x\n", __func__, country_code[0], country_code[1], ent->chplan);
+cmd:
+	RTW_PRINT("%s country_code:\"%c%c\"\n", __func__, country_code[0], country_code[1]);
 
-	return _rtw_set_chplan_cmd(adapter, flags, RTW_CHPLAN_UNSPECIFIED, ent, REGD_SRC_RTK_PRIV, swconfig);
+	return _rtw_set_chplan_cmd(adapter, flags, RTW_CHPLAN_UNSPECIFIED, RTW_CHPLAN_6G_UNSPECIFIED, &ent, REGD_SRC_RTK_PRIV, inr, NULL);
 }
 
 #ifdef CONFIG_REGD_SRC_FROM_OS
-inline u8 rtw_sync_os_regd_cmd(_adapter *adapter, int flags, const char *country_code, u8 dfs_region)
+inline u8 rtw_sync_os_regd_cmd(_adapter *adapter, int flags, const char *country_code, u8 dfs_region, enum rtw_regd_inr inr)
 {
-	struct country_chplan *ent;
-	const struct country_chplan *rtk_ent;
+	struct country_chplan ent;
+	struct country_chplan rtk_ent;
+	bool rtk_ent_exist;
 
-	/* allocate entry for regd source out of driver */
-	ent = rtw_malloc(sizeof(*ent));
-	if (ent == NULL)
-		return _FAIL;
+	rtk_ent_exist = rtw_get_chplan_from_country(country_code, &rtk_ent);
 
-	rtk_ent = rtw_get_chplan_from_country(country_code);
-
-	_rtw_memcpy(ent->alpha2, country_code, 2);
+	_rtw_memcpy(ent.alpha2, country_code, 2);
 
 	/*
 	* Regulation follows OS, the internal txpwr limit selection is searched by alpha2
@@ -1977,18 +2077,29 @@ inline u8 rtw_sync_os_regd_cmd(_adapter *adapter, int flags, const char *country
 	*     2. WW when driver has no support of this alpha2
 	*/
 
-	ent->chplan = rtk_ent ? rtk_ent->chplan : RTW_CHPLAN_UNSPECIFIED;
-	#ifdef CONFIG_80211AC_VHT
-	ent->en_11ac = 1;
+	ent.chplan = rtk_ent_exist ? rtk_ent.chplan : RTW_CHPLAN_UNSPECIFIED;
+	#if CONFIG_IEEE80211_BAND_6GHZ
+	ent.chplan_6g = rtk_ent_exist ? rtk_ent.chplan_6g : RTW_CHPLAN_6G_UNSPECIFIED;
+	#endif
+	ent.edcca_mode_2g_override = rtk_ent_exist ? rtk_ent.edcca_mode_2g_override : RTW_EDCCA_DEF;
+	#if CONFIG_IEEE80211_BAND_5GHZ
+	ent.edcca_mode_5g_override = rtk_ent_exist ? rtk_ent.edcca_mode_5g_override : RTW_EDCCA_DEF;
+	#endif
+	#if CONFIG_IEEE80211_BAND_6GHZ
+	ent.edcca_mode_6g_override = rtk_ent_exist ? rtk_ent.edcca_mode_6g_override : RTW_EDCCA_DEF;
+	#endif
+	ent.txpwr_lmt_override = rtk_ent_exist ? rtk_ent.txpwr_lmt_override : TXPWR_LMT_DEF;
+	#if defined(CONFIG_80211AC_VHT) || defined(CONFIG_80211AX_HE)
+	ent.proto_en = CHPLAN_PROTO_EN_ALL;
 	#endif
 
 	/* TODO: dfs_region */
 
-	return _rtw_set_chplan_cmd(adapter, flags, RTW_CHPLAN_UNSPECIFIED, ent, REGD_SRC_OS, 1);
+	return _rtw_set_chplan_cmd(adapter, flags, RTW_CHPLAN_UNSPECIFIED, RTW_CHPLAN_6G_UNSPECIFIED, &ent, REGD_SRC_OS, inr, NULL);
 }
 #endif /* CONFIG_REGD_SRC_FROM_OS */
 
-u8 rtw_get_chplan_cmd(_adapter *adapter, int flags, struct get_chplan_resp **resp)
+u8 rtw_get_chplan_cmd(_adapter *adapter, int flags, struct get_chplan_resp **chplan)
 {
 	struct cmd_obj *cmdobj;
 	struct get_channel_plan_param *parm;
@@ -2003,7 +2114,7 @@ u8 rtw_get_chplan_cmd(_adapter *adapter, int flags, struct get_chplan_resp **res
 	parm = rtw_zmalloc(sizeof(*parm));
 	if (parm == NULL)
 		goto exit;
-	parm->resp = resp;
+	parm->chplan = chplan;
 
 	if (flags & RTW_CMDF_DIRECTLY) {
 		/* no need to enqueue, do the cmd hdl directly and free cmd parameter */
@@ -2042,7 +2153,7 @@ u8 rtw_get_chplan_cmd(_adapter *adapter, int flags, struct get_chplan_resp **res
 			parm = rtw_zmalloc(sizeof(*parm));
 			if (parm == NULL)
 				goto exit;
-			parm->resp = resp;
+			parm->chplan = chplan;
 
 			if (H2C_SUCCESS == rtw_get_chplan_hdl(adapter, (u8 *)parm))
 				res = _SUCCESS;
@@ -2055,6 +2166,19 @@ u8 rtw_get_chplan_cmd(_adapter *adapter, int flags, struct get_chplan_resp **res
 	return res;
 }
 
+#ifdef CONFIG_80211D
+inline u8 rtw_apply_recv_country_ie_cmd(_adapter *adapter, int flags, BAND_TYPE band,u8 opch, const u8 *country_ie)
+{
+	struct country_chplan ent;
+	struct country_ie_slave_record cisr;
+
+	rtw_get_chplan_from_recv_country_ie(adapter, band, opch, country_ie, &ent, &cisr, NULL);
+
+	return _rtw_set_chplan_cmd(adapter, flags, RTW_CHPLAN_UNSPECIFIED, RTW_CHPLAN_6G_UNSPECIFIED
+		, NULL, REGD_SRC_RTK_PRIV, RTW_REGD_SET_BY_COUNTRY_IE, &cisr);
+}
+#endif /* CONFIG_80211D */
+
 u8 rtw_led_blink_cmd(_adapter *padapter, void *pLed)
 {
 	struct	cmd_obj	*pcmdobj;
@@ -2108,6 +2232,29 @@ u8 rtw_set_csa_cmd(_adapter *adapter)
 	return res;
 }
 
+u8 rtw_set_ap_csa_cmd(_adapter *adapter)
+{
+	u8 res = _SUCCESS;
+#ifdef CONFIG_AP_MODE
+	struct cmd_obj *cmdobj;
+	struct cmd_priv *cmdpriv = &adapter->cmdpriv;
+
+	RTW_INFO("%s\n", __FUNCTION__);
+
+	cmdobj = rtw_zmalloc(sizeof(struct cmd_obj));
+	if (cmdobj == NULL) {
+		res = _FAIL;
+		goto exit;
+	}
+
+	init_h2fwcmd_w_parm_no_parm_rsp(cmdobj, CMD_AP_CHANSWITCH);
+	res = rtw_enqueue_cmd(cmdpriv, cmdobj);
+
+exit:
+#endif /* CONFIG_AP_MODE */
+	return res;
+}
+
 u8 rtw_tdls_cmd(_adapter *padapter, u8 *addr, u8 option)
 {
 	u8 res = _SUCCESS;
@@ -3718,7 +3865,8 @@ void rtw_dfs_ch_switch_hdl(struct dvobj_priv *dvobj)
 	u8 ifbmp_m = rtw_mi_get_ap_mesh_ifbmp(pri_adapter);
 	u8 ifbmp_s = rtw_mi_get_ld_sta_ifbmp(pri_adapter);
 	s16 req_ch;
-	u8 req_bw = CHANNEL_WIDTH_20, req_offset = HAL_PRIME_CHNL_OFFSET_DONT_CARE;
+	u8 req_bw = CHANNEL_WIDTH_20, req_offset = HAL_PRIME_CHNL_OFFSET_DONT_CARE, csa_timer = _FALSE;
+	u8 need_discon = _FALSE;
 
 	rtw_hal_macid_sleep_all_used(pri_adapter);
 
@@ -3728,9 +3876,11 @@ void rtw_dfs_ch_switch_hdl(struct dvobj_priv *dvobj)
 		/* CSA channel available and valid */
 		req_ch = rfctl->csa_ch;
 		RTW_INFO("%s valid CSA ch%u\n", __func__, rfctl->csa_ch);
+		csa_timer = _TRUE;
 	} else if (ifbmp_m) {
 		/* no available or valid CSA channel, having AP/MESH ifaces */
 		req_ch = REQ_CH_NONE;
+		need_discon = _TRUE;
 		RTW_INFO("%s ch sel by AP/MESH ifaces\n", __func__);
 	} else {
 		/* no available or valid CSA channel and no AP/MESH ifaces */
@@ -3742,32 +3892,36 @@ void rtw_dfs_ch_switch_hdl(struct dvobj_priv *dvobj)
 			req_ch = 36;
 		else
 			req_ch = 1;
-		RTW_INFO("%s switch to ch%d\n", __func__, req_ch);
-	}
-
-	/* only support 80 Mhz so far */
-	if(rfctl->csa_ch_width == 1 || rfctl->csa_ch_width == 2 || rfctl->csa_ch_width == 3) {
-		if (rtw_get_offset_by_chbw(req_ch, CHANNEL_WIDTH_80, &req_offset)) {
-			req_bw = CHANNEL_WIDTH_80;
-		} else {
+		need_discon = _TRUE;
+		RTW_INFO("%s switch to ch%d, then disconnect with AP\n", __func__, req_ch);
+	}
+
+	if (!need_discon) {
+		/* fault tolerant for AP */
+		if(rfctl->csa_ch_width == 1 || rfctl->csa_ch_width == 2 || rfctl->csa_ch_width == 3) {
+			if (rtw_get_offset_by_chbw(req_ch, CHANNEL_WIDTH_80, &req_offset)) {
+				/*  always use 80 Mhz to connect if ch/bw/offset is valid */
+				req_bw = CHANNEL_WIDTH_80;
+			} else {
+				req_bw = CHANNEL_WIDTH_20;
+				req_offset = HAL_PRIME_CHNL_OFFSET_DONT_CARE;
+			}
+		} else if(rfctl->csa_ch_offset == 1) {
+			req_bw = CHANNEL_WIDTH_40;
+			req_offset = HAL_PRIME_CHNL_OFFSET_LOWER;
+		} else if(rfctl->csa_ch_offset == 3) {
+			req_bw = CHANNEL_WIDTH_40;
+			req_offset = HAL_PRIME_CHNL_OFFSET_UPPER;
+		} else{
 			req_bw = CHANNEL_WIDTH_20;
 			req_offset = HAL_PRIME_CHNL_OFFSET_DONT_CARE;
 		}
-	} else if(rfctl->csa_ch_offset == 1) {
-		req_bw = CHANNEL_WIDTH_40;
-		req_offset = HAL_PRIME_CHNL_OFFSET_LOWER;
-	} else if(rfctl->csa_ch_offset == 3) {
-		req_bw = CHANNEL_WIDTH_40;
-		req_offset = HAL_PRIME_CHNL_OFFSET_UPPER;
-	} else{
-		req_bw = CHANNEL_WIDTH_20;
-		req_offset = HAL_PRIME_CHNL_OFFSET_DONT_CARE;
 	}
 
 	RTW_INFO("req_ch=%d, req_bw=%d, req_offset=%d, ifbmp_m=0x%02x, ifbmp_s=0x%02x\n"
 		, req_ch, req_bw, req_offset, ifbmp_m, ifbmp_s);
 
-	/*  update ch, bw, offset for all asoc STA ifaces */
+	/* check all STA ifaces status */
 	if (ifbmp_s) {
 		_adapter *iface;
 		int i;
@@ -3776,19 +3930,34 @@ void rtw_dfs_ch_switch_hdl(struct dvobj_priv *dvobj)
 			iface = dvobj->padapters[i];
 			if (!iface || !(ifbmp_s & BIT(iface->iface_id)))
 				continue;
-			
-			/* update STA mode ch/bw/offset */
-			iface->mlmeextpriv.cur_channel = req_ch;
-			iface->mlmeextpriv.cur_bwmode = req_bw;
-			iface->mlmeextpriv.cur_ch_offset = req_offset;
-			/* updaet STA mode DSConfig , ap mode will update in rtw_change_bss_chbw_cmd */
-			iface->mlmepriv.cur_network.network.Configuration.DSConfig = req_ch;
-			set_fwstate(&iface->mlmepriv, WIFI_CSA_UPDATE_BEACON);
-			
+
+			if (need_discon) {
+				/* CSA channel not available or not valid, then disconnect */
+				set_fwstate(&iface->mlmepriv,  WIFI_OP_CH_SWITCHING);
+				issue_deauth(iface, get_bssid(&iface->mlmepriv), WLAN_REASON_DEAUTH_LEAVING);
+			} else {
+				/* update STA mode ch/bw/offset */
+				iface->mlmeextpriv.cur_channel = req_ch;
+				iface->mlmeextpriv.cur_bwmode = req_bw;
+				iface->mlmeextpriv.cur_ch_offset = req_offset;
+				/* updaet STA mode DSConfig , ap mode will update in rtw_change_bss_chbw_cmd */
+				iface->mlmepriv.cur_network.network.Configuration.DSConfig = req_ch;
+				set_fwstate(&iface->mlmepriv, WIFI_CSA_UPDATE_BEACON);
+
+				#ifdef CONFIG_80211D
+				if (iface->mlmepriv.recv_country_ie) {
+					if (rtw_apply_recv_country_ie_cmd(iface, RTW_CMDF_DIRECTLY
+						, req_ch > 14 ? BAND_ON_5G : BAND_ON_2_4G, req_ch
+						, iface->mlmepriv.recv_country_ie) != _SUCCESS
+					)
+						RTW_WARN(FUNC_ADPT_FMT" rtw_apply_recv_country_ie_cmd() fail\n", FUNC_ADPT_ARG(iface));
+				}
+				#endif
+			}
 		}
 	}
 
-	if (rfctl->csa_ch > 0) {
+	if (csa_timer) {
 		RTW_INFO("pmlmeext->csa_timer 70 seconds\n");
 		/* wait 70 seconds for receiving beacons */
 		_set_timer(&pmlmeext->csa_timer, CAC_TIME_MS + 10000);
@@ -3796,16 +3965,23 @@ void rtw_dfs_ch_switch_hdl(struct dvobj_priv *dvobj)
 
 #ifdef CONFIG_AP_MODE
 	if (ifbmp_m) {
+		u8 execlude = 0;
+
+		if (need_discon)
+			execlude = ifbmp_s;
 		/* trigger channel selection with consideraton of asoc STA ifaces */
 		rtw_change_bss_chbw_cmd(dvobj_get_primary_adapter(dvobj), RTW_CMDF_DIRECTLY
-			, ifbmp_m, 0, req_ch, REQ_BW_ORI, REQ_OFFSET_NONE);
+			, ifbmp_m, execlude, req_ch, REQ_BW_ORI, REQ_OFFSET_NONE);
 	} else
 #endif
 	{
 		/* no AP/MESH iface, switch DFS status and channel directly */
 		rtw_warn_on(req_ch <= 0);
 		#ifdef CONFIG_DFS_MASTER
-		rtw_dfs_rd_en_decision(pri_adapter, MLME_OPCH_SWITCH, ifbmp_s);
+		if (need_discon)
+			rtw_dfs_rd_en_decision(pri_adapter, MLME_OPCH_SWITCH, ifbmp_s);
+		else
+			rtw_dfs_rd_en_decision(pri_adapter, MLME_OPCH_SWITCH, 0);
 		#endif
 		LeaveAllPowerSaveModeDirect(pri_adapter);
 		set_channel_bwmode(pri_adapter, req_ch, req_offset, req_bw);
@@ -3813,7 +3989,23 @@ void rtw_dfs_ch_switch_hdl(struct dvobj_priv *dvobj)
 		rtw_mi_update_union_chan_inf(pri_adapter, req_ch, req_offset, req_bw);
 		rtw_rfctl_update_op_mode(rfctl, 0, 0);
 	}
-	
+
+	/* make asoc STA ifaces disconnect */
+	if (ifbmp_s && need_discon) {
+		_adapter *iface;
+		int i;
+
+		for (i = 0; i < dvobj->iface_nums; i++) {
+			iface = dvobj->padapters[i];
+			if (!iface || !(ifbmp_s & BIT(iface->iface_id)))
+				continue;
+			rtw_disassoc_cmd(iface, 0, RTW_CMDF_DIRECTLY);
+			rtw_indicate_disconnect(iface, 0, _FALSE);
+			rtw_free_assoc_resources(iface, _TRUE);
+			rtw_free_network_queue(iface, _TRUE);
+		}
+	}
+
 	rfctl->csa_ch = 0;
 	rfctl->csa_switch_cnt = 0;
 	rfctl->csa_ch_offset = 0;
@@ -4120,6 +4312,10 @@ static void rtw_dfs_rd_disable(struct rf_ctl_t *rfctl, u8 ch, u8 bw, u8 offset,
 		rfctl->radar_detect_ch = ch;
 		rfctl->radar_detect_bw = bw;
 		rfctl->radar_detect_offset = offset;
+	} else {
+		rfctl->radar_detect_ch = 0;
+		rfctl->radar_detect_bw = 0;
+		rfctl->radar_detect_offset = 0;
 	}
 }
 
@@ -4523,7 +4719,8 @@ static s32 rtw_mp_cmd_hdl(_adapter *padapter, u8 mp_cmd_id)
 		pHalData->EEPROMBluetoothCoexist = _FALSE;
 #endif
 #ifdef CONFIG_RF_POWER_TRIM
-			if (!IS_HARDWARE_TYPE_8814A(padapter) && !IS_HARDWARE_TYPE_8822B(padapter) && !IS_HARDWARE_TYPE_8822C(padapter)) {
+			if (!IS_HARDWARE_TYPE_8814A(padapter) && !IS_HARDWARE_TYPE_8822B(padapter)
+				&& !IS_HARDWARE_TYPE_8822C(padapter) && !IS_HARDWARE_TYPE_8723F(padapter)) {
 				padapter->registrypriv.RegPwrTrimEnable = 1;
 				rtw_hal_read_chip_info(padapter);
 			}
@@ -5674,3 +5871,80 @@ u8 set_txq_params_cmd(_adapter *adapter, u32 ac_parm, u8 ac_type)
 exit:
 	return res;
 }
+
+/* Driver writes beacon length to REG for FW adjusting beacon receive time */
+#ifdef CONFIG_WRITE_BCN_LEN_TO_FW
+u8 rtw_write_bcnlen_to_fw_cmd(_adapter *padapter, u16 bcn_len)
+{
+	struct cmd_obj *pcmd;
+	struct write_bcnlen_param *parm;
+	struct cmd_priv *pcmdpriv = &padapter->cmdpriv;
+	u8 res = _SUCCESS;
+
+	pcmd = (struct cmd_obj *)rtw_zmalloc(sizeof(struct cmd_obj));
+	if (pcmd == NULL) {
+		res = _FAIL;
+		goto exit;
+	}
+
+	parm = (struct write_bcnlen_param *)rtw_zmalloc(sizeof(struct write_bcnlen_param));
+	if (parm == NULL) {
+		rtw_mfree((unsigned char *)pcmd, sizeof(struct cmd_obj));
+		res = _FAIL;
+		goto exit;
+	}
+
+	parm->bcn_len = bcn_len;
+	init_h2fwcmd_w_parm_no_rsp(pcmd, parm, CMD_WRITE_BCN_LEN);
+	res = rtw_enqueue_cmd(pcmdpriv, pcmd);
+
+exit:
+	return res;
+}
+#endif /* CONFIG_WRITE_BCN_LEN_TO_FW */
+
+u8 rtw_reqtxrpt_cmd(_adapter *adapter, u8 macid)
+{
+	struct cmd_obj *cmdobj;
+	struct reqtxrpt_param *parm;
+	struct cmd_priv *pcmdpriv = &adapter->cmdpriv;
+	struct submit_ctx sctx;
+	u8 flags = RTW_CMDF_WAIT_ACK;
+	u8 res = _FAIL;
+
+	/* prepare cmd parameter */
+	parm = rtw_zmalloc(sizeof(*parm));
+	if (parm == NULL)
+		goto exit;
+	parm->macid = macid;
+
+	/* need enqueue, prepare cmd_obj and enqueue */
+	cmdobj = rtw_zmalloc(sizeof(*cmdobj));
+	if (cmdobj == NULL) {
+		rtw_mfree((u8 *)parm, sizeof(*parm));
+		goto exit;
+	}
+
+	init_h2fwcmd_w_parm_no_rsp(cmdobj, parm, CMD_REQ_TXRPT);
+
+	if (flags & RTW_CMDF_WAIT_ACK) {
+		cmdobj->sctx = &sctx;
+		rtw_sctx_init(&sctx, 2000);
+	}
+
+	res = rtw_enqueue_cmd(pcmdpriv, cmdobj);
+
+	if (res == _SUCCESS && (flags & RTW_CMDF_WAIT_ACK)) {
+		rtw_sctx_wait(&sctx, __func__);
+		_enter_critical_mutex(&pcmdpriv->sctx_mutex, NULL);
+		if (sctx.status == RTW_SCTX_SUBMITTED)
+			cmdobj->sctx = NULL;
+		_exit_critical_mutex(&pcmdpriv->sctx_mutex, NULL);
+		if (sctx.status != RTW_SCTX_DONE_SUCCESS)
+			res = _FAIL;
+	}
+
+exit:
+	return res;
+}
+
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/core/rtw_debug.c b/drivers/net/wireless/rockchip_wlan/rtl8821cs/core/rtw_debug.c
index 812660d27a89..4d599bfac084 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/core/rtw_debug.c
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/core/rtw_debug.c
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2019 Realtek Corporation.
@@ -43,6 +42,7 @@ const char *rtw_log_level_str[] = {
 void dump_drv_version(void *sel)
 {
 	RTW_PRINT_SEL(sel, "%s %s\n", DRV_NAME, DRIVERVERSION);
+	RTW_PRINT_SEL(sel, "build time: %s %s\n", __DATE__, __TIME__);
 }
 
 #ifdef CONFIG_PROC_DEBUG
@@ -56,8 +56,15 @@ extern uint rtw_recvbuf_nr;
 	RTW_PRINT_SEL(sel, "\nKernel Version: %s\n", kernel_version);
 #endif
 
+#ifdef CONFIG_RTW_ANDROID
+	RTW_PRINT_SEL(sel, "Android Driver: %d\n", CONFIG_RTW_ANDROID);
+#else
+	RTW_PRINT_SEL(sel, "Linux Driver: \n");
+#endif /* CONFIG_RTW_ANDROID */
+
 	RTW_PRINT_SEL(sel, "Driver Version: %s\n", DRIVERVERSION);
 	RTW_PRINT_SEL(sel, "------------------------------------------------\n");
+
 #ifdef CONFIG_IOCTL_CFG80211
 	RTW_PRINT_SEL(sel, "CFG80211\n");
 #ifdef RTW_USE_CFG80211_STA_EVENT
@@ -132,9 +139,7 @@ extern uint rtw_recvbuf_nr;
 #endif
 
 	RTW_PRINT_SEL(sel, "CONFIG_RTW_ADAPTIVITY_EN = %d\n", CONFIG_RTW_ADAPTIVITY_EN);
-#if (CONFIG_RTW_ADAPTIVITY_EN)
-	RTW_PRINT_SEL(sel, "ADAPTIVITY_MODE = %s\n", (CONFIG_RTW_ADAPTIVITY_MODE) ? "carrier_sense" : "normal");
-#endif
+	RTW_PRINT_SEL(sel, "CONFIG_RTW_ADAPTIVITY_MODE = %d\n", CONFIG_RTW_ADAPTIVITY_MODE);
 
 #ifdef CONFIG_WOWLAN
 	RTW_PRINT_SEL(sel, "CONFIG_WOWLAN - ");
@@ -329,7 +334,8 @@ void mac_reg_dump(void *sel, _adapter *adapter)
 	}
 #endif /* CONFIG_RTL8814A */
 
-#if defined(CONFIG_RTL8822B) || defined(CONFIG_RTL8821C) || defined(CONFIG_RTL8822C) || defined(CONFIG_RTL8814B)
+#if defined(CONFIG_RTL8822B) || defined(CONFIG_RTL8821C) || defined(CONFIG_RTL8822C) || defined(CONFIG_RTL8814B) \
+	|| defined(CONFIG_RTL8723F)
 	for (i = 0x1000; i < 0x1800; i += 4) {
 		if (j % 4 == 1)
 			RTW_PRINT_SEL(sel, "0x%04x", i);
@@ -389,7 +395,8 @@ void bb_reg_dump(void *sel, _adapter *adapter)
 			_RTW_PRINT_SEL(sel, "\n");
 	}
 
-#if defined(CONFIG_RTL8822B) || defined(CONFIG_RTL8821C) || defined(CONFIG_RTL8822C) || defined(CONFIG_RTL8814B)
+#if defined(CONFIG_RTL8822B) || defined(CONFIG_RTL8821C) || defined(CONFIG_RTL8822C) || defined(CONFIG_RTL8814B) \
+	|| defined(CONFIG_RTL8723F)
 	for (i = 0x1800; i < 0x2000; i += 4) {
 		if (j % 4 == 1)
 			RTW_PRINT_SEL(sel, "0x%04x", i);
@@ -399,7 +406,7 @@ void bb_reg_dump(void *sel, _adapter *adapter)
 	}
 #endif /* CONFIG_RTL8822B */
 
-#if defined(CONFIG_RTL8822C) || defined(CONFIG_RTL8814B)
+#if defined(CONFIG_RTL8822C) || defined(CONFIG_RTL8814B) || defined(CONFIG_RTL8723F)
 	for (i = 0x2c00; i < 0x2c60; i += 4) {
 		if (j % 4 == 1)
 			RTW_PRINT_SEL(sel, "0x%04x", i);
@@ -414,7 +421,7 @@ void bb_reg_dump(void *sel, _adapter *adapter)
 		_RTW_PRINT_SEL(sel, " 0x%08x ", rtw_read32(adapter, i));
 		if ((j++) % 4 == 0)
 			_RTW_PRINT_SEL(sel, "\n");
-	}	
+	}
 
 	for (i = 0x4000; i < 0x4060; i += 4) {
 		if (j % 4 == 1)
@@ -422,7 +429,7 @@ void bb_reg_dump(void *sel, _adapter *adapter)
 		_RTW_PRINT_SEL(sel, " 0x%08x ", rtw_read32(adapter, i));
 		if ((j++) % 4 == 0)
 			_RTW_PRINT_SEL(sel, "\n");
-	}	
+	}
 
 	for (i = 0x4100; i < 0x4200; i += 4) {
 		if (j % 4 == 1)
@@ -430,9 +437,9 @@ void bb_reg_dump(void *sel, _adapter *adapter)
 		_RTW_PRINT_SEL(sel, " 0x%08x ", rtw_read32(adapter, i));
 		if ((j++) % 4 == 0)
 			_RTW_PRINT_SEL(sel, "\n");
-	}	
+	}
 
-#endif /* CONFIG_RTL8822C || CONFIG_RTL8814B */
+#endif /* CONFIG_RTL8822C || CONFIG_RTL8814B || CONFIG_8723F */
 
 #if defined(CONFIG_RTL8814B)
 	for (i = 0x5200; i < 0x5400; i += 4) {
@@ -443,6 +450,38 @@ void bb_reg_dump(void *sel, _adapter *adapter)
 			_RTW_PRINT_SEL(sel, "\n");
 	}
 #endif /* CONFIG_RTL8814B */
+
+#if defined(CONFIG_RTL8723F)
+	/* RFK(IQK/DPK) */
+	RTW_PRINT_SEL(sel, "RFK(IQK/DPK)\n");
+	for (i = 0x1B00; i < 0x1C00; i += 4) {
+		if (j % 4 == 1)
+			RTW_PRINT_SEL(sel, "0x%04x", i);
+		_RTW_PRINT_SEL(sel, " 0x%08x ", rtw_read32(adapter, i));
+		if ((j++) % 4 == 0)
+			_RTW_PRINT_SEL(sel, "\n");
+	}
+
+	/* Debug port */
+	RTW_PRINT_SEL(sel, "Debug port\n");
+	for (i = 0x2A00; i < 0x2B00; i += 4) {
+		if (j % 4 == 1)
+			RTW_PRINT_SEL(sel, "0x%04x", i);
+		_RTW_PRINT_SEL(sel, " 0x%08x ", rtw_read32(adapter, i));
+		if ((j++) % 4 == 0)
+			_RTW_PRINT_SEL(sel, "\n");
+	}
+
+	/* TSSI/DPK */
+	RTW_PRINT_SEL(sel, "TSSI/DPK\n");
+	for (i = 0x4200; i < 0x43C0; i += 4) {
+		if (j % 4 == 1)
+			RTW_PRINT_SEL(sel, "0x%04x", i);
+		_RTW_PRINT_SEL(sel, " 0x%08x ", rtw_read32(adapter, i));
+		if ((j++) % 4 == 0)
+			_RTW_PRINT_SEL(sel, "\n");
+	}
+#endif /* CONFIG_RTL8723F */
 }
 
 void bb_reg_dump_ex(void *sel, _adapter *adapter)
@@ -1130,6 +1169,61 @@ int proc_get_rx_stat(struct seq_file *m, void *v)
 	return 0;
 }
 
+int proc_get_sta_tx_stat(struct seq_file *m, void *v)
+{
+	struct net_device *dev = m->private;
+	_adapter *adapter = (_adapter *)rtw_netdev_priv(dev);
+	struct sta_priv	*stapriv = &(adapter->stapriv);
+	struct sta_priv	*stapriv_primary = &(GET_PRIMARY_ADAPTER(adapter))->stapriv;
+	struct sta_info *sta;
+	struct stainfo_stats *stats;
+	u8 mac[ETH_ALEN] = {0};
+	int ret = 0;
+
+	_rtw_memcpy(mac, stapriv_primary->c2h_sta_mac, ETH_ALEN);
+	sta = rtw_get_stainfo(stapriv, mac);
+	if (sta) {
+		ret = rtw_get_sta_tx_stat(adapter, sta->cmn.mac_id, sta->cmn.mac_addr);
+		stats = &sta->sta_stats;
+		RTW_PRINT_SEL(m, "MAC: " MAC_FMT " fail: %u retry: %u\n",
+			      MAC_ARG(mac), stats->tx_fail_cnt_sum, stats->tx_retry_cnt_sum);
+	} else
+		ret = -ENODATA;
+	return ret;
+}
+
+ssize_t proc_set_sta_tx_stat(struct file *file, const char __user *buffer, size_t count, loff_t *pos, void *data)
+{
+	struct net_device *dev = data;
+	_adapter *adapter = (_adapter *)rtw_netdev_priv(dev);
+	struct sta_priv	*stapriv_primary = &(GET_PRIMARY_ADAPTER(adapter))->stapriv;
+	char tmp[18] = {0};
+
+	if (count < 1)
+		return -EFAULT;
+
+	if (count > sizeof(tmp)) {
+		rtw_warn_on(1);
+		return -EFAULT;
+	}
+
+	if (!adapter->hal_func.reqtxrpt) {
+		RTW_INFO("Not support.\n");
+		return -ENOTSUPP;
+	}
+
+	if (buffer && !copy_from_user(tmp, buffer, count)) {
+		if (sscanf(tmp, MAC_SFMT, MAC_SARG(stapriv_primary->c2h_sta_mac)) != 6) {
+			_rtw_memset(stapriv_primary->c2h_sta_mac, 0, 6);
+			RTW_PRINT(FUNC_ADPT_FMT" Invalid format\n",
+				  FUNC_ADPT_ARG(adapter));
+		}
+
+	}
+
+	return count;
+}
+
 int proc_get_tx_stat(struct seq_file *m, void *v)
 {
 	_irqL	irqL;
@@ -1141,11 +1235,14 @@ int proc_get_tx_stat(struct seq_file *m, void *v)
 	uint mac_id[NUM_STA];
 	struct stainfo_stats	*pstats = NULL;
 	struct sta_priv	*pstapriv = &(adapter->stapriv);
-	struct sta_priv	*pstapriv_primary = &(GET_PRIMARY_ADAPTER(adapter))->stapriv;
 	u32 i, macid_rec_idx = 0;
 	u8 bc_addr[ETH_ALEN] = {0xff, 0xff, 0xff, 0xff, 0xff, 0xff};
 	u8 null_addr[ETH_ALEN] = {0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
-	struct submit_ctx gotc2h;
+
+	if (!adapter->hal_func.reqtxrpt) {
+		RTW_PRINT_SEL(m, "Not support.\n");
+		return 0;
+	}
 
 	_enter_critical_bh(&pstapriv->sta_hash_lock, &irqL);
 	for (i = 0; i < NUM_STA; i++) {
@@ -1165,16 +1262,11 @@ int proc_get_tx_stat(struct seq_file *m, void *v)
 	}
 	_exit_critical_bh(&pstapriv->sta_hash_lock, &irqL);
 	for (i = 0; i < macid_rec_idx; i++) {
-		_rtw_memcpy(pstapriv_primary->c2h_sta_mac, &sta_mac[i][0], ETH_ALEN);
-		pstapriv_primary->c2h_adapter_id = adapter->iface_id;
-		rtw_sctx_init(&gotc2h, 60);
-		pstapriv_primary->gotc2h = &gotc2h;
-		rtw_hal_reqtxrpt(adapter, mac_id[i]);
-		if (rtw_sctx_wait(&gotc2h, __func__)) {
+		if (rtw_get_sta_tx_stat(adapter, mac_id[i], &sta_mac[i][0]) == _SUCCESS) {
 			psta = rtw_get_stainfo(pstapriv, &sta_mac[i][0]);
 			if(psta) {
 				pstats = &psta->sta_stats;
-#ifndef ROKU_PRIVATE
+#if (!defined(ROKU_PRIVATE) && !defined(CONFIG_RTW_MULTI_AP))
 				RTW_PRINT_SEL(m, "data_sent_cnt :\t%u\n", pstats->tx_ok_cnt + pstats->tx_fail_cnt);
 				RTW_PRINT_SEL(m, "success_cnt :\t%u\n", pstats->tx_ok_cnt);
 				RTW_PRINT_SEL(m, "failure_cnt :\t%u\n", pstats->tx_fail_cnt);
@@ -1188,15 +1280,8 @@ int proc_get_tx_stat(struct seq_file *m, void *v)
 				RTW_PRINT_SEL(m, "STA is gone\n");
 		} else {
 			//to avoid c2h modify counters
-			pstapriv_primary->gotc2h = NULL;
-			_rtw_memset(pstapriv_primary->c2h_sta_mac, 0, ETH_ALEN);
-			pstapriv_primary->c2h_adapter_id = CONFIG_IFACE_NUMBER;
-			RTW_PRINT_SEL(m, "Warming : Query timeout, operation abort!!\n");
 			break;
 		}
-		pstapriv_primary->gotc2h = NULL;
-		_rtw_memset(pstapriv_primary->c2h_sta_mac, 0, ETH_ALEN);
-		pstapriv_primary->c2h_adapter_id = CONFIG_IFACE_NUMBER;
 	}
 	return 0;
 }
@@ -2234,6 +2319,7 @@ int proc_get_survey_info(struct seq_file *m, void *v)
 #else
 	const char *ssid_title_str = "ssid";
 #endif
+	u8 rsni = 255;
 
 	_enter_critical_bh(&(pmlmepriv->scanned_queue.lock), &irqL);
 	phead = get_list_head(queue);
@@ -2247,7 +2333,8 @@ int proc_get_survey_info(struct seq_file *m, void *v)
 	rtw_rson_show_survey_info(m, plist, phead);
 #else
 
-	RTW_PRINT_SEL(m, "%5s  %-17s  %3s  %-3s  %-4s  %-4s  %5s  %32s  %32s\n", "index", "bssid", "ch", "RSSI", "SdBm", "Noise", "age", "flag", ssid_title_str);
+	RTW_PRINT_SEL(m, "%5s  %-17s  %3s  %-3s  %-4s  %-4s  %4s  %5s  %32s  %32s \n",
+	"index", "bssid", "ch", "RSSI", "SdBm", "Noise", "rsni", "age", "flag", ssid_title_str);
 	while (1) {
 		if (rtw_end_of_queue_search(phead, plist) == _TRUE)
 			break;
@@ -2267,6 +2354,9 @@ int proc_get_survey_info(struct seq_file *m, void *v)
 		if (IS_NM_ENABLE(padapter))
 			notify_noise = rtw_noise_query_by_chan_num(padapter, pnetwork->network.Configuration.DSConfig);
 #endif
+#ifdef CONFIG_RTW_ACS
+		rsni = rtw_acs_get_rsni(padapter, (int)(pnetwork->network.Rssi), pnetwork->network.Configuration.DSConfig);
+#endif
 
 		ie_wpa = rtw_get_wpa_ie(&pnetwork->network.IEs[12], &ielen, pnetwork->network.IELength - 12);
 		ie_wpa2 = rtw_get_wpa2_ie(&pnetwork->network.IEs[12], &ielen, pnetwork->network.IELength - 12);
@@ -2285,13 +2375,14 @@ int proc_get_survey_info(struct seq_file *m, void *v)
 				(pnetwork->network.InfrastructureMode == Ndis802_11_mesh) ? "[MESH]" : "",
 			(ie_cap & BIT(0)) ? "[ESS]" : "",
 			(ie_p2p) ? "[P2P]" : "");
-		RTW_PRINT_SEL(m, "%5d  "MAC_FMT"  %3d  %3d  %4d  %4d    %5d  %32s  %32s\n",
+		RTW_PRINT_SEL(m, "%5d  "MAC_FMT"  %3d  %4d  %4d  %4d  %4d   %5d  %32s  %32s\n",
 			++index,
 			MAC_ARG(pnetwork->network.MacAddress),
 			pnetwork->network.Configuration.DSConfig,
 			(int)pnetwork->network.Rssi,
 			notify_signal,
 			notify_noise,
+			rsni,
 			rtw_get_passing_time_ms(pnetwork->last_scanned),
 			flag_str,
 			pnetwork->network.InfrastructureMode == Ndis802_11_mesh ? pnetwork->network.mesh_id.Ssid : pnetwork->network.Ssid.Ssid
@@ -2530,6 +2621,40 @@ int proc_get_ap_info(struct seq_file *m, void *v)
 	return 0;
 }
 
+inline void rtw_rx_dbg_ip_statistic_init(
+	char *pcmd, struct rtw_ip_dbg_cnt_statistic *pstatistic)
+{
+#define DBG_IP_ARG_IN(x) \
+		&((u8 *)(x))[0], &((u8 *)(x))[1], \
+		&((u8 *)(x))[2], &((u8 *)(x))[3]
+	/* Inpit : [iperf-client-ip]:[iperf-server-port] [iperf-version] */
+	int num = sscanf(pcmd, "%hhu.%hhu.%hhu.%hhu:%hu %hhx",
+					DBG_IP_ARG_IN(pstatistic->ip),
+					&pstatistic->dst_port,
+					&pstatistic->iperf_ver);
+	pstatistic->enabled = _TRUE;
+	pstatistic->defrag_done = _TRUE;
+}
+
+inline void rtw_rx_dbg_ip_statistic_rest(
+	struct rtw_ip_dbg_cnt_statistic *pstatistic, u8 off)
+{
+	pstatistic->ip_cnt = pstatistic->tcp_cnt = pstatistic->udp_cnt = \
+	pstatistic->frag_cnt = pstatistic->iperf_seq = pstatistic->iperf_err_cnt = \
+	pstatistic->iperf_out_of_order_cnt = 0;
+
+	pstatistic->ip_seq_chk = 0;
+	pstatistic->frag_offset_chk = pstatistic->max_frag_offset_chk = 0;
+	pstatistic->defrag_done = _TRUE;
+
+	if (off) {
+		pstatistic->enabled = _FALSE;
+		pstatistic->iperf_ver = 0;
+		pstatistic->dst_port = 0;
+		_rtw_memset(&pstatistic->ip, 0, 4);
+	}
+}
+
 ssize_t proc_reset_trx_info(struct file *file, const char __user *buffer, size_t count, loff_t *pos, void *data)
 {
 	struct net_device *dev = data;
@@ -2544,7 +2669,11 @@ ssize_t proc_reset_trx_info(struct file *file, const char __user *buffer, size_t
 	}
 
 	if (buffer && !copy_from_user(cmd, buffer, count)) {
-		int num = sscanf(cmd, "%hhx", &cnt);
+		int num = 0;
+		if (count > 12)
+			rtw_rx_dbg_ip_statistic_init(cmd, &(precvpriv->ip_statistic));
+		else
+			num = sscanf(cmd, "%hhx", &cnt);
 
 		if (num == 1 && cnt == 0) {
 			precvpriv->dbg_rx_ampdu_drop_count = 0;
@@ -2554,6 +2683,11 @@ ssize_t proc_reset_trx_info(struct file *file, const char __user *buffer, size_t
 			precvpriv->dbg_rx_ampdu_window_shift_cnt = 0;
 			precvpriv->dbg_rx_conflic_mac_addr_cnt = 0;
 			precvpriv->dbg_rx_drop_count = 0;
+			/* Reset ip packet statistic */
+			rtw_rx_dbg_ip_statistic_rest(&(precvpriv->ip_statistic), 0);
+		} else if ((num == 1) && (cnt == 2)) {
+			/* Disable ip packet statistic */
+			rtw_rx_dbg_ip_statistic_rest(&(precvpriv->ip_statistic), 1);
 		}
 	}
 
@@ -2600,6 +2734,9 @@ int proc_get_trx_info(struct seq_file *m, void *v)
 
 #ifdef CONFIG_USB_HCI
 	RTW_PRINT_SEL(m, "rx_urb_pending_cn=%d\n", ATOMIC_READ(&(precvpriv->rx_pending_cnt)));
+#ifdef CONFIG_USB_PROTECT_RX_CLONED_SKB
+	RTW_PRINT_SEL(m, "rx_cloned_skb_pending_cn=%d\n", skb_queue_len(&precvpriv->rx_cloned_skb_queue));
+#endif
 #endif
 
 	dump_rx_bh_tk(m, &GET_PRIMARY_ADAPTER(padapter)->recvpriv);
@@ -2616,6 +2753,21 @@ int proc_get_trx_info(struct seq_file *m, void *v)
 	RTW_PRINT_SEL(m, "Rx: AMPDU BA window shift Count: %llu\n", (unsigned long long)precvpriv->dbg_rx_ampdu_window_shift_cnt);
 	/*The same mac addr counts*/
 	RTW_PRINT_SEL(m, "Rx: Conflict MAC Address Frames Count: %llu\n", (unsigned long long)precvpriv->dbg_rx_conflic_mac_addr_cnt);
+
+	if (precvpriv->ip_statistic.enabled) {
+		RTW_PRINT_SEL(m,"Rx : %u IP Packets, Frag %u at "IP_FMT":%u\n",
+				precvpriv->ip_statistic.ip_cnt, precvpriv->ip_statistic.frag_cnt,
+				IP_ARG(precvpriv->ip_statistic.ip), precvpriv->ip_statistic.dst_port);
+		RTW_PRINT_SEL(m, "Rx: TCP Count: %u, UDP Count : %u\n",
+				precvpriv->ip_statistic.tcp_cnt, precvpriv->ip_statistic.udp_cnt);
+
+		if (precvpriv->ip_statistic.iperf_ver > 0)
+			RTW_PRINT_SEL(m, "Rx: Iperf Packet: %u, Error : %u, Out-of-Order: %u,\n",
+				precvpriv->ip_statistic.iperf_seq, precvpriv->ip_statistic.iperf_err_cnt,
+				precvpriv->ip_statistic.iperf_out_of_order_cnt);
+		/* Reset ip packet statistic */
+		rtw_rx_dbg_ip_statistic_rest(&(precvpriv->ip_statistic), 0);
+	}
 	return 0;
 }
 
@@ -4678,7 +4830,8 @@ int proc_get_all_sta_info(struct seq_file *m, void *v)
 					RTW_PRINT_SEL(m,"Vendor Realtek 8812\n");
 #endif/*CONFIG_RTS_FULL_BW*/
 #ifdef CONFIG_80211N_HT
-				RTW_PRINT_SEL(m, "qos_en=%d, ht_en=%d, init_rate=%d\n", psta->qos_option, psta->htpriv.ht_option, psta->init_rate);
+				RTW_PRINT_SEL(m, "qos_en=%d, ht_en=%d, init_rate=%d, ht_bitrate=%u\n", psta->qos_option, psta->htpriv.ht_option, psta->init_rate
+					, rtw_desc_rate_to_bitrate(psta->cmn.bw_mode, psta->init_rate, psta->cmn.bw_mode ? psta->htpriv.sgi_40m : psta->htpriv.sgi_20m) / 10);
 				RTW_PRINT_SEL(m, "bwmode=%d, ch_offset=%d, sgi_20m=%d,sgi_40m=%d\n"
 					, psta->cmn.bw_mode, psta->htpriv.ch_offset, psta->htpriv.sgi_20m, psta->htpriv.sgi_40m);
 				RTW_PRINT_SEL(m, "ampdu_enable = %d\n", psta->htpriv.ampdu_enable);
@@ -4686,7 +4839,8 @@ int proc_get_all_sta_info(struct seq_file *m, void *v)
 				RTW_PRINT_SEL(m, "agg_enable_bitmap=%x, candidate_tid_bitmap=%x\n", psta->htpriv.agg_enable_bitmap, psta->htpriv.candidate_tid_bitmap);
 #endif /* CONFIG_80211N_HT */
 #ifdef CONFIG_80211AC_VHT
-				RTW_PRINT_SEL(m, "vht_en=%d, vht_sgi_80m=%d\n", psta->vhtpriv.vht_option, psta->vhtpriv.sgi_80m);
+				RTW_PRINT_SEL(m, "vht_en=%d, vht_sgi_80m=%d, vht_bitrate=%u\n", psta->vhtpriv.vht_option, psta->vhtpriv.sgi_80m
+					, psta->vhtpriv.vht_option ? rtw_vht_mcs_to_data_rate(CHANNEL_WIDTH_80, psta->vhtpriv.sgi_80m, psta->vhtpriv.vht_highest_rate) / 2 : 0);
 				RTW_PRINT_SEL(m, "vht_ldpc_cap=0x%x, vht_stbc_cap=0x%x, vht_beamform_cap=0x%x\n", psta->vhtpriv.ldpc_cap, psta->vhtpriv.stbc_cap, psta->vhtpriv.beamform_cap);
 				RTW_PRINT_SEL(m, "vht_mcs_map=0x%x, vht_highest_rate=0x%x, vht_ampdu_len=%d\n", *(u16 *)psta->vhtpriv.vht_mcs_map, psta->vhtpriv.vht_highest_rate, psta->vhtpriv.ampdu_len);
 #endif
@@ -5738,7 +5892,7 @@ ssize_t proc_set_wakeup_event(struct file *file, const char __user *buffer,
 	else
 		return -EFAULT;
 
-	if (num == 1 && wakeup_event <= 0x0f) {
+	if (num == 1 && wakeup_event <= 0x07) {
 		registry_par->wakeup_event = wakeup_event;
 
 		if (wakeup_event & BIT(1))
@@ -6816,9 +6970,22 @@ int proc_get_efuse_map(struct seq_file *m, void *v)
 #endif
 
 	{
-		RTW_PRINT_SEL(m, "Driver eFuse Map From HW\n");
-		if (pHalData->bautoload_fail_flag)
-			RTW_PRINT_SEL(m, "HW Autoload fail!!!\n");
+#ifdef CONFIG_MP_INCLUDED
+		if (rtw_mp_mode_check(padapter)) {
+			PEFUSE_HAL pEfuseHal = &pHalData->EfuseHal;
+
+			if (GET_EFUSE_UPDATE_ON(padapter))
+				RTW_PRINT_SEL(m, "Driver eFuse Map From fake\n");
+			else
+				RTW_PRINT_SEL(m, "Driver eFuse Map From HW\n");
+		} else
+#endif		
+		{
+			RTW_PRINT_SEL(m, "Driver eFuse Map From HW\n");
+
+			if (pHalData->bautoload_fail_flag)
+				RTW_PRINT_SEL(m, "HW Autoload fail!!!\n");
+		}
 	}
 	for (i = 0; i < mapLen; i += 16) {
 		RTW_PRINT_SEL(m, "0x%02x\t", i);
@@ -8184,6 +8351,65 @@ int proc_get_smps(struct seq_file *m, void *v)
 }
 #endif /*CONFIG_SUPPORT_STATIC_SMPS*/
 
+#if defined(CONFIG_CONCURRENT_MODE) && defined(CONFIG_AP_MODE)
+ssize_t proc_set_ap_csa_cnt(struct file *file, const char __user *buffer, size_t count, loff_t *pos, void *data)
+{
+	struct net_device *dev = data;
+	_adapter *adapter = (_adapter *)rtw_netdev_priv(dev);
+	struct rf_ctl_t *rfctl;
+	char tmp[6];
+	u8 ap_csa_cnt;
+	rfctl = adapter_to_rfctl(adapter);
+
+	if (buffer == NULL) {
+		RTW_INFO("input buffer is NULL!\n");
+		return -EFAULT;
+	}
+
+	if (count < 1) {
+		RTW_INFO("input length is 0!\n");
+		return -EFAULT;
+	}
+
+	if (count > sizeof(tmp)) {
+		RTW_INFO("input length is too large\n");
+		rtw_warn_on(1);
+		return -EFAULT;
+	}
+
+	if (buffer && !copy_from_user(tmp, buffer, count)) {
+		int num = sscanf(tmp, "%hhu", &ap_csa_cnt);
+
+		if (num < 1) {
+			RTW_INFO("input parameters < 1\n");
+			return -EINVAL;
+		}
+
+		if (ap_csa_cnt > MAX_CSA_CNT) {
+			RTW_INFO("ap_csa_cnt can't set more than %u, so driver force ap_csa_cnt to %u.\n", MAX_CSA_CNT, MAX_CSA_CNT);
+			ap_csa_cnt = MAX_CSA_CNT;
+		}
+
+		RTW_INFO("set rfctl->ap_csa_cnt_input to %u\n", ap_csa_cnt);
+		rfctl->ap_csa_cnt_input = ap_csa_cnt;
+	}
+
+	return count;
+}
+
+int proc_get_ap_csa_cnt(struct seq_file *m, void *v)
+{
+	struct net_device *dev = m->private;
+	_adapter *adapter = (_adapter *)rtw_netdev_priv(dev);
+	struct rf_ctl_t *rfctl;
+	rfctl = adapter_to_rfctl(adapter);
+
+	RTW_PRINT_SEL(m, "ap_csa_switch_cnt = %u\n", rfctl->ap_csa_cnt_input);
+
+	return 0;
+}
+#endif
+
 #endif /* CONFIG_PROC_DEBUG */
 #define RTW_BUFDUMP_BSIZE		16
 #if 1
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/core/rtw_eeprom.c b/drivers/net/wireless/rockchip_wlan/rtl8821cs/core/rtw_eeprom.c
index 3a7857b4ef48..62c0be06ce3a 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/core/rtw_eeprom.c
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/core/rtw_eeprom.c
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/core/rtw_ft.c b/drivers/net/wireless/rockchip_wlan/rtl8821cs/core/rtw_ft.c
index 2260f876ebe6..62b9b4417b51 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/core/rtw_ft.c
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/core/rtw_ft.c
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017 Realtek Corporation.
@@ -287,6 +286,8 @@ void rtw_ft_update_bcn(_adapter *padapter, union recv_frame *precv_frame)
 			check_assoc_AP(pframe+sizeof(struct rtw_ieee80211_hdr_3addr),
 				(len - sizeof(struct rtw_ieee80211_hdr_3addr)));
 
+		rtw_phydm_update_ap_vendor_ie(padapter);
+
 		/* update TSF Value */
 		update_TSF(pmlmeext, pframe, len);
 		pmlmeext->bcn_cnt = 0;
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/core/rtw_ieee80211.c b/drivers/net/wireless/rockchip_wlan/rtl8821cs/core/rtw_ieee80211.c
index b7b1a4ad199b..554407cba667 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/core/rtw_ieee80211.c
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/core/rtw_ieee80211.c
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017 Realtek Corporation.
@@ -267,7 +266,7 @@ u8 *rtw_set_ie
 (
 	u8 *pbuf,
 	sint index,
-	uint len,
+	uint len, /* IE content length, not entire IE length */
 	const u8 *source,
 	uint *frlen /* frame length */
 )
@@ -285,6 +284,15 @@ u8 *rtw_set_ie
 	return pbuf + len + 2;
 }
 
+u8 *rtw_set_ie_tpc_report(u8 *buf, u32 *buf_len, u8 tx_power, u8 link_margin)
+{
+	u8 ie_data[2];
+
+	ie_data[0] = tx_power;
+	ie_data[1] = link_margin;
+	return rtw_set_ie(buf, WLAN_EID_TPC_REPORT,  2, ie_data, buf_len);
+}
+
 inline u8 *rtw_set_ie_ch_switch(u8 *buf, u32 *buf_len, u8 ch_switch_mode,
 				u8 new_ch, u8 ch_switch_cnt)
 {
@@ -414,6 +422,61 @@ u8 *rtw_get_ie_ex(const u8 *in_ie, uint in_len, u8 eid, const u8 *oui, u8 oui_le
 	return (u8 *)target_ie;
 }
 
+/**
+ * rtw_ies_update_ie - Find matching IEs and update it
+ *
+ * @ies: address of IEs to search
+ * @ies_len: address of length of ies, will update to new length
+ * @offset: the offset to start scarch
+ * @eid: element ID to match
+ * @content: new content will update to matching element
+ * @content_len: length of new content
+ * Returns: _SUCCESS: ies is updated, _FAIL: not updated
+ */
+u8 rtw_ies_update_ie(u8 *ies, uint *ies_len, uint ies_offset, u8 eid, const u8 *content, u8 content_len)
+{
+	u8 ret = _FAIL;
+	u8 *target_ie;
+	u32 target_ielen;
+	u8 *start, *remain_ies = NULL, *backup_ies = NULL;
+	uint search_len, remain_len = 0;
+	sint offset;
+
+	if (ies == NULL || *ies_len == 0 || *ies_len <= ies_offset)
+		goto exit;
+
+	start = ies + ies_offset;
+	search_len = *ies_len - ies_offset;
+
+	target_ie = rtw_get_ie(start, eid, &target_ielen, search_len);
+	if (target_ie && target_ielen) {
+		if (target_ielen != content_len) {
+			remain_ies = target_ie + 2 + target_ielen;
+			remain_len = search_len - (remain_ies - start);
+
+			backup_ies = rtw_malloc(remain_len);
+			if (!backup_ies)
+				goto exit;
+
+			_rtw_memcpy(backup_ies, remain_ies, remain_len);
+		}
+
+		_rtw_memcpy(target_ie + 2, content, content_len);
+		*(target_ie + 1) = content_len;
+		ret = _SUCCESS;
+
+		if (target_ielen != content_len) {
+			remain_ies = target_ie + 2 + content_len;
+			_rtw_memcpy(remain_ies, backup_ies, remain_len);
+			rtw_mfree(backup_ies, remain_len);
+			offset = content_len - target_ielen;
+			*ies_len = *ies_len + offset;
+		}
+	}
+exit:
+	return ret;
+}
+
 /**
  * rtw_ies_remove_ie - Find matching IEs and remove
  * @ies: Address of IEs to search
@@ -977,7 +1040,7 @@ int rtw_rsne_info_parse(const u8 *ie, uint ie_len, struct rsne_info *info)
 }
 
 int rtw_parse_wpa2_ie(u8 *rsn_ie, int rsn_ie_len, int *group_cipher,
-	int *pairwise_cipher, int *gmcs, u32 *akm, u8 *mfp_opt)
+	int *pairwise_cipher, int *gmcs, u32 *akm, u8 *mfp_opt, u8 *spp_opt)
 {
 	struct rsne_info info;
 	int i, ret = _SUCCESS;
@@ -1022,6 +1085,12 @@ int rtw_parse_wpa2_ie(u8 *rsn_ie, int rsn_ie_len, int *group_cipher,
 			*mfp_opt = GET_RSN_CAP_MFP_OPTION(info.cap);
 	}
 
+	if (spp_opt) {
+		*spp_opt = 0;
+		if (info.cap)
+			*spp_opt = GET_RSN_CAP_SPP_OPT(info.cap);
+	}
+
 exit:
 	return ret;
 }
@@ -1268,6 +1337,7 @@ u8 *rtw_get_wps_attr(u8 *wps_ie, uint wps_ielen, u16 target_attr_id , u8 *buf_at
  * @wps_ielen: Length limit from wps_ie
  * @target_attr_id: The attribute ID of WPS attribute to search
  * @buf_content: If not NULL and the WPS attribute is found, WPS attribute content will be copied to the buf starting from buf_content
+ *               If len_content is NULL, only copy one byte.
  * @len_content: If not NULL and the WPS attribute is found, will set to the length of the WPS attribute content
  *
  * Returns: the address of the specific WPS attribute content found, or NULL
@@ -1277,21 +1347,26 @@ u8 *rtw_get_wps_attr_content(u8 *wps_ie, uint wps_ielen, u16 target_attr_id , u8
 	u8 *attr_ptr;
 	u32 attr_len;
 
-	if (len_content)
-		*len_content = 0;
-
 	attr_ptr = rtw_get_wps_attr(wps_ie, wps_ielen, target_attr_id, NULL, &attr_len);
 
 	if (attr_ptr && attr_len) {
-		if (buf_content)
-			_rtw_memcpy(buf_content, attr_ptr + 4, attr_len - 4);
+		if (len_content) {
+			if ((buf_content && (*len_content > (attr_len - 4))) || !buf_content)
+				*len_content = attr_len - 4;
+		}
 
-		if (len_content)
-			*len_content = attr_len - 4;
+		if (len_content && buf_content) {
+			_rtw_memcpy(buf_content, attr_ptr + 4, *len_content);
+		} else if (buf_content) {
+			_rtw_memcpy(buf_content, attr_ptr + 4, 1);
+		}
 
 		return attr_ptr + 4;
 	}
 
+	if (len_content)
+		*len_content = 0;
+
 	return NULL;
 }
 
@@ -1351,6 +1426,102 @@ u8 *rtw_get_owe_ie(const u8 *in_ie, uint in_len, u8 *owe_ie, uint *owe_ielen)
 	return (u8 *)oweie_ptr;
 }
 
+/* Add extended capabilities element infomation into ext_cap_data of driver */
+void rtw_add_ext_cap_info(u8 *ext_cap_data, u8 *ext_cap_data_len, u8 cap_info)
+{
+	u8 byte_offset = cap_info >> 3;
+	u8 bit_offset = cap_info % 8;
+
+	ext_cap_data[byte_offset] |= BIT(bit_offset);
+
+	/* Enlarge the length of EXT_CAP_IE */
+	if (byte_offset + 1 > *ext_cap_data_len)
+		*ext_cap_data_len = byte_offset + 1;
+
+	#ifdef DBG_EXT_CAP_IE
+	RTW_INFO("%s : cap_info = %u, byte_offset = %u, bit_offset = %u, ext_cap_data_len = %u\n", \
+			__func__, cap_info, byte_offset, bit_offset, *ext_cap_data_len);
+	#endif
+}
+
+/* Remvoe extended capabilities element infomation from ext_cap_data of driver */
+void rtw_remove_ext_cap_info(u8 *ext_cap_data, u8 *ext_cap_data_len, u8 cap_info)
+{
+	u8 byte_offset = cap_info >> 3;
+	u8 bit_offset = cap_info % 8;
+	u8 i, max_len = 0;
+
+	ext_cap_data[byte_offset] &= (~BIT(bit_offset));
+
+	/* Reduce the length of EXT_CAP_IE */
+	for (i = 0; i < WLAN_EID_EXT_CAP_MAX_LEN; i++) {
+		if (ext_cap_data[i] != 0x0)
+			max_len = i + 1;
+	}
+	*ext_cap_data_len = max_len;
+
+	#ifdef DBG_EXT_CAP_IE
+	RTW_INFO("%s : cap_info = %u, byte_offset = %u, bit_offset = %u, ext_cap_data_len = %u\n", \
+			__func__, cap_info, byte_offset, bit_offset, *ext_cap_data_len);
+	#endif
+}
+
+/**
+ * rtw_update_ext_cap_ie - add/update/remove the extended capabilities element of frame
+ *
+ * @ext_cap_data: from &(mlme_priv->ext_capab_ie_data)
+ * @ext_cap_data_len: length of ext_cap_data
+ * @ies: address of ies, e.g. pnetwork->IEs
+ * @ies_len: address of length of ies, e.g. &(pnetwork->IELength)
+ * @ies_offset: offset of ies, e.g. _BEACON_IE_OFFSET_
+ */
+u8 rtw_update_ext_cap_ie(u8 *ext_cap_data, u8 ext_cap_data_len, u8 *ies, u32 *ies_len, u8 ies_offset)
+{
+	u8 *extcap_ie;
+	uint extcap_len_field = 0;
+	uint ie_len = 0;
+
+	if (ext_cap_data_len != 0) {
+		extcap_ie = rtw_get_ie(ies + ies_offset, WLAN_EID_EXT_CAP, &extcap_len_field, *ies_len - ies_offset);
+
+		if (extcap_ie == NULL) {
+			rtw_set_ie(ies + *ies_len, WLAN_EID_EXT_CAP, ext_cap_data_len, ext_cap_data, &ie_len);
+			*ies_len += ie_len;
+		} else {
+			rtw_ies_update_ie(ies, ies_len, ies_offset, WLAN_EID_EXT_CAP, ext_cap_data, ext_cap_data_len);
+		}
+	} else {
+		rtw_ies_remove_ie(ies, ies_len, ies_offset, WLAN_EID_EXT_CAP, NULL, 0);
+	}
+
+	return _SUCCESS;
+}
+
+void rtw_parse_ext_cap_ie(u8 *ext_cap_data, u8 *ext_cap_data_len, u8 *ies, u32 ies_len, u8 ies_offset)
+{
+	u8 *extcap_ie;
+	uint extcap_len_field = 0;
+	u8 i;
+
+	extcap_ie = rtw_get_ie(ies + ies_offset, WLAN_EID_EXT_CAP, &extcap_len_field, ies_len - ies_offset);
+
+	if (extcap_ie != NULL) {
+		extcap_ie = extcap_ie + 2; /* element id and length filed */
+		if (*ext_cap_data_len == 0) {
+			_rtw_memcpy(ext_cap_data, extcap_ie, extcap_len_field);
+			*ext_cap_data_len = extcap_len_field;
+		} else {
+			for (i = 0; i < extcap_len_field; i++)
+				ext_cap_data[i] |= extcap_ie[i];
+		}
+
+		#ifdef DBG_EXT_CAP_IE
+		for (i = 0; i < extcap_len_field; i++)
+			RTW_INFO("%s : Parse extended capabilties[%u] = 0x%x\n", __func__, i, extcap_ie[i]);
+		#endif
+	}
+}
+
 static int rtw_ieee802_11_parse_vendor_specific(u8 *pos, uint elen,
 		struct rtw_ieee802_11_elems *elems,
 		int show_errors)
@@ -2315,6 +2486,7 @@ u8 *rtw_get_p2p_attr(u8 *p2p_ie, uint p2p_ielen, u8 target_attr_id , u8 *buf_att
  * @p2p_ielen: Length limit from p2p_ie
  * @target_attr_id: The attribute ID of P2P attribute to search
  * @buf_content: If not NULL and the P2P attribute is found, P2P attribute content will be copied to the buf starting from buf_content
+ *               If len_content is NULL, only copy one byte.
  * @len_content: If not NULL and the P2P attribute is found, will set to the length of the P2P attribute content
  *
  * Returns: the address of the specific P2P attribute content found, or NULL
@@ -2324,21 +2496,26 @@ u8 *rtw_get_p2p_attr_content(u8 *p2p_ie, uint p2p_ielen, u8 target_attr_id , u8
 	u8 *attr_ptr;
 	u32 attr_len;
 
-	if (len_content)
-		*len_content = 0;
-
 	attr_ptr = rtw_get_p2p_attr(p2p_ie, p2p_ielen, target_attr_id, NULL, &attr_len);
 
 	if (attr_ptr && attr_len) {
-		if (buf_content)
-			_rtw_memcpy(buf_content, attr_ptr + 3, attr_len - 3);
+		if (len_content) {
+			if ((buf_content && (*len_content > (attr_len - 3))) || !buf_content)
+				*len_content = attr_len - 3;
+		}
 
-		if (len_content)
-			*len_content = attr_len - 3;
+		if (len_content && buf_content) {
+			_rtw_memcpy(buf_content, attr_ptr + 3, *len_content);
+		} else if (buf_content) {
+			_rtw_memcpy(buf_content, attr_ptr + 3, 1);
+		}
 
 		return attr_ptr + 3;
 	}
 
+	if (len_content)
+		*len_content = 0;
+
 	return NULL;
 }
 
@@ -3164,3 +3341,53 @@ const char *action_public_str(u8 action)
 	return _action_public_str[action];
 }
 
+#if 0
+/*tmp for sta mode, root cause have to wait supplicant's update.*/
+void rtw_set_spp_amsdu_mode(u8 mode, u8 *rsn_ie, int rsn_ie_len)
+{
+	struct rsne_info info;
+	int i, ret = _SUCCESS;
+	u8 spp_req_cap = 0;
+
+	ret = rtw_rsne_info_parse(rsn_ie, rsn_ie_len, &info);
+	if (ret != _SUCCESS)
+		return;
+
+	if (mode == RTW_AMSDU_MODE_NON_SPP ) {
+		spp_req_cap = 0; 						/* SPP_CAP=0, SPP_REQ=0 */
+	} else if (mode == RTW_AMSDU_MODE_SPP) {
+		spp_req_cap = SPP_CAP | SPP_REQ;
+	} else if (mode == RTW_AMSDU_MODE_ALL_DROP) {
+		spp_req_cap = SPP_REQ; 					/* SPP_CAP=0, SPP_REQ=1 */
+	} else {
+		RTW_INFO("%s unexpected mode = %d, please check the config\n", __func__, mode);
+		return;
+	}
+
+	SET_RSN_CAP_SPP(info.cap, spp_req_cap);
+	RTW_INFO("%s set spp opt = %d\n", __func__, GET_RSN_CAP_SPP_OPT(info.cap));
+}
+#endif
+
+/*	Returns:
+	_TRUE	-- 	Disable AMSDU
+	_FALSE	--	Enable AMSDU
+*/
+u8 rtw_check_amsdu_disable(u8 mode, u8 spp_opt)
+{
+	u8 ret = _FALSE;
+
+	/* pp amsdu: peer's required has to be 0, or disable */
+	if ((mode == RTW_AMSDU_MODE_NON_SPP) && (spp_opt & SPP_REQ))
+		ret = _TRUE;
+	/* spp amsdu: peer's cap has to be 1, or disable */
+	else if ((mode == RTW_AMSDU_MODE_SPP) && (!(spp_opt & SPP_CAP)))
+		ret = _TRUE;
+	/* mode = all drop */
+	else if (mode == RTW_AMSDU_MODE_ALL_DROP)
+		ret = _TRUE;
+	else
+		ret = _FALSE;
+	return ret;
+}
+
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/core/rtw_io.c b/drivers/net/wireless/rockchip_wlan/rtl8821cs/core/rtw_io.c
index ccea686e4223..c5e2fa08005f 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/core/rtw_io.c
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/core/rtw_io.c
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017 Realtek Corporation.
@@ -547,6 +546,12 @@ const struct rtw_io_sniff_ent write_sniff[] = {
 	RTW_IO_SNIFF_EN_ENT(MAX_CHIP_TYPE, RTW_USB, 0x02, 0x1E0, 1, "USB 0x02[8:5] not all 0"),
 	RTW_IO_SNIFF_EN_ENT(MAX_CHIP_TYPE, RTW_PCIE, 0x02, 0x01C, 1, "PCI 0x02[4:2] not all 0"),
 #endif
+#ifdef DBG_IO_SIFS_SETTING
+	RTW_IO_SNIFF_RANGE_ENT(MAX_CHIP_TYPE, 0, 0x428, 0x429, 0, "SIFS"),
+	RTW_IO_SNIFF_RANGE_ENT(MAX_CHIP_TYPE, 0, 0x514, 0x517, 0, "SIFS"),
+	RTW_IO_SNIFF_RANGE_ENT(MAX_CHIP_TYPE, 0, 0x63a, 0x63b, 0, "SIFS"),
+	RTW_IO_SNIFF_RANGE_ENT(MAX_CHIP_TYPE, 0, 0x63c, 0x63f, 0, "SIFS"),
+#endif
 #ifdef DBG_IO_8822C_1TX_PATH_EN
 	RTW_IO_SNIFF_VALUE_ENT(RTL8822C, 0, 0x1a04, 0xc0000000, 0x02, 1, 0, "write tx_path_en_cck A enabled"),
 	RTW_IO_SNIFF_VALUE_ENT(RTL8822C, 0, 0x1a04, 0xc0000000, 0x01, 1, 0, "write tx_path_en_cck B enabled"),
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/core/rtw_ioctl_query.c b/drivers/net/wireless/rockchip_wlan/rtl8821cs/core/rtw_ioctl_query.c
index e608273c7de9..939213843584 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/core/rtw_ioctl_query.c
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/core/rtw_ioctl_query.c
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/core/rtw_ioctl_set.c b/drivers/net/wireless/rockchip_wlan/rtl8821cs/core/rtw_ioctl_set.c
index 7c005d4a6914..96126ebbef48 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/core/rtw_ioctl_set.c
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/core/rtw_ioctl_set.c
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2019 Realtek Corporation.
@@ -138,8 +137,17 @@ u8 rtw_do_join(_adapter *padapter)
 		_exit_critical_bh(&(pmlmepriv->scanned_queue.lock), &irqL);
 		select_ret = rtw_select_and_join_from_scanned_queue(pmlmepriv);
 		if (select_ret == _SUCCESS) {
+			u32 join_timeout = MAX_JOIN_TIMEOUT;
+
+#if defined(CONFIG_CONCURRENT_MODE) && defined(CONFIG_AP_MODE)
+			struct rf_ctl_t *rfctl;
+			rfctl = adapter_to_rfctl(padapter);
+			if (rfctl->ap_csa_en == CSA_STA_JOINBSS)
+				join_timeout += (rfctl->ap_csa_switch_cnt * 100);
+#endif
+
 			pmlmepriv->to_join = _FALSE;
-			_set_timer(&pmlmepriv->assoc_timer, MAX_JOIN_TIMEOUT);
+			_set_timer(&pmlmepriv->assoc_timer, join_timeout);
 		} else {
 			if (check_fwstate(pmlmepriv, WIFI_ADHOC_STATE) == _TRUE) {
 				#ifdef CONFIG_AP_MODE
@@ -881,12 +889,12 @@ int rtw_set_scan_mode(_adapter *adapter, RT_SCAN_TYPE scan_mode)
 *
 * Return _SUCCESS or _FAIL
 */
-int rtw_set_channel_plan(_adapter *adapter, u8 channel_plan)
+int rtw_set_channel_plan(_adapter *adapter, u8 channel_plan, u8 chplan_6g, enum rtw_regd_inr inr)
 {
 	struct registry_priv *regsty = adapter_to_regsty(adapter);
 
 	if (!REGSTY_REGD_SRC_FROM_OS(regsty))
-		return rtw_set_chplan_cmd(adapter, RTW_CMDF_WAIT_ACK, channel_plan, 1);
+		return rtw_set_chplan_cmd(adapter, RTW_CMDF_WAIT_ACK, channel_plan, chplan_6g, inr);
 	RTW_WARN("%s(): not applied\n", __func__);
 	return _SUCCESS;
 }
@@ -898,13 +906,13 @@ int rtw_set_channel_plan(_adapter *adapter, u8 channel_plan)
 *
 * Return _SUCCESS or _FAIL
 */
-int rtw_set_country(_adapter *adapter, const char *country_code)
+int rtw_set_country(_adapter *adapter, const char *country_code, enum rtw_regd_inr inr)
 {
 #ifdef CONFIG_RTW_IOCTL_SET_COUNTRY
 	struct registry_priv *regsty = adapter_to_regsty(adapter);
 
 	if (!REGSTY_REGD_SRC_FROM_OS(regsty))
-		return rtw_set_country_cmd(adapter, RTW_CMDF_WAIT_ACK, country_code, 1);
+		return rtw_set_country_cmd(adapter, RTW_CMDF_WAIT_ACK, country_code, inr);
 #endif
 	RTW_WARN("%s(): not applied\n", __func__);
 	return _SUCCESS;
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/core/rtw_iol.c b/drivers/net/wireless/rockchip_wlan/rtl8821cs/core/rtw_iol.c
index cca65454f659..714a3f44ede9 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/core/rtw_iol.c
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/core/rtw_iol.c
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/core/rtw_mbo.c b/drivers/net/wireless/rockchip_wlan/rtl8821cs/core/rtw_mbo.c
index 3f195d81d174..20da58fca833 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/core/rtw_mbo.c
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/core/rtw_mbo.c
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017 Realtek Corporation.
@@ -409,7 +408,7 @@ void rtw_mbo_build_exented_cap(
 	rtw_wnm_set_ext_cap_btm(content, 1);
 	rtw_mbo_set_ext_cap_internw(content, 1);
 	*pframe = rtw_set_ie(*pframe, 
-				EID_EXTCapability, 
+				WLAN_EID_EXT_CAP, 
 				8, 
 				content, 
 				&(pattrib->pktlen));
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/core/rtw_mem.c b/drivers/net/wireless/rockchip_wlan/rtl8821cs/core/rtw_mem.c
index 3a262de1d7ec..d42a4fb038c6 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/core/rtw_mem.c
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/core/rtw_mem.c
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2016 - 2017 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/core/rtw_mi.c b/drivers/net/wireless/rockchip_wlan/rtl8821cs/core/rtw_mi.c
index ba91b96e0419..72d41f77503c 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/core/rtw_mi.c
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/core/rtw_mi.c
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2019 Realtek Corporation.
@@ -833,6 +832,20 @@ void rtw_mi_buddy_beacon_update(_adapter *padapter)
 {
 	_rtw_mi_process(padapter, _TRUE, NULL, _rtw_mi_beacon_update);
 }
+
+static u8 _rtw_mi_update_csa(_adapter *adapter, void *data)
+{
+	struct rf_ctl_t *rfctl = adapter_to_rfctl(adapter);
+	
+	if (check_fwstate(&adapter->mlmepriv, WIFI_AP_STATE) == _TRUE)
+		_update_beacon(adapter, WLAN_EID_CHANNEL_SWITCH, NULL, _TRUE, 0, "update CSA count");
+	return _TRUE;
+}
+
+void rtw_mi_update_csa(_adapter *adapter)
+{
+	_rtw_mi_process(adapter, _FALSE, NULL, _rtw_mi_update_csa);
+}
 #endif /* CONFIG_AP_MODE */
 
 #ifndef CONFIG_MI_WITH_MBSSID_CAM
@@ -1545,3 +1558,22 @@ u8 rtw_mi_get_assoc_if_num(_adapter *adapter)
 #endif
 	return n_assoc_iface;
 }
+
+_adapter *rtw_mi_get_linking_adapter(_adapter *adapter)
+{
+	struct dvobj_priv *dvobj = adapter_to_dvobj(adapter);
+	_adapter *iface = NULL;
+	u8 i;
+
+	for (i = 0; i < dvobj->iface_nums; i++) {
+		iface = dvobj->padapters[i];
+		if (!iface)
+			continue;
+
+		if (check_fwstate(&iface->mlmepriv, WIFI_UNDER_LINKING) == _TRUE)
+			break;
+
+		iface = NULL;
+	}
+	return iface;
+}
\ No newline at end of file
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/core/rtw_mlme.c b/drivers/net/wireless/rockchip_wlan/rtl8821cs/core/rtw_mlme.c
index 2c979203a54f..b9af82c2ed07 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/core/rtw_mlme.c
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/core/rtw_mlme.c
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2019 Realtek Corporation.
@@ -149,6 +148,8 @@ sint	_rtw_init_mlme_priv(_adapter *padapter)
 #define RTW_ROAM_RSSI_DIFF_TH 10
 #define RTW_ROAM_SCAN_INTERVAL (5)    /* 5*(2 second)*/
 #define RTW_ROAM_RSSI_THRESHOLD 70
+#define RTW_ROAM_DICONNECT_DELAY	20
+	_rtw_spinlock_init(&pmlmepriv->clnt_auth_lock);
 	pmlmepriv->roam_flags = CONFIG_ROAMING_FLAG;
 
 	pmlmepriv->roam_scanr_exp_ms = RTW_ROAM_SCAN_RESULT_EXP_MS;
@@ -184,6 +185,9 @@ void rtw_mfree_mlme_priv_lock(struct mlme_priv *pmlmepriv);
 void rtw_mfree_mlme_priv_lock(struct mlme_priv *pmlmepriv)
 {
 	_rtw_spinlock_free(&pmlmepriv->lock);
+#ifdef CONFIG_LAYER2_ROAMING
+	_rtw_spinlock_free(&pmlmepriv->clnt_auth_lock);
+#endif
 	_rtw_spinlock_free(&(pmlmepriv->free_bss_pool.lock));
 	_rtw_spinlock_free(&(pmlmepriv->scanned_queue.lock));
 #ifdef CONFIG_RTW_MULTI_AP
@@ -198,6 +202,9 @@ void rtw_free_mlme_priv_ie_data(struct mlme_priv *pmlmepriv)
 {
 	rtw_buf_free(&pmlmepriv->assoc_req, &pmlmepriv->assoc_req_len);
 	rtw_buf_free(&pmlmepriv->assoc_rsp, &pmlmepriv->assoc_rsp_len);
+#ifdef CONFIG_80211D
+	rtw_buf_free(&pmlmepriv->recv_country_ie, &pmlmepriv->recv_country_ie_len);
+#endif
 #if defined(CONFIG_AP_MODE) && defined (CONFIG_NATIVEAP_MLME)
 	rtw_buf_free(&pmlmepriv->wps_beacon_ie, &pmlmepriv->wps_beacon_ie_len);
 	rtw_buf_free(&pmlmepriv->wps_probe_req_ie, &pmlmepriv->wps_probe_req_ie_len);
@@ -899,7 +906,9 @@ void update_network(WLAN_BSSID_EX *dst, WLAN_BSSID_EX *src,
 		dst->Reserved[1] = src->Reserved[1];
 		_rtw_memcpy((u8 *)dst, (u8 *)src, get_WLAN_BSSID_EX_sz(src));
 	}
-
+#ifdef CONFIG_LAYER2_ROAMING
+	dst->tsf = src->tsf;
+#endif
 	dst->PhyInfo.SignalStrength = ss_final;
 	dst->PhyInfo.SignalQuality = sq_final;
 	dst->Rssi = rssi_final;
@@ -1089,7 +1098,9 @@ bool rtw_update_scanned_network(_adapter *adapter, WLAN_BSSID_EX *target)
 			pnetwork->acnode_stime = 0;
 			pnetwork->acnode_notify_etime = 0;
 			#endif
-
+#ifdef	CONFIG_LAYER2_ROAMING
+			pnetwork->network.tsf = target->tsf;
+#endif
 			pnetwork->network_type = 0;
 			pnetwork->aid = 0;
 			pnetwork->join_res = 0;
@@ -1735,259 +1746,6 @@ int rtw_is_desired_network(_adapter *adapter, struct wlan_network *pnetwork)
 	return bselected;
 }
 
-#ifdef CONFIG_80211D
-static void process_80211d(PADAPTER padapter, WLAN_BSSID_EX *bssid)
-{
-	struct rf_ctl_t *rfctl = adapter_to_rfctl(padapter);
-	struct registry_priv *pregistrypriv;
-	struct mlme_ext_priv *pmlmeext;
-	RT_CHANNEL_INFO *chplan_new;
-	u8 channel;
-	u8 i;
-
-
-	pregistrypriv = &padapter->registrypriv;
-	pmlmeext = &padapter->mlmeextpriv;
-
-	/* Adjust channel plan by AP Country IE */
-	if (pregistrypriv->enable80211d
-	    && (!pmlmeext->update_channel_plan_by_ap_done)) {
-		u8 *ie, *p;
-		u32 len;
-		RT_CHANNEL_PLAN chplan_ap;
-		RT_CHANNEL_INFO *chplan_sta = NULL;
-		u8 country[4];
-		u8 fcn; /* first channel number */
-		u8 noc; /* number of channel */
-		u8 j, k;
-
-		ie = rtw_get_ie(bssid->IEs + _FIXED_IE_LENGTH_, _COUNTRY_IE_, &len, bssid->IELength - _FIXED_IE_LENGTH_);
-		if (!ie)
-			return;
-		if (len < 6)
-			return;
-
-		ie += 2;
-		p = ie;
-		ie += len;
-
-		_rtw_memset(country, 0, 4);
-		_rtw_memcpy(country, p, 3);
-		p += 3;
-		RTW_INFO("%s: 802.11d country=%s\n", __FUNCTION__, country);
-
-		i = 0;
-		while ((ie - p) >= 3) {
-			fcn = *(p++);
-			noc = *(p++);
-			p++;
-
-			for (j = 0; j < noc; j++) {
-				if (fcn <= 14)
-					channel = fcn + j; /* 2.4 GHz */
-				else
-					channel = fcn + j * 4; /* 5 GHz */
-
-				chplan_ap.Channel[i++] = channel;
-			}
-		}
-		chplan_ap.Len = i;
-
-#ifdef CONFIG_RTW_DEBUG
-		i = 0;
-		RTW_INFO("%s: AP[%s] channel plan {", __FUNCTION__, bssid->Ssid.Ssid);
-		while ((i < chplan_ap.Len) && (chplan_ap.Channel[i] != 0)) {
-			_RTW_INFO("%02d,", chplan_ap.Channel[i]);
-			i++;
-		}
-		_RTW_INFO("}\n");
-#endif
-
-		chplan_sta = rtw_malloc(sizeof(RT_CHANNEL_INFO) * MAX_CHANNEL_NUM);
-		if (!chplan_sta)
-			goto done_update_chplan_from_ap;
-
-		_rtw_memcpy(chplan_sta, rfctl->channel_set, sizeof(RT_CHANNEL_INFO) * MAX_CHANNEL_NUM);
-#ifdef CONFIG_RTW_DEBUG
-		i = 0;
-		RTW_INFO("%s: STA channel plan {", __FUNCTION__);
-		while ((i < MAX_CHANNEL_NUM) && (chplan_sta[i].ChannelNum != 0)) {
-			_RTW_INFO("%02d(%c),", chplan_sta[i].ChannelNum, chplan_sta[i].flags & RTW_CHF_NO_IR ? 'p' : 'a');
-			i++;
-		}
-		_RTW_INFO("}\n");
-#endif
-
-		_rtw_memset(rfctl->channel_set, 0, sizeof(rfctl->channel_set));
-		chplan_new = rfctl->channel_set;
-
-		i = j = k = 0;
-		if (pregistrypriv->wireless_mode & WIRELESS_11G) {
-			do {
-				if ((i == MAX_CHANNEL_NUM)
-				    || (chplan_sta[i].ChannelNum == 0)
-				    || (chplan_sta[i].ChannelNum > 14))
-					break;
-
-				if ((j == chplan_ap.Len) || (chplan_ap.Channel[j] > 14))
-					break;
-
-				if (chplan_sta[i].ChannelNum == chplan_ap.Channel[j]) {
-					chplan_new[k].ChannelNum = chplan_ap.Channel[j];
-					i++;
-					j++;
-					k++;
-				} else if (chplan_sta[i].ChannelNum < chplan_ap.Channel[j]) {
-					chplan_new[k].ChannelNum = chplan_sta[i].ChannelNum;
-#if 0
-					if (chplan_sta[i].flags & RTW_CHF_NO_IR)
-						chplan_new[k].flags |= RTW_CHF_NO_IR;
-#else
-					chplan_new[k].flags |= RTW_CHF_NO_IR;
-#endif
-					i++;
-					k++;
-				} else if (chplan_sta[i].ChannelNum > chplan_ap.Channel[j]) {
-					chplan_new[k].ChannelNum = chplan_ap.Channel[j];
-					j++;
-					k++;
-				}
-			} while (1);
-
-			/* change AP not support channel to Passive scan */
-			while ((i < MAX_CHANNEL_NUM)
-			       && (chplan_sta[i].ChannelNum != 0)
-			       && (chplan_sta[i].ChannelNum <= 14)) {
-				chplan_new[k].ChannelNum = chplan_sta[i].ChannelNum;
-#if 0
-				if (chplan_sta[i].flags & RTW_CHF_NO_IR)
-					chplan_new[k].flags |= RTW_CHF_NO_IR;
-#else
-				chplan_new[k].flags |= RTW_CHF_NO_IR;
-#endif
-				i++;
-				k++;
-			}
-
-			/* add channel AP supported */
-			while ((j < chplan_ap.Len) && (chplan_ap.Channel[j] <= 14)) {
-				chplan_new[k].ChannelNum = chplan_ap.Channel[j];
-				j++;
-				k++;
-			}
-		} else {
-			/* keep original STA 2.4G channel plan */
-			while ((i < MAX_CHANNEL_NUM)
-			       && (chplan_sta[i].ChannelNum != 0)
-			       && (chplan_sta[i].ChannelNum <= 14)) {
-				chplan_new[k].ChannelNum = chplan_sta[i].ChannelNum;
-				if (chplan_sta[i].flags & RTW_CHF_NO_IR)
-					chplan_new[k].flags |= RTW_CHF_NO_IR;
-				i++;
-				k++;
-			}
-
-			/* skip AP 2.4G channel plan */
-			while ((j < chplan_ap.Len) && (chplan_ap.Channel[j] <= 14))
-				j++;
-		}
-
-		if (pregistrypriv->wireless_mode & WIRELESS_11A) {
-			do {
-				if ((i >= MAX_CHANNEL_NUM)
-				    || (chplan_sta[i].ChannelNum == 0))
-					break;
-
-				if ((j == chplan_ap.Len) || (chplan_ap.Channel[j] == 0))
-					break;
-
-				if (chplan_sta[i].ChannelNum == chplan_ap.Channel[j]) {
-					chplan_new[k].ChannelNum = chplan_ap.Channel[j];
-					i++;
-					j++;
-					k++;
-				} else if (chplan_sta[i].ChannelNum < chplan_ap.Channel[j]) {
-					chplan_new[k].ChannelNum = chplan_sta[i].ChannelNum;
-#if 0
-					if (chplan_sta[i].flags & RTW_CHF_NO_IR)
-						chplan_new[k].flags |= RTW_CHF_NO_IR;
-#else
-					chplan_new[k].flags |= RTW_CHF_NO_IR;
-#endif
-					i++;
-					k++;
-				} else if (chplan_sta[i].ChannelNum > chplan_ap.Channel[j]) {
-					chplan_new[k].ChannelNum = chplan_ap.Channel[j];
-					j++;
-					k++;
-				}
-			} while (1);
-
-			/* change AP not support channel to Passive scan */
-			while ((i < MAX_CHANNEL_NUM) && (chplan_sta[i].ChannelNum != 0)) {
-				chplan_new[k].ChannelNum = chplan_sta[i].ChannelNum;
-#if 0
-				if (chplan_sta[i].flags & RTW_CHF_NO_IR)
-					chplan_new[k].flags |= RTW_CHF_NO_IR;
-#else
-				chplan_new[k].flags |= RTW_CHF_NO_IR;
-#endif
-				i++;
-				k++;
-			}
-
-			/* add channel AP supported */
-			while ((j < chplan_ap.Len) && (chplan_ap.Channel[j] != 0)) {
-				chplan_new[k].ChannelNum = chplan_ap.Channel[j];
-				j++;
-				k++;
-			}
-		} else {
-			/* keep original STA 5G channel plan */
-			while ((i < MAX_CHANNEL_NUM) && (chplan_sta[i].ChannelNum != 0)) {
-				chplan_new[k].ChannelNum = chplan_sta[i].ChannelNum;
-				if (chplan_sta[i].flags & RTW_CHF_NO_IR)
-					chplan_new[k].flags |= RTW_CHF_NO_IR;
-				i++;
-				k++;
-			}
-		}
-
-		pmlmeext->update_channel_plan_by_ap_done = 1;
-		rtw_nlrtw_reg_change_event(padapter);
-
-#ifdef CONFIG_RTW_DEBUG
-		k = 0;
-		RTW_INFO("%s: new STA channel plan {", __FUNCTION__);
-		while ((k < MAX_CHANNEL_NUM) && (chplan_new[k].ChannelNum != 0)) {
-			_RTW_INFO("%02d(%c),", chplan_new[k].ChannelNum, chplan_new[k].flags & RTW_CHF_NO_IR ? 'p' : 'c');
-			k++;
-		}
-		_RTW_INFO("}\n");
-#endif
-
-#if 0
-		/* recover the right channel index */
-		channel = chplan_sta[pmlmeext->sitesurvey_res.channel_idx].ChannelNum;
-		k = 0;
-		while ((k < MAX_CHANNEL_NUM) && (chplan_new[k].ChannelNum != 0)) {
-			if (chplan_new[k].ChannelNum == channel) {
-				RTW_INFO("%s: change mlme_ext sitesurvey channel index from %d to %d\n",
-					__FUNCTION__, pmlmeext->sitesurvey_res.channel_idx, k);
-				pmlmeext->sitesurvey_res.channel_idx = k;
-				break;
-			}
-			k++;
-		}
-#endif
-
-done_update_chplan_from_ap:
-		if (chplan_sta)
-			rtw_mfree(chplan_sta, sizeof(RT_CHANNEL_INFO) * MAX_CHANNEL_NUM);
-	}
-}
-#endif
-
 void rtw_survey_event_callback(_adapter	*adapter, u8 *pbuf)
 {
 	_irqL  irqL;
@@ -2014,9 +1772,6 @@ void rtw_survey_event_callback(_adapter	*adapter, u8 *pbuf)
 #endif
 
 	if (pnetwork->InfrastructureMode == Ndis802_11Infrastructure) {
-		#ifdef CONFIG_80211D
-		process_80211d(adapter, pnetwork);
-		#endif
 		if (MLME_IS_SCAN(adapter)) {
 			adapter->mlmeextpriv.sitesurvey_res.activate_ch_cnt
 				+= rtw_process_beacon_hint(adapter, pnetwork);
@@ -2221,6 +1976,14 @@ void rtw_surveydone_event_callback(_adapter	*adapter, u8 *pbuf)
 #endif
 
 	if (parm->activate_ch_cnt) {
+		#ifdef CONFIG_IOCTL_CFG80211
+		struct get_chplan_resp *chplan;
+
+		if (rtw_get_chplan_cmd(adapter, RTW_CMDF_DIRECTLY, &chplan) != _SUCCESS
+			|| rtw_regd_change_complete_async(adapter_to_wiphy(adapter), chplan) != _SUCCESS)
+			rtw_warn_on(1);
+		#endif
+
 		op_class_pref_apply_regulatory(adapter, REG_BEACON_HINT);
 		rtw_nlrtw_reg_beacon_hint_event(adapter);
 	}
@@ -2306,7 +2069,7 @@ u8 _rtw_sitesurvey_condition_check(const char *caller, _adapter *adapter, bool c
 	}
 
 #ifdef CONFIG_ADAPTIVITY_DENY_SCAN
-	if (registry_par->adaptivity_en
+	if (adapter_to_rfctl(adapter)->adaptivity_en
 	    && rtw_phydm_get_edcca_flag(adapter)
 	    && rtw_is_2g_ch(GET_HAL_DATA(adapter)->current_channel)) {
 		RTW_WARN(FUNC_ADPT_FMT": Adaptivity block scan! (ch=%u)\n",
@@ -2787,10 +2550,12 @@ static struct sta_info *rtw_joinbss_update_stainfo(_adapter *padapter, struct wl
 	struct recv_reorder_ctrl *preorder_ctrl;
 	struct sta_priv *pstapriv = &padapter->stapriv;
 	struct mlme_ext_priv	*pmlmeext = &padapter->mlmeextpriv;
-#ifdef CONFIG_RTS_FULL_BW
+#if defined(CONFIG_RTS_FULL_BW) || defined(CONFIG_RTW_MULTI_AP)
 	struct	mlme_priv	*pmlmepriv = &(padapter->mlmepriv);
+#endif
+#ifdef CONFIG_RTS_FULL_BW
 	struct wlan_network  *cur_network = &(pmlmepriv->cur_network);
-#endif/*CONFIG_RTS_FULL_BW*/
+#endif
 
 	psta = rtw_get_stainfo(pstapriv, pnetwork->network.MacAddress);
 	if (psta == NULL)
@@ -2824,6 +2589,7 @@ static struct sta_info *rtw_joinbss_update_stainfo(_adapter *padapter, struct wl
 			u8 *ie;
 			sint ie_len;
 			u8 mfp_opt = MFP_NO;
+			u8 spp_opt = 0;
 
 			padapter->securitypriv.binstallGrpkey = _FALSE;
 			padapter->securitypriv.busetkipkey = _FALSE;
@@ -2832,12 +2598,17 @@ static struct sta_info *rtw_joinbss_update_stainfo(_adapter *padapter, struct wl
 			ie = rtw_get_ie(pnetwork->network.IEs + _BEACON_IE_OFFSET_, WLAN_EID_RSN
 				, &ie_len, (pnetwork->network.IELength - _BEACON_IE_OFFSET_));
 			if (ie && ie_len > 0
-				&& rtw_parse_wpa2_ie(ie, ie_len + 2, NULL, NULL, NULL, NULL, &mfp_opt) == _SUCCESS
+				&& rtw_parse_wpa2_ie(ie, ie_len + 2, NULL, NULL, NULL, NULL, &mfp_opt, &spp_opt) == _SUCCESS
 			) {
 				if (padapter->securitypriv.mfp_opt >= MFP_OPTIONAL && mfp_opt >= MFP_OPTIONAL)
 					psta->flags |= WLAN_STA_MFP;
 			}
 
+			if (padapter->securitypriv.dot11PrivacyAlgrthm != _NO_PRIVACY_ ) {
+				/*check if amsdu is allowed */
+				if (rtw_check_amsdu_disable(padapter->registrypriv.amsdu_mode, spp_opt) == _TRUE)
+					psta->flags |= WLAN_STA_AMSDU_DISABLE;
+			}
 			psta->ieee8021x_blocked = _TRUE;
 			psta->dot118021XPrivacy = padapter->securitypriv.dot11PrivacyAlgrthm;
 
@@ -3474,6 +3245,10 @@ void rtw_stadel_event_callback(_adapter *adapter, u8 *pbuf)
 	struct wlan_network *tgt_network = &(pmlmepriv->cur_network);
 
 	RTW_INFO("%s(mac_id=%d)=" MAC_FMT "\n", __func__, pstadel->mac_id, MAC_ARG(pstadel->macaddr));
+#ifdef CONFIG_LAYER2_ROAMING
+	if (pmlmepriv->roam_network)
+		rtw_msleep_os(RTW_ROAM_DICONNECT_DELAY);
+#endif
 	rtw_sta_mstatus_disc_rpt(adapter, pstadel->mac_id);
 
 #ifdef CONFIG_MCC_MODE
@@ -3563,7 +3338,9 @@ void rtw_stadel_event_callback(_adapter *adapter, u8 *pbuf)
 
 		rtw_indicate_disconnect(adapter, *(u16 *)pstadel->rsvd, pstadel->locally_generated);
 
+#ifdef CONFIG_LAYER2_ROAMING
 		_rtw_roaming(adapter, roam_target);
+#endif
 	}
 
 #ifdef CONFIG_AP_MODE
@@ -3836,6 +3613,13 @@ void rtw_drv_scan_by_self(_adapter *padapter, u8 reason)
 
 	RTW_INFO(FUNC_ADPT_FMT" reason:0x%02x\n", FUNC_ADPT_ARG(padapter), reason);
 
+#ifdef CONFIG_LAYER2_ROAMING
+	if ((reason == RTW_AUTO_SCAN_REASON_ROAM_ACTIVE) &&
+		(rtw_get_passing_time_ms(pmlmepriv->last_roaming) >= pmlmepriv->roam_scan_int*2000))
+		pmlmepriv->last_roaming = rtw_get_current_time();
+	else
+		goto exit;
+#endif
 	/* only for 20/40 BSS */
 	if (reason == RTW_AUTO_SCAN_REASON_2040_BSS) {
 		rtw_init_sitesurvey_parm(padapter, &parm);
@@ -3854,7 +3638,9 @@ void rtw_drv_scan_by_self(_adapter *padapter, u8 reason)
 		goto exit;
 #endif
 
-	rtw_set_802_11_bssid_list_scan(padapter, NULL);
+	rtw_init_sitesurvey_parm(padapter, &parm);
+	parm.reason = reason;
+	rtw_set_802_11_bssid_list_scan(padapter, &parm);
 exit:
 	return;
 }
@@ -3863,6 +3649,9 @@ static void rtw_auto_scan_handler(_adapter *padapter)
 {
 	struct mlme_priv *pmlmepriv = &padapter->mlmepriv;
 	u8 reason = RTW_AUTO_SCAN_REASON_UNSPECIFIED;
+#ifdef CONFIG_LAYER2_ROAMING
+	struct recv_priv	*precvpriv = &padapter->recvpriv;
+#endif
 
 	rtw_mlme_reset_auto_scan_int(padapter, &reason);
 
@@ -3876,10 +3665,27 @@ static void rtw_auto_scan_handler(_adapter *padapter)
 		goto exit;
 #endif
 
+#ifdef CONFIG_LAYER2_ROAMING
+	if (is_client_associated_to_ap(padapter) &&
+		rtw_chk_roam_flags(padapter, RTW_ROAM_ACTIVE)) {
+		RTW_INFO("signal_strength_data.avg_val = %d\n", precvpriv->signal_strength_data.avg_val);
+		if (precvpriv->signal_strength_data.avg_val < pmlmepriv->roam_rssi_threshold) {
+#ifdef CONFIG_RTW_80211K
+			rtw_roam_nb_discover(padapter, _FALSE);
+#endif
+			pmlmepriv->need_to_roam = _TRUE;
+			reason = RTW_AUTO_SCAN_REASON_ROAM_ACTIVE;
+			goto do_scan;
+		} else
+			pmlmepriv->need_to_roam = _FALSE;
+	}
+#endif
+
 	if (pmlmepriv->auto_scan_int_ms == 0
 	    || rtw_get_passing_time_ms(pmlmepriv->scan_start_time) < pmlmepriv->auto_scan_int_ms)
 		goto exit;
 
+do_scan:
 	rtw_drv_scan_by_self(padapter, reason);
 
 exit:
@@ -4178,6 +3984,11 @@ static int rtw_check_roaming_candidate(struct mlme_priv *mlme
 	if (rtw_is_desired_network(adapter, competitor) == _FALSE)
 		goto exit;
 
+#ifdef CONFIG_RTW_ROAM_QUICKSCAN
+	if (competitor->network.PhyInfo.SignalStrength > CONFIG_RTW_ROAM_QUICKSCAN_TH)
+		adapter->mlmeextpriv.quickscan_next = _TRUE;
+#endif
+
 #ifdef CONFIG_LAYER2_ROAMING
 	if (mlme->need_to_roam == _FALSE)
 		goto exit;
@@ -4442,7 +4253,6 @@ int rtw_select_and_join_from_scanned_queue(struct mlme_priv *pmlmepriv)
 #ifdef CONFIG_LAYER2_ROAMING
 	if (pmlmepriv->roam_network) {
 		candidate = pmlmepriv->roam_network;
-		pmlmepriv->roam_network = NULL;
 		goto candidate_exist;
 	}
 #endif
@@ -4520,6 +4330,35 @@ int rtw_select_and_join_from_scanned_queue(struct mlme_priv *pmlmepriv)
 	}
 #endif
 	set_fwstate(pmlmepriv, WIFI_UNDER_LINKING);
+
+#if defined(CONFIG_CONCURRENT_MODE) && defined(CONFIG_AP_MODE)
+{
+	u8 ifbmp = 0;
+	u8 csa_cnt;
+	struct mi_state mstate;
+	struct rf_ctl_t *rfctl;
+
+	rfctl = adapter_to_rfctl(adapter);
+	csa_cnt = rfctl->ap_csa_cnt_input;
+	ifbmp = rtw_mi_get_ap_mesh_ifbmp(adapter);
+	rtw_mi_status_no_self(adapter, &mstate);
+
+	if (csa_cnt > 0 && ifbmp && MSTATE_AP_LD_NUM(&mstate) &&
+		rtw_mi_get_union_chan(adapter) != candidate->network.Configuration.DSConfig) {
+		rfctl->ap_csa_en = CSA_STA_JOINBSS;
+		rfctl->ap_csa_switch_cnt = csa_cnt;
+		rtw_bss_get_chbw(&(candidate->network), &rfctl->ap_csa_ch
+			, &rfctl->ap_csa_ch_width, &rfctl->ap_csa_ch_offset, 1, 1);
+		rtw_set_ap_csa_cmd(adapter);
+
+		/* Store candidata network until softap switch channel done */
+		_rtw_memcpy(&(pmlmepriv->candidate_network), candidate, sizeof(struct wlan_network));
+		ret = _SUCCESS;
+		goto exit;
+	}
+}
+#endif
+
 	ret = rtw_joinbss_cmd(adapter, candidate);
 
 exit:
@@ -4982,6 +4821,15 @@ sint rtw_restruct_sec_ie(_adapter *adapter, u8 *out_ie)
 		ielength = rtw_rsn_sync_pmkid(adapter, out_ie, ielength, iEntry);
 	}
 
+	if ((psecuritypriv->auth_type == MLME_AUTHTYPE_SAE) &&
+		(psecuritypriv->rsnx_ie_len >= 3)) {
+		u8 *_pos = out_ie + (psecuritypriv->supplicant_ie[1] + 2);
+		_rtw_memcpy(_pos, psecuritypriv->rsnx_ie,
+			psecuritypriv->rsnx_ie_len);
+		ielength += psecuritypriv->rsnx_ie_len;
+		RTW_INFO_DUMP("update IE for RSNX :", out_ie, ielength);
+	}
+
 	return ielength;
 }
 
@@ -5188,13 +5036,14 @@ void rtw_build_wmm_ie_ht(_adapter *padapter, u8 *out_ie, uint *pout_len)
 }
 #if defined(CONFIG_80211N_HT)
 /* the fucntion is >= passive_level */
-unsigned int rtw_restructure_ht_ie(_adapter *padapter, u8 *in_ie, u8 *out_ie, uint in_len, uint *pout_len, u8 channel)
+unsigned int rtw_restructure_ht_ie(_adapter *padapter, u8 *in_ie, u8 *out_ie, uint in_len, uint *pout_len, u8 channel, struct country_chplan *req_chplan)
 {
 	u32 ielen, out_len;
 	u32 rx_packet_offset, max_recvbuf_sz;
 	HT_CAP_AMPDU_FACTOR max_rx_ampdu_factor;
 	HT_CAP_AMPDU_DENSITY best_ampdu_density;
 	unsigned char *p, *pframe;
+	BAND_TYPE band = channel > 14 ? BAND_ON_5G : BAND_ON_2_4G;
 	struct rtw_ieee80211_ht_cap ht_capie;
 	u8	cbw40_enable = 0, rf_num = 0, rx_stbc_nss = 0, rx_nss = 0;
 	struct registry_priv *pregistrypriv = &padapter->registrypriv;
@@ -5219,10 +5068,10 @@ unsigned int rtw_restructure_ht_ie(_adapter *padapter, u8 *in_ie, u8 *out_ie, ui
 
 	/* check if 40MHz is allowed according to hal cap and registry */
 	if (hal_chk_bw_cap(padapter, BW_CAP_40M)) {
-		if (channel > 14) {
+		if (band == BAND_ON_5G) {
 			if (REGSTY_IS_BW_5G_SUPPORT(pregistrypriv, CHANNEL_WIDTH_40))
 				cbw40_enable = 1;
-		} else {
+		} else if (band == BAND_ON_2_4G) {
 			if (REGSTY_IS_BW_2G_SUPPORT(pregistrypriv, CHANNEL_WIDTH_40))
 				cbw40_enable = 1;
 		}
@@ -5258,6 +5107,30 @@ unsigned int rtw_restructure_ht_ie(_adapter *padapter, u8 *in_ie, u8 *out_ie, ui
 					}
 				}
 			}
+
+			/* IOT issue : AP TP-link Archer C7, correct the secondary channel offset of 5G channel */
+			if (oper_bw == CHANNEL_WIDTH_40 && p && ielen == HT_OP_IE_LEN) {
+				u8 primary_ch = GET_HT_OP_ELE_PRI_CHL(p + 2);
+				u8 offset_bak = oper_offset;
+
+				if (primary_ch > 14) {
+					rtw_get_offset_by_chbw(primary_ch, oper_bw, &oper_offset);
+
+					/* secondary channel offset is wrong */
+					if (offset_bak != oper_offset) {
+						RTW_INFO(FUNC_ADPT_FMT": secondary channel offset is wrong, so workaround\n", FUNC_ADPT_ARG(padapter));
+						switch (oper_offset) {
+						case HAL_PRIME_CHNL_OFFSET_LOWER:
+							SET_HT_OP_ELE_2ND_CHL_OFFSET(p + 2, SCA);
+							break;
+						case HAL_PRIME_CHNL_OFFSET_UPPER:
+							SET_HT_OP_ELE_2ND_CHL_OFFSET(p + 2, SCB);
+							break;
+						}
+					}
+				}
+			}
+
 			// IOT issue : AP TP-Link WDR6500
 			if(oper_bw == CHANNEL_WIDTH_40){ 
 				p = rtw_get_ie(in_ie, WLAN_EID_HT_CAP, &ielen, in_len);
@@ -5272,17 +5145,20 @@ unsigned int rtw_restructure_ht_ie(_adapter *padapter, u8 *in_ie, u8 *out_ie, ui
 		/* adjust bw to fit in channel plan setting */
 		if (oper_bw == CHANNEL_WIDTH_40
 			&& oper_offset != HAL_PRIME_CHNL_OFFSET_DONT_CARE /* check this because TDLS has no info to set offset */
-			&& (!rtw_chset_is_chbw_valid(chset, channel, oper_bw, oper_offset, 1, 1)
+		) {
+			if ((req_chplan && !rtw_country_chplan_is_chbw_valid(req_chplan, band, channel, oper_bw, oper_offset, 1, 1, pregistrypriv))
+				|| (!req_chplan && !rtw_chset_is_chbw_valid(chset, channel, oper_bw, oper_offset, 1, 1))
 				|| (IS_DFS_SLAVE_WITH_RD(rfctl)
 					&& !rtw_rfctl_dfs_domain_unknown(rfctl)
 					&& rtw_chset_is_chbw_non_ocp(chset, channel, oper_bw, oper_offset))
-				)
-		) {
-			oper_bw = CHANNEL_WIDTH_20;
-			oper_offset = HAL_PRIME_CHNL_OFFSET_DONT_CARE;
-			rtw_warn_on(!rtw_chset_is_chbw_valid(chset, channel, oper_bw, oper_offset, 1, 1));
-			if (IS_DFS_SLAVE_WITH_RD(rfctl) && !rtw_rfctl_dfs_domain_unknown(rfctl))
-				rtw_warn_on(rtw_chset_is_chbw_non_ocp(chset, channel, oper_bw, oper_offset));
+			) {
+				oper_bw = CHANNEL_WIDTH_20;
+				oper_offset = HAL_PRIME_CHNL_OFFSET_DONT_CARE;
+				rtw_warn_on(req_chplan && !rtw_country_chplan_is_chbw_valid(req_chplan, band, channel, oper_bw, oper_offset, 1, 1, pregistrypriv));
+				rtw_warn_on(!req_chplan && !rtw_chset_is_chbw_valid(chset, channel, oper_bw, oper_offset, 1, 1));
+				if (IS_DFS_SLAVE_WITH_RD(rfctl) && !rtw_rfctl_dfs_domain_unknown(rfctl))
+					rtw_warn_on(rtw_chset_is_chbw_non_ocp(chset, channel, oper_bw, oper_offset));
+			}
 		}
 
 		if (oper_bw == CHANNEL_WIDTH_40) {
@@ -5693,38 +5569,37 @@ void rtw_issue_addbareq_cmd(_adapter *padapter, struct xmit_frame *pxmitframe, u
 
 }
 #endif /* CONFIG_80211N_HT */
-void rtw_append_exented_cap(_adapter *padapter, u8 *out_ie, uint *pout_len)
+void rtw_append_extended_cap(_adapter *padapter, u8 *out_ie, uint *pout_len)
 {
-	struct mlme_priv	*pmlmepriv = &padapter->mlmepriv;
-	struct ht_priv		*phtpriv = &pmlmepriv->htpriv;
+	struct mlme_priv *pmlmepriv = &padapter->mlmepriv;
+	struct ht_priv *phtpriv = &pmlmepriv->htpriv;
 #ifdef CONFIG_80211AC_VHT
-	struct vht_priv	*pvhtpriv = &pmlmepriv->vhtpriv;
+	struct vht_priv *pvhtpriv = &pmlmepriv->vhtpriv;
 #endif /* CONFIG_80211AC_VHT */
-	u8	cap_content[8] = { 0 };
-	u8	*pframe;
-	u8   null_content[8] = {0};
+	u8 *ext_cap_data = pmlmepriv->ext_capab_ie_data;
+	u8 *ext_cap_data_len = &(pmlmepriv->ext_capab_ie_len);
 
 	if (phtpriv->bss_coexist)
-		SET_EXT_CAPABILITY_ELE_BSS_COEXIST(cap_content, 1);
+		rtw_add_ext_cap_info(ext_cap_data, ext_cap_data_len, BSS_COEXT);
 
 #ifdef CONFIG_80211AC_VHT
 	if (pvhtpriv->vht_option)
-		SET_EXT_CAPABILITY_ELE_OP_MODE_NOTIF(cap_content, 1);
+		rtw_add_ext_cap_info(ext_cap_data, ext_cap_data_len, OP_MODE_NOTIFICATION);
 #endif /* CONFIG_80211AC_VHT */
 #ifdef CONFIG_RTW_WNM
-	rtw_wnm_set_ext_cap_btm(cap_content, 1);
+	rtw_add_ext_cap_info(ext_cap_data, ext_cap_data_len, BSS_TRANSITION);
 #endif
 
 #ifdef CONFIG_RTW_MBO
-	rtw_mbo_set_ext_cap_internw(cap_content, 1);
+	rtw_add_ext_cap_info(ext_cap_data, ext_cap_data_len, INTERWORKING);
 #endif
+
 	/*
 		From 802.11 specification,if a STA does not support any of capabilities defined
 		in the Extended Capabilities element, then the STA is not required to
 		transmit the Extended Capabilities element.
 	*/
-	if (_FALSE == _rtw_memcmp(cap_content, null_content, 8))
-		pframe = rtw_set_ie(out_ie + *pout_len, EID_EXTCapability, 8, cap_content , pout_len);
+	rtw_update_ext_cap_ie(ext_cap_data, *ext_cap_data_len, out_ie, pout_len, _BEACON_IE_OFFSET_);
 }
 #endif
 
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/core/rtw_mlme_ext.c b/drivers/net/wireless/rockchip_wlan/rtl8821cs/core/rtw_mlme_ext.c
index 457938cefa34..7aab4f00cb2e 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/core/rtw_mlme_ext.c
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/core/rtw_mlme_ext.c
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2019 Realtek Corporation.
@@ -176,78 +175,171 @@ static void init_channel_list(_adapter *padapter, RT_CHANNEL_INFO *channel_set
 }
 
 #if CONFIG_TXPWR_LIMIT
+static void rtw_txpwr_init_regd_default(struct rf_ctl_t *rfctl)
+{
+	bool country_txpwr_lmt_override = 0;
+	u8 txpwr_lmt[BAND_MAX];
+	const char *name[BAND_MAX];
+	u8 unknown_bmp = 0; /* unknown bitmap */
+	char buf[TXPWR_NAMES_STR_LEN];
+	u8 band;
+	bool altenate_applied = 0;
+
+	for (band = 0; band < BAND_MAX; band++) {
+		txpwr_lmt[band] = TXPWR_LMT_NONE;
+		name[band] = NULL;
+		unknown_bmp |= BIT(band);
+	}
+
+	if (rfctl->txpwr_lmt_override != TXPWR_LMT_DEF) {
+		country_txpwr_lmt_override = 1;
+		for (band = 0; band < BAND_MAX; band++)
+			txpwr_lmt[band] = rfctl->txpwr_lmt_override;
+	} else {
+		txpwr_lmt[BAND_ON_2_4G] = rtw_regd_to_txpwr_lmt(rtw_chplan_get_default_regd_2g(rfctl->ChannelPlan));
+		#if CONFIG_IEEE80211_BAND_5GHZ
+		txpwr_lmt[BAND_ON_5G] = rtw_regd_to_txpwr_lmt(rtw_chplan_get_default_regd_5g(rfctl->ChannelPlan));
+		#endif
+		#if CONFIG_IEEE80211_BAND_6GHZ
+		txpwr_lmt[BAND_ON_6G] = rtw_regd_to_txpwr_lmt(rtw_chplan_get_default_regd_6g(rfctl->chplan_6g));
+		#endif
+	}
+
+	for (band = 0; band < BAND_MAX; band++) {
+		name[band] = txpwr_lmt_str(txpwr_lmt[band]);
+		if (txpwr_lmt[band] == TXPWR_LMT_NONE || txpwr_lmt[band] == TXPWR_LMT_WW || txpwr_lmt[band] == TXPWR_LMT_NUM
+			|| _rtw_txpwr_lmt_get_by_name(rfctl, name[band]))
+			unknown_bmp &= ~BIT(band);
+	}
+
+	if (country_txpwr_lmt_override) {
+		RTW_PRINT("default mapping country:%c%c to txpwr_lmt:%s\n"
+			, rfctl->alpha2[0], rfctl->alpha2[1]
+			, rtw_get_txpwr_lmt_names_str(buf, name, unknown_bmp)
+		);
+	} else {
+		RTW_PRINT("default mapping domain to txpwr_lmt:%s\n"
+			, rtw_get_txpwr_lmt_names_str(buf, name, unknown_bmp));
+	}
+	if (unknown_bmp == 0)
+		goto exit;
+
+	for (band = 0; band < BAND_MAX; band++) {
+		if (!(unknown_bmp & BIT(band)))
+			continue;
+		if (TXPWR_LMT_ALTERNATE_DEFINED(txpwr_lmt[band])) {
+			/*
+			* To support older chips without new predefined txpwr_lmt:
+			* - use txpwr_lmt_alternate() to get alternate if the selection is  not found
+			*/
+			altenate_applied = 1;
+			txpwr_lmt[band] = txpwr_lmt_alternate(txpwr_lmt[band]);
+			name[band] = txpwr_lmt_str(txpwr_lmt[band]);
+			if (_rtw_txpwr_lmt_get_by_name(rfctl, name[band]))
+				unknown_bmp &= ~BIT(band);
+		}
+	}
+	if (altenate_applied) {
+		RTW_PRINT("alternate applied txpwr_lmt:%s\n"
+			, rtw_get_txpwr_lmt_names_str(buf, name, unknown_bmp));
+		if (unknown_bmp == 0)
+			goto exit;
+	}
+
+	for (band = 0; band < BAND_MAX; band++) {
+		if (!(unknown_bmp & BIT(band)))
+			continue;
+		txpwr_lmt[band] = TXPWR_LMT_WW;
+		name[band] = txpwr_lmt_str(txpwr_lmt[band]);
+		unknown_bmp &= ~BIT(band);
+	}
+	RTW_PRINT("world wide applied txpwr_lmt:%s\n"
+		, rtw_get_txpwr_lmt_names_str(buf, name, unknown_bmp));
+
+exit:
+	for (band = 0; band < BAND_MAX; band++)
+		rfctl->txpwr_lmt_name[band] = name[band];
+}
+
 void rtw_txpwr_init_regd(struct rf_ctl_t *rfctl)
 {
-	u8 regd;
+	const char *name = NULL;
+	u8 band;
 	struct regd_exc_ent *exc;
 	struct txpwr_lmt_ent *ent;
 	_irqL irqL;
 
 	_enter_critical_mutex(&rfctl->txpwr_lmt_mutex, &irqL);
 
-	rfctl->regd_name = NULL;
+	for (band = 0; band < BAND_MAX; band++)
+		rfctl->txpwr_lmt_name[band] = NULL;
 
-	if (rfctl->txpwr_regd_num == 0) {
+	if (rfctl->txpwr_lmt_num == 0) {
 		RTW_PRINT("there is no any txpwr_regd\n");
 		goto release_lock;
 	}
 
 	/* search from exception mapping */
-	exc = _rtw_regd_exc_search(rfctl
-		, rfctl->country_ent ? rfctl->country_ent->alpha2 : NULL
-		, rfctl->ChannelPlan);
+	exc = _rtw_regd_exc_search(rfctl, rfctl->alpha2, rfctl->ChannelPlan);
 	if (exc) {
 		u8 has_country = (exc->country[0] == '\0' && exc->country[1] == '\0') ? 0 : 1;
 
-		if (strcmp(exc->regd_name, regd_str(TXPWR_LMT_NONE)) == 0)
-			rfctl->regd_name = regd_str(TXPWR_LMT_NONE);
-		else if (strcmp(exc->regd_name, regd_str(TXPWR_LMT_WW)) == 0)
-			rfctl->regd_name = regd_str(TXPWR_LMT_WW);
+		if (strcmp(exc->lmt_name, txpwr_lmt_str(TXPWR_LMT_NONE)) == 0)
+			name = txpwr_lmt_str(TXPWR_LMT_NONE);
+		else if (strcmp(exc->lmt_name, txpwr_lmt_str(TXPWR_LMT_WW)) == 0)
+			name = txpwr_lmt_str(TXPWR_LMT_WW);
 		else {
-			ent = _rtw_txpwr_lmt_get_by_name(rfctl, exc->regd_name);
+			ent = _rtw_txpwr_lmt_get_by_name(rfctl, exc->lmt_name);
 			if (ent)
-				rfctl->regd_name = ent->regd_name;
+				name = ent->name;
 		}
 
-		RTW_PRINT("exception mapping country:%c%c domain:0x%02x to%s regd_name:%s\n"
-			, has_country ? exc->country[0] : '0'
-			, has_country ? exc->country[1] : '0'
+		RTW_PRINT("exception mapping country:%c%c domain:0x%02x to%s txpwr_lmt:%s\n"
+			, has_country ? exc->country[0] : '-'
+			, has_country ? exc->country[1] : '-'
 			, exc->domain
-			, rfctl->regd_name ? "" : " unknown"
-			, exc->regd_name
+			, name ? "" : " unknown"
+			, exc->lmt_name
 		);
-		if (rfctl->regd_name)
+		if (name) {
+			for (band = 0; band < BAND_MAX; band++)
+				rfctl->txpwr_lmt_name[band] = name;
 			goto release_lock;
+		}
 	}
 
 #ifdef CONFIG_REGD_SRC_FROM_OS
 	if (rfctl->regd_src == REGD_SRC_OS) {
-		if (IS_ALPHA2_WORLDWIDE(rfctl->country_ent->alpha2))
-			rfctl->regd_name = regd_str(TXPWR_LMT_WW);
+		if (RFCTL_REG_WORLDWIDE(rfctl))
+			name = txpwr_lmt_str(TXPWR_LMT_WW);
 		else {
 			char alpha2[3] = {
-				rfctl->country_ent->alpha2[0], rfctl->country_ent->alpha2[1], 0};
+				rfctl->alpha2[0], rfctl->alpha2[1], 0};
 
 			ent = _rtw_txpwr_lmt_get_by_name(rfctl, alpha2);
 			if (ent)
-				rfctl->regd_name = ent->regd_name;
+				name = ent->name;
 		}
 
-		if (rfctl->regd_name) {
-			RTW_PRINT("mapping country:%c%c to regd_name:%s\n"
-				, rfctl->country_ent->alpha2[0]
-				, rfctl->country_ent->alpha2[1]
-				, rfctl->regd_name
+		if (name) {
+			for (band = 0; band < BAND_MAX; band++)
+				rfctl->txpwr_lmt_name[band] = name;
+			RTW_PRINT("mapping country:%c%c to txpwr_lmt:%s\n"
+				, rfctl->alpha2[0]
+				, rfctl->alpha2[1]
+				, name
 			);
 			goto release_lock;
 		}
 
 		if (rfctl->ChannelPlan == RTW_CHPLAN_UNSPECIFIED) {
-			rfctl->regd_name = regd_str(TXPWR_LMT_WW);
-			RTW_PRINT("mapping unsupported country:%c%c to regd_name:%s\n"
-				, rfctl->country_ent->alpha2[0]
-				, rfctl->country_ent->alpha2[1]
-				, rfctl->regd_name
+			name = txpwr_lmt_str(TXPWR_LMT_WW);
+			for (band = 0; band < BAND_MAX; band++)
+				rfctl->txpwr_lmt_name[band] = name;
+			RTW_PRINT("mapping unsupported country:%c%c to txpwr_lmt:%s\n"
+				, rfctl->alpha2[0]
+				, rfctl->alpha2[1]
+				, name
 			);
 			goto release_lock;
 		}
@@ -255,60 +347,22 @@ void rtw_txpwr_init_regd(struct rf_ctl_t *rfctl)
 #endif
 
 	/* follow default channel plan mapping */
-	regd = rtw_chplan_get_default_regd(rfctl->ChannelPlan);
-	if (regd == TXPWR_LMT_NONE)
-		rfctl->regd_name = regd_str(TXPWR_LMT_NONE);
-	else if (regd == TXPWR_LMT_WW)
-		rfctl->regd_name = regd_str(TXPWR_LMT_WW);
-	else {
-		ent = _rtw_txpwr_lmt_get_by_name(rfctl, regd_str(regd));
-		if (ent)
-			rfctl->regd_name = ent->regd_name;
-	}
-
-	RTW_PRINT("default mapping domain:0x%02x to%s regd_name:%s\n"
-		, rfctl->ChannelPlan
-		, rfctl->regd_name ? "" : " unknown"
-		, regd_str(regd)
-	);
-	if (rfctl->regd_name)
-		goto release_lock;
-
-	switch (regd) {
-	/*
-	* To support older chips without new predefined regd:
-	* - use FCC if IC or CHILE or MEXICO not found
-	* - use ETSI if KCC or ACMA not found
-	*/
-	case TXPWR_LMT_IC:
-	case TXPWR_LMT_KCC:
-	case TXPWR_LMT_NCC:
-	case TXPWR_LMT_ACMA:
-	case TXPWR_LMT_CHILE:
-	case TXPWR_LMT_MEXICO:
-		if (regd == TXPWR_LMT_IC || regd == TXPWR_LMT_NCC || regd == TXPWR_LMT_CHILE || regd == TXPWR_LMT_MEXICO)
-			regd = TXPWR_LMT_FCC;
-		else if (regd == TXPWR_LMT_KCC || regd == TXPWR_LMT_ACMA)
-			regd = TXPWR_LMT_ETSI;
-		ent = _rtw_txpwr_lmt_get_by_name(rfctl, regd_str(regd));
-		if (ent)
-			rfctl->regd_name = ent->regd_name;
-		RTW_PRINT("alternate regd_name:%s %s\n"
-			, regd_str(regd)
-			, rfctl->regd_name ? "is used" : "not found"
-		);
-		if (rfctl->regd_name)
-			break;
-		/* fall through */
-	default:
-		rfctl->regd_name = regd_str(TXPWR_LMT_WW);
-		RTW_PRINT("assign %s for default case\n", regd_str(TXPWR_LMT_WW));
-		break;
-	};
+	rtw_txpwr_init_regd_default(rfctl);
 
 release_lock:
 	_exit_critical_mutex(&rfctl->txpwr_lmt_mutex, &irqL);
 }
+
+bool rtw_rfctl_is_current_txpwr_lmt(struct rf_ctl_t *rfctl, const char *name)
+{
+	int band;
+
+	for (band = 0; band < BAND_MAX; band++)
+		if (rfctl->txpwr_lmt_name[band] && strcmp(name, rfctl->txpwr_lmt_name[band]) == 0)
+			return 1;
+
+	return 0;
+}
 #endif /* CONFIG_TXPWR_LIMIT */
 
 int rtw_rfctl_init(_adapter *adapter)
@@ -319,6 +373,17 @@ int rtw_rfctl_init(_adapter *adapter)
 
 	_rtw_mutex_init(&rfctl->offch_mutex);
 
+	rfctl->user_ChannelPlan = RTW_CHPLAN_UNSPECIFIED;
+#if CONFIG_IEEE80211_BAND_6GHZ
+	rfctl->user_chplan_6g = RTW_CHPLAN_6G_UNSPECIFIED;
+#endif
+
+#ifdef CONFIG_80211D
+	rfctl->country_ie_slave_en_role = regsty->country_ie_slave_en_role;
+	rfctl->country_ie_slave_en_ifbmp = regsty->country_ie_slave_en_ifbmp;
+	rfctl->effected_cisr_id = CONFIG_IFACE_NUMBER;
+#endif
+
 #if CONFIG_TXPWR_LIMIT
 	_rtw_mutex_init(&rfctl->txpwr_lmt_mutex);
 	_rtw_init_listhead(&rfctl->reg_exc_list);
@@ -339,6 +404,10 @@ int rtw_rfctl_init(_adapter *adapter)
 	if (regsty->antenna_gain != UNSPECIFIED_MBM)
 		rfctl->antenna_gain = regsty->antenna_gain;
 
+#if defined(CONFIG_CONCURRENT_MODE) && defined(CONFIG_AP_MODE)
+	rfctl->ap_csa_cnt_input = DEFAULT_CSA_CNT;
+#endif
+
 	ret = op_class_pref_init(adapter);
 	if (ret != _SUCCESS)
 		op_class_pref_deinit(adapter);
@@ -358,23 +427,189 @@ void rtw_rfctl_deinit(_adapter *adapter)
 	_rtw_mutex_free(&rfctl->txpwr_lmt_mutex);
 #endif
 
-#ifdef CONFIG_REGD_SRC_FROM_OS
-	if (rfctl->regd_src == REGD_SRC_OS)
-		rtw_mfree((void *)rfctl->country_ent, sizeof(struct country_chplan));
+	op_class_pref_deinit(adapter);
+}
+
+/*
+ * Description:
+ *	Use hardware(efuse), driver parameter(registry) and default channel plan
+ *	to decide which one should be used.
+ *
+ * Parameters:
+ *	rfctl				pointer of rfctl
+ *	hw_alpha2		country code from HW (efuse/eeprom/mapfile)
+ *	hw_chplan		domain code from HW (efuse/eeprom/mapfile)
+ *	hw_chplan_6g	6g domain code from HW (efuse/eeprom/mapfile)
+ *	hw_force_chplan	if forcing HW channel plan setting (efuse/eeprom/mapfile)
+ *					will modified tif HW channel plan setting is invlid, will
+ */
+void rtw_rfctl_decide_init_chplan(struct rf_ctl_t *rfctl,
+	const char *hw_alpha2, u8 hw_chplan, u8 hw_chplan_6g, u8 hw_force_chplan)
+{
+	struct registry_priv *regsty;
+	char *sw_alpha2;
+	const struct country_chplan *country_ent = NULL;
+	struct country_chplan ent;
+	int chplan = -1;
+	int chplan_6g = -1;
+
+	u8 sw_chplan;
+	u8 def_chplan = RTW_CHPLAN_WORLDWIDE; /* worldwide,  used when HW, SW both invalid */
+#if CONFIG_IEEE80211_BAND_6GHZ
+	u8 sw_chplan_6g;
+	u8 def_chplan_6g = RTW_CHPLAN_6G_WORLDWIDE; /* worldwide,  used when HW, SW both invalid */
+#endif
+
+	if (hw_alpha2) {
+		if (rtw_get_chplan_from_country(hw_alpha2, &ent)) {
+			/* get chplan from hw country code, by pass hw chplan setting */
+			country_ent = &ent;
+			chplan = ent.chplan;
+			#if CONFIG_IEEE80211_BAND_6GHZ
+			chplan_6g = ent.chplan_6g;
+			#endif
+			goto chk_sw_config;
+		} else
+			RTW_PRINT("%s unsupported hw_alpha2:\"%c%c\"\n", __func__, hw_alpha2[0], hw_alpha2[1]);
+	}
+
+	if (rtw_is_channel_plan_valid(hw_chplan))
+		chplan = hw_chplan;
+	else if (hw_force_chplan == _TRUE) {
+		RTW_PRINT("%s unsupported hw_chplan:0x%02X\n", __func__, hw_chplan);
+		/* hw infomaton invalid, refer to sw information */
+		hw_force_chplan = _FALSE;
+	}
+
+#if CONFIG_IEEE80211_BAND_6GHZ
+	if (rtw_is_channel_plan_6g_valid(hw_chplan_6g))
+		chplan_6g = hw_chplan_6g;
+	else if (hw_force_chplan == _TRUE) {
+		RTW_PRINT("%s unsupported hw_chplan_6g:0x%02X\n", __func__, hw_chplan_6g);
+		/* hw infomaton invalid, refer to sw information */
+		hw_force_chplan = _FALSE;
+	}
 #endif
 
-	op_class_pref_deinit(adapter);
+chk_sw_config:
+	if (hw_force_chplan == _TRUE)
+		goto done;
+
+	regsty = dvobj_to_regsty(rfctl_to_dvobj(rfctl));
+	sw_alpha2 = regsty->alpha2;
+	sw_chplan = regsty->channel_plan;
+	#if CONFIG_IEEE80211_BAND_6GHZ
+	sw_chplan_6g = regsty->channel_plan_6g;
+	#endif
+
+	if (sw_alpha2 && !IS_ALPHA2_UNSPEC(sw_alpha2)) {
+		if (IS_ALPHA2_WORLDWIDE(sw_alpha2)
+			|| rtw_get_chplan_from_country(sw_alpha2, &ent)
+		) {
+			/* get chplan from sw country code, by pass sw chplan setting */
+			if (IS_ALPHA2_WORLDWIDE(sw_alpha2))
+				rtw_get_chplan_worldwide(&ent);
+			country_ent = &ent;
+			chplan = ent.chplan;
+			#if CONFIG_IEEE80211_BAND_6GHZ
+			chplan_6g = ent.chplan_6g;
+			#endif
+			goto done;
+		} else
+			RTW_PRINT("%s unsupported sw_alpha2:\"%c%c\"\n", __func__, sw_alpha2[0], sw_alpha2[1]);
+	}
+
+	if (rtw_is_channel_plan_valid(sw_chplan)) {
+		/* cancel hw_alpha2 because chplan is specified by sw_chplan */
+		country_ent = NULL;
+		chplan = sw_chplan;
+	} else if (sw_chplan != RTW_CHPLAN_UNSPECIFIED)
+		RTW_PRINT("%s unsupported sw_chplan:0x%02X\n", __func__, sw_chplan);
+
+#if CONFIG_IEEE80211_BAND_6GHZ
+	if (rtw_is_channel_plan_6g_valid(sw_chplan_6g)) {
+		/* cancel hw_alpha2 because chplan_6g is specified by sw_chplan_6g */
+		country_ent = NULL;
+		chplan_6g = sw_chplan_6g;
+	} else if (sw_chplan_6g != RTW_CHPLAN_6G_UNSPECIFIED)
+		RTW_PRINT("%s unsupported sw_chplan_6g:0x%02X\n", __func__, sw_chplan_6g);
+#endif
+
+done:
+	if (chplan == -1) {
+		RTW_PRINT("%s use def_chplan:0x%02X\n", __func__, def_chplan);
+		chplan = def_chplan;
+	} else
+		RTW_PRINT("%s chplan:0x%02X\n", __func__, chplan);
+
+#if CONFIG_IEEE80211_BAND_6GHZ
+	if (chplan_6g == -1) {
+		RTW_PRINT("%s use def_chplan_6g:0x%02X\n", __func__, def_chplan_6g);
+		chplan_6g = def_chplan_6g;
+	} else
+		RTW_PRINT("%s chplan_6g:0x%02X\n", __func__, chplan_6g);
+#endif
+
+	if (!country_ent) {
+		if (rtw_chplan_ids_is_world_wide(chplan, chplan_6g))
+			rtw_get_chplan_worldwide(&ent);
+		else {
+			SET_UNSPEC_ALPHA2(ent.alpha2);
+			ent.edcca_mode_2g_override = RTW_EDCCA_DEF;
+			#if CONFIG_IEEE80211_BAND_5GHZ
+			ent.edcca_mode_5g_override = RTW_EDCCA_DEF;
+			#endif
+			#if CONFIG_IEEE80211_BAND_6GHZ
+			ent.edcca_mode_6g_override = RTW_EDCCA_DEF;
+			#endif
+			ent.txpwr_lmt_override = TXPWR_LMT_DEF;
+			#if defined(CONFIG_80211AX_HE) || defined(CONFIG_80211AC_VHT)
+			ent.proto_en = CHPLAN_PROTO_EN_ALL;
+			#endif
+		}
+	} else {
+		RTW_PRINT("%s country code:\"%c%c\"\n", __func__
+			, country_ent->alpha2[0], country_ent->alpha2[1]);
+	}
+
+	rfctl->disable_sw_chplan = hw_force_chplan;
+
+	rfctl->regd_inr = RTW_REGD_SET_BY_INIT;
+	rfctl->init_alpha2[0] = rfctl->alpha2[0] = ent.alpha2[0];
+	rfctl->init_alpha2[1] = rfctl->alpha2[1] = ent.alpha2[1];
+	rfctl->init_ChannelPlan = rfctl->ChannelPlan = chplan;
+#if CONFIG_IEEE80211_BAND_6GHZ
+	rfctl->init_chplan_6g = rfctl->chplan_6g = chplan_6g;
+#endif
+	rfctl->edcca_mode_2g_override = ent.edcca_mode_2g_override;
+#if CONFIG_IEEE80211_BAND_5GHZ
+	rfctl->edcca_mode_5g_override = ent.edcca_mode_5g_override;
+#endif
+#if CONFIG_IEEE80211_BAND_6GHZ
+	rfctl->edcca_mode_6g_override = ent.edcca_mode_6g_override;
+#endif
+#if CONFIG_TXPWR_LIMIT
+	rfctl->txpwr_lmt_override = ent.txpwr_lmt_override;
+#endif
+#if defined(CONFIG_80211AX_HE) || defined(CONFIG_80211AC_VHT)
+	rfctl->proto_en = ent.proto_en;
+#endif
 }
 
 void rtw_rfctl_chplan_init(_adapter *adapter)
 {
 	struct rf_ctl_t *rfctl = adapter_to_rfctl(adapter);
 
-	rfctl->max_chan_nums = init_channel_set(adapter);
+	init_channel_set(adapter);
 	op_class_pref_apply_regulatory(adapter, REG_CHANGE);
 	init_channel_list(adapter, rfctl->channel_set, &rfctl->channel_list);
 }
 
+bool rtw_rfctl_is_disable_sw_channel_plan(struct dvobj_priv *dvobj)
+{
+	return dvobj_to_rfctl(dvobj)->disable_sw_chplan;
+}
+
 void rtw_rfctl_update_op_mode(struct rf_ctl_t *rfctl, u8 ifbmp_mod, u8 if_op)
 {
 	struct dvobj_priv *dvobj = rfctl_to_dvobj(rfctl);
@@ -466,6 +701,16 @@ void rtw_rfctl_update_op_mode(struct rf_ctl_t *rfctl, u8 ifbmp_mod, u8 if_op)
 #endif
 }
 
+/* domain status specific beacon hint rules */
+#ifndef RTW_CHPLAN_BEACON_HINT_SPECIFIC_COUNTRY
+#define RTW_CHPLAN_BEACON_HINT_SPECIFIC_COUNTRY 0
+#endif
+
+bool rtw_rfctl_reg_allow_beacon_hint(struct rf_ctl_t *rfctl)
+{
+	return RTW_CHPLAN_BEACON_HINT_SPECIFIC_COUNTRY || RFCTL_REG_WORLDWIDE(rfctl) || RFCTL_REG_ALPHA2_UNSPEC(rfctl);
+}
+
 inline u8 rtw_rfctl_get_dfs_domain(struct rf_ctl_t *rfctl)
 {
 #ifdef CONFIG_DFS_MASTER
@@ -1031,7 +1276,7 @@ bool rtw_choose_shortest_waiting_ch(struct rf_ctl_t *rfctl, u8 sel_ch, u8 max_bw
 	RTW_CHF_ARG_NO_80MHZ(flags) \
 	RTW_CHF_ARG_NO_160MHZ(flags)
 
-void dump_chset(void *sel, RT_CHANNEL_INFO *ch_set, u8 chset_num)
+static void dump_chset(void *sel, RT_CHANNEL_INFO *ch_set, u8 chset_num)
 {
 	char buf[8];
 	u8 i;
@@ -1047,7 +1292,7 @@ void dump_chset(void *sel, RT_CHANNEL_INFO *ch_set, u8 chset_num)
 			snprintf(buf, 8, "0");
 
 		RTW_PRINT_SEL(sel, "%3u %4u %4s"RTW_CHF_FMT"\n"
-			, ch_set[i].ChannelNum, rtw_ch2freq(ch_set[i].ChannelNum), buf
+			, ch_set[i].ChannelNum, rtw_ch2freq_by_band(ch_set[i].band, ch_set[i].ChannelNum), buf
 			, RTW_CHF_ARG(ch_set[i].flags)
 		);
 	}
@@ -1055,6 +1300,43 @@ void dump_chset(void *sel, RT_CHANNEL_INFO *ch_set, u8 chset_num)
 	RTW_PRINT_SEL(sel, "total ch number:%d\n", i);
 }
 
+static void dump_chplan_txpwr_lmts(void *sel, struct get_chplan_resp *chplan)
+{
+	char buf[TXPWR_NAMES_STR_LEN];
+
+	RTW_PRINT_SEL(sel, "txpwr_lmt:%s\n", rtw_get_txpwr_lmt_names_str(buf, chplan->txpwr_lmt_name, 0));
+}
+
+static void dump_chplan_edcca_modes(void *sel, struct get_chplan_resp *chplan)
+{
+	u8 modes[BAND_MAX];
+	char buf[EDCCA_MODES_STR_LEN];
+
+	modes[BAND_ON_2_4G] = chplan->edcca_mode_2g;
+#if CONFIG_IEEE80211_BAND_5GHZ
+	modes[BAND_ON_5G] = chplan->edcca_mode_5g;
+#endif
+#if CONFIG_IEEE80211_BAND_6GHZ
+	modes[BAND_ON_6G] = chplan->edcca_mode_6g;
+#endif
+
+	RTW_PRINT_SEL(sel, "edcca_mode:%s\n", rtw_get_edcca_modes_str(buf, modes));
+}
+
+void dump_cur_country(void *sel, struct rf_ctl_t *rfctl)
+{
+	struct dvobj_priv *dvobj = rfctl_to_dvobj(rfctl);
+	struct get_chplan_resp *chplan;
+	int i;
+
+	if (rtw_get_chplan_cmd(dvobj_get_primary_adapter(dvobj), RTW_CMDF_WAIT_ACK, &chplan) == _FAIL)
+		return;
+
+	RTW_PRINT_SEL(sel, "%c%c\n", chplan->alpha2[0], chplan->alpha2[1]);
+
+	rtw_vmfree(chplan, sizeof(struct get_chplan_resp) + sizeof(RT_CHANNEL_INFO) * chplan->chset_num);
+}
+
 void dump_cur_chset(void *sel, struct rf_ctl_t *rfctl)
 {
 	struct dvobj_priv *dvobj = rfctl_to_dvobj(rfctl);
@@ -1066,27 +1348,46 @@ void dump_cur_chset(void *sel, struct rf_ctl_t *rfctl)
 		return;
 
 	RTW_PRINT_SEL(sel, "regd_src:%s(%d)\n", regd_src_str(chplan->regd_src), chplan->regd_src);
+	RTW_PRINT_SEL(sel, "regd_inr:%s\n", regd_inr_str(chplan->regd_inr));
+
+	RTW_PRINT_SEL(sel, "alpha2:%c%c\n", chplan->alpha2[0], chplan->alpha2[1]);
+
+#ifdef CONFIG_80211AX_HE
+	RTW_PRINT_SEL(sel, "ax:%d\n", (chplan->proto_en & CHPLAN_PROTO_EN_AX) ? 1 : 0);
+#endif
+#ifdef CONFIG_80211AC_VHT
+	RTW_PRINT_SEL(sel, "ac:%d\n", (chplan->proto_en & CHPLAN_PROTO_EN_AC) ? 1 : 0);
+#endif
 
-	if (chplan->has_country)
-		dump_country_chplan(sel, &chplan->country_ent);
+	if (chplan->channel_plan == RTW_CHPLAN_UNSPECIFIED)
+		RTW_PRINT_SEL(sel, "chplan:NA\n");
 	else
 		RTW_PRINT_SEL(sel, "chplan:0x%02X\n", chplan->channel_plan);
 
+#if CONFIG_IEEE80211_BAND_6GHZ
+	if (chplan->chplan_6g == RTW_CHPLAN_6G_UNSPECIFIED)
+		RTW_PRINT_SEL(sel, "chplan_6g:NA\n");
+	else
+		RTW_PRINT_SEL(sel, "chplan_6g:0x%02X\n", chplan->chplan_6g);
+#endif
+
 #if CONFIG_TXPWR_LIMIT
-	RTW_PRINT_SEL(sel, "PLS regd:%s\n", chplan->regd_name);
+	dump_chplan_txpwr_lmts(sel, chplan);
 #endif
 
+	dump_chplan_edcca_modes(sel, chplan);
+
 #ifdef CONFIG_DFS_MASTER
 	RTW_PRINT_SEL(sel, "dfs_domain:%s(%u)\n", rtw_dfs_regd_str(chplan->dfs_domain), chplan->dfs_domain);
 #endif
 
-	for (i = 0; i < MAX_CHANNEL_NUM; i++)
+	for (i = 0; i < MAX_CHANNEL_NUM_2G_5G; i++)
 		if (regsty->excl_chs[i] != 0)
 			break;
 
-	if (i < MAX_CHANNEL_NUM) {
+	if (i < MAX_CHANNEL_NUM_2G_5G) {
 		RTW_PRINT_SEL(sel, "excl_chs:");
-		for (i = 0; i < MAX_CHANNEL_NUM; i++) {
+		for (i = 0; i < MAX_CHANNEL_NUM_2G_5G; i++) {
 			if (regsty->excl_chs[i] == 0)
 				break;
 			_RTW_PRINT_SEL(sel, "%u ", regsty->excl_chs[i]);
@@ -1094,11 +1395,27 @@ void dump_cur_chset(void *sel, struct rf_ctl_t *rfctl)
 		_RTW_PRINT_SEL(sel, "\n");
 	}
 
+#if CONFIG_IEEE80211_BAND_6GHZ
+	for (i = 0; i < MAX_CHANNEL_NUM_6G; i++)
+		if (regsty->excl_chs_6g[i] != 0)
+			break;
+
+	if (i < MAX_CHANNEL_NUM_6G) {
+		RTW_PRINT_SEL(sel, "excl_chs_6g:");
+		for (i = 0; i < MAX_CHANNEL_NUM_6G; i++) {
+			if (regsty->excl_chs_6g[i] == 0)
+				break;
+			_RTW_PRINT_SEL(sel, "%u ", regsty->excl_chs_6g[i]);
+		}
+		_RTW_PRINT_SEL(sel, "\n");
+	}
+#endif
+
 	dump_chset(sel, chplan->chset, chplan->chset_num);
 
 	rtw_vmfree(chplan, sizeof(struct get_chplan_resp) + sizeof(RT_CHANNEL_INFO) * chplan->chset_num);
 }
-#endif
+#endif /* CONFIG_PROC_DEBUG */
 
 /*
  * Search the @param ch in given @param ch_set
@@ -1122,6 +1439,29 @@ int rtw_chset_search_ch(RT_CHANNEL_INFO *ch_set, const u32 ch)
 	return -1;
 }
 
+/*
+ * Search the @param ch of @param band in given @param ch_set
+ * @ch_set: the given channel set
+ * @band: the given band
+ * @ch: the given channel number
+ *
+ * return the index of channel_num in channel_set, -1 if not found
+ */
+int rtw_chset_search_ch_by_band(RT_CHANNEL_INFO *ch_set, BAND_TYPE band, const u32 ch)
+{
+	int i;
+
+	if (ch == 0)
+		return -1;
+
+	for (i = 0; i < MAX_CHANNEL_NUM && ch_set[i].ChannelNum != 0; i++) {
+		if (band == ch_set[i].band && ch == ch_set[i].ChannelNum)
+			return i;
+	}
+
+	return -1;
+}
+
 /*
  * Check if the @param ch, bw, offset is valid for the given @param ch_set
  * @ch_set: the given channel set
@@ -1153,8 +1493,8 @@ u8 rtw_chset_is_chbw_valid(RT_CHANNEL_INFO *ch_set, u8 ch, u8 bw, u8 offset
 		if (ch_idx == -1)
 			break;
 		if (ch_set[ch_idx].flags & RTW_CHF_NO_IR) {
-			if ((!allow_primary_passive && ch_set[ch_idx].ChannelNum == ch)
-				|| (!allow_passive && ch_set[ch_idx].ChannelNum != ch))
+			if (!allow_passive
+				|| (!allow_primary_passive && ch_set[ch_idx].ChannelNum == ch))
 			break;
 		}
 		if (bw >= CHANNEL_WIDTH_40) {
@@ -1360,10 +1700,13 @@ static void init_mlme_ext_priv_value(_adapter *padapter)
 	pmlmeext->cur_wireless_mode = padapter->registrypriv.wireless_mode;
 	init_mlme_default_rate_set(padapter);
 
-	if ((pmlmeext->cur_channel > 14) || ((padapter->registrypriv.wireless_mode & WIRELESS_11B) == 0))
+	if ((pmlmeext->cur_channel > 14) || ((padapter->registrypriv.wireless_mode & WIRELESS_11B) == 0)) {
 		pmlmeext->tx_rate = IEEE80211_OFDM_RATE_6MB;
-	else
+		pmlmeext->tx_rate_section = OFDM;
+	} else {
 		pmlmeext->tx_rate = IEEE80211_CCK_RATE_1MB;
+		pmlmeext->tx_rate_section = CCK;
+	}
 
 	mlmeext_set_scan_state(pmlmeext, SCAN_DISABLE);
 	pmlmeext->sitesurvey_res.channel_idx = 0;
@@ -1372,7 +1715,12 @@ static void init_mlme_ext_priv_value(_adapter *padapter)
 	pmlmeext->sitesurvey_res.rx_ampdu_accept = RX_AMPDU_ACCEPT_INVALID;
 	pmlmeext->sitesurvey_res.rx_ampdu_size = RX_AMPDU_SIZE_INVALID;
 #ifdef CONFIG_SCAN_BACKOP
-	mlmeext_assign_scan_backop_flags_sta(pmlmeext, /*SS_BACKOP_EN|*/SS_BACKOP_PS_ANNC | SS_BACKOP_TX_RESUME);
+#ifdef CONFIG_LAYER2_ROAMING
+	if (padapter->mlmepriv.roam_flags & RTW_ROAM_ACTIVE)
+		mlmeext_assign_scan_backop_flags_sta(pmlmeext, SS_BACKOP_EN | SS_BACKOP_PS_ANNC | SS_BACKOP_TX_RESUME);
+	else
+#endif
+		mlmeext_assign_scan_backop_flags_sta(pmlmeext, /*SS_BACKOP_EN |*/ SS_BACKOP_PS_ANNC | SS_BACKOP_TX_RESUME);
 	#ifdef CONFIG_AP_MODE
 		#ifdef CONFIG_CUSTOMER_EZVIZ_CHIME2
 			mlmeext_assign_scan_backop_flags_ap(pmlmeext, SS_BACKOP_EN | SS_BACKOP_PS_ANNC | SS_BACKOP_TX_RESUME | SS_BACKOP_EN_NL);
@@ -1418,6 +1766,9 @@ static void init_mlme_ext_priv_value(_adapter *padapter)
 	_rtw_memset(pmlmeinfo->SupportedRates_infra_ap, 0, NDIS_802_11_LENGTH_RATES_EX);
 	pmlmeinfo->ht_vht_received = 0;
 #endif /* ROKU_PRIVATE */
+#ifdef CONFIG_WRITE_BCN_LEN_TO_FW
+	pmlmeinfo->last_bcn_len = 0;
+#endif
 }
 
 void init_mlme_ext_timer(_adapter *padapter)
@@ -1547,7 +1898,7 @@ static void _mgt_dispatcher(_adapter *padapter, struct mlme_handler *ptable, uni
 		/* receive the frames that ra(a1) is my address or ra(a1) is bc address. */
 		if (!_rtw_memcmp(GetAddr1Ptr(pframe), adapter_mac_addr(padapter), ETH_ALEN) &&
 		    !_rtw_memcmp(GetAddr1Ptr(pframe), bc_addr, ETH_ALEN))
-#ifdef CONFIG_RTW_CFGVENDOR_RANDOM_MAC_OUI
+#if defined(CONFIG_RTW_CFGVENDOR_RANDOM_MAC_OUI) || defined(CONFIG_RTW_SCAN_RAND)
 		{
 			struct rtw_wdev_priv *pwdev_priv = adapter_wdev_data(padapter);
 
@@ -1601,7 +1952,7 @@ void mgt_dispatcher(_adapter *padapter, union recv_frame *precv_frame)
 	/* receive the frames that ra(a1) is my address or ra(a1) is bc address. */
 	if (!_rtw_memcmp(GetAddr1Ptr(pframe), adapter_mac_addr(padapter), ETH_ALEN) &&
 	    !_rtw_memcmp(GetAddr1Ptr(pframe), bc_addr, ETH_ALEN))
-#ifdef CONFIG_RTW_CFGVENDOR_RANDOM_MAC_OUI
+#if defined(CONFIG_RTW_CFGVENDOR_RANDOM_MAC_OUI) || defined(CONFIG_RTW_SCAN_RAND)
 		{
 			struct rtw_wdev_priv *pwdev_priv = adapter_wdev_data(padapter);
 
@@ -1666,7 +2017,7 @@ void mgt_dispatcher(_adapter *padapter, union recv_frame *precv_frame)
 			ptable->func = &OnAuth;
 		else
 			ptable->func = &OnAuthClient;
-	/* fall through */
+		fallthrough;
 	case WIFI_ASSOCREQ:
 	case WIFI_REASSOCREQ:
 		_mgt_dispatcher(padapter, ptable, precv_frame);
@@ -1779,13 +2130,15 @@ unsigned int OnProbeReq(_adapter *padapter, union recv_frame *precv_frame)
 	u8 wifi_test_chk_rate = 1;
 
 #ifdef CONFIG_IOCTL_CFG80211
-	if ((pwdinfo->driver_interface == DRIVER_CFG80211)
-	    && !rtw_p2p_chk_state(pwdinfo, P2P_STATE_NONE)
-	    && (GET_CFG80211_REPORT_MGMT(adapter_wdev_data(padapter), IEEE80211_STYPE_PROBE_REQ) == _TRUE)
-	) {
+#ifdef CONFIG_P2P
+	if ((adapter_to_dvobj(padapter)->wpas_type == RTW_WPAS_W1FI) &&
+		!rtw_p2p_chk_state(pwdinfo, P2P_STATE_NONE) &&
+		(GET_CFG80211_REPORT_MGMT(adapter_wdev_data(padapter),
+				IEEE80211_STYPE_PROBE_REQ) == _TRUE)) {
 		rtw_cfg80211_rx_probe_request(padapter, precv_frame);
 		return _SUCCESS;
 	}
+#endif
 #endif /* CONFIG_IOCTL_CFG80211 */
 
 	if (!rtw_p2p_chk_state(pwdinfo, P2P_STATE_NONE) &&
@@ -2162,6 +2515,9 @@ unsigned int OnBeacon(_adapter *padapter, union recv_frame *precv_frame)
 	struct tdls_ch_switch *pchsw_info = &padapter->tdlsinfo.chsw_info;
 #endif
 #endif /* CONFIG_TDLS */
+#ifdef	CONFIG_LAYER2_ROAMING
+	_irqL irqL;
+#endif
 
 	if (validate_beacon_len(pframe, len) == _FALSE)
 		return _SUCCESS;
@@ -2181,6 +2537,19 @@ unsigned int OnBeacon(_adapter *padapter, union recv_frame *precv_frame)
 		rtw_mi_report_survey_event(padapter, precv_frame);
 		return _SUCCESS;
 	}
+
+#ifdef CONFIG_WRITE_BCN_LEN_TO_FW
+	if (check_fwstate(pmlmepriv, WIFI_ASOC_STATE)
+		&& (_rtw_memcmp(GetAddr3Ptr(pframe), get_my_bssid(&pmlmeinfo->network), ETH_ALEN))) {
+		struct rx_pkt_attrib *pattrib = &precv_frame->u.hdr.attrib;
+
+		if (pmlmeinfo->last_bcn_len != pattrib->pkt_len) {
+			pmlmeinfo->last_bcn_len = pattrib->pkt_len;
+			rtw_write_bcnlen_to_fw_cmd(padapter, pattrib->pkt_len);
+		}
+	}
+#endif
+
 #ifdef CONFIG_RTW_REPEATER_SON
 	if (padapter->rtw_rson_scanstage == RSON_SCAN_PROCESS)
 		rtw_mi_report_survey_event(padapter, precv_frame);
@@ -2198,7 +2567,9 @@ unsigned int OnBeacon(_adapter *padapter, union recv_frame *precv_frame)
 				set_link_timer(pmlmeext, 1);
 				return _SUCCESS;
 			}
-
+#ifdef	CONFIG_LAYER2_ROAMING
+			_enter_critical_bh(&pmlmepriv->clnt_auth_lock, &irqL);
+#endif
 			/* we should update current network before auth, or some IE is wrong */
 			pbss = (WLAN_BSSID_EX *)rtw_malloc(sizeof(WLAN_BSSID_EX));
 			if (pbss) {
@@ -2230,6 +2601,8 @@ unsigned int OnBeacon(_adapter *padapter, union recv_frame *precv_frame)
 			/* check the vendor of the assoc AP */
 			pmlmeinfo->assoc_AP_vendor = check_assoc_AP(pframe + sizeof(struct rtw_ieee80211_hdr_3addr), len - sizeof(struct rtw_ieee80211_hdr_3addr));
 
+			rtw_phydm_update_ap_vendor_ie(padapter);
+
 			/* update TSF Value */
 			update_TSF(pmlmeext, pframe, len);
 			pmlmeext->bcn_cnt = 0;
@@ -2253,7 +2626,9 @@ unsigned int OnBeacon(_adapter *padapter, union recv_frame *precv_frame)
 
 			/* start auth */
 			start_clnt_auth(padapter);
-
+#ifdef	CONFIG_LAYER2_ROAMING
+			_exit_critical_bh(&pmlmepriv->clnt_auth_lock, &irqL);
+#endif
 			return _SUCCESS;
 		}
 
@@ -2314,6 +2689,12 @@ unsigned int OnBeacon(_adapter *padapter, union recv_frame *precv_frame)
 					, len - (WLAN_HDR_A3_LEN + _BEACON_IE_OFFSET_));
 				#endif
 
+				#ifdef CONFIG_80211D
+				process_country_ie(padapter
+					, pframe + WLAN_HDR_A3_LEN + _BEACON_IE_OFFSET_
+					, len - (WLAN_HDR_A3_LEN + _BEACON_IE_OFFSET_));
+				#endif
+
 #ifdef CONFIG_P2P_PS
 				process_p2p_ps_ie(padapter, (pframe + WLAN_HDR_A3_LEN), (len - WLAN_HDR_A3_LEN));
 #endif /* CONFIG_P2P_PS */
@@ -2459,7 +2840,7 @@ unsigned int OnAuth(_adapter *padapter, union recv_frame *precv_frame)
 		return rtw_mesh_on_auth(padapter, precv_frame);
 #endif
 
-	RTW_INFO("+OnAuth\n");
+	RTW_INFO("+OnAuth from "MAC_FMT"\n", MAC_ARG(get_addr2_ptr(pframe)));
 
 	sa = get_addr2_ptr(pframe);
 
@@ -2782,6 +3163,10 @@ unsigned int OnAuthClient(_adapter *padapter, union recv_frame *precv_frame)
 				goto authclnt_fail;
 			}
 
+			if (len > sizeof(pmlmeinfo->chg_txt)) {
+				goto authclnt_fail;
+			}
+
 			_rtw_memcpy((void *)(pmlmeinfo->chg_txt), (void *)(p + 2), len);
 			pmlmeinfo->auth_seq = 3;
 			issue_auth(padapter, NULL, 0);
@@ -2887,7 +3272,7 @@ unsigned int OnAssocReq(_adapter *padapter, union recv_frame *precv_frame)
 		goto asoc_class2_error;
 	}
 
-	RTW_INFO("%s\n", __FUNCTION__);
+	RTW_INFO("%s from "MAC_FMT"\n", __FUNCTION__, MAC_ARG(get_addr2_ptr(pframe)));
 
 	if (pstat->authalg == WLAN_AUTH_SAE) {
 		/* WPA3-SAE */
@@ -3051,14 +3436,17 @@ unsigned int OnAssocReq(_adapter *padapter, union recv_frame *precv_frame)
 
 	/* AID assignment */
 	if (pstat->cmn.aid > 0)
-		RTW_INFO(FUNC_ADPT_FMT" old AID=%d\n", FUNC_ADPT_ARG(padapter), pstat->cmn.aid);
+		RTW_INFO(FUNC_ADPT_FMT" use old AID=%d for "MAC_FMT"\n",
+			FUNC_ADPT_ARG(padapter), pstat->cmn.aid, MAC_ARG(pstat->cmn.mac_addr));
 	else {
 		if (!rtw_aid_alloc(padapter, pstat)) {
-			RTW_INFO(FUNC_ADPT_FMT" no room for more AIDs\n", FUNC_ADPT_ARG(padapter));
+			RTW_INFO(FUNC_ADPT_FMT" no room for more AIDs for "MAC_FMT"\n",
+				FUNC_ADPT_ARG(padapter), MAC_ARG(pstat->cmn.mac_addr));
 			status = WLAN_STATUS_AP_UNABLE_TO_HANDLE_NEW_STA;
 			goto OnAssocReqFail;
 		}
-		RTW_INFO(FUNC_ADPT_FMT" allocate new AID=%d\n", FUNC_ADPT_ARG(padapter), pstat->cmn.aid);
+		RTW_INFO(FUNC_ADPT_FMT" allocate new AID=%d for "MAC_FMT"\n",
+			FUNC_ADPT_ARG(padapter), pstat->cmn.aid, MAC_ARG(pstat->cmn.mac_addr));
 	}
 
 	pstat->state &= (~WIFI_FW_ASSOC_STATE);
@@ -3308,7 +3696,7 @@ unsigned int OnAssocRsp(_adapter *padapter, union recv_frame *precv_frame)
 			ERP_IE_handler(padapter, pIE);
 			break;
 #ifdef CONFIG_TDLS
-		case _EXT_CAP_IE_:
+		case WLAN_EID_EXT_CAP:
 			if (check_ap_tdls_prohibited(pIE->data, pIE->Length) == _TRUE)
 				padapter->tdlsinfo.ap_prohibited = _TRUE;
 			if (check_ap_tdls_ch_switching_prohibited(pIE->data, pIE->Length) == _TRUE)
@@ -3340,7 +3728,7 @@ unsigned int OnAssocRsp(_adapter *padapter, union recv_frame *precv_frame)
 	}
 
 #ifdef CONFIG_WAPI_SUPPORT
-	rtw_wapi_on_assoc_ok(padapter, pIE);
+	rtw_wapi_on_assoc_ok(padapter, pWapiIE);
 #endif
 
 	pmlmeinfo->state &= (~WIFI_FW_ASSOC_STATE);
@@ -3717,7 +4105,7 @@ unsigned int on_action_wnm(_adapter *adapter, union recv_frame *rframe)
 			if ((sz > 0) && (rsp.pcandidates != NULL))
 				rtw_mfree(rsp.pcandidates, sz);
 		}
-		 /* fall through */
+		fallthrough;
 	default:
 		#ifdef CONFIG_IOCTL_CFG80211
 		cnt += sprintf((msg + cnt), "ACT_WNM %u", action);
@@ -4683,6 +5071,7 @@ void issue_p2p_GO_response(_adapter *padapter, u8 *raddr, u8 *frame_body, uint l
 	/*	Try to get the device password ID from the WPS IE of group negotiation request frame */
 	/*	WiFi Direct test plan 5.1.15 */
 	rtw_get_wps_ie(frame_body + _PUBLIC_ACTION_IE_OFFSET_, len - _PUBLIC_ACTION_IE_OFFSET_, wpsie, &wpsielen);
+	wps_devicepassword_id_len = sizeof(wps_devicepassword_id);
 	rtw_get_wps_attr_content(wpsie, wpsielen, WPS_ATTR_DEVICE_PWID, (u8 *) &wps_devicepassword_id, &wps_devicepassword_id_len);
 	wps_devicepassword_id = be16_to_cpu(wps_devicepassword_id);
 
@@ -6784,9 +7173,11 @@ unsigned int on_action_public_p2p(union recv_frame *precv_frame)
 
 				merged_p2p_ielen = rtw_p2p_merge_ies(frame_body + _PUBLIC_ACTION_IE_OFFSET_, len - _PUBLIC_ACTION_IE_OFFSET_, merged_p2pie);
 
+				attr_contentlen = sizeof(invitation_flag);
 				rtw_get_p2p_attr_content(merged_p2pie, merged_p2p_ielen, P2P_ATTR_INVITATION_FLAGS, &invitation_flag, &attr_contentlen);
 				if (attr_contentlen) {
 
+					attr_contentlen = sizeof(pwdinfo->p2p_peer_interface_addr);
 					rtw_get_p2p_attr_content(merged_p2pie, merged_p2p_ielen, P2P_ATTR_GROUP_BSSID, pwdinfo->p2p_peer_interface_addr, &attr_contentlen);
 					/*	Commented by Albert 20120510 */
 					/*	Copy to the pwdinfo->p2p_peer_interface_addr. */
@@ -6805,6 +7196,7 @@ unsigned int on_action_public_p2p(union recv_frame *precv_frame)
 						/*	Re-invoke the persistent group. */
 
 						_rtw_memset(&group_id, 0x00, sizeof(struct group_id_info));
+						attr_contentlen = sizeof(struct group_id_info);
 						rtw_get_p2p_attr_content(merged_p2pie, merged_p2p_ielen, P2P_ATTR_GROUP_ID, (u8 *) &group_id, &attr_contentlen);
 						if (attr_contentlen) {
 							if (_rtw_memcmp(group_id.go_device_addr, adapter_mac_addr(padapter), ETH_ALEN)) {
@@ -6816,6 +7208,7 @@ unsigned int on_action_public_p2p(union recv_frame *precv_frame)
 								/*	The p2p device sending this p2p invitation request wants to be the persistent GO. */
 								if (is_matched_in_profilelist(pwdinfo->p2p_peer_interface_addr, &pwdinfo->profileinfo[0])) {
 									u8 operatingch_info[5] = { 0x00 };
+									attr_contentlen = sizeof(operatingch_info);
 									if (rtw_get_p2p_attr_content(merged_p2pie, merged_p2p_ielen, P2P_ATTR_OPERATING_CH, operatingch_info,
 										&attr_contentlen)) {
 										if (rtw_chset_search_ch(adapter_to_chset(padapter), (u32)operatingch_info[4]) >= 0) {
@@ -6859,6 +7252,7 @@ unsigned int on_action_public_p2p(union recv_frame *precv_frame)
 						/*	Received the invitation to join a P2P group. */
 
 						_rtw_memset(&group_id, 0x00, sizeof(struct group_id_info));
+						attr_contentlen = sizeof(struct group_id_info);
 						rtw_get_p2p_attr_content(merged_p2pie, merged_p2p_ielen, P2P_ATTR_GROUP_ID, (u8 *) &group_id, &attr_contentlen);
 						if (attr_contentlen) {
 							if (_rtw_memcmp(group_id.go_device_addr, adapter_mac_addr(padapter), ETH_ALEN)) {
@@ -6903,6 +7297,7 @@ unsigned int on_action_public_p2p(union recv_frame *precv_frame)
 			_cancel_timer_ex(&pwdinfo->restore_p2p_state_timer);
 			p2p_ie = rtw_get_p2p_ie(frame_body + _PUBLIC_ACTION_IE_OFFSET_, len - _PUBLIC_ACTION_IE_OFFSET_, NULL, &p2p_ielen);
 			if (p2p_ie) {
+				attr_contentlen = sizeof(attr_content);
 				rtw_get_p2p_attr_content(p2p_ie, p2p_ielen, P2P_ATTR_STATUS, &attr_content, &attr_contentlen);
 
 				if (attr_contentlen == 1) {
@@ -7606,6 +8001,7 @@ void update_mgnt_tx_rate(_adapter *padapter, u8 rate)
 	struct mlme_ext_priv	*pmlmeext = &(padapter->mlmeextpriv);
 
 	pmlmeext->tx_rate = rate;
+	pmlmeext->tx_rate_section = mgn_rate_to_rs(rate);
 	/* RTW_INFO("%s(): rate = %x\n",__FUNCTION__, rate); */
 }
 
@@ -7629,7 +8025,7 @@ void update_monitor_frame_attrib(_adapter *padapter, struct pkt_attrib *pattrib)
 
 	pattrib->pktlen = 0;
 
-	if (pmlmeext->tx_rate == IEEE80211_CCK_RATE_1MB)
+	if (IS_CCK_RATE(pmlmeext->tx_rate))
 		wireless_mode = WIRELESS_11B;
 	else
 		wireless_mode = WIRELESS_11G;
@@ -8533,7 +8929,7 @@ int _issue_probereq(_adapter *padapter, const NDIS_802_11_SSID *pssid, const u8
 	struct mlme_ext_priv	*pmlmeext = &(padapter->mlmeextpriv);
 	int	bssrate_len = 0;
 	u8	bc_addr[] = {0xff, 0xff, 0xff, 0xff, 0xff, 0xff};
-#ifdef CONFIG_RTW_CFGVENDOR_RANDOM_MAC_OUI
+#if defined(CONFIG_RTW_CFGVENDOR_RANDOM_MAC_OUI) || defined(CONFIG_RTW_SCAN_RAND)
 	struct rtw_wdev_priv *pwdev_priv = adapter_wdev_data(padapter);
 #endif
 
@@ -8554,7 +8950,7 @@ int _issue_probereq(_adapter *padapter, const NDIS_802_11_SSID *pssid, const u8
 	pframe = (u8 *)(pmgntframe->buf_addr) + TXDESC_OFFSET;
 	pwlanhdr = (struct rtw_ieee80211_hdr *)pframe;
 
-#ifdef CONFIG_RTW_CFGVENDOR_RANDOM_MAC_OUI
+#if defined(CONFIG_RTW_CFGVENDOR_RANDOM_MAC_OUI) || defined(CONFIG_RTW_SCAN_RAND)
 	if ((pwdev_priv->pno_mac_addr[0] != 0xFF)
 	    && (check_fwstate(&padapter->mlmepriv, WIFI_STATION_STATE) == _TRUE)
 	    && (check_fwstate(&padapter->mlmepriv, WIFI_ASOC_STATE) == _FALSE))
@@ -8578,7 +8974,7 @@ int _issue_probereq(_adapter *padapter, const NDIS_802_11_SSID *pssid, const u8
 
 	_rtw_memcpy(pwlanhdr->addr2, mac, ETH_ALEN);
 
-#ifdef CONFIG_RTW_CFGVENDOR_RANDOM_MAC_OUI
+#if defined(CONFIG_RTW_CFGVENDOR_RANDOM_MAC_OUI) || defined(CONFIG_RTW_SCAN_RAND)
 	if ((pwdev_priv->pno_mac_addr[0] != 0xFF)
 	    && (check_fwstate(&padapter->mlmepriv, WIFI_STATION_STATE) == _TRUE)
 	    && (check_fwstate(&padapter->mlmepriv, WIFI_ASOC_STATE) == _FALSE)) {
@@ -8863,7 +9259,7 @@ void issue_auth(_adapter *padapter, struct sta_info *psta, unsigned short status
 	pattrib->last_txcmdsz = pattrib->pktlen;
 
 	rtw_wep_encrypt(padapter, (u8 *)pmgntframe);
-	RTW_INFO("%s\n", __FUNCTION__);
+	RTW_INFO("%s to "MAC_FMT" status:%u\n", __FUNCTION__, MAC_ARG(pwlanhdr->addr1), status);
 	dump_mgntframe(padapter, pmgntframe);
 
 	return;
@@ -8885,6 +9281,7 @@ void issue_asocrsp(_adapter *padapter, unsigned short status, struct sta_info *p
 	struct mlme_ext_info	*pmlmeinfo = &(pmlmeext->mlmext_info);
 	WLAN_BSSID_EX *pnetwork = &(pmlmeinfo->network);
 	u8 *ie = pnetwork->IEs, cap[5], i;
+	struct security_priv *psecuritypriv = &(padapter->securitypriv);
 #ifdef CONFIG_P2P
 	struct wifidirect_info	*pwdinfo = &(padapter->wdinfo);
 #ifdef CONFIG_WFD
@@ -8896,7 +9293,7 @@ void issue_asocrsp(_adapter *padapter, unsigned short status, struct sta_info *p
 	if (rtw_rfctl_is_tx_blocked_by_ch_waiting(adapter_to_rfctl(padapter)))
 		return;
 
-	RTW_INFO("%s\n", __FUNCTION__);
+	RTW_INFO("%s to "MAC_FMT" status:%u\n", __FUNCTION__, MAC_ARG(pstat->cmn.mac_addr), status);
 
 	pmgntframe = alloc_mgtxmitframe(pxmitpriv);
 	if (pmgntframe == NULL)
@@ -8992,7 +9389,7 @@ void issue_asocrsp(_adapter *padapter, unsigned short status, struct sta_info *p
 	if (pmlmepriv->ext_capab_ie_len > 0) {
 		uint ie_len = 0;
 
-		pbuf = rtw_get_ie(ie + _BEACON_IE_OFFSET_, _EXT_CAP_IE_, &ie_len, (pnetwork->IELength - _BEACON_IE_OFFSET_));
+		pbuf = rtw_get_ie(ie + _BEACON_IE_OFFSET_, WLAN_EID_EXT_CAP, &ie_len, (pnetwork->IELength - _BEACON_IE_OFFSET_));
 		if (pbuf && ie_len > 0) {
 			_rtw_memcpy(pframe, pbuf, ie_len + 2);
 			pframe += (ie_len + 2);
@@ -9068,6 +9465,14 @@ void issue_asocrsp(_adapter *padapter, unsigned short status, struct sta_info *p
 		pattrib->pktlen += pmlmepriv->wps_assoc_resp_ie_len;
 	}
 
+
+	if ((psecuritypriv->auth_type == MLME_AUTHTYPE_SAE) &&
+		pmlmepriv->assoc_rsp && pmlmepriv->assoc_rsp_len > 0) {
+		_rtw_memcpy(pframe, pmlmepriv->assoc_rsp, pmlmepriv->assoc_rsp_len);
+		pframe += pmlmepriv->assoc_rsp_len;
+		pattrib->pktlen += pmlmepriv->assoc_rsp_len;
+	}
+
 #ifdef CONFIG_P2P
 	if (rtw_p2p_chk_role(pwdinfo, P2P_ROLE_GO) && (pstat->is_p2p_device == _TRUE)) {
 		u32 len;
@@ -9077,6 +9482,9 @@ void issue_asocrsp(_adapter *padapter, unsigned short status, struct sta_info *p
 			if (pmlmepriv->p2p_assoc_resp_ie && pmlmepriv->p2p_assoc_resp_ie_len > 0) {
 				len = pmlmepriv->p2p_assoc_resp_ie_len;
 				_rtw_memcpy(pframe, pmlmepriv->p2p_assoc_resp_ie, len);
+			} else if (pmlmepriv->assoc_rsp && pmlmepriv->assoc_rsp_len > 0) {
+				len = pmlmepriv->assoc_rsp_len;
+				_rtw_memcpy(pframe, pmlmepriv->assoc_rsp, len);
 			}
 		} else
 			len = build_assoc_resp_p2p_ie(pwdinfo, pframe, pstat->p2p_status_code);
@@ -9392,8 +9800,14 @@ void _issue_assocreq(_adapter *padapter, u8 is_reassoc)
 #endif /* CONFIG_IOCTL_CFG80211 */
 
 				pframe = rtw_set_ie(pframe, EID_WPA2, pIE->Length, pIE->data, &(pattrib->pktlen));
+				/* tmp: update rsn's spp related opt. */
+				/*rtw_set_spp_amsdu_mode(padapter->registrypriv.amsdu_mode, pframe - (pIE->Length + 2), pIE->Length +2);*/
 			}
 			break;
+			case WLAN_EID_RSNX:
+				pframe = rtw_set_ie(pframe, WLAN_EID_RSNX, pIE->Length,
+					pIE->data, &(pattrib->pktlen));
+			break;
 #ifdef CONFIG_80211N_HT
 		case EID_HTCapability:
 			if (padapter->mlmepriv.htpriv.ht_option == _TRUE) {
@@ -9406,12 +9820,12 @@ void _issue_assocreq(_adapter *padapter, u8 is_reassoc)
 				}
 			}
 			break;
+#endif /* CONFIG_80211N_HT */
 
-		case EID_EXTCapability:
-			if (padapter->mlmepriv.htpriv.ht_option == _TRUE)
-				pframe = rtw_set_ie(pframe, EID_EXTCapability, pIE->Length, pIE->data, &(pattrib->pktlen));
+		case WLAN_EID_EXT_CAP:
+			pframe = rtw_set_ie(pframe, WLAN_EID_EXT_CAP, pIE->Length, pIE->data, &(pattrib->pktlen));
 			break;
-#endif /* CONFIG_80211N_HT */
+
 #ifdef CONFIG_80211AC_VHT
 		case EID_VHTCapability:
 			if (padapter->mlmepriv.vhtpriv.vht_option == _TRUE)
@@ -10319,6 +10733,12 @@ static int issue_action_ba(_adapter *padapter, unsigned char *raddr, unsigned ch
 			else /* TX AMSDU disabled */
 				BA_para_set &= ~BIT(0);
 #endif
+			psta = rtw_get_stainfo(pstapriv, raddr);
+			if (psta != NULL) {
+				if (psta->flags & WLAN_STA_AMSDU_DISABLE)
+					BA_para_set &= ~BIT(0);
+			}
+
 			BA_para_set = cpu_to_le16(BA_para_set);
 			pframe = rtw_set_fixed_ie(pframe, 2, (unsigned char *)(&(BA_para_set)), &(pattrib->pktlen));
 
@@ -10363,6 +10783,12 @@ static int issue_action_ba(_adapter *padapter, unsigned char *raddr, unsigned ch
 					BA_para_set |= BIT(0);
 			}
 
+			psta = rtw_get_stainfo(pstapriv, raddr);
+			if (psta != NULL) {
+				if (psta->flags & WLAN_STA_AMSDU_DISABLE)
+					BA_para_set &= ~BIT(0);
+			}
+
 			BA_para_set = cpu_to_le16(BA_para_set);
 
 			pframe = rtw_set_fixed_ie(pframe, 2, (unsigned char *)(&(BA_para_set)), &(pattrib->pktlen));
@@ -11123,7 +11549,9 @@ u8 collect_bss_info(_adapter *padapter, union recv_frame *precv_frame, WLAN_BSSI
 	struct registry_priv	*pregistrypriv = &padapter->registrypriv;
 	struct mlme_ext_priv	*pmlmeext = &padapter->mlmeextpriv;
 	struct mlme_ext_info	*pmlmeinfo = &(pmlmeext->mlmext_info);
-
+#ifdef	CONFIG_LAYER2_ROAMING
+	u32 *pbuf;
+#endif
 
 	len = packet_len - sizeof(struct rtw_ieee80211_hdr_3addr);
 
@@ -11242,6 +11670,7 @@ u8 collect_bss_info(_adapter *padapter, union recv_frame *precv_frame, WLAN_BSSI
 			u32	attr_contentlen = 0;
 			u8 listen_ch[5] = { 0x00 };
 
+			attr_contentlen = sizeof(listen_ch);
 			rtw_get_p2p_attr_content(p2p_ie, p2p_ielen, P2P_ATTR_LISTEN_CH, listen_ch, &attr_contentlen);
 			bssid->Configuration.DSConfig = listen_ch[4];
 		} else {
@@ -11373,10 +11802,17 @@ u8 collect_bss_info(_adapter *padapter, union recv_frame *precv_frame, WLAN_BSSI
 #ifdef CONFIG_RTW_80211K
 	p = rtw_get_ie(bssid->IEs + ie_offset, _EID_RRM_EN_CAP_IE_, &len, bssid->IELength - ie_offset);
 	if (p)
-		_rtw_memcpy(bssid->PhyInfo.rm_en_cap, (p + 2), *(p + 1));
+		_rtw_memcpy(bssid->PhyInfo.rm_en_cap, (p + 2), MIN(*(p + 1),
+			    sizeof(bssid->PhyInfo.rm_en_cap)));
 
 	/* save freerun counter */
 	bssid->PhyInfo.free_cnt = precv_frame->u.hdr.attrib.free_cnt;
+#endif
+#ifdef	CONFIG_LAYER2_ROAMING
+	pbuf = (u32 *)((u8 *)pframe + sizeof(struct rtw_ieee80211_hdr_3addr));
+	bssid->tsf = le32_to_cpu(*(pbuf + 1));
+	bssid->tsf = bssid->tsf << 32;
+	bssid->tsf |= le32_to_cpu(*pbuf);
 #endif
 	return _SUCCESS;
 }
@@ -12192,6 +12628,58 @@ void update_sta_info(_adapter *padapter, struct sta_info *psta)
 
 }
 
+#ifdef CONFIG_80211D
+static void rtw_joinbss_update_regulatory(_adapter *adapter, const WLAN_BSSID_EX *network)
+{
+	struct rf_ctl_t *rfctl = adapter_to_rfctl(adapter);
+
+	if (rfctl->regd_src == REGD_SRC_RTK_PRIV
+		&& !rtw_rfctl_is_disable_sw_channel_plan(rfctl_to_dvobj(rfctl))
+	) {
+		struct mlme_priv *mlme = &adapter->mlmepriv;
+		const u8 *country_ie = NULL;
+		sint country_ie_len = 0;
+
+		if (network) {
+			if (rtw_iface_accept_country_ie(adapter)) {
+				country_ie = rtw_get_ie(BSS_EX_TLV_IES(network)
+					, WLAN_EID_COUNTRY, &country_ie_len, BSS_EX_TLV_IES_LEN(network));
+				if (country_ie) {
+					if (country_ie_len < 6) {
+						country_ie = NULL;
+						country_ie_len = 0;
+					} else
+						country_ie_len += 2;
+				}
+			}
+		}
+
+		if (country_ie) {
+			rtw_buf_update(&mlme->recv_country_ie, &mlme->recv_country_ie_len, country_ie, country_ie_len);
+			if (rtw_apply_recv_country_ie_cmd(adapter, RTW_CMDF_DIRECTLY
+				, network->Configuration.DSConfig > 14 ? BAND_ON_5G : BAND_ON_2_4G
+				, network->Configuration.DSConfig, country_ie) != _SUCCESS
+			)
+				RTW_WARN(FUNC_ADPT_FMT" rtw_apply_recv_country_ie_cmd() fail\n", FUNC_ADPT_ARG(adapter));
+		} else
+			rtw_buf_free(&mlme->recv_country_ie, &mlme->recv_country_ie_len);
+	}
+}
+
+static void rtw_leavebss_update_regulatory(_adapter *adapter)
+{
+	struct dvobj_priv *dvobj = adapter_to_dvobj(adapter);
+	struct rf_ctl_t *rfctl = dvobj_to_rfctl(dvobj);
+
+	if (rfctl->regd_src == REGD_SRC_RTK_PRIV
+		&& !rtw_rfctl_is_disable_sw_channel_plan(dvobj)
+	) {
+		if (rtw_apply_recv_country_ie_cmd(adapter, RTW_CMDF_DIRECTLY, 0, 0, NULL) != _SUCCESS)
+			RTW_WARN(FUNC_ADPT_FMT" rtw_apply_recv_country_ie_cmd() fail\n", FUNC_ADPT_ARG(adapter));
+	}
+}
+#endif /* CONFIG_80211D */
+
 static void rtw_mlmeext_disconnect(_adapter *padapter)
 {
 	struct mlme_priv		*pmlmepriv = &padapter->mlmepriv;
@@ -12264,6 +12752,11 @@ static void rtw_mlmeext_disconnect(_adapter *padapter)
 		rtw_hal_set_hwreg(padapter, HW_VAR_STOP_FCS_MODE, NULL);
 #endif
 
+#ifdef CONFIG_80211D
+	if (self_action == MLME_STA_DISCONNECTED)
+		rtw_leavebss_update_regulatory(padapter);
+#endif
+
 	if (!(MLME_IS_STA(padapter) && MLME_IS_OPCH_SW(padapter))) {
 		/* DFS and channel status no need to check here for STA under OPCH_SW */
 		u8 ch, bw, offset;
@@ -12308,6 +12801,8 @@ static void rtw_mlmeext_disconnect(_adapter *padapter)
 	rtw_set_rts_bw(padapter);
 #endif/*CONFIG_RTS_FULL_BW*/
 
+	pmlmeinfo->assoc_AP_vendor = HT_IOT_PEER_UNKNOWN;
+	rtw_phydm_update_ap_vendor_ie(padapter);
 }
 
 void mlmeext_joinbss_event_callback(_adapter *padapter, int join_res)
@@ -12320,7 +12815,7 @@ void mlmeext_joinbss_event_callback(_adapter *padapter, int join_res)
 	u8	join_type;
 	struct mlme_priv	*pmlmepriv = &padapter->mlmepriv;
 
-#ifndef CONFIG_IOCTL_CFG80211
+#if (!defined(CONFIG_IOCTL_CFG80211)) || defined(CONFIG_LAYER2_ROAMING)
 	struct security_priv *psecuritypriv = &padapter->securitypriv;
 #endif
 
@@ -12335,7 +12830,7 @@ void mlmeext_joinbss_event_callback(_adapter *padapter, int join_res)
 			rtw_hal_rcr_set_chk_bssid(padapter, MLME_STA_DISCONNECTED);
 
 		rtw_btcoex_connect_notify(padapter, join_type);
-
+		pmlmeinfo->assoc_AP_vendor = HT_IOT_PEER_UNKNOWN;
 		goto exit_mlmeext_joinbss_event_callback;
 	}
 
@@ -12432,14 +12927,39 @@ void mlmeext_joinbss_event_callback(_adapter *padapter, int join_res)
 
 exit_mlmeext_joinbss_event_callback:
 
+	rtw_phydm_update_ap_vendor_ie(padapter);
+
 	rtw_join_done_chk_ch(padapter, join_res);
 #ifdef CONFIG_RTW_REPEATER_SON
 	rtw_rson_join_done(padapter);
 #endif
 
-	RTW_INFO("=>%s - End to Connection without 4-way\n", __FUNCTION__);
-}
-
+#ifdef CONFIG_LAYER2_ROAMING
+	if ((psecuritypriv->dot11PrivacyAlgrthm == _NO_PRIVACY_) &&
+		(pmlmepriv->roam_network)) {
+		struct xmit_frame *rframe;
+		struct xmit_priv *pxmitpriv = &padapter->xmitpriv;
+		_list *plist, *phead;
+		_irqL irqL;
+		_pkt *pkt;
+
+		padapter->mlmepriv.roam_network = NULL;
+		_enter_critical_bh(&pxmitpriv->rpkt_queue.lock, &irqL);
+		phead = get_list_head(&pxmitpriv->rpkt_queue);
+		plist = get_next(phead);
+		while ((rtw_end_of_queue_search(phead, plist)) == _FALSE) {
+			rframe = LIST_CONTAINOR(plist, struct xmit_frame, list);
+			plist = get_next(plist);
+			rtw_list_delete(&rframe->list);
+			pkt = rframe->pkt;
+			rtw_xmit_posthandle(padapter, rframe, pkt);
+		}
+		_exit_critical_bh(&pxmitpriv->rpkt_queue.lock, &irqL);
+	}
+#endif
+	RTW_INFO("=>%s - End to Connection without 4-way\n", __FUNCTION__);
+}
+
 /* currently only adhoc mode will go here */
 void mlmeext_sta_add_event_callback(_adapter *padapter, struct sta_info *psta)
 {
@@ -12737,9 +13257,6 @@ void linked_status_chk(_adapter *padapter, u8 from_timer)
 	struct mlme_ext_info	*pmlmeinfo = &(pmlmeext->mlmext_info);
 	struct sta_priv		*pstapriv = &padapter->stapriv;
 	struct mlme_priv	*pmlmepriv = &padapter->mlmepriv;
-#ifdef CONFIG_LAYER2_ROAMING
-	struct recv_priv	*precvpriv = &padapter->recvpriv;
-#endif
 
 #ifdef CONFIG_RTW_WDS
 	rtw_wds_gptr_expire(padapter);
@@ -12760,20 +13277,6 @@ void linked_status_chk(_adapter *padapter, u8 from_timer)
 
 #if defined(CONFIG_RTW_REPEATER_SON)
 	rtw_rson_scan_wk_cmd(padapter, RSON_SCAN_PROCESS);
-#elif defined(CONFIG_LAYER2_ROAMING)
-		if (rtw_chk_roam_flags(padapter, RTW_ROAM_ACTIVE)) {
-			RTW_INFO("signal_strength_data.avg_val = %d\n", precvpriv->signal_strength_data.avg_val);
-			if ((precvpriv->signal_strength_data.avg_val < pmlmepriv->roam_rssi_threshold)
-				&& (rtw_get_passing_time_ms(pmlmepriv->last_roaming) >= pmlmepriv->roam_scan_int*2000)) {
-#ifdef CONFIG_RTW_80211K
-				rtw_roam_nb_discover(padapter, _FALSE);
-#endif
-				pmlmepriv->need_to_roam = _TRUE;
-				rtw_drv_scan_by_self(padapter, RTW_AUTO_SCAN_REASON_ROAM);
-				pmlmepriv->last_roaming = rtw_get_current_time();
-			} else
-				pmlmepriv->need_to_roam = _FALSE;
-		}
 #endif
 #ifdef CONFIG_MCC_MODE
 		/*
@@ -13528,6 +14031,12 @@ u8 setopmode_hdl(_adapter *padapter, u8 *pbuf)
 		}
 	}
 
+#ifdef CONFIG_FW_MULTI_PORT_SUPPORT
+	/* Enable beacon early interrupt IMR of AP mode after port switch done */
+	if (MLME_IS_AP(padapter))
+		rtw_hal_set_ap_bcn_imr_cmd(padapter, 1);
+#endif
+
 #ifdef CONFIG_BT_COEXIST
 	if (psetop->mode == Ndis802_11APMode
 		|| psetop->mode == Ndis802_11_mesh
@@ -13553,11 +14062,18 @@ u8 createbss_hdl(_adapter *padapter, u8 *pbuf)
 	struct createbss_parm *parm = (struct createbss_parm *)pbuf;
 	u8 ret = H2C_SUCCESS;
 	/* u8	initialgain; */
+	struct dvobj_priv *dvobj = adapter_to_dvobj(padapter);
+	struct rf_ctl_t *rfctl = dvobj_to_rfctl(dvobj);
 
 	if ((parm->req_ch == 0 && pmlmeinfo->state == WIFI_FW_AP_STATE)
 		|| parm->req_ch != 0
 	) {
 		start_bss_network(padapter, parm);
+		if (rfctl->ap_csa_en) {
+			u8 enable = 0;
+			rfctl->ap_csa_en = AP_CSA_DISABLE;
+			rtw_hal_set_hwreg(padapter, HW_VAR_BCN_EARLY_C2H_RPT, &enable);
+		}
 		goto exit;
 	}
 
@@ -13618,6 +14134,13 @@ u8 join_cmd_hdl(_adapter *padapter, u8 *pbuf)
 #ifdef CONFIG_ANTENNA_DIVERSITY
 	struct joinbss_parm	*pparm = (struct joinbss_parm *)pbuf;
 #endif /* CONFIG_ANTENNA_DIVERSITY */
+#ifdef  CONFIG_LAYER2_ROAMING
+	struct mlme_priv *pmlmepriv = &(padapter->mlmepriv);
+	struct wlan_network     *rnetwork = pmlmepriv->roam_network;
+	struct beacon_keys bcn_keys;
+	u32 roam_ielen;
+	_irqL irqL;
+#endif
 	u32 i;
 	/* u8	initialgain; */
 	/* u32	acparm; */
@@ -13792,6 +14315,43 @@ u8 join_cmd_hdl(_adapter *padapter, u8 *pbuf)
 
 	start_clnt_join(padapter);
 
+#ifdef	CONFIG_LAYER2_ROAMING
+	_enter_critical_bh(&pmlmepriv->clnt_auth_lock, &irqL);
+	if (rnetwork && (pmlmeinfo->state & (WIFI_FW_AUTH_NULL | WIFI_FW_AUTH_STATE))) {
+		struct beacon_keys bcn_keys;
+		u32 roam_ielen;
+
+		roam_ielen = rnetwork->network.IELength;
+		update_network(&(pmlmepriv->cur_network.network), &(rnetwork->network), padapter, _TRUE);
+
+		/* update bcn keys */
+		if (rtw_get_bcn_keys_from_bss(&rnetwork->network, &bcn_keys) == _TRUE) {
+			_rtw_memcpy(&pmlmepriv->cur_beacon_keys, &bcn_keys, sizeof(bcn_keys));
+			if (is_hidden_ssid(bcn_keys.ssid, bcn_keys.ssid_len)) {
+				_rtw_memcpy(pmlmepriv->cur_beacon_keys.ssid, pmlmeinfo->network.Ssid.Ssid, IW_ESSID_MAX_SIZE);
+				pmlmepriv->cur_beacon_keys.ssid_len = pmlmeinfo->network.Ssid.SsidLength;
+			}
+		} else {
+			RTW_ERR("%s: get beacon keys failed\n", __func__);
+			_rtw_memset(&pmlmepriv->cur_beacon_keys, 0, sizeof(bcn_keys));
+		}
+		#ifdef CONFIG_BCN_CNT_CONFIRM_HDL
+		pmlmepriv->new_beacon_cnts = 0;
+		#endif
+
+		/* check the vendor of the assoc AP */
+		pmlmeinfo->assoc_AP_vendor = check_assoc_AP(rnetwork->network.IEs, rnetwork->network.IELength);
+		rtw_phydm_update_ap_vendor_ie(padapter);
+
+		/* update TSF Value */
+		pmlmeext->TSFValue = rnetwork->network.tsf + rtw_get_passing_time_ms(rnetwork->last_scanned)*1000;
+		pmlmeext->bcn_cnt = 0;
+		pmlmeext->last_bcn_cnt = 0;
+		/* start auth */
+		start_clnt_auth(padapter);
+	}
+	_exit_critical_bh(&pmlmepriv->clnt_auth_lock, &irqL);
+#endif
 	return H2C_SUCCESS;
 
 }
@@ -13905,11 +14465,6 @@ u8 rtw_scan_sparse(_adapter *adapter, struct rtw_ieee80211_channel *ch, u8 ch_nu
 #ifndef RTW_SCAN_SPARSE_CH_NUM_BG
 #define RTW_SCAN_SPARSE_CH_NUM_BG 4
 #endif
-#ifdef CONFIG_LAYER2_ROAMING
-#ifndef RTW_SCAN_SPARSE_CH_NUM_ROAMING_ACTIVE
-#define RTW_SCAN_SPARSE_CH_NUM_ROAMING_ACTIVE 1
-#endif
-#endif
 
 #define SCAN_SPARSE_CH_NUM_INVALID 255
 
@@ -13950,14 +14505,6 @@ u8 rtw_scan_sparse(_adapter *adapter, struct rtw_ieee80211_channel *ch, u8 ch_nu
 		max_allow_ch = rtw_min(max_allow_ch, RTW_SCAN_SPARSE_CH_NUM_BG);
 #endif
 
-#if  defined(CONFIG_LAYER2_ROAMING) && defined(RTW_SCAN_SPARSE_ROAMING_ACTIVE)
-	if (rtw_chk_roam_flags(adapter, RTW_ROAM_ACTIVE)) {
-		if (busy_traffic == _TRUE && adapter->mlmepriv.need_to_roam == _TRUE)
-			max_allow_ch = rtw_min(max_allow_ch, RTW_SCAN_SPARSE_CH_NUM_ROAMING_ACTIVE);
-	}
-#endif
-
-
 	if (max_allow_ch != SCAN_SPARSE_CH_NUM_INVALID) {
 		int i;
 		int k = 0;
@@ -14026,7 +14573,7 @@ u32 rtw_scan_timeout_decision(_adapter *padapter)
 
 	if (is_supported_5g(padapter->registrypriv.wireless_mode)
 		&& IsSupported24G(padapter->registrypriv.wireless_mode)) 
-		max_chan_num = MAX_CHANNEL_NUM;/* dual band */
+		max_chan_num = MAX_CHANNEL_NUM_2G_5G;/* dual band */
 	else
 		max_chan_num = MAX_CHANNEL_NUM_2G;/*single band*/
 
@@ -14053,17 +14600,28 @@ u32 rtw_scan_timeout_decision(_adapter *padapter)
 }
 
 static int rtw_scan_ch_decision(_adapter *padapter, struct rtw_ieee80211_channel *out,
-		u32 out_num, struct rtw_ieee80211_channel *in, u32 in_num, bool no_sparse)
+		u32 out_num, struct rtw_ieee80211_channel *in, u32 in_num, bool no_sparse, int reason)
 {
 	int i, j;
 	int set_idx;
 	u8 chan;
 	struct rf_ctl_t *rfctl = adapter_to_rfctl(padapter);
 	struct registry_priv *regsty = dvobj_to_regsty(adapter_to_dvobj(padapter));
+#ifdef CONFIG_RTW_ROAM_QUICKSCAN
+	struct mlme_ext_priv *pmlmeext = &padapter->mlmeextpriv;
+#endif
 
 	/* clear first */
 	_rtw_memset(out, 0, sizeof(struct rtw_ieee80211_channel) * out_num);
 
+#ifdef CONFIG_RTW_ROAM_QUICKSCAN
+	if ((reason == RTW_AUTO_SCAN_REASON_ROAM_ACTIVE) && (pmlmeext->quickscan_next)) {
+		pmlmeext->quickscan_next = _FALSE;
+		_rtw_memcpy(out, pmlmeext->roam_ch, sizeof(struct rtw_ieee80211_channel)*RTW_CHANNEL_SCAN_AMOUNT);
+		return pmlmeext->roam_ch_num;
+	}
+#endif
+
 	/* acquire channels from in */
 	j = 0;
 	for (i = 0; i < in_num; i++) {
@@ -14137,7 +14695,7 @@ static void sitesurvey_res_reset(_adapter *adapter, struct sitesurvey_parm *parm
 {
 	struct ss_res *ss = &adapter->mlmeextpriv.sitesurvey_res;
 	RT_CHANNEL_INFO *chset = adapter_to_chset(adapter);
-	int i;
+	int i, reason = 0;
 
 	ss->bss_cnt = 0;
 	ss->activate_ch_cnt = 0;
@@ -14160,11 +14718,12 @@ static void sitesurvey_res_reset(_adapter *adapter, struct sitesurvey_parm *parm
 		} else
 			ss->ssid[i].SsidLength = 0;
 	}
-
+	reason = parm->reason;
 	ss->ch_num = rtw_scan_ch_decision(adapter
 					, ss->ch, RTW_CHANNEL_SCAN_AMOUNT
 					, parm->ch, parm->ch_num
 					, parm->acs
+					, reason
 				);
 
 	for (i = 0; i < MAX_CHANNEL_NUM; i++)
@@ -14673,6 +15232,68 @@ void sitesurvey_set_offch_state(_adapter *adapter, u8 scan_state)
 	_exit_critical_mutex(&rfctl->offch_mutex, NULL);
 }
 
+#ifdef CONFIG_RTW_ROAM_QUICKSCAN
+extern inline int is_same_ess(WLAN_BSSID_EX *a, WLAN_BSSID_EX *b);
+extern int rtw_is_desired_network(_adapter *adapter, struct wlan_network *pnetwork);
+void generate_quickss(_adapter *padapter)
+{
+	struct mlme_priv        *pmlmepriv = &(padapter->mlmepriv);
+	struct wlan_network     *pnetwork = NULL;
+	struct mlme_ext_priv *pmlmeext = &padapter->mlmeextpriv;
+	struct rtw_ieee80211_channel *roam_ch = pmlmeext->roam_ch;
+	struct rf_ctl_t *rfctl = adapter_to_rfctl(padapter);
+	int chan;
+	_irqL irqL;
+	_list *plist, *phead;
+	u8 *target_ssid=NULL, *ssid=NULL, ds_cfg, j, ch_num;
+	u32  target_ssid_len=0, ssid_len=0;
+	u8 mark[166];
+
+	target_ssid = pmlmepriv->cur_network.network.Ssid.Ssid;
+	target_ssid_len = pmlmepriv->cur_network.network.Ssid.SsidLength;
+	_rtw_memset(mark, 0, sizeof(u8)*166);
+
+	_enter_critical_bh(&(pmlmepriv->scanned_queue.lock), &irqL);
+	phead = get_list_head(&(pmlmepriv->scanned_queue));
+	if (!phead) {
+		_exit_critical_bh(&(pmlmepriv->scanned_queue.lock), &irqL);
+		return;
+	}
+	plist = get_next(phead);
+	if (!plist) {
+		_exit_critical_bh(&(pmlmepriv->scanned_queue.lock), &irqL);
+		return;
+	}
+	while (1) {
+		if (rtw_end_of_queue_search(phead, plist) == _TRUE)
+			break;
+
+		pnetwork = LIST_CONTAINOR(plist, struct wlan_network, list);
+		if (!pnetwork)
+			break;
+
+		ds_cfg = pnetwork->network.Configuration.DSConfig;
+		if (is_same_ess(&pnetwork->network, &pmlmepriv->cur_network.network) &&
+				rtw_is_desired_network(padapter, pnetwork))
+			mark[ds_cfg] = 1;
+
+		plist = get_next(plist);
+	}
+       /* ex: assume roaming channel=1/6/40/165, then mark[1]/[6]/[40]/[165] are 1.  */
+	_exit_critical_bh(&(pmlmepriv->scanned_queue.lock), &irqL);
+
+	ch_num = 0;
+	for (j = 0; j < rfctl->max_chan_nums; j++) {
+		chan = rfctl->channel_set[j].ChannelNum;
+		if (mark[chan]) {
+			roam_ch[ch_num].hw_value = chan;
+			roam_ch[ch_num++].flags = rfctl->channel_set[j].flags;
+		}
+	}
+	pmlmeext->roam_ch_num = ch_num;
+}
+#endif
+
 u8 sitesurvey_cmd_hdl(_adapter *padapter, u8 *pbuf)
 {
 	struct sitesurvey_parm	*pparm = (struct sitesurvey_parm *)pbuf;
@@ -14682,8 +15303,8 @@ u8 sitesurvey_cmd_hdl(_adapter *padapter, u8 *pbuf)
 #endif
 	struct mlme_ext_priv *pmlmeext = &padapter->mlmeextpriv;
 	struct ss_res *ss = &pmlmeext->sitesurvey_res;
-#ifdef CONFIG_RTW_CFGVENDOR_RANDOM_MAC_OUI
-		struct rtw_wdev_priv *pwdev_priv = adapter_wdev_data(padapter);
+#if defined(CONFIG_RTW_CFGVENDOR_RANDOM_MAC_OUI) || defined(CONFIG_RTW_SCAN_RAND)
+	struct rtw_wdev_priv *pwdev_priv = adapter_wdev_data(padapter);
 #endif
 	u8 val8;
 
@@ -14722,14 +15343,16 @@ u8 sitesurvey_cmd_hdl(_adapter *padapter, u8 *pbuf)
 		goto operation_by_state;
 
 	case SCAN_START:
-#ifdef CONFIG_RTW_CFGVENDOR_RANDOM_MAC_OUI
+#if defined(CONFIG_RTW_CFGVENDOR_RANDOM_MAC_OUI) || defined(CONFIG_RTW_SCAN_RAND)
 		if ((pwdev_priv->pno_mac_addr[0] != 0xFF)
 			    && (check_fwstate(&padapter->mlmepriv, WIFI_STATION_STATE) == _TRUE)
 	    	    && (check_fwstate(&padapter->mlmepriv, WIFI_ASOC_STATE) == _FALSE)) {
 			u16 seq_num;
 
+#ifdef CONFIG_RTW_CFGVENDOR_RANDOM_MAC_OUI
 			rtw_hal_pno_random_gen_mac_addr(padapter);
-			rtw_hal_set_hw_mac_addr(padapter, pwdev_priv->pno_mac_addr);
+#endif
+			rtw_hal_set_hw_macaddr(padapter, pwdev_priv->pno_mac_addr);
 			get_random_bytes(&seq_num, 2);
 			pwdev_priv->pno_scan_seq_num = seq_num & 0xFFF;
 			RTW_INFO("%s pno_scan_seq_num %d\n", __func__,
@@ -15015,8 +15638,8 @@ u8 sitesurvey_cmd_hdl(_adapter *padapter, u8 *pbuf)
 #endif /* CONFIG_P2P */
 
 	case SCAN_COMPLETE:
-#ifdef CONFIG_RTW_CFGVENDOR_RANDOM_MAC_OUI
-		rtw_hal_set_hw_mac_addr(padapter, adapter_mac_addr(padapter));
+#if defined(CONFIG_RTW_CFGVENDOR_RANDOM_MAC_OUI) || defined(CONFIG_RTW_SCAN_RAND)
+		rtw_hal_set_hw_macaddr(padapter, adapter_mac_addr(padapter));
 #endif
 #ifdef CONFIG_P2P
 		if (rtw_p2p_chk_state(pwdinfo, P2P_STATE_SCAN)
@@ -15079,7 +15702,10 @@ u8 sitesurvey_cmd_hdl(_adapter *padapter, u8 *pbuf)
 		if (ss->token)
 			rm_post_event(padapter, ss->token, RM_EV_survey_done);
 #endif /* CONFIG_RTW_80211K */
-
+#ifdef CONFIG_RTW_ROAM_QUICKSCAN
+		if (padapter->mlmepriv.need_to_roam == _TRUE)
+			generate_quickss(padapter);
+#endif
 		break;
 	}
 
@@ -15098,6 +15724,19 @@ u8 setauth_hdl(_adapter *padapter, unsigned char *pbuf)
 	return	H2C_SUCCESS;
 }
 
+static u8 amsdu_spp_enable(_adapter *pdapter, enum security_type type)
+{
+	u8 ret = _FALSE;
+
+	if (pdapter->registrypriv.amsdu_mode == RTW_AMSDU_MODE_SPP) {
+		if ( type == _AES_ || type == _CCMP_256_
+			|| type == _GCMP_ || type == _GCMP_256_ )
+			ret = _SUCCESS;
+	}
+
+	return ret;
+}
+
 /*
 SEC CAM Entry format (32 bytes)
 DW0 - MAC_ADDR[15:0] | Valid[15] | MFB[14:8] | RSVD[7]  | GK[6] | MIC_KEY[5] | SEC_TYPE[4:2] | KID[1:0]
@@ -15189,8 +15828,9 @@ u8 setkey_hdl(_adapter *padapter, u8 *pbuf)
 	if (pparm->algorithm & _SEC_TYPE_256_)  {
 		RTW_INFO_DUMP("GTK : ", pparm->key, sizeof(pparm->key));
 		ctrl |= BIT(9);
-	}	
-
+	}
+	if (amsdu_spp_enable(padapter, pparm->algorithm) == _SUCCESS)
+		ctrl |= BIT(7);
 	write_cam(padapter, cam_id, ctrl, addr, pparm->key);
 
 	/* if ((cam_id > 3) && (((pmlmeinfo->state&0x03) == WIFI_FW_AP_STATE) || ((pmlmeinfo->state&0x03) == WIFI_FW_ADHOC_STATE)))*/
@@ -15237,7 +15877,28 @@ u8 setkey_hdl(_adapter *padapter, u8 *pbuf)
 enable_mc:
 	/* allow multicast packets to driver */
 	rtw_hal_set_hwreg(padapter, HW_VAR_ON_RCR_AM, null_addr);
+#ifdef CONFIG_LAYER2_ROAMING
+	if (padapter->mlmepriv.roam_network) {
+		struct xmit_frame *rframe;
+		struct xmit_priv *pxmitpriv = &padapter->xmitpriv;
+		_list *plist, *phead;
+		_irqL irqL;
+		_pkt *pkt;
 
+		padapter->mlmepriv.roam_network = NULL;
+		_enter_critical_bh(&pxmitpriv->rpkt_queue.lock, &irqL);
+		phead = get_list_head(&pxmitpriv->rpkt_queue);
+		plist = get_next(phead);
+		while ((rtw_end_of_queue_search(phead, plist)) == _FALSE) {
+			rframe = LIST_CONTAINOR(plist, struct xmit_frame, list);
+			plist = get_next(plist);
+			rtw_list_delete(&rframe->list);
+			pkt = rframe->pkt;
+			rtw_xmit_posthandle(padapter, rframe, pkt);
+		}
+		_exit_critical_bh(&pxmitpriv->rpkt_queue.lock, &irqL);
+	}
+#endif
 	return H2C_SUCCESS;
 }
 
@@ -15338,7 +15999,12 @@ u8 set_stakey_hdl(_adapter *padapter, u8 *pbuf)
 			ctrl |= BIT(9);
 		}
 
+		if (amsdu_spp_enable(padapter, pparm->algorithm) == _SUCCESS)
+			ctrl |= BIT(7);
+
 		write_cam(padapter, cam_id, ctrl, pparm->addr, pparm->key);
+		if (!(pparm->gk))
+			ATOMIC_INC(&psta->keytrack);	/*CVE-2020-24587*/
 	}
 	ret = H2C_SUCCESS_RSP;
 
@@ -15673,10 +16339,11 @@ void change_band_update_ie(_adapter *padapter, WLAN_BSSID_EX *pnetwork, u8 ch)
 		if ((pmlmepriv->htpriv.ht_option == _TRUE)
 			&& REGSTY_IS_11AC_ENABLE(&padapter->registrypriv)
 			&& is_supported_vht(padapter->registrypriv.wireless_mode)
-			&& (!rfctl->country_ent || COUNTRY_CHPLAN_EN_11AC(rfctl->country_ent))
+			&& RFCTL_REG_EN_11AC(rfctl)
 		) {
-			if (REGSTY_IS_11AC_AUTO(&padapter->registrypriv)
-				|| pmlmepriv->ori_vht_en)
+			if (pmlmepriv->vhtpriv.upper_layer_setting)
+				rtw_reattach_vht_ies(padapter, pnetwork);
+			else if (REGSTY_IS_11AC_AUTO(&padapter->registrypriv))
 				rtw_vht_ies_attach(padapter, pnetwork);
 		}
 		#endif
@@ -15815,6 +16482,10 @@ void rtw_join_done_chk_ch(_adapter *adapter, int join_res)
 				}
 
 				clr_fwstate(mlme, WIFI_OP_CH_SWITCHING);
+				#ifdef CONFIG_ACTIVE_TPC_REPORT
+				if (MLME_ACTIVE_TPC_REPORT(mlme))
+					update_beacon(iface, WLAN_EID_TPC_REPORT, NULL, _FALSE, 0);
+				#endif
 				update_beacon(iface, 0xFF, NULL, _TRUE, 0);
 			}
 #endif /* CONFIG_AP_MODE */
@@ -15840,6 +16511,11 @@ void rtw_join_done_chk_ch(_adapter *adapter, int join_res)
 			}
 #endif
 		}
+
+		#ifdef CONFIG_80211D
+		rtw_leavebss_update_regulatory(adapter);
+		#endif
+
 #ifdef CONFIG_DFS_MASTER
 		rtw_dfs_rd_en_decision(adapter, MLME_STA_DISCONNECTED, 0);
 #endif
@@ -15864,6 +16540,7 @@ void rtw_join_done_chk_ch(_adapter *adapter, int join_res)
 int rtw_chk_start_clnt_join(_adapter *adapter, u8 *ch, u8 *bw, u8 *offset)
 {
 #ifdef CONFIG_CONCURRENT_MODE
+	struct rf_ctl_t *rfctl = adapter_to_rfctl(adapter);
 	bool chbw_allow = _TRUE;
 #endif
 	bool connect_allow = _TRUE;
@@ -15992,6 +16669,7 @@ int rtw_chk_start_clnt_join(_adapter *adapter, u8 *ch, u8 *bw, u8 *offset)
 						rtw_ap_inform_ch_switch(iface, pmlmeext->cur_channel , pmlmeext->cur_ch_offset);
 					else
 					#endif
+					if (rfctl->ap_csa_en == AP_CSA_DISABLE)
 						rtw_sta_flush(iface, _FALSE);
 
 					rtw_hal_set_hwreg(iface, HW_VAR_CHECK_TXBUF, 0);
@@ -16007,15 +16685,27 @@ int rtw_chk_start_clnt_join(_adapter *adapter, u8 *ch, u8 *bw, u8 *offset)
 				}
 			}
 		}
-
-		#ifdef CONFIG_DFS_MASTER
-		rtw_dfs_rd_en_decision(adapter, MLME_STA_CONNECTING, 0);
-		#endif
 	}
 #endif /* CONFIG_CONCURRENT_MODE */
 
+	#ifdef CONFIG_80211D
+	rtw_joinbss_update_regulatory(adapter, &adapter->mlmeextpriv.mlmext_info.network);
+	#endif
+
+	#ifdef CONFIG_DFS_MASTER
+	rtw_dfs_rd_en_decision(adapter, MLME_STA_CONNECTING, 0);
+	#endif
+
 exit:
 
+#if defined(CONFIG_CONCURRENT_MODE) && defined(CONFIG_AP_MODE)
+	if (rfctl->ap_csa_en != AP_CSA_DISABLE) {
+		u8 enable = 0;
+		rfctl->ap_csa_en = AP_CSA_DISABLE;
+		rtw_hal_set_hwreg(adapter, HW_VAR_BCN_EARLY_C2H_RPT, &enable);
+	}
+#endif
+
 	if (connect_allow == _TRUE) {
 		RTW_INFO(FUNC_ADPT_FMT" union: %u,%u,%u\n", FUNC_ADPT_ARG(adapter), u_ch, u_bw, u_offset);
 		rtw_mi_update_union_chan_inf(adapter, u_ch, u_offset, u_bw);
@@ -16118,55 +16808,358 @@ u8 rtw_set_chbw_hdl(_adapter *padapter, u8 *pbuf)
 	return	H2C_SUCCESS;
 }
 
+static void get_str_of_set_chplan_keys(char *buf, u8 buf_len, struct SetChannelPlan_param *param)
+{
+	char *pos = buf;
+
+#ifdef CONFIG_80211D
+	if (param->has_cisr) {
+		pos += snprintf(pos, buf_len - (pos - buf), "alpha2:"ALPHA2_FMT" %s"
+			, ALPHA2_ARG(param->cisr.alpha2), cis_status_str(param->cisr.status));
+	} else
+#endif
+	if (param->has_country)
+		pos += snprintf(pos, buf_len - (pos - buf), "alpha2:"ALPHA2_FMT, ALPHA2_ARG(param->country_ent.alpha2));
+	else {
+		if (param->channel_plan == RTW_CHPLAN_UNSPECIFIED)
+			pos += snprintf(pos, buf_len - (pos - buf), "chplan:NA");
+		else
+			pos += snprintf(pos, buf_len - (pos - buf), "chplan:0x%02X", param->channel_plan);
+
+		#if CONFIG_IEEE80211_BAND_6GHZ
+		if (param->channel_plan_6g == RTW_CHPLAN_6G_UNSPECIFIED)
+			pos += snprintf(pos, buf_len - (pos - buf), " chplan_6g:NA");
+		else
+			pos += snprintf(pos, buf_len - (pos - buf), " chplan_6g:0x%02X", param->channel_plan_6g);
+		#endif
+	}
+}
+
+#ifdef CONFIG_80211D
+static bool rtw_chplan_rtk_priv_req_prehdl_country_ie(_adapter *adapter, struct SetChannelPlan_param *param, const char *caller)
+{
+	struct rf_ctl_t *rfctl = adapter_to_rfctl(adapter);
+	int i;
+	bool effected = 1;
+
+#ifdef CONFIG_RTW_DEBUG
+	if (rtw_drv_log_level >= _DRV_DEBUG_) {
+		RTW_PRINT("%s cisr before\n", caller);
+		dump_country_ie_slave_records(RTW_DBGDUMP, rfctl, 0);
+	}
+#endif
+
+	if (param->inr == RTW_REGD_SET_BY_USER
+		&& rfctl->effected_cisr_id != CONFIG_IFACE_NUMBER
+	) {
+		/* country IE setting is applied, user setting is only recorded but not applied */
+		effected = 0;
+		goto exit;
+	}
+
+	if (param->inr == RTW_REGD_SET_BY_COUNTRY_IE) {
+		struct country_ie_slave_record ori_cisr = rfctl->cisr[adapter->iface_id];
+		struct country_ie_slave_record ori_ecisr;
+		u8 ori_ecisr_id = rfctl->effected_cisr_id;
+		u8 new_ecisr_id = CONFIG_IFACE_NUMBER;
+		u8 status_score[] = { /* conservative policy */
+			[COUNTRY_IE_SLAVE_UNKNOWN] = 3,
+			[COUNTRY_IE_SLAVE_OPCH_NOEXIST] = 2,
+			[COUNTRY_IE_SLAVE_APPLICABLE] = 1,
+		};
+		char buf[32];
+
+		if (_rtw_memcmp(&rfctl->cisr[adapter->iface_id], &param->cisr, sizeof(param->cisr)) == _TRUE) {
+			/* record no change  */
+			effected = 0;
+			goto exit;
+		}
+
+		if (ori_ecisr_id != CONFIG_IFACE_NUMBER)
+			_rtw_memcpy(&ori_ecisr, &rfctl->cisr[ori_ecisr_id], sizeof(ori_ecisr));
+
+		_rtw_memcpy(&rfctl->cisr[adapter->iface_id], &param->cisr, sizeof(param->cisr));
+		if ((ori_cisr.status == COUNTRY_IE_SLAVE_NOCOUNTRY
+				&& rfctl->cisr[adapter->iface_id].status == COUNTRY_IE_SLAVE_NOCOUNTRY)
+			|| (ori_cisr.status == COUNTRY_IE_SLAVE_UNKNOWN
+				&& rfctl->cisr[adapter->iface_id].status == COUNTRY_IE_SLAVE_UNKNOWN)
+		) {
+			/* will take no effect  */
+			effected = 0;
+			goto exit;
+		}
+
+		for (i = 0; i < CONFIG_IFACE_NUMBER; i++) {
+			if (rfctl->cisr[i].status == COUNTRY_IE_SLAVE_NOCOUNTRY)
+				continue;
+			if (new_ecisr_id == CONFIG_IFACE_NUMBER
+				/* high score */
+				|| status_score[rfctl->cisr[i].status] > status_score[rfctl->cisr[new_ecisr_id].status]
+				/* same score, prefer the same alpha2 as current effected(same score) one */
+				|| (status_score[rfctl->cisr[i].status] == status_score[rfctl->cisr[new_ecisr_id].status]
+					&& ori_ecisr_id != CONFIG_IFACE_NUMBER
+					&& rfctl->cisr[ori_ecisr_id].status == rfctl->cisr[new_ecisr_id].status
+					&& _rtw_memcmp(rfctl->cisr[ori_ecisr_id].alpha2, rfctl->cisr[new_ecisr_id].alpha2, 2) == _FALSE
+					&& _rtw_memcmp(rfctl->cisr[ori_ecisr_id].alpha2, rfctl->cisr[i].alpha2, 2) == _TRUE)
+			)
+				new_ecisr_id = i;
+		}
+
+		rfctl->effected_cisr_id = new_ecisr_id;
+
+		if (rfctl->effected_cisr_id == CONFIG_IFACE_NUMBER) {
+			/* no country IE setting */
+			const char *alpha2;
+
+			if (strncmp(rfctl->user_alpha2, "\x00\x00", 2) != 0) {
+				/* restore to user setting */
+				param->inr = RTW_REGD_SET_BY_USER;
+				alpha2 = rfctl->user_alpha2;
+				param->channel_plan = rfctl->user_ChannelPlan;
+				#if CONFIG_IEEE80211_BAND_6GHZ
+				param->channel_plan_6g = rfctl->user_chplan_6g;
+				#endif
+			} else {
+				/* restore to init setting */
+				param->inr = RTW_REGD_SET_BY_INIT;
+				alpha2 = rfctl->init_alpha2;
+				param->channel_plan = rfctl->init_ChannelPlan;
+				#if CONFIG_IEEE80211_BAND_6GHZ
+				param->channel_plan_6g = rfctl->init_chplan_6g;
+				#endif
+			}
+
+			if (IS_ALPHA2_UNSPEC(alpha2) || IS_ALPHA2_WORLDWIDE(alpha2))
+				param->has_country = 0;
+			else if (rtw_get_chplan_from_country(alpha2, &param->country_ent)) {
+				param->channel_plan = param->country_ent.chplan;
+				#if CONFIG_IEEE80211_BAND_6GHZ
+				param->channel_plan_6g = param->country_ent.chplan_6g;
+				#endif
+				param->has_country = 1;
+			} else {
+				RTW_WARN("%s unexpected country_code:\"%c%c\", set to \"00\"\n", caller, alpha2[0], alpha2[1]);
+				rtw_warn_on(1);
+				rtw_get_chplan_worldwide(&param->country_ent);
+				param->channel_plan = param->country_ent.chplan;
+				#if CONFIG_IEEE80211_BAND_6GHZ
+				param->channel_plan_6g = param->country_ent.chplan_6g;
+				#endif
+				param->has_country = 1;
+			}
+			param->has_cisr = 0;
+
+			get_str_of_set_chplan_keys(buf, 32, param);
+			RTW_INFO("%s restore inr:%s %s\n", caller, regd_inr_str(param->inr), buf);
+		}
+		else {
+			/* has country IE setting */
+			if (ori_ecisr_id != CONFIG_IFACE_NUMBER) {
+				/* has country IE setting originally  */
+				if (_rtw_memcmp(&ori_ecisr, &rfctl->cisr[new_ecisr_id], sizeof(ori_ecisr)) == _TRUE) {
+					/* same record content, no effect */
+					effected = 0;
+					goto exit;
+				}
+			}
+			rtw_get_chplan_from_cisrs(rfctl, &param->country_ent, caller);
+			param->channel_plan = param->country_ent.chplan;
+			#if CONFIG_IEEE80211_BAND_6GHZ
+			param->channel_plan_6g = param->country_ent.chplan_6g;
+			#endif
+			param->has_country = 1;
+			param->has_cisr = 0;
+
+			get_str_of_set_chplan_keys(buf, 32, param);
+			RTW_INFO("%s trigger inr:%s %s\n", caller, regd_inr_str(param->inr), buf);
+		}
+	}
+
+exit:
+#ifdef CONFIG_RTW_DEBUG
+	if (rtw_drv_log_level >= _DRV_DEBUG_) {
+		RTW_PRINT("%s cisr after\n", caller);
+		dump_country_ie_slave_records(RTW_DBGDUMP, rfctl, 0);
+	}
+#endif
+
+	return effected;
+}
+#endif /* CONFIG_80211D */
+
+static bool rtw_chplan_rtk_priv_req_prehdl_domain_code(_adapter *adapter, struct SetChannelPlan_param *param, const char *caller)
+{
+	struct rf_ctl_t *rfctl = adapter_to_rfctl(adapter);
+
+	/* disallow invalid input */
+	if ((param->channel_plan != RTW_CHPLAN_UNSPECIFIED
+		&& !rtw_is_channel_plan_valid(param->channel_plan))
+	) {
+		RTW_WARN("%s invalid chplan:0x%02X\n", caller, param->channel_plan);
+		return _FAIL;
+	}
+
+	#if CONFIG_IEEE80211_BAND_6GHZ
+	if (param->channel_plan_6g != RTW_CHPLAN_6G_UNSPECIFIED
+		&& !rtw_is_channel_plan_6g_valid(param->channel_plan_6g)
+	) {
+		RTW_WARN("%s invalid chplan_6g:0x%02X\n", caller, param->channel_plan_6g);
+		return _FAIL;
+	}
+	#endif
+
+	/* use original value when unspecified */
+	if (param->channel_plan == RTW_CHPLAN_UNSPECIFIED)
+		param->channel_plan = rfctl->ChannelPlan;
+	#if CONFIG_IEEE80211_BAND_6GHZ
+	if (param->channel_plan_6g == RTW_CHPLAN_6G_UNSPECIFIED)
+		param->channel_plan_6g = rfctl->chplan_6g;
+	#endif
+
+	return _SUCCESS;
+}
+
+static void rtw_chplan_rtk_priv_req_prehdl_country_ent(struct SetChannelPlan_param *param)
+{
+	if (!param->has_country) {
+		u8 chplan_6g = RTW_CHPLAN_6G_NULL;
+
+		#if CONFIG_IEEE80211_BAND_6GHZ
+		chplan_6g = param->channel_plan_6g;
+		#endif
+
+		if (rtw_chplan_ids_is_world_wide(param->channel_plan, chplan_6g))
+			rtw_get_chplan_worldwide(&param->country_ent);
+		else {
+			SET_UNSPEC_ALPHA2(param->country_ent.alpha2);
+			param->country_ent.edcca_mode_2g_override = RTW_EDCCA_DEF;
+			#if CONFIG_IEEE80211_BAND_5GHZ
+			param->country_ent.edcca_mode_5g_override = RTW_EDCCA_DEF;
+			#endif
+			#if CONFIG_IEEE80211_BAND_6GHZ
+			param->country_ent.edcca_mode_6g_override = RTW_EDCCA_DEF;
+			#endif
+			param->country_ent.txpwr_lmt_override = TXPWR_LMT_DEF;
+			#if defined(CONFIG_80211AX_HE) || defined(CONFIG_80211AC_VHT)
+			param->country_ent.proto_en = CHPLAN_PROTO_EN_ALL;
+			#endif
+		}
+		param->has_country = 1;
+	}
+}
+
 u8 rtw_set_chplan_hdl(_adapter *padapter, unsigned char *pbuf)
 {
 	struct SetChannelPlan_param *param;
 	struct rf_ctl_t *rfctl = adapter_to_rfctl(padapter);
+	bool effected = 1;
+	char buf[32];
+	enum rtw_regd_inr ori_inr;
+#ifdef CONFIG_IOCTL_CFG80211
+	struct get_chplan_resp *chplan;
+#endif
 
 	if (!pbuf)
 		return H2C_PARAMETERS_ERROR;
 
 	param = (struct SetChannelPlan_param *)pbuf;
+	ori_inr = param->inr;
 
-	if (param->regd_src == REGD_SRC_RTK_PRIV
-		&& !rtw_is_channel_plan_valid(param->channel_plan))
-		return H2C_PARAMETERS_ERROR;
+	get_str_of_set_chplan_keys(buf, 32, param);
+	RTW_INFO("%s iface_id:%u src:%s inr:%s %s\n", __func__, padapter->iface_id
+		, regd_src_str(param->regd_src), regd_inr_str(param->inr), buf);
 
-#ifdef CONFIG_REGD_SRC_FROM_OS
-	if (rfctl->regd_src == REGD_SRC_OS)
-		rtw_mfree((void *)rfctl->country_ent, sizeof(struct country_chplan));
-#endif
+	/* check input parameter */
+	if (param->regd_src == REGD_SRC_RTK_PRIV) {
+		#ifdef CONFIG_80211D
+		effected = rtw_chplan_rtk_priv_req_prehdl_country_ie(padapter, param, __func__);
+		#endif
+
+		if (rtw_chplan_rtk_priv_req_prehdl_domain_code(padapter, param, __func__) != _SUCCESS)
+			return H2C_PARAMETERS_ERROR;
+
+		rtw_chplan_rtk_priv_req_prehdl_country_ent(param);
+	}
+
+	rtw_warn_on(!param->has_country);
+
+	if (param->inr == RTW_REGD_SET_BY_USER) {
+		rfctl->user_alpha2[0] = param->country_ent.alpha2[0];
+		rfctl->user_alpha2[1] = param->country_ent.alpha2[1];
+		rfctl->user_ChannelPlan = param->channel_plan;
+		#if CONFIG_IEEE80211_BAND_6GHZ
+		rfctl->user_chplan_6g = param->channel_plan_6g;
+		#endif
+	}
+
+	if (!effected)
+		goto exit;
 
 	rfctl->regd_src = param->regd_src;
-	rfctl->country_ent = param->country_ent;
+	rfctl->regd_inr = param->inr;
+	rfctl->alpha2[0] = param->country_ent.alpha2[0];
+	rfctl->alpha2[1] = param->country_ent.alpha2[1];
+	rfctl->edcca_mode_2g_override = param->country_ent.edcca_mode_2g_override;
+#if CONFIG_IEEE80211_BAND_5GHZ
+	rfctl->edcca_mode_5g_override = param->country_ent.edcca_mode_5g_override;
+#endif
+#if CONFIG_IEEE80211_BAND_6GHZ
+	rfctl->edcca_mode_6g_override = param->country_ent.edcca_mode_6g_override;
+#endif
+#if CONFIG_TXPWR_LIMIT
+	rfctl->txpwr_lmt_override = param->country_ent.txpwr_lmt_override;
+#endif
+#if defined(CONFIG_80211AX_HE) || defined(CONFIG_80211AC_VHT)
+	rfctl->proto_en = param->country_ent.proto_en;
+#endif
+
 	rfctl->ChannelPlan = param->channel_plan;
+#if CONFIG_IEEE80211_BAND_6GHZ
+	rfctl->chplan_6g = param->channel_plan_6g;
+#endif
 
 #if CONFIG_TXPWR_LIMIT
 	rtw_txpwr_init_regd(rfctl);
 #endif
 
-	rtw_rfctl_chplan_init(padapter);
+	rtw_edcca_mode_update(rfctl_to_dvobj(rfctl));
+	rtw_odm_adaptivity_update(rfctl_to_dvobj(rfctl));
 
-	rtw_hal_set_odm_var(padapter, HAL_ODM_REGULATION, NULL, _TRUE);
+	rtw_rfctl_chplan_init(padapter);
 
 #ifdef CONFIG_IOCTL_CFG80211
-	rtw_regd_apply_flags(adapter_to_wiphy(padapter));
+	if (rfctl->regd_src != REGD_SRC_OS)
+		rtw_chset_hook_os_channels(rfctl);
+
+	if (rtw_get_chplan_cmd(padapter, RTW_CMDF_DIRECTLY, &chplan) == _SUCCESS) {
+		if (!param->rtnl_lock_needed)
+			rtw_regd_change_complete_sync(adapter_to_wiphy(padapter), chplan, 0);
+		else
+			rtw_warn_on(rtw_regd_change_complete_async(adapter_to_wiphy(padapter), chplan) != _SUCCESS);
+	} else
+		rtw_warn_on(1);
 #endif
 
 	rtw_nlrtw_reg_change_event(padapter);
 
+	#ifdef CONFIG_LPS
+	LPS_Leave(padapter, "SET_CHPLAN");
+	#endif
+
 	if (GET_HAL_DATA(padapter)->txpwr_limit_loaded
 		&& rtw_get_hw_init_completed(padapter))
 		rtw_hal_update_txpwr_level(padapter);
 
+exit:
 	return	H2C_SUCCESS;
 }
 
 u8 rtw_get_chplan_hdl(_adapter *padapter, unsigned char *pbuf)
 {
 	struct get_channel_plan_param *param;
-	struct get_chplan_resp *resp;
+	struct get_chplan_resp *chplan;
 	struct rf_ctl_t *rfctl;
+	int i;
 
 	if (!pbuf)
 		return H2C_PARAMETERS_ERROR;
@@ -16174,29 +17167,44 @@ u8 rtw_get_chplan_hdl(_adapter *padapter, unsigned char *pbuf)
 	rfctl = adapter_to_rfctl(padapter);
 	param = (struct get_channel_plan_param *)pbuf;
 
-	resp = rtw_vmalloc(sizeof(struct get_chplan_resp) + sizeof(RT_CHANNEL_INFO) * rfctl->max_chan_nums);
-	if (!resp)
+	chplan = rtw_vmalloc(sizeof(struct get_chplan_resp) + sizeof(RT_CHANNEL_INFO) * rfctl->max_chan_nums);
+	if (!chplan)
 		return H2C_CMD_FAIL;
 
-	resp->regd_src = rfctl->regd_src;
+	chplan->regd_src = rfctl->regd_src;
+	chplan->regd_inr = rfctl->regd_inr;
 
-	if (rfctl->country_ent) {
-		_rtw_memcpy(&resp->country_ent, rfctl->country_ent, sizeof(struct country_chplan));
-		resp->has_country = 1;
-	} else
-		resp->has_country = 0;
-	
-	resp->channel_plan = rfctl->ChannelPlan;
+	chplan->alpha2[0] = rfctl->alpha2[0];
+	chplan->alpha2[1] = rfctl->alpha2[1];
+
+	chplan->channel_plan = rfctl->ChannelPlan;
+#if CONFIG_IEEE80211_BAND_6GHZ
+	chplan->chplan_6g = rfctl->chplan_6g;
+#endif
 #if CONFIG_TXPWR_LIMIT
-	resp->regd_name = rfctl->regd_name;
+	for (i = 0; i < BAND_MAX; i++)
+		chplan->txpwr_lmt_name[i] = rfctl->txpwr_lmt_name[i];
+#endif
+	chplan->edcca_mode_2g = rfctl->edcca_mode_2g;
+#if CONFIG_IEEE80211_BAND_5GHZ
+	chplan->edcca_mode_5g = rfctl->edcca_mode_5g;
+#endif
+#if CONFIG_IEEE80211_BAND_6GHZ
+	chplan->edcca_mode_6g = rfctl->edcca_mode_6g;
 #endif
 #ifdef CONFIG_DFS_MASTER
-	resp->dfs_domain = rtw_rfctl_get_dfs_domain(rfctl);
+	chplan->dfs_domain = rtw_rfctl_get_dfs_domain(rfctl);
 #endif
-	resp->chset_num = rfctl->max_chan_nums;
 
-	_rtw_memcpy(resp->chset, rfctl->channel_set, sizeof(RT_CHANNEL_INFO) * rfctl->max_chan_nums);
-	*param->resp = resp;
+	chplan->proto_en = 0
+		#if defined(CONFIG_80211AX_HE) || defined(CONFIG_80211AC_VHT)
+		| rfctl->proto_en
+		#endif
+		;
+
+	chplan->chset_num = rfctl->max_chan_nums;
+	_rtw_memcpy(chplan->chset, rfctl->channel_set, sizeof(RT_CHANNEL_INFO) * rfctl->max_chan_nums);
+	*param->chplan = chplan;
 
 	return	H2C_SUCCESS;
 }
@@ -16222,41 +17230,33 @@ void csa_timer_hdl(void *FunctionContext)
 	_adapter *padapter = (_adapter *)FunctionContext;
 	struct dvobj_priv *dvobj = adapter_to_dvobj(padapter);
 	struct rf_ctl_t *rfctl = dvobj_to_rfctl(dvobj);
-	struct mlme_priv *pmlmepriv = &padapter->mlmepriv;
-	struct mlme_ext_priv	*pmlmeext = &padapter->mlmeextpriv;
-	struct mlme_ext_info	*pmlmeinfo = &(pmlmeext->mlmext_info);
-	u8 i, update_beacon = _FALSE;
+	u8 i;
 
 	for (i = 0; i < dvobj->iface_nums; i++) {
 		_adapter *iface;
 		iface = dvobj->padapters[i];
 		if (!iface)
 			continue;
-		if (check_fwstate(pmlmepriv, WIFI_CSA_UPDATE_BEACON)) {
-			clr_fwstate(pmlmepriv, WIFI_CSA_UPDATE_BEACON);
-			update_beacon = _TRUE;
+		if (check_fwstate(&(iface->mlmepriv), WIFI_CSA_UPDATE_BEACON)) {
+			clr_fwstate(&(iface->mlmepriv), WIFI_CSA_UPDATE_BEACON);
+			RTW_INFO(FUNC_ADPT_FMT" wait beacons more than 70 seconds\n", FUNC_ADPT_ARG(iface));
+			return;
 		}
 	}
-	
-	/* wait beacons more than 70 seconds */
-	if(update_beacon == _TRUE) {
-		RTW_INFO("wait beacons more than 70 seconds\n");
-		return ;
-	}
-	
-	if(rfctl->csa_ch == 0) {
+
+	if (rfctl->csa_ch == 0) {
 		RTW_INFO("channel switch done\n");
 		return ;
 	}
-	
+
 	/* channel switch */
 	if (rtw_set_csa_cmd(padapter) != _SUCCESS) {
-			rfctl->csa_ch = 0;
-			rfctl->csa_switch_cnt = 0;
-			rfctl->csa_ch_offset = 0;
-			rfctl->csa_ch_width = 0;
-			rfctl->csa_ch_freq_seg0 = 0;
-			rfctl->csa_ch_freq_seg1 = 0;
+		rfctl->csa_ch = 0;
+		rfctl->csa_switch_cnt = 0;
+		rfctl->csa_ch_offset = 0;
+		rfctl->csa_ch_width = 0;
+		rfctl->csa_ch_freq_seg0 = 0;
+		rfctl->csa_ch_freq_seg1 = 0;
 	}
 }
 
@@ -16271,6 +17271,26 @@ u8 set_csa_hdl(_adapter *adapter, unsigned char *pbuf)
 	return	H2C_SUCCESS;
 }
 
+u8 set_ap_csa_hdl(_adapter *adapter, unsigned char *pbuf)
+{
+#ifdef CONFIG_AP_MODE
+	struct dvobj_priv *dvobj = adapter_to_dvobj(adapter);
+	u8 ifbmp_m = rtw_mi_get_ap_mesh_ifbmp(adapter);
+	u8 enable = 1;
+	int i;
+	_adapter *iface;
+
+	for (i = 0; i < dvobj->iface_nums; i++) {
+		iface = dvobj->padapters[i];
+		if (!iface || !(ifbmp_m & BIT(iface->iface_id)))
+			continue;
+		RTW_INFO("%s, HW_VAR_BCN_EARLY_C2H_RPT enable=%d\n", __FUNCTION__, enable);
+		rtw_hal_set_hwreg(iface, HW_VAR_BCN_EARLY_C2H_RPT, &enable);
+	}
+#endif
+	return H2C_SUCCESS;
+}
+
 u8 tdls_hdl(_adapter *padapter, unsigned char *pbuf)
 {
 #ifdef CONFIG_TDLS
@@ -16602,3 +17622,24 @@ int rtw_sae_preprocess(_adapter *adapter, const u8 *buf, u32 len, u8 tx)
 #endif /* CONFIG_IOCTL_CFG80211 */
 }
 
+/* Needs to confirm with FW the value of REG_RX_BEACON_LENGTH */
+u8 rtw_write_bcnlen_hdl(_adapter *padapter, u8 *pbuf)
+{
+#ifdef CONFIG_WRITE_BCN_LEN_TO_FW
+	struct write_bcnlen_param *parm = (struct write_bcnlen_param *)pbuf;
+	u16 bcn_len = parm->bcn_len;
+
+	rtw_write16(padapter, REG_RX_BEACON_LENGTH + 2, bcn_len);
+#endif
+	return H2C_SUCCESS;
+}
+
+u8 rtw_reqtxrpt_cmd_hdl(_adapter *adapter, u8 *pbuf)
+{
+	struct reqtxrpt_param *parm = (struct reqtxrpt_param *)pbuf;
+
+	rtw_hal_reqtxrpt(adapter, parm->macid);
+
+	return H2C_SUCCESS;
+}
+
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/core/rtw_mp.c b/drivers/net/wireless/rockchip_wlan/rtl8821cs/core/rtw_mp.c
index cf47256a9f0b..0c5b11e4053b 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/core/rtw_mp.c
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/core/rtw_mp.c
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017 Realtek Corporation.
@@ -124,6 +123,7 @@ static void _init_mp_priv_(struct mp_priv *pmp_priv)
 	pmp_priv->prime_channel_offset = HAL_PRIME_CHNL_OFFSET_DONT_CARE;
 	pmp_priv->rateidx = RATE_1M;
 	pmp_priv->txpoweridx = 0x2A;
+	pmp_priv->txpower_dbm_offset = 0;
 
 	pmp_priv->antenna_tx = ANTENNA_A;
 	pmp_priv->antenna_rx = ANTENNA_AB;
@@ -239,6 +239,7 @@ s32 init_mp_priv(PADAPTER padapter)
 	pmppriv->pktLength = 1000;
 	pmppriv->bprocess_mp_mode = _FALSE;
 	pmppriv->efuse_update_file= _FALSE;
+	pmppriv->efuse_update_on = _FALSE;
 
 	mp_init_xmit_attrib(&pmppriv->tx, padapter);
 
@@ -1017,6 +1018,8 @@ void mp_stop_test(PADAPTER padapter)
 	struct mp_priv *pmppriv = &padapter->mppriv;
 	struct mlme_priv *pmlmepriv = &padapter->mlmepriv;
 	struct wlan_network *tgt_network = &pmlmepriv->cur_network;
+	struct mlme_ext_priv    *pmlmeext = &padapter->mlmeextpriv;
+	struct mlme_ext_info    *pmlmeinfo = &pmlmeext->mlmext_info;
 	struct sta_info *psta;
 #ifdef CONFIG_PCI_HCI
 	struct registry_priv  *registry_par = &padapter->registrypriv;
@@ -1049,6 +1052,8 @@ void mp_stop_test(PADAPTER padapter)
 
 		_clr_fwstate_(pmlmepriv, WIFI_MP_STATE);
 
+		pmlmeinfo->state = WIFI_FW_NULL_STATE;
+
 end_of_mp_stop_test:
 
 		_exit_critical_bh(&pmlmepriv->lock, &irqL);
@@ -2461,9 +2466,9 @@ u32 mp_query_psd(PADAPTER pAdapter, u8 *data)
 	data[0] = '\0';
 	pdata = data;
 
-	if (psd_stop > 1792 || psd_stop < 1) {
+	if (psd_stop > 1920 || psd_stop < 1) {
 		rtw_warn_on(1);
-		psd_stop = 1792;
+		psd_stop = 1920;
 	}
 
 	if (IS_HARDWARE_TYPE_8822C(pAdapter) || IS_HARDWARE_TYPE_8723F(pAdapter)) {
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/core/rtw_odm.c b/drivers/net/wireless/rockchip_wlan/rtl8821cs/core/rtw_odm.c
index b719fb0a2711..cd2e5bbbc967 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/core/rtw_odm.c
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/core/rtw_odm.c
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2013 - 2017 Realtek Corporation.
@@ -72,6 +71,7 @@ void rtw_odm_adaptivity_ver_msg(void *sel, _adapter *adapter)
 
 #define RTW_ADAPTIVITY_EN_DISABLE 0
 #define RTW_ADAPTIVITY_EN_ENABLE 1
+#define RTW_ADAPTIVITY_EN_AUTO 2
 
 void rtw_odm_adaptivity_en_msg(void *sel, _adapter *adapter)
 {
@@ -83,6 +83,8 @@ void rtw_odm_adaptivity_en_msg(void *sel, _adapter *adapter)
 		_RTW_PRINT_SEL(sel, "DISABLE\n");
 	else if (regsty->adaptivity_en == RTW_ADAPTIVITY_EN_ENABLE)
 		_RTW_PRINT_SEL(sel, "ENABLE\n");
+	else if (regsty->adaptivity_en == RTW_ADAPTIVITY_EN_AUTO)
+		_RTW_PRINT_SEL(sel, "AUTO\n");
 	else
 		_RTW_PRINT_SEL(sel, "INVALID\n");
 }
@@ -94,6 +96,9 @@ void rtw_odm_adaptivity_mode_msg(void *sel, _adapter *adapter)
 {
 	struct registry_priv *regsty = &adapter->registrypriv;
 
+	if (regsty->adaptivity_en != RTW_ADAPTIVITY_EN_ENABLE)
+		return;
+
 	RTW_PRINT_SEL(sel, "RTW_ADAPTIVITY_MODE_");
 
 	if (regsty->adaptivity_mode == RTW_ADAPTIVITY_MODE_NORMAL)
@@ -116,12 +121,34 @@ bool rtw_odm_adaptivity_needed(_adapter *adapter)
 	struct registry_priv *regsty = &adapter->registrypriv;
 	bool ret = _FALSE;
 
-	if (regsty->adaptivity_en == RTW_ADAPTIVITY_EN_ENABLE)
+	if (regsty->adaptivity_en)
 		ret = _TRUE;
 
 	return ret;
 }
 
+void rtw_odm_adaptivity_update(struct dvobj_priv *dvobj)
+{
+	HAL_DATA_TYPE *hal_data = GET_HAL_DATA(dvobj_get_primary_adapter(dvobj));
+	struct rf_ctl_t *rfctl = dvobj_to_rfctl(dvobj);
+	struct dm_struct *odm = dvobj_to_phydm(dvobj);
+	u8 edcca_mode = RTW_EDCCA_NORMAL;
+
+	if (hal_data->current_band_type == BAND_ON_2_4G)
+		edcca_mode = rfctl->edcca_mode_2g;
+	#if CONFIG_IEEE80211_BAND_5GHZ
+	else if (hal_data->current_band_type == BAND_ON_5G)
+		edcca_mode = rfctl->edcca_mode_5g;
+	#endif
+	#if CONFIG_IEEE80211_BAND_6GHZ
+	else if (hal_data->current_band_type == BAND_ON_6G)
+		edcca_mode = rfctl->edcca_mode_6g;
+	#endif
+
+	rfctl->adaptivity_en = (edcca_mode == RTW_EDCCA_NORMAL || edcca_mode == RTW_EDCCA_MODE_NUM) ? 0 : 1;
+	phydm_adaptivity_info_init(odm, PHYDM_ADAPINFO_CARRIER_SENSE_ENABLE, edcca_mode == RTW_EDCCA_CS ? TRUE : FALSE);
+}
+
 void rtw_odm_adaptivity_parm_msg(void *sel, _adapter *adapter)
 {
 	struct dm_struct *odm = adapter_to_phydm(adapter);
@@ -161,6 +188,7 @@ void rtw_odm_acquirespinlock(_adapter *adapter,	enum rt_spinlock_type type)
 	switch (type) {
 	case RT_IQK_SPINLOCK:
 		_enter_critical_bh(&pHalData->IQKSpinLock, &irqL);
+		break;
 	default:
 		break;
 	}
@@ -174,6 +202,7 @@ void rtw_odm_releasespinlock(_adapter *adapter,	enum rt_spinlock_type type)
 	switch (type) {
 	case RT_IQK_SPINLOCK:
 		_exit_critical_bh(&pHalData->IQKSpinLock, &irqL);
+		break;
 	default:
 		break;
 	}
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/core/rtw_p2p.c b/drivers/net/wireless/rockchip_wlan/rtl8821cs/core/rtw_p2p.c
index 41c51c99842b..61eba1d40845 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/core/rtw_p2p.c
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/core/rtw_p2p.c
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017 Realtek Corporation.
@@ -2288,6 +2287,7 @@ u32 process_assoc_req_p2p_ie(struct wifidirect_info *pwdinfo, u8 *pframe, uint l
 
 	while (p2p_ie) {
 		/* Check P2P Capability ATTR */
+		attr_contentlen = sizeof(cap_attr);
 		if (rtw_get_p2p_attr_content(p2p_ie, p2p_ielen, P2P_ATTR_CAPABILITY, (u8 *)&cap_attr, (uint *) &attr_contentlen)) {
 			RTW_INFO("[%s] Got P2P Capability Attr!!\n", __FUNCTION__);
 			cap_attr = le16_to_cpu(cap_attr);
@@ -2305,7 +2305,6 @@ u32 process_assoc_req_p2p_ie(struct wifidirect_info *pwdinfo, u8 *pframe, uint l
 				u8 num_of_secdev_type;
 				u16 dev_name_len;
 
-
 				rtw_get_p2p_attr_content(p2p_ie, p2p_ielen, P2P_ATTR_DEVICE_INFO , pattr_content, (uint *)&attr_contentlen);
 
 				_rtw_memcpy(psta->dev_addr, 	pattr_content, ETH_ALEN);/* P2P Device Address */
@@ -2385,10 +2384,11 @@ u32 process_p2p_devdisc_req(struct wifidirect_info *pwdinfo, u8 *pframe, uint le
 		u8 dev_addr[ETH_ALEN] = { 0x00 };
 		u32	attr_contentlen = 0;
 
+		attr_contentlen = sizeof(groupid);
 		if (rtw_get_p2p_attr_content(p2p_ie, p2p_ielen, P2P_ATTR_GROUP_ID, groupid, &attr_contentlen)) {
 			if (_rtw_memcmp(pwdinfo->device_addr, groupid, ETH_ALEN) &&
 			    _rtw_memcmp(pwdinfo->p2p_group_ssid, groupid + ETH_ALEN, pwdinfo->p2p_group_ssid_len)) {
-				attr_contentlen = 0;
+				attr_contentlen = sizeof(dev_addr);
 				if (rtw_get_p2p_attr_content(p2p_ie, p2p_ielen, P2P_ATTR_DEVICE_ID, dev_addr, &attr_contentlen)) {
 					_irqL irqL;
 					_list	*phead, *plist;
@@ -2456,6 +2456,7 @@ u8 process_p2p_provdisc_req(struct wifidirect_info *pwdinfo,  u8 *pframe, uint l
 
 	wpsie = rtw_get_wps_ie(frame_body + _PUBLIC_ACTION_IE_OFFSET_, len - _PUBLIC_ACTION_IE_OFFSET_, NULL, &wps_ielen);
 	if (wpsie) {
+		attr_contentlen = sizeof(uconfig_method);
 		if (rtw_get_wps_attr_content(wpsie, wps_ielen, WPS_ATTR_CONF_METHOD , (u8 *) &uconfig_method, &attr_contentlen)) {
 			uconfig_method = be16_to_cpu(uconfig_method);
 			switch (uconfig_method) {
@@ -2553,6 +2554,7 @@ u8 process_p2p_group_negotation_req(struct wifidirect_info *pwdinfo, u8 *pframe,
 		/*	If some device wants to do p2p handshake without sending prov_disc_req */
 		/*	We have to get peer_req_cm from here. */
 		if (_rtw_memcmp(pwdinfo->rx_prov_disc_info.strconfig_method_desc_of_prov_disc_req, "000", 3)) {
+			wps_devicepassword_id_len = sizeof(wps_devicepassword_id);
 			rtw_get_wps_attr_content(wpsie, wps_ielen, WPS_ATTR_DEVICE_PWID, (u8 *) &wps_devicepassword_id, &wps_devicepassword_id_len);
 			wps_devicepassword_id = be16_to_cpu(wps_devicepassword_id);
 
@@ -2596,6 +2598,7 @@ u8 process_p2p_group_negotation_req(struct wifidirect_info *pwdinfo, u8 *pframe,
 		rtw_p2p_set_state(pwdinfo, P2P_STATE_GONEGO_ING);
 
 		/* Check P2P Capability ATTR */
+		attr_contentlen = sizeof(cap_attr);
 		if (rtw_get_p2p_attr_content(p2p_ie, p2p_ielen, P2P_ATTR_CAPABILITY, (u8 *)&cap_attr, (uint *)&attr_contentlen)) {
 			cap_attr = le16_to_cpu(cap_attr);
 
@@ -2605,6 +2608,7 @@ u8 process_p2p_group_negotation_req(struct wifidirect_info *pwdinfo, u8 *pframe,
 #endif /* defined(CONFIG_WFD) && defined(CONFIG_TDLS) */
 		}
 
+		attr_contentlen = sizeof(attr_content);
 		if (rtw_get_p2p_attr_content(p2p_ie, p2p_ielen, P2P_ATTR_GO_INTENT , &attr_content, &attr_contentlen)) {
 			RTW_INFO("[%s] GO Intent = %d, tie = %d\n", __FUNCTION__, attr_content >> 1, attr_content & 0x01);
 			pwdinfo->peer_intent = attr_content;	/*	include both intent and tie breaker values. */
@@ -2632,17 +2636,19 @@ u8 process_p2p_group_negotation_req(struct wifidirect_info *pwdinfo, u8 *pframe,
 			}
 		}
 
+		attr_contentlen = sizeof(listen_ch_attr);
 		if (rtw_get_p2p_attr_content(p2p_ie, p2p_ielen, P2P_ATTR_LISTEN_CH, (u8 *)listen_ch_attr, (uint *) &attr_contentlen) && attr_contentlen == 5)
 			pwdinfo->nego_req_info.peer_ch = listen_ch_attr[4];
 
 		RTW_INFO(FUNC_ADPT_FMT" listen channel :%u\n", FUNC_ADPT_ARG(padapter), pwdinfo->nego_req_info.peer_ch);
 
-		attr_contentlen = 0;
+		attr_contentlen = sizeof(pwdinfo->p2p_peer_interface_addr);
 		if (rtw_get_p2p_attr_content(p2p_ie, p2p_ielen, P2P_ATTR_INTENDED_IF_ADDR, pwdinfo->p2p_peer_interface_addr, &attr_contentlen)) {
 			if (attr_contentlen != ETH_ALEN)
 				_rtw_memset(pwdinfo->p2p_peer_interface_addr, 0x00, ETH_ALEN);
 		}
 
+		ch_cnt = sizeof(ch_content);
 		if (rtw_get_p2p_attr_content(p2p_ie, p2p_ielen, P2P_ATTR_CH_LIST, ch_content, &ch_cnt)) {
 			peer_ch_num = rtw_p2p_get_peer_ch_list(pwdinfo, ch_content, ch_cnt, peer_ch_list);
 			ch_num_inclusioned = rtw_p2p_ch_inclusion(padapter, peer_ch_list, peer_ch_num, ch_list_inclusioned);
@@ -2668,8 +2674,8 @@ u8 process_p2p_group_negotation_req(struct wifidirect_info *pwdinfo, u8 *pframe,
 #endif /* CONFIG_CONCURRENT_MODE */
 					{
 						u8 operatingch_info[5] = { 0x00 }, peer_operating_ch = 0;
-						attr_contentlen = 0;
 
+						attr_contentlen = sizeof(operatingch_info);
 						if (rtw_get_p2p_attr_content(p2p_ie, p2p_ielen, P2P_ATTR_OPERATING_CH, operatingch_info, &attr_contentlen))
 							peer_operating_ch = operatingch_info[4];
 
@@ -2755,6 +2761,7 @@ u8 process_p2p_group_negotation_resp(struct wifidirect_info *pwdinfo, u8 *pframe
 		while (p2p_ie) {	/*	Found the P2P IE. */
 
 			/* Check P2P Capability ATTR */
+			attr_contentlen = sizeof(cap_attr);
 			if (rtw_get_p2p_attr_content(p2p_ie, p2p_ielen, P2P_ATTR_CAPABILITY, (u8 *)&cap_attr, (uint *)&attr_contentlen)) {
 				cap_attr = le16_to_cpu(cap_attr);
 #ifdef CONFIG_TDLS
@@ -2763,6 +2770,7 @@ u8 process_p2p_group_negotation_resp(struct wifidirect_info *pwdinfo, u8 *pframe
 #endif /* CONFIG_TDLS */
 			}
 
+			attr_contentlen = sizeof(attr_content);
 			rtw_get_p2p_attr_content(p2p_ie, p2p_ielen, P2P_ATTR_STATUS, &attr_content, &attr_contentlen);
 			if (attr_contentlen == 1) {
 				RTW_INFO("[%s] Status = %d\n", __FUNCTION__, attr_content);
@@ -2780,7 +2788,7 @@ u8 process_p2p_group_negotation_resp(struct wifidirect_info *pwdinfo, u8 *pframe
 			}
 
 			/*	Try to get the peer's interface address */
-			attr_contentlen = 0;
+			attr_contentlen = sizeof(pwdinfo->p2p_peer_interface_addr);
 			if (rtw_get_p2p_attr_content(p2p_ie, p2p_ielen, P2P_ATTR_INTENDED_IF_ADDR, pwdinfo->p2p_peer_interface_addr, &attr_contentlen)) {
 				if (attr_contentlen != ETH_ALEN)
 					_rtw_memset(pwdinfo->p2p_peer_interface_addr, 0x00, ETH_ALEN);
@@ -2788,7 +2796,7 @@ u8 process_p2p_group_negotation_resp(struct wifidirect_info *pwdinfo, u8 *pframe
 
 			/*	Try to get the peer's intent and tie breaker value. */
 			attr_content = 0x00;
-			attr_contentlen = 0;
+			attr_contentlen = sizeof(attr_content);
 			if (rtw_get_p2p_attr_content(p2p_ie, p2p_ielen, P2P_ATTR_GO_INTENT , &attr_content, &attr_contentlen)) {
 				RTW_INFO("[%s] GO Intent = %d, tie = %d\n", __FUNCTION__, attr_content >> 1, attr_content & 0x01);
 				pwdinfo->peer_intent = attr_content;	/*	include both intent and tie breaker values. */
@@ -2827,13 +2835,14 @@ u8 process_p2p_group_negotation_resp(struct wifidirect_info *pwdinfo, u8 *pframe
 
 			/*	Try to get the operation channel information */
 
-			attr_contentlen = 0;
+			attr_contentlen = sizeof(operatingch_info);
 			if (rtw_get_p2p_attr_content(p2p_ie, p2p_ielen, P2P_ATTR_OPERATING_CH, operatingch_info, &attr_contentlen)) {
 				RTW_INFO("[%s] Peer's operating channel = %d\n", __FUNCTION__, operatingch_info[4]);
 				pwdinfo->peer_operating_ch = operatingch_info[4];
 			}
 
 			/*	Try to get the channel list information */
+			pwdinfo->channel_list_attr_len = sizeof(pwdinfo->channel_list_attr);
 			if (rtw_get_p2p_attr_content(p2p_ie, p2p_ielen, P2P_ATTR_CH_LIST, pwdinfo->channel_list_attr, &pwdinfo->channel_list_attr_len)) {
 				RTW_INFO("[%s] channel list attribute found, len = %d\n", __FUNCTION__,  pwdinfo->channel_list_attr_len);
 
@@ -2861,7 +2870,7 @@ u8 process_p2p_group_negotation_resp(struct wifidirect_info *pwdinfo, u8 *pframe
 #endif /* CONFIG_CONCURRENT_MODE */
 						{
 							u8 operatingch_info[5] = { 0x00 }, peer_operating_ch = 0;
-							attr_contentlen = 0;
+							attr_contentlen = sizeof(operatingch_info);
 
 							if (rtw_get_p2p_attr_content(p2p_ie, p2p_ielen, P2P_ATTR_OPERATING_CH, operatingch_info, &attr_contentlen))
 								peer_operating_ch = operatingch_info[4];
@@ -2887,8 +2896,8 @@ u8 process_p2p_group_negotation_resp(struct wifidirect_info *pwdinfo, u8 *pframe
 				RTW_INFO("[%s] channel list attribute not found!\n", __FUNCTION__);
 
 			/*	Try to get the group id information if peer is GO */
-			attr_contentlen = 0;
 			_rtw_memset(groupid, 0x00, 38);
+			attr_contentlen = sizeof(groupid);
 			if (rtw_get_p2p_attr_content(p2p_ie, p2p_ielen, P2P_ATTR_GROUP_ID, groupid, &attr_contentlen)) {
 				_rtw_memcpy(pwdinfo->groupid_info.go_device_addr, &groupid[0], ETH_ALEN);
 				_rtw_memcpy(pwdinfo->groupid_info.ssid, &groupid[6], attr_contentlen - ETH_ALEN);
@@ -2929,6 +2938,7 @@ u8 process_p2p_group_negotation_confirm(struct wifidirect_info *pwdinfo, u8 *pfr
 		u32	attr_contentlen = 0;
 
 		pwdinfo->negotiation_dialog_token = 1;
+		attr_contentlen = sizeof(attr_content);
 		rtw_get_p2p_attr_content(p2p_ie, p2p_ielen, P2P_ATTR_STATUS, &attr_content, &attr_contentlen);
 		if (attr_contentlen == 1) {
 			RTW_INFO("[%s] Status = %d\n", __FUNCTION__, attr_content);
@@ -2969,15 +2979,15 @@ u8 process_p2p_group_negotation_confirm(struct wifidirect_info *pwdinfo, u8 *pfr
 		}
 
 		/*	Try to get the group id information */
-		attr_contentlen = 0;
 		_rtw_memset(groupid, 0x00, 38);
+		attr_contentlen = sizeof(groupid);
 		if (rtw_get_p2p_attr_content(p2p_ie, p2p_ielen, P2P_ATTR_GROUP_ID, groupid, &attr_contentlen)) {
 			RTW_INFO("[%s] Ssid = %s, ssidlen = %zu\n", __FUNCTION__, &groupid[ETH_ALEN], strlen(&groupid[ETH_ALEN]));
 			_rtw_memcpy(pwdinfo->groupid_info.go_device_addr, &groupid[0], ETH_ALEN);
 			_rtw_memcpy(pwdinfo->groupid_info.ssid, &groupid[6], attr_contentlen - ETH_ALEN);
 		}
 
-		attr_contentlen = 0;
+		attr_contentlen = sizeof(operatingch_info);
 		if (rtw_get_p2p_attr_content(p2p_ie, p2p_ielen, P2P_ATTR_OPERATING_CH, operatingch_info, &attr_contentlen)) {
 			RTW_INFO("[%s] Peer's operating channel = %d\n", __FUNCTION__, operatingch_info[4]);
 			pwdinfo->peer_operating_ch = operatingch_info[4];
@@ -4016,6 +4026,7 @@ int process_p2p_cross_connect_ie(PADAPTER padapter, u8 *IEs, u32 IELength)
 
 	while (p2p_ie) {
 		/* Get P2P Manageability IE. */
+		attr_contentlen = sizeof(p2p_attr);
 		if (rtw_get_p2p_attr_content(p2p_ie, p2p_ielen, P2P_ATTR_MANAGEABILITY, p2p_attr, &attr_contentlen)) {
 			if ((p2p_attr[0] & (BIT(0) | BIT(1))) == 0x01)
 				ret = _FALSE;
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/core/rtw_pwrctrl.c b/drivers/net/wireless/rockchip_wlan/rtl8821cs/core/rtw_pwrctrl.c
index cc3101867f55..a617590c60b2 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/core/rtw_pwrctrl.c
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/core/rtw_pwrctrl.c
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017 Realtek Corporation.
@@ -693,14 +692,101 @@ u8 PS_RDY_CHECK(_adapter *padapter)
 	return _TRUE;
 }
 
+#ifdef CONFIG_LPS_LCLK
+void rtw_set_lps_lclk(_adapter *padapter, u8 enable)
+{
+	struct pwrctrl_priv *pwrctl = adapter_to_pwrctl(padapter);
+	u8 val8 = 0;
+	u8 polling_cnt = 0;
+	u8 cpwm_orig = 0;
+	u8 cpwm_now = 0;
+	u8 result = _FAIL;
+	systime start_time;
+
+	if (enable) {
+		/* set rpwm to enter 32k */
+		rtw_hal_get_hwreg(padapter, HW_VAR_RPWM_TOG, &val8);
+		RTW_INFO("%s: read rpwm=%02x\n", __func__, val8);
+		val8 += PS_TOGGLE;
+		val8 |= PS_LCLK;
+		rtw_hal_set_hwreg(padapter, HW_VAR_SET_RPWM, (u8 *)(&val8));
+		RTW_INFO("%s: write rpwm=%02x\n", __func__, val8);
+		pwrctl->tog = (val8 + PS_TOGGLE) & PS_TOGGLE;
+
+		/* When using PNO, the FW may scan first, so polling register 100
+		 * may not see 0xEA at this point.
+		 */
+		if (!pwrctl->wowlan_pno_enable) {
+			do {
+				val8 = rtw_read8(padapter, REG_CR);
+				polling_cnt++;
+				RTW_INFO("%s  polling 0x100=0x%x, cnt=%d\n",
+					 __func__, val8, polling_cnt);
+				RTW_INFO("%s 0x08:%02x, 0x03:%02x\n",
+					 __func__,
+					 rtw_read8(padapter, 0x08),
+					 rtw_read8(padapter, 0x03));
+				rtw_mdelay_os(10);
+			} while (polling_cnt < 20 && (val8 != 0xEA));
+		}
+	} else {
+		/* for polling cpwm */
+		rtw_hal_get_hwreg(padapter, HW_VAR_CPWM, &cpwm_orig);
+
+		/* set rpwm to leave 32k */
+		rtw_hal_get_hwreg(padapter, HW_VAR_RPWM_TOG, &val8);
+		RTW_INFO("%s: read rpwm=%02x\n", __func__, val8);
+		val8 += PS_TOGGLE;
+		val8 |= PS_ACK;
+		rtw_hal_set_hwreg(padapter, HW_VAR_SET_RPWM, (u8 *)(&val8));
+		RTW_INFO("%s: write rpwm=%02x\n", __func__, val8);
+		pwrctl->tog = (val8 + PS_TOGGLE) & PS_TOGGLE;
+
+		/* do polling cpwm */
+		start_time = rtw_get_current_time();
+		do {
+			rtw_mdelay_os(1);
+
+			rtw_hal_get_hwreg(padapter, HW_VAR_CPWM, &cpwm_now);
+			if ((cpwm_orig ^ cpwm_now) & PS_TOGGLE)
+				break;
+
+			if (rtw_get_passing_time_ms(start_time) > 100) {
+				RTW_INFO("%s: polling cpwm timeout\n",
+					__func__);
+				break;
+			}
+		} while (1);
+
+#ifdef CONFIG_PNO_SUPPORT
+		if (pwrctl->wowlan_pno_enable) {
+			do {
+				rtw_mdelay_os(1);
+
+				val8 = rtw_read8(padapter, REG_CR);
+				if (val8 != 0xEA) {
+					result = _SUCCESS;
+					break;
+				}
+
+				polling_cnt++;
+			} while (polling_cnt < 100);
+
+			if (result == _FAIL )
+				RTW_INFO("%s: It is not finished to leave 32K\n",
+					__func__);
+		}
+#endif
+	}
+}
+#endif
+
 #if defined(CONFIG_FWLPS_IN_IPS)
 void rtw_set_fw_in_ips_mode(PADAPTER padapter, u8 enable)
 {
 	struct pwrctrl_priv *pwrpriv = adapter_to_pwrctl(padapter);
 	int cnt = 0;
-	systime start_time;
 	u8 val8 = 0;
-	u8 cpwm_orig = 0, cpwm_now = 0;
 	u8 parm[H2C_INACTIVE_PS_LEN] = {0};
 
 	if (padapter->netif_up == _FALSE) {
@@ -738,64 +824,15 @@ void rtw_set_fw_in_ips_mode(PADAPTER padapter, u8 enable)
 
 #ifdef CONFIG_LPS_LCLK
 		/* H2C done, enter 32k */
-		if (val8 == 0) {
-			/* ser rpwm to enter 32k */
-			rtw_hal_get_hwreg(padapter, HW_VAR_RPWM_TOG, &val8);
-			RTW_INFO("%s: read rpwm=%02x\n", __FUNCTION__, val8);
-			val8 += 0x80;
-			val8 |= BIT(0);
-			rtw_hal_set_hwreg(padapter, HW_VAR_SET_RPWM, (u8 *)(&val8));
-			RTW_INFO("%s: write rpwm=%02x\n", __FUNCTION__, val8);
-			adapter_to_pwrctl(padapter)->tog = (val8 + 0x80) & 0x80;
-			cnt = val8 = 0;
-			if (parm[1] == 0 || parm[2] == 0) {
-				do {
-					val8 = rtw_read8(padapter, REG_CR);
-					cnt++;
-					RTW_INFO("%s  polling 0x100=0x%x, cnt=%d\n",
-						 __func__, val8, cnt);
-					RTW_INFO("%s 0x08:%02x, 0x03:%02x\n",
-						 __func__,
-						 rtw_read8(padapter, 0x08),
-						 rtw_read8(padapter, 0x03));
-					rtw_mdelay_os(10);
-				} while (cnt < 20 && (val8 != 0xEA));
-			}
-		}
+		if (val8 == 0)
+			rtw_set_lps_lclk(padapter, _TRUE);
 #endif
 	} else {
 		/* Leave IPS */
 		RTW_INFO("%s: Leaving IPS in FWLPS state\n", __func__);
 
 #ifdef CONFIG_LPS_LCLK
-		/* for polling cpwm */
-		cpwm_orig = 0;
-		rtw_hal_get_hwreg(padapter, HW_VAR_CPWM, &cpwm_orig);
-
-		/* ser rpwm */
-		rtw_hal_get_hwreg(padapter, HW_VAR_RPWM_TOG, &val8);
-		val8 += 0x80;
-		val8 |= BIT(6);
-		rtw_hal_set_hwreg(padapter, HW_VAR_SET_RPWM, (u8 *)(&val8));
-		RTW_INFO("%s: write rpwm=%02x\n", __FUNCTION__, val8);
-		adapter_to_pwrctl(padapter)->tog = (val8 + 0x80) & 0x80;
-
-		/* do polling cpwm */
-		start_time = rtw_get_current_time();
-		do {
-
-			rtw_mdelay_os(1);
-
-			rtw_hal_get_hwreg(padapter, HW_VAR_CPWM, &cpwm_now);
-			if ((cpwm_orig ^ cpwm_now) & 0x80)
-				break;
-
-			if (rtw_get_passing_time_ms(start_time) > 100) {
-				RTW_INFO("%s: polling cpwm timeout when leaving IPS in FWLPS state\n", __FUNCTION__);
-				break;
-			}
-		} while (1);
-
+		rtw_set_lps_lclk(padapter, _FALSE);
 #endif
 		parm[0] = 0x0;
 		parm[1] = 0x0;
@@ -807,7 +844,7 @@ void rtw_set_fw_in_ips_mode(PADAPTER padapter, u8 enable)
 #endif
 	}
 }
-#endif /* CONFIG_PNO_SUPPORT */
+#endif /* CONFIG_FWLPS_IN_IPS */
 
 void rtw_exec_lps(_adapter *padapter, u8 ps_mode)
 {
@@ -1427,7 +1464,7 @@ void LeaveAllPowerSaveModeDirect(PADAPTER Adapter)
 	} else {
 		if (pwrpriv->rf_pwrstate == rf_off) {
 
-#if defined(CONFIG_FWLPS_IN_IPS) || defined(CONFIG_SWLPS_IN_IPS) || defined(CONFIG_RTL8188E)
+#if defined(CONFIG_FWLPS_IN_IPS) || defined(CONFIG_SWLPS_IN_IPS) || defined(CONFIG_RTL8188E) || defined(CONFIG_PNO_SUPPORT)
 #ifdef CONFIG_IPS
 			if (_FALSE == ips_leave(pri_padapter))
 				RTW_INFO("======> ips_leave fail.............\n");
@@ -2362,7 +2399,9 @@ void rtw_init_pwrctrl_priv(PADAPTER padapter)
 #ifdef CONFIG_PNO_SUPPORT
 	pwrctrlpriv->pno_inited = _FALSE;
 	pwrctrlpriv->pnlo_info = NULL;
+	#ifndef RTW_HALMAC
 	pwrctrlpriv->pscan_info = NULL;
+	#endif
 	pwrctrlpriv->pno_ssid_list = NULL;
 #endif /* CONFIG_PNO_SUPPORT */
 #ifdef CONFIG_WOW_PATTERN_HW_CAM
@@ -2437,8 +2476,10 @@ void rtw_free_pwrctrl_priv(PADAPTER adapter)
 	if (pwrctrlpriv->pnlo_info != NULL)
 		printk("****** pnlo_info memory leak********\n");
 
+	#ifndef RTW_HALMAC
 	if (pwrctrlpriv->pscan_info != NULL)
 		printk("****** pscan_info memory leak********\n");
+	#endif
 
 	if (pwrctrlpriv->pno_ssid_list != NULL)
 		printk("****** pno_ssid_list memory leak********\n");
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/core/rtw_recv.c b/drivers/net/wireless/rockchip_wlan/rtl8821cs/core/rtw_recv.c
index e68c5b30da4d..15d426c0dc7a 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/core/rtw_recv.c
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/core/rtw_recv.c
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017 Realtek Corporation.
@@ -151,6 +150,9 @@ sint _rtw_init_recv_priv(struct recv_priv *precvpriv, _adapter *padapter)
 	rtw_set_signal_stat_timer(precvpriv);
 #endif /* CONFIG_NEW_SIGNAL_STAT_PROCESS */
 
+	_rtw_memset(&precvpriv->ip_statistic, 0,
+			sizeof(struct rtw_ip_dbg_cnt_statistic));
+
 exit:
 
 
@@ -398,16 +400,32 @@ u32 rtw_free_uc_swdec_pending_queue(_adapter *adapter)
 }
 
 
+#ifndef CONFIG_RECVBUF_QUEUE_LOCK_BH
+#ifdef CONFIG_SDIO_HCI
+#define CONFIG_RECVBUF_QUEUE_LOCK_BH 1
+#else
+#define CONFIG_RECVBUF_QUEUE_LOCK_BH 0
+#endif
+#endif /* CONFIG_RECVBUF_QUEUE_LOCK_BH */
+
 sint rtw_enqueue_recvbuf_to_head(struct recv_buf *precvbuf, _queue *queue)
 {
 	_irqL irqL;
 
+#if CONFIG_RECVBUF_QUEUE_LOCK_BH
 	_enter_critical_bh(&queue->lock, &irqL);
+#else
+	_enter_critical_ex(&queue->lock, &irqL);
+#endif
 
 	rtw_list_delete(&precvbuf->list);
 	rtw_list_insert_head(&precvbuf->list, get_list_head(queue));
 
+#if CONFIG_RECVBUF_QUEUE_LOCK_BH
 	_exit_critical_bh(&queue->lock, &irqL);
+#else
+	_exit_critical_ex(&queue->lock, &irqL);
+#endif
 
 	return _SUCCESS;
 }
@@ -415,20 +433,23 @@ sint rtw_enqueue_recvbuf_to_head(struct recv_buf *precvbuf, _queue *queue)
 sint rtw_enqueue_recvbuf(struct recv_buf *precvbuf, _queue *queue)
 {
 	_irqL irqL;
-#ifdef CONFIG_SDIO_HCI
+
+#if CONFIG_RECVBUF_QUEUE_LOCK_BH
 	_enter_critical_bh(&queue->lock, &irqL);
 #else
 	_enter_critical_ex(&queue->lock, &irqL);
-#endif/*#ifdef CONFIG_SDIO_HCI*/
+#endif
 
 	rtw_list_delete(&precvbuf->list);
 
 	rtw_list_insert_tail(&precvbuf->list, get_list_head(queue));
-#ifdef CONFIG_SDIO_HCI
+
+#if CONFIG_RECVBUF_QUEUE_LOCK_BH
 	_exit_critical_bh(&queue->lock, &irqL);
 #else
 	_exit_critical_ex(&queue->lock, &irqL);
-#endif/*#ifdef CONFIG_SDIO_HCI*/
+#endif
+
 	return _SUCCESS;
 
 }
@@ -439,11 +460,11 @@ struct recv_buf *rtw_dequeue_recvbuf(_queue *queue)
 	struct recv_buf *precvbuf;
 	_list	*plist, *phead;
 
-#ifdef CONFIG_SDIO_HCI
+#if CONFIG_RECVBUF_QUEUE_LOCK_BH
 	_enter_critical_bh(&queue->lock, &irqL);
 #else
 	_enter_critical_ex(&queue->lock, &irqL);
-#endif/*#ifdef CONFIG_SDIO_HCI*/
+#endif
 
 	if (_rtw_queue_empty(queue) == _TRUE)
 		precvbuf = NULL;
@@ -458,11 +479,11 @@ struct recv_buf *rtw_dequeue_recvbuf(_queue *queue)
 
 	}
 
-#ifdef CONFIG_SDIO_HCI
+#if CONFIG_RECVBUF_QUEUE_LOCK_BH
 	_exit_critical_bh(&queue->lock, &irqL);
 #else
 	_exit_critical_ex(&queue->lock, &irqL);
-#endif/*#ifdef CONFIG_SDIO_HCI*/
+#endif
 
 	return precvbuf;
 
@@ -937,7 +958,7 @@ void process_pwrbit_data(_adapter *padapter, union recv_frame *precv_frame, stru
 			/* psta->state ^= WIFI_SLEEP_STATE; */
 			/* rtw_tim_map_clear(padapter, pstapriv->sta_dz_bitmap, BIT(psta->cmn.aid)); */
 
-			wakeup_sta_to_xmit(padapter, psta);
+			wakeup_sta_to_xmit(padapter, psta, ALL_FRAME);
 			/* RTW_INFO_DUMP("to wakeup, sta_dz_bitmap=", pstapriv->sta_dz_bitmap, pstapriv->aid_bmp_len); */
 		}
 	}
@@ -1614,6 +1635,11 @@ sint validate_recv_ctrl_frame(_adapter *padapter, union recv_frame *precv_frame)
 	struct sta_priv *pstapriv = &padapter->stapriv;
 	u8 *pframe = precv_frame->u.hdr.rx_data;
 	struct sta_info *psta = NULL;
+	u8 dataq_null = _TRUE;
+	#ifdef CONFIG_RTW_MGMT_QUEUE
+	u8 mgmtq_null = _TRUE;
+	#endif
+
 	/* uint len = precv_frame->u.hdr.len; */
 
 	/* RTW_INFO("+validate_recv_ctrl_frame\n"); */
@@ -1666,13 +1692,11 @@ sint validate_recv_ctrl_frame(_adapter *padapter, union recv_frame *precv_frame)
 		if (wmmps_ac)
 			return _FAIL;
 
-		#ifdef CONFIG_AP_MODE
 		if (psta->state & WIFI_STA_ALIVE_CHK_STATE) {
 			RTW_INFO("%s alive check-rx ps-poll\n", __func__);
 			psta->expire_to = pstapriv->expire_to;
 			psta->state ^= WIFI_STA_ALIVE_CHK_STATE;
 		}
-		#endif
 
 		if ((psta->state & WIFI_SLEEP_STATE) && (rtw_tim_map_is_set(padapter, pstapriv->sta_dz_bitmap, psta->cmn.aid))) {
 			_irqL irqL;
@@ -1683,6 +1707,36 @@ sint validate_recv_ctrl_frame(_adapter *padapter, union recv_frame *precv_frame)
 			/* _enter_critical_bh(&psta->sleep_q.lock, &irqL); */
 			_enter_critical_bh(&pxmitpriv->lock, &irqL);
 
+#ifdef CONFIG_RTW_MGMT_QUEUE
+			xmitframe_phead = get_list_head(&psta->mgmt_sleep_q);
+			xmitframe_plist = get_next(xmitframe_phead);
+
+			if ((rtw_end_of_queue_search(xmitframe_phead, xmitframe_plist)) == _FALSE) {
+				pxmitframe = LIST_CONTAINOR(xmitframe_plist, struct xmit_frame, list);
+
+				xmitframe_plist = get_next(xmitframe_plist);
+
+				rtw_list_delete(&pxmitframe->list);
+
+				#ifdef DBG_MGMT_QUEUE
+				RTW_INFO("%s seq_num = %u, subtype = 0x%x\n",
+						__func__, pxmitframe->attrib.seqnum, pxmitframe->attrib.subtype);
+				#endif
+
+				psta->mgmt_sleepq_len--;
+
+				if (psta->mgmt_sleepq_len > 0)
+					pxmitframe->attrib.mdata = 1;
+				else
+					pxmitframe->attrib.mdata = 0;
+
+				pxmitframe->attrib.triggered = 1;
+
+				rtw_hal_mgmt_xmitframe_enqueue(padapter, pxmitframe);
+
+				mgmtq_null = _FALSE;
+			}
+#endif
 			xmitframe_phead = get_list_head(&psta->sleep_q);
 			xmitframe_plist = get_next(xmitframe_phead);
 
@@ -1713,42 +1767,51 @@ sint validate_recv_ctrl_frame(_adapter *padapter, union recv_frame *precv_frame)
 #endif
 				rtw_hal_xmitframe_enqueue(padapter, pxmitframe);
 
-				if (psta->sleepq_len == 0) {
-					rtw_tim_map_clear(padapter, pstapriv->tim_bitmap, psta->cmn.aid);
-
-					/* RTW_INFO("after handling ps-poll\n"); */
-					/* RTW_INFO_DUMP("after handling, tim=", pstapriv->tim_bitmap, pstapriv->aid_bmp_len); */
-
-					/* upate BCN for TIM IE */
-					/* update_BCNTIM(padapter);		 */
-					update_beacon(padapter, _TIM_IE_, NULL, _TRUE, 0);
-				}
+				dataq_null = _FALSE;
+			}
 
-				/* _exit_critical_bh(&psta->sleep_q.lock, &irqL); */
-				_exit_critical_bh(&pxmitpriv->lock, &irqL);
+			_exit_critical_bh(&pxmitpriv->lock, &irqL);
+			/* _exit_critical_bh(&psta->sleep_q.lock, &irqL); */
 
-			} else {
-				/* _exit_critical_bh(&psta->sleep_q.lock, &irqL); */
-				_exit_critical_bh(&pxmitpriv->lock, &irqL);
+			/* Error handler : TIM is setted, but data queue and management queue is empty. */
+			if (dataq_null 
+				#ifdef CONFIG_RTW_MGMT_QUEUE
+				&& mgmtq_null
+				#endif
+				&& rtw_tim_map_is_set(padapter, pstapriv->tim_bitmap, psta->cmn.aid)) {
 
-				/* RTW_INFO("no buffered packets to xmit\n"); */
-				if (rtw_tim_map_is_set(padapter, pstapriv->tim_bitmap, psta->cmn.aid)) {
-					if (psta->sleepq_len == 0) {
-						RTW_INFO("no buffered packets to xmit\n");
+				if (psta->sleepq_len == 0
+					#ifdef CONFIG_RTW_MGMT_QUEUE
+					&& psta->mgmt_sleepq_len == 0
+					#endif
+					) {
+					RTW_INFO("No buffered packets to xmit\n");
 
-						/* issue nulldata with More data bit = 0 to indicate we have no buffered packets */
-						issue_nulldata(padapter, psta->cmn.mac_addr, 0, 0, 0);
-					} else {
+					/* issue nulldata with More data bit = 0 to indicate we have no buffered packets */
+					issue_nulldata(padapter, psta->cmn.mac_addr, 0, 0, 0);
+				} else {
+					if (psta->sleepq_len != 0) {
 						RTW_INFO("error!psta->sleepq_len=%d\n", psta->sleepq_len);
 						psta->sleepq_len = 0;
 					}
+					#ifdef CONFIG_RTW_MGMT_QUEUE
+					if (psta->mgmt_sleepq_len != 0) {
+						RTW_INFO("error!psta->mgmt_sleepq_len=%d\n", psta->mgmt_sleepq_len);
+						psta->mgmt_sleepq_len = 0;
+					}
+					#endif
+				}
+			}
 
-					rtw_tim_map_clear(padapter, pstapriv->tim_bitmap, psta->cmn.aid);
+			if (psta->sleepq_len == 0
+			#ifdef CONFIG_RTW_MGMT_QUEUE
+			&& psta->mgmt_sleepq_len == 0
+			#endif
+			) {
+				rtw_tim_map_clear(padapter, pstapriv->tim_bitmap, psta->cmn.aid);
 
-					/* upate BCN for TIM IE */
-					/* update_BCNTIM(padapter); */
-					update_beacon(padapter, _TIM_IE_, NULL, _TRUE, 0);
-				}
+				/* upate BCN for TIM IE */
+				update_beacon(padapter, _TIM_IE_, NULL, _TRUE, 0);
 			}
 		}
 #endif /* CONFIG_AP_MODE */
@@ -2147,6 +2210,16 @@ sint validate_recv_data_frame(_adapter *adapter, union recv_frame *precv_frame)
 		goto exit;
 	}
 
+	if ((psta->flags & WLAN_STA_AMSDU_DISABLE) && pattrib->amsdu) {
+		#ifdef DBG_RX_DROP_FRAME
+		RTW_INFO("DBG_RX_DROP_FRAME "FUNC_ADPT_FMT" amsdu not allowed"MAC_FMT"\n"
+			, FUNC_ADPT_ARG(adapter), MAC_ARG(psta->cmn.mac_addr));
+		#endif
+		ret = _FAIL;
+		goto exit;
+
+	}
+
 	precv_frame->u.hdr.psta = psta;
 	precv_frame->u.hdr.preorder_ctrl = NULL;
 	pattrib->ack_policy = 0;
@@ -2212,6 +2285,76 @@ sint validate_recv_data_frame(_adapter *adapter, union recv_frame *precv_frame)
 		pattrib->iv_len = pattrib->icv_len = 0;
 	}
 
+	/* drop unprotected frame in protected network. */
+	if (psecuritypriv->dot11PrivacyAlgrthm != _NO_PRIVACY_ ) {
+		if (IS_MCAST(pattrib->ra)) {
+			if (!pattrib->privacy) {
+				#ifdef DBG_RX_DROP_FRAME
+				RTW_INFO("DBG_RX_DROP_FRAME "FUNC_ADPT_FMT"recv plaintext bmc packet for sta="MAC_FMT"\n"
+					, FUNC_ADPT_ARG(adapter), MAC_ARG(psta->cmn.mac_addr));
+				#endif
+				ret = _FAIL;
+				goto exit;
+			}
+		} else {
+			/* unicast */
+			u16 ether_type;
+			u8* ether_ptr = NULL;
+			u16  eapol_type = 0x888e;
+			ether_ptr = ptr + pattrib->hdrlen + pattrib->iv_len + RATTRIB_GET_MCTRL_LEN(pattrib) + LLC_HEADER_SIZE;
+			_rtw_memcpy(&ether_type, ether_ptr, 2);
+			ether_type = ntohs((unsigned short)ether_type);
+
+			if (psecuritypriv->dot11AuthAlgrthm == dot11AuthAlgrthm_8021X) {
+				/* CVE-2020-26140, CVE-2020-26143, CVE-2020-26147,  let eapol packet go through*/
+				if (!pattrib->privacy && ether_type != eapol_type ) {
+					#ifdef DBG_RX_DROP_FRAME
+					RTW_INFO("DBG_RX_DROP_FRAME "FUNC_ADPT_FMT"recv plaintext unicast packet for sta="MAC_FMT"\n"
+					, FUNC_ADPT_ARG(adapter), MAC_ARG(psta->cmn.mac_addr));
+					#endif
+					ret = _FAIL;
+					goto exit;
+				}
+				/* CVE-2020-26144, pevernt plaintext A-MSDU */
+				/* This can prevent plantext A-MSDU cloacked as an EAPOL frame */
+				if (!pattrib->privacy && pattrib->amsdu) {
+					#ifdef DBG_RX_DROP_FRAME
+					RTW_INFO("DBG_RX_DROP_FRAME "FUNC_ADPT_FMT"recv plaintext A-MSDU for sta="MAC_FMT"\n"
+					, FUNC_ADPT_ARG(adapter), MAC_ARG(psta->cmn.mac_addr));
+					#endif
+					ret = _FAIL;
+					goto exit;
+				}
+				/* CVE-2020-26139,  Drop any forwarding eapol packet until 4-way has done.	*/
+				if ((ether_type == eapol_type)
+					&& (MLME_IS_AP(adapter) || MLME_IS_MESH(adapter))
+					&& (psta->dot118021XPrivacy == _NO_PRIVACY_)
+					&& (!_rtw_memcmp( adapter_mac_addr(adapter), pattrib->dst, ETH_ALEN))) {
+					#ifdef DBG_RX_DROP_FRAME
+					RTW_INFO("DBG_RX_DROP_FRAME "FUNC_ADPT_FMT" recv eapol packet forwarding(dst:"MAC_FMT") before 4-way finish.\n"
+						, FUNC_ADPT_ARG(adapter), MAC_ARG(pattrib->dst));
+					#endif
+					ret = _FAIL;
+					goto exit;
+				}
+			} else {
+				/* CVE-2020-26140, CVE-2020-26143, CVE-2020-26147 */
+				if (!pattrib->privacy
+					#ifdef CONFIG_WAPI_SUPPORT
+					&& (0x88b4 != ether_type) /* Let WAI packet pass here */
+					#endif
+				) {
+					#ifdef DBG_RX_DROP_FRAME
+					RTW_INFO("DBG_RX_DROP_FRAME "FUNC_ADPT_FMT"recv plaintext packet for sta="MAC_FMT"\n"
+						, FUNC_ADPT_ARG(adapter), MAC_ARG(psta->cmn.mac_addr));
+					#endif
+					ret = _FAIL;
+					goto exit;
+				}
+			}
+		}
+	}
+
 #ifdef CONFIG_RTW_MESH
 	if (!pattrib->amsdu
 		&& pattrib->mesh_ctrl_present
@@ -2548,7 +2691,10 @@ union recv_frame *recvframe_defrag(_adapter *adapter, _queue *defrag_q)
 	struct recv_frame_hdr *pfhdr, *pnfhdr;
 	union recv_frame *prframe, *pnextrframe;
 	_queue	*pfree_recv_queue;
-
+	u8 *pdata = NULL;
+	u64 tmp_iv_hdr = 0;
+	u64 pkt_pn = 0, cur_pn = 0;
+	struct rx_pkt_attrib *pattrib = NULL;
 
 	curfragnum = 0;
 	pfree_recv_queue = &adapter->recvpriv.free_recv_queue;
@@ -2556,6 +2702,15 @@ union recv_frame *recvframe_defrag(_adapter *adapter, _queue *defrag_q)
 	phead = get_list_head(defrag_q);
 	plist = get_next(phead);
 	prframe = LIST_CONTAINOR(plist, union recv_frame, u);
+	/* CVE-2020-26146 */
+	pattrib = &prframe->u.hdr.attrib;
+	if (pattrib->encrypt == _AES_  || pattrib->encrypt == _CCMP_256_
+		|| pattrib->encrypt == _GCMP_ || pattrib->encrypt == _GCMP_256_ ) {
+		pdata = prframe->u.hdr.rx_data;
+		tmp_iv_hdr = le64_to_cpu(*(u64*)(pdata + pattrib->hdrlen));
+		/* get the first frame's PN. */
+		cur_pn = CCMPH_2_PN(tmp_iv_hdr);
+	}
 	pfhdr = &prframe->u.hdr;
 	rtw_list_delete(&(prframe->u.list));
 
@@ -2585,7 +2740,33 @@ union recv_frame *recvframe_defrag(_adapter *adapter, _queue *defrag_q)
 	while (rtw_end_of_queue_search(phead, plist) == _FALSE) {
 		pnextrframe = LIST_CONTAINOR(plist, union recv_frame , u);
 		pnfhdr = &pnextrframe->u.hdr;
+		/* CVE-2020-26146, check whether the PN is consecutive. */
+		pattrib = &pnextrframe->u.hdr.attrib;
+		if (pattrib->encrypt == _AES_  || pattrib->encrypt == _CCMP_256_
+			|| pattrib->encrypt == _GCMP_ || pattrib->encrypt == _GCMP_256_ ) {
+			pdata = pnextrframe->u.hdr.rx_data;
+			tmp_iv_hdr = le64_to_cpu(*(u64*)(pdata + pattrib->hdrlen));
+			pkt_pn = CCMPH_2_PN(tmp_iv_hdr);
+			if (pkt_pn != cur_pn + 1) {
+				RTW_INFO("%s non-consective PN! old:%llu, new:%llu\n",
+					__func__, cur_pn, pkt_pn);
+				/* PN must be consecutive */
+				/* release the defrag_q & prframe */
+				rtw_free_recvframe(prframe, pfree_recv_queue);
+				rtw_free_recvframe_queue(defrag_q, pfree_recv_queue);
+				return NULL;
+			} else {
+				cur_pn = pkt_pn;
+			}
+		}
 
+		/* CVE-2020-24587, The keytrack of the fragment is supposed to be the same with other's	*/
+		if (pfhdr->keytrack != pnfhdr->keytrack) {
+			RTW_INFO("Inconsistent key track, drop fragmented frame!\n");
+			rtw_free_recvframe(prframe, pfree_recv_queue);
+			rtw_free_recvframe_queue(defrag_q, pfree_recv_queue);
+			return NULL;
+		}
 
 		/* check the fragment sequence  (2nd ~n fragment frame) */
 
@@ -2597,8 +2778,6 @@ union recv_frame *recvframe_defrag(_adapter *adapter, _queue *defrag_q)
 			return NULL;
 		}
 
-		curfragnum++;
-
 		/* copy the 2nd~n fragment frame's payload to the first fragment */
 		/* get the 2nd~last fragment frame's payload */
 
@@ -2606,6 +2785,15 @@ union recv_frame *recvframe_defrag(_adapter *adapter, _queue *defrag_q)
 
 		recvframe_pull(pnextrframe, wlanhdr_offset);
 
+		if ((pfhdr->rx_end - pfhdr->rx_tail) < pnfhdr->len) {
+			RTW_INFO("Not enough buffer space, drop fragmented frame!\n");
+			rtw_free_recvframe(prframe, pfree_recv_queue);
+			rtw_free_recvframe_queue(defrag_q, pfree_recv_queue);
+			return NULL;
+		}
+
+		curfragnum++;
+
 		/* append  to first fragment frame's tail (if privacy frame, pull the ICV) */
 		recvframe_pull_tail(prframe, pfhdr->attrib.icv_len);
 
@@ -2666,6 +2854,16 @@ union recv_frame *recvframe_chk_defrag(PADAPTER padapter, union recv_frame *prec
 
 	if ((ismfrag == 0) && (fragnum == 0)) {
 		prtnframe = precv_frame;/* isn't a fragment frame */
+	} else {
+		/* CVE-2020-26145, group addressed frame cannot use fragmentation!! */
+		if (IS_MCAST(pfhdr->attrib.ra)) {
+			RTW_INFO("DROP group addressed fragment!\n");
+			rtw_free_recvframe(precv_frame, pfree_recv_queue);
+			return NULL;
+		}
+		/* CVE-2020-24587 */
+		if ((psta) && (pdefrag_q))
+			precv_frame->u.hdr.keytrack = ATOMIC_READ(&psta->keytrack);
 	}
 
 	if (ismfrag == 1) {
@@ -2824,31 +3022,31 @@ static int rtw_recv_indicatepkt_check(union recv_frame *rframe, u8 *ehdr_pos, u3
 }
 
 #if defined(CONFIG_AP_MODE) || defined(CONFIG_RTW_MESH)
-static void recv_free_fwd_resource(_adapter *adapter, struct xmit_frame *fwd_frame, _list *b2u_list)
+static void recv_free_fwd_resource(_adapter *adapter, struct xmit_frame *fwd_frame, _list *f_list)
 {
 	struct xmit_priv *xmitpriv = &adapter->xmitpriv;
 
 	if (fwd_frame)
 		rtw_free_xmitframe(xmitpriv, fwd_frame);
 
-#if CONFIG_RTW_DATA_BMC_TO_UC
-	if (!rtw_is_list_empty(b2u_list)) {
-		struct xmit_frame *b2uframe;
+#if defined(CONFIG_RTW_WDS) || CONFIG_RTW_DATA_BMC_TO_UC
+	if (!rtw_is_list_empty(f_list)) {
+		struct xmit_frame *fframe;
 		_list *list;
 
-		list = get_next(b2u_list);
-		while (rtw_end_of_queue_search(b2u_list, list) == _FALSE) {
-			b2uframe = LIST_CONTAINOR(list, struct xmit_frame, list);
+		list = get_next(f_list);
+		while (rtw_end_of_queue_search(f_list, list) == _FALSE) {
+			fframe = LIST_CONTAINOR(list, struct xmit_frame, list);
 			list = get_next(list);
-			rtw_list_delete(&b2uframe->list);
-			rtw_free_xmitframe(xmitpriv, b2uframe);
+			rtw_list_delete(&fframe->list);
+			rtw_free_xmitframe(xmitpriv, fframe);
 		}
 	}
 #endif
 }
 
 static void recv_fwd_pkt_hdl(_adapter *adapter, _pkt *pkt
-	, u8 act, struct xmit_frame *fwd_frame, _list *b2u_list)
+	, u8 act, struct xmit_frame *fwd_frame, _list *f_list)
 {
 	struct xmit_priv *xmitpriv = &adapter->xmitpriv;
 	_pkt *fwd_pkt = pkt;
@@ -2859,31 +3057,31 @@ static void recv_fwd_pkt_hdl(_adapter *adapter, _pkt *pkt
 			#ifdef DBG_TX_DROP_FRAME
 			RTW_INFO("DBG_TX_DROP_FRAME %s rtw_os_pkt_copy fail\n", __func__);
 			#endif
-			recv_free_fwd_resource(adapter, fwd_frame, b2u_list);
+			recv_free_fwd_resource(adapter, fwd_frame, f_list);
 			goto exit;
 		}
 	}
 
-#if CONFIG_RTW_DATA_BMC_TO_UC
-	if (!rtw_is_list_empty(b2u_list)) {
-		_list *list = get_next(b2u_list);
-		struct xmit_frame *b2uframe;
+#if defined(CONFIG_RTW_WDS) || CONFIG_RTW_DATA_BMC_TO_UC
+	if (!rtw_is_list_empty(f_list)) {
+		_list *list = get_next(f_list);
+		struct xmit_frame *fframe;
 
-		while (rtw_end_of_queue_search(b2u_list, list) == _FALSE) {
-			b2uframe = LIST_CONTAINOR(list, struct xmit_frame, list);
+		while (rtw_end_of_queue_search(f_list, list) == _FALSE) {
+			fframe = LIST_CONTAINOR(list, struct xmit_frame, list);
 			list = get_next(list);
-			rtw_list_delete(&b2uframe->list);
+			rtw_list_delete(&fframe->list);
 
-			if (!fwd_frame && rtw_is_list_empty(b2u_list)) /* the last fwd_pkt */
-				b2uframe->pkt = fwd_pkt;
+			if (!fwd_frame && rtw_is_list_empty(f_list)) /* the last fwd_pkt */
+				fframe->pkt = fwd_pkt;
 			else
-				b2uframe->pkt = rtw_os_pkt_copy(fwd_pkt);
-			if (!b2uframe->pkt) {
-				rtw_free_xmitframe(xmitpriv, b2uframe);
+				fframe->pkt = rtw_os_pkt_copy(fwd_pkt);
+			if (!fframe->pkt) {
+				rtw_free_xmitframe(xmitpriv, fframe);
 				continue;
 			}
 
-			rtw_xmit_posthandle(adapter, b2uframe, b2uframe->pkt);
+			rtw_xmit_posthandle(adapter, fframe, fframe->pkt);
 		}
 	}
 #endif
@@ -2903,6 +3101,47 @@ static void recv_fwd_pkt_hdl(_adapter *adapter, _pkt *pkt
 }
 #endif /* defined(CONFIG_AP_MODE) || defined(CONFIG_RTW_MESH) */
 
+/*
+ * From WFA suggestion:						*
+ * If first subframe meets one of the following condition,	*
+ * the whole received AMSDU should drop.			*
+ * 1. subframe's DA is not the same as RA in From DS case.	*
+ * 2. subframe's SA is not the same as TA in To DS case.	*
+ * 3. subframe's DA is AA:AA:03:00:00:00			*
+								*/
+static u8 validate_amsdu_content(_adapter *padapter, union recv_frame *prframe,
+	const u8 *da, const u8 *sa)
+{
+	struct rx_pkt_attrib	*pattrib = &prframe->u.hdr.attrib;
+	u8 ret = _SUCCESS;
+
+	/* Use the recommendation method form Wi-Fi alliance to check subframe */
+	/* in protected network */
+	if (padapter->registrypriv.amsdu_mode == RTW_AMSDU_MODE_NON_SPP &&
+		padapter->securitypriv.dot11PrivacyAlgrthm != _NO_PRIVACY_) {
+
+		/* 1.check From DS */
+		if (pattrib->to_fr_ds == 2) {
+			if (_rtw_memcmp(da, pattrib->ra, ETH_ALEN) == _FALSE)
+			ret = _FAIL;
+		}
+
+		/* 2.check To DS */
+		if (pattrib->to_fr_ds == 1) {
+			if (_rtw_memcmp(sa, pattrib->ta, ETH_ALEN) == _FALSE)
+			ret = _FAIL;
+		}
+
+		/* 3.Check whether DA is AA:AA:03:00:00:00 */
+		if (_rtw_memcmp(da, rtw_rfc1042_header, ETH_ALEN) == _TRUE)
+			ret = _FAIL;
+
+	}
+
+	return ret;
+
+}
+
 int amsdu_to_msdu(_adapter *padapter, union recv_frame *prframe)
 {
 	struct rx_pkt_attrib *rattrib = &prframe->u.hdr.attrib;
@@ -2917,7 +3156,7 @@ int amsdu_to_msdu(_adapter *padapter, union recv_frame *prframe)
 	int act;
 #if defined(CONFIG_AP_MODE) || defined(CONFIG_RTW_MESH)
 	struct xmit_frame *fwd_frame;
-	_list b2u_list;
+	_list f_list;
 #endif
 	enum rtw_rx_llc_hdl llc_hdl;
 	u8 mctrl_len = 0;
@@ -2956,6 +3195,12 @@ int amsdu_to_msdu(_adapter *padapter, union recv_frame *prframe)
 
 			v_ret = rtw_mesh_rx_data_validate_mctrl(padapter, prframe
 				, mctrl, mda, msa, &mctrl_len, &da, &sa);
+
+			if (validate_amsdu_content(padapter, prframe, da, sa) == _FAIL) {
+				RTW_INFO("%s check subframe content fail!\n", __func__);
+				break;
+			}
+
 			if (v_ret != _SUCCESS)
 				goto move_to_next;
 
@@ -2963,17 +3208,23 @@ int amsdu_to_msdu(_adapter *padapter, union recv_frame *prframe)
 			act = rtw_mesh_rx_msdu_act_check(prframe
 				, mda, msa, da, sa, mctrl
 				, pdata + ETH_HLEN + mctrl_len, llc_hdl
-				, &fwd_frame, &b2u_list);
+				, &fwd_frame, &f_list);
 		} else
 		#endif
 		{
 			da = pdata;
 			sa = pdata + ETH_ALEN;
+
+			if (validate_amsdu_content(padapter, prframe, da, sa) == _FAIL) {
+				RTW_INFO("%s check subframe content fail!\n", __func__);
+				break;
+			}
+
 			llc_hdl = rtw_recv_llc_parse(pdata + ETH_HLEN, nSubframe_Length);
 			#ifdef CONFIG_AP_MODE
 			if (MLME_IS_AP(padapter)) {
 				act = rtw_ap_rx_msdu_act_check(prframe, da, sa
-					, pdata + ETH_HLEN, llc_hdl, &fwd_frame, &b2u_list);
+					, pdata + ETH_HLEN, llc_hdl, &fwd_frame, &f_list);
 			} else
 			#endif
 			if (MLME_IS_STA(padapter))
@@ -2998,7 +3249,7 @@ int amsdu_to_msdu(_adapter *padapter, union recv_frame *prframe)
 				#ifdef DBG_TX_DROP_FRAME
 				RTW_INFO("DBG_TX_DROP_FRAME %s rtw_os_alloc_msdu_pkt fail\n", __func__);
 				#endif
-				recv_free_fwd_resource(padapter, fwd_frame, &b2u_list);
+				recv_free_fwd_resource(padapter, fwd_frame, &f_list);
 			}
 			#endif
 			break;
@@ -3006,7 +3257,7 @@ int amsdu_to_msdu(_adapter *padapter, union recv_frame *prframe)
 
 		#if defined(CONFIG_AP_MODE) || defined(CONFIG_RTW_MESH)
 		if (act & RTW_RX_MSDU_ACT_FORWARD) {
-			recv_fwd_pkt_hdl(padapter, sub_pkt, act, fwd_frame, &b2u_list);
+			recv_fwd_pkt_hdl(padapter, sub_pkt, act, fwd_frame, &f_list);
 			if (!(act & RTW_RX_MSDU_ACT_INDICATE))
 				goto move_to_next;
 		}
@@ -3084,7 +3335,7 @@ static int recv_process_mpdu(_adapter *padapter, union recv_frame *prframe)
 
 		#if defined(CONFIG_AP_MODE) || defined(CONFIG_RTW_MESH)
 		struct xmit_frame *fwd_frame = NULL;
-		_list b2u_list;
+		_list f_list;
 
 		#ifdef CONFIG_RTW_MESH
 		if (MLME_IS_MESH(padapter)) {
@@ -3094,12 +3345,12 @@ static int recv_process_mpdu(_adapter *padapter, union recv_frame *prframe)
 					, pattrib->dst, pattrib->src
 					, (struct rtw_ieee80211s_hdr *)(msdu - RATTRIB_GET_MCTRL_LEN(pattrib))
 					, msdu, llc_hdl
-					, &fwd_frame, &b2u_list);
+					, &fwd_frame, &f_list);
 		} else
 		#endif
 		if (MLME_IS_AP(padapter))
 			act = rtw_ap_rx_msdu_act_check(prframe, pattrib->dst, pattrib->src
-					, msdu, llc_hdl, &fwd_frame, &b2u_list);
+					, msdu, llc_hdl, &fwd_frame, &f_list);
 		#endif
 
 		#if defined(CONFIG_AP_MODE) || defined(CONFIG_RTW_MESH)
@@ -3125,7 +3376,7 @@ static int recv_process_mpdu(_adapter *padapter, union recv_frame *prframe)
 				#ifdef DBG_TX_DROP_FRAME
 				RTW_INFO("DBG_TX_DROP_FRAME %s wlanhdr_to_ethhdr fail\n", __func__);
 				#endif
-				recv_free_fwd_resource(padapter, fwd_frame, &b2u_list);
+				recv_free_fwd_resource(padapter, fwd_frame, &f_list);
 			}
 			#endif
 			rtw_free_recvframe(prframe, pfree_recv_queue);
@@ -3134,7 +3385,7 @@ static int recv_process_mpdu(_adapter *padapter, union recv_frame *prframe)
 
 		#if defined(CONFIG_AP_MODE) || defined(CONFIG_RTW_MESH)
 		if (act & RTW_RX_MSDU_ACT_FORWARD) {
-			recv_fwd_pkt_hdl(padapter, prframe->u.hdr.pkt, act, fwd_frame, &b2u_list);
+			recv_fwd_pkt_hdl(padapter, prframe->u.hdr.pkt, act, fwd_frame, &f_list);
 			if (!(act & RTW_RX_MSDU_ACT_INDICATE)) {
 				prframe->u.hdr.pkt = NULL;
 				rtw_free_recvframe(prframe, pfree_recv_queue);
@@ -3450,8 +3701,15 @@ static int recv_indicatepkt_reorder(_adapter *padapter, union recv_frame *prfram
 
 	if(rtw_test_and_clear_bit(RTW_RECV_ACK_OR_TIMEOUT, &preorder_ctrl->rec_abba_rsp_ack))
 		preorder_ctrl->indicate_seq = 0xFFFF;
+	if(rtw_test_and_clear_bit(RTW_RECV_REORDER_WOW, &preorder_ctrl->rec_abba_rsp_ack)) {
+		preorder_ctrl->indicate_seq = 0xFFFF;
+		RTW_INFO("DBG_RX_SEQ %s:preorder_ctrl->rec_abba_rsp_ack = %lu,indicate_seq = %d\n"
+		, __func__
+		, preorder_ctrl->rec_abba_rsp_ack
+		, preorder_ctrl->indicate_seq);
+	}
 	#ifdef DBG_RX_SEQ
-	RTW_INFO("DBG_RX_SEQ %s:preorder_ctrl->rec_abba_rsp_ack = %u,indicate_seq = %d\n"
+	RTW_INFO("DBG_RX_SEQ %s:preorder_ctrl->rec_abba_rsp_ack = %lu,indicate_seq = %d\n"
 		, __func__
 		, preorder_ctrl->rec_abba_rsp_ack
 		, preorder_ctrl->indicate_seq);
@@ -3637,7 +3895,7 @@ int validate_mp_recv_frame(_adapter *adapter, union recv_frame *precv_frame)
 			int i;
 			RTW_INFO("############ type:0x%02x subtype:0x%02x #################\n", type, subtype);
 
-			for (i = 0; i < precv_frame->u.hdr.len; i = i + 8)
+			for (i = 0; i < precv_frame->u.hdr.len; i = i + 8) {
 				RTW_INFO("%02X:%02X:%02X:%02X:%02X:%02X:%02X:%02X:\n", *(ptr + i),
 					*(ptr + i + 1), *(ptr + i + 2) , *(ptr + i + 3) , *(ptr + i + 4), *(ptr + i + 5), *(ptr + i + 6), *(ptr + i + 7));
 				RTW_INFO("#############################\n");
@@ -3645,6 +3903,7 @@ int validate_mp_recv_frame(_adapter *adapter, union recv_frame *precv_frame)
 				_rtw_memcpy(pmppriv->mplink_buf, ptr, precv_frame->u.hdr.len);
 				pmppriv->mplink_rx_len = precv_frame->u.hdr.len;
 				pmppriv->mplink_brx =_TRUE;
+			}
 		}
 	}
 	if (pmppriv->bloopback) {
@@ -4587,7 +4846,7 @@ s32 pre_recv_entry(union recv_frame *precvframe, u8 *pphy_status)
 		/* UC frame */
 		iface = rtw_get_iface_by_macddr(primary_padapter , ra);
 		if (!iface) {
-			#ifdef CONFIG_RTW_CFGVENDOR_RANDOM_MAC_OUI
+			#if defined(CONFIG_RTW_CFGVENDOR_RANDOM_MAC_OUI) || defined(CONFIG_RTW_SCAN_RAND)
 			if (_rtw_memcmp(ra, adapter_pno_mac_addr(primary_padapter), ETH_ALEN))
 				goto query_phy_status;
 			#endif
@@ -4639,7 +4898,7 @@ s32 pre_recv_entry(union recv_frame *precvframe, u8 *pphy_status)
 			goto exit;
 		}
 	}
-#if defined(CONFIG_MP_INCLUDED) || defined(CONFIG_WIFI_MONITOR) || defined(CONFIG_RTW_CFGVENDOR_RANDOM_MAC_OUI)
+#if defined(CONFIG_MP_INCLUDED) || defined(CONFIG_WIFI_MONITOR) || defined(CONFIG_RTW_CFGVENDOR_RANDOM_MAC_OUI) || defined(CONFIG_RTW_SCAN_RAND)
 query_phy_status:
 #endif
 	if (pphy_status) {
@@ -4665,9 +4924,13 @@ thread_return rtw_recv_thread(thread_context context)
 	s32 err = _SUCCESS;
 #ifdef RTW_RECV_THREAD_HIGH_PRIORITY
 #ifdef PLATFORM_LINUX
+#if (LINUX_VERSION_CODE >= KERNEL_VERSION(5, 9, 0))
+	sched_set_fifo_low(current);
+#else
 	struct sched_param param = { .sched_priority = 1 };
-
+				
 	sched_setscheduler(current, SCHED_FIFO, &param);
+#endif
 #endif /* PLATFORM_LINUX */
 #endif /*RTW_RECV_THREAD_HIGH_PRIORITY*/
 	thread_enter("RTW_RECV_THREAD");
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/core/rtw_rf.c b/drivers/net/wireless/rockchip_wlan/rtl8821cs/core/rtw_rf.c
index 8b3a6d4a1610..e5ce9d5e3dab 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/core/rtw_rf.c
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/core/rtw_rf.c
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017 Realtek Corporation.
@@ -581,6 +580,16 @@ u8 rtw_get_ch_group(u8 ch, u8 *group, u8 *cck_group)
 	return band;
 }
 
+#if CONFIG_IEEE80211_BAND_6GHZ
+int rtw_6gch2freq(int chan)
+{
+	if (chan >= 1 && chan <= 253)
+		return 5950 + chan * 5;
+
+	return 0; /* not supported */
+}
+#endif
+
 int rtw_ch2freq(int chan)
 {
 	/* see 802.11 17.3.8.3.2 and Annex J
@@ -602,6 +611,16 @@ int rtw_ch2freq(int chan)
 	return 0; /* not supported */
 }
 
+int rtw_ch2freq_by_band(BAND_TYPE band, int ch)
+{
+#if CONFIG_IEEE80211_BAND_6GHZ
+	if (band == BAND_ON_6G)
+		return rtw_6gch2freq(ch);
+	else
+#endif
+		return rtw_ch2freq(ch);
+}
+
 int rtw_freq2ch(int freq)
 {
 	/* see 802.11 17.3.8.3.2 and Annex J */
@@ -611,14 +630,54 @@ int rtw_freq2ch(int freq)
 		return (freq - 2407) / 5;
 	else if (freq >= 4910 && freq <= 4980)
 		return (freq - 4000) / 5;
-	else if (freq <= 45000) /* DMG band lower limit */
+	else if (freq >= 5000 && freq < 5950)
 		return (freq - 5000) / 5;
+	else if (freq >= 5950 && freq <= 7215)
+		return (freq - 5950) / 5;
 	else if (freq >= 58320 && freq <= 64800)
 		return (freq - 56160) / 2160;
 	else
 		return 0;
 }
 
+BAND_TYPE rtw_freq2band(int freq)
+{
+	if (freq <= 2484)
+		return BAND_ON_2_4G;
+	else if (freq >= 5000 && freq < 5950)
+		return BAND_ON_5G;
+#if CONFIG_IEEE80211_BAND_6GHZ
+	else if (freq >= 5950 && freq <= 7215)
+		return BAND_ON_6G;
+#endif
+	else
+		return BAND_MAX;
+}
+
+bool rtw_freq_consecutive(int a, int b)
+{
+	BAND_TYPE band_a, band_b;
+
+	band_a = rtw_freq2band(a);
+	if (band_a == BAND_MAX)
+		return 0;
+	band_b = rtw_freq2band(b);
+	if (band_b == BAND_MAX || band_a != band_b)
+		return 0;
+
+	switch (band_a) {
+	case BAND_ON_2_4G:
+		return rtw_abs(a - b) == 5;
+	case BAND_ON_5G:
+#if CONFIG_IEEE80211_BAND_6GHZ
+	case BAND_ON_6G:
+#endif
+		return rtw_abs(a - b) == 20;
+	default:
+		return 0;
+	}
+}
+
 bool rtw_chbw_to_freq_range(u8 ch, u8 bw, u8 offset, u32 *hi, u32 *lo)
 {
 	u8 c_ch;
@@ -686,15 +745,21 @@ const u8 _ch_width_to_bw_cap[CHANNEL_WIDTH_MAX] = {
 };
 
 const char *const _band_str[] = {
-	"2.4G",
-	"5G",
-	"BAND_MAX",
+	[BAND_ON_2_4G]	= "2.4G",
+	[BAND_ON_5G]	= "5G",
+#if CONFIG_IEEE80211_BAND_6GHZ
+	[BAND_ON_6G]	= "6G",
+#endif
+	[BAND_MAX]		= "BAND_MAX",
 };
 
 const u8 _band_to_band_cap[] = {
-	BAND_CAP_2G,
-	BAND_CAP_5G,
-	0,
+	[BAND_ON_2_4G]	= BAND_CAP_2G,
+	[BAND_ON_5G]	= BAND_CAP_5G,
+#if CONFIG_IEEE80211_BAND_6GHZ
+	[BAND_ON_6G]	= BAND_CAP_6G,
+#endif
+	[BAND_MAX]		= 0,
 };
 
 const char *const _opc_bw_str[OPC_BW_NUM] = {
@@ -730,7 +795,7 @@ struct op_class_t {
 #define OP_CLASS_ENT(_class, _band, _bw, _len, arg...) \
 	{.class_id = _class, .band = _band, .bw = _bw, .len_ch_attr = (uint8_t[_len + 1]) {_len, ##arg},}
 
-/* 802.11-2016 Table E-4, partial */
+/* 802.11-2020, 802.11ax-2021 Table E-4, partial */
 static const struct op_class_t global_op_class[] = {
 	/* 2G ch1~13, 20M */
 	OP_CLASS_ENT(81,	BAND_ON_2_4G,	OPC_BW20,		13,	1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13),
@@ -753,15 +818,15 @@ static const struct op_class_t global_op_class[] = {
 	OP_CLASS_ENT(123,	BAND_ON_5G,		OPC_BW40MINUS,	6,	104, 112, 120, 128, 136, 144),
 	/* 5G band 4, 20M & 40M */
 	OP_CLASS_ENT(124,	BAND_ON_5G,		OPC_BW20,		4,	149, 153, 157, 161),
-	OP_CLASS_ENT(125,	BAND_ON_5G,		OPC_BW20,		6,	149, 153, 157, 161, 165, 169),
-	OP_CLASS_ENT(126,	BAND_ON_5G,		OPC_BW40PLUS,	2,	149, 157),
-	OP_CLASS_ENT(127,	BAND_ON_5G,		OPC_BW40MINUS,	2,	153, 161),
+	OP_CLASS_ENT(125,	BAND_ON_5G,		OPC_BW20,		8,	149, 153, 157, 161, 165, 169, 173, 177),
+	OP_CLASS_ENT(126,	BAND_ON_5G,		OPC_BW40PLUS,	4,	149, 157, 165, 173),
+	OP_CLASS_ENT(127,	BAND_ON_5G,		OPC_BW40MINUS,	4,	153, 161, 169, 177),
 	/* 5G, 80M & 160M */
-	OP_CLASS_ENT(128,	BAND_ON_5G,		OPC_BW80,		24,	36, 40, 44, 48, 52, 56, 60, 64, 100, 104, 108, 112, 116, 120, 124, 128, 132, 136, 140, 144, 149, 153, 157, 161),
-	OP_CLASS_ENT(129,	BAND_ON_5G,		OPC_BW160,		16,	36, 40, 44, 48, 52, 56, 60, 64, 100, 104, 108, 112, 116, 120, 124, 128),
+	OP_CLASS_ENT(128,	BAND_ON_5G,		OPC_BW80,		28,	36, 40, 44, 48, 52, 56, 60, 64, 100, 104, 108, 112, 116, 120, 124, 128, 132, 136, 140, 144, 149, 153, 157, 161, 165, 169, 173, 177),
+	OP_CLASS_ENT(129,	BAND_ON_5G,		OPC_BW160,		24,	36, 40, 44, 48, 52, 56, 60, 64, 100, 104, 108, 112, 116, 120, 124, 128, 149, 153, 157, 161, 165, 169, 173, 177),
 	#if 0 /* TODO */
 	/* 5G, 80+80M */
-	{130,	BAND_ON_5G,		OPC_BW80P80,	0x0FFFFFF},
+	OP_CLASS_ENT(130,	BAND_ON_5G,		OPC_BW80P80,	28,	36, 40, 44, 48, 52, 56, 60, 64, 100, 104, 108, 112, 116, 120, 124, 128, 132, 136, 140, 144, 149, 153, 157, 161, 165, 169, 173, 177),
 	#endif
 };
 
@@ -854,16 +919,16 @@ static void dump_op_class_ch_title(void *sel)
 static void dump_global_op_class_ch_single(void *sel, u8 gid)
 {
 	u8 i;
-	char buf[100];
-	char *pos = buf;
-
-	for (i = 0; i < OPC_CH_LIST_LEN(global_op_class[gid]); i++)
-		pos += snprintf(pos, 100 - (pos - buf), " %u", OPC_CH_LIST_CH(global_op_class[gid], i));
 
-	RTW_PRINT_SEL(sel, "%5u %4s %7s%s\n"
+	RTW_PRINT_SEL(sel, "%5u %4s %7s"
 		, global_op_class[gid].class_id
 		, band_str(global_op_class[gid].band)
-		, opc_bw_str(global_op_class[gid].bw), buf);
+		, opc_bw_str(global_op_class[gid].bw));
+
+	for (i = 0; i < OPC_CH_LIST_LEN(global_op_class[gid]); i++)
+		_RTW_PRINT_SEL(sel, " %u", OPC_CH_LIST_CH(global_op_class[gid], i));
+
+	_RTW_PRINT_SEL(sel, "\n");
 }
 
 #ifdef CONFIG_RTW_DEBUG
@@ -1038,6 +1103,7 @@ static struct op_class_pref_t *opc_pref_alloc(u8 class_id)
 {
 	int i, j;
 	struct op_class_pref_t *opc_pref = NULL;
+	u8 ch_num;
 
 	for (i = 0; i < global_op_class_num; i++)
 		if (global_op_class[i].class_id == class_id)
@@ -1046,7 +1112,8 @@ static struct op_class_pref_t *opc_pref_alloc(u8 class_id)
 	if (i >= global_op_class_num)
 		goto exit;
 
-	opc_pref = rtw_zmalloc(sizeof(*opc_pref));
+	ch_num = OPC_CH_LIST_LEN(global_op_class[i]);
+	opc_pref = rtw_zmalloc(sizeof(*opc_pref) + (sizeof(struct op_ch_t) * ch_num));
 	if (!opc_pref)
 		goto exit;
 
@@ -1060,7 +1127,7 @@ static struct op_class_pref_t *opc_pref_alloc(u8 class_id)
 		opc_pref->chs[j].no_ir = 1;
 		opc_pref->chs[j].max_txpwr = UNSPECIFIED_MBM;
 	}
-	opc_pref->ch_num = OPC_CH_LIST_LEN(global_op_class[i]);
+	opc_pref->ch_num = ch_num;
 
 exit:
 	return opc_pref;
@@ -1068,7 +1135,7 @@ static struct op_class_pref_t *opc_pref_alloc(u8 class_id)
 
 static void opc_pref_free(struct op_class_pref_t *opc_pref)
 {
-	rtw_mfree(opc_pref, sizeof(*opc_pref));
+	rtw_mfree(opc_pref, sizeof(*opc_pref) + (sizeof(struct op_ch_t) * opc_pref->ch_num));
 }
 
 int op_class_pref_init(_adapter *adapter)
@@ -1183,7 +1250,7 @@ void op_class_pref_apply_regulatory(_adapter *adapter, u8 reason)
 		opc_pref = rfctl->spt_op_class_ch[i];
 
 		/* reset all channel */
-		for (j = 0; opc_pref->chs[j].ch != 0; j++) {
+		for (j = 0; j < opc_pref->ch_num; j++) {
 			if (reason >= REG_CHANGE)
 				opc_pref->chs[j].static_non_op = 1;
 			if (reason != REG_TXPWR_CHANGE)
@@ -1222,11 +1289,11 @@ void op_class_pref_apply_regulatory(_adapter *adapter, u8 reason)
 			continue;
 		}
 
-		if (rfctl->country_ent && !COUNTRY_CHPLAN_EN_11AC(rfctl->country_ent)
+		if (!RFCTL_REG_EN_11AC(rfctl)
 			&& (bw == CHANNEL_WIDTH_80 || bw == CHANNEL_WIDTH_160))
 			continue;
 
-		for (j = 0; opc_pref->chs[j].ch != 0; j++) {
+		for (j = 0; j < opc_pref->ch_num; j++) {
 			u8 *op_chs;
 			u8 op_ch_num;
 			u8 k, l;
@@ -1295,58 +1362,56 @@ static void dump_opc_pref_single(void *sel, struct op_class_pref_t *opc_pref, bo
 {
 	u8 i;
 	u8 ch_num = 0;
-	char buf[256];
-	char *pos = buf;
 
 	if (!show_snon_ocp && !opc_pref->op_ch_num)
 		return;
 	if (!show_no_ir && !opc_pref->ir_ch_num)
 		return;
 
-	for (i = 0; opc_pref->chs[i].ch != 0; i++) {
+	RTW_PRINT_SEL(sel, "%5u %4s %7s"
+		, opc_pref->class_id
+		, band_str(opc_pref->band)
+		, opc_bw_str(opc_pref->bw));
+	for (i = 0; i < opc_pref->ch_num; i++) {
 		if ((show_snon_ocp || !opc_pref->chs[i].static_non_op)
 			&& (show_no_ir || !opc_pref->chs[i].no_ir)
 		) {
 			if (detail)
-				pos += snprintf(pos, 256 - (pos - buf), " %4u", opc_pref->chs[i].ch);
+				_RTW_PRINT_SEL(sel, " %4u", opc_pref->chs[i].ch);
 			else
-				pos += snprintf(pos, 256 - (pos - buf), " %u", opc_pref->chs[i].ch);
+				_RTW_PRINT_SEL(sel, " %u", opc_pref->chs[i].ch);
 		}
 	}
-
-	RTW_PRINT_SEL(sel, "%5u %4s %7s%s\n"
-		, opc_pref->class_id
-		, band_str(opc_pref->band)
-		, opc_bw_str(opc_pref->bw), buf);
+	_RTW_PRINT_SEL(sel, "\n");
 
 	if (!detail)
 		return;
 
-	pos = buf;
-	for (i = 0; opc_pref->chs[i].ch != 0; i++) {
+	RTW_PRINT_SEL(sel, "                  ");
+	for (i = 0; i < opc_pref->ch_num; i++) {
 		if ((show_snon_ocp || !opc_pref->chs[i].static_non_op)
 			&& (show_no_ir || !opc_pref->chs[i].no_ir)
 		) {
-			pos += snprintf(pos, 256 - (pos - buf), "   %c%c"
+			_RTW_PRINT_SEL(sel, "   %c%c"
 				, opc_pref->chs[i].no_ir ? ' ' : 'I'
 				, opc_pref->chs[i].static_non_op ? ' ' : 'E'
 			);
 		}
 	}
-	RTW_PRINT_SEL(sel, "                  %s\n", buf);
+	_RTW_PRINT_SEL(sel, "\n");
 
-	pos = buf;
-	for (i = 0; opc_pref->chs[i].ch != 0; i++) {
+	RTW_PRINT_SEL(sel, "                  ");
+	for (i = 0; i < opc_pref->ch_num; i++) {
 		if ((show_snon_ocp || !opc_pref->chs[i].static_non_op)
 			&& (show_no_ir || !opc_pref->chs[i].no_ir)
 		) {
 			if (opc_pref->chs[i].max_txpwr == UNSPECIFIED_MBM)
-				pos += snprintf(pos, 256 - (pos - buf), "     ");
+				_RTW_PRINT_SEL(sel, "     ");
 			else
-				pos += snprintf(pos, 256 - (pos - buf), " %4d", opc_pref->chs[i].max_txpwr);
+				_RTW_PRINT_SEL(sel, " %4d", opc_pref->chs[i].max_txpwr);
 		}
 	}
-	RTW_PRINT_SEL(sel, "                  %s\n", buf);
+	_RTW_PRINT_SEL(sel, "\n");
 }
 
 void dump_cap_spt_op_class_ch(void *sel, struct rf_ctl_t *rfctl, bool detail)
@@ -1596,22 +1661,6 @@ void tx_path_nss_set_full_tx(enum bb_path txpath_nss[], u8 txpath_num_nss[], u8
 	}
 }
 
-const char *const _regd_str[] = {
-	"NONE",
-	"FCC",
-	"MKK",
-	"ETSI",
-	"IC",
-	"KCC",
-	"NCC",
-	"ACMA",
-	"CHILE",
-	"UKRAINE",
-	"MEXICO",
-	"CN",
-	"WW",
-};
-
 /*
 * input with txpwr value in unit of txpwr index
 * return string in length 6 at least (for -xx.xx)
@@ -1691,7 +1740,7 @@ void _dump_regd_exc_list(void *sel, struct rf_ctl_t *rfctl)
 	if (!rfctl->regd_exc_num)
 		goto exit;
 
-	RTW_PRINT_SEL(sel, "%-7s %-6s %-9s\n", "country", "domain", "regd_name");
+	RTW_PRINT_SEL(sel, "%-7s %-6s %-8s\n", "country", "domain", "lmt_name");
 
 	head = &rfctl->reg_exc_list;
 	cur = get_next(head);
@@ -1707,7 +1756,7 @@ void _dump_regd_exc_list(void *sel, struct rf_ctl_t *rfctl)
 			, has_country ? ent->country[0] : '0'
 			, has_country ? ent->country[1] : '0'
 			, ent->domain
-			, ent->regd_name
+			, ent->lmt_name
 		);
 	}
 
@@ -1724,12 +1773,12 @@ inline void dump_regd_exc_list(void *sel, struct rf_ctl_t *rfctl)
 	_exit_critical_mutex(&rfctl->txpwr_lmt_mutex, &irqL);
 }
 
-void rtw_regd_exc_add_with_nlen(struct rf_ctl_t *rfctl, const char *country, u8 domain, const char *regd_name, u32 nlen)
+void rtw_regd_exc_add_with_nlen(struct rf_ctl_t *rfctl, const char *country, u8 domain, const char *lmt_name, u32 nlen)
 {
 	struct regd_exc_ent *ent;
 	_irqL irqL;
 
-	if (!regd_name || !nlen) {
+	if (!lmt_name || !nlen) {
 		rtw_warn_on(1);
 		goto exit;
 	}
@@ -1742,7 +1791,7 @@ void rtw_regd_exc_add_with_nlen(struct rf_ctl_t *rfctl, const char *country, u8
 	if (country)
 		_rtw_memcpy(ent->country, country, 2);
 	ent->domain = domain;
-	_rtw_memcpy(ent->regd_name, regd_name, nlen);
+	_rtw_memcpy(ent->lmt_name, lmt_name, nlen);
 
 	_enter_critical_mutex(&rfctl->txpwr_lmt_mutex, &irqL);
 
@@ -1755,9 +1804,9 @@ void rtw_regd_exc_add_with_nlen(struct rf_ctl_t *rfctl, const char *country, u8
 	return;
 }
 
-inline void rtw_regd_exc_add(struct rf_ctl_t *rfctl, const char *country, u8 domain, const char *regd_name)
+inline void rtw_regd_exc_add(struct rf_ctl_t *rfctl, const char *country, u8 domain, const char *lmt_name)
 {
-	rtw_regd_exc_add_with_nlen(rfctl, country, domain, regd_name, strlen(regd_name));
+	rtw_regd_exc_add_with_nlen(rfctl, country, domain, lmt_name, strlen(lmt_name));
 }
 
 struct regd_exc_ent *_rtw_regd_exc_search(struct rf_ctl_t *rfctl, const char *country, u8 domain)
@@ -1830,7 +1879,7 @@ void rtw_regd_exc_list_free(struct rf_ctl_t *rfctl)
 		ent = LIST_CONTAINOR(cur, struct regd_exc_ent, list);
 		cur = get_next(cur);
 		rtw_list_delete(&ent->list);
-		rtw_mfree((u8 *)ent, sizeof(struct regd_exc_ent) + strlen(ent->regd_name) + 1);
+		rtw_mfree((u8 *)ent, sizeof(struct regd_exc_ent) + strlen(ent->lmt_name) + 1);
 	}
 	rfctl->regd_exc_num = 0;
 
@@ -1855,10 +1904,10 @@ void dump_txpwr_lmt(void *sel, _adapter *adapter)
 	_dump_regd_exc_list(sel, rfctl);
 	RTW_PRINT_SEL(sel, "\n");
 
-	if (!rfctl->txpwr_regd_num)
+	if (!rfctl->txpwr_lmt_num)
 		goto release_lock;
 
-	lmt_idx = rtw_malloc(sizeof(s8) * RF_PATH_MAX * rfctl->txpwr_regd_num);
+	lmt_idx = rtw_malloc(sizeof(s8) * RF_PATH_MAX * rfctl->txpwr_lmt_num);
 	if (!lmt_idx) {
 		RTW_ERR("%s alloc fail\n", __func__);
 		goto release_lock;
@@ -1978,16 +2027,16 @@ void dump_txpwr_lmt(void *sel, _adapter *adapter)
 						ent = LIST_CONTAINOR(cur, struct txpwr_lmt_ent, list);
 						cur = get_next(cur);
 
-						sprintf(fmt, "%%%zus%%s ", strlen(ent->regd_name) >= 6 ? 1 : 6 - strlen(ent->regd_name));
+						sprintf(fmt, "%%%zus%%s ", strlen(ent->name) >= 6 ? 1 : 6 - strlen(ent->name));
 						snprintf(tmp_str, TMP_STR_LEN, fmt
-							, strcmp(ent->regd_name, rfctl->regd_name) == 0 ? "*" : ""
-							, ent->regd_name);
+							, rtw_rfctl_is_current_txpwr_lmt(rfctl, ent->name) ? "*" : ""
+							, ent->name);
 						_RTW_PRINT_SEL(sel, "%s", tmp_str);
 					}
-					sprintf(fmt, "%%%zus%%s ", strlen(regd_str(TXPWR_LMT_WW)) >= 6 ? 1 : 6 - strlen(regd_str(TXPWR_LMT_WW)));
+					sprintf(fmt, "%%%zus%%s ", strlen(txpwr_lmt_str(TXPWR_LMT_WW)) >= 6 ? 1 : 6 - strlen(txpwr_lmt_str(TXPWR_LMT_WW)));
 					snprintf(tmp_str, TMP_STR_LEN, fmt
-						, strcmp(rfctl->regd_name, regd_str(TXPWR_LMT_WW)) == 0 ? "*" : ""
-						, regd_str(TXPWR_LMT_WW));
+						, rtw_rfctl_is_current_txpwr_lmt(rfctl, txpwr_lmt_str(TXPWR_LMT_WW)) ? "*" : ""
+						, txpwr_lmt_str(TXPWR_LMT_WW));
 					_RTW_PRINT_SEL(sel, "%s", tmp_str);
 
 					/* header for limit offset */
@@ -2001,10 +2050,10 @@ void dump_txpwr_lmt(void *sel, _adapter *adapter)
 							ent = LIST_CONTAINOR(cur, struct txpwr_lmt_ent, list);
 							cur = get_next(cur);
 							_RTW_PRINT_SEL(sel, "%3c "
-								, strcmp(ent->regd_name, rfctl->regd_name) == 0 ? rf_path_char(path) : ' ');
+								, rtw_rfctl_is_current_txpwr_lmt(rfctl, ent->name) ? rf_path_char(path) : ' ');
 						}
 						_RTW_PRINT_SEL(sel, "%3c "
-								, strcmp(rfctl->regd_name, regd_str(TXPWR_LMT_WW)) == 0 ? rf_path_char(path) : ' ');
+								, rtw_rfctl_is_current_txpwr_lmt(rfctl, txpwr_lmt_str(TXPWR_LMT_WW)) ? rf_path_char(path) : ' ');
 					}
 					_RTW_PRINT_SEL(sel, "\n");
 
@@ -2030,12 +2079,12 @@ void dump_txpwr_lmt(void *sel, _adapter *adapter)
 						while ((rtw_end_of_queue_search(head, cur)) == _FALSE) {
 							ent = LIST_CONTAINOR(cur, struct txpwr_lmt_ent, list);
 							cur = get_next(cur);
-							lmt = phy_get_txpwr_lmt(adapter, ent->regd_name, band, bw, tlrs, ntx_idx, ch, 0);
-							txpwr_idx_get_dbm_str(lmt, hal_spec->txgi_max, hal_spec->txgi_pdbm, strlen(ent->regd_name), tmp_str, TMP_STR_LEN);
+							lmt = phy_get_txpwr_lmt(adapter, ent->name, band, bw, tlrs, ntx_idx, ch, 0);
+							txpwr_idx_get_dbm_str(lmt, hal_spec->txgi_max, hal_spec->txgi_pdbm, strlen(ent->name), tmp_str, TMP_STR_LEN);
 							_RTW_PRINT_SEL(sel, "%s ", tmp_str);
 						}
-						lmt = phy_get_txpwr_lmt(adapter, regd_str(TXPWR_LMT_WW), band, bw, tlrs, ntx_idx, ch, 0);
-						txpwr_idx_get_dbm_str(lmt, hal_spec->txgi_max, hal_spec->txgi_pdbm, strlen(regd_str(TXPWR_LMT_WW)), tmp_str, TMP_STR_LEN);
+						lmt = phy_get_txpwr_lmt(adapter, txpwr_lmt_str(TXPWR_LMT_WW), band, bw, tlrs, ntx_idx, ch, 0);
+						txpwr_idx_get_dbm_str(lmt, hal_spec->txgi_max, hal_spec->txgi_pdbm, strlen(txpwr_lmt_str(TXPWR_LMT_WW)), tmp_str, TMP_STR_LEN);
 						_RTW_PRINT_SEL(sel, "%s ", tmp_str);
 
 						/* dump limit offset of each path */
@@ -2052,7 +2101,7 @@ void dump_txpwr_lmt(void *sel, _adapter *adapter)
 							while ((rtw_end_of_queue_search(head, cur)) == _FALSE) {
 								ent = LIST_CONTAINOR(cur, struct txpwr_lmt_ent, list);
 								cur = get_next(cur);
-								lmt_offset = phy_get_txpwr_lmt_diff(adapter, ent->regd_name, band, bw, path, rs, tlrs, ntx_idx, ch, 0);
+								lmt_offset = phy_get_txpwr_lmt_diff(adapter, ent->name, band, bw, path, rs, tlrs, ntx_idx, ch, 0);
 								if (lmt_offset == hal_spec->txgi_max) {
 									*(lmt_idx + i * RF_PATH_MAX + path) = hal_spec->txgi_max;
 									_RTW_PRINT_SEL(sel, "%3s ", "NA");
@@ -2062,7 +2111,7 @@ void dump_txpwr_lmt(void *sel, _adapter *adapter)
 								}
 								i++;
 							}
-							lmt_offset = phy_get_txpwr_lmt_diff(adapter, regd_str(TXPWR_LMT_WW), band, bw, path, rs, tlrs, ntx_idx, ch, 0);
+							lmt_offset = phy_get_txpwr_lmt_diff(adapter, txpwr_lmt_str(TXPWR_LMT_WW), band, bw, path, rs, tlrs, ntx_idx, ch, 0);
 							if (lmt_offset == hal_spec->txgi_max)
 								_RTW_PRINT_SEL(sel, "%3s ", "NA");
 							else
@@ -2072,7 +2121,7 @@ void dump_txpwr_lmt(void *sel, _adapter *adapter)
 
 						/* compare limit_idx of each path, print 'x' when mismatch */
 						if (rfpath_num > 1) {
-							for (i = 0; i < rfctl->txpwr_regd_num; i++) {
+							for (i = 0; i < rfctl->txpwr_lmt_num; i++) {
 								for (path = 0; path < RF_PATH_MAX; path++) {
 									if (path >= rfpath_num)
 										break;
@@ -2095,14 +2144,14 @@ void dump_txpwr_lmt(void *sel, _adapter *adapter)
 	} /* loop for bands */
 
 	if (lmt_idx)
-		rtw_mfree(lmt_idx, sizeof(s8) * RF_PATH_MAX * rfctl->txpwr_regd_num);
+		rtw_mfree(lmt_idx, sizeof(s8) * RF_PATH_MAX * rfctl->txpwr_lmt_num);
 
 release_lock:
 	_exit_critical_mutex(&rfctl->txpwr_lmt_mutex, &irqL);
 }
 
 /* search matcing first, if not found, alloc one */
-void rtw_txpwr_lmt_add_with_nlen(struct rf_ctl_t *rfctl, const char *regd_name, u32 nlen
+void rtw_txpwr_lmt_add_with_nlen(struct rf_ctl_t *rfctl, const char *lmt_name, u32 nlen
 	, u8 band, u8 bw, u8 tlrs, u8 ntx_idx, u8 ch_idx, s8 lmt)
 {
 	struct hal_spec_t *hal_spec = GET_HAL_SPEC(dvobj_get_primary_adapter(rfctl_to_dvobj(rfctl)));
@@ -2111,7 +2160,7 @@ void rtw_txpwr_lmt_add_with_nlen(struct rf_ctl_t *rfctl, const char *regd_name,
 	_list *cur, *head;
 	s8 pre_lmt;
 
-	if (!regd_name || !nlen) {
+	if (!lmt_name || !nlen) {
 		rtw_warn_on(1);
 		goto exit;
 	}
@@ -2125,8 +2174,8 @@ void rtw_txpwr_lmt_add_with_nlen(struct rf_ctl_t *rfctl, const char *regd_name,
 		ent = LIST_CONTAINOR(cur, struct txpwr_lmt_ent, list);
 		cur = get_next(cur);
 
-		if (strlen(ent->regd_name) == nlen
-			&& _rtw_memcmp(ent->regd_name, regd_name, nlen) == _TRUE)
+		if (strlen(ent->name) == nlen
+			&& _rtw_memcmp(ent->name, lmt_name, nlen) == _TRUE)
 			goto chk_lmt_val;
 	}
 
@@ -2136,7 +2185,7 @@ void rtw_txpwr_lmt_add_with_nlen(struct rf_ctl_t *rfctl, const char *regd_name,
 		goto release_lock;
 
 	_rtw_init_listhead(&ent->list);
-	_rtw_memcpy(ent->regd_name, regd_name, nlen);
+	_rtw_memcpy(ent->name, lmt_name, nlen);
 	{
 		u8 j, k, l, m;
 
@@ -2155,7 +2204,7 @@ void rtw_txpwr_lmt_add_with_nlen(struct rf_ctl_t *rfctl, const char *regd_name,
 	}
 
 	rtw_list_insert_tail(&ent->list, &rfctl->txpwr_lmt_list);
-	rfctl->txpwr_regd_num++;
+	rfctl->txpwr_lmt_num++;
 
 chk_lmt_val:
 	if (band == BAND_ON_2_4G)
@@ -2169,7 +2218,7 @@ void rtw_txpwr_lmt_add_with_nlen(struct rf_ctl_t *rfctl, const char *regd_name,
 
 	if (pre_lmt != hal_spec->txgi_max)
 		RTW_PRINT("duplicate txpwr_lmt for [%s][%s][%s][%s][%uT][%d]\n"
-			, regd_name, band_str(band), ch_width_str(bw), txpwr_lmt_rs_str(tlrs), ntx_idx + 1
+			, lmt_name, band_str(band), ch_width_str(bw), txpwr_lmt_rs_str(tlrs), ntx_idx + 1
 			, band == BAND_ON_2_4G ? ch_idx + 1 : center_ch_5g_all[ch_idx]);
 
 	lmt = rtw_min(pre_lmt, lmt);
@@ -2182,7 +2231,7 @@ void rtw_txpwr_lmt_add_with_nlen(struct rf_ctl_t *rfctl, const char *regd_name,
 
 	if (0)
 		RTW_PRINT("%s, %4s, %6s, %7s, %uT, ch%3d = %d\n"
-			, regd_name, band_str(band), ch_width_str(bw), txpwr_lmt_rs_str(tlrs), ntx_idx + 1
+			, lmt_name, band_str(band), ch_width_str(bw), txpwr_lmt_rs_str(tlrs), ntx_idx + 1
 			, band == BAND_ON_2_4G ? ch_idx + 1 : center_ch_5g_all[ch_idx]
 			, lmt);
 
@@ -2193,14 +2242,14 @@ void rtw_txpwr_lmt_add_with_nlen(struct rf_ctl_t *rfctl, const char *regd_name,
 	return;
 }
 
-inline void rtw_txpwr_lmt_add(struct rf_ctl_t *rfctl, const char *regd_name
+inline void rtw_txpwr_lmt_add(struct rf_ctl_t *rfctl, const char *lmt_name
 	, u8 band, u8 bw, u8 tlrs, u8 ntx_idx, u8 ch_idx, s8 lmt)
 {
-	rtw_txpwr_lmt_add_with_nlen(rfctl, regd_name, strlen(regd_name)
+	rtw_txpwr_lmt_add_with_nlen(rfctl, lmt_name, strlen(lmt_name)
 		, band, bw, tlrs, ntx_idx, ch_idx, lmt);
 }
 
-struct txpwr_lmt_ent *_rtw_txpwr_lmt_get_by_name(struct rf_ctl_t *rfctl, const char *regd_name)
+struct txpwr_lmt_ent *_rtw_txpwr_lmt_get_by_name(struct rf_ctl_t *rfctl, const char *lmt_name)
 {
 	struct txpwr_lmt_ent *ent;
 	_list *cur, *head;
@@ -2213,7 +2262,7 @@ struct txpwr_lmt_ent *_rtw_txpwr_lmt_get_by_name(struct rf_ctl_t *rfctl, const c
 		ent = LIST_CONTAINOR(cur, struct txpwr_lmt_ent, list);
 		cur = get_next(cur);
 
-		if (strcmp(ent->regd_name, regd_name) == 0) {
+		if (strcmp(ent->name, lmt_name) == 0) {
 			found = 1;
 			break;
 		}
@@ -2224,13 +2273,13 @@ struct txpwr_lmt_ent *_rtw_txpwr_lmt_get_by_name(struct rf_ctl_t *rfctl, const c
 	return NULL;
 }
 
-inline struct txpwr_lmt_ent *rtw_txpwr_lmt_get_by_name(struct rf_ctl_t *rfctl, const char *regd_name)
+inline struct txpwr_lmt_ent *rtw_txpwr_lmt_get_by_name(struct rf_ctl_t *rfctl, const char *lmt_name)
 {
 	struct txpwr_lmt_ent *ent;
 	_irqL irqL;
 
 	_enter_critical_mutex(&rfctl->txpwr_lmt_mutex, &irqL);
-	ent = _rtw_txpwr_lmt_get_by_name(rfctl, regd_name);
+	ent = _rtw_txpwr_lmt_get_by_name(rfctl, lmt_name);
 	_exit_critical_mutex(&rfctl->txpwr_lmt_mutex, &irqL);
 
 	return ent;
@@ -2241,6 +2290,7 @@ void rtw_txpwr_lmt_list_free(struct rf_ctl_t *rfctl)
 	struct txpwr_lmt_ent *ent;
 	_irqL irqL;
 	_list *cur, *head;
+	int band;
 
 	_enter_critical_mutex(&rfctl->txpwr_lmt_mutex, &irqL);
 
@@ -2250,12 +2300,13 @@ void rtw_txpwr_lmt_list_free(struct rf_ctl_t *rfctl)
 	while ((rtw_end_of_queue_search(head, cur)) == _FALSE) {
 		ent = LIST_CONTAINOR(cur, struct txpwr_lmt_ent, list);
 		cur = get_next(cur);
-		if (ent->regd_name == rfctl->regd_name)
-			rfctl->regd_name = regd_str(TXPWR_LMT_NONE);
 		rtw_list_delete(&ent->list);
-		rtw_vmfree((u8 *)ent, sizeof(struct txpwr_lmt_ent) + strlen(ent->regd_name) + 1);
+		rtw_vmfree((u8 *)ent, sizeof(struct txpwr_lmt_ent) + strlen(ent->name) + 1);
 	}
-	rfctl->txpwr_regd_num = 0;
+	rfctl->txpwr_lmt_num = 0;
+
+	for (band = 0; band < BAND_MAX; band++)
+		rfctl->txpwr_lmt_name[band] = NULL;
 
 	_exit_critical_mutex(&rfctl->txpwr_lmt_mutex, &irqL);
 }
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/core/rtw_rm.c b/drivers/net/wireless/rockchip_wlan/rtl8821cs/core/rtw_rm.c
index a71a4ebffecd..de627e822221 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/core/rtw_rm.c
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/core/rtw_rm.c
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017 Realtek Corporation.
@@ -37,6 +36,20 @@ u8 rm_post_event_hdl(_adapter *padapter, u8 *pbuf)
 	return H2C_SUCCESS;
 }
 
+void rm_update_cap(u8 *frame_head, _adapter *pa, u32 pktlen, int offset)
+{
+#ifdef CONFIG_RTW_80211K
+	u8 *res;
+	sint len;
+
+	res = rtw_get_ie(frame_head + offset, _EID_RRM_EN_CAP_IE_, &len,
+			 pktlen - offset);
+	if (res != NULL)
+		_rtw_memcpy((void *)pa->rmpriv.rm_en_cap_def, (res + 2),
+			    MIN(len, sizeof(pa->rmpriv.rm_en_cap_def)));
+#endif
+}
+
 #ifdef CONFIG_RTW_80211K
 struct cmd_meas_type_ {
 	u8 id;
@@ -529,13 +542,13 @@ static int rm_parse_bcn_req_s_elem(struct rm_obj *prm, u8 *pbody, int req_len)
 			RTW_INFO("DBG set ssid to %s\n",DBG_BCN_REQ_SSID_NAME);
 			i = strlen(DBG_BCN_REQ_SSID_NAME);
 			prm->q.opt.bcn.ssid.SsidLength = i;
-			_rtw_memcpy(&(prm->q.opt.bcn.ssid.Ssid),
-				DBG_BCN_REQ_SSID_NAME, i);
+			_rtw_memcpy(&(prm->q.opt.bcn.ssid.Ssid), DBG_BCN_REQ_SSID_NAME,
+				MIN(i, sizeof(prm->q.opt.bcn.ssid.Ssid)-1));
 
 #else /* original */
 			prm->q.opt.bcn.ssid.SsidLength = pbody[p+1];
-			_rtw_memcpy(&(prm->q.opt.bcn.ssid.Ssid),
-				&pbody[p+2], pbody[p+1]);
+			_rtw_memcpy(&(prm->q.opt.bcn.ssid.Ssid), &pbody[p+2],
+				MIN(pbody[p+1], sizeof(prm->q.opt.bcn.ssid.Ssid)-1));
 #endif
 #endif
 			RTW_INFO("RM: bcn_req_ssid=%s\n",
@@ -783,16 +796,36 @@ int rm_recv_radio_mens_req(_adapter *padapter,
 	return _SUCCESS;
 }
 
+static u8 cnt_rm_report_ies(struct rm_obj *prm, u8 eid, u8 *buf, u32 buf_len)
+{
+	u8 *pos = buf;
+	u8 id, len, cnt = 0;
+
+	while (pos - buf + 1 < buf_len) {
+		id = *pos;
+		len = *(pos + 1);
+
+		if (id == eid)
+			cnt++;
+			/*indicate_beacon_report(prm->psta->cmn.mac_addr,*/
+			/*1, 2 + len, pos);*/
+
+		pos += (2 + len);
+	}
+	return cnt;
+}
+
 /* receive measurement report */
 int rm_recv_radio_mens_rep(_adapter *padapter,
 	union recv_frame *precv_frame, struct sta_info *psta)
 {
-	int len, ret = _FALSE;
+	u32 len;
 	struct rm_obj *prm;
 	u32 rmid;
 	u8 *pdiag_body = (u8 *)(precv_frame->u.hdr.rx_data +
 		sizeof(struct rtw_ieee80211_hdr_3addr));
 	u8 *pmeas_body = &pdiag_body[3];
+	u8 bcn_rpt_cnt;
 
 
 	rmid = psta->cmn.aid << 16
@@ -834,11 +867,17 @@ int rm_recv_radio_mens_rep(_adapter *padapter,
 	/* report to upper via ioctl */
 	if ((prm->from_ioctl == true) &&
 		prm->q.m_type == bcn_req) {
-		len = pmeas_body[1] + 2; /* 2 : EID(1B)  length(1B) */
-		indicate_beacon_report(prm->psta->cmn.mac_addr,
-			1, len, pmeas_body);
+		len = precv_frame->u.hdr.len -
+				sizeof(struct rtw_ieee80211_hdr_3addr) -
+				3; /* Category + Action code + token */
+
+		bcn_rpt_cnt = cnt_rm_report_ies(prm, _MEAS_RSP_IE_,
+						pmeas_body, len);
+		if (bcn_rpt_cnt > 0)
+			indicate_beacon_report(prm->psta->cmn.mac_addr,
+					       bcn_rpt_cnt, len, pmeas_body);
 	}
-	return ret;
+	return _TRUE;
 }
 
 /* receive link measurement request */
@@ -2195,8 +2234,9 @@ void rtw_ap_parse_sta_rm_en_cap(_adapter *padapter,
 	if (elem->rm_en_cap) {
 		RTW_INFO("assoc.rm_en_cap="RM_CAP_FMT"\n",
 			RM_CAP_ARG(elem->rm_en_cap));
-		_rtw_memcpy(psta->rm_en_cap,
-			(elem->rm_en_cap), elem->rm_en_cap_len);
+
+		_rtw_memcpy(psta->rm_en_cap, (elem->rm_en_cap),
+			MIN(elem->rm_en_cap_len, sizeof(psta->rm_en_cap)));
 	}
 }
 
@@ -2204,7 +2244,8 @@ void RM_IE_handler(_adapter *padapter, PNDIS_802_11_VARIABLE_IEs pIE)
 {
 	int i;
 
-	_rtw_memcpy(&padapter->rmpriv.rm_en_cap_assoc, pIE->data, pIE->Length);
+	_rtw_memcpy(&padapter->rmpriv.rm_en_cap_assoc, pIE->data,
+		    MIN(pIE->Length, sizeof(padapter->rmpriv.rm_en_cap_assoc)));
 	RTW_INFO("assoc.rm_en_cap="RM_CAP_FMT"\n", RM_CAP_ARG(pIE->data));
 }
 
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/core/rtw_rm_fsm.c b/drivers/net/wireless/rockchip_wlan/rtl8821cs/core/rtw_rm_fsm.c
index ce3f745cc0c0..244b799a2f1a 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/core/rtw_rm_fsm.c
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/core/rtw_rm_fsm.c
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/core/rtw_rm_util.c b/drivers/net/wireless/rockchip_wlan/rtl8821cs/core/rtw_rm_util.c
index 04fe99ba8e6c..1df0110c8d7c 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/core/rtw_rm_util.c
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/core/rtw_rm_util.c
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2019 Realtek Corporation.
@@ -147,48 +146,24 @@ u8 rm_get_bcn_rcpi(struct rm_obj *prm, struct wlan_network *pnetwork)
 
 u8 rm_get_frame_rsni(struct rm_obj *prm, union recv_frame *pframe)
 {
-	int i;
-	u8 val8, snr, rx_num;
-	struct hal_spec_t *hal_spec = GET_HAL_SPEC(prm->psta->padapter);
-
-	if (IS_CCK_RATE((hw_rate_to_m_rate(pframe->u.hdr.attrib.data_rate))))
-		val8 = 255;
-	else {
-		snr = rx_num = 0;
-		for (i = 0; i < hal_spec->rf_reg_path_num; i++) {
-			if (GET_HAL_RX_PATH_BMP(prm->psta->padapter) & BIT(i)) {
-				snr += pframe->u.hdr.attrib.phy_info.rx_snr[i];
-				rx_num++;
-			}
-		}
-		snr = snr / rx_num;
-		val8 = (u8)(snr + 10)*2;
-	}
-	return val8;
+	s8 pwr;
+	u8 ch;
+
+	pwr = pframe->u.hdr.attrib.phy_info.recv_signal_power;
+	ch = pframe->u.hdr.attrib.phy_info.channel;
+
+	return rtw_acs_get_rsni(prm->psta->padapter, pwr, ch);
 }
 
 u8 rm_get_bcn_rsni(struct rm_obj *prm, struct wlan_network *pnetwork)
 {
-	int i;
-	u8 val8, snr, rx_num;
-	struct hal_spec_t *hal_spec = GET_HAL_SPEC(prm->psta->padapter);
-
-	if (pnetwork->network.PhyInfo.is_cck_rate) {
-		/* current HW doesn't have CCK RSNI */
-		/* 255 indicates RSNI is unavailable */
-		val8 = 255;
-	} else {
-		snr = rx_num = 0;
-		for (i = 0; i < hal_spec->rf_reg_path_num; i++) {
-			if (GET_HAL_RX_PATH_BMP(prm->psta->padapter) & BIT(i)) {
-				snr += pnetwork->network.PhyInfo.rx_snr[i];
-				rx_num++;
-			}
-		}
-		snr = snr / rx_num;
-		val8 = (u8)(snr + 10)*2;
-	}
-	return val8;
+	s8 pwr;
+	u8 ch;
+
+	pwr = (u8)pnetwork->network.Rssi;
+	ch = pnetwork->network.Configuration.DSConfig;
+
+	return rtw_acs_get_rsni(prm->psta->padapter, pwr, ch);
 }
 
 /* output: pwr (unit dBm) */
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/core/rtw_roch.c b/drivers/net/wireless/rockchip_wlan/rtl8821cs/core/rtw_roch.c
index e4d7403b44fd..2674fe654b00 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/core/rtw_roch.c
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/core/rtw_roch.c
@@ -1,592 +1,591 @@
-/* SPDX-License-Identifier: GPL-2.0 */
-/******************************************************************************
- *
- * Copyright(c) 2007 - 2020 Realtek Corporation.
- *
- * This program is free software; you can redistribute it and/or modify it
- * under the terms of version 2 of the GNU General Public License as
- * published by the Free Software Foundation.
- *
- * This program is distributed in the hope that it will be useful, but WITHOUT
- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
- * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for
- * more details.
- *
- *****************************************************************************/
-
-#include <drv_types.h>
-
-#ifdef CONFIG_IOCTL_CFG80211
-u8 rtw_roch_stay_in_cur_chan(_adapter *padapter)
-{
-	int i;
-	_adapter *iface;
-	struct mlme_priv *pmlmepriv;
-	struct dvobj_priv *dvobj = adapter_to_dvobj(padapter);
-	u8 rst = _FALSE;
-
-	for (i = 0; i < dvobj->iface_nums; i++) {
-		iface = dvobj->padapters[i];
-		if (iface) {
-			pmlmepriv = &iface->mlmepriv;
-
-			if (check_fwstate(pmlmepriv, WIFI_UNDER_LINKING | WIFI_UNDER_WPS | WIFI_UNDER_KEY_HANDSHAKE) == _TRUE) {
-				RTW_INFO(ADPT_FMT"- WIFI_UNDER_LINKING |WIFI_UNDER_WPS | WIFI_UNDER_KEY_HANDSHAKE (mlme state:0x%x)\n",
-						ADPT_ARG(iface), get_fwstate(&iface->mlmepriv));
-				rst = _TRUE;
-				break;
-			}
-			#ifdef CONFIG_AP_MODE
-			if (MLME_IS_AP(iface) || MLME_IS_MESH(iface)) {
-				if (rtw_ap_sta_states_check(iface) == _TRUE) {
-					rst = _TRUE;
-					break;
-				}
-			}
-			#endif
-		}
-	}
-
-	return rst;
-}
-
-static int rtw_ro_ch_handler(_adapter *adapter, u8 *buf)
-{
-	int ret = H2C_SUCCESS;
-	struct rtw_roch_parm *roch_parm = (struct rtw_roch_parm *)buf;
-	struct rtw_wdev_priv *pwdev_priv = adapter_wdev_data(adapter);
-	struct roch_info *prochinfo = &adapter->rochinfo;
-#ifdef CONFIG_CONCURRENT_MODE
-	struct mlme_ext_priv *pmlmeext = &adapter->mlmeextpriv;
-#endif
-	u8 ready_on_channel = _FALSE;
-	u8 remain_ch;
-	unsigned int duration;
-
-	_enter_critical_mutex(&pwdev_priv->roch_mutex, NULL);
-
-	if (rtw_cfg80211_get_is_roch(adapter) != _TRUE)
-		goto exit;
-
-	remain_ch = (u8)ieee80211_frequency_to_channel(roch_parm->ch.center_freq);
-	duration = roch_parm->duration;
-
-	RTW_INFO(FUNC_ADPT_FMT" ch:%u duration:%d, cookie:0x%llx\n"
-		, FUNC_ADPT_ARG(adapter), remain_ch, roch_parm->duration, roch_parm->cookie);
-
-	if (roch_parm->wdev && roch_parm->cookie) {
-		if (prochinfo->ro_ch_wdev != roch_parm->wdev) {
-			RTW_WARN(FUNC_ADPT_FMT" ongoing wdev:%p, wdev:%p\n"
-				, FUNC_ADPT_ARG(adapter), prochinfo->ro_ch_wdev, roch_parm->wdev);
-			rtw_warn_on(1);
-		}
-
-		if (prochinfo->remain_on_ch_cookie != roch_parm->cookie) {
-			RTW_WARN(FUNC_ADPT_FMT" ongoing cookie:0x%llx, cookie:0x%llx\n"
-				, FUNC_ADPT_ARG(adapter), prochinfo->remain_on_ch_cookie, roch_parm->cookie);
-			rtw_warn_on(1);
-		}
-	}
-
-	if (rtw_roch_stay_in_cur_chan(adapter) == _TRUE) {
-		remain_ch = rtw_mi_get_union_chan(adapter);
-		RTW_INFO(FUNC_ADPT_FMT" stay in union ch:%d\n", FUNC_ADPT_ARG(adapter), remain_ch);
-	}
-
-	#ifdef CONFIG_CONCURRENT_MODE
-	if (rtw_mi_check_status(adapter, MI_LINKED) && (0 != rtw_mi_get_union_chan(adapter))) {
-		if ((remain_ch != rtw_mi_get_union_chan(adapter)) && !check_fwstate(&adapter->mlmepriv, WIFI_ASOC_STATE)) {
-			if (remain_ch != pmlmeext->cur_channel
-				#ifdef RTW_ROCH_BACK_OP
-				|| ATOMIC_READ(&pwdev_priv->switch_ch_to) == 1
-				#endif
-			) {
-				rtw_leave_opch(adapter);
-
-				#ifdef RTW_ROCH_BACK_OP
-				RTW_INFO("%s, set switch ch timer, duration=%d\n", __func__, prochinfo->max_away_dur);
-				ATOMIC_SET(&pwdev_priv->switch_ch_to, 0);
-				/* remain_ch is not same as union channel. duration is max_away_dur to
-				 * back to AP's channel.
-				 */
-				_set_timer(&prochinfo->ap_roch_ch_switch_timer, prochinfo->max_away_dur);
-				#endif
-			}
-		}
-		ready_on_channel = _TRUE;
-	} else
-	#endif /* CONFIG_CONCURRENT_MODE */
-	{
-		if (remain_ch != rtw_get_oper_ch(adapter))
-			ready_on_channel = _TRUE;
-	}
-
-	if (ready_on_channel == _TRUE) {
-		#ifndef RTW_SINGLE_WIPHY
-		if (!check_fwstate(&adapter->mlmepriv, WIFI_ASOC_STATE))
-		#endif
-		{
-			#ifdef CONFIG_CONCURRENT_MODE
-			if (rtw_get_oper_ch(adapter) != remain_ch)
-			#endif
-			{
-				/* if (!padapter->mlmepriv.LinkDetectInfo.bBusyTraffic) */
-				set_channel_bwmode(adapter, remain_ch, HAL_PRIME_CHNL_OFFSET_DONT_CARE, CHANNEL_WIDTH_20);
-			}
-		}
-	}
-
-	#ifdef CONFIG_BT_COEXIST
-	rtw_btcoex_ScanNotify(adapter, _TRUE);
-	#endif
-
-	RTW_INFO("%s, set ro ch timer, duration=%d\n", __func__, duration);
-	_set_timer(&prochinfo->remain_on_ch_timer, duration);
-
-exit:
-	_exit_critical_mutex(&pwdev_priv->roch_mutex, NULL);
-
-	return ret;
-}
-
-static int rtw_cancel_ro_ch_handler(_adapter *padapter, u8 *buf)
-{
-	int ret = H2C_SUCCESS;
-	struct rtw_roch_parm *roch_parm = (struct rtw_roch_parm *)buf;
-	struct rtw_wdev_priv *pwdev_priv = adapter_wdev_data(padapter);
-	struct roch_info *prochinfo = &padapter->rochinfo;
-	struct wireless_dev *wdev;
-#ifdef CONFIG_P2P
-	struct wifidirect_info *pwdinfo = &padapter->wdinfo;
-#endif
-	u8 ch, bw, offset;
-
-	_enter_critical_mutex(&pwdev_priv->roch_mutex, NULL);
-
-	if (rtw_cfg80211_get_is_roch(padapter) != _TRUE)
-		goto exit;
-
-	if (roch_parm->wdev && roch_parm->cookie) {
-		if (prochinfo->ro_ch_wdev != roch_parm->wdev) {
-			RTW_WARN(FUNC_ADPT_FMT" ongoing wdev:%p, wdev:%p\n"
-				, FUNC_ADPT_ARG(padapter), prochinfo->ro_ch_wdev, roch_parm->wdev);
-			rtw_warn_on(1);
-		}
-
-		if (prochinfo->remain_on_ch_cookie != roch_parm->cookie) {
-			RTW_WARN(FUNC_ADPT_FMT" ongoing cookie:0x%llx, cookie:0x%llx\n"
-				, FUNC_ADPT_ARG(padapter), prochinfo->remain_on_ch_cookie, roch_parm->cookie);
-			rtw_warn_on(1);
-		}
-	}
-
-#if defined(RTW_ROCH_BACK_OP) && defined(CONFIG_CONCURRENT_MODE)
-	_cancel_timer_ex(&prochinfo->ap_roch_ch_switch_timer);
-	ATOMIC_SET(&pwdev_priv->switch_ch_to, 1);
-#endif
-
-	if (rtw_mi_get_ch_setting_union(padapter, &ch, &bw, &offset) != 0) {
-		if (0)
-			RTW_INFO(FUNC_ADPT_FMT" back to linked/linking union - ch:%u, bw:%u, offset:%u\n",
-				 FUNC_ADPT_ARG(padapter), ch, bw, offset);
-#ifdef CONFIG_P2P
-	} else if (adapter_wdev_data(padapter)->p2p_enabled && pwdinfo->listen_channel) {
-		ch = pwdinfo->listen_channel;
-		bw = CHANNEL_WIDTH_20;
-		offset = HAL_PRIME_CHNL_OFFSET_DONT_CARE;
-		if (0)
-			RTW_INFO(FUNC_ADPT_FMT" back to listen ch - ch:%u, bw:%u, offset:%u\n",
-				 FUNC_ADPT_ARG(padapter), ch, bw, offset);
-#endif
-	} else {
-		ch = prochinfo->restore_channel;
-		bw = CHANNEL_WIDTH_20;
-		offset = HAL_PRIME_CHNL_OFFSET_DONT_CARE;
-		if (0)
-			RTW_INFO(FUNC_ADPT_FMT" back to restore ch - ch:%u, bw:%u, offset:%u\n",
-				 FUNC_ADPT_ARG(padapter), ch, bw, offset);
-	}
-
-	set_channel_bwmode(padapter, ch, offset, bw);
-	rtw_back_opch(padapter);
-#ifdef CONFIG_P2P
-	rtw_p2p_set_state(pwdinfo, rtw_p2p_pre_state(pwdinfo));
-#ifdef CONFIG_DEBUG_CFG80211
-	RTW_INFO("%s, role=%d, p2p_state=%d\n", __func__, rtw_p2p_role(pwdinfo), rtw_p2p_state(pwdinfo));
-#endif
-#endif
-
-	wdev = prochinfo->ro_ch_wdev;
-
-	rtw_cfg80211_set_is_roch(padapter, _FALSE);
-	prochinfo->ro_ch_wdev = NULL;
-	rtw_cfg80211_set_last_ro_ch_time(padapter);
-
-	rtw_cfg80211_remain_on_channel_expired(wdev
-		, prochinfo->remain_on_ch_cookie
-		, &prochinfo->remain_on_ch_channel
-		, prochinfo->remain_on_ch_type, GFP_KERNEL);
-
-	RTW_INFO("cfg80211_remain_on_channel_expired cookie:0x%llx\n"
-		, prochinfo->remain_on_ch_cookie);
-
-#ifdef CONFIG_BT_COEXIST
-	rtw_btcoex_ScanNotify(padapter, _FALSE);
-#endif
-
-exit:
-	_exit_critical_mutex(&pwdev_priv->roch_mutex, NULL);
-
-	return ret;
-}
-
-static void rtw_ro_ch_timer_process(void *FunctionContext)
-{
-	_adapter *adapter = (_adapter *)FunctionContext;
-
-	rtw_cancel_roch_cmd(adapter, 0, NULL, 0);
-}
-#endif /* CONFIG_IOCTL_CFG80211 */
-
-#if (defined(CONFIG_P2P) && defined(CONFIG_CONCURRENT_MODE)) || defined(CONFIG_IOCTL_CFG80211)
-s32 rtw_roch_wk_hdl(_adapter *padapter, int intCmdType, u8 *buf)
-{
-	int ret = H2C_SUCCESS;
-
-	switch (intCmdType) {
-
-#ifdef CONFIG_IOCTL_CFG80211
-	case ROCH_RO_CH_WK:
-		ret = rtw_ro_ch_handler(padapter, buf);
-		break;
-	case ROCH_CANCEL_RO_CH_WK:
-		ret = rtw_cancel_ro_ch_handler(padapter, buf);
-		break;
-#endif
-
-#ifdef CONFIG_CONCURRENT_MODE
-	case ROCH_AP_ROCH_CH_SWITCH_PROCESS_WK:
-		rtw_concurrent_handler(padapter);
-		break;
-#endif
-
-	default:
-		rtw_warn_on(1);
-		break;
-	}
-
-	return ret;
-}
-
-static int get_roch_parm_size(struct rtw_roch_parm *roch_parm)
-{
-#ifdef CONFIG_IOCTL_CFG80211
-	return (roch_parm ? sizeof(*roch_parm) : 0);
-#else
-	rtw_warn_on(roch_parm);
-	return 0;
-#endif
-}
-
-u8 rtw_roch_wk_cmd(_adapter *padapter, int intCmdType, struct rtw_roch_parm *roch_parm, u8 flags)
-{
-	struct cmd_obj	*ph2c = NULL;
-	struct drvextra_cmd_parm	*pdrvextra_cmd_parm = NULL;
-	struct cmd_priv	*pcmdpriv = &padapter->cmdpriv;
-	struct submit_ctx sctx;
-	u8	res = _SUCCESS;
-
-	if (flags & RTW_CMDF_DIRECTLY) {
-		/* no need to enqueue, do the cmd hdl directly and free cmd parameter */
-		if (H2C_SUCCESS != rtw_roch_wk_hdl(padapter, intCmdType, (u8 *)roch_parm))
-			res = _FAIL;
-		goto free_parm;
-	} else {
-		ph2c = (struct cmd_obj *)rtw_zmalloc(sizeof(struct cmd_obj));
-		if (!ph2c) {
-			res = _FAIL;
-			goto free_parm;
-		}
-
-		pdrvextra_cmd_parm = (struct drvextra_cmd_parm *)rtw_zmalloc(sizeof(struct drvextra_cmd_parm));
-		if (!pdrvextra_cmd_parm) {
-			res = _FAIL;
-			goto free_parm;
-		}
-
-		pdrvextra_cmd_parm->ec_id = ROCH_WK_CID;
-		pdrvextra_cmd_parm->type = intCmdType;
-		pdrvextra_cmd_parm->size = get_roch_parm_size(roch_parm);
-		pdrvextra_cmd_parm->pbuf = (u8 *)roch_parm;
-
-		init_h2fwcmd_w_parm_no_rsp(ph2c, pdrvextra_cmd_parm, CMD_SET_DRV_EXTRA);
-
-		if (flags & RTW_CMDF_WAIT_ACK) {
-			ph2c->sctx = &sctx;
-			rtw_sctx_init(&sctx, 10 * 1000);
-		}
-
-		res = rtw_enqueue_cmd(pcmdpriv, ph2c);
-
-		if (res == _SUCCESS && (flags & RTW_CMDF_WAIT_ACK)) {
-			rtw_sctx_wait(&sctx, __func__);
-			_enter_critical_mutex(&pcmdpriv->sctx_mutex, NULL);
-			if (sctx.status == RTW_SCTX_SUBMITTED)
-				ph2c->sctx = NULL;
-			_exit_critical_mutex(&pcmdpriv->sctx_mutex, NULL);
-			if (sctx.status != RTW_SCTX_DONE_SUCCESS)
-				res = _FAIL;
-		}
-	}
-
-	return res;
-
-free_parm:
-	if (roch_parm)
-		rtw_mfree((u8 *)roch_parm, get_roch_parm_size(roch_parm));
-	if (ph2c)
-		rtw_mfree((u8 *)ph2c, sizeof(*ph2c));
-
-	return res;
-}
-
-#ifdef CONFIG_CONCURRENT_MODE
-void rtw_ap_roch_ch_switch_timer_process(void *ctx)
-{
-	_adapter *adapter = (_adapter *)ctx;
-#ifdef CONFIG_IOCTL_CFG80211
-	struct rtw_wdev_priv *pwdev_priv = adapter_wdev_data(adapter);
-#endif
-
-#ifdef CONFIG_IOCTL_CFG80211
-	ATOMIC_SET(&pwdev_priv->switch_ch_to, 1);
-#endif
-
-	rtw_roch_wk_cmd(adapter, ROCH_AP_ROCH_CH_SWITCH_PROCESS_WK, NULL, 0);
-}
-
-static bool chk_need_stay_in_cur_chan(_adapter *padapter)
-{
-#ifdef CONFIG_P2P
-	struct wifidirect_info *pwdinfo = &padapter->wdinfo;
-
-	/* When CONFIG_FULL_CH_IN_P2P_HANDSHAKE is defined and the
-	 * interface is in the P2P_STATE_GONEGO_OK state, do not let the
-	 * interface switch to the listen channel, because the interface will
-	 * switch to the OP channel after the GO negotiation is successful.
-	 */
-	if (padapter->registrypriv.full_ch_in_p2p_handshake == 1 && rtw_p2p_chk_state(pwdinfo , P2P_STATE_GONEGO_OK)) {
-		RTW_INFO("%s, No linked interface now, but go nego ok, do not back to listen channel\n", __func__);
-		return _TRUE;
-	}
-#endif
-
-	return _FALSE;
-}
-
-static bool chk_driver_interface(_adapter *padapter, u8 driver_interface)
-{
-#ifdef CONFIG_P2P
-	struct wifidirect_info *pwdinfo = &padapter->wdinfo;
-
-	if (pwdinfo->driver_interface == driver_interface)
-		return _TRUE;
-#elif defined(CONFIG_IOCTL_CFG80211)
-	if (driver_interface == DRIVER_CFG80211)
-		return _TRUE;
-#endif
-
-	return _FALSE;
-}
-
-static u8 get_remain_ch(_adapter *padapter)
-{
-	struct roch_info *prochinfo = &padapter->rochinfo;
-#ifdef CONFIG_P2P
-	struct wifidirect_info *pwdinfo = &padapter->wdinfo;
-#endif
-	u8 remain_ch;
-
-#ifdef CONFIG_P2P
-	remain_ch = pwdinfo->listen_channel;
-#elif defined(CONFIG_IOCTL_CFG80211)
-	if (chk_driver_interface(padapter, DRIVER_CFG80211))
-		remain_ch = ieee80211_frequency_to_channel(prochinfo->remain_on_ch_channel.center_freq);
-	else
-		rtw_warn_on(1);
-#endif
-
-	return remain_ch;
-}
-
-void rtw_concurrent_handler(_adapter	*padapter)
-{
-#ifdef CONFIG_IOCTL_CFG80211
-	struct rtw_wdev_priv	*pwdev_priv = adapter_wdev_data(padapter);
-#endif
-	struct dvobj_priv	*pdvobj = adapter_to_dvobj(padapter);
-	struct roch_info	*prochinfo = &padapter->rochinfo;
-#ifdef CONFIG_P2P
-	struct wifidirect_info	*pwdinfo = &padapter->wdinfo;
-	u8			val8;
-#endif
-	u8			remain_ch = get_remain_ch(padapter);
-
-#ifdef CONFIG_IOCTL_CFG80211
-	if (chk_driver_interface(padapter, DRIVER_CFG80211)
-		&& !rtw_cfg80211_get_is_roch(padapter))
-		return;
-#endif
-
-	if (rtw_mi_check_status(padapter, MI_LINKED)) {
-		u8 union_ch = rtw_mi_get_union_chan(padapter);
-		u8 union_bw = rtw_mi_get_union_bw(padapter);
-		u8 union_offset = rtw_mi_get_union_offset(padapter);
-		unsigned int duration;
-
-	#ifdef CONFIG_P2P
-		pwdinfo->operating_channel = union_ch;
-	#endif
-
-		if (chk_driver_interface(padapter, DRIVER_CFG80211)) {
-	#ifdef CONFIG_IOCTL_CFG80211
-			_enter_critical_mutex(&pwdev_priv->roch_mutex, NULL);
-
-			if (rtw_get_oper_ch(padapter) != union_ch) {
-				/* Current channel is not AP's channel - switching to AP's channel */
-				RTW_INFO("%s, switch ch back to union=%u,%u, %u\n"
-					, __func__, union_ch, union_bw, union_offset);
-				set_channel_bwmode(padapter, union_ch, union_offset, union_bw);
-				rtw_back_opch(padapter);
-
-				/* Now, the driver stays on AP's channel. We should stay on AP's
-				 * channel for min_home_dur (duration) and next switch channel is
-				 * listen channel.
-				 */
-				duration = prochinfo->min_home_dur;
-			} else {
-				/* Current channel is AP's channel - switching to listen channel */
-				RTW_INFO("%s, switch ch to roch=%u\n"
-					, __func__, remain_ch);
-				rtw_leave_opch(padapter);
-				set_channel_bwmode(padapter,
-						remain_ch, HAL_PRIME_CHNL_OFFSET_DONT_CARE, CHANNEL_WIDTH_20);
-
-				/* Now, the driver stays on listen channel. We should stay on listen
-				 * channel for max_away_dur (duration) and next switch channel is AP's
-				 * channel.
-				 */
-				duration = prochinfo->max_away_dur;
-			}
-
-			/* set channel switch timer */
-			ATOMIC_SET(&pwdev_priv->switch_ch_to, 0);
-			_set_timer(&prochinfo->ap_roch_ch_switch_timer, duration);
-			RTW_INFO("%s, set switch ch timer, duration=%d\n", __func__, duration);
-
-			_exit_critical_mutex(&pwdev_priv->roch_mutex, NULL);
-	#endif
-		}
-	#ifdef CONFIG_P2P
-		else if (chk_driver_interface(padapter, DRIVER_WEXT)) {
-			if (rtw_p2p_chk_state(pwdinfo, P2P_STATE_IDLE)) {
-				/*	Now, the driver stays on the AP's channel. */
-				/*	If the pwdinfo->ext_listen_period = 0, that means the P2P listen state is not available on listen channel. */
-				if (pwdinfo->ext_listen_period > 0) {
-					RTW_INFO("[%s] P2P_STATE_IDLE, ext_listen_period = %d\n", __FUNCTION__, pwdinfo->ext_listen_period);
-
-					if (union_ch != pwdinfo->listen_channel) {
-						rtw_leave_opch(padapter);
-						set_channel_bwmode(padapter, pwdinfo->listen_channel, HAL_PRIME_CHNL_OFFSET_DONT_CARE, CHANNEL_WIDTH_20);
-					}
-
-					rtw_p2p_set_state(pwdinfo, P2P_STATE_LISTEN);
-
-					if (!rtw_mi_check_mlmeinfo_state(padapter, WIFI_FW_AP_STATE)) {
-						val8 = 1;
-						rtw_hal_set_hwreg(padapter, HW_VAR_MLME_SITESURVEY, (u8 *)(&val8));
-					}
-					/*	Todo: To check the value of pwdinfo->ext_listen_period is equal to 0 or not. */
-					_set_timer(&prochinfo->ap_roch_ch_switch_timer, pwdinfo->ext_listen_period);
-				}
-
-			} else if (rtw_p2p_chk_state(pwdinfo, P2P_STATE_LISTEN) ||
-				rtw_p2p_chk_state(pwdinfo, P2P_STATE_GONEGO_FAIL) ||
-				(rtw_p2p_chk_state(pwdinfo, P2P_STATE_GONEGO_ING) && pwdinfo->nego_req_info.benable == _FALSE) ||
-				rtw_p2p_chk_state(pwdinfo, P2P_STATE_RX_PROVISION_DIS_REQ)) {
-				/*	Now, the driver is in the listen state of P2P mode. */
-				RTW_INFO("[%s] P2P_STATE_IDLE, ext_listen_interval = %d\n", __FUNCTION__, pwdinfo->ext_listen_interval);
-
-				/*	Commented by Albert 2012/11/01 */
-				/*	If the AP's channel is the same as the listen channel, we should still be in the listen state */
-				/*	Other P2P device is still able to find this device out even this device is in the AP's channel. */
-				/*	So, configure this device to be able to receive the probe request frame and set it to listen state. */
-				if (union_ch != pwdinfo->listen_channel) {
-
-					set_channel_bwmode(padapter, union_ch, union_offset, union_bw);
-					if (!rtw_mi_check_status(padapter, MI_AP_MODE)) {
-						val8 = 0;
-						rtw_hal_set_hwreg(padapter, HW_VAR_MLME_SITESURVEY, (u8 *)(&val8));
-					}
-					rtw_p2p_set_state(pwdinfo, P2P_STATE_IDLE);
-					rtw_back_opch(padapter);
-				}
-
-				/*	Todo: To check the value of pwdinfo->ext_listen_interval is equal to 0 or not. */
-				_set_timer(&prochinfo->ap_roch_ch_switch_timer, pwdinfo->ext_listen_interval);
-
-			} else if (rtw_p2p_chk_state(pwdinfo, P2P_STATE_GONEGO_OK)) {
-				/*	The driver had finished the P2P handshake successfully. */
-				val8 = 0;
-				rtw_hal_set_hwreg(padapter, HW_VAR_MLME_SITESURVEY, (u8 *)(&val8));
-				set_channel_bwmode(padapter, union_ch, union_offset, union_bw);
-				rtw_back_opch(padapter);
-
-			} else if (rtw_p2p_chk_state(pwdinfo, P2P_STATE_TX_PROVISION_DIS_REQ)) {
-				val8 = 1;
-				set_channel_bwmode(padapter, pwdinfo->tx_prov_disc_info.peer_channel_num[0], HAL_PRIME_CHNL_OFFSET_DONT_CARE, CHANNEL_WIDTH_20);
-				rtw_hal_set_hwreg(padapter, HW_VAR_MLME_SITESURVEY, (u8 *)(&val8));
-				issue_probereq_p2p(padapter, NULL);
-				_set_timer(&pwdinfo->pre_tx_scan_timer, P2P_TX_PRESCAN_TIMEOUT);
-			} else if (rtw_p2p_chk_state(pwdinfo, P2P_STATE_GONEGO_ING) && pwdinfo->nego_req_info.benable == _TRUE) {
-				val8 = 1;
-				set_channel_bwmode(padapter, pwdinfo->nego_req_info.peer_channel_num[0], HAL_PRIME_CHNL_OFFSET_DONT_CARE, CHANNEL_WIDTH_20);
-				rtw_hal_set_hwreg(padapter, HW_VAR_MLME_SITESURVEY, (u8 *)(&val8));
-				issue_probereq_p2p(padapter, NULL);
-				_set_timer(&pwdinfo->pre_tx_scan_timer, P2P_TX_PRESCAN_TIMEOUT);
-			} else if (rtw_p2p_chk_state(pwdinfo, P2P_STATE_TX_INVITE_REQ) && pwdinfo->invitereq_info.benable == _TRUE) {
-				/*
-				val8 = 1;
-				set_channel_bwmode(padapter, , HAL_PRIME_CHNL_OFFSET_DONT_CARE, CHANNEL_WIDTH_20);
-				rtw_hal_set_hwreg(padapter, HW_VAR_MLME_SITESURVEY, (u8 *)(&val8));
-				issue_probereq_p2p(padapter, NULL);
-				_set_timer( &pwdinfo->pre_tx_scan_timer, P2P_TX_PRESCAN_TIMEOUT );
-				*/
-			}
-		}
-	#endif /* CONFIG_P2P */
-	} else if (!chk_need_stay_in_cur_chan(padapter)) {
-		set_channel_bwmode(padapter, remain_ch, HAL_PRIME_CHNL_OFFSET_DONT_CARE, CHANNEL_WIDTH_20);
-	}
-}
-#endif  /* CONFIG_CONCURRENT_MODE */
-
-void rtw_init_roch_info(_adapter *padapter)
-{
-	struct roch_info *prochinfo = &padapter->rochinfo;
-
-	_rtw_memset(prochinfo, 0x00, sizeof(struct roch_info));
-
-#ifdef CONFIG_CONCURRENT_MODE
-	rtw_init_timer(&prochinfo->ap_roch_ch_switch_timer, padapter, rtw_ap_roch_ch_switch_timer_process, padapter);
-#ifdef CONFIG_IOCTL_CFG80211
-	prochinfo->min_home_dur = 1500; 		/* min duration for traffic, home_time */
-	prochinfo->max_away_dur = 250;		/* max acceptable away duration, home_away_time */
-#endif
-#endif
-
-#ifdef CONFIG_IOCTL_CFG80211
-	rtw_init_timer(&prochinfo->remain_on_ch_timer, padapter, rtw_ro_ch_timer_process, padapter);
-#endif
-}
+/******************************************************************************
+ *
+ * Copyright(c) 2007 - 2020 Realtek Corporation.
+ *
+ * This program is free software; you can redistribute it and/or modify it
+ * under the terms of version 2 of the GNU General Public License as
+ * published by the Free Software Foundation.
+ *
+ * This program is distributed in the hope that it will be useful, but WITHOUT
+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
+ * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for
+ * more details.
+ *
+ *****************************************************************************/
+
+#include <drv_types.h>
+
+#ifdef CONFIG_IOCTL_CFG80211
+u8 rtw_roch_stay_in_cur_chan(_adapter *padapter)
+{
+	int i;
+	_adapter *iface;
+	struct mlme_priv *pmlmepriv;
+	struct dvobj_priv *dvobj = adapter_to_dvobj(padapter);
+	u8 rst = _FALSE;
+
+	for (i = 0; i < dvobj->iface_nums; i++) {
+		iface = dvobj->padapters[i];
+		if (iface) {
+			pmlmepriv = &iface->mlmepriv;
+
+			if (check_fwstate(pmlmepriv, WIFI_UNDER_LINKING | WIFI_UNDER_WPS | WIFI_UNDER_KEY_HANDSHAKE) == _TRUE) {
+				RTW_INFO(ADPT_FMT"- WIFI_UNDER_LINKING |WIFI_UNDER_WPS | WIFI_UNDER_KEY_HANDSHAKE (mlme state:0x%x)\n",
+						ADPT_ARG(iface), get_fwstate(&iface->mlmepriv));
+				rst = _TRUE;
+				break;
+			}
+			#ifdef CONFIG_AP_MODE
+			if (MLME_IS_AP(iface) || MLME_IS_MESH(iface)) {
+				if (rtw_ap_sta_states_check(iface) == _TRUE) {
+					rst = _TRUE;
+					break;
+				}
+			}
+			#endif
+		}
+	}
+
+	return rst;
+}
+
+static int rtw_ro_ch_handler(_adapter *adapter, u8 *buf)
+{
+	int ret = H2C_SUCCESS;
+	struct rtw_roch_parm *roch_parm = (struct rtw_roch_parm *)buf;
+	struct rtw_wdev_priv *pwdev_priv = adapter_wdev_data(adapter);
+	struct roch_info *prochinfo = &adapter->rochinfo;
+#ifdef CONFIG_CONCURRENT_MODE
+	struct mlme_ext_priv *pmlmeext = &adapter->mlmeextpriv;
+#endif
+	u8 ready_on_channel = _FALSE;
+	u8 remain_ch;
+	unsigned int duration;
+
+	_enter_critical_mutex(&pwdev_priv->roch_mutex, NULL);
+
+	if (rtw_cfg80211_get_is_roch(adapter) != _TRUE)
+		goto exit;
+
+	remain_ch = (u8)ieee80211_frequency_to_channel(roch_parm->ch.center_freq);
+	duration = roch_parm->duration;
+
+	RTW_INFO(FUNC_ADPT_FMT" ch:%u duration:%d, cookie:0x%llx\n"
+		, FUNC_ADPT_ARG(adapter), remain_ch, roch_parm->duration, roch_parm->cookie);
+
+	if (roch_parm->wdev && roch_parm->cookie) {
+		if (prochinfo->ro_ch_wdev != roch_parm->wdev) {
+			RTW_WARN(FUNC_ADPT_FMT" ongoing wdev:%p, wdev:%p\n"
+				, FUNC_ADPT_ARG(adapter), prochinfo->ro_ch_wdev, roch_parm->wdev);
+			rtw_warn_on(1);
+		}
+
+		if (prochinfo->remain_on_ch_cookie != roch_parm->cookie) {
+			RTW_WARN(FUNC_ADPT_FMT" ongoing cookie:0x%llx, cookie:0x%llx\n"
+				, FUNC_ADPT_ARG(adapter), prochinfo->remain_on_ch_cookie, roch_parm->cookie);
+			rtw_warn_on(1);
+		}
+	}
+
+	if (rtw_roch_stay_in_cur_chan(adapter) == _TRUE) {
+		remain_ch = rtw_mi_get_union_chan(adapter);
+		RTW_INFO(FUNC_ADPT_FMT" stay in union ch:%d\n", FUNC_ADPT_ARG(adapter), remain_ch);
+	}
+
+	#ifdef CONFIG_CONCURRENT_MODE
+	if (rtw_mi_check_status(adapter, MI_LINKED) && (0 != rtw_mi_get_union_chan(adapter))) {
+		if ((remain_ch != rtw_mi_get_union_chan(adapter)) && !check_fwstate(&adapter->mlmepriv, WIFI_ASOC_STATE)) {
+			if (remain_ch != pmlmeext->cur_channel
+				#ifdef RTW_ROCH_BACK_OP
+				|| ATOMIC_READ(&pwdev_priv->switch_ch_to) == 1
+				#endif
+			) {
+				rtw_leave_opch(adapter);
+
+				#ifdef RTW_ROCH_BACK_OP
+				RTW_INFO("%s, set switch ch timer, duration=%d\n", __func__, prochinfo->max_away_dur);
+				ATOMIC_SET(&pwdev_priv->switch_ch_to, 0);
+				/* remain_ch is not same as union channel. duration is max_away_dur to
+				 * back to AP's channel.
+				 */
+				_set_timer(&prochinfo->ap_roch_ch_switch_timer, prochinfo->max_away_dur);
+				#endif
+			}
+		}
+		ready_on_channel = _TRUE;
+	} else
+	#endif /* CONFIG_CONCURRENT_MODE */
+	{
+		if (remain_ch != rtw_get_oper_ch(adapter))
+			ready_on_channel = _TRUE;
+	}
+
+	if (ready_on_channel == _TRUE) {
+		#ifndef RTW_SINGLE_WIPHY
+		if (!check_fwstate(&adapter->mlmepriv, WIFI_ASOC_STATE))
+		#endif
+		{
+			#ifdef CONFIG_CONCURRENT_MODE
+			if (rtw_get_oper_ch(adapter) != remain_ch)
+			#endif
+			{
+				/* if (!padapter->mlmepriv.LinkDetectInfo.bBusyTraffic) */
+				set_channel_bwmode(adapter, remain_ch, HAL_PRIME_CHNL_OFFSET_DONT_CARE, CHANNEL_WIDTH_20);
+			}
+		}
+	}
+
+	#ifdef CONFIG_BT_COEXIST
+	rtw_btcoex_ScanNotify(adapter, _TRUE);
+	#endif
+
+	RTW_INFO("%s, set ro ch timer, duration=%d\n", __func__, duration);
+	_set_timer(&prochinfo->remain_on_ch_timer, duration);
+
+exit:
+	_exit_critical_mutex(&pwdev_priv->roch_mutex, NULL);
+
+	return ret;
+}
+
+static int rtw_cancel_ro_ch_handler(_adapter *padapter, u8 *buf)
+{
+	int ret = H2C_SUCCESS;
+	struct rtw_roch_parm *roch_parm = (struct rtw_roch_parm *)buf;
+	struct rtw_wdev_priv *pwdev_priv = adapter_wdev_data(padapter);
+	struct roch_info *prochinfo = &padapter->rochinfo;
+	struct wireless_dev *wdev;
+#ifdef CONFIG_P2P
+	struct wifidirect_info *pwdinfo = &padapter->wdinfo;
+#endif
+	u8 ch, bw, offset;
+
+	_enter_critical_mutex(&pwdev_priv->roch_mutex, NULL);
+
+	if (rtw_cfg80211_get_is_roch(padapter) != _TRUE)
+		goto exit;
+
+	if (roch_parm->wdev && roch_parm->cookie) {
+		if (prochinfo->ro_ch_wdev != roch_parm->wdev) {
+			RTW_WARN(FUNC_ADPT_FMT" ongoing wdev:%p, wdev:%p\n"
+				, FUNC_ADPT_ARG(padapter), prochinfo->ro_ch_wdev, roch_parm->wdev);
+			rtw_warn_on(1);
+		}
+
+		if (prochinfo->remain_on_ch_cookie != roch_parm->cookie) {
+			RTW_WARN(FUNC_ADPT_FMT" ongoing cookie:0x%llx, cookie:0x%llx\n"
+				, FUNC_ADPT_ARG(padapter), prochinfo->remain_on_ch_cookie, roch_parm->cookie);
+			rtw_warn_on(1);
+		}
+	}
+
+#if defined(RTW_ROCH_BACK_OP) && defined(CONFIG_CONCURRENT_MODE)
+	_cancel_timer_ex(&prochinfo->ap_roch_ch_switch_timer);
+	ATOMIC_SET(&pwdev_priv->switch_ch_to, 1);
+#endif
+
+	if (rtw_mi_get_ch_setting_union(padapter, &ch, &bw, &offset) != 0) {
+		if (0)
+			RTW_INFO(FUNC_ADPT_FMT" back to linked/linking union - ch:%u, bw:%u, offset:%u\n",
+				 FUNC_ADPT_ARG(padapter), ch, bw, offset);
+#ifdef CONFIG_P2P
+	} else if (adapter_wdev_data(padapter)->p2p_enabled && pwdinfo->listen_channel) {
+		ch = pwdinfo->listen_channel;
+		bw = CHANNEL_WIDTH_20;
+		offset = HAL_PRIME_CHNL_OFFSET_DONT_CARE;
+		if (0)
+			RTW_INFO(FUNC_ADPT_FMT" back to listen ch - ch:%u, bw:%u, offset:%u\n",
+				 FUNC_ADPT_ARG(padapter), ch, bw, offset);
+#endif
+	} else {
+		ch = prochinfo->restore_channel;
+		bw = CHANNEL_WIDTH_20;
+		offset = HAL_PRIME_CHNL_OFFSET_DONT_CARE;
+		if (0)
+			RTW_INFO(FUNC_ADPT_FMT" back to restore ch - ch:%u, bw:%u, offset:%u\n",
+				 FUNC_ADPT_ARG(padapter), ch, bw, offset);
+	}
+
+	set_channel_bwmode(padapter, ch, offset, bw);
+	rtw_back_opch(padapter);
+#ifdef CONFIG_P2P
+	rtw_p2p_set_state(pwdinfo, rtw_p2p_pre_state(pwdinfo));
+#ifdef CONFIG_DEBUG_CFG80211
+	RTW_INFO("%s, role=%d, p2p_state=%d\n", __func__, rtw_p2p_role(pwdinfo), rtw_p2p_state(pwdinfo));
+#endif
+#endif
+
+	wdev = prochinfo->ro_ch_wdev;
+
+	rtw_cfg80211_set_is_roch(padapter, _FALSE);
+	prochinfo->ro_ch_wdev = NULL;
+	rtw_cfg80211_set_last_ro_ch_time(padapter);
+
+	rtw_cfg80211_remain_on_channel_expired(wdev
+		, prochinfo->remain_on_ch_cookie
+		, &prochinfo->remain_on_ch_channel
+		, prochinfo->remain_on_ch_type, GFP_KERNEL);
+
+	RTW_INFO("cfg80211_remain_on_channel_expired cookie:0x%llx\n"
+		, prochinfo->remain_on_ch_cookie);
+
+#ifdef CONFIG_BT_COEXIST
+	rtw_btcoex_ScanNotify(padapter, _FALSE);
+#endif
+
+exit:
+	_exit_critical_mutex(&pwdev_priv->roch_mutex, NULL);
+
+	return ret;
+}
+
+static void rtw_ro_ch_timer_process(void *FunctionContext)
+{
+	_adapter *adapter = (_adapter *)FunctionContext;
+
+	rtw_cancel_roch_cmd(adapter, 0, NULL, 0);
+}
+#endif /* CONFIG_IOCTL_CFG80211 */
+
+#if (defined(CONFIG_P2P) && defined(CONFIG_CONCURRENT_MODE)) || defined(CONFIG_IOCTL_CFG80211)
+s32 rtw_roch_wk_hdl(_adapter *padapter, int intCmdType, u8 *buf)
+{
+	int ret = H2C_SUCCESS;
+
+	switch (intCmdType) {
+
+#ifdef CONFIG_IOCTL_CFG80211
+	case ROCH_RO_CH_WK:
+		ret = rtw_ro_ch_handler(padapter, buf);
+		break;
+	case ROCH_CANCEL_RO_CH_WK:
+		ret = rtw_cancel_ro_ch_handler(padapter, buf);
+		break;
+#endif
+
+#ifdef CONFIG_CONCURRENT_MODE
+	case ROCH_AP_ROCH_CH_SWITCH_PROCESS_WK:
+		rtw_concurrent_handler(padapter);
+		break;
+#endif
+
+	default:
+		rtw_warn_on(1);
+		break;
+	}
+
+	return ret;
+}
+
+static int get_roch_parm_size(struct rtw_roch_parm *roch_parm)
+{
+#ifdef CONFIG_IOCTL_CFG80211
+	return (roch_parm ? sizeof(*roch_parm) : 0);
+#else
+	rtw_warn_on(roch_parm);
+	return 0;
+#endif
+}
+
+u8 rtw_roch_wk_cmd(_adapter *padapter, int intCmdType, struct rtw_roch_parm *roch_parm, u8 flags)
+{
+	struct cmd_obj	*ph2c = NULL;
+	struct drvextra_cmd_parm	*pdrvextra_cmd_parm = NULL;
+	struct cmd_priv	*pcmdpriv = &padapter->cmdpriv;
+	struct submit_ctx sctx;
+	u8	res = _SUCCESS;
+
+	if (flags & RTW_CMDF_DIRECTLY) {
+		/* no need to enqueue, do the cmd hdl directly and free cmd parameter */
+		if (H2C_SUCCESS != rtw_roch_wk_hdl(padapter, intCmdType, (u8 *)roch_parm))
+			res = _FAIL;
+		goto free_parm;
+	} else {
+		ph2c = (struct cmd_obj *)rtw_zmalloc(sizeof(struct cmd_obj));
+		if (!ph2c) {
+			res = _FAIL;
+			goto free_parm;
+		}
+
+		pdrvextra_cmd_parm = (struct drvextra_cmd_parm *)rtw_zmalloc(sizeof(struct drvextra_cmd_parm));
+		if (!pdrvextra_cmd_parm) {
+			res = _FAIL;
+			goto free_parm;
+		}
+
+		pdrvextra_cmd_parm->ec_id = ROCH_WK_CID;
+		pdrvextra_cmd_parm->type = intCmdType;
+		pdrvextra_cmd_parm->size = get_roch_parm_size(roch_parm);
+		pdrvextra_cmd_parm->pbuf = (u8 *)roch_parm;
+
+		init_h2fwcmd_w_parm_no_rsp(ph2c, pdrvextra_cmd_parm, CMD_SET_DRV_EXTRA);
+
+		if (flags & RTW_CMDF_WAIT_ACK) {
+			ph2c->sctx = &sctx;
+			rtw_sctx_init(&sctx, 10 * 1000);
+		}
+
+		res = rtw_enqueue_cmd(pcmdpriv, ph2c);
+
+		if (res == _SUCCESS && (flags & RTW_CMDF_WAIT_ACK)) {
+			rtw_sctx_wait(&sctx, __func__);
+			_enter_critical_mutex(&pcmdpriv->sctx_mutex, NULL);
+			if (sctx.status == RTW_SCTX_SUBMITTED)
+				ph2c->sctx = NULL;
+			_exit_critical_mutex(&pcmdpriv->sctx_mutex, NULL);
+			if (sctx.status != RTW_SCTX_DONE_SUCCESS)
+				res = _FAIL;
+		}
+	}
+
+	return res;
+
+free_parm:
+	if (roch_parm)
+		rtw_mfree((u8 *)roch_parm, get_roch_parm_size(roch_parm));
+	if (ph2c)
+		rtw_mfree((u8 *)ph2c, sizeof(*ph2c));
+
+	return res;
+}
+
+#ifdef CONFIG_CONCURRENT_MODE
+void rtw_ap_roch_ch_switch_timer_process(void *ctx)
+{
+	_adapter *adapter = (_adapter *)ctx;
+#ifdef CONFIG_IOCTL_CFG80211
+	struct rtw_wdev_priv *pwdev_priv = adapter_wdev_data(adapter);
+#endif
+
+#ifdef CONFIG_IOCTL_CFG80211
+	ATOMIC_SET(&pwdev_priv->switch_ch_to, 1);
+#endif
+
+	rtw_roch_wk_cmd(adapter, ROCH_AP_ROCH_CH_SWITCH_PROCESS_WK, NULL, 0);
+}
+
+static bool chk_need_stay_in_cur_chan(_adapter *padapter)
+{
+#ifdef CONFIG_P2P
+	struct wifidirect_info *pwdinfo = &padapter->wdinfo;
+
+	/* When CONFIG_FULL_CH_IN_P2P_HANDSHAKE is defined and the
+	 * interface is in the P2P_STATE_GONEGO_OK state, do not let the
+	 * interface switch to the listen channel, because the interface will
+	 * switch to the OP channel after the GO negotiation is successful.
+	 */
+	if (padapter->registrypriv.full_ch_in_p2p_handshake == 1 && rtw_p2p_chk_state(pwdinfo , P2P_STATE_GONEGO_OK)) {
+		RTW_INFO("%s, No linked interface now, but go nego ok, do not back to listen channel\n", __func__);
+		return _TRUE;
+	}
+#endif
+
+	return _FALSE;
+}
+
+static bool chk_driver_interface(_adapter *padapter, u8 driver_interface)
+{
+#ifdef CONFIG_P2P
+	struct wifidirect_info *pwdinfo = &padapter->wdinfo;
+
+	if (pwdinfo->driver_interface == driver_interface)
+		return _TRUE;
+#elif defined(CONFIG_IOCTL_CFG80211)
+	if (driver_interface == DRIVER_CFG80211)
+		return _TRUE;
+#endif
+
+	return _FALSE;
+}
+
+static u8 get_remain_ch(_adapter *padapter)
+{
+	struct roch_info *prochinfo = &padapter->rochinfo;
+#ifdef CONFIG_P2P
+	struct wifidirect_info *pwdinfo = &padapter->wdinfo;
+#endif
+	u8 remain_ch;
+
+#ifdef CONFIG_P2P
+	remain_ch = pwdinfo->listen_channel;
+#elif defined(CONFIG_IOCTL_CFG80211)
+	if (chk_driver_interface(padapter, DRIVER_CFG80211))
+		remain_ch = ieee80211_frequency_to_channel(prochinfo->remain_on_ch_channel.center_freq);
+	else
+		rtw_warn_on(1);
+#endif
+
+	return remain_ch;
+}
+
+void rtw_concurrent_handler(_adapter	*padapter)
+{
+#ifdef CONFIG_IOCTL_CFG80211
+	struct rtw_wdev_priv	*pwdev_priv = adapter_wdev_data(padapter);
+#endif
+	struct dvobj_priv	*pdvobj = adapter_to_dvobj(padapter);
+	struct roch_info	*prochinfo = &padapter->rochinfo;
+#ifdef CONFIG_P2P
+	struct wifidirect_info	*pwdinfo = &padapter->wdinfo;
+	u8			val8;
+#endif
+	u8			remain_ch = get_remain_ch(padapter);
+
+#ifdef CONFIG_IOCTL_CFG80211
+	if (chk_driver_interface(padapter, DRIVER_CFG80211)
+		&& !rtw_cfg80211_get_is_roch(padapter))
+		return;
+#endif
+
+	if (rtw_mi_check_status(padapter, MI_LINKED)) {
+		u8 union_ch = rtw_mi_get_union_chan(padapter);
+		u8 union_bw = rtw_mi_get_union_bw(padapter);
+		u8 union_offset = rtw_mi_get_union_offset(padapter);
+		unsigned int duration;
+
+	#ifdef CONFIG_P2P
+		pwdinfo->operating_channel = union_ch;
+	#endif
+
+		if (chk_driver_interface(padapter, DRIVER_CFG80211)) {
+	#ifdef CONFIG_IOCTL_CFG80211
+			_enter_critical_mutex(&pwdev_priv->roch_mutex, NULL);
+
+			if (rtw_get_oper_ch(padapter) != union_ch) {
+				/* Current channel is not AP's channel - switching to AP's channel */
+				RTW_INFO("%s, switch ch back to union=%u,%u, %u\n"
+					, __func__, union_ch, union_bw, union_offset);
+				set_channel_bwmode(padapter, union_ch, union_offset, union_bw);
+				rtw_back_opch(padapter);
+
+				/* Now, the driver stays on AP's channel. We should stay on AP's
+				 * channel for min_home_dur (duration) and next switch channel is
+				 * listen channel.
+				 */
+				duration = prochinfo->min_home_dur;
+			} else {
+				/* Current channel is AP's channel - switching to listen channel */
+				RTW_INFO("%s, switch ch to roch=%u\n"
+					, __func__, remain_ch);
+				rtw_leave_opch(padapter);
+				set_channel_bwmode(padapter,
+						remain_ch, HAL_PRIME_CHNL_OFFSET_DONT_CARE, CHANNEL_WIDTH_20);
+
+				/* Now, the driver stays on listen channel. We should stay on listen
+				 * channel for max_away_dur (duration) and next switch channel is AP's
+				 * channel.
+				 */
+				duration = prochinfo->max_away_dur;
+			}
+
+			/* set channel switch timer */
+			ATOMIC_SET(&pwdev_priv->switch_ch_to, 0);
+			_set_timer(&prochinfo->ap_roch_ch_switch_timer, duration);
+			RTW_INFO("%s, set switch ch timer, duration=%d\n", __func__, duration);
+
+			_exit_critical_mutex(&pwdev_priv->roch_mutex, NULL);
+	#endif
+		}
+	#ifdef CONFIG_P2P
+		else if (chk_driver_interface(padapter, DRIVER_WEXT)) {
+			if (rtw_p2p_chk_state(pwdinfo, P2P_STATE_IDLE)) {
+				/*	Now, the driver stays on the AP's channel. */
+				/*	If the pwdinfo->ext_listen_period = 0, that means the P2P listen state is not available on listen channel. */
+				if (pwdinfo->ext_listen_period > 0) {
+					RTW_INFO("[%s] P2P_STATE_IDLE, ext_listen_period = %d\n", __FUNCTION__, pwdinfo->ext_listen_period);
+
+					if (union_ch != pwdinfo->listen_channel) {
+						rtw_leave_opch(padapter);
+						set_channel_bwmode(padapter, pwdinfo->listen_channel, HAL_PRIME_CHNL_OFFSET_DONT_CARE, CHANNEL_WIDTH_20);
+					}
+
+					rtw_p2p_set_state(pwdinfo, P2P_STATE_LISTEN);
+
+					if (!rtw_mi_check_mlmeinfo_state(padapter, WIFI_FW_AP_STATE)) {
+						val8 = 1;
+						rtw_hal_set_hwreg(padapter, HW_VAR_MLME_SITESURVEY, (u8 *)(&val8));
+					}
+					/*	Todo: To check the value of pwdinfo->ext_listen_period is equal to 0 or not. */
+					_set_timer(&prochinfo->ap_roch_ch_switch_timer, pwdinfo->ext_listen_period);
+				}
+
+			} else if (rtw_p2p_chk_state(pwdinfo, P2P_STATE_LISTEN) ||
+				rtw_p2p_chk_state(pwdinfo, P2P_STATE_GONEGO_FAIL) ||
+				(rtw_p2p_chk_state(pwdinfo, P2P_STATE_GONEGO_ING) && pwdinfo->nego_req_info.benable == _FALSE) ||
+				rtw_p2p_chk_state(pwdinfo, P2P_STATE_RX_PROVISION_DIS_REQ)) {
+				/*	Now, the driver is in the listen state of P2P mode. */
+				RTW_INFO("[%s] P2P_STATE_IDLE, ext_listen_interval = %d\n", __FUNCTION__, pwdinfo->ext_listen_interval);
+
+				/*	Commented by Albert 2012/11/01 */
+				/*	If the AP's channel is the same as the listen channel, we should still be in the listen state */
+				/*	Other P2P device is still able to find this device out even this device is in the AP's channel. */
+				/*	So, configure this device to be able to receive the probe request frame and set it to listen state. */
+				if (union_ch != pwdinfo->listen_channel) {
+
+					set_channel_bwmode(padapter, union_ch, union_offset, union_bw);
+					if (!rtw_mi_check_status(padapter, MI_AP_MODE)) {
+						val8 = 0;
+						rtw_hal_set_hwreg(padapter, HW_VAR_MLME_SITESURVEY, (u8 *)(&val8));
+					}
+					rtw_p2p_set_state(pwdinfo, P2P_STATE_IDLE);
+					rtw_back_opch(padapter);
+				}
+
+				/*	Todo: To check the value of pwdinfo->ext_listen_interval is equal to 0 or not. */
+				_set_timer(&prochinfo->ap_roch_ch_switch_timer, pwdinfo->ext_listen_interval);
+
+			} else if (rtw_p2p_chk_state(pwdinfo, P2P_STATE_GONEGO_OK)) {
+				/*	The driver had finished the P2P handshake successfully. */
+				val8 = 0;
+				rtw_hal_set_hwreg(padapter, HW_VAR_MLME_SITESURVEY, (u8 *)(&val8));
+				set_channel_bwmode(padapter, union_ch, union_offset, union_bw);
+				rtw_back_opch(padapter);
+
+			} else if (rtw_p2p_chk_state(pwdinfo, P2P_STATE_TX_PROVISION_DIS_REQ)) {
+				val8 = 1;
+				set_channel_bwmode(padapter, pwdinfo->tx_prov_disc_info.peer_channel_num[0], HAL_PRIME_CHNL_OFFSET_DONT_CARE, CHANNEL_WIDTH_20);
+				rtw_hal_set_hwreg(padapter, HW_VAR_MLME_SITESURVEY, (u8 *)(&val8));
+				issue_probereq_p2p(padapter, NULL);
+				_set_timer(&pwdinfo->pre_tx_scan_timer, P2P_TX_PRESCAN_TIMEOUT);
+			} else if (rtw_p2p_chk_state(pwdinfo, P2P_STATE_GONEGO_ING) && pwdinfo->nego_req_info.benable == _TRUE) {
+				val8 = 1;
+				set_channel_bwmode(padapter, pwdinfo->nego_req_info.peer_channel_num[0], HAL_PRIME_CHNL_OFFSET_DONT_CARE, CHANNEL_WIDTH_20);
+				rtw_hal_set_hwreg(padapter, HW_VAR_MLME_SITESURVEY, (u8 *)(&val8));
+				issue_probereq_p2p(padapter, NULL);
+				_set_timer(&pwdinfo->pre_tx_scan_timer, P2P_TX_PRESCAN_TIMEOUT);
+			} else if (rtw_p2p_chk_state(pwdinfo, P2P_STATE_TX_INVITE_REQ) && pwdinfo->invitereq_info.benable == _TRUE) {
+				/*
+				val8 = 1;
+				set_channel_bwmode(padapter, , HAL_PRIME_CHNL_OFFSET_DONT_CARE, CHANNEL_WIDTH_20);
+				rtw_hal_set_hwreg(padapter, HW_VAR_MLME_SITESURVEY, (u8 *)(&val8));
+				issue_probereq_p2p(padapter, NULL);
+				_set_timer( &pwdinfo->pre_tx_scan_timer, P2P_TX_PRESCAN_TIMEOUT );
+				*/
+			}
+		}
+	#endif /* CONFIG_P2P */
+	} else if (!chk_need_stay_in_cur_chan(padapter)) {
+		set_channel_bwmode(padapter, remain_ch, HAL_PRIME_CHNL_OFFSET_DONT_CARE, CHANNEL_WIDTH_20);
+	}
+}
+#endif  /* CONFIG_CONCURRENT_MODE */
+
+void rtw_init_roch_info(_adapter *padapter)
+{
+	struct roch_info *prochinfo = &padapter->rochinfo;
+
+	_rtw_memset(prochinfo, 0x00, sizeof(struct roch_info));
+
+#ifdef CONFIG_CONCURRENT_MODE
+	rtw_init_timer(&prochinfo->ap_roch_ch_switch_timer, padapter, rtw_ap_roch_ch_switch_timer_process, padapter);
+#ifdef CONFIG_IOCTL_CFG80211
+	prochinfo->min_home_dur = 1500; 		/* min duration for traffic, home_time */
+	prochinfo->max_away_dur = 250;		/* max acceptable away duration, home_away_time */
+#endif
+#endif
+
+#ifdef CONFIG_IOCTL_CFG80211
+	rtw_init_timer(&prochinfo->remain_on_ch_timer, padapter, rtw_ro_ch_timer_process, padapter);
+#endif
+}
 #endif /* (defined(CONFIG_P2P) && defined(CONFIG_CONCURRENT_MODE)) || defined(CONFIG_IOCTL_CFG80211) */
\ No newline at end of file
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/core/rtw_rson.c b/drivers/net/wireless/rockchip_wlan/rtl8821cs/core/rtw_rson.c
index dc2304529d45..dba8fb73bdbc 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/core/rtw_rson.c
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/core/rtw_rson.c
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2011 Realtek Corporation. All rights reserved.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/core/rtw_sdio.c b/drivers/net/wireless/rockchip_wlan/rtl8821cs/core/rtw_sdio.c
index 0f41f6ba115f..cdadbaff7465 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/core/rtw_sdio.c
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/core/rtw_sdio.c
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2015 - 2019 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/core/rtw_security.c b/drivers/net/wireless/rockchip_wlan/rtl8821cs/core/rtw_security.c
index 4e549edf65eb..639e1e574295 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/core/rtw_security.c
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/core/rtw_security.c
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017 Realtek Corporation.
@@ -1647,11 +1646,11 @@ u32 rtw_aes_encrypt(_adapter *padapter, u8 *pxmitframe)
 			if ((curfragnum + 1) == pattrib->nr_frags) {    /* the last fragment */
 				plen = pattrib->last_txcmdsz - pattrib->hdrlen - pattrib->iv_len - pattrib->icv_len;
 
-				_rtw_ccmp_encrypt(prwskey, prwskeylen, pattrib->hdrlen, pframe, plen);
+				_rtw_ccmp_encrypt(padapter, prwskey, prwskeylen, pattrib->hdrlen, pframe, plen);
 			} else {
 				plen = pxmitpriv->frag_len - pattrib->hdrlen - pattrib->iv_len - pattrib->icv_len;
 
-				_rtw_ccmp_encrypt(prwskey, prwskeylen, pattrib->hdrlen, pframe, plen);
+				_rtw_ccmp_encrypt(padapter, prwskey, prwskeylen, pattrib->hdrlen, pframe, plen);
 				pframe += pxmitpriv->frag_len;
 				pframe = (u8 *)RND4((SIZE_PTR)(pframe));
 
@@ -2119,7 +2118,7 @@ u32 rtw_aes_decrypt(_adapter *padapter, u8 *precvframe)
 			} else
 				prwskey = &stainfo->dot118021x_UncstKey.skey[0];
 
-			res = _rtw_ccmp_decrypt(prwskey,
+			res = _rtw_ccmp_decrypt(padapter, prwskey,
 				prxattrib->encrypt == _CCMP_256_ ? 32 : 16,
 				prxattrib->hdrlen, pframe,
 				((union recv_frame *)precvframe)->u.hdr.len);
@@ -2630,11 +2629,11 @@ u32 rtw_gcmp_encrypt(_adapter *padapter, u8 *pxmitframe)
 				/* the last fragment */
 				plen = pattrib->last_txcmdsz - pattrib->hdrlen - pattrib->iv_len - pattrib->icv_len;
 
-				_rtw_gcmp_encrypt(prwskey, prwskeylen, pattrib->hdrlen, pframe, plen);
+				_rtw_gcmp_encrypt(padapter, prwskey, prwskeylen, pattrib->hdrlen, pframe, plen);
 			} else {
 				plen = pxmitpriv->frag_len - pattrib->hdrlen - pattrib->iv_len - pattrib->icv_len;
 
-				_rtw_gcmp_encrypt(prwskey, prwskeylen, pattrib->hdrlen, pframe, plen);
+				_rtw_gcmp_encrypt(padapter, prwskey, prwskeylen, pattrib->hdrlen, pframe, plen);
 				pframe += pxmitpriv->frag_len;
 				pframe = (u8 *)RND4((SIZE_PTR)(pframe));
 			}
@@ -2719,7 +2718,7 @@ u32 rtw_gcmp_decrypt(_adapter *padapter, u8 *precvframe)
 			} else
 				prwskey = &stainfo->dot118021x_UncstKey.skey[0];
 
-			res = _rtw_gcmp_decrypt(prwskey,
+			res = _rtw_gcmp_decrypt(padapter, prwskey,
 				prxattrib->encrypt == _GCMP_256_ ? 32 : 16,
 				prxattrib->hdrlen, pframe,
 				((union recv_frame *)precvframe)->u.hdr.len);
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/core/rtw_sreset.c b/drivers/net/wireless/rockchip_wlan/rtl8821cs/core/rtw_sreset.c
index 536a1998a6f1..21cc18bc4f5d 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/core/rtw_sreset.c
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/core/rtw_sreset.c
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/core/rtw_sta_mgt.c b/drivers/net/wireless/rockchip_wlan/rtl8821cs/core/rtw_sta_mgt.c
index 379da79071f4..d0966567c00f 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/core/rtw_sta_mgt.c
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/core/rtw_sta_mgt.c
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2019 Realtek Corporation.
@@ -316,6 +315,8 @@ u32	_rtw_init_sta_priv(struct	sta_priv *pstapriv)
 	rtw_pre_link_sta_ctl_init(pstapriv);
 #endif
 
+	_rtw_spinlock_init(&pstapriv->tx_rpt_lock);
+
 #if defined(DBG_ROAMING_TEST) || defined(CONFIG_RTW_REPEATER_SON)
 	rtw_set_rx_chk_limit(adapter,1);
 #elif defined(CONFIG_ACTIVE_KEEP_ALIVE_CHECK) && !defined(CONFIG_LPS_LCLK_WD_TIMER)
@@ -483,6 +484,8 @@ u32	_rtw_free_sta_priv(struct	sta_priv *pstapriv)
 		rtw_pre_link_sta_ctl_deinit(pstapriv);
 #endif
 
+		_rtw_spinlock_free(&pstapriv->tx_rpt_lock);
+
 		if (pstapriv->pallocated_stainfo_buf)
 			rtw_vmfree(pstapriv->pallocated_stainfo_buf,
 				sizeof(struct sta_info) * NUM_STA + MEM_ALIGNMENT_OFFSET);
@@ -601,7 +604,7 @@ struct	sta_info *rtw_alloc_stainfo(struct	sta_priv *pstapriv, const u8 *hwaddr)
 			rtw_clear_bit(RTW_RECV_ACK_OR_TIMEOUT, &preorder_ctrl->rec_abba_rsp_ack);
 
 		}
-
+		ATOMIC_SET(&psta->keytrack, 0);
 
 		/* init for DM */
 		psta->cmn.rssi_stat.rssi = (-1);
@@ -642,7 +645,7 @@ u32	rtw_free_stainfo(_adapter *padapter , struct sta_info *psta)
 {
 	int i;
 	_irqL irqL0;
-	_queue *pfree_sta_queue;
+	_queue *pfree_sta_queue, *pdefrag_q = NULL;
 	struct recv_reorder_ctrl *preorder_ctrl;
 	struct	sta_xmit_priv	*pstaxmitpriv;
 	struct	xmit_priv	*pxmitpriv = &padapter->xmitpriv;
@@ -652,6 +655,9 @@ u32	rtw_free_stainfo(_adapter *padapter , struct sta_info *psta)
 	struct mlme_ext_info	*pmlmeinfo = &(pmlmeext->mlmext_info);
 	int pending_qcnt[4];
 	u8 is_pre_link_sta = _FALSE;
+	_list	*phead, *plist;
+	_queue *pfree_recv_queue = &padapter->recvpriv.free_recv_queue;
+	union recv_frame *prframe;
 
 	if (psta == NULL)
 		goto exit;
@@ -769,14 +775,11 @@ u32	rtw_free_stainfo(_adapter *padapter , struct sta_info *psta)
 	/* for A-MPDU Rx reordering buffer control, cancel reordering_ctrl_timer */
 	for (i = 0; i < 16 ; i++) {
 		_irqL irqL;
-		_list	*phead, *plist;
-		union recv_frame *prframe;
 		_queue *ppending_recvframe_queue;
-		_queue *pfree_recv_queue = &padapter->recvpriv.free_recv_queue;
 
 		preorder_ctrl = &psta->recvreorder_ctrl[i];
 		rtw_clear_bit(RTW_RECV_ACK_OR_TIMEOUT, &preorder_ctrl->rec_abba_rsp_ack);
-		
+
 		_cancel_timer_ex(&preorder_ctrl->reordering_ctrl_timer);
 
 
@@ -801,6 +804,20 @@ u32	rtw_free_stainfo(_adapter *padapter , struct sta_info *psta)
 
 	}
 
+	/* CVE-2020-24586, clear defrag queue */
+	pdefrag_q = &psta->sta_recvpriv.defrag_q;
+	enter_critical_bh(&pdefrag_q->lock);
+	phead = get_list_head(pdefrag_q);
+	plist = get_next(phead);
+	while (!rtw_is_list_empty(phead)) {
+		prframe = LIST_CONTAINOR(plist, union recv_frame, u);
+		plist = get_next(plist);
+		rtw_list_delete(&(prframe->u.hdr.list));
+		rtw_free_recvframe(prframe, pfree_recv_queue);
+	}
+	exit_critical_bh(&pdefrag_q->lock);
+
+
 	if (!((psta->state & WIFI_AP_STATE) || MacAddr_isBcst(psta->cmn.mac_addr)) && is_pre_link_sta == _FALSE)
 		rtw_hal_set_odm_var(padapter, HAL_ODM_STA_INFO, psta, _FALSE);
 
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/core/rtw_swcrypto.c b/drivers/net/wireless/rockchip_wlan/rtl8821cs/core/rtw_swcrypto.c
index 2544600ba80f..2f1c343b6d30 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/core/rtw_swcrypto.c
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/core/rtw_swcrypto.c
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017 Realtek Corporation.
@@ -28,20 +27,20 @@
  * @frame: the frame including the mac header, pn and payload
  * @plen: payload length, i.e., length of the plain text, without PN and MIC
  */
-int _rtw_ccmp_encrypt(u8 *key, u32 key_len, uint hdrlen, u8 *frame, uint plen)
+int _rtw_ccmp_encrypt(_adapter *padapter, u8 *key, u32 key_len, uint hdrlen, u8 *frame, uint plen)
 {
 	u8 *enc = NULL;
 	size_t enc_len = 0;
 
 	if (key_len == 16) { /* 128 bits */
-		enc = ccmp_encrypt(key,
+		enc = ccmp_encrypt(padapter, key,
 			frame,
 			hdrlen + plen,
 			hdrlen,
 			(hdrlen == 26) ? (frame + hdrlen - 2) : NULL,
 			NULL, 0, &enc_len);
 	} else if (key_len == 32) { /* 256 bits */
-		enc = ccmp_256_encrypt(key,
+		enc = ccmp_256_encrypt(padapter, key,
 			frame,
 			hdrlen + plen,
 			hdrlen,
@@ -69,7 +68,7 @@ int _rtw_ccmp_encrypt(u8 *key, u32 key_len, uint hdrlen, u8 *frame, uint plen)
  * @frame: the raw frame (@hdrlen + PN + enc_data + MIC)
  * @plen: length of the frame (@hdrlen + PN + enc_data + MIC)
  */
-int _rtw_ccmp_decrypt(u8 *key, u32 key_len, uint hdrlen, u8 *frame,
+int _rtw_ccmp_decrypt(_adapter * padapter, u8 *key, u32 key_len, uint hdrlen, u8 *frame,
 	uint plen)
 {
 	u8 *plain = NULL;
@@ -79,13 +78,13 @@ int _rtw_ccmp_decrypt(u8 *key, u32 key_len, uint hdrlen, u8 *frame,
 	hdr = (const struct ieee80211_hdr *)frame;
 
 	if (key_len == 16) { /* 128 bits */
-		plain = ccmp_decrypt(key,
+		plain = ccmp_decrypt(padapter, key,
 			hdr,
 			frame + hdrlen, /* PN + enc_data + MIC */
 			plen - hdrlen, /* PN + enc_data + MIC */
 			&plain_len);
 	} else if (key_len == 32) { /* 256 bits */
-		plain = ccmp_256_decrypt(key,
+		plain = ccmp_256_decrypt(padapter, key,
 			hdr,
 			frame + hdrlen, /* PN + enc_data + MIC */
 			plen - hdrlen, /* PN + enc_data + MIC */
@@ -132,12 +131,12 @@ int _aes_siv_decrypt(const u8 *key, size_t key_len,
  * @frame: the frame including the mac header, pn and payload
  * @plen: payload length, i.e., length of the plain text, without PN and MIC
  */
-int _rtw_gcmp_encrypt(u8 *key, u32 key_len, uint hdrlen, u8 *frame, uint plen)
+int _rtw_gcmp_encrypt(_adapter * padapter, u8 *key, u32 key_len, uint hdrlen, u8 *frame, uint plen)
 {
 	u8 *enc = NULL;
 	size_t enc_len = 0;
 
-	enc = gcmp_encrypt(key, key_len,
+	enc = gcmp_encrypt(padapter, key, key_len,
 		frame,
 		hdrlen + plen,
 		hdrlen,
@@ -163,7 +162,7 @@ int _rtw_gcmp_encrypt(u8 *key, u32 key_len, uint hdrlen, u8 *frame, uint plen)
  * @frame: the raw frame (@hdrlen + PN + enc_data + MIC)
  * @plen: length of the frame (@hdrlen + PN + enc_data + MIC)
  */
-int _rtw_gcmp_decrypt(u8 *key, u32 key_len, uint hdrlen, u8 *frame, uint plen)
+int _rtw_gcmp_decrypt(_adapter *padapter, u8 *key, u32 key_len, uint hdrlen, u8 *frame, uint plen)
 {
 	u8 *plain = NULL;
 	size_t plain_len = 0;
@@ -171,7 +170,7 @@ int _rtw_gcmp_decrypt(u8 *key, u32 key_len, uint hdrlen, u8 *frame, uint plen)
 
 	hdr = (const struct ieee80211_hdr *)frame;
 
-	plain = gcmp_decrypt(key, key_len,
+	plain = gcmp_decrypt(padapter, key, key_len,
 		hdr,
 		frame + hdrlen, /* PN + enc_data + MIC */
 		plen - hdrlen, /* PN + enc_data + MIC */
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/core/rtw_tdls.c b/drivers/net/wireless/rockchip_wlan/rtl8821cs/core/rtw_tdls.c
index 77cde4739ac4..9973c17ce109 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/core/rtw_tdls.c
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/core/rtw_tdls.c
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017 Realtek Corporation.
@@ -523,7 +522,7 @@ u8 *rtw_tdls_set_ht_cap(_adapter *padapter, u8 *pframe, struct pkt_attrib *pattr
 		padapter->mlmepriv.htpriv.sgi_40m = _FALSE;
 	}
 
-	rtw_restructure_ht_ie(padapter, NULL, pframe, 0, &(pattrib->pktlen), padapter->mlmeextpriv.cur_channel);
+	rtw_restructure_ht_ie(padapter, NULL, pframe, 0, &(pattrib->pktlen), padapter->mlmeextpriv.cur_channel, NULL);
 
 	return pframe + pattrib->pktlen;
 }
@@ -561,7 +560,8 @@ void rtw_tdls_process_vht_cap(_adapter *padapter, struct sta_info *ptdls_sta, u8
 	if (ptdls_sta->flags & WLAN_STA_VHT) {
 		if (REGSTY_IS_11AC_ENABLE(&padapter->registrypriv)
 		    && is_supported_vht(padapter->registrypriv.wireless_mode)
-		    && (!rfctl->country_ent || COUNTRY_CHPLAN_EN_11AC(rfctl->country_ent))) {
+		    && RFCTL_REG_EN_11AC(rfctl)
+		) {
 			ptdls_sta->vhtpriv.vht_option = _TRUE;
 			ptdls_sta->cmn.ra_info.is_vht_enable = _TRUE;
 		}
@@ -740,7 +740,7 @@ u8 *rtw_tdls_set_rsnie(struct tdls_txmgmt *ptxmgmt, u8 *pframe, struct pkt_attri
 
 u8 *rtw_tdls_set_ext_cap(u8 *pframe, struct pkt_attrib *pattrib)
 {
-	return rtw_set_ie(pframe, _EXT_CAP_IE_ , sizeof(TDLS_EXT_CAPIE), TDLS_EXT_CAPIE, &(pattrib->pktlen));
+	return rtw_set_ie(pframe, WLAN_EID_EXT_CAP , sizeof(TDLS_EXT_CAPIE), TDLS_EXT_CAPIE, &(pattrib->pktlen));
 }
 
 u8 *rtw_tdls_set_qos_cap(u8 *pframe, struct pkt_attrib *pattrib)
@@ -1919,13 +1919,15 @@ sint On_TDLS_Setup_Req(_adapter *padapter, union recv_frame *precv_frame, struct
 
 			switch (pIE->ElementID) {
 			case _SUPPORTEDRATES_IE_:
-				_rtw_memcpy(supportRate, pIE->data, pIE->Length);
-				supportRateNum = pIE->Length;
+				if (pIE->Length <= sizeof(supportRate)) {
+					_rtw_memcpy(supportRate, pIE->data, pIE->Length);
+					supportRateNum = pIE->Length;
+				}
 				break;
-			case _COUNTRY_IE_:
+			case WLAN_EID_COUNTRY:
 				break;
 			case _EXT_SUPPORTEDRATES_IE_:
-				if (supportRateNum < sizeof(supportRate)) {
+				if ((supportRateNum + pIE->Length) <= sizeof(supportRate)) {
 					_rtw_memcpy(supportRate + supportRateNum, pIE->data, pIE->Length);
 					supportRateNum += pIE->Length;
 				}
@@ -1936,20 +1938,22 @@ sint On_TDLS_Setup_Req(_adapter *padapter, union recv_frame *precv_frame, struct
 				rsnie_included = 1;
 				if (prx_pkt_attrib->encrypt) {
 					prsnie = (u8 *)pIE;
-					/* Check CCMP pairwise_cipher presence. */
-					ppairwise_cipher = prsnie + 10;
-					_rtw_memcpy(ptdls_sta->TDLS_RSNIE, pIE->data, pIE->Length);
-					pairwise_count = *(u16 *)(ppairwise_cipher - 2);
-					for (k = 0; k < pairwise_count; k++) {
-						if (_rtw_memcmp(ppairwise_cipher + 4 * k, RSN_CIPHER_SUITE_CCMP, 4) == _TRUE)
-							ccmp_included = 1;
+					if (pIE->Length <= sizeof(ptdls_sta->TDLS_RSNIE)) {
+						/* Check CCMP pairwise_cipher presence. */
+						ppairwise_cipher = prsnie + 10;
+						_rtw_memcpy(ptdls_sta->TDLS_RSNIE, pIE->data, pIE->Length);
+						pairwise_count = *(u16 *)(ppairwise_cipher - 2);
+						for (k = 0; k < pairwise_count; k++) {
+							if (_rtw_memcmp(ppairwise_cipher + 4 * k, RSN_CIPHER_SUITE_CCMP, 4) == _TRUE)
+								ccmp_included = 1;
+						}
+
+						if (ccmp_included == 0)
+							txmgmt.status_code = _STATS_INVALID_RSNIE_;
 					}
-
-					if (ccmp_included == 0)
-						txmgmt.status_code = _STATS_INVALID_RSNIE_;
 				}
 				break;
-			case _EXT_CAP_IE_:
+			case WLAN_EID_EXT_CAP:
 				break;
 			case _VENDOR_SPECIFIC_IE_:
 				break;
@@ -2101,13 +2105,15 @@ int On_TDLS_Setup_Rsp(_adapter *padapter, union recv_frame *precv_frame, struct
 
 		switch (pIE->ElementID) {
 		case _SUPPORTEDRATES_IE_:
-			_rtw_memcpy(supportRate, pIE->data, pIE->Length);
-			supportRateNum = pIE->Length;
+			if (pIE->Length <= sizeof(supportRate)) {
+				_rtw_memcpy(supportRate, pIE->data, pIE->Length);
+				supportRateNum = pIE->Length;
+			}
 			break;
-		case _COUNTRY_IE_:
+		case WLAN_EID_COUNTRY:
 			break;
 		case _EXT_SUPPORTEDRATES_IE_:
-			if (supportRateNum < sizeof(supportRate)) {
+			if ((supportRateNum + pIE->Length) <= sizeof(supportRate)) {
 				_rtw_memcpy(supportRate + supportRateNum, pIE->data, pIE->Length);
 				supportRateNum += pIE->Length;
 			}
@@ -2123,7 +2129,7 @@ int On_TDLS_Setup_Rsp(_adapter *padapter, union recv_frame *precv_frame, struct
 				if (_rtw_memcmp(ppairwise_cipher + 4 * k, RSN_CIPHER_SUITE_CCMP, 4) == _TRUE)
 					verify_ccmp = 1;
 			}
-		case _EXT_CAP_IE_:
+		case WLAN_EID_EXT_CAP:
 			break;
 		case _VENDOR_SPECIFIC_IE_:
 			if (_rtw_memcmp((u8 *)pIE + 2, WMM_INFO_OUI, 6) == _TRUE) {
@@ -2866,8 +2872,8 @@ void rtw_build_tdls_setup_req_ies(_adapter *padapter, struct xmit_frame *pxmitfr
 	if ((padapter->mlmepriv.htpriv.ht_option == _TRUE) && (pmlmeext->cur_channel > 14)
 	    && REGSTY_IS_11AC_ENABLE(pregistrypriv)
 	    && is_supported_vht(pregistrypriv->wireless_mode)
-	    && (!rfctl->country_ent || COUNTRY_CHPLAN_EN_11AC(rfctl->country_ent))
-	   ) {
+	    && RFCTL_REG_EN_11AC(rfctl)
+	) {
 		pframe = rtw_tdls_set_aid(padapter, pframe, pattrib);
 		pframe = rtw_tdls_set_vht_cap(padapter, pframe, pattrib);
 	}
@@ -2961,8 +2967,8 @@ void rtw_build_tdls_setup_rsp_ies(_adapter *padapter, struct xmit_frame *pxmitfr
 	if ((padapter->mlmepriv.htpriv.ht_option == _TRUE) && (pmlmeext->cur_channel > 14)
 	    && REGSTY_IS_11AC_ENABLE(pregistrypriv)
 	    && is_supported_vht(pregistrypriv->wireless_mode)
-	    && (!rfctl->country_ent || COUNTRY_CHPLAN_EN_11AC(rfctl->country_ent))
-	   ) {
+	    && RFCTL_REG_EN_11AC(rfctl)
+	) {
 		pframe = rtw_tdls_set_aid(padapter, pframe, pattrib);
 		pframe = rtw_tdls_set_vht_cap(padapter, pframe, pattrib);
 		pframe = rtw_tdls_set_vht_op_mode_notify(padapter, pframe, pattrib, pmlmeext->cur_bwmode);
@@ -3038,8 +3044,8 @@ void rtw_build_tdls_setup_cfm_ies(_adapter *padapter, struct xmit_frame *pxmitfr
 	    && (ptdls_sta->vhtpriv.vht_option == _TRUE) && (pmlmeext->cur_channel > 14)
 	    && REGSTY_IS_11AC_ENABLE(pregistrypriv)
 	    && is_supported_vht(pregistrypriv->wireless_mode)
-	    && (!rfctl->country_ent || COUNTRY_CHPLAN_EN_11AC(rfctl->country_ent))
-	   ) {
+	    && RFCTL_REG_EN_11AC(rfctl)
+	) {
 		pframe = rtw_tdls_set_vht_operation(padapter, pframe, pattrib, pmlmeext->cur_channel);
 		pframe = rtw_tdls_set_vht_op_mode_notify(padapter, pframe, pattrib, pmlmeext->cur_bwmode);
 	}
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/core/rtw_vht.c b/drivers/net/wireless/rockchip_wlan/rtl8821cs/core/rtw_vht.c
index 012ae50c6278..cd35aebdb2b4 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/core/rtw_vht.c
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/core/rtw_vht.c
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017 Realtek Corporation.
@@ -88,11 +87,15 @@ void dump_vht_op_ie_content(void *sel, const u8 *buf, u32 buf_len)
 		return;
 	}
 
-	RTW_PRINT_SEL(sel, "%s, ch0:%u, ch1:%u\n"
-		, vht_op_ch_width_str(GET_VHT_OPERATION_ELE_CHL_WIDTH(buf))
-		, GET_VHT_OPERATION_ELE_CENTER_FREQ1(buf)
-		, GET_VHT_OPERATION_ELE_CENTER_FREQ2(buf)
-	);
+	RTW_PRINT_SEL(sel, "\tVHT Operation Info:\n");
+	RTW_PRINT_SEL(sel, "\tChannel Width: %u\n"
+					, GET_VHT_OPERATION_ELE_CHL_WIDTH(buf));
+	RTW_PRINT_SEL(sel, "\tCenter Frequency Channel for 80 and 160 MHz Operation: %u\n"
+					, GET_VHT_OPERATION_ELE_CENTER_FREQ1(buf));
+	RTW_PRINT_SEL(sel, "\tCenter Frequency Channel for 80+80 MHz Operation: %u\n"
+					, GET_VHT_OPERATION_ELE_CENTER_FREQ2(buf));
+	RTW_PRINT_SEL(sel, "\tVHT Basic MCS Set: 0x%04x\n"
+					, GET_VHT_OPERATION_ELE_BASIC_MCS_SET(buf));
 }
 
 void dump_vht_op_ie(void *sel, const u8 *ie, u32 ie_len)
@@ -224,20 +227,35 @@ u16	rtw_vht_mcs_to_data_rate(u8 bw, u8 short_GI, u8 vht_mcs_rate)
 	return VHT_MCS_DATA_RATE[bw][short_GI][((vht_mcs_rate - MGN_VHT1SS_MCS0) & 0x3f)];
 }
 
-void	rtw_vht_use_default_setting(_adapter *padapter)
+void rtw_vht_use_default_setting(_adapter *padapter)
 {
-	struct mlme_priv		*pmlmepriv = &padapter->mlmepriv;
-	struct vht_priv		*pvhtpriv = &pmlmepriv->vhtpriv;
-	struct registry_priv	*pregistrypriv = &padapter->registrypriv;
-	BOOLEAN		bHwLDPCSupport = _FALSE, bHwSTBCSupport = _FALSE;
+	struct mlme_priv *pmlmepriv = &padapter->mlmepriv;
+	struct vht_priv *pvhtpriv = &pmlmepriv->vhtpriv;
+	struct registry_priv *pregistrypriv = &padapter->registrypriv;
+	BOOLEAN bHwLDPCSupport = _FALSE, bHwSTBCSupport = _FALSE;
 #ifdef CONFIG_BEAMFORMING
-	BOOLEAN		bHwSupportBeamformer = _FALSE, bHwSupportBeamformee = _FALSE;
-	u8	mu_bfer, mu_bfee;
+	BOOLEAN bHwSupportBeamformer = _FALSE, bHwSupportBeamformee = _FALSE;
+	u8 mu_bfer, mu_bfee;
 #endif /* CONFIG_BEAMFORMING */
 	u8 tx_nss, rx_nss;
-	struct mlme_ext_priv	*pmlmeext = &(padapter->mlmeextpriv);
-	struct mlme_ext_info	*pmlmeinfo = &(pmlmeext->mlmext_info);
-	pvhtpriv->sgi_80m = TEST_FLAG(pregistrypriv->short_gi, BIT2) ? _TRUE : _FALSE;
+	u8 rf_type = 0;
+	struct mlme_ext_priv *pmlmeext = &(padapter->mlmeextpriv);
+	struct mlme_ext_info *pmlmeinfo = &(pmlmeext->mlmext_info);
+
+	pvhtpriv->sgi_80m = 0;
+	pvhtpriv->sgi_160m = 0;
+	pvhtpriv->txop_ps = 0;
+	pvhtpriv->htc_vht = 1;
+	pvhtpriv->link_adap_cap = 0;
+	pvhtpriv->tx_ant_pattern= 0;
+	pvhtpriv->rx_ant_pattern= 0;
+	pvhtpriv->ext_nss_bw = 0;
+
+	if (TEST_FLAG(pregistrypriv->short_gi, BIT2) && hal_chk_bw_cap(padapter, BW_CAP_80M))
+		pvhtpriv->sgi_80m = 1;
+
+	if (TEST_FLAG(pregistrypriv->short_gi, BIT3) && hal_chk_bw_cap(padapter, BW_CAP_160M))
+		pvhtpriv->sgi_160m = 1;
 
 	/* LDPC support */
 	rtw_hal_get_def_var(padapter, HAL_DEF_RX_LDPC, (u8 *)&bHwLDPCSupport);
@@ -261,11 +279,12 @@ void	rtw_vht_use_default_setting(_adapter *padapter)
 		if (TEST_FLAG(pregistrypriv->stbc_cap, BIT1))
 			SET_FLAG(pvhtpriv->stbc_cap, STBC_VHT_ENABLE_TX);
 	}
-	rtw_hal_get_def_var(padapter, HAL_DEF_RX_STBC, (u8 *)&bHwSTBCSupport);
-	if (bHwSTBCSupport) {
-		if (TEST_FLAG(pregistrypriv->stbc_cap, BIT0))
-			SET_FLAG(pvhtpriv->stbc_cap, STBC_VHT_ENABLE_RX);
+
+	rtw_hal_get_def_var(padapter, HAL_DEF_RX_STBC, (u8 *)(&pvhtpriv->rx_stbc_nss));
+	if (pvhtpriv->rx_stbc_nss && TEST_FLAG(pregistrypriv->stbc_cap, BIT0)) {
+		SET_FLAG(pvhtpriv->stbc_cap, STBC_VHT_ENABLE_RX);
 	}
+
 	if (pvhtpriv->stbc_cap)
 		RTW_INFO("[VHT] Support STBC = 0x%02X\n", pvhtpriv->stbc_cap);
 
@@ -759,7 +778,6 @@ u32	rtw_build_vht_operation_ie(_adapter *padapter, u8 *pbuf, u8 channel)
 		ChnlWidth = 0;
 	}
 
-
 	SET_VHT_OPERATION_ELE_CHL_WIDTH(operation, ChnlWidth);
 	/* center frequency */
 	SET_VHT_OPERATION_ELE_CHL_CENTER_FREQ1(operation, center_freq);/* Todo: need to set correct center channel */
@@ -797,44 +815,50 @@ u32	rtw_build_vht_op_mode_notify_ie(_adapter *padapter, u8 *pbuf, u8 bw)
 
 u32	rtw_build_vht_cap_ie(_adapter *padapter, u8 *pbuf)
 {
-	u8	bw, rf_num, rx_stbc_nss = 0;
-	u16	HighestRate;
-	u8	*pcap, *pcap_mcs;
-	u32	len = 0;
+	u8 bw, rf_num;
+	u16 HighestRate;
+	u8 *pcap, *pcap_mcs;
+	u32 len = 0;
 	u32 rx_packet_offset, max_recvbuf_sz;
 	struct registry_priv *pregistrypriv = &padapter->registrypriv;
-	struct mlme_priv	*pmlmepriv = &padapter->mlmepriv;
-	struct vht_priv	*pvhtpriv = &pmlmepriv->vhtpriv;
-	struct mlme_ext_priv	*pmlmeext = &padapter->mlmeextpriv;
-	struct mlme_ext_info	*pmlmeinfo = &(pmlmeext->mlmext_info);
+	struct mlme_priv *pmlmepriv = &padapter->mlmepriv;
+	struct vht_priv *pvhtpriv = &pmlmepriv->vhtpriv;
+	struct mlme_ext_priv *pmlmeext = &padapter->mlmeextpriv;
+	struct mlme_ext_info *pmlmeinfo = &(pmlmeext->mlmext_info);
 
 	pcap = pvhtpriv->vht_cap;
 	_rtw_memset(pcap, 0, 32);
 
+	/*
+	* VHT Capabilities Information field : B0 to B31
+	*/
 	/* B0 B1 Maximum MPDU Length */
 	rtw_hal_get_def_var(padapter, HAL_DEF_RX_PACKET_OFFSET, &rx_packet_offset);
 	rtw_hal_get_def_var(padapter, HAL_DEF_MAX_RECVBUF_SZ, &max_recvbuf_sz);
 
-	RTW_DBG("%s, line%d, Available RX buf size = %d bytes\n", __FUNCTION__, __LINE__, max_recvbuf_sz - rx_packet_offset);
+	RTW_DBG("%s, Available RX buf size = %d bytes\n", __FUNCTION__, max_recvbuf_sz - rx_packet_offset);
 
 	if ((max_recvbuf_sz - rx_packet_offset) >= 11454) {
 		SET_VHT_CAPABILITY_ELE_MAX_MPDU_LENGTH(pcap, 2);
-		RTW_INFO("%s, line%d, Set MAX MPDU len = 11454 bytes\n", __FUNCTION__, __LINE__);
+		RTW_INFO("[VHT] Declare supporting MAX MPDU len = 11454 bytes\n");
 	} else if ((max_recvbuf_sz - rx_packet_offset) >= 7991) {
 		SET_VHT_CAPABILITY_ELE_MAX_MPDU_LENGTH(pcap, 1);
-		RTW_INFO("%s, line%d, Set MAX MPDU len = 7991 bytes\n", __FUNCTION__, __LINE__);
+		RTW_INFO("[VHT] Declare supporting MAX MPDU len = 7991 bytes\n");
 	} else if ((max_recvbuf_sz - rx_packet_offset) >= 3895) {
 		SET_VHT_CAPABILITY_ELE_MAX_MPDU_LENGTH(pcap, 0);
-		RTW_INFO("%s, line%d, Set MAX MPDU len = 3895 bytes\n", __FUNCTION__, __LINE__);
+		RTW_INFO("[VHT] Declare supporting MAX MPDU len = 3895 bytes\n");
 	} else
-		RTW_ERR("%s, line%d, Error!! Available RX buf size < 3895 bytes\n", __FUNCTION__, __LINE__);
+		RTW_ERR("[VHT] Error!! Available RX buf size < 3895 bytes\n");
 
 	/* B2 B3 Supported Channel Width Set */
 	if (hal_chk_bw_cap(padapter, BW_CAP_160M) && REGSTY_IS_BW_5G_SUPPORT(pregistrypriv, CHANNEL_WIDTH_160)) {
-		if (hal_chk_bw_cap(padapter, BW_CAP_80_80M) && REGSTY_IS_BW_5G_SUPPORT(pregistrypriv, CHANNEL_WIDTH_80_80))
+		if (hal_chk_bw_cap(padapter, BW_CAP_80_80M) && REGSTY_IS_BW_5G_SUPPORT(pregistrypriv, CHANNEL_WIDTH_80_80)) {
 			SET_VHT_CAPABILITY_ELE_CHL_WIDTH(pcap, 2);
-		else
+			RTW_INFO("[VHT] Declare supporting 160MHz and 80+80MHz\n");
+		} else {
 			SET_VHT_CAPABILITY_ELE_CHL_WIDTH(pcap, 1);
+			RTW_INFO("[VHT] Declare supporting 160MHz\n");
+		}
 	} else
 		SET_VHT_CAPABILITY_ELE_CHL_WIDTH(pcap, 0);
 
@@ -845,12 +869,15 @@ u32	rtw_build_vht_cap_ie(_adapter *padapter, u8 *pbuf)
 	}
 
 	/* B5 ShortGI for 80MHz */
-	SET_VHT_CAPABILITY_ELE_SHORT_GI80M(pcap, pvhtpriv->sgi_80m ? 1 : 0); /* We can receive Short GI of 80M */
+	SET_VHT_CAPABILITY_ELE_SHORT_GI80M(pcap, pvhtpriv->sgi_80m ? 1 : 0);
 	if (pvhtpriv->sgi_80m)
 		RTW_INFO("[VHT] Declare supporting SGI 80MHz\n");
 
-	/* B6 ShortGI for 160MHz */
-	/* SET_VHT_CAPABILITY_ELE_SHORT_GI160M(pcap, pvhtpriv->sgi_80m? 1 : 0); */
+	/* B6 Short GI for 160 and 80+80 MHz */
+	SET_VHT_CAPABILITY_ELE_SHORT_GI160M(pcap, pvhtpriv->sgi_160m ? 1 : 0);
+	if (pvhtpriv->sgi_160m) {
+		RTW_INFO("[VHT] Declare supporting SGI 160MHz and 80+80MHz\n");
+	}
 
 	/* B7 Tx STBC */
 	if (TEST_FLAG(pvhtpriv->stbc_cap, STBC_VHT_ENABLE_TX)) {
@@ -860,62 +887,89 @@ u32	rtw_build_vht_cap_ie(_adapter *padapter, u8 *pbuf)
 
 	/* B8 B9 B10 Rx STBC */
 	if (TEST_FLAG(pvhtpriv->stbc_cap, STBC_VHT_ENABLE_RX)) {
-		rtw_hal_get_def_var(padapter, HAL_DEF_RX_STBC, (u8 *)(&rx_stbc_nss));
-
-		SET_VHT_CAPABILITY_ELE_RX_STBC(pcap, rx_stbc_nss);
-		RTW_INFO("[VHT] Declare supporting RX STBC = %d\n", rx_stbc_nss);
+		SET_VHT_CAPABILITY_ELE_RX_STBC(pcap, pvhtpriv->rx_stbc_nss);
+		RTW_INFO("[VHT] Declare supporting %uSS RX STBC\n", pvhtpriv->rx_stbc_nss);
 	}
+
 	#ifdef CONFIG_BEAMFORMING
 	/* B11 SU Beamformer Capable */
 	if (TEST_FLAG(pvhtpriv->beamform_cap, BEAMFORMING_VHT_BEAMFORMER_ENABLE)) {
 		SET_VHT_CAPABILITY_ELE_SU_BFER(pcap, 1);
-		RTW_INFO("[VHT] Declare supporting SU Bfer\n");
+		RTW_INFO("[VHT] Declare supporting SU Beamformer\n");
 		/* B16 17 18 Number of Sounding Dimensions */
 		rtw_hal_get_def_var(padapter, HAL_DEF_BEAMFORMER_CAP, (u8 *)&rf_num);
 		SET_VHT_CAPABILITY_ELE_SOUNDING_DIMENSIONS(pcap, rf_num);
 		/* B19 MU Beamformer Capable */
 		if (TEST_FLAG(pvhtpriv->beamform_cap, BEAMFORMING_VHT_MU_MIMO_AP_ENABLE)) {
 			SET_VHT_CAPABILITY_ELE_MU_BFER(pcap, 1);
-			RTW_INFO("[VHT] Declare supporting MU Bfer\n");
+			RTW_INFO("[VHT] Declare supporting MU Beamformer\n");
 		}
 	}
 
 	/* B12 SU Beamformee Capable */
 	if (TEST_FLAG(pvhtpriv->beamform_cap, BEAMFORMING_VHT_BEAMFORMEE_ENABLE)) {
 		SET_VHT_CAPABILITY_ELE_SU_BFEE(pcap, 1);
-		RTW_INFO("[VHT] Declare supporting SU Bfee\n");
+		RTW_INFO("[VHT] Declare supporting SU Beamformee\n");
 
 		rtw_hal_get_def_var(padapter, HAL_DEF_BEAMFORMEE_CAP, (u8 *)&rf_num);
 
 		/* IOT action suggested by Yu Chen 2017/3/3 */
-#ifdef CONFIG_80211AC_VHT
 		if ((pmlmeinfo->assoc_AP_vendor == HT_IOT_PEER_BROADCOM) &&
 			!pvhtpriv->ap_bf_cap.is_mu_bfer &&
 			pvhtpriv->ap_bf_cap.su_sound_dim == 2)
 			rf_num = (rf_num >= 2 ? 2 : rf_num);
-#endif
-		/* B13 14 15 Compressed Steering Number of Beamformer Antennas Supported */
-		SET_VHT_CAPABILITY_ELE_BFER_ANT_SUPP(pcap, rf_num);
-		/* B20 SU Beamformee Capable */
+
+		/* B13 14 15 Beamformee STS Capability */
+		SET_VHT_CAPABILITY_ELE_SU_BFEE_STS_CAP(pcap, rf_num);
+
+		/* B20 MU Beamformee Capable */
 		if (TEST_FLAG(pvhtpriv->beamform_cap, BEAMFORMING_VHT_MU_MIMO_STA_ENABLE)) {
 			SET_VHT_CAPABILITY_ELE_MU_BFEE(pcap, 1);
-			RTW_INFO("[VHT] Declare supporting MU Bfee\n");
+			RTW_INFO("[VHT] Declare supporting MU Beamformee\n");
 		}
 	}
 	#endif/*CONFIG_BEAMFORMING*/
 
 	/* B21 VHT TXOP PS */
-	SET_VHT_CAPABILITY_ELE_TXOP_PS(pcap, 0);
+	if (pvhtpriv->txop_ps) {
+		SET_VHT_CAPABILITY_ELE_TXOP_PS(pcap, 1);
+		RTW_INFO("[VHT] Declare supporting VHT TXOP power save\n");
+	}
+
 	/* B22 +HTC-VHT Capable */
-	SET_VHT_CAPABILITY_ELE_HTC_VHT(pcap, 1);
+	if (pvhtpriv->htc_vht) {
+		SET_VHT_CAPABILITY_ELE_HTC_VHT(pcap, 1);
+		RTW_INFO("[VHT] Declare supporting VHT variant HT Control\n");
+	}
+
 	/* B23 24 25 Maximum A-MPDU Length Exponent */
-	if (pregistrypriv->ampdu_factor != 0xFE)
-		SET_VHT_CAPABILITY_ELE_MAX_RXAMPDU_FACTOR(pcap, pregistrypriv->ampdu_factor);
-	else
-		SET_VHT_CAPABILITY_ELE_MAX_RXAMPDU_FACTOR(pcap, 7);
+	SET_VHT_CAPABILITY_ELE_MAX_RXAMPDU_FACTOR(pcap, pvhtpriv->ampdu_len);
+	RTW_INFO("[VHT] Declare supporting RX A-MPDU Length Exponent = %u\n", pvhtpriv->ampdu_len);
+
 	/* B26 27 VHT Link Adaptation Capable */
-	SET_VHT_CAPABILITY_ELE_LINK_ADAPTION(pcap, 0);
+	if (pvhtpriv->link_adap_cap) {
+		SET_VHT_CAPABILITY_ELE_LINK_ADAPTION(pcap, 1);
+		RTW_INFO("[VHT] Declare supporting link adaptation using VHT variant HT Control\n");
+	}
+
+	/* B28 Rx Antenna Pattern Consistency */
+	if (pvhtpriv->rx_ant_pattern) {
+		SET_VHT_CAPABILITY_ELE_RX_ANT_PATTERN(pcap, 1);
+		RTW_INFO("[VHT] Declare supporting RX Antenna Pattern Consistency\n");
+	}
 
+	/* B29 Tx Antenna Pattern Consistency */
+	if (pvhtpriv->tx_ant_pattern) {
+		SET_VHT_CAPABILITY_ELE_TX_ANT_PATTERN(pcap, 1);
+		RTW_INFO("[VHT] Declare supporting TX Antenna Pattern Consistency\n");
+	}
+
+	/* B30 B31 Extended NSS BW Support */
+	SET_VHT_CAPABILITY_ELE_EXT_NSS_BW(pcap, pvhtpriv->ext_nss_bw);
+
+	/*  
+	* Supported VHT-MCS and NSS Set : 8 bytes
+	*/
 	pcap_mcs = GET_VHT_CAPABILITY_ELE_RX_MCS(pcap);
 	_rtw_memcpy(pcap_mcs, pvhtpriv->vht_mcs_map, 2);
 
@@ -936,7 +990,7 @@ u32	rtw_build_vht_cap_ie(_adapter *padapter, u8 *pbuf)
 	return len;
 }
 
-u32 rtw_restructure_vht_ie(_adapter *padapter, u8 *in_ie, u8 *out_ie, uint in_len, uint *pout_len)
+u32 rtw_restructure_vht_ie(_adapter *padapter, u8 *in_ie, u8 *out_ie, uint in_len, uint *pout_len, struct country_chplan *req_chplan)
 {
 	struct rf_ctl_t *rfctl = adapter_to_rfctl(padapter);
 	RT_CHANNEL_INFO *chset = rfctl->channel_set;
@@ -1001,7 +1055,8 @@ u32 rtw_restructure_vht_ie(_adapter *padapter, u8 *in_ie, u8 *out_ie, uint in_le
 			oper_bw = rtw_min(oper_bw, max_bw);
 
 			/* try downgrage bw to fit in channel plan setting */
-			while (!rtw_chset_is_chbw_valid(chset, oper_ch, oper_bw, oper_offset, 1, 1)
+			while ((req_chplan && !rtw_country_chplan_is_chbw_valid(req_chplan, BAND_ON_5G, oper_ch, oper_bw, oper_offset, 1, 1, pregistrypriv))
+				|| (!req_chplan && !rtw_chset_is_chbw_valid(chset, oper_ch, oper_bw, oper_offset, 1, 1))
 				|| (IS_DFS_SLAVE_WITH_RD(rfctl)
 					&& !rtw_rfctl_dfs_domain_unknown(rfctl)
 					&& rtw_chset_is_chbw_non_ocp(chset, oper_ch, oper_bw, oper_offset))
@@ -1015,7 +1070,8 @@ u32 rtw_restructure_vht_ie(_adapter *padapter, u8 *in_ie, u8 *out_ie, uint in_le
 		}
 	}
 
-	rtw_warn_on(!rtw_chset_is_chbw_valid(chset, oper_ch, oper_bw, oper_offset, 1, 1));
+	rtw_warn_on(req_chplan && !rtw_country_chplan_is_chbw_valid(req_chplan, BAND_ON_5G, oper_ch, oper_bw, oper_offset, 1, 1, pregistrypriv));
+	rtw_warn_on(!req_chplan && !rtw_chset_is_chbw_valid(chset, oper_ch, oper_bw, oper_offset, 1, 1));
 	if (IS_DFS_SLAVE_WITH_RD(rfctl) && !rtw_rfctl_dfs_domain_unknown(rfctl))
 		rtw_warn_on(rtw_chset_is_chbw_non_ocp(chset, oper_ch, oper_bw, oper_offset));
 
@@ -1086,10 +1142,9 @@ void rtw_vht_ies_attach(_adapter *padapter, WLAN_BSSID_EX *pnetwork)
 	rtw_vht_use_default_setting(padapter);
 
 	/* VHT Operation mode notifiy bit in Extended IE (127) */
-	SET_EXT_CAPABILITY_ELE_OP_MODE_NOTIF(pmlmepriv->ext_capab_ie_data, 1);
-	pmlmepriv->ext_capab_ie_len = 10;
-	rtw_set_ie(pnetwork->IEs + pnetwork->IELength, EID_EXTCapability, 8, pmlmepriv->ext_capab_ie_data, &len);
-	pnetwork->IELength += pmlmepriv->ext_capab_ie_len;
+	rtw_add_ext_cap_info(pmlmepriv->ext_capab_ie_data, &(pmlmepriv->ext_capab_ie_len), OP_MODE_NOTIFICATION);
+	rtw_update_ext_cap_ie(pmlmepriv->ext_capab_ie_data, pmlmepriv->ext_capab_ie_len, pnetwork->IEs \
+		, &(pnetwork->IELength), _BEACON_IE_OFFSET_);
 
 	/* VHT Capabilities element */
 	cap_len = rtw_build_vht_cap_ie(padapter, pnetwork->IEs + pnetwork->IELength);
@@ -1109,9 +1164,13 @@ void rtw_vht_ies_detach(_adapter *padapter, WLAN_BSSID_EX *pnetwork)
 {
 	struct mlme_priv *pmlmepriv = &(padapter->mlmepriv);
 
-	rtw_remove_bcn_ie(padapter, pnetwork, EID_EXTCapability);
+	rtw_remove_ext_cap_info(pmlmepriv->ext_capab_ie_data, &(pmlmepriv->ext_capab_ie_len), OP_MODE_NOTIFICATION);
+	rtw_update_ext_cap_ie(pmlmepriv->ext_capab_ie_data, pmlmepriv->ext_capab_ie_len, pnetwork->IEs \
+		, &(pnetwork->IELength), _BEACON_IE_OFFSET_);
+
 	rtw_remove_bcn_ie(padapter, pnetwork, EID_VHTCapability);
 	rtw_remove_bcn_ie(padapter, pnetwork, EID_VHTOperation);
+	rtw_remove_bcn_ie(padapter, pnetwork, EID_VHTTransmitPower);
 
 	pmlmepriv->vhtpriv.vht_option = _FALSE;
 }
@@ -1138,5 +1197,86 @@ void rtw_check_for_vht20(_adapter *adapter, u8 *ies, int ies_len)
 		}
 	}
 }
+
+/* We need to update the (mlmepriv->vhtpriv) */
+void rtw_update_drv_vht_cap(_adapter *padapter, u8 *vht_cap_ie)
+{
+	struct mlme_priv *pmlmepriv = &(padapter->mlmepriv);
+	struct vht_priv *pvhtpriv = &(pmlmepriv->vhtpriv);
+	struct registry_priv *pregpriv = &padapter->registrypriv;
+	s32 ie_len = 0;
+	u32 rx_packet_offset, max_recvbuf_sz, available_mpdu_sz;
+	u8 cap_val;
+	u8 *pvht_cap;
+
+	/* Initialize VHT capability element */
+	rtw_vht_use_default_setting(padapter);
+
+	RTW_INFO("Don't setting VHT capability IE from hostap, builded by driver temporarily\n");
+	rtw_build_vht_cap_ie(padapter, vht_cap_ie);
+}
+
+void rtw_set_vht_ext_cap(_adapter *padapter, WLAN_BSSID_EX *pnetwork)
+{
+	struct mlme_priv *pmlmepriv = &(padapter->mlmepriv);
+	struct vht_priv *pvhtpriv = &(pmlmepriv->vhtpriv);
+	u32 frlen = 0;
+	u32 ie_len;
+	u32 ies_len = pnetwork->IELength - _BEACON_IE_OFFSET_;
+	u8 *ies = pnetwork->IEs + _BEACON_IE_OFFSET_;
+	u8 *pbuf;
+
+	rtw_add_ext_cap_info(pmlmepriv->ext_capab_ie_data, &(pmlmepriv->ext_capab_ie_len), OP_MODE_NOTIFICATION);
+	rtw_update_ext_cap_ie(pmlmepriv->ext_capab_ie_data, pmlmepriv->ext_capab_ie_len, pnetwork->IEs \
+		, &(pnetwork->IELength), _BEACON_IE_OFFSET_);
+}
+
+void rtw_check_vht_ies(_adapter *padapter, WLAN_BSSID_EX *pnetwork)
+{
+	struct mlme_priv *pmlmepriv = &(padapter->mlmepriv);
+	struct vht_priv *pvhtpriv = &(pmlmepriv->vhtpriv);
+	u32 ie_len;
+	u32 ies_len = pnetwork->IELength - _BEACON_IE_OFFSET_;
+	u8 *ies = pnetwork->IEs + _BEACON_IE_OFFSET_;
+	u8 *vht_cap_ie, *vht_op_ie;
+
+	vht_cap_ie = rtw_get_ie(ies, EID_VHTCapability, &ie_len, ies_len);
+	vht_op_ie = rtw_get_ie(ies, EID_VHTOperation, &ie_len, ies_len);
+
+	rtw_update_drv_vht_cap(padapter, vht_cap_ie);
+	rtw_set_vht_ext_cap(padapter, pnetwork);
+
+	/* Backup these two VHT IEs from hostapd/wpa_supplicant for restore usage */
+	if (vht_cap_ie != NULL)
+		_rtw_memcpy(pvhtpriv->vht_cap_ie_backup, vht_cap_ie + 2, VHT_CAP_IE_LEN);
+
+	if (vht_op_ie != NULL)
+		_rtw_memcpy(pvhtpriv->vht_op_ie_backup, vht_op_ie + 2, VHT_OP_IE_LEN);
+
+	/* TODO : We don't handle this IE like before, so remove it */
+	rtw_remove_bcn_ie(padapter, pnetwork, EID_VHTTransmitPower);
+}
+
+void rtw_reattach_vht_ies(_adapter *padapter, WLAN_BSSID_EX *pnetwork)
+{
+	struct mlme_priv *pmlmepriv = &(padapter->mlmepriv);
+	struct vht_priv *pvhtpriv = &(pmlmepriv->vhtpriv);
+	u8 *vht_cap_ie = pnetwork->IEs + pnetwork->IELength;
+	u8 *vht_op_ie;
+
+	RTW_INFO(FUNC_ADPT_FMT"\n", FUNC_ADPT_ARG(padapter));
+
+	if (pnetwork->IEs != NULL) {
+		vht_op_ie = rtw_set_ie(vht_cap_ie, EID_VHTCapability, VHT_CAP_IE_LEN,
+			pvhtpriv->vht_cap_ie_backup, &(pnetwork->IELength));
+
+		rtw_set_ie(vht_op_ie, EID_VHTOperation, VHT_OP_IE_LEN,
+			pvhtpriv->vht_op_ie_backup, &(pnetwork->IELength));
+
+		rtw_set_vht_ext_cap(padapter, pnetwork);
+	}
+
+	pmlmepriv->vhtpriv.vht_option = _TRUE;
+}
 #endif /* CONFIG_AP_MODE */
 #endif /* CONFIG_80211AC_VHT */
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/core/rtw_wapi.c b/drivers/net/wireless/rockchip_wlan/rtl8821cs/core/rtw_wapi.c
index dd95bbcf09e4..affe1c8d47aa 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/core/rtw_wapi.c
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/core/rtw_wapi.c
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2016 - 2017 Realtek Corporation.
@@ -297,7 +296,7 @@ void rtw_wapi_init(_adapter *padapter)
 	int				i;
 
 	WAPI_TRACE(WAPI_INIT, "===========> %s\n", __FUNCTION__);
-	RT_ASSERT_RET(padapter);
+	RT_WAPI_ASSERT_RET(padapter);
 
 	if (!padapter->WapiSupport) {
 		WAPI_TRACE(WAPI_INIT, "<========== %s, WAPI not supported!\n", __FUNCTION__);
@@ -331,7 +330,7 @@ void rtw_wapi_init(_adapter *padapter)
 void rtw_wapi_free(_adapter *padapter)
 {
 	WAPI_TRACE(WAPI_INIT, "===========> %s\n", __FUNCTION__);
-	RT_ASSERT_RET(padapter);
+	RT_WAPI_ASSERT_RET(padapter);
 
 	if (!padapter->WapiSupport) {
 		WAPI_TRACE(WAPI_INIT, "<========== %s, WAPI not supported!\n", __FUNCTION__);
@@ -346,7 +345,7 @@ void rtw_wapi_free(_adapter *padapter)
 void rtw_wapi_disable_tx(_adapter *padapter)
 {
 	WAPI_TRACE(WAPI_INIT, "===========> %s\n", __FUNCTION__);
-	RT_ASSERT_RET(padapter);
+	RT_WAPI_ASSERT_RET(padapter);
 
 	if (!padapter->WapiSupport) {
 		WAPI_TRACE(WAPI_INIT, "<========== %s, WAPI not supported!\n", __FUNCTION__);
@@ -477,14 +476,7 @@ u8 rtw_wapi_check_for_drop(
 
 	if (precv_hdr->bIsWaiPacket != 0) {
 		if (precv_hdr->bIsWaiPacket == 0x8) {
-
-			RTW_INFO("rtw_wapi_check_for_drop: dump packet\n");
-			for (i = 0; i < 50; i++) {
-				RTW_INFO("%02X  ", ptr[i]);
-				if ((i + 1) % 8 == 0)
-					RTW_INFO("\n");
-			}
-			RTW_INFO("\n rtw_wapi_check_for_drop: dump packet\n");
+			WAPI_DATA(WAPI_RX, "rtw_wapi_check_for_drop() dump packet", ptr, 50);
 
 			for (i = 0; i < 16; i++) {
 				if (ptr[i + 27] != 0)
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/core/rtw_wapi_sms4.c b/drivers/net/wireless/rockchip_wlan/rtl8821cs/core/rtw_wapi_sms4.c
index 5eaa5be44c91..4b7cf957c8f2 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/core/rtw_wapi_sms4.c
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/core/rtw_wapi_sms4.c
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2016 - 2017 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/core/rtw_wlan_util.c b/drivers/net/wireless/rockchip_wlan/rtl8821cs/core/rtw_wlan_util.c
index e162b0867dd3..68c5ab408a47 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/core/rtw_wlan_util.c
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/core/rtw_wlan_util.c
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017 Realtek Corporation.
@@ -555,6 +554,8 @@ void set_channel_bwmode(_adapter *padapter, unsigned char channel, unsigned char
 			rtw_hal_ch_sw_iqk_info_backup(padapter);
 #endif
 
+		rtw_odm_adaptivity_update(adapter_to_dvobj(padapter));
+
 #ifdef CONFIG_DFS_MASTER
 		if (new_overlap_radar_detect_ch)
 			rtw_odm_radar_detect_enable(padapter);
@@ -2481,7 +2482,7 @@ int _rtw_get_bcn_keys(u8 *cap_info, u32 buf_len, u8 def_ch, ADAPTER *adapter
 		recv_beacon->encryp_protocol = ENCRYP_PROTOCOL_WPA2;
 		rtw_parse_wpa2_ie(elems.rsn_ie - 2, elems.rsn_ie_len + 2,
 			&recv_beacon->group_cipher, &recv_beacon->pairwise_cipher,
-			NULL, &recv_beacon->akm, NULL);
+			NULL, &recv_beacon->akm, NULL, NULL);
 	}
 	/* checking WPA secon */
 	else if (elems.wpa_ie && elems.wpa_ie_len) {
@@ -2637,23 +2638,32 @@ int rtw_check_bcn_info(ADAPTER *Adapter, u8 *pframe, u32 packet_len)
 
 	if (check_fwstate(pmlmepriv, WIFI_CSA_UPDATE_BEACON)) {
 		u8 u_ch, u_offset, u_bw;
-		struct sta_info	*psta = NULL;
+		struct sta_info *psta = NULL;
+
+		rtw_mi_get_ch_setting_union(Adapter, &u_ch, &u_bw, &u_offset);
+		/* RTW_INFO("u_ch=%d, recv_beacon.ch=%d\n", u_ch, recv_beacon.ch); */
+		if (pmlmepriv->bcn_cnts_after_csa < 5) {
+			if (u_ch == recv_beacon.ch)
+				pmlmepriv->bcn_cnts_after_csa += 1;
+			goto exit_success;
+		} else
+			pmlmepriv->bcn_cnts_after_csa = 0;
+
 		_rtw_memcpy(cur_beacon, &recv_beacon, sizeof(recv_beacon));
 		clr_fwstate(pmlmepriv, WIFI_CSA_UPDATE_BEACON);
-		rtw_mi_get_ch_setting_union(Adapter, &u_ch, &u_bw, &u_offset);
-		
+
 		/* RTW_INFO("u_ch=%d, u_bw=%d, u_offset=%d \n", u_ch, u_bw, u_offset);
 		RTW_INFO("recv_beacon.ch=%d, recv_beacon.bw=%d, recv_beacon.offset=%d \n", recv_beacon.ch, recv_beacon.bw, recv_beacon.offset); */
 		/* rtw_dump_bcn_keys(RTW_DBGDUMP, &recv_beacon); */
-		
+
 		/* RTW_INFO("_cancel_timer_async csa_timer\n"); */
 		_cancel_timer_async(&pmlmeext->csa_timer);
-		
+
 		/* beacon bw/offset is different from CSA IE */
-		if((recv_beacon.bw > u_bw) || 
+		if((recv_beacon.bw > u_bw) ||
 			((recv_beacon.offset != HAL_PRIME_CHNL_OFFSET_DONT_CARE) && ((u_offset != HAL_PRIME_CHNL_OFFSET_DONT_CARE))
 			&& (recv_beacon.offset != u_offset))) {
-			
+
 			/*  update ch, bw, offset for all asoc STA ifaces */
 			if (ifbmp_s) {
 				_adapter *iface;
@@ -2663,14 +2673,14 @@ int rtw_check_bcn_info(ADAPTER *Adapter, u8 *pframe, u32 packet_len)
 					iface = dvobj->padapters[i];
 					if (!iface || !(ifbmp_s & BIT(iface->iface_id)))
 						continue;
-					
+
 					iface->mlmeextpriv.cur_channel = recv_beacon.ch;
 					iface->mlmeextpriv.cur_bwmode = recv_beacon.bw;
 					iface->mlmeextpriv.cur_ch_offset = recv_beacon.offset;
 					iface->mlmepriv.cur_network.network.Configuration.DSConfig = recv_beacon.ch;
 				}
 			}
-			
+
 #ifdef CONFIG_AP_MODE
 			if (ifbmp_m) {
 				rtw_change_bss_chbw_cmd(dvobj_get_primary_adapter(dvobj), 0
@@ -2679,23 +2689,24 @@ int rtw_check_bcn_info(ADAPTER *Adapter, u8 *pframe, u32 packet_len)
 #endif
 			{
 				#ifdef CONFIG_DFS_MASTER
-				rtw_dfs_rd_en_decision(dvobj_get_primary_adapter(dvobj), MLME_OPCH_SWITCH, ifbmp_s);
+				rtw_dfs_rd_en_decision(dvobj_get_primary_adapter(dvobj), MLME_OPCH_SWITCH, 0);
 				#endif
 				rtw_set_chbw_cmd(Adapter, recv_beacon.ch, recv_beacon.bw, recv_beacon.offset, 0);
 			}
 			rtw_mi_get_ch_setting_union(Adapter, &u_ch, &u_bw, &u_offset);
-		
+
 			/* RTW_INFO("u_ch=%d, u_bw=%d, u_offset=%d \n", u_ch, u_bw, u_offset); */
 		} else {
 			RTW_INFO("u_ch=%d, u_bw=%d, u_offset=%d, recv_beacon.ch=%d, recv_beacon.bw=%d, recv_beacon.offset=%d\n"
 			, u_ch, u_bw, u_offset, recv_beacon.ch, recv_beacon.bw, recv_beacon.offset);
 		}
-		
+
 		rtw_iqk_cmd(Adapter, 0);
 		psta = rtw_get_stainfo(&Adapter->stapriv, get_bssid(&Adapter->mlmepriv));
 		if (psta)
 			rtw_dm_ra_mask_wk_cmd(Adapter, (u8 *)psta);
-		
+
+		RTW_INFO("csa : update beacon done, WIFI_CSA_UPDATE_BEACON is clear\n");
 	}
 
 #ifdef CONFIG_BCN_CNT_CONFIRM_HDL
@@ -2789,7 +2800,7 @@ void update_beacon_info(_adapter *padapter, u8 *pframe, uint pkt_len, struct sta
 			break;
 
 #ifdef CONFIG_TDLS
-		case _EXT_CAP_IE_:
+		case WLAN_EID_EXT_CAP:
 			if (check_ap_tdls_prohibited(pIE->data, pIE->Length) == _TRUE)
 				ptdlsinfo->ap_prohibited = _TRUE;
 			if (check_ap_tdls_ch_switching_prohibited(pIE->data, pIE->Length) == _TRUE)
@@ -2808,21 +2819,22 @@ void update_beacon_info(_adapter *padapter, u8 *pframe, uint pkt_len, struct sta
 void process_csa_ie(_adapter *padapter, u8 *ies, uint ies_len)
 {
 	struct rf_ctl_t *rfctl = adapter_to_rfctl(padapter);
-		struct mlme_ext_priv *pmlmeext = &padapter->mlmeextpriv;
+	struct mlme_ext_priv *pmlmeext = &padapter->mlmeextpriv;
 	struct mlme_ext_info *pmlmeinfo = &(pmlmeext->mlmext_info);
+	struct mlme_priv *pmlmepriv = &padapter->mlmepriv;
 	unsigned int i, j, countdown;
-	PNDIS_802_11_VARIABLE_IEs	pIE, sub_pie;
+	PNDIS_802_11_VARIABLE_IEs pIE, sub_pie;
 	u8 ch = 0, csa_ch_offset = 0, csa_ch_width = 0, csa_ch_freq_seg0 = 0, csa_ch_freq_seg1 = 0, csa_switch_cnt = 0;
 
-	/* TODO: compare with scheduling CSA */
-	if (rfctl->csa_ch)
+	/* compare with scheduling CSA to block incoming CSA IE */
+	if (rfctl->csa_ch || check_fwstate(pmlmepriv, WIFI_CSA_UPDATE_BEACON))
 		return;
 
 	for (i = 0; i + 1 < ies_len;) {
 		pIE = (PNDIS_802_11_VARIABLE_IEs)(ies + i);
 
 		switch (pIE->ElementID) {
-		case _CH_SWTICH_ANNOUNCE_:
+		case WLAN_EID_CHANNEL_SWITCH:
 			ch = *(pIE->data + 1);
 			csa_switch_cnt = *(pIE->data + 2);
 			break;
@@ -2848,7 +2860,6 @@ void process_csa_ie(_adapter *padapter, u8 *ies, uint ies_len)
 				}
 				j += (sub_pie->Length + 2);
 			}
-			
 			break;
 		default:
 			break;
@@ -2857,17 +2868,33 @@ void process_csa_ie(_adapter *padapter, u8 *ies, uint ies_len)
 		i += (pIE->Length + 2);
 	}
 
+	/* Doesn't support switch bandwidth/offset in the same channel for now */
+	if (ch == rtw_mi_get_union_chan(padapter)) {
+		RTW_ERR("%s : receive the same channel from CSA IE, so ignore it\n", __func__);
+		return;
+	}
+
 	if (ch != 0) {
 		struct dvobj_priv *dvobj = adapter_to_dvobj(padapter);
 		_adapter *pri_adapter = dvobj_get_primary_adapter(dvobj);
-		
+		u8 ifbmp_m = rtw_mi_get_ap_mesh_ifbmp(pri_adapter);
+
 		rfctl->csa_ch = ch;
 		rfctl->csa_switch_cnt = csa_switch_cnt;
 		rfctl->csa_ch_offset = csa_ch_offset;
 		rfctl->csa_ch_width = csa_ch_width;
 		rfctl->csa_ch_freq_seg0 = csa_ch_freq_seg0;
 		rfctl->csa_ch_freq_seg1 = csa_ch_freq_seg1;
-		
+
+		#ifdef CONFIG_AP_MODE
+		if(ifbmp_m) {
+			rfctl->ap_csa_en = STA_RX_CSA;
+			rfctl->ap_csa_ch = ch;
+			rfctl->ap_csa_switch_cnt = csa_switch_cnt;
+			rtw_set_ap_csa_cmd(pri_adapter);
+		}
+		#endif
+
 		countdown = pmlmeinfo->network.Configuration.BeaconPeriod * (csa_switch_cnt+1); /* ms */
 		RTW_INFO("csa: set countdown timer to %d ms\n", countdown);
 		_set_timer(&pri_adapter->mlmeextpriv.csa_timer, countdown);
@@ -2876,6 +2903,76 @@ void process_csa_ie(_adapter *padapter, u8 *ies, uint ies_len)
 }
 #endif /* CONFIG_DFS */
 
+#ifdef CONFIG_80211D
+bool rtw_iface_accept_country_ie(_adapter *adapter)
+{
+	struct rf_ctl_t *rfctl = adapter_to_rfctl(adapter);
+
+	if (!(BIT(adapter->iface_id) & rfctl->country_ie_slave_en_ifbmp))
+		return 0;
+	if (!MLME_IS_STA(adapter))
+		return 0;
+	if (!MLME_IS_GC(adapter)) {
+		if (!(rfctl->country_ie_slave_en_role & COUNTRY_IE_SLAVE_EN_ROLE_STA))
+			return 0;
+	} else {
+		if (!(rfctl->country_ie_slave_en_role & COUNTRY_IE_SLAVE_EN_ROLE_GC))
+			return 0;
+	}
+	return 1;
+}
+
+void process_country_ie(_adapter *adapter, u8 *ies, uint ies_len)
+{
+	struct rf_ctl_t *rfctl = adapter_to_rfctl(adapter);
+
+	if (rfctl->regd_src == REGD_SRC_RTK_PRIV
+		&& !rtw_rfctl_is_disable_sw_channel_plan(rfctl_to_dvobj(rfctl))
+		&& !rfctl->csa_ch /* don't process country ie when under CSA processing */
+	) {
+		struct mlme_priv *mlme = &adapter->mlmepriv;
+		const u8 *ie = NULL;
+		sint ie_len = 0;
+
+		if (rtw_iface_accept_country_ie(adapter)) {
+			ie = rtw_get_ie(ies, WLAN_EID_COUNTRY, &ie_len, ies_len);
+			if (ie) {
+				if (ie_len < 6) {
+					ie = NULL;
+					ie_len = 0;
+				} else
+					ie_len += 2;
+			}
+		}
+
+		if (!mlme->recv_country_ie && !ie)
+			return;
+		if (mlme->recv_country_ie_len == ie_len
+			&& _rtw_memcmp(mlme->recv_country_ie, ie, ie_len) == _TRUE)
+			return;
+
+		if (!ie) {
+			rtw_buf_free(&mlme->recv_country_ie, &mlme->recv_country_ie_len);
+			rtw_apply_recv_country_ie_cmd(adapter, 0, 0, 0, NULL);
+		} else {
+			char ori_alpha2[2] = {0, 0};
+
+			if (mlme->recv_country_ie)
+				_rtw_memcpy(ori_alpha2, mlme->recv_country_ie + 2, 2);
+
+			rtw_buf_update(&mlme->recv_country_ie, &mlme->recv_country_ie_len, ie, ie_len);
+			/* for now only country code is used */
+			if (_rtw_memcmp(ori_alpha2, mlme->recv_country_ie + 2, 2) == _TRUE)
+				return;
+			RTW_INFO(FUNC_ADPT_FMT" country_ie alpha2 changed\n", FUNC_ADPT_ARG(adapter));
+			rtw_apply_recv_country_ie_cmd(adapter, 0
+				, mlme->cur_beacon_keys.ch > 14 ? BAND_ON_5G : BAND_ON_2_4G
+				, mlme->cur_beacon_keys.ch, mlme->recv_country_ie);
+		}
+	}
+}
+#endif /* CONFIG_80211D */
+
 enum eap_type parsing_eapol_packet(_adapter *padapter, u8 *key_payload, struct sta_info *psta, u8 trx_type)
 {
 	struct security_priv *psecuritypriv = &(padapter->securitypriv);
@@ -2954,7 +3051,7 @@ unsigned int is_ap_in_tkip(_adapter *padapter)
 			case _RSN_IE_2_:
 				if (_rtw_memcmp((pIE->data + 8), RSN_TKIP_CIPHER, 4))
 					return _TRUE;
-
+				break;
 			default:
 				break;
 			}
@@ -2991,7 +3088,7 @@ unsigned int should_forbid_n_rate(_adapter *padapter)
 				if ((_rtw_memcmp((pIE->data + 8), RSN_CIPHER_SUITE_CCMP, 4))  ||
 				    (_rtw_memcmp((pIE->data + 12), RSN_CIPHER_SUITE_CCMP, 4)))
 					return _FALSE;
-
+				break;
 			default:
 				break;
 			}
@@ -3451,7 +3548,6 @@ void update_capinfo(PADAPTER Adapter, u16 updateCap)
 void update_wireless_mode(_adapter *padapter)
 {
 	int ratelen, network_type = 0;
-	u32 SIFS_Timer;
 	struct mlme_ext_priv	*pmlmeext = &padapter->mlmeextpriv;
 	struct mlme_ext_info	*pmlmeinfo = &(pmlmeext->mlmext_info);
 	WLAN_BSSID_EX		*cur_network = &(pmlmeinfo->network);
@@ -3491,22 +3587,8 @@ void update_wireless_mode(_adapter *padapter)
 
 #ifndef RTW_HALMAC
 	/* HALMAC IC do not set HW_VAR_RESP_SIFS here */
-#if 0
-	if ((pmlmeext->cur_wireless_mode == WIRELESS_11G) ||
-	    (pmlmeext->cur_wireless_mode == WIRELESS_11BG)) /* WIRELESS_MODE_G) */
-		SIFS_Timer = 0x0a0a;/* CCK */
-	else
-		SIFS_Timer = 0x0e0e;/* pHalData->SifsTime; //OFDM */
-#endif
-
-	SIFS_Timer = 0x0a0a0808; /* 0x0808->for CCK, 0x0a0a->for OFDM
-                              * change this value if having IOT issues. */
-
-	rtw_hal_set_hwreg(padapter, HW_VAR_RESP_SIFS, (u8 *)&SIFS_Timer);
+	rtw_hal_set_hwreg(padapter, HW_VAR_RESP_SIFS, NULL);
 #endif
-
-	rtw_hal_set_hwreg(padapter, HW_VAR_WIRELESS_MODE, (u8 *)&(pmlmeext->cur_wireless_mode));
-
 	if ((pmlmeext->cur_wireless_mode & WIRELESS_11B)
 		#ifdef CONFIG_P2P
 		&& (rtw_p2p_chk_state(pwdinfo, P2P_STATE_NONE)
@@ -4773,10 +4855,12 @@ void rtw_dump_priv_pattern(_adapter *adapter, u8 idx)
 
 void rtw_wow_pattern_sw_dump(_adapter *adapter)
 {
-	int i;
+	int i = 0, total = 0;
+	struct pwrctrl_priv *pwrpriv = adapter_to_pwrctl(adapter);
+	total = pwrpriv->wowlan_pattern_idx;
 
 	RTW_INFO("********[RTK priv-patterns]*********\n");
-	for (i = 0 ; i < MAX_WKFM_CAM_NUM; i++)
+	for (i = 0 ; i < total; i++)
 		rtw_dump_priv_pattern(adapter, i);
 }
 
@@ -5230,6 +5314,8 @@ int rtw_dev_nlo_info_set(struct pno_nlo_info *nlo_info, pno_ssid_t *ssid,
 		RTW_INFO("Error, wpa_supplicant.conf doesn't exist.\n");
 		RTW_INFO("Error, cipher array using default value.\n");
 		return 0;
+	} else {
+		RTW_INFO("Open wpa_supplicant.conf successfully.\n");
 	}
 
 	len = i_size_read(fp->f_path.dentry->d_inode);
@@ -5245,7 +5331,11 @@ int rtw_dev_nlo_info_set(struct pno_nlo_info *nlo_info, pno_ssid_t *ssid,
 	source = rtw_zmalloc(2048);
 
 	if (source != NULL) {
+		#if (LINUX_VERSION_CODE >= KERNEL_VERSION(4, 14, 0))
+		len = kernel_read(fp, source, len, &pos);
+		#else
 		len = vfs_read(fp, source, len, &pos);
+		#endif
 		rtw_parse_cipher_list(nlo_info, source);
 		rtw_mfree(source, 2048);
 	}
@@ -5273,6 +5363,7 @@ int rtw_dev_ssid_list_set(struct pno_ssid_list *pno_ssid_list,
 	return 0;
 }
 
+#ifndef RTW_HALMAC
 int rtw_dev_scan_info_set(_adapter *padapter, pno_ssid_t *ssid,
 	  unsigned char ch, unsigned char ch_offset, unsigned short bw_mode)
 {
@@ -5306,6 +5397,7 @@ int rtw_dev_scan_info_set(_adapter *padapter, pno_ssid_t *ssid,
 		 scan_info->orig_bw, scan_info->orig_40_offset);
 	return 0;
 }
+#endif
 
 int rtw_dev_pno_set(struct net_device *net, pno_ssid_t *ssid, int num,
 		    int pno_time, int pno_repeat, int pno_freq_expo_max)
@@ -5330,14 +5422,18 @@ int rtw_dev_pno_set(struct net_device *net, pno_ssid_t *ssid, int num,
 			(pno_nlo_info_t *)rtw_zmalloc(sizeof(pno_nlo_info_t));
 		pwrctl->pno_ssid_list =
 			(pno_ssid_list_t *)rtw_zmalloc(sizeof(pno_ssid_list_t));
+		#ifndef RTW_HALMAC
 		pwrctl->pscan_info =
 			(pno_scan_info_t *)rtw_zmalloc(sizeof(pno_scan_info_t));
+		#endif
 	}
 
 	if (pwrctl->pnlo_info == NULL ||
+	    #ifndef RTW_HALMAC
 	    pwrctl->pscan_info == NULL ||
+	    #endif
 	    pwrctl->pno_ssid_list == NULL) {
-		RTW_INFO("%s, ERROR: alloc nlo_info, ssid_list, scan_info fail\n", __func__);
+		RTW_INFO("%s, ERROR: alloc memory fail\n", __func__);
 		goto failing;
 	}
 
@@ -5351,9 +5447,11 @@ int rtw_dev_pno_set(struct net_device *net, pno_ssid_t *ssid, int num,
 	/* SSID Info */
 	ret = rtw_dev_ssid_list_set(pwrctl->pno_ssid_list, ssid, num);
 
+	#ifndef RTW_HALMAC
 	/* SCAN Info */
 	ret = rtw_dev_scan_info_set(padapter, ssid, pmlmeext->cur_channel,
 			    pmlmeext->cur_ch_offset, pmlmeext->cur_bwmode);
+	#endif
 
 	RTW_INFO("+%s num: %d, pno_time: %d, pno_repeat:%d, pno_freq_expo_max:%d+\n",
 		 __func__, num, pno_time, pno_repeat, pno_freq_expo_max);
@@ -5369,10 +5467,12 @@ int rtw_dev_pno_set(struct net_device *net, pno_ssid_t *ssid, int num,
 		rtw_mfree((u8 *)pwrctl->pno_ssid_list, sizeof(pno_ssid_list_t));
 		pwrctl->pno_ssid_list = NULL;
 	}
+	#ifndef RTW_HALMAC
 	if (pwrctl->pscan_info) {
 		rtw_mfree((u8 *)pwrctl->pscan_info, sizeof(pno_scan_info_t));
 		pwrctl->pscan_info = NULL;
 	}
+	#endif
 
 	return -1;
 }
@@ -5399,6 +5499,7 @@ void rtw_dev_pno_debug(struct net_device *net)
 			pwrctl->pnlo_info->ssid_cipher_info[i], pwrctl->pnlo_info->ssid_channel_info[i]);
 	}
 
+	#ifndef RTW_HALMAC
 	RTW_INFO("******SCAN_INFO******\n");
 	RTW_INFO("ch_num: %d\n", pwrctl->pscan_info->channel_num);
 	RTW_INFO("orig_ch: %d\n", pwrctl->pscan_info->orig_ch);
@@ -5411,6 +5512,7 @@ void rtw_dev_pno_debug(struct net_device *net)
 			 pwrctl->pscan_info->ssid_channel_info[i].tx_power,
 			 pwrctl->pscan_info->ssid_channel_info[i].channel);
 	}
+	#endif
 	RTW_INFO("*****************\n");
 }
 #endif /* CONFIG_PNO_SET_DEBUG */
@@ -5661,3 +5763,158 @@ void rtw_ch_util_rpt(_adapter *adapter)
 }
 #endif
 
+inline u8 rtw_rx_dbg_monitor_condition_chk(
+	_adapter *padapter, u8 *ip, u32 port, u8 condition)
+{
+	struct recv_priv  *precvpriv = &(padapter->recvpriv);
+	u8 need_chk = _FALSE;
+
+	if (precvpriv->ip_statistic.enabled == _FALSE)
+		goto exit;
+
+	switch (condition) {
+		case 1:
+			if (ip && _rtw_memcmp(precvpriv->ip_statistic.ip, ip, 4))
+				need_chk = _TRUE;
+			break;
+		case 2:
+			if (precvpriv->ip_statistic.dst_port == port)
+				need_chk = _TRUE;
+			break;
+		default:
+			break;
+	}
+
+exit:
+	return need_chk;
+}
+
+void rtw_dbg_rx_iperf_udp_data_chk(_adapter *padapter, u8 *pdata)
+{
+	struct recv_priv *precvpriv = &(padapter->recvpriv);
+	struct rtw_ip_dbg_cnt_statistic *st = &(precvpriv->ip_statistic);
+	u8 iperf_start_seq, iperf_seq_offset;
+	u16 udp_data_len;
+	u32 cur_iperf_seq, end_boundary = 0xffff;
+
+	/* no application data */
+	udp_data_len = __be16_to_cpu(*((u16 *)(pdata + 4)));
+	if (udp_data_len < 16)
+		return;
+
+	/* RTW_INFO_DUMP("iperf data : ", pdata, 24); */
+	if ((st->iperf_ver & 0x7f) >= 3) {
+		iperf_seq_offset = 16;
+		iperf_start_seq = 1 ;
+	} else {
+		iperf_seq_offset = 8;
+		iperf_start_seq = 0 ;
+	}
+
+	cur_iperf_seq = __be32_to_cpu(*((u32 *)(pdata + iperf_seq_offset)));
+	if (cur_iperf_seq >= (st->iperf_seq + end_boundary)) {
+		RTW_INFO("%s : terminate for end/abnormal of iperf pkt\n", __func__);
+		return;
+	}
+
+	if (cur_iperf_seq >= (iudp_ip_seq_get(st) + 1)) {
+		if (cur_iperf_seq > (iudp_ip_seq_get(st) + 1))
+			iudp_err_cnt_update(st, cur_iperf_seq);
+		iudp_ip_seq_set(st, cur_iperf_seq);
+	} else
+		iperf_out_of_order_cnt_inc(st, cur_iperf_seq);
+}
+
+void rtw_rx_dbg_monitor_ip_statistic(_adapter *padapter, _pkt *pkt)
+{
+	struct recv_priv *precvpriv = &(padapter->recvpriv);
+	u8 *ip_hdr, frag_flag, src_ip[4], frag_drop = _FALSE;
+	u16 ip_seq, frag_offset, sport = 0 , dport = 0;
+	u32 i;
+
+	if (pkt->protocol != __constant_htons(ETH_P_IP))
+		return;
+
+	/* RTW_INFO_DUMP("ip hdr :", pkt->data, 32); */
+	ip_hdr = pkt->data;
+	if ((GET_IPV4_PROTOCOL(ip_hdr) != 0x6) &&
+		(GET_IPV4_PROTOCOL(ip_hdr) != 0x11)) {
+		/* filter all non-tcp/udp packets */
+		return;
+	}
+
+	for (i=0; i<=3; i++)
+		src_ip[i] = *IPV4_SRC(ip_hdr + i);
+
+	if (!rtw_rx_dbg_monitor_condition_chk(padapter, src_ip, 0, 1)) {
+		/* filter all unmatched-packets by source-ip */
+		return;
+	}
+
+	ip_seq = be16_to_cpu(*((u16 *)(ip_hdr + 4)));
+	frag_offset = be16_to_cpu(*((u16 *)(ip_hdr + 6)));
+	frag_flag = frag_offset >> 13;
+	frag_offset &= 0x1fff;
+
+	/* no-fragments or 1st-fragment */
+	if ((frag_flag & BIT(1)) || (frag_offset == 0)) {
+		sport = GET_UDP_SRC(ip_hdr + 20);
+		dport = GET_UDP_DST(ip_hdr + 20);
+
+		if (!rtw_rx_dbg_monitor_condition_chk(padapter, NULL, dport, 2)) {
+			/* filter all unmatched-packets by destination-port */
+			return;
+		}
+
+		/* 1st-fragment */
+		if (frag_flag & BIT(0)) {
+			frag_cnt_inc(&precvpriv->ip_statistic);
+			if (need_to_chk_iudp_cnt(ip_hdr, &precvpriv->ip_statistic)) {
+				if (iudp_defrag_done_get(&precvpriv->ip_statistic) == _FALSE)
+					iudp_err_cnt_inc(&precvpriv->ip_statistic, "last-frag");
+
+				iudp_defrag_done_set(&precvpriv->ip_statistic, _FALSE);
+				iudp_ip_seq_chk_set(&precvpriv->ip_statistic, ip_seq);
+				iudp_frag_offset_chk_set(&precvpriv->ip_statistic, frag_offset);
+				iudp_max_frag_offset_chk_set(&precvpriv->ip_statistic, frag_offset);
+			}
+		}
+
+		ip_cnt_inc(&precvpriv->ip_statistic);
+		tcp_udp_cnt_inc(ip_hdr, &precvpriv->ip_statistic);
+		if (need_to_chk_iudp_cnt(ip_hdr, &precvpriv->ip_statistic))
+			rtw_dbg_rx_iperf_udp_data_chk(padapter, (ip_hdr + 20));
+
+	} else if (((frag_flag & BIT(0)) || (frag_flag == 0)) \
+			&& (frag_offset > 0)) {
+		/* more-or-last fragment */
+		frag_cnt_inc(&precvpriv->ip_statistic);
+		if (need_to_chk_iudp_cnt(ip_hdr, &precvpriv->ip_statistic)) {
+			/* fragment-lenth in 8byte-blocks without ip-header */
+			iudp_frag_offset_chk_set(&precvpriv->ip_statistic,
+				(iudp_frag_offset_chk_get(&precvpriv->ip_statistic) + ((pkt->len - 20)/8)));
+			iudp_max_frag_offset_chk_set(&precvpriv->ip_statistic,
+				(iudp_max_frag_offset_chk_get(&precvpriv->ip_statistic) + ((1500 - 20)/8)));
+
+			/* more-frag check */
+			if (frag_flag & BIT(0)) {
+				if ((ip_seq == iudp_ip_seq_chk_get(&precvpriv->ip_statistic))
+					&& (iudp_defrag_done_get(&precvpriv->ip_statistic) == _FALSE) \
+					&& (frag_offset > iudp_frag_offset_chk_get(&precvpriv->ip_statistic))) {
+					iudp_defrag_done_set(&precvpriv->ip_statistic, _TRUE);
+					iudp_err_cnt_inc(&precvpriv->ip_statistic, "more-frag");
+				}
+			} else {
+				if ((ip_seq == iudp_ip_seq_chk_get(&precvpriv->ip_statistic))
+					&& (iudp_defrag_done_get(&precvpriv->ip_statistic) == _FALSE)) {
+					iudp_defrag_done_set(&precvpriv->ip_statistic, _TRUE);
+					if (frag_offset > iudp_max_frag_offset_chk_get(&precvpriv->ip_statistic))
+						iudp_err_cnt_inc(&precvpriv->ip_statistic, "more-frag");
+				}
+			}
+		}
+
+		tcp_udp_cnt_inc(ip_hdr, &precvpriv->ip_statistic);
+	}
+}
+
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/core/rtw_wnm.c b/drivers/net/wireless/rockchip_wlan/rtl8821cs/core/rtw_wnm.c
index ae51c9496854..293eb86b741a 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/core/rtw_wnm.c
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/core/rtw_wnm.c
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/core/rtw_xmit.c b/drivers/net/wireless/rockchip_wlan/rtl8821cs/core/rtw_xmit.c
index d86d11838136..dcd86cfa8b27 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/core/rtw_xmit.c
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/core/rtw_xmit.c
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2019 Realtek Corporation.
@@ -102,6 +101,9 @@ s32	_rtw_init_xmit_priv(struct xmit_priv *pxmitpriv, _adapter *padapter)
 	/* _rtw_init_queue(&pxmitpriv->apsd_queue); */
 
 	_rtw_init_queue(&pxmitpriv->free_xmit_queue);
+#ifdef CONFIG_LAYER2_ROAMING
+	_rtw_init_queue(&pxmitpriv->rpkt_queue);
+#endif
 
 	/*
 	Please allocate memory with the sz = (struct xmit_frame) * NR_XMITFRAME,
@@ -424,7 +426,9 @@ void _rtw_free_xmit_priv(struct xmit_priv *pxmitpriv)
 
 	/* free xmit extension buff */
 	_rtw_spinlock_free(&pxmitpriv->free_xmit_extbuf_queue.lock);
-
+#ifdef CONFIG_LAYER2_ROAMING
+	_rtw_spinlock_free(&pxmitpriv->rpkt_queue.lock);
+#endif
 	pxmitbuf = (struct xmit_buf *)pxmitpriv->pxmit_extbuf;
 	for (i = 0; i < NR_XMIT_EXTBUFF; i++) {
 		rtw_os_xmit_resource_free(padapter, pxmitbuf, (MAX_XMIT_EXTBUF_SZ + XMITBUF_ALIGN_SZ), _TRUE);
@@ -772,7 +776,7 @@ s16 rtw_adapter_get_oper_txpwr_max_mbm(_adapter *adapter, bool eirp)
 		else if (IS_HT_HRATE(hw_rate))
 			bmp_ht |= BIT(hw_rate - DESC_RATEMCS0);
 		else if (IS_VHT_HRATE(hw_rate))
-			bmp_vht |= BIT(hw_rate - DESC_RATEVHTSS1MCS0);
+			bmp_vht |= BIT_ULL(hw_rate - DESC_RATEVHTSS1MCS0);
 
 		mbm = phy_get_txpwr_total_max_mbm(adapter
 			, bw, cch, ch, bmp_cck_ofdm, bmp_ht, bmp_vht, 0, eirp);
@@ -815,7 +819,7 @@ s16 rtw_rfctl_get_oper_txpwr_max_mbm(struct rf_ctl_t *rfctl, u8 ch, u8 bw, u8 of
 			else if (IS_HT_HRATE(hw_rate))
 				bmp_ht |= BIT(hw_rate - DESC_RATEMCS0);
 			else if (IS_VHT_HRATE(hw_rate))
-				bmp_vht |= BIT(hw_rate - DESC_RATEVHTSS1MCS0);
+				bmp_vht |= BIT_ULL(hw_rate - DESC_RATEVHTSS1MCS0);
 		}
 
 		bmp_cck_ofdm |= rfctl->rate_bmp_cck_ofdm;
@@ -884,7 +888,7 @@ s16 rtw_rfctl_get_reg_max_txpwr_mbm(struct rf_ctl_t *rfctl, u8 ch, u8 bw, u8 off
 
 #ifdef CONFIG_80211AC_VHT
 	if (ch > 14 && REGSTY_IS_11AC_ENABLE(regsty) && is_supported_vht(regsty->wireless_mode)
-		&& (!rfctl->country_ent || COUNTRY_CHPLAN_EN_11AC(rfctl->country_ent))
+		&& RFCTL_REG_EN_11AC(rfctl)
 	) {
 		switch (GET_HAL_TX_NSS(adapter)) {
 		case 1:
@@ -1388,6 +1392,9 @@ static s32 update_attrib_sec_info(_adapter *padapter, struct pkt_attrib *pattrib
 		pattrib->bswenc = _FALSE;
 #endif
 
+	if ((pattrib->encrypt) && (eapol_type == EAPOL_4_4))
+		pattrib->bswenc = _TRUE;
+
 exit:
 
 	return res;
@@ -2694,6 +2701,7 @@ u32 rtw_calculate_wlan_pkt_size_by_attribue(struct pkt_attrib *pattrib)
 s32 check_amsdu(struct xmit_frame *pxmitframe)
 {
 	struct pkt_attrib *pattrib;
+	struct sta_info *psta = NULL;
 	s32 ret = _TRUE;
 
 	if (!pxmitframe)
@@ -2701,6 +2709,11 @@ s32 check_amsdu(struct xmit_frame *pxmitframe)
 
 	pattrib = &pxmitframe->attrib;
 
+	psta = rtw_get_stainfo(&pxmitframe->padapter->stapriv, &pattrib->ra[0]);
+	if (psta) {
+		if (psta->flags & WLAN_STA_AMSDU_DISABLE)
+			ret =_FALSE;
+	}
 	if (IS_MCAST(pattrib->ra))
 		ret = _FALSE;
 
@@ -5135,13 +5148,22 @@ s32 rtw_xmit(_adapter *padapter, _pkt **ppkt, u16 os_qid)
 	struct xmit_priv *pxmitpriv = &padapter->xmitpriv;
 	struct xmit_frame *pxmitframe = NULL;
 	s32 res;
+#ifdef CONFIG_LAYER2_ROAMING
+	struct  mlme_priv       *pmlmepriv = &(padapter->mlmepriv);
+	struct sk_buff *skb = (struct sk_buff *)(*ppkt);
+	_irqL irqL;
+#endif
 
 	DBG_COUNTER(padapter->tx_logs.core_tx);
 
 	if (IS_CH_WAITING(adapter_to_rfctl(padapter)))
 		return -1;
 
-	if (rtw_linked_check(padapter) == _FALSE)
+	if ((rtw_linked_check(padapter) == _FALSE)
+#ifdef CONFIG_LAYER2_ROAMING
+		&&(!padapter->mlmepriv.roam_network)
+#endif
+	   )
 		return -1;
 
 	if (start == 0)
@@ -5185,46 +5207,62 @@ s32 rtw_xmit(_adapter *padapter, _pkt **ppkt, u16 os_qid)
 		}
 	}
 #endif /* CONFIG_BR_EXT */
+#ifdef CONFIG_LAYER2_ROAMING
+	if ((pmlmepriv->roam_network) && (skb->protocol != htons(0x888e))) {	/* eapol never enqueue.*/
+		pxmitframe->pkt = *ppkt;
+		rtw_list_delete(&pxmitframe->list);
+		_enter_critical_bh(&pxmitpriv->rpkt_queue.lock, &irqL);
+		rtw_list_insert_tail(&(pxmitframe->list), get_list_head(&(pxmitpriv->rpkt_queue)));
+		_exit_critical_bh(&pxmitpriv->rpkt_queue.lock, &irqL);
+		return 1;
+	}
+#endif
 
 #if defined(CONFIG_AP_MODE) || defined(CONFIG_RTW_MESH)
 	if (MLME_STATE(padapter) & (WIFI_AP_STATE | WIFI_MESH_STATE)) {
-		_list b2u_list;
+		_list f_list;
 
 		#ifdef CONFIG_RTW_MESH
 		if (MLME_IS_MESH(padapter))
-			res = rtw_mesh_addr_resolve(padapter, os_qid, pxmitframe, *ppkt, &b2u_list);
+			res = rtw_mesh_addr_resolve(padapter, os_qid, pxmitframe, *ppkt, &f_list);
 		else
 		#endif
-			res = rtw_ap_addr_resolve(padapter, os_qid, pxmitframe, *ppkt, &b2u_list);
+			res = rtw_ap_addr_resolve(padapter, os_qid, pxmitframe, *ppkt, &f_list);
 		if (res == RTW_RA_RESOLVING)
 			return 1;
 		if (res == _FAIL)
 			return -1;
 
-		#if CONFIG_RTW_DATA_BMC_TO_UC
-		if (!rtw_is_list_empty(&b2u_list)) {
-			_list *list = get_next(&b2u_list);
-			struct xmit_frame *b2uframe;
+		#if defined(CONFIG_RTW_WDS) || CONFIG_RTW_DATA_BMC_TO_UC
+		if (!rtw_is_list_empty(&f_list)) {
+			_list *list = get_next(&f_list);
+			struct xmit_frame *fframe;
 
-			while ((rtw_end_of_queue_search(&b2u_list, list)) == _FALSE) {
-				b2uframe = LIST_CONTAINOR(list, struct xmit_frame, list);
+			while ((rtw_end_of_queue_search(&f_list, list)) == _FALSE) {
+				fframe = LIST_CONTAINOR(list, struct xmit_frame, list);
 				list = get_next(list);
-				rtw_list_delete(&b2uframe->list);
+				rtw_list_delete(&fframe->list);
 
-				b2uframe->pkt = rtw_os_pkt_copy(*ppkt);
-				if (!b2uframe->pkt) {
-					if (res == RTW_BMC_NO_NEED)
+				if (res == RTW_ORI_NO_NEED && rtw_is_list_empty(&f_list)) {
+					fframe->pkt = pxmitframe->pkt; /* last frame */
+					pxmitframe->pkt = NULL;
+				} else {
+					fframe->pkt = rtw_os_pkt_copy(*ppkt);
+				}
+
+				if (!fframe->pkt) {
+					if (res == RTW_ORI_NO_NEED && IS_MCAST(pxmitframe->attrib.dst))
 						res = _SUCCESS;
-					rtw_free_xmitframe(pxmitpriv, b2uframe);
+					rtw_free_xmitframe(pxmitpriv, fframe);
 					continue;
 				}
 
-				rtw_xmit_posthandle(padapter, b2uframe, b2uframe->pkt);
+				rtw_xmit_posthandle(padapter, fframe, fframe->pkt);
 			}
 		}
 		#endif
 
-		if (res == RTW_BMC_NO_NEED) {
+		if (res == RTW_ORI_NO_NEED) {
 			rtw_free_xmitframe(&padapter->xmitpriv, pxmitframe);
 			return 0;
 		}
@@ -5360,7 +5398,7 @@ u8 mgmt_xmitframe_enqueue_for_sleeping_sta(_adapter *padapter, struct xmit_frame
 		return _FALSE;
 
 	if (psta == NULL) {
-		RTW_INFO("%s, psta==NUL, pattrib->ra:"MAC_FMT"\n",
+		RTW_INFO("%s, psta==NUL don't need enqueue, pattrib->ra:"MAC_FMT"\n",
 				    __func__, MAC_ARG(pattrib->ra));
 		return _FALSE;
 	}
@@ -5599,7 +5637,7 @@ sint xmitframe_enqueue_for_sleeping_sta(_adapter *padapter, struct xmit_frame *p
 
 			/* if(psta->sleepq_len > (NR_XMITFRAME>>3)) */
 			/* { */
-			/*	wakeup_sta_to_xmit(padapter, psta); */
+			/*	wakeup_sta_to_xmit(padapter, psta, ALL_FRAME); */
 			/* }	 */
 
 			ret = _TRUE;
@@ -5712,7 +5750,13 @@ void stop_sta_xmit(_adapter *padapter, struct sta_info *psta)
 
 }
 
-void wakeup_sta_to_xmit(_adapter *padapter, struct sta_info *psta)
+/**
+ * dequeue_type: decide which type of frame be dequeued
+ * UNI_BMC_DATA: unicast and broadcast/multicast data frame
+ * UNI_MGMT: unicast management frame
+ * ALL_FRAME: all frames
+ */
+void wakeup_sta_to_xmit(_adapter *padapter, struct sta_info *psta, u8 dequeue_type)
 {
 	_irqL irqL;
 	u8 update_mask = 0, wmmps_ac = 0;
@@ -5722,98 +5766,102 @@ void wakeup_sta_to_xmit(_adapter *padapter, struct sta_info *psta)
 	struct sta_priv *pstapriv = &padapter->stapriv;
 	struct xmit_priv *pxmitpriv = &padapter->xmitpriv;
 
-	psta_bmc = rtw_get_bcmc_stainfo(padapter);
-
-
 	/* _enter_critical_bh(&psta->sleep_q.lock, &irqL); */
 	_enter_critical_bh(&pxmitpriv->lock, &irqL);
 
 #ifdef CONFIG_RTW_MGMT_QUEUE
-	/* management queue */
-	xmitframe_phead = get_list_head(&psta->mgmt_sleep_q);
-	xmitframe_plist = get_next(xmitframe_phead);
+	if (dequeue_type == UNI_MGMT || dequeue_type == ALL_FRAME) {
+		/* management queue */
+		xmitframe_phead = get_list_head(&psta->mgmt_sleep_q);
+		xmitframe_plist = get_next(xmitframe_phead);
 
-	while ((rtw_end_of_queue_search(xmitframe_phead, xmitframe_plist)) == _FALSE) {
-		pxmitframe = LIST_CONTAINOR(xmitframe_plist, struct xmit_frame, list);
+		while ((rtw_end_of_queue_search(xmitframe_phead, xmitframe_plist)) == _FALSE) {
+			pxmitframe = LIST_CONTAINOR(xmitframe_plist, struct xmit_frame, list);
 
-		xmitframe_plist = get_next(xmitframe_plist);
+			xmitframe_plist = get_next(xmitframe_plist);
 
-		rtw_list_delete(&pxmitframe->list);
+			rtw_list_delete(&pxmitframe->list);
 
-		#ifdef DBG_MGMT_QUEUE
-		RTW_INFO("%s seq_num = %u, subtype = 0x%x\n",
-				__func__, pxmitframe->attrib.seqnum, pxmitframe->attrib.subtype);
-		#endif
+			#ifdef DBG_MGMT_QUEUE
+			RTW_INFO("%s seq_num = %u, subtype = 0x%x\n",
+					__func__, pxmitframe->attrib.seqnum, pxmitframe->attrib.subtype);
+			#endif
 
-		psta->mgmt_sleepq_len--;
+			psta->mgmt_sleepq_len--;
 
-		pxmitframe->attrib.triggered = 1;
+			if (psta->mgmt_sleepq_len > 0)
+				pxmitframe->attrib.mdata = 1;
+			else
+				pxmitframe->attrib.mdata = 0;
+
+			pxmitframe->attrib.triggered = 1;
 
-		rtw_hal_mgmt_xmitframe_enqueue(padapter, pxmitframe);
+			rtw_hal_mgmt_xmitframe_enqueue(padapter, pxmitframe);
+		}
 	}
 #endif /* CONFIG_RTW_MGMT_QUEUE */
 
-	/* AC queue */
-	xmitframe_phead = get_list_head(&psta->sleep_q);
-	xmitframe_plist = get_next(xmitframe_phead);
-
-	while ((rtw_end_of_queue_search(xmitframe_phead, xmitframe_plist)) == _FALSE) {
-		pxmitframe = LIST_CONTAINOR(xmitframe_plist, struct xmit_frame, list);
+	if (dequeue_type == UNI_BMC_DATA || dequeue_type == ALL_FRAME) {
+		/* AC queue */
+		xmitframe_phead = get_list_head(&psta->sleep_q);
+		xmitframe_plist = get_next(xmitframe_phead);
 
-		xmitframe_plist = get_next(xmitframe_plist);
+		while ((rtw_end_of_queue_search(xmitframe_phead, xmitframe_plist)) == _FALSE) {
+			pxmitframe = LIST_CONTAINOR(xmitframe_plist, struct xmit_frame, list);
 
-		rtw_list_delete(&pxmitframe->list);
+			xmitframe_plist = get_next(xmitframe_plist);
 
-		switch (pxmitframe->attrib.priority) {
-		case 1:
-		case 2:
-			wmmps_ac = psta->uapsd_bk & BIT(1);
-			break;
-		case 4:
-		case 5:
-			wmmps_ac = psta->uapsd_vi & BIT(1);
-			break;
-		case 6:
-		case 7:
-			wmmps_ac = psta->uapsd_vo & BIT(1);
-			break;
-		case 0:
-		case 3:
-		default:
-			wmmps_ac = psta->uapsd_be & BIT(1);
-			break;
-		}
+			rtw_list_delete(&pxmitframe->list);
 
-		psta->sleepq_len--;
-		if (psta->sleepq_len > 0)
-			pxmitframe->attrib.mdata = 1;
-		else
-			pxmitframe->attrib.mdata = 0;
+			switch (pxmitframe->attrib.priority) {
+			case 1:
+			case 2:
+				wmmps_ac = psta->uapsd_bk & BIT(1);
+				break;
+			case 4:
+			case 5:
+				wmmps_ac = psta->uapsd_vi & BIT(1);
+				break;
+			case 6:
+			case 7:
+				wmmps_ac = psta->uapsd_vo & BIT(1);
+				break;
+			case 0:
+			case 3:
+			default:
+				wmmps_ac = psta->uapsd_be & BIT(1);
+				break;
+			}
 
-		if (wmmps_ac) {
-			psta->sleepq_ac_len--;
-			if (psta->sleepq_ac_len > 0) {
+			psta->sleepq_len--;
+			if (psta->sleepq_len > 0)
 				pxmitframe->attrib.mdata = 1;
-				pxmitframe->attrib.eosp = 0;
-			} else {
+			else
 				pxmitframe->attrib.mdata = 0;
-				pxmitframe->attrib.eosp = 1;
-			}
-		}
-
-		pxmitframe->attrib.triggered = 1;
 
-		/*
-				_exit_critical_bh(&psta->sleep_q.lock, &irqL);
-				if(rtw_hal_xmit(padapter, pxmitframe) == _TRUE)
-				{
-					rtw_os_xmit_complete(padapter, pxmitframe);
+			if (wmmps_ac) {
+				psta->sleepq_ac_len--;
+				if (psta->sleepq_ac_len > 0) {
+					pxmitframe->attrib.mdata = 1;
+					pxmitframe->attrib.eosp = 0;
+				} else {
+					pxmitframe->attrib.mdata = 0;
+					pxmitframe->attrib.eosp = 1;
 				}
-				_enter_critical_bh(&psta->sleep_q.lock, &irqL);
-		*/
-		rtw_hal_xmitframe_enqueue(padapter, pxmitframe);
+			}
 
+			pxmitframe->attrib.triggered = 1;
 
+			/*
+					_exit_critical_bh(&psta->sleep_q.lock, &irqL);
+					if(rtw_hal_xmit(padapter, pxmitframe) == _TRUE)
+					{
+						rtw_os_xmit_complete(padapter, pxmitframe);
+					}
+					_enter_critical_bh(&psta->sleep_q.lock, &irqL);
+			*/
+			rtw_hal_xmitframe_enqueue(padapter, pxmitframe);
+		}
 	}
 
 	if (psta->sleepq_len == 0
@@ -5853,56 +5901,57 @@ void wakeup_sta_to_xmit(_adapter *padapter, struct sta_info *psta)
 		rtw_tim_map_clear(padapter, pstapriv->sta_dz_bitmap, psta->cmn.aid);
 	}
 
-	/* for BC/MC Frames */
-	if (!psta_bmc)
-		goto _exit;
+	if (dequeue_type == UNI_BMC_DATA || dequeue_type == ALL_FRAME) {
+		psta_bmc = rtw_get_bcmc_stainfo(padapter);
 
-	if (!(rtw_tim_map_anyone_be_set_exclude_aid0(padapter, pstapriv->sta_dz_bitmap))) { /* no any sta in ps mode */
-		xmitframe_phead = get_list_head(&psta_bmc->sleep_q);
-		xmitframe_plist = get_next(xmitframe_phead);
+		/* for BC/MC Frames */
+		if (!psta_bmc)
+			goto _exit;
 
-		while ((rtw_end_of_queue_search(xmitframe_phead, xmitframe_plist)) == _FALSE) {
-			pxmitframe = LIST_CONTAINOR(xmitframe_plist, struct xmit_frame, list);
+		if (!(rtw_tim_map_anyone_be_set_exclude_aid0(padapter, pstapriv->sta_dz_bitmap))) { /* no any sta in ps mode */
+			xmitframe_phead = get_list_head(&psta_bmc->sleep_q);
+			xmitframe_plist = get_next(xmitframe_phead);
 
-			xmitframe_plist = get_next(xmitframe_plist);
+			while ((rtw_end_of_queue_search(xmitframe_phead, xmitframe_plist)) == _FALSE) {
+				pxmitframe = LIST_CONTAINOR(xmitframe_plist, struct xmit_frame, list);
 
-			rtw_list_delete(&pxmitframe->list);
+				xmitframe_plist = get_next(xmitframe_plist);
 
-			psta_bmc->sleepq_len--;
-			if (psta_bmc->sleepq_len > 0)
-				pxmitframe->attrib.mdata = 1;
-			else
-				pxmitframe->attrib.mdata = 0;
+				rtw_list_delete(&pxmitframe->list);
 
+				psta_bmc->sleepq_len--;
+				if (psta_bmc->sleepq_len > 0)
+					pxmitframe->attrib.mdata = 1;
+				else
+					pxmitframe->attrib.mdata = 0;
 
-			pxmitframe->attrib.triggered = 1;
-			/*
-						_exit_critical_bh(&psta_bmc->sleep_q.lock, &irqL);
-						if(rtw_hal_xmit(padapter, pxmitframe) == _TRUE)
-						{
-							rtw_os_xmit_complete(padapter, pxmitframe);
-						}
-						_enter_critical_bh(&psta_bmc->sleep_q.lock, &irqL);
+				pxmitframe->attrib.triggered = 1;
+				/*
+							_exit_critical_bh(&psta_bmc->sleep_q.lock, &irqL);
+							if(rtw_hal_xmit(padapter, pxmitframe) == _TRUE)
+							{
+								rtw_os_xmit_complete(padapter, pxmitframe);
+							}
+							_enter_critical_bh(&psta_bmc->sleep_q.lock, &irqL);
 
-			*/
-			rtw_hal_xmitframe_enqueue(padapter, pxmitframe);
+				*/
+				rtw_hal_xmitframe_enqueue(padapter, pxmitframe);
 
-		}
+			}
 
-		if (psta_bmc->sleepq_len == 0) {
-			if (rtw_tim_map_is_set(padapter, pstapriv->tim_bitmap, 0)) {
-				/* RTW_INFO("wakeup to xmit, qlen==0\n"); */
-				/* RTW_INFO_DUMP("update_BCNTIM, tim=", pstapriv->tim_bitmap, pstapriv->aid_bmp_len); */
-				/* upate BCN for TIM IE */
-				/* update_BCNTIM(padapter); */
-				update_mask |= BIT(1);
+			if (psta_bmc->sleepq_len == 0) {
+				if (rtw_tim_map_is_set(padapter, pstapriv->tim_bitmap, 0)) {
+					/* RTW_INFO("wakeup to xmit, qlen==0\n"); */
+					/* RTW_INFO_DUMP("update_BCNTIM, tim=", pstapriv->tim_bitmap, pstapriv->aid_bmp_len); */
+					/* upate BCN for TIM IE */
+					/* update_BCNTIM(padapter); */
+					update_mask |= BIT(1);
+				}
+				rtw_tim_map_clear(padapter, pstapriv->tim_bitmap, 0);
+				rtw_tim_map_clear(padapter, pstapriv->sta_dz_bitmap, 0);
 			}
-			rtw_tim_map_clear(padapter, pstapriv->tim_bitmap, 0);
-			rtw_tim_map_clear(padapter, pstapriv->sta_dz_bitmap, 0);
 		}
-
 	}
-
 _exit:
 
 	/* _exit_critical_bh(&psta_bmc->sleep_q.lock, &irqL);	 */
@@ -6148,9 +6197,13 @@ thread_return rtw_xmit_thread(thread_context context)
 	PADAPTER padapter;
 #ifdef RTW_XMIT_THREAD_HIGH_PRIORITY
 #ifdef PLATFORM_LINUX
+#if (LINUX_VERSION_CODE >= KERNEL_VERSION(5, 9, 0))
+	sched_set_fifo_low(current);
+#else
 	struct sched_param param = { .sched_priority = 1 };
-
+					
 	sched_setscheduler(current, SCHED_FIFO, &param);
+#endif
 #endif /* PLATFORM_LINUX */
 #endif /* RTW_XMIT_THREAD_HIGH_PRIORITY */
 
@@ -6637,3 +6690,20 @@ void rtw_ack_tx_done(struct xmit_priv *pxmitpriv, int status)
 		RTW_INFO("%s ack_tx not set\n", __func__);
 }
 #endif /* CONFIG_XMIT_ACK */
+
+void rtw_hci_flush(_adapter *padapter)
+{
+	u8 q;
+
+	if (padapter->hal_func.hci_flush) {
+		for (q = 0; q < HW_QUEUE_ENTRY; q++) {
+			if ((q == BCN_QUEUE_INX) || (q == TXCMD_QUEUE_INX))
+				continue;
+
+			padapter->hal_func.hci_flush(padapter, q);
+		}
+	}
+	else
+		RTW_WARN("hal ops: hci_flush is NULL\n");
+}
+
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/core/wds/rtw_wds.c b/drivers/net/wireless/rockchip_wlan/rtl8821cs/core/wds/rtw_wds.c
index 85d139cd364d..fd88b1c4fdcf 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/core/wds/rtw_wds.c
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/core/wds/rtw_wds.c
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/core/wds/rtw_wds.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/core/wds/rtw_wds.h
index 2a161da88a06..f1312c740107 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/core/wds/rtw_wds.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/core/wds/rtw_wds.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2019 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/HalPwrSeqCmd.c b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/HalPwrSeqCmd.c
index ae95ca814807..389785c2bfe4 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/HalPwrSeqCmd.c
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/HalPwrSeqCmd.c
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/btc/btc_basic_types.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/btc/btc_basic_types.h
index 77bdd9bef088..c2a27a264218 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/btc/btc_basic_types.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/btc/btc_basic_types.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/btc/halbtc8821c1ant.c b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/btc/halbtc8821c1ant.c
index 274cd5c3ca8f..5d09299d6ae0 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/btc/halbtc8821c1ant.c
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/btc/halbtc8821c1ant.c
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2016 - 2017 Realtek Corporation.
@@ -26,9 +25,9 @@ const char *const glbt_info_src_8821c_1ant[] = {
 	"BT Info[bt auto report]",
 };
 
-u32 glcoex_ver_date_8821c_1ant = 20200730;
-u32 glcoex_ver_8821c_1ant = 0x51;
-u32 glcoex_ver_btdesired_8821c_1ant = 0x50;
+u32 glcoex_ver_date_8821c_1ant = 20210319;
+u32 glcoex_ver_8821c_1ant = 0x55;
+u32 glcoex_ver_btdesired_8821c_1ant = 0x53;
 u32 glcoex_ver_wldesired_8821c_1ant = 0x170011;
 
 #if 0
@@ -1826,6 +1825,11 @@ void halbtc8821c1ant_table(struct btc_coexist *btc, boolean force_exec, u8 type)
 					  0x5a5a5aaa, break_table,
 					  select_table);
 		break;
+	case 26:
+		halbtc8821c1ant_set_table(btc, force_exec, 0x6a555a5a,
+					  0x5a5a5a5a, break_table,
+					  select_table);
+		break;
 	default:
 		break;
 	}
@@ -2135,10 +2139,9 @@ void halbtc8821c1ant_tdma(struct btc_coexist *btc, boolean force_exec,
 			return;
 		}
 	}
-	
+
 	if (!wifi_busy ||
-	    (coex_sta->a2dp_exist &&
-	    (coex_sta->bt_inq_page_remain || coex_sta->is_bt_multi_link)))
+	    (coex_sta->a2dp_exist && coex_sta->bt_inq_page_remain))
 		halbtc8821c1ant_write_scbd(btc, BT_8821C_1ANT_SCBD_TDMA,
 					   FALSE);
 	else
@@ -2562,8 +2565,8 @@ void halbtc8821c1ant_set_ant_path(struct btc_coexist *btc,
 	coex_dm->cur_ant_pos_type = (ant_pos_type << 8)  + phase;
 
 	if (btc->dbg_mode) {
-		u32tmp1 = btc->btc_read_4byte(btc, 0xcbc);
-		u32tmp2 = btc->btc_read_4byte(btc, 0xcb4);
+		u32tmp1 = btc->btc_read_4byte(btc, 0xcb4);
+		u32tmp2 = btc->btc_read_4byte(btc, 0xcbc);
 		u8tmp  = btc->btc_read_1byte(btc, 0x73);
 
 		BTC_SPRINTF(trace_buf, BT_TMP_BUF_SIZE,
@@ -3280,10 +3283,11 @@ void halbtc8821c1ant_action_wifi_native_lps(struct btc_coexist *btc)
 static
 void halbtc8821c1ant_action_wifi_linkscan(struct btc_coexist *btc)
 {
+	struct coex_sta_8821c_1ant *coex_sta = &btc->coex_sta_8821c_1ant;
 	struct  btc_bt_link_info *bt_link_info = &btc->bt_link_info;
 
 	if (bt_link_info->pan_exist) {
-		halbtc8821c1ant_table(btc, NM_EXCU, 4);
+		halbtc8821c1ant_table(btc, NM_EXCU, 26);
 		halbtc8821c1ant_tdma(btc, NM_EXCU, TRUE, 22);
 	} else if (bt_link_info->a2dp_exist) {
 		halbtc8821c1ant_table(btc, NM_EXCU, 4);
@@ -3475,13 +3479,26 @@ void halbtc8821c1ant_action_wifi_multiport2g(struct btc_coexist *btc)
 		case BTC_LINK_ONLY_GC:
 #ifdef PLATFORM_WINDOWS
 			if (btc->chip_interface == BTC_INTF_PCI &&
-			    coex_sta->a2dp_exist && !coex_sta->is_bt_multi_link)
-				halbtc8821c1ant_table(btc, NM_EXCU, 10);
-			else
+			    coex_sta->a2dp_exist && !coex_sta->is_bt_multi_link) {
+			    PADAPTER 		Adapter=(PADAPTER)btc->Adapter;
+			    PMULTI_LINK_INFO 	pMultiLinkInfo = MultiportGetMultiLinkInfo(Adapter);
+				if (pMultiLinkInfo->bHotspot) {
+					halbtc8821c1ant_table(btc, NM_EXCU, 16);
+					halbtc8821c1ant_tdma(btc, NM_EXCU,
+								TRUE, 17);	
+				} else {
+					halbtc8821c1ant_table(btc, NM_EXCU, 11);
+					halbtc8821c1ant_tdma(btc, NM_EXCU,
+								FALSE, 8);
+				}
+			} else
 #endif
+			{
 				halbtc8821c1ant_table(btc, NM_EXCU, 19);
-			halbtc8821c1ant_tdma(btc, NM_EXCU, FALSE, 8);
+				halbtc8821c1ant_tdma(btc, NM_EXCU, FALSE, 8);
+			}
 			break;
+
 		default:
 			halbtc8821c1ant_table(btc, NM_EXCU, 19);
 			halbtc8821c1ant_tdma(btc, NM_EXCU, FALSE, 8);
@@ -5446,7 +5463,7 @@ void ex_halbtc8821c1ant_periodical(struct btc_coexist *btc)
 
 	if (coex_sta->bt_inq_page_downcount != 0) {
 		coex_sta->bt_inq_page_downcount--;
-		if (coex_sta->bt_relink_downcount == 0) {
+		if (coex_sta->bt_inq_page_downcount == 0) {
 			coex_sta->bt_inq_page_remain = FALSE;
 			BTC_SPRINTF(trace_buf, BT_TMP_BUF_SIZE,
 				"[BTCoex], BT inquiry-page disappear!!\n");
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/btc/halbtc8821c1ant.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/btc/halbtc8821c1ant.h
index cf8a5f3273be..2afd70ff7f90 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/btc/halbtc8821c1ant.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/btc/halbtc8821c1ant.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2016 - 2017 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/btc/halbtc8821c2ant.c b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/btc/halbtc8821c2ant.c
index 0297613ecd8d..ed403271e6ba 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/btc/halbtc8821c2ant.c
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/btc/halbtc8821c2ant.c
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2016 - 2017 Realtek Corporation.
@@ -27,9 +26,9 @@ const char *const glbt_info_src_8821c_2ant[] = {
 	"BT Info[bt auto report]",
 };
 
-u32 glcoex_ver_date_8821c_2ant = 20200730;
-u32 glcoex_ver_8821c_2ant = 0x51;
-u32 glcoex_ver_btdesired_8821c_2ant = 0x50;
+u32 glcoex_ver_date_8821c_2ant = 20210319;
+u32 glcoex_ver_8821c_2ant = 0x55;
+u32 glcoex_ver_btdesired_8821c_2ant = 0x53;
 u32 glcoex_ver_wldesired_8821c_2ant = 0x170011;
 
 static
@@ -2167,8 +2166,7 @@ void halbtc8821c2ant_tdma(struct btc_coexist *btc,
 	}
 	
 	if (!wifi_busy ||
-	    (coex_sta->a2dp_exist &&
-	    (coex_sta->bt_inq_page_remain || coex_sta->is_bt_multi_link)))
+	    (coex_sta->a2dp_exist && coex_sta->bt_inq_page_remain))
 		halbtc8821c2ant_write_scbd(btc, BT_8821C_2ANT_SCBD_TDMA,
 					   FALSE);
 	else
@@ -2607,8 +2605,8 @@ void halbtc8821c2ant_set_ant_path(struct btc_coexist *btc,
 	coex_dm->cur_ant_pos_type = (ant_pos_type << 8)  + phase;
 
 	if (btc->dbg_mode) {
-		u32tmp1 = btc->btc_read_4byte(btc, 0xcbc);
-		u32tmp2 = btc->btc_read_4byte(btc, 0xcb4);
+		u32tmp1 = btc->btc_read_4byte(btc, 0xcb4);
+		u32tmp2 = btc->btc_read_4byte(btc, 0xcbc);
 		u8tmp  = btc->btc_read_1byte(btc, 0x73);
 
 		BTC_SPRINTF(trace_buf, BT_TMP_BUF_SIZE,
@@ -5602,7 +5600,7 @@ void ex_halbtc8821c2ant_periodical(struct btc_coexist *btc)
 
 	if (coex_sta->bt_inq_page_downcount != 0) {
 		coex_sta->bt_inq_page_downcount--;
-		if (coex_sta->bt_relink_downcount == 0)
+		if (coex_sta->bt_inq_page_downcount == 0)
 			coex_sta->bt_inq_page_remain = FALSE;
 	}
 
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/btc/halbtc8821c2ant.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/btc/halbtc8821c2ant.h
index 14d6a4f80922..9e79d45d8544 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/btc/halbtc8821c2ant.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/btc/halbtc8821c2ant.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2016 - 2017 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/btc/halbtc8821cwifionly.c b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/btc/halbtc8821cwifionly.c
index 5392f2c0d614..6f8e497b1813 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/btc/halbtc8821cwifionly.c
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/btc/halbtc8821cwifionly.c
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2016 - 2017 Realtek Corporation.
@@ -172,7 +171,7 @@ ex_hal8821c_wifi_only_hw_config(
 	halbtc8821c_wifi_only_set_rfe_type(pwifionlycfg);
 
 	/* set gnt_wl, gnt_bt control owner to WL*/
-	halwifionly_phy_set_bb_reg(pwifionlycfg, 0x70, 0x400000, 0x1);
+	halwifionly_phy_set_bb_reg(pwifionlycfg, 0x70, 0x4000000, 0x1);
 
 	/*gnt_wl=1 , gnt_bt=0*/
 	halwifionly_phy_set_bb_reg(pwifionlycfg, 0x1704, 0xffffffff, 0x7700);
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/btc/halbtc8821cwifionly.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/btc/halbtc8821cwifionly.h
index 9e595ef79532..f36114ceef2a 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/btc/halbtc8821cwifionly.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/btc/halbtc8821cwifionly.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2016 - 2017 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/btc/halbtcoutsrc.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/btc/halbtcoutsrc.h
index 1a8fc0d15347..182969750619 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/btc/halbtcoutsrc.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/btc/halbtcoutsrc.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2016 - 2017 Realtek Corporation.
@@ -331,6 +330,9 @@ enum btc_btinfo_src {
 	BTC_BTINFO_SRC_BT_IQK	= 0x3,
 	BTC_BTINFO_SRC_BT_SCBD	= 0x4,
 	BTC_BTINFO_SRC_H2C60	= 0x5,
+	BTC_BTINFO_SRC_BT_PSD	= 0x6,
+	BTC_BTINFO_SRC_BT_SLOT1	= 0x7,
+	BTC_BTINFO_SRC_BT_SLOT2	= 0x8,
 	BTC_BTINFO_SRC_MAX
 };
 
@@ -462,7 +464,8 @@ enum btc_wl2bt_scoreboard {
 	BTC_SCBD_TDMA		= BIT(9),
 	BTC_SCBD_FIX2M		= BIT(10),
 	BTC_SCBD_MAILBOX_DBG	= BIT(14),
-	BTC_SCBD_ALL		= 0xffffffff
+	BTC_SCBD_ALL		= 0xffff,
+	BTC_SCBD_ALL_32BIT	= 0xffffffff
 };
 
 enum btc_bt2wl_scoreboard {
@@ -545,7 +548,9 @@ static const char *const coex_mode_string[] = {
 	"5G",
 	"2G-P2P-GO",
 	"2G-P2P-GC",
-	"BT-MR"
+	"BT-MR",
+	"2G1RFREE",
+	"unknow"
 };
 
 enum btc_bt_state_cnt {
@@ -741,6 +746,8 @@ struct btc_coex_dm {
 	u8	bt_status;
 	u8	wl_chnl_info[3];
 	u8	cur_toggle_para[6];
+	u8	bt_slot_length1[10];
+	u8	bt_slot_length2[10];
 	u32	cur_ant_pos_type;
 	u32	cur_switch_status;
 	u32	setting_tdma;
@@ -872,6 +879,8 @@ struct btc_coex_sta {
 	u16	bt_reg_rf_9;
 	u16	wl_txlimit;
 
+	u32	score_board_BW_32bit;
+	u32	score_board_WB_32bit;
 	u32	hi_pri_tx;
 	u32	hi_pri_rx;
 	u32	lo_pri_tx;
@@ -1481,13 +1490,24 @@ typedef u4Byte
 	IN 	PVOID			pBtcContext,
 	IN	u2Byte			reg_addr
 	);
-typedef u4Byte
+typedef u2Byte
 (*BFP_BTC_R_SCBD)(
+	IN 	PVOID			pBtcContext,
+	IN	pu2Byte			score_board_val
+	);
+typedef u4Byte
+(*BFP_BTC_R_SCBD_32BIT)(
 	IN 	PVOID			pBtcContext,
 	IN	pu4Byte			score_board_val
 	);
 typedef VOID
 (*BFP_BTC_W_SCBD)(
+	IN 	PVOID			pBtcContext,
+	IN	u2Byte			bitpos,
+	IN	BOOLEAN			state
+	);
+typedef VOID
+(*BFP_BTC_W_SCBD_32BIT)(
 	IN 	PVOID			pBtcContext,
 	IN	u4Byte			bitpos,
 	IN	BOOLEAN			state
@@ -1805,7 +1825,10 @@ struct btc_coexist {
 	BFP_BTC_R_LINDIRECT		btc_read_linderct;
 	BFP_BTC_W_LINDIRECT		btc_write_linderct;
 	BFP_BTC_R_SCBD			btc_read_scbd;
+	BFP_BTC_R_SCBD_32BIT	btc_read_scbd_32bit;
 	BFP_BTC_W_SCBD			btc_write_scbd;
+	BFP_BTC_W_SCBD_32BIT	btc_write_scbd_32bit;
+
 	/* read/write bb related */
 	BFP_BTC_SET_BB_REG	btc_set_bb_reg;
 	BFP_BTC_GET_BB_REG	btc_get_bb_reg;
@@ -1911,6 +1934,7 @@ struct btc_chip_para {
 	u32				para_ver_date;
 	u32				para_ver;
 	u32				bt_desired_ver;
+	u32				wl_desired_ver;
 	boolean			scbd_support;
 	u32				scbd_reg;
 	u8				scbd_bit_num;
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/btc/mp_precomp.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/btc/mp_precomp.h
index ae272ea3abc8..42645498666d 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/btc/mp_precomp.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/btc/mp_precomp.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2013 - 2017 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/efuse/efuse_mask.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/efuse/efuse_mask.h
index db4edb9f3afa..dc4fdce2b280 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/efuse/efuse_mask.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/efuse/efuse_mask.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2016 - 2017 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/efuse/rtl8821c/HalEfuseMask8821C_PCIE.c b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/efuse/rtl8821c/HalEfuseMask8821C_PCIE.c
index a7858e999887..cf15e47fe36d 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/efuse/rtl8821c/HalEfuseMask8821C_PCIE.c
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/efuse/rtl8821c/HalEfuseMask8821C_PCIE.c
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/efuse/rtl8821c/HalEfuseMask8821C_PCIE.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/efuse/rtl8821c/HalEfuseMask8821C_PCIE.h
index a33752c9cda8..2443e37d018d 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/efuse/rtl8821c/HalEfuseMask8821C_PCIE.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/efuse/rtl8821c/HalEfuseMask8821C_PCIE.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/efuse/rtl8821c/HalEfuseMask8821C_SDIO.c b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/efuse/rtl8821c/HalEfuseMask8821C_SDIO.c
index f12b1c7ac034..1001ccd5ff8d 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/efuse/rtl8821c/HalEfuseMask8821C_SDIO.c
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/efuse/rtl8821c/HalEfuseMask8821C_SDIO.c
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/efuse/rtl8821c/HalEfuseMask8821C_SDIO.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/efuse/rtl8821c/HalEfuseMask8821C_SDIO.h
index 62210d1f8e4c..a35da290a81e 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/efuse/rtl8821c/HalEfuseMask8821C_SDIO.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/efuse/rtl8821c/HalEfuseMask8821C_SDIO.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/efuse/rtl8821c/HalEfuseMask8821C_USB.c b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/efuse/rtl8821c/HalEfuseMask8821C_USB.c
index aa41f45a5daf..22b2355b4a95 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/efuse/rtl8821c/HalEfuseMask8821C_USB.c
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/efuse/rtl8821c/HalEfuseMask8821C_USB.c
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/efuse/rtl8821c/HalEfuseMask8821C_USB.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/efuse/rtl8821c/HalEfuseMask8821C_USB.h
index 9bbcb53d99d9..57f7e68786d4 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/efuse/rtl8821c/HalEfuseMask8821C_USB.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/efuse/rtl8821c/HalEfuseMask8821C_USB.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/hal_btcoex.c b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/hal_btcoex.c
index dec5f8a1fb91..32ef8ec7447a 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/hal_btcoex.c
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/hal_btcoex.c
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2013 - 2019 Realtek Corporation.
@@ -2330,7 +2329,7 @@ void halbtcoutsrc_WriteLIndirectReg(void *pBtcContext, u16 reg_addr, u32 bit_mas
 	}
 }
 
-u32 halbtcoutsrc_Read_scbd(void *pBtcContext, u32* score_board_val)
+u16 halbtcoutsrc_Read_scbd(void *pBtcContext, u16* score_board_val)
 {
 	PBTC_COEXIST btc = (PBTC_COEXIST)pBtcContext;
 	struct btc_coex_sta *coex_sta = &btc->coex_sta;
@@ -2339,20 +2338,35 @@ u32 halbtcoutsrc_Read_scbd(void *pBtcContext, u32* score_board_val)
 	if (!chip_para->scbd_support)
 		return 0;
 
-	*score_board_val = (btc->btc_read_4byte(btc, chip_para->scbd_reg))
-								& 0x7fffffff;
+	*score_board_val = (btc->btc_read_2byte(btc, chip_para->scbd_reg))
+								& 0x7fff;
 	coex_sta->score_board_BW = *score_board_val;
 
 	return coex_sta->score_board_BW;
 }
 
-void halbtcoutsrc_Write_scbd(void *pBtcContext, u32 bitpos, u8 state)
+u32 halbtcoutsrc_Read_scbd_32bit(void *pBtcContext, u32* score_board_val)
 {
 	PBTC_COEXIST btc = (PBTC_COEXIST)pBtcContext;
 	struct btc_coex_sta *coex_sta = &btc->coex_sta;
 	const struct btc_chip_para *chip_para = btc->chip_para;
-	u32 val = 0x2;
-	u8* btc_dbg_buf = &gl_btc_trace_buf[0];
+
+	if (!chip_para->scbd_support)
+		return 0;
+
+	*score_board_val = (btc->btc_read_4byte(btc, chip_para->scbd_reg))
+								& 0x7fffffff;
+	coex_sta->score_board_BW_32bit = *score_board_val;
+
+	return coex_sta->score_board_BW_32bit;
+}
+
+void halbtcoutsrc_Write_scbd(void *pBtcContext, u16 bitpos, u8 state)
+{
+	PBTC_COEXIST btc = (PBTC_COEXIST)pBtcContext;
+	struct btc_coex_sta *coex_sta = &btc->coex_sta;
+	const struct btc_chip_para *chip_para = btc->chip_para;
+	u16 val = 0x2;
 
 	if (!chip_para->scbd_support)
 		return;
@@ -2376,19 +2390,52 @@ void halbtcoutsrc_Write_scbd(void *pBtcContext, u32 bitpos, u8 state)
 
 	if (val != coex_sta->score_board_WB) {
 		coex_sta->score_board_WB = val;
+		val = val | 0x8000;
+
+		btc->btc_write_2byte(btc, chip_para->scbd_reg, val);
+
+		RTW_DBG("[BTC], write scoreboard 0x%x\n", val);
+	} else {
+		RTW_DBG("[BTC], return for nochange\n");
+	}
+}
+
+void halbtcoutsrc_Write_scbd_32bit(void *pBtcContext, u32 bitpos, u8 state)
+{
+	PBTC_COEXIST btc = (PBTC_COEXIST)pBtcContext;
+	struct btc_coex_sta *coex_sta = &btc->coex_sta;
+	const struct btc_chip_para *chip_para = btc->chip_para;
+	u32 val = 0x2;
 
-		if(chip_para->scbd_bit_num == BTC_SCBD_32_BIT)
-			val = val | 0x80000000;
+	if (!chip_para->scbd_support)
+		return;
+
+	val = val | coex_sta->score_board_WB_32bit;
+
+	/* for 8822b, Scoreboard[10]: 0: CQDDR off, 1: CQDDR on
+	 * for 8822c, Scoreboard[10]: 0: CQDDR on, 1:CQDDR fix 2M
+	 */
+	if (!btc->chip_para->new_scbd10_def && (bitpos & BTC_SCBD_FIX2M)) {
+		if (state)
+			val = val & (~BTC_SCBD_FIX2M);
 		else
-			val = val | 0x8000;
-		
+			val = val | BTC_SCBD_FIX2M;
+	} else {
+		if (state)
+			val = val | bitpos;
+		else
+			val = val & (~bitpos);
+	}
+
+	if (val != coex_sta->score_board_WB_32bit) {
+		coex_sta->score_board_WB_32bit = val;
+		val = val | 0x80000000;
+
 		btc->btc_write_4byte(btc, chip_para->scbd_reg, val);
-		
-		BTC_SPRINTF(btc_dbg_buf, BT_TMP_BUF_SIZE,
-			    "[BTCoex], write scoreboard 0x%x\n", val);
+
+		RTW_DBG("[BTC], write scoreboard 0x%x\n", val);
 	} else {
-		BTC_SPRINTF(btc_dbg_buf, BT_TMP_BUF_SIZE,
-			    "[BTCoex], %s: return for nochange\n", __func__);
+		RTW_DBG("[BTC], return for nochange\n");
 	}
 }
 
@@ -3212,11 +3259,13 @@ u8 EXhalbtcoutsrc_BindBtCoexWithAdapter(void *padapter)
 		pBtCoexist->chip_para = &btc_chip_para_8192f;
 	}
 #endif
+#ifdef PLATFORM_LINUX
 #ifdef CONFIG_RTL8723F
 	else if (IS_HARDWARE_TYPE_8723F(padapter)) {
 			pBtCoexist->chip_type = BTC_CHIP_RTL8723F;
 			pBtCoexist->chip_para = &btc_chip_para_8723f;
 		}
+#endif
 #endif
 	else {
 		pBtCoexist->chip_type = BTC_CHIP_UNDEF;
@@ -3292,7 +3341,9 @@ u8 EXhalbtcoutsrc_InitlizeVariables(void *padapter)
 	pBtCoexist->btc_write_linderct = halbtcoutsrc_WriteLIndirectReg;
 
 	pBtCoexist->btc_read_scbd = halbtcoutsrc_Read_scbd;
+	pBtCoexist->btc_read_scbd_32bit = halbtcoutsrc_Read_scbd_32bit;
 	pBtCoexist->btc_write_scbd = halbtcoutsrc_Write_scbd;
+	pBtCoexist->btc_write_scbd_32bit = halbtcoutsrc_Write_scbd_32bit;
 
 	pBtCoexist->btc_set_bb_reg = halbtcoutsrc_SetBbReg;
 	pBtCoexist->btc_get_bb_reg = halbtcoutsrc_GetBbReg;
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/hal_btcoex_wifionly.c b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/hal_btcoex_wifionly.c
index 21d1d2304324..a9ef07f14a31 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/hal_btcoex_wifionly.c
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/hal_btcoex_wifionly.c
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2016 - 2017 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/hal_com.c b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/hal_com.c
index 1a49503d7f20..b0de6b5f9bbf 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/hal_com.c
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/hal_com.c
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017 Realtek Corporation.
@@ -380,91 +379,47 @@ u8 rtw_hal_get_port(_adapter *adapter)
  */
 void hal_com_config_channel_plan(
 		PADAPTER padapter,
-		char *hw_alpha2,
+		const char *hw_alpha2,
 		u8 hw_chplan,
-		char *sw_alpha2,
-		u8 sw_chplan,
+		u8 hw_chplan_6g,
 		BOOLEAN AutoLoadFail
 )
 {
-	struct rf_ctl_t *rfctl = adapter_to_rfctl(padapter);
-	PHAL_DATA_TYPE	pHalData;
+	HAL_DATA_TYPE *hal_data = GET_HAL_DATA(padapter);
 	u8 force_hw_chplan = _FALSE;
-	int chplan = -1;
-	const struct country_chplan *country_ent = NULL, *ent;
-	u8 def_chplan = 0x7F; /* Realtek define,  used when HW, SW both invalid */
 
-	pHalData = GET_HAL_DATA(padapter);
+	/*
+	* autoload fail, by pass all hw settings
+	*/
+	if (AutoLoadFail == _TRUE) {
+		hw_alpha2 = NULL;
+		hw_chplan = RTW_CHPLAN_UNSPECIFIED;
+		goto init;
+	}
 
-	/* treat 0xFF as invalid value, bypass hw_chplan & force_hw_chplan parsing */
-	if (hw_chplan == 0xFF)
-		goto chk_hw_country_code;
+	/*
+	* treat {0xFF, 0xFF} as unspecified
+	*/
+	if (hw_alpha2 && strncmp(hw_alpha2, "\xFF\xFF", 2) == 0)
+		hw_alpha2 = NULL;
 
-	if (AutoLoadFail == _TRUE)
-		goto chk_sw_config;
+	/*
+	* treat 0xFF as invalid value, bypass hw_chplan & force_hw_chplan parsing
+	* and check hw setting with only country code
+	*/
+	if (hw_chplan == 0xFF) {
+		hw_chplan = RTW_CHPLAN_UNSPECIFIED;
+		goto init;
+	}
 
 #ifndef CONFIG_FORCE_SW_CHANNEL_PLAN
 	if (hw_chplan & EEPROM_CHANNEL_PLAN_BY_HW_MASK)
 		force_hw_chplan = _TRUE;
 #endif
-
 	hw_chplan &= (~EEPROM_CHANNEL_PLAN_BY_HW_MASK);
 
-chk_hw_country_code:
-	if (hw_alpha2 && !IS_ALPHA2_NO_SPECIFIED(hw_alpha2)) {
-		ent = rtw_get_chplan_from_country(hw_alpha2);
-		if (ent) {
-			/* get chplan from hw country code, by pass hw chplan setting */
-			country_ent = ent;
-			chplan = ent->chplan;
-			goto chk_sw_config;
-		} else
-			RTW_PRINT("%s unsupported hw_alpha2:\"%c%c\"\n", __func__, hw_alpha2[0], hw_alpha2[1]);
-	}
-
-	if (rtw_is_channel_plan_valid(hw_chplan))
-		chplan = hw_chplan;
-	else if (force_hw_chplan == _TRUE) {
-		RTW_PRINT("%s unsupported hw_chplan:0x%02X\n", __func__, hw_chplan);
-		/* hw infomaton invalid, refer to sw information */
-		force_hw_chplan = _FALSE;
-	}
-
-chk_sw_config:
-	if (force_hw_chplan == _TRUE)
-		goto done;
-
-	if (sw_alpha2 && !IS_ALPHA2_NO_SPECIFIED(sw_alpha2)) {
-		ent = rtw_get_chplan_from_country(sw_alpha2);
-		if (ent) {
-			/* get chplan from sw country code, by pass sw chplan setting */
-			country_ent = ent;
-			chplan = ent->chplan;
-			goto done;
-		} else
-			RTW_PRINT("%s unsupported sw_alpha2:\"%c%c\"\n", __func__, sw_alpha2[0], sw_alpha2[1]);
-	}
-
-	if (rtw_is_channel_plan_valid(sw_chplan)) {
-		/* cancel hw_alpha2 because chplan is specified by sw_chplan*/
-		country_ent = NULL;
-		chplan = sw_chplan;
-	} else if (sw_chplan != RTW_CHPLAN_UNSPECIFIED)
-		RTW_PRINT("%s unsupported sw_chplan:0x%02X\n", __func__, sw_chplan);
-
-done:
-	if (chplan == -1) {
-		RTW_PRINT("%s use def_chplan:0x%02X\n", __func__, def_chplan);
-		chplan = def_chplan;
-	} else if (country_ent) {
-		RTW_PRINT("%s country code:\"%c%c\" with chplan:0x%02X\n", __func__
-			, country_ent->alpha2[0], country_ent->alpha2[1], country_ent->chplan);
-	} else
-		RTW_PRINT("%s chplan:0x%02X\n", __func__, chplan);
-
-	rfctl->country_ent = country_ent;
-	rfctl->ChannelPlan = chplan;
-	pHalData->bDisableSWChannelPlan = force_hw_chplan;
+init:
+	rtw_rfctl_decide_init_chplan(adapter_to_rfctl(padapter), hw_alpha2, hw_chplan, hw_chplan_6g, force_hw_chplan);
 }
 
 BOOLEAN
@@ -1063,6 +1018,53 @@ void rtw_hal_reqtxrpt(_adapter *padapter, u8 macid)
 		padapter->hal_func.reqtxrpt(padapter, macid);
 }
 
+int rtw_get_sta_tx_stat(_adapter *adapter, u8 mac_id, u8 *macaddr)
+{
+	struct sta_priv	*pstapriv_primary = &(GET_PRIMARY_ADAPTER(adapter))->stapriv;
+	struct submit_ctx gotc2h;
+	u8 cmd_ret;
+	int ret = _SUCCESS;
+
+	if (!adapter->hal_func.reqtxrpt) {
+		RTW_INFO("Not support.\n");
+		ret = RTW_NOT_SUPPORT;
+		goto exit;
+	}
+
+	if (pstapriv_primary->gotc2h != NULL) {
+		RTW_INFO("sta tx stat is processing.\n");
+		ret = RTW_BUSY;
+		goto exit;
+	}
+
+	rtw_sctx_init(&gotc2h, 60);
+	pstapriv_primary->gotc2h = &gotc2h;
+	_rtw_memcpy(pstapriv_primary->c2h_sta_mac, macaddr, ETH_ALEN);
+	pstapriv_primary->c2h_adapter_id = adapter->iface_id;
+
+	cmd_ret = rtw_reqtxrpt_cmd(adapter, mac_id);
+	if (cmd_ret != _SUCCESS) {
+		RTW_WARN("rtw_reqtxrpt_cmd fail\n");
+		ret = _FAIL;
+	} else
+		rtw_sctx_wait(&gotc2h, __func__);
+
+	enter_critical_bh(&pstapriv_primary->tx_rpt_lock);
+	pstapriv_primary->gotc2h = NULL;
+	exit_critical_bh(&pstapriv_primary->tx_rpt_lock);
+
+	if (cmd_ret == _SUCCESS && gotc2h.status != RTW_SCTX_DONE_SUCCESS) {
+		RTW_WARN("wait for C2H timeout, operation abort!!\n");
+		ret = _FAIL;
+	}
+
+	_rtw_memset(pstapriv_primary->c2h_sta_mac, 0, ETH_ALEN);
+	pstapriv_primary->c2h_adapter_id = CONFIG_IFACE_NUMBER;
+
+exit:
+	return ret;
+}
+
 void rtw_hal_dump_macaddr(void *sel, _adapter *adapter)
 {
 	int i;
@@ -1077,6 +1079,30 @@ void rtw_hal_dump_macaddr(void *sel, _adapter *adapter)
 #endif
 }
 
+/**
+ * rtw_hal_set_hw_macaddr() - Set HW MAC address
+ * @adapter:	struct PADAPTER
+ * @mac_addr:   6-bytes mac address
+ *
+ * Set Wifi Mac address by writing to the relative HW registers,
+ *
+ */
+void rtw_hal_set_hw_macaddr(PADAPTER adapter, u8 *mac_addr)
+{
+	rtw_ps_deny(adapter, PS_DENY_IOCTL);
+	LeaveAllPowerSaveModeDirect(adapter);
+
+#ifdef CONFIG_MI_WITH_MBSSID_CAM
+	rtw_hal_change_macaddr_mbid(adapter, mac_addr);
+#else
+	rtw_hal_set_hwreg(adapter, HW_VAR_MAC_ADDR, mac_addr);
+#endif
+#ifdef CONFIG_RTW_DEBUG
+	rtw_hal_dump_macaddr(RTW_DBGDUMP, adapter);
+#endif
+	rtw_ps_deny_cancel(adapter, PS_DENY_IOCTL);
+}
+
 #ifdef RTW_HALMAC
 void rtw_hal_hw_port_enable(_adapter *adapter)
 {
@@ -1521,6 +1547,32 @@ int c2h_mac_hidden_rpt_2_hdl(_adapter *adapter, u8 *data, u8 len)
 	}
 	#endif
 
+	#if defined(CONFIG_8723F)
+	if (IS_8723F_SERIES(hal_data->version_id)) {
+		#define GET_C2H_MAC_HIDDEN_RPT_BT_SUPPORT(_data)	LE_BITS_TO_1BYTE(((u8 *)(_data)) + 4, 0, 1)
+		#define GET_C2H_MAC_HIDDEN_RPT_5G_SUPPORT(_data)	LE_BITS_TO_1BYTE(((u8 *)(_data)) + 4, 1, 1)
+
+		struct hal_spec_t *hal_spec;
+		u8 bt_support = GET_C2H_MAC_HIDDEN_RPT_BT_SUPPORT(data);
+		u8 band_5g_support = GET_C2H_MAC_HIDDEN_RPT_5G_SUPPORT(data);
+
+		hal_spec = GET_HAL_SPEC(adapter);
+
+		if (DBG_C2H_MAC_HIDDEN_RPT_HANDLE) {
+			RTW_PRINT("bt support:%u\n", bt_support);
+			RTW_PRINT("band 5g support:%u\n", band_5g_support);
+		}
+
+		hal_spec->rfpath_num_5g = (band_5g_support ? hal_spec->rfpath_num_5g : 0);
+		if(!band_5g_support)
+			hal_spec->band_cap &= ~BAND_CAP_5G;
+
+		hal_data->EEPROMBluetoothCoexist = bt_support;
+		/* 0 : solo module, 1 : combo module */
+		hal_data->InterfaceSel = bt_support;
+	}
+	#endif
+
 	ret = _SUCCESS;
 
 exit:
@@ -2011,10 +2063,10 @@ void rtw_hal_update_sta_wset(_adapter *adapter, struct sta_info *psta)
 	if ((psta->wireless_mode & WIRELESS_11G) || (psta->wireless_mode & WIRELESS_11A))
 		w_set |= WIRELESS_OFDM;
 
-	if (psta->wireless_mode & WIRELESS_11_24N)
+	if ((psta->wireless_mode & WIRELESS_11_24N) || (psta->wireless_mode & WIRELESS_11_5N))
 		w_set |= WIRELESS_HT;
 
-	if ((psta->wireless_mode & WIRELESS_11AC) || (psta->wireless_mode & WIRELESS_11_5N))
+	if (psta->wireless_mode & WIRELESS_11AC)
 		w_set |= WIRELESS_VHT;
 
 	psta->cmn.support_wireless_set = w_set;
@@ -3093,8 +3145,12 @@ void rtw_ap_multi_bcn_cfg(_adapter *adapter)
 	rtw_write8(adapter, REG_ATIMWND, 0x0c); /* 12ms */
 
 	#ifndef CONFIG_HW_P0_TSF_SYNC
+	#ifdef CONFIG_RTL8192F
+	rtw_write16(adapter, REG_TSFTR_SYN_OFFSET, 0x640);/*unit:32us*/
+	#else/*not CONFIG_RTL8192F*/
 	rtw_write16(adapter, REG_TSFTR_SYN_OFFSET, 0x7fff);/* +32767 (~32ms) */
 	#endif
+	#endif
 
 	/*reset TSF*/
 	rtw_write8(adapter, REG_DUAL_TSF_RST, BIT(0));
@@ -3584,14 +3640,14 @@ void rtw_hal_rcr_set_chk_bssid(_adapter *adapter, u8 self_action)
 	HAL_DATA_TYPE *hal_data = GET_HAL_DATA(adapter);
 	struct hal_spec_t *hal_spec = GET_HAL_SPEC(adapter);
 	u32 rcr, rcr_new;
+#if !defined(CONFIG_MI_WITH_MBSSID_CAM) || defined(CONFIG_CLIENT_PORT_CFG) || defined(CONFIG_RTW_MULTI_AP)
 	struct mi_state mstate, mstate_s;
+#endif
 
 	rtw_hal_get_hwreg(adapter, HW_VAR_RCR, (u8 *)&rcr);
 	rcr_new = rcr;
 
-#if defined(CONFIG_MI_WITH_MBSSID_CAM) && !defined(CONFIG_CLIENT_PORT_CFG)
-	rcr_new &= ~(RCR_CBSSID_BCN | RCR_CBSSID_DATA);
-#else
+#if !defined(CONFIG_MI_WITH_MBSSID_CAM) || defined(CONFIG_CLIENT_PORT_CFG) || defined(CONFIG_RTW_MULTI_AP)
 	rtw_mi_status_no_self(adapter, &mstate);
 	rtw_mi_status_no_others(adapter, &mstate_s);
 
@@ -3651,7 +3707,11 @@ void rtw_hal_rcr_set_chk_bssid(_adapter *adapter, u8 self_action)
 	};
 
 	rtw_mi_status_merge(&mstate, &mstate_s);
+#endif /* !defined(CONFIG_MI_WITH_MBSSID_CAM) || defined(CONFIG_CLIENT_PORT_CFG) || defined(CONFIG_RTW_MULTI_AP) */
 
+#if defined(CONFIG_MI_WITH_MBSSID_CAM) && !defined(CONFIG_CLIENT_PORT_CFG)
+	rcr_new &= ~(RCR_CBSSID_BCN | RCR_CBSSID_DATA);
+#else
 	if (MSTATE_AP_NUM(&mstate) || MSTATE_MESH_NUM(&mstate) || MSTATE_TDLS_LD_NUM(&mstate)
 		#ifdef CONFIG_FIND_BEST_CHANNEL
 		|| MSTATE_SCAN_ENTER_NUM(&mstate)
@@ -4883,7 +4943,7 @@ void rtw_hal_set_FwAoacRsvdPage_cmd(PADAPTER padapter, PRSVDPAGE_LOC rsvdpageloc
 				   u1H2CAoacRsvdPageParm);
 		pwrpriv->wowlan_aoac_rpt_loc = rsvdpageloc->LocAOACReport;
 	}
-#ifdef CONFIG_PNO_SUPPORT
+#if defined(CONFIG_PNO_SUPPORT) && !defined(RTW_HALMAC)
 	else {
 
 		if (!pwrpriv->wowlan_in_resume) {
@@ -4898,7 +4958,7 @@ void rtw_hal_set_FwAoacRsvdPage_cmd(PADAPTER padapter, PRSVDPAGE_LOC rsvdpageloc
 						   u1H2CAoacRsvdPageParm);
 		}
 	}
-#endif /* CONFIG_PNO_SUPPORT */
+#endif /* defined(CONFIG_PNO_SUPPORT) && !defined(RTW_HALMAC) */
 #endif /* CONFIG_WOWLAN */
 }
 
@@ -5280,7 +5340,7 @@ static u8 rtw_hal_check_wow_ctrl(_adapter *adapter, u8 chk_type)
 	return res;
 }
 
-#ifdef CONFIG_PNO_SUPPORT
+#if defined(CONFIG_PNO_SUPPORT) && !defined(RTW_HALMAC)
 static u8 rtw_hal_check_pno_enabled(_adapter *adapter)
 {
 	struct pwrctrl_priv *ppwrpriv = adapter_to_pwrctl(adapter);
@@ -5764,11 +5824,6 @@ static u8 rtw_hal_set_wowlan_ctrl_cmd(_adapter *adapter, u8 enable, u8 change_un
 		registry_par->wakeup_event & BIT(0) && !no_wake)
 		magic_pkt = enable;
 
-	if ((registry_par->wakeup_event & BIT(1)) &&
-		(psecpriv->dot11PrivacyAlgrthm == _WEP40_ ||
-		psecpriv->dot11PrivacyAlgrthm == _WEP104_) && !no_wake)
-			hw_unicast = 1;
-
 	if (registry_par->wakeup_event & BIT(2) && !no_wake)
 		discont_wake = enable;
 
@@ -5856,7 +5911,6 @@ static u8 rtw_hal_set_remote_wake_ctrl_cmd(_adapter *adapter, u8 enable)
 	struct security_priv *psecuritypriv = &(adapter->securitypriv);
 	struct pwrctrl_priv *ppwrpriv = adapter_to_pwrctl(adapter);
 	struct registry_priv *pregistrypriv = &adapter->registrypriv;
-	u8 arp_en = pregistrypriv->wakeup_event & BIT(3);
 	u8 u1H2CRemoteWakeCtrlParm[H2C_REMOTE_WAKE_CTRL_LEN] = {0};
 	u8 ret = _FAIL, count = 0, no_wake = 0;
 	struct mlme_priv	*pmlmepriv = &(adapter->mlmepriv);
@@ -5873,12 +5927,6 @@ static u8 rtw_hal_set_remote_wake_ctrl_cmd(_adapter *adapter, u8 enable)
 		if (!ppwrpriv->wowlan_pno_enable) {
 			SET_H2CCMD_REMOTE_WAKECTRL_ENABLE(
 				u1H2CRemoteWakeCtrlParm, enable);
-			if (arp_en)
-				SET_H2CCMD_REMOTE_WAKE_CTRL_ARP_OFFLOAD_EN(
-					u1H2CRemoteWakeCtrlParm, 1);
-			else
-				SET_H2CCMD_REMOTE_WAKE_CTRL_ARP_OFFLOAD_EN(
-					u1H2CRemoteWakeCtrlParm, 0);
 	#ifdef CONFIG_GTK_OL
 			if (psecuritypriv->binstallKCK_KEK == _TRUE &&
 				(psecuritypriv->ndisauthtype == Ndis802_11AuthModeWPA2PSK || _rtw_wow_chk_cap(adapter, WOW_CAP_TKIP_OL))) {
@@ -5915,17 +5963,6 @@ static u8 rtw_hal_set_remote_wake_ctrl_cmd(_adapter *adapter, u8 enable)
 			}
 	#endif /* CONFIG_RTL8192F */
 #endif
-			if ((psecuritypriv->dot11PrivacyAlgrthm == _AES_) ||
-				(psecuritypriv->dot11PrivacyAlgrthm == _TKIP_) ||
-				(psecuritypriv->dot11PrivacyAlgrthm == _NO_PRIVACY_)) {
-				SET_H2CCMD_REMOTE_WAKE_CTRL_ARP_ACTION(
-					u1H2CRemoteWakeCtrlParm, 0);
-			} else { /* WEP etc. */
-				if (arp_en)
-					SET_H2CCMD_REMOTE_WAKE_CTRL_ARP_ACTION(
-						u1H2CRemoteWakeCtrlParm, 1);
-			}
-	
 			if (psecuritypriv->dot11PrivacyAlgrthm == _TKIP_) {
 #ifdef CONFIG_GTK_OL
 				if(_rtw_wow_chk_cap(adapter, WOW_CAP_TKIP_OL))
@@ -5936,12 +5973,33 @@ static u8 rtw_hal_set_remote_wake_ctrl_cmd(_adapter *adapter, u8 enable)
 				    IS_HARDWARE_TYPE_8812(adapter)) {
 					SET_H2CCMD_REMOTE_WAKE_CTRL_TKIP_OFFLOAD_EN(
 						u1H2CRemoteWakeCtrlParm, 0);
-					if (arp_en)
-						SET_H2CCMD_REMOTE_WAKE_CTRL_ARP_ACTION(
-							u1H2CRemoteWakeCtrlParm, 1);
 				}
 			}
-	
+
+			if (0) {
+				/* ARP wake up case */
+				SET_H2CCMD_REMOTE_WAKE_CTRL_ARP_OFFLOAD_EN(
+					u1H2CRemoteWakeCtrlParm, 1);
+				SET_H2CCMD_REMOTE_WAKE_CTRL_ARP_ACTION(
+					u1H2CRemoteWakeCtrlParm, 1);
+			} else if (pregistrypriv->wakeup_event) {
+				/* ARP no wake up case */
+				if ((psecuritypriv->dot11PrivacyAlgrthm == _AES_) ||
+				    (psecuritypriv->dot11PrivacyAlgrthm == _NO_PRIVACY_)) {
+					SET_H2CCMD_REMOTE_WAKE_CTRL_ARP_OFFLOAD_EN(
+						u1H2CRemoteWakeCtrlParm, 1);
+				}
+				#ifdef CONFIG_GTK_OL
+				else if (psecuritypriv->dot11PrivacyAlgrthm == _TKIP_ &&
+					 _rtw_wow_chk_cap(adapter, WOW_CAP_TKIP_OL)) {
+					SET_H2CCMD_REMOTE_WAKE_CTRL_ARP_OFFLOAD_EN(
+						u1H2CRemoteWakeCtrlParm, 1);
+				}
+				#endif
+			} else {
+				/* ARP no wake up and no ARP response case */
+			}
+
 			SET_H2CCMD_REMOTE_WAKE_CTRL_FW_PARSING_UNTIL_WAKEUP(
 				u1H2CRemoteWakeCtrlParm, 1);
 		}
@@ -6059,8 +6117,9 @@ static u8 rtw_hal_set_scan_offload_info_cmd(_adapter *adapter,
 		PRSVDPAGE_LOC rsvdpageloc, u8 enable)
 {
 	struct pwrctrl_priv *pwrpriv = adapter_to_pwrctl(adapter);
+	u8 ret = _FAIL;
+#ifndef RTW_HALMAC
 	u8 u1H2CScanOffloadInfoParm[H2C_SCAN_OFFLOAD_CTRL_LEN] = {0};
-	u8 res = 0, count = 0, ret = _FAIL;
 
 	RTW_INFO("%s: loc_probe_packet:%d, loc_scan_info: %d loc_ssid_info:%d\n",
 		 __func__, rsvdpageloc->LocProbePacket,
@@ -6080,6 +6139,25 @@ static u8 rtw_hal_set_scan_offload_info_cmd(_adapter *adapter,
 				   H2C_D0_SCAN_OFFLOAD_INFO,
 				   H2C_SCAN_OFFLOAD_CTRL_LEN,
 				   u1H2CScanOffloadInfoParm);
+#else
+	u8 u1H2CNLOINFOInfoParm[H2C_NLO_INFO_LEN] = {0};
+
+	RTW_INFO("%s: loc_nlo_info: %d enable %d\n", __func__,
+	rsvdpageloc->LocPNOInfo, enable);
+
+	SET_H2CCMD_NLO_FUN_EN(u1H2CNLOINFOInfoParm, enable);
+#ifdef CONFIG_LPS_LCLK
+	// TODO(Owen): Controlled by wowlan lps level
+	/* This H2C bit requires driver leave LCLK in rtw_resume_process_wow() */
+	SET_H2CCMD_NLO_PS_32K(u1H2CNLOINFOInfoParm, enable);
+#endif
+	SET_H2CCMD_NLO_LOC_NLO_INFO(u1H2CNLOINFOInfoParm, rsvdpageloc->LocPNOInfo);
+
+	ret = rtw_hal_fill_h2c_cmd(adapter,
+		H2C_NLO_INFO,
+		H2C_NLO_INFO_LEN,
+		u1H2CNLOINFOInfoParm);
+#endif
 	return ret;
 }
 #endif /* CONFIG_PNO_SUPPORT */
@@ -6126,9 +6204,9 @@ void rtw_hal_set_fw_wow_related_cmd(_adapter *padapter, u8 enable)
 				rtw_hal_set_keep_alive_cmd(padapter, enable, pkt_type);
                         }
 		}
-#ifdef CONFIG_PNO_SUPPORT
+#if defined(CONFIG_PNO_SUPPORT) && !defined(RTW_HALMAC)
 		rtw_hal_check_pno_enabled(padapter);
-#endif /* CONFIG_PNO_SUPPORT */
+#endif /* defined(CONFIG_PNO_SUPPORT) && !defined(RTW_HALMAC) */
 #ifdef CONFIG_WAR_OFFLOAD
 		rtw_hal_set_war_offload_ctrl_cmd(padapter, enable);
 #endif /* CONFIG_WAR_OFFLOAD */
@@ -8621,8 +8699,8 @@ static void rtw_hal_construct_ndp_info(_adapter *padapter,
 #endif /* CONFIG_IPV6 */
 
 #ifdef CONFIG_PNO_SUPPORT
-static void rtw_hal_construct_ProbeReq(_adapter *padapter, u8 *pframe,
-				       u32 *pLength, pno_ssid_t *ssid)
+void rtw_hal_construct_ProbeReq(_adapter *padapter, u8 *pframe,
+				u32 *pLength, pno_ssid_t *ssid)
 {
 	struct rtw_ieee80211_hdr	*pwlanhdr;
 	u16				*fctrl;
@@ -8685,6 +8763,11 @@ static void rtw_hal_construct_PNO_info(_adapter *padapter,
 	_rtw_memcpy(pPnoInfoPkt, &pwrctl->pnlo_info->hidden_ssid_num, 1);
 
 	pPnoInfoPkt += 3;
+#ifdef RTW_HALMAC
+	/* Pattern check for 3081 ICs */
+	_rtw_memset(pPnoInfoPkt, 0xA5A5A5A5, 4);
+	pPnoInfoPkt += 12;
+#else
 	_rtw_memcpy(pPnoInfoPkt, &pwrctl->pnlo_info->fast_scan_period, 1);
 
 	pPnoInfoPkt += 4;
@@ -8694,6 +8777,7 @@ static void rtw_hal_construct_PNO_info(_adapter *padapter,
 	_rtw_memcpy(pPnoInfoPkt, &pwrctl->pnlo_info->slow_scan_period, 4);
 
 	pPnoInfoPkt += 4;
+#endif
 	_rtw_memcpy(pPnoInfoPkt, &pwrctl->pnlo_info->ssid_length, MAX_PNO_LIST_COUNT);
 
 	pPnoInfoPkt += MAX_PNO_LIST_COUNT;
@@ -8707,13 +8791,15 @@ static void rtw_hal_construct_PNO_info(_adapter *padapter,
 
 	pPnoInfoPkt += MAX_HIDDEN_AP;
 
-	/*
-	SSID is located at 128th Byte in NLO info Page
-	*/
-
+#ifdef RTW_HALMAC
+	/* SSID is located at 72th byte in NLO info Page for ICs that have HAMMAC */
+	*pLength += 72;
+	pPnoInfoPkt = pframe + 72;
+#else
+	/* SSID is located at 128th Byte in NLO info Page for ICs that don't have HAMMAC */
 	*pLength += 128;
 	pPnoInfoPkt = pframe + 128;
-
+#endif
 	for (i = 0; i < pwrctl->pnlo_info->ssid_num ; i++) {
 		_rtw_memcpy(pPnoInfoPkt, &pwrctl->pno_ssid_list->node[i].SSID,
 			    pwrctl->pnlo_info->ssid_length[i]);
@@ -8722,6 +8808,7 @@ static void rtw_hal_construct_PNO_info(_adapter *padapter,
 	}
 }
 
+#ifndef RTW_HALMAC
 static void rtw_hal_construct_ssid_list(_adapter *padapter,
 					u8 *pframe, u32 *pLength)
 {
@@ -8795,6 +8882,7 @@ static void rtw_hal_construct_scan_info(_adapter *padapter,
 		pScanInfoPkt += 4;
 	}
 }
+#endif /* !RTW_HALMAC */
 #endif /* CONFIG_PNO_SUPPORT */
 
 #ifdef CONFIG_WAR_OFFLOAD
@@ -9244,713 +9332,773 @@ static void rtw_hal_construct_remote_control_info(_adapter *adapter,
 	}
 }
 
-void rtw_hal_set_wow_fw_rsvd_page(_adapter *adapter, u8 *pframe, u16 index,
-		  u8 tx_desc, u32 page_size, u8 *page_num, u32 *total_pkt_len,
-				  RSVDPAGE_LOC *rsvd_page_loc)
+static void rtw_hal_gate_bb(_adapter *adapter, bool stop)
 {
-	struct security_priv *psecuritypriv = &adapter->securitypriv;
-	struct mlme_priv *pmlmepriv = &adapter->mlmepriv;
-	struct pwrctrl_priv *pwrctl = adapter_to_pwrctl(adapter);
-	struct mlme_ext_priv	*pmlmeext;
-	struct mlme_ext_info	*pmlmeinfo;
-	u32	ARPLength = 0, GTKLength = 0, PNOLength = 0, ScanInfoLength = 0;
-	u32 ProbeReqLength = 0, ns_len = 0, rc_len = 0;
-	u8 CurtPktPageNum = 0;
-#ifdef CONFIG_WOW_KEEP_ALIVE_PATTERN
-	u32 keep_alive_len=0;
-	int i;
-#endif /*CONFIG_WOW_KEEP_ALIVE_PATTERN */
-#ifdef CONFIG_WAR_OFFLOAD
-	u16 tmp_idx = 0;
-	u32	buf_len = 0;
-#endif
+	struct pwrctrl_priv *pwrpriv = adapter_to_pwrctl(adapter);
+	u8 i = 0, val8 = 0, empty = _FAIL;
 
-#ifdef CONFIG_GTK_OL
-	struct sta_priv *pstapriv = &adapter->stapriv;
-	struct sta_info *psta;
-	struct security_priv *psecpriv = &adapter->securitypriv;
-	u8 kek[RTW_KEK_LEN];
-	u8 kck[RTW_KCK_LEN];
-#endif /* CONFIG_GTK_OL */
-#ifdef CONFIG_PNO_SUPPORT
-	int pno_index;
-	u8 ssid_num;
-#endif /* CONFIG_PNO_SUPPORT */
+	if (stop) {
+		/* checking TX queue status */
+		for (i = 0 ; i < 5 ; i++) {
+			rtw_hal_get_hwreg(adapter, HW_VAR_CHK_MGQ_CPU_EMPTY, &empty);
+			if (empty) {
+				break;
+			} else {
+				RTW_WARN("%s: MGQ_CPU is busy(%d)!\n",
+					 __func__, i);
+				rtw_mdelay_os(10);
+			}
+		}
 
-	pmlmeext = &adapter->mlmeextpriv;
-	pmlmeinfo = &pmlmeext->mlmext_info;
+		if (val8 == 5)
+			RTW_ERR("%s: Polling MGQ_CPU empty fail!\n", __func__);
 
-	if (pwrctl->wowlan_pno_enable == _FALSE) {
-		/* ARP RSP * 1 page */
+		/* Pause TX*/
+		pwrpriv->wowlan_txpause_status = rtw_read8(adapter, REG_TXPAUSE);
+		rtw_write8(adapter, REG_TXPAUSE, 0xff);
+		val8 = rtw_read8(adapter, REG_SYS_FUNC_EN);
+		val8 &= ~BIT(0);
+		rtw_write8(adapter, REG_SYS_FUNC_EN, val8);
+		RTW_INFO("%s: BB gated: 0x%02x, store TXPAUSE: %02x\n",
+			 __func__,
+			 rtw_read8(adapter, REG_SYS_FUNC_EN),
+			 pwrpriv->wowlan_txpause_status);
+	} else {
+		val8 = rtw_read8(adapter, REG_SYS_FUNC_EN);
+		val8 |= BIT(0);
+		rtw_write8(adapter, REG_SYS_FUNC_EN, val8);
+		RTW_INFO("%s: BB release: 0x%02x, recover TXPAUSE:%02x\n",
+			 __func__, rtw_read8(adapter, REG_SYS_FUNC_EN),
+			 pwrpriv->wowlan_txpause_status);
+		/* release TX*/
+		rtw_write8(adapter, REG_TXPAUSE, pwrpriv->wowlan_txpause_status);
+	}
+}
 
-		rsvd_page_loc->LocArpRsp = *page_num;
+static u8 rtw_hal_wow_pattern_generate(_adapter *adapter, u8 idx, struct rtl_wow_pattern *pwow_pattern)
+{
+	struct pwrctrl_priv *pwrctl = adapter_to_pwrctl(adapter);
+	 u8 *pattern;
+	 u8 len = 0;
+	 u8 *mask;
 
-		RTW_INFO("LocArpRsp: %d\n", rsvd_page_loc->LocArpRsp);
+	u8 mask_hw[MAX_WKFM_SIZE] = {0};
+	u8 content[MAX_WKFM_PATTERN_SIZE] = {0};
+	u8 broadcast_addr[6] = {0xff, 0xff, 0xff, 0xff, 0xff, 0xff};
+	u8 multicast_addr1[2] = {0x33, 0x33};
+	u8 multicast_addr2[3] = {0x01, 0x00, 0x5e};
+	u8 mask_len = 0;
+	u8 mac_addr[ETH_ALEN] = {0};
+	u16 count = 0;
+	int i;
 
-#ifdef CONFIG_WAR_OFFLOAD
-		if ((0 != pwrctl->wowlan_war_offload_ipv4.ip_addr[0]) &&
-			(_FALSE == _rtw_memcmp(&pwrctl->wowlan_war_offload_ipv4.ip_addr[0], pmlmeinfo->ip_addr, 4))) {
-			_rtw_memcpy(pmlmeinfo->ip_addr, &pwrctl->wowlan_war_offload_ipv4.ip_addr[0], 4);
-			RTW_INFO("Update IP(%d.%d.%d.%d) to arp rsvd page\n", 
-			pmlmeinfo->ip_addr[0], pmlmeinfo->ip_addr[1],
-			pmlmeinfo->ip_addr[2], pmlmeinfo->ip_addr[3]);
-		}
-#endif /* CONFIG_WAR_OFFLOAD */
+	if (pwrctl->wowlan_pattern_idx > MAX_WKFM_CAM_NUM) {
+		RTW_INFO("%s pattern_idx is more than MAX_FMC_NUM: %d\n",
+			 __func__, MAX_WKFM_CAM_NUM);
+		return _FAIL;
+	}
 
+	pattern = pwrctl->patterns[idx].content;
+	len = pwrctl->patterns[idx].len;
+	mask = pwrctl->patterns[idx].mask;
 
-		rtw_hal_construct_ARPRsp(adapter, &pframe[index],
-					 &ARPLength, pmlmeinfo->ip_addr);
+	_rtw_memcpy(mac_addr, adapter_mac_addr(adapter), ETH_ALEN);
+	_rtw_memset(pwow_pattern, 0, sizeof(struct rtl_wow_pattern));
 
-		rtw_hal_fill_fake_txdesc(adapter,
-					 &pframe[index - tx_desc],
-					 ARPLength, _FALSE, _FALSE, _TRUE);
+	mask_len = DIV_ROUND_UP(len, 8);
 
-		CurtPktPageNum = (u8)PageNum(tx_desc + ARPLength, page_size);
+	/* 1. setup A1 table */
+	if (memcmp(pattern, broadcast_addr, ETH_ALEN) == 0)
+		pwow_pattern->type = PATTERN_BROADCAST;
+	else if (memcmp(pattern, multicast_addr1, 2) == 0)
+		pwow_pattern->type = PATTERN_MULTICAST;
+	else if (memcmp(pattern, multicast_addr2, 3) == 0)
+		pwow_pattern->type = PATTERN_MULTICAST;
+	else if (memcmp(pattern, mac_addr, ETH_ALEN) == 0)
+		pwow_pattern->type = PATTERN_UNICAST;
+	else
+		pwow_pattern->type = PATTERN_INVALID;
 
-		*page_num += CurtPktPageNum;
+	/* translate mask from os to mask for hw */
 
-		index += (CurtPktPageNum * page_size);
-		RSVD_PAGE_CFG("WOW-ARPRsp", CurtPktPageNum, *page_num, 0);
-#ifdef CONFIG_WOW_KEEP_ALIVE_PATTERN
-		/* Keep Alive * ? page*/
-		if(pwrctl->keep_alive_pattern_len){
-			rsvd_page_loc->LocKeepAlive = *page_num;
-			pwrctl->keep_alive_pattern_loc = rsvd_page_loc->LocKeepAlive;
-			RTW_INFO("pwrctl->keep_alive_pattern_loc: %d\n", pwrctl->keep_alive_pattern_loc);
-			rtw_hal_construct_keepalive(adapter,&pframe[index],&keep_alive_len);
-			rtw_hal_fill_fake_txdesc(adapter,
-					 &pframe[index - tx_desc],
-					 keep_alive_len, _FALSE, _FALSE, _TRUE);
-			CurtPktPageNum = (u8)PageNum(tx_desc + keep_alive_len, page_size);
-			*page_num += CurtPktPageNum;
-			index += (CurtPktPageNum * page_size);
-			RSVD_PAGE_CFG("WOW-KeepAlive:", CurtPktPageNum, *page_num, 0);
-		}
-#endif /* CONFIG_WOW_KEEP_ALIVE_PATTERN*/
-
-#ifdef CONFIG_IPV6
-		/* 2 NS offload and NDP Info*/
-		if (pwrctl->wowlan_ns_offload_en == _TRUE) {
-			rsvd_page_loc->LocNbrAdv = *page_num;
-			RTW_INFO("LocNbrAdv: %d\n", rsvd_page_loc->LocNbrAdv);
-			rtw_hal_construct_na_message(adapter,
-						     &pframe[index], &ns_len);
-			rtw_hal_fill_fake_txdesc(adapter,
-						 &pframe[index - tx_desc],
-						 ns_len, _FALSE,
-						 _FALSE, _TRUE);
-			CurtPktPageNum = (u8)PageNum(tx_desc + ns_len,
-						      page_size);
-			*page_num += CurtPktPageNum;
-			index += (CurtPktPageNum * page_size);
-			RSVD_PAGE_CFG("WOW-NbrAdv", CurtPktPageNum, *page_num, 0);
-
-			rsvd_page_loc->LocNDPInfo = *page_num;
-			RTW_INFO("LocNDPInfo: %d\n",
-				 rsvd_page_loc->LocNDPInfo);
-
-			rtw_hal_construct_ndp_info(adapter,
-						   &pframe[index - tx_desc],
-						   &ns_len);
-			CurtPktPageNum =
-				(u8)PageNum(tx_desc + ns_len, page_size);
-			*page_num += CurtPktPageNum;
-			index += (CurtPktPageNum * page_size);
-			RSVD_PAGE_CFG("WOW-NDPInfo", CurtPktPageNum, *page_num, 0);
+	/******************************************************************************
+	 * pattern from OS uses 'ethenet frame', like this:
 
-		}
-#endif /*CONFIG_IPV6*/
-		/* 3 Remote Control Info. * 1 page */
-		rsvd_page_loc->LocRemoteCtrlInfo = *page_num;
-		RTW_INFO("LocRemoteCtrlInfo: %d\n", rsvd_page_loc->LocRemoteCtrlInfo);
-		rtw_hal_construct_remote_control_info(adapter,
-						      &pframe[index - tx_desc],
-						      &rc_len);
-		CurtPktPageNum = (u8)PageNum(rc_len, page_size);
-		*page_num += CurtPktPageNum;
-		*total_pkt_len = index + rc_len;
-		RSVD_PAGE_CFG("WOW-RCI", CurtPktPageNum, *page_num, *total_pkt_len);
-#ifdef CONFIG_GTK_OL
-		index += (CurtPktPageNum * page_size);
+		|    6   |    6   |   2  |     20    |  Variable  |  4  |
+		|--------+--------+------+-----------+------------+-----|
+		|    802.3 Mac Header    | IP Header | TCP Packet | FCS |
+		|   DA   |   SA   | Type |
 
-		/* if the ap staion info. exists, get the kek, kck from staion info. */
-		psta = rtw_get_stainfo(pstapriv, get_bssid(pmlmepriv));
-		if (psta == NULL) {
-			_rtw_memset(kek, 0, RTW_KEK_LEN);
-			_rtw_memset(kck, 0, RTW_KCK_LEN);
-			RTW_INFO("%s, KEK, KCK download rsvd page all zero\n",
-				 __func__);
-		} else {
-			_rtw_memcpy(kek, psta->kek, RTW_KEK_LEN);
-			_rtw_memcpy(kck, psta->kck, RTW_KCK_LEN);
-		}
+	 * BUT, packet catched by our HW is in '802.11 frame', begin from LLC,
 
-		/* 3 KEK, KCK */
-		rsvd_page_loc->LocGTKInfo = *page_num;
-		RTW_INFO("LocGTKInfo: %d\n", rsvd_page_loc->LocGTKInfo);
+		|     24 or 30      |    6   |   2  |     20    |  Variable  |  4  |
+		|-------------------+--------+------+-----------+------------+-----|
+		| 802.11 MAC Header |       LLC     | IP Header | TCP Packet | FCS |
+				    | Others | Tpye |
 
-		if (IS_HARDWARE_TYPE_8188E(adapter) || IS_HARDWARE_TYPE_8812(adapter)) {
-			struct security_priv *psecpriv = NULL;
+	 * Therefore, we need translate mask_from_OS to mask_to_hw.
+	 * We should left-shift mask by 6 bits, then set the new bit[0~5] = 0,
+	 * because new mask[0~5] means 'SA', but our HW packet begins from LLC,
+	 * bit[0~5] corresponds to first 6 Bytes in LLC, they just don't match.
+	 ******************************************************************************/
+	/* Shift 6 bits */
+	for (i = 0; i < mask_len - 1; i++) {
+		mask_hw[i] = mask[i] >> 6;
+		mask_hw[i] |= (mask[i + 1] & 0x3F) << 2;
+	}
 
-			psecpriv = &adapter->securitypriv;
-			_rtw_memcpy(pframe + index - tx_desc,
-				    &psecpriv->dot11PrivacyAlgrthm, 1);
-			_rtw_memcpy(pframe + index - tx_desc + 1,
-				    &psecpriv->dot118021XGrpPrivacy, 1);
-			_rtw_memcpy(pframe + index - tx_desc + 2,
-				    kck, RTW_KCK_LEN);
-			_rtw_memcpy(pframe + index - tx_desc + 2 + RTW_KCK_LEN,
-				    kek, RTW_KEK_LEN);
-			CurtPktPageNum = (u8)PageNum(tx_desc + 2 + RTW_KCK_LEN + RTW_KEK_LEN, page_size);
-		} else {
+	mask_hw[i] = (mask[i] >> 6) & 0x3F;
+	/* Set bit 0-5 to zero */
+	mask_hw[0] &= 0xC0;
 
-			_rtw_memcpy(pframe + index - tx_desc, kck, RTW_KCK_LEN);
-			_rtw_memcpy(pframe + index - tx_desc + RTW_KCK_LEN,
-				    kek, RTW_KEK_LEN);
-			GTKLength = tx_desc + RTW_KCK_LEN + RTW_KEK_LEN;
+	for (i = 0; i < (MAX_WKFM_SIZE / 4); i++) {
+		pwow_pattern->mask[i] = mask_hw[i * 4];
+		pwow_pattern->mask[i] |= (mask_hw[i * 4 + 1] << 8);
+		pwow_pattern->mask[i] |= (mask_hw[i * 4 + 2] << 16);
+		pwow_pattern->mask[i] |= (mask_hw[i * 4 + 3] << 24);
+	}
 
-			if (psta != NULL &&
-				psecuritypriv->dot118021XGrpPrivacy == _TKIP_) {
-				_rtw_memcpy(pframe + index - tx_desc + 56,
-					&psta->dot11tkiptxmickey, RTW_TKIP_MIC_LEN);
-				GTKLength += RTW_TKIP_MIC_LEN;
-			}
-			CurtPktPageNum = (u8)PageNum(GTKLength, page_size);
-		}
-#if 0
-		{
-			int i;
-			printk("\ntoFW KCK: ");
-			for (i = 0; i < 16; i++)
-				printk(" %02x ", kck[i]);
-			printk("\ntoFW KEK: ");
-			for (i = 0; i < 16; i++)
-				printk(" %02x ", kek[i]);
-			printk("\n");
+	/* To get the wake up pattern from the mask.
+	 * We do not count first 12 bits which means
+	 * DA[6] and SA[6] in the pattern to match HW design. */
+	count = 0;
+	for (i = 12; i < len; i++) {
+		if ((mask[i / 8] >> (i % 8)) & 0x01) {
+			content[count] = pattern[i];
+			count++;
 		}
+	}
 
-		RTW_INFO("%s(): HW_VAR_SET_TX_CMD: KEK KCK %p %d\n",
-			 __FUNCTION__, &pframe[index - tx_desc],
-			 (tx_desc + RTW_KCK_LEN + RTW_KEK_LEN));
-#endif
-
-		*page_num += CurtPktPageNum;
-
-		index += (CurtPktPageNum * page_size);
-		RSVD_PAGE_CFG("WOW-GTKInfo", CurtPktPageNum, *page_num, 0);
-
-		/* 3 GTK Response */
-		rsvd_page_loc->LocGTKRsp = *page_num;
-		RTW_INFO("LocGTKRsp: %d\n", rsvd_page_loc->LocGTKRsp);
-		rtw_hal_construct_GTKRsp(adapter, &pframe[index], &GTKLength);
-
-		rtw_hal_fill_fake_txdesc(adapter, &pframe[index - tx_desc],
-					 GTKLength, _FALSE, _FALSE, _TRUE);
-#if 0
-		{
-			int gj;
-			printk("123GTK pkt=>\n");
-			for (gj = 0; gj < GTKLength + tx_desc; gj++) {
-				printk(" %02x ", pframe[index - tx_desc + gj]);
-				if ((gj + 1) % 16 == 0)
-					printk("\n");
-			}
-			printk(" <=end\n");
-		}
+	pwow_pattern->crc = rtw_calc_crc(content, count);
 
-		RTW_INFO("%s(): HW_VAR_SET_TX_CMD: GTK RSP %p %d\n",
-			 __FUNCTION__, &pframe[index - tx_desc],
-			 (tx_desc + GTKLength));
-#endif
+	if (pwow_pattern->crc != 0) {
+		if (pwow_pattern->type == PATTERN_INVALID)
+			pwow_pattern->type = PATTERN_VALID;
+	}
 
-		CurtPktPageNum = (u8)PageNum(tx_desc + GTKLength, page_size);
+	return _SUCCESS;
+}
 
-		*page_num += CurtPktPageNum;
+void rtw_dump_wow_pattern(void *sel, struct rtl_wow_pattern *pwow_pattern, u8 idx)
+{
+	int j;
 
-		index += (CurtPktPageNum * page_size);
-		RSVD_PAGE_CFG("WOW-GTKRsp", CurtPktPageNum, *page_num, 0);
+	RTW_PRINT_SEL(sel, "=======WOW CAM-ID[%d]=======\n", idx);
+	RTW_PRINT_SEL(sel, "[WOW CAM] type:%d\n", pwow_pattern->type);
+	RTW_PRINT_SEL(sel, "[WOW CAM] crc:0x%04x\n", pwow_pattern->crc);
+	for (j = 0; j < 4; j++)
+		RTW_PRINT_SEL(sel, "[WOW CAM] Mask:0x%08x\n", pwow_pattern->mask[j]);
+}
+/*bit definition of pattern match format*/
+#define WOW_VALID_BIT	BIT31
+#ifndef CONFIG_WOW_PATTERN_IN_TXFIFO
+#define WOW_BC_BIT		BIT26
+#define WOW_MC_BIT		BIT25
+#define WOW_UC_BIT		BIT24
+#else
+#define WOW_BC_BIT		BIT18
+#define WOW_UC_BIT		BIT17
+#define WOW_MC_BIT		BIT16
+#endif /*CONFIG_WOW_PATTERN_IN_TXFIFO*/
 
-		/* below page is empty for GTK extension memory */
-		/* 3(11) GTK EXT MEM */
-		rsvd_page_loc->LocGTKEXTMEM = *page_num;
-		RTW_INFO("LocGTKEXTMEM: %d\n", rsvd_page_loc->LocGTKEXTMEM);
-		CurtPktPageNum = 2;
+#ifndef CONFIG_WOW_PATTERN_HW_CAM
+#ifndef CONFIG_WOW_PATTERN_IN_TXFIFO
+static void rtw_hal_reset_mac_rx(_adapter *adapter)
+{
+	u8 val8 = 0;
+	/* Set REG_CR bit1, bit3, bit7 to 0*/
+	val8 = rtw_read8(adapter, REG_CR);
+	val8 &= 0x75;
+	rtw_write8(adapter, REG_CR, val8);
+	val8 = rtw_read8(adapter, REG_CR);
+	/* Set REG_CR bit1, bit3, bit7 to 1*/
+	val8 |= 0x8a;
+	rtw_write8(adapter, REG_CR, val8);
+	RTW_INFO("0x%04x: %02x\n", REG_CR, rtw_read8(adapter, REG_CR));
+}
+static void rtw_hal_set_wow_rxff_boundary(_adapter *adapter, bool wow_mode)
+{
+	u8 val8 = 0;
+	u16 rxff_bndy = 0;
+	u32 rx_dma_buff_sz = 0;
 
-		if (page_size >= 256)
-			CurtPktPageNum = 1;
+	val8 = rtw_read8(adapter, REG_FIFOPAGE + 3);
+	if (val8 != 0)
+		RTW_INFO("%s:[%04x]some PKTs in TXPKTBUF\n",
+			 __func__, (REG_FIFOPAGE + 3));
 
-		*page_num += CurtPktPageNum;
-		/* extension memory for FW */
-		*total_pkt_len = index + (page_size * CurtPktPageNum);
-		RSVD_PAGE_CFG("WOW-GTKEXTMEM", CurtPktPageNum, *page_num, *total_pkt_len);
-#endif /* CONFIG_GTK_OL */
+	rtw_hal_reset_mac_rx(adapter);
 
-		index += (CurtPktPageNum * page_size);
+	if (wow_mode) {
+		rtw_hal_get_def_var(adapter, HAL_DEF_RX_DMA_SZ_WOW,
+				    (u8 *)&rx_dma_buff_sz);
+		rxff_bndy = rx_dma_buff_sz - 1;
 
-#ifdef CONFIG_WAR_OFFLOAD
-		if(_TRUE == pwrctl->wowlan_war_offload_mode) {
-			u8 zero_ary[16] = {0x00};
-			u8 war_tmp_cnt = 0;
-	
-			/* Reserve 2 page for Ip parameters */
-			/* First page
-			   | Byte 15 -----------Byte 0 |
-			   | IP-4 | IP-3 | IP-2 | IP-1 |
-			   | location of each feature | mac addr |
-			   | NetBIOS name			   |
-			   | location of each feature  |
-			Second page
-			   | IPv6 - 1				   |
-			   | IPv6 - 2				   |
-			   | IPv6 - 3				   |
-			   | IPv6 - 4				   |
-			   | IPv6 - 5				   |
-			   | IPv6 - 6				   |
-			   | IPv6 - 7				   |
-			   | IPv6 - 8				   |
-			*/
-	
-			/* location of each feature : Byte 22 ~ Byte 31
-			 * Byte22 : location of SNMP RX
-			 * Byte23 : location of SNMP V4
-			 * Byte24 : location of SNMP V6
-			 * Byte25 : location of MDNS Param
-			 * Byte26 : location of MDNS V4  
-			 * Byte27 : location of MDNS V6
-			 * Byte28 : location of SSDP pattern
-			 * Byte29 : location of WSD pattern  
-			 * Byte30 : location of SLP pattern
-			 * Byte31 : location of LLMNR
-			 */
-	
-			/* ipv4 : 4 */
-			if (0 == pwrctl->wowlan_war_offload_ipv4.ip_addr[0])
-				_rtw_memcpy(&pwrctl->wowlan_war_offload_ipv4.ip_addr[0], pmlmeinfo->ip_addr, 4);
-			for(war_tmp_cnt=0; war_tmp_cnt<4 ;war_tmp_cnt++)
-				_rtw_memcpy(pframe + index - tx_desc + (war_tmp_cnt*4), &pwrctl->wowlan_war_offload_ipv4.ip_addr[war_tmp_cnt], 4);
-	
-			if (is_zero_mac_addr(pwrctl->wowlan_war_offload_mac)) {
-				_rtw_memcpy(pwrctl->wowlan_war_offload_mac, adapter_mac_addr(adapter), 6);
-			}
-			_rtw_memcpy(pframe + index + 16 - tx_desc, pwrctl->wowlan_war_offload_mac, 6);
-	
-	
-			/* ipv6 : 8 */
-			if (_TRUE == _rtw_memcmp(pwrctl->wowlan_war_offload_ipv6.ipv6_addr[0], zero_ary, RTW_IPv6_ADDR_LEN))
-				_rtw_memcpy(pwrctl->wowlan_war_offload_ipv6.ipv6_addr[0], pmlmeinfo->ip6_addr, RTW_IPv6_ADDR_LEN);
-	
-			for(war_tmp_cnt=0; war_tmp_cnt<8 ;war_tmp_cnt++)
-				_rtw_memcpy(pframe + index + page_size - tx_desc + (war_tmp_cnt*16), pwrctl->wowlan_war_offload_ipv6.ipv6_addr[war_tmp_cnt], 16);
-	
-			rsvd_page_loc->LocIpParm = *page_num;
-	
-			tmp_idx = index;
-			CurtPktPageNum = 2;
-			*page_num += CurtPktPageNum;
-			*total_pkt_len = index + (page_size * CurtPktPageNum);
-			index += (CurtPktPageNum * page_size);
-	
-		
-#if defined(CONFIG_OFFLOAD_MDNS_V4) || defined(CONFIG_OFFLOAD_MDNS_V6)
-			if ( (WAR_MDNS_V4_RSP_EN & pwrctl->wowlan_war_offload_ctrl) || 
-				 (WAR_MDNS_V6_RSP_EN & pwrctl->wowlan_war_offload_ctrl) || 
-				 (WAR_MDNS_V4_WAKEUP_EN & pwrctl->wowlan_war_offload_ctrl) || 
-				 (WAR_MDNS_V6_WAKEUP_EN & pwrctl->wowlan_war_offload_ctrl)) {
-	
-				struct war_mdns_service_info *psinfo = pwrctl->wowlan_war_offload_mdns_service;
-				u8 txt_in_ptr[31]={ 0xc0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
-									 0x00, 0x13, 0x09, 0x74, 0x78, 0x74, 0x76, 0x65, 0x72, 0x73, 
-									 0x3d, 0x31, 0x08, 0x71, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x3d, 0x31};
-				u16 mdns_offset = index - tx_desc;
-				u8 i = 0;
-				
-				rsvd_page_loc->LocMdnsPara = *page_num;
-				RTW_INFO("LocMdnsPara : %d\n", rsvd_page_loc->LocMdnsPara);
-	
-				/* 1. service info */
-				pframe[mdns_offset] = 0x01;  // TLV(T)
-				mdns_offset += 1;
-				_rtw_memcpy(pframe + mdns_offset, &pwrctl->wowlan_war_offload_mdns_service_info_num, 1);
-				mdns_offset += 1;
-	
-				for(i=0; i<pwrctl->wowlan_war_offload_mdns_service_info_num ;i++)
-				{
-					u16 srv_rsp_len = 0;
-					
-					// 1.1 : construct service name string
-					//	   : length of total service name string (service+transport+domain)
-					pframe[mdns_offset] = psinfo[i].service_len + psinfo[i].transport_len + psinfo[i].domain_len + 4;
-					mdns_offset += 1;
-	
-					//	   :  service name
-					pframe[mdns_offset] = psinfo[i].service_len;
-					mdns_offset += 1;
-					_rtw_memcpy(pframe + mdns_offset, &psinfo[i].service, psinfo[i].service_len);
-					mdns_offset += psinfo[i].service_len;
-	
-					//	   : transport name
-					pframe[mdns_offset] = psinfo[i].transport_len;
-					mdns_offset += 1;
-					_rtw_memcpy(pframe + mdns_offset, &psinfo[i].transport, psinfo[i].transport_len);
-					mdns_offset += psinfo[i].transport_len;
-	
-					//	   : domain name
-					pframe[mdns_offset] = psinfo[i].domain_len;
-					mdns_offset += 1;
-					_rtw_memcpy(pframe + mdns_offset, &psinfo[i].domain, psinfo[i].domain_len);
-					mdns_offset += psinfo[i].domain_len;
-	
-					//	   : delimiter
-					mdns_offset += 1;
-	
-					// 1.2 : construct type srv rsp
-					pframe[mdns_offset] = psinfo[i].target_len + 19; // length
-					pframe[mdns_offset + 2] = 0x21; // rsp type (srv)
-					pframe[mdns_offset + 4] = 0x01; // cache flush + class
-					_rtw_memcpy(pframe + mdns_offset + 5, &psinfo[i].ttl, 4); // ttl
-					pframe[mdns_offset + 5] = (u8) ( (psinfo[i].ttl & 0xff000000) >> 24);	// ttl - byte0
-					pframe[mdns_offset + 6] = (u8) ( (psinfo[i].ttl & 0x00ff0000) >> 16);	// ttl - byte1
-					pframe[mdns_offset + 7] = (u8) ( (psinfo[i].ttl & 0x0000ff00) >> 8 );		// ttl - byte2
-					pframe[mdns_offset + 8] = (u8) (psinfo[i].ttl & 0x000000ff);			// ttl - byte3
-					pframe[mdns_offset + 10] = psinfo[i].target_len + 9;	  // data length
-					_rtw_memcpy(pframe + mdns_offset + 15, &psinfo[i].port, 2); // port
-					_rtw_memcpy(pframe + mdns_offset + 17, &psinfo[i].target_len, 1); // target len
-					_rtw_memcpy(pframe + mdns_offset + 18, &psinfo[i].target, psinfo[i].target_len); // target
-					pframe[mdns_offset + 18 + psinfo[i].target_len] = 0xc0; // message compresion, offset will be filled by fw.
-					mdns_offset += (1 + psinfo[i].target_len + 19);
-	
-					// 1.3 : set the idx of txt rsp
-					pframe[mdns_offset] = psinfo[i].txt_rsp_idx;
-					mdns_offset += 1;
-				}
-				
-				/* 2. machine name */
-				pframe[mdns_offset] = 0x02; // TLV(T)
-				mdns_offset += 1;
-				_rtw_memcpy(pframe + mdns_offset, &pwrctl->wowlan_war_offload_mdns_mnane_num, 1); // NUM
-				mdns_offset += 1;
-	
-				for(i=0; i<pwrctl->wowlan_war_offload_mdns_mnane_num; i++)
-				{
-					pframe[mdns_offset] = pwrctl->wowlan_war_offload_mdns_mnane[i].name_len;
-					_rtw_memcpy(pframe + mdns_offset + 1, pwrctl->wowlan_war_offload_mdns_mnane[i].name, 
-						pwrctl->wowlan_war_offload_mdns_mnane[i].name_len); // machine name
-					mdns_offset += (1+pwrctl->wowlan_war_offload_mdns_mnane[i].name_len);
-				}
-				
-				/* 3. A rsp */
-				pframe[mdns_offset] = 0x03; // TLV(T)
-				pframe[mdns_offset + 1] = 14;	// TLV(L)
-				pframe[mdns_offset + 3] = 0x01; // rsp type (a)
-				pframe[mdns_offset + 5] = 0x01; // cache flush + class
-				pframe[mdns_offset + 9] = 0xf0; // ttl (240 sec)
-				pframe[mdns_offset + 11] = 4;	// length of ipv4 addr.
-				_rtw_memcpy(pframe + mdns_offset + 12, &pwrctl->wowlan_war_offload_ipv4.ip_addr[0], 4);
-				mdns_offset += (2 + 14);
-				
-				/* 4. AAAA rsp */
-				pframe[mdns_offset] = 0x04; // TLV(T)
-				pframe[mdns_offset + 1] = 26;	// TLV(L)
-				pframe[mdns_offset + 3] = 0x1c; // rsp type (aaaa)
-				pframe[mdns_offset + 5] = 0x01; // cache flush + class
-				pframe[mdns_offset + 9] = 0xf0; // ttl (240 sec)
-				pframe[mdns_offset + 11] = 16;	// length of ipv6 addr.
-				_rtw_memcpy(pframe + mdns_offset + 12, &pwrctl->wowlan_war_offload_ipv6.ipv6_addr[0], 16);
-				mdns_offset += (2 + 26);
-				
-				/* 5. PTR rsp */
-				pframe[mdns_offset] = 0x05; // TLV(T)
-				pframe[mdns_offset + 1] = 13 + pwrctl->wowlan_war_offload_mdns_domain_name_len; // TLV(L)
-				pframe[mdns_offset + 3] = 0x0c; // rsp type (aaaa)
-				pframe[mdns_offset + 5] = 0x01; // cache flush + class
-				pframe[mdns_offset + 8] = 0x1c; // ttl 
-				pframe[mdns_offset + 9] = 0x20; // ttl (7200 sec)
-				pframe[mdns_offset + 11] = 3 + pwrctl->wowlan_war_offload_mdns_domain_name_len; // data length 
-				pframe[mdns_offset + 12] = pwrctl->wowlan_war_offload_mdns_domain_name_len; // domain name length 
-				_rtw_memcpy(pframe + mdns_offset + 13, &pwrctl->wowlan_war_offload_mdns_domain_name, 
-					pwrctl->wowlan_war_offload_mdns_domain_name_len);
-				pframe[mdns_offset + 13 + pwrctl->wowlan_war_offload_mdns_domain_name_len] = 0xc0; // message compression
-				mdns_offset += (2 + 13 + pwrctl->wowlan_war_offload_mdns_domain_name_len);
-				
-				/* 6. TXT in PTR rsp */
-				pframe[mdns_offset] = 0x06; 		// TLV(T)
-				pframe[mdns_offset + 1] = 31;	// TLV(L)
-				_rtw_memcpy(pframe + mdns_offset + 2, &txt_in_ptr, 31);
-				mdns_offset += (2 + 31);
-				
-				/* 7. TXT rsp */
-				pframe[mdns_offset] = 0x07; // TLV(T)
-				mdns_offset += 1;
-				_rtw_memcpy(pframe + mdns_offset, &pwrctl->wowlan_war_offload_mdns_txt_rsp_num, 1); // NUM
-				mdns_offset += 1;
-	
-				for(i=0; i<pwrctl->wowlan_war_offload_mdns_txt_rsp_num; i++)
-				{
-					u16 txt_rsp_len = pwrctl->wowlan_war_offload_mdns_txt_rsp[i].txt_len;
-	
-					if(pwrctl->wowlan_war_offload_mdns_txt_rsp[i].txt_len==0)
-					{
-						_rtw_memcpy(pframe + mdns_offset, &txt_rsp_len,  2);
-						mdns_offset += ( 2 + txt_rsp_len );
-						continue;
-					}
-	
-					txt_rsp_len += 10;
-					_rtw_memcpy(pframe + mdns_offset, &txt_rsp_len,  2);
-					pframe[mdns_offset + 3] = 0x10; // rsp type (txt)
-					pframe[mdns_offset + 5] = 0x01; // cache flush + class
-					pframe[mdns_offset + 8] = 0x1c; // ttl 
-					pframe[mdns_offset + 9] = 0x20; // ttl (7200 sec)
-					pframe[mdns_offset + 10] = (u8) ((pwrctl->wowlan_war_offload_mdns_txt_rsp[i].txt_len & 0xff00) >> 8);	
-					pframe[mdns_offset + 11] = (u8) (pwrctl->wowlan_war_offload_mdns_txt_rsp[i].txt_len & 0x00ff);
-						_rtw_memcpy(pframe + mdns_offset + 12, &pwrctl->wowlan_war_offload_mdns_txt_rsp[i].txt, 
-							pwrctl->wowlan_war_offload_mdns_txt_rsp[i].txt_len);
-					mdns_offset  += ( 2 + txt_rsp_len );
-				}
-				
-				CurtPktPageNum = (u8)PageNum(mdns_offset - index, page_size)+1;
-				*page_num += CurtPktPageNum;
-				*total_pkt_len = index + (page_size * CurtPktPageNum);
-				index += (CurtPktPageNum * page_size);
-			}
-#endif /* defined(CONFIG_OFFLOAD_MDNS_V4) || defined(CONFIG_OFFLOAD_MDNS_V6) */
-	
-#ifdef CONFIG_OFFLOAD_MDNS_V4
-			if (WAR_MDNS_V4_RSP_EN & pwrctl->wowlan_war_offload_ctrl) {
-				rsvd_page_loc->LocMdnsv4 = *page_num;
-				RTW_INFO("LocMdnsv4: %d\n", rsvd_page_loc->LocMdnsv4);
-				
-				rtw_hal_construct_mdns_rsp_v4(adapter, &pframe[index], &buf_len, pmlmeinfo->ip_addr);
-				rtw_hal_fill_fake_txdesc(adapter, &pframe[index - tx_desc], buf_len, _FALSE, _FALSE, _TRUE);
-				CurtPktPageNum = 16;
-				*page_num += CurtPktPageNum;
-				index += (CurtPktPageNum * page_size);			
-			}
-#endif /* CONFIG_OFFLOAD_MDNS_V4 */
-	
-#ifdef CONFIG_OFFLOAD_MDNS_V6
-			if (WAR_MDNS_V6_RSP_EN & pwrctl->wowlan_war_offload_ctrl) {
-				rsvd_page_loc->LocMdnsv6 = *page_num;
-				RTW_INFO("LocMdnsv6: %d\n", rsvd_page_loc->LocMdnsv6);
-				
-				rtw_hal_construct_mdns_rsp_v6(adapter, &pframe[index], &buf_len, pmlmeinfo->ip_addr);
-				rtw_hal_fill_fake_txdesc(adapter, &pframe[index - tx_desc], buf_len, _FALSE, _FALSE, _TRUE);
-				CurtPktPageNum = 16;
-				*page_num += CurtPktPageNum;
-				index += (CurtPktPageNum * page_size);			
-			}
-#endif /* CONFIG_OFFLOAD_MDNS_V6 */
-	
-#if defined(CONFIG_OFFLOAD_MDNS_V4) || defined(CONFIG_OFFLOAD_MDNS_V6)
-			*(pframe+tmp_idx+25-tx_desc) = rsvd_page_loc->LocMdnsPara;
-			*(pframe+tmp_idx+26-tx_desc) = rsvd_page_loc->LocMdnsv4;
-			*(pframe+tmp_idx+27-tx_desc) = rsvd_page_loc->LocMdnsv6;
-#endif /* defined(CONFIG_OFFLOAD_MDNS_V4) || defined(CONFIG_OFFLOAD_MDNS_V6) */
-	
-			}
-			//rtw_dump_rsvd_page(RTW_DBGDUMP, adapter, rsvd_page_loc->LocIpParm, 46);
-#endif /* CONFIG_WAR_OFFLOAD */
+		rtw_write16(adapter, (REG_TRXFF_BNDY + 2), rxff_bndy);
+		RTW_INFO("%s: wow mode, 0x%04x: 0x%04x\n", __func__,
+			 REG_TRXFF_BNDY + 2,
+			 rtw_read16(adapter, (REG_TRXFF_BNDY + 2)));
+	} else {
+		rtw_hal_get_def_var(adapter, HAL_DEF_RX_DMA_SZ,
+				    (u8 *)&rx_dma_buff_sz);
+		rxff_bndy = rx_dma_buff_sz - 1;
+		rtw_write16(adapter, (REG_TRXFF_BNDY + 2), rxff_bndy);
+		RTW_INFO("%s: normal mode, 0x%04x: 0x%04x\n", __func__,
+			 REG_TRXFF_BNDY + 2,
+			 rtw_read16(adapter, (REG_TRXFF_BNDY + 2)));
+	}
+}
+#endif /* CONFIG_WOW_PATTERN_IN_TXFIFO*/
+#ifndef CONFIG_WOW_PATTERN_IN_TXFIFO
+bool rtw_read_from_frame_mask(_adapter *adapter, u8 idx)
+{
+	u32 data_l = 0, data_h = 0, rx_dma_buff_sz = 0, page_sz = 0;
+	u16 offset, rx_buf_ptr = 0;
+	u16 cam_start_offset = 0;
+	u16 ctrl_l = 0, ctrl_h = 0;
+	u8 count = 0, tmp = 0;
+	int i = 0;
+	bool res = _TRUE;
+
+	if (idx > MAX_WKFM_CAM_NUM) {
+		RTW_INFO("[Error]: %s, pattern index is out of range\n",
+			 __func__);
+		return _FALSE;
+	}
+
+	rtw_hal_get_def_var(adapter, HAL_DEF_RX_DMA_SZ_WOW,
+			    (u8 *)&rx_dma_buff_sz);
+
+	if (rx_dma_buff_sz == 0) {
+		RTW_INFO("[Error]: %s, rx_dma_buff_sz is 0!!\n", __func__);
+		return _FALSE;
+	}
+
+	rtw_hal_get_def_var(adapter, HAL_DEF_RX_PAGE_SIZE, (u8 *)&page_sz);
+
+	if (page_sz == 0) {
+		RTW_INFO("[Error]: %s, page_sz is 0!!\n", __func__);
+		return _FALSE;
+	}
+
+	offset = (u16)PageNum(rx_dma_buff_sz, page_sz);
+	cam_start_offset = offset * page_sz;
+
+	ctrl_l = 0x0;
+	ctrl_h = 0x0;
+
+	/* Enable RX packet buffer access */
+	rtw_write8(adapter, REG_PKT_BUFF_ACCESS_CTRL, RXPKT_BUF_SELECT);
+
+	/* Read the WKFM CAM */
+	for (i = 0; i < (WKFMCAM_ADDR_NUM / 2); i++) {
+		/*
+		 * Set Rx packet buffer offset.
+		 * RxBufer pointer increases 1, we can access 8 bytes in Rx packet buffer.
+		 * CAM start offset (unit: 1 byte) =  Index*WKFMCAM_SIZE
+		 * RxBufer pointer addr = (CAM start offset + per entry offset of a WKFMCAM)/8
+		 * * Index: The index of the wake up frame mask
+		 * * WKFMCAM_SIZE: the total size of one WKFM CAM
+		 * * per entry offset of a WKFM CAM: Addr i * 4 bytes
+		 */
+		rx_buf_ptr =
+			(cam_start_offset + idx * WKFMCAM_SIZE + i * 8) >> 3;
+		rtw_write16(adapter, REG_PKTBUF_DBG_CTRL, rx_buf_ptr);
+
+		rtw_write16(adapter, REG_RXPKTBUF_CTRL, ctrl_l);
+		data_l = rtw_read32(adapter, REG_PKTBUF_DBG_DATA_L);
+		data_h = rtw_read32(adapter, REG_PKTBUF_DBG_DATA_H);
+
+		RTW_INFO("[%d]: %08x %08x\n", i, data_h, data_l);
+
+		count = 0;
+
+		do {
+			tmp = rtw_read8(adapter, REG_RXPKTBUF_CTRL);
+			rtw_udelay_os(2);
+			count++;
+		} while (!tmp && count < 100);
+
+		if (count >= 100) {
+			RTW_INFO("%s count:%d\n", __func__, count);
+			res = _FALSE;
+		}
+	}
+
+	/* Disable RX packet buffer access */
+	rtw_write8(adapter, REG_PKT_BUFF_ACCESS_CTRL,
+		   DISABLE_TRXPKT_BUF_ACCESS);
+	return res;
+}
+
+bool rtw_write_to_frame_mask(_adapter *adapter, u8 idx,
+			     struct  rtl_wow_pattern *context)
+{
+	u32 data = 0, rx_dma_buff_sz = 0, page_sz = 0;
+	u16 offset, rx_buf_ptr = 0;
+	u16 cam_start_offset = 0;
+	u16 ctrl_l = 0, ctrl_h = 0;
+	u8 count = 0, tmp = 0;
+	int res = 0, i = 0;
+
+	if (idx > MAX_WKFM_CAM_NUM) {
+		RTW_INFO("[Error]: %s, pattern index is out of range\n",
+			 __func__);
+		return _FALSE;
+	}
+
+	rtw_hal_get_def_var(adapter, HAL_DEF_RX_DMA_SZ_WOW,
+			    (u8 *)&rx_dma_buff_sz);
+
+	if (rx_dma_buff_sz == 0) {
+		RTW_INFO("[Error]: %s, rx_dma_buff_sz is 0!!\n", __func__);
+		return _FALSE;
+	}
+
+	rtw_hal_get_def_var(adapter, HAL_DEF_RX_PAGE_SIZE, (u8 *)&page_sz);
+
+	if (page_sz == 0) {
+		RTW_INFO("[Error]: %s, page_sz is 0!!\n", __func__);
+		return _FALSE;
+	}
+
+	offset = (u16)PageNum(rx_dma_buff_sz, page_sz);
+
+	cam_start_offset = offset * page_sz;
+
+	if (IS_HARDWARE_TYPE_8188E(adapter)) {
+		ctrl_l = 0x0001;
+		ctrl_h = 0x0001;
+	} else {
+		ctrl_l = 0x0f01;
+		ctrl_h = 0xf001;
+	}
+
+	/* Enable RX packet buffer access */
+	rtw_write8(adapter, REG_PKT_BUFF_ACCESS_CTRL, RXPKT_BUF_SELECT);
+
+	/* Write the WKFM CAM */
+	for (i = 0; i < WKFMCAM_ADDR_NUM; i++) {
+		/*
+		 * Set Rx packet buffer offset.
+		 * RxBufer pointer increases 1, we can access 8 bytes in Rx packet buffer.
+		 * CAM start offset (unit: 1 byte) =  Index*WKFMCAM_SIZE
+		 * RxBufer pointer addr = (CAM start offset + per entry offset of a WKFMCAM)/8
+		 * * Index: The index of the wake up frame mask
+		 * * WKFMCAM_SIZE: the total size of one WKFM CAM
+		 * * per entry offset of a WKFM CAM: Addr i * 4 bytes
+		 */
+		rx_buf_ptr =
+			(cam_start_offset + idx * WKFMCAM_SIZE + i * 4) >> 3;
+		rtw_write16(adapter, REG_PKTBUF_DBG_CTRL, rx_buf_ptr);
+
+		if (i == 0) {
+			if (context->type == PATTERN_VALID)
+				data = WOW_VALID_BIT;
+			else if (context->type == PATTERN_BROADCAST)
+				data = WOW_VALID_BIT | WOW_BC_BIT;
+			else if (context->type == PATTERN_MULTICAST)
+				data = WOW_VALID_BIT | WOW_MC_BIT;
+			else if (context->type == PATTERN_UNICAST)
+				data = WOW_VALID_BIT | WOW_UC_BIT;
 
+			if (context->crc != 0)
+				data |= context->crc;
 
-		/*Reserve 1 page for AOAC report*/
-		rsvd_page_loc->LocAOACReport = *page_num;
-		RTW_INFO("LocAOACReport: %d\n", rsvd_page_loc->LocAOACReport);
-		*page_num += 1;
-		*total_pkt_len = index + (page_size * 1);
-		RSVD_PAGE_CFG("WOW-AOAC", 1, *page_num, *total_pkt_len);
+			rtw_write32(adapter, REG_PKTBUF_DBG_DATA_L, data);
+			rtw_write16(adapter, REG_RXPKTBUF_CTRL, ctrl_l);
+		} else if (i == 1) {
+			data = 0;
+			rtw_write32(adapter, REG_PKTBUF_DBG_DATA_H, data);
+			rtw_write16(adapter, REG_RXPKTBUF_CTRL, ctrl_h);
+		} else if (i == 2 || i == 4) {
+			data = context->mask[i - 2];
+			rtw_write32(adapter, REG_PKTBUF_DBG_DATA_L, data);
+			/* write to RX packet buffer*/
+			rtw_write16(adapter, REG_RXPKTBUF_CTRL, ctrl_l);
+		} else if (i == 3 || i == 5) {
+			data = context->mask[i - 2];
+			rtw_write32(adapter, REG_PKTBUF_DBG_DATA_H, data);
+			/* write to RX packet buffer*/
+			rtw_write16(adapter, REG_RXPKTBUF_CTRL, ctrl_h);
+		}
+
+		count = 0;
+		do {
+			tmp = rtw_read8(adapter, REG_RXPKTBUF_CTRL);
+			rtw_udelay_os(2);
+			count++;
+		} while (tmp && count < 100);
+
+		if (count >= 100)
+			res = _FALSE;
+		else
+			res = _TRUE;
+	}
+
+	/* Disable RX packet buffer access */
+	rtw_write8(adapter, REG_PKT_BUFF_ACCESS_CTRL,
+		   DISABLE_TRXPKT_BUF_ACCESS);
+
+	return res;
+}
+void rtw_fill_pattern(_adapter *adapter)
+{
+	int i = 0, total = 0, index;
+	struct pwrctrl_priv *pwrpriv = adapter_to_pwrctl(adapter);
+	struct rtl_wow_pattern wow_pattern;
+
+	total = pwrpriv->wowlan_pattern_idx;
+
+	if (total > MAX_WKFM_CAM_NUM)
+		total = MAX_WKFM_CAM_NUM;
+
+	for (i = 0 ; i < total ; i++) {
+		if (_SUCCESS == rtw_hal_wow_pattern_generate(adapter, i, &wow_pattern)) {
+
+			index = i;
+			if (!pwrpriv->bInSuspend)
+				index += 2;
+			rtw_dump_wow_pattern(RTW_DBGDUMP, &wow_pattern, i);
+			if (rtw_write_to_frame_mask(adapter, index, &wow_pattern) == _FALSE)
+				RTW_INFO("%s: ERROR!! idx: %d write_to_frame_mask_cam fail\n", __func__, i);
+		}
+
+	}
+	rtw_write8(adapter, REG_WKFMCAM_NUM, total);
+
+}
+#else /* CONFIG_WOW_PATTERN_IN_TXFIFO */
+bool rtw_read_from_frame_mask(_adapter *adapter, u8 idx)
+{
+	u32 data_l = 0, data_h = 0, page_sz = 0;
+	u16 tx_page_start, tx_buf_ptr = 0;
+	u16 cam_start_offset = 0;
+	u16 ctrl_l = 0, ctrl_h = 0;
+	u8 count = 0, tmp = 0, last_entry = 0;
+	int i = 0;
+	bool res = _TRUE;
+	struct pwrctrl_priv *pwrctl = adapter_to_pwrctl(adapter);
+	u32 buffer[WKFMCAM_ADDR_NUM];
+
+
+	if (idx > MAX_WKFM_CAM_NUM) {
+		RTW_INFO("[Error]: %s, pattern index is out of range\n",
+			 __func__);
+		return _FALSE;
+	}
+
+	rtw_hal_get_def_var(adapter, HAL_DEF_TX_PAGE_SIZE, (u8 *)&page_sz);
+	if (page_sz == 0) {
+		RTW_INFO("[Error]: %s, page_sz is 0!!\n", __func__);
+		return _FALSE;
+	}
+
+	rtw_hal_get_def_var(adapter, HAL_DEF_TX_BUFFER_LAST_ENTRY, (u8 *)&last_entry);
+	if (last_entry == 0) {
+		RTW_INFO("[Error]: %s, last entry of tx buffer is 0!!\n", __func__);
+		return _FALSE;
+	}
+
+
+	if(_rtw_wow_chk_cap(adapter, WOW_CAP_HALMAC_ACCESS_PATTERN_IN_TXFIFO)) {
+		/* 8723F cannot indirect access tx fifo
+		 * rtw_halmac_dump_fifo(dvobj, fifo_sel, fifo_addr, buf_sz, buf)
+		 */
+		#ifdef RTW_HALMAC
+		rtw_halmac_dump_fifo(adapter_to_dvobj(adapter),
+		2,
+		(pwrctl->pattern_rsvd_page_loc * page_sz) + (idx * WKFMCAM_ADDR_NUM * 4),
+		WKFMCAM_ADDR_NUM*4, (u8*)buffer);
+		#endif
+
+		for (i = 0; i < (WKFMCAM_ADDR_NUM / 2); i++) {
+			RTW_INFO("[%d]: %08x %08x\n", i, *(buffer + i*2), *(buffer + i*2 + 1));
+		}
 	} else {
-#ifdef CONFIG_PNO_SUPPORT
-		if (pwrctl->wowlan_in_resume == _FALSE &&
-		    pwrctl->pno_inited == _TRUE) {
+		/* use the last 2 pages for wow pattern e.g. 0xfe and 0xff */
+		tx_page_start = last_entry - 1;
+		cam_start_offset = tx_page_start * page_sz / 8;
+		ctrl_l = 0x0;
+		ctrl_h = 0x0;
 
-			/* Broadcast Probe Request */
-			rsvd_page_loc->LocProbePacket = *page_num;
+		/* Enable TX packet buffer access */
+		rtw_write8(adapter, REG_PKT_BUFF_ACCESS_CTRL, TXPKT_BUF_SELECT);
 
-			RTW_INFO("loc_probe_req: %d\n",
-				 rsvd_page_loc->LocProbePacket);
+		/* Read the WKFM CAM */
+		for (i = 0; i < (WKFMCAM_ADDR_NUM / 2); i++) {
+			/*
+			 * Set Tx packet buffer offset.
+			 * TxBufer pointer increases 1, we can access 8 bytes in Tx packet buffer.
+			 * CAM start offset (unit: 1 byte) =  Index*WKFMCAM_SIZE
+			 * TxBufer pointer addr = (CAM start offset + per entry offset of a WKFMCAM)/8
+			 * * Index: The index of the wake up frame mask
+			 * * WKFMCAM_SIZE: the total size of one WKFM CAM
+			 * * per entry offset of a WKFM CAM: Addr i * 4 bytes
+			 */
+			tx_buf_ptr =
+				(cam_start_offset + idx * WKFMCAM_SIZE + i * 8) >> 3;
+			rtw_write16(adapter, REG_PKTBUF_DBG_CTRL, tx_buf_ptr);
+			rtw_write16(adapter, REG_RXPKTBUF_CTRL, ctrl_l);
+			data_l = rtw_read32(adapter, REG_PKTBUF_DBG_DATA_L);
+			data_h = rtw_read32(adapter, REG_PKTBUF_DBG_DATA_H);
 
-			rtw_hal_construct_ProbeReq(
-				adapter,
-				&pframe[index],
-				&ProbeReqLength,
-				NULL);
+			RTW_INFO("[%d]: %08x %08x\n", i, data_h, data_l);
 
-			rtw_hal_fill_fake_txdesc(adapter,
-						 &pframe[index - tx_desc],
-				 ProbeReqLength, _FALSE, _FALSE, _FALSE);
+			count = 0;
 
-			CurtPktPageNum =
-				(u8)PageNum(tx_desc + ProbeReqLength, page_size);
+			do {
+				tmp = rtw_read32(adapter, REG_PKTBUF_DBG_CTRL) & BIT23;
+				rtw_udelay_os(2);
+				count++;
+			} while (!tmp && count < 100);
 
-			*page_num += CurtPktPageNum;
+			if (count >= 100) {
+				RTW_INFO("%s count:%d\n", __func__, count);
+				res = _FALSE;
+			}
+		}
 
-			index += (CurtPktPageNum * page_size);
-			RSVD_PAGE_CFG("WOW-ProbeReq", CurtPktPageNum, *page_num, 0);
+		/* Disable RX packet buffer access */
+		rtw_write8(adapter, REG_PKT_BUFF_ACCESS_CTRL,
+			   DISABLE_TRXPKT_BUF_ACCESS);
+	}
 
-			/* Hidden SSID Probe Request */
-			ssid_num = pwrctl->pnlo_info->hidden_ssid_num;
+	return res;
+}
 
-			for (pno_index = 0 ; pno_index < ssid_num ; pno_index++) {
-				pwrctl->pnlo_info->loc_probe_req[pno_index] =
-					*page_num;
+bool rtw_write_to_frame_mask(_adapter *adapter, u8 idx,
+			     struct  rtl_wow_pattern *context)
+{
+	u32 tx_page_start = 0, page_sz = 0;
+	u16 tx_buf_ptr = 0;
+	u16 cam_start_offset = 0;
+	u32 data_l = 0, data_h = 0;
+	u8 count = 0, tmp = 0, last_entry = 0;
+	int res = 0, i = 0;
 
-				rtw_hal_construct_ProbeReq(
-					adapter,
-					&pframe[index],
-					&ProbeReqLength,
-					&pwrctl->pno_ssid_list->node[pno_index]);
+	if (idx > MAX_WKFM_CAM_NUM) {
+		RTW_INFO("[Error]: %s, pattern index is out of range\n",
+			 __func__);
+		return _FALSE;
+	}
 
-				rtw_hal_fill_fake_txdesc(adapter,
-						 &pframe[index - tx_desc],
-					ProbeReqLength, _FALSE, _FALSE, _FALSE);
+	rtw_hal_get_def_var(adapter, HAL_DEF_TX_PAGE_SIZE, (u8 *)&page_sz);
+	if (page_sz == 0) {
+		RTW_INFO("[Error]: %s, page_sz is 0!!\n", __func__);
+		return _FALSE;
+	}
 
-				CurtPktPageNum =
-					(u8)PageNum(tx_desc + ProbeReqLength, page_size);
+	rtw_hal_get_def_var(adapter, HAL_DEF_TX_BUFFER_LAST_ENTRY, (u8 *)&last_entry);
+	if (last_entry == 0) {
+		RTW_INFO("[Error]: %s, last entry of tx buffer is 0!!\n", __func__);
+		return _FALSE;
+	}
+
+	/* use the last 2 pages for wow pattern e.g. 0xfe and 0xff */
+	tx_page_start = last_entry - 1;
+	cam_start_offset = tx_page_start * page_sz / 8;
+
+	/* Write the PATTERN location to BIT_TXBUF_WKCAM_OFFSET */
+	rtw_write8(adapter, REG_TXBUF_WKCAM_OFFSET, cam_start_offset & 0xFF);
+	rtw_write8(adapter, REG_TXBUF_WKCAM_OFFSET + 1, (cam_start_offset >> 8) & 0xFF);
+	/* Enable TX packet buffer access */
+	rtw_write8(adapter, REG_PKT_BUFF_ACCESS_CTRL, TXPKT_BUF_SELECT);
+
+	/* Write the WKFM CAM */
+	for (i = 0; i < WKFMCAM_ADDR_NUM / 2; i++) {
+		/*
+		 * Set Tx packet buffer offset.
+		 * TxBufer pointer increases 1, we can access 8 bytes in Rx packet buffer.
+		 * CAM start offset (unit: 1 byte) =  Index*WKFMCAM_SIZE
+		 * TxBufer pointer addr = (CAM start offset + per entry offset of a WKFMCAM)/8
+		 * * Index: The index of the wake up frame mask
+		 * * WKFMCAM_SIZE: the total size of one WKFM CAM
+		 * * per entry offset of a WKFM CAM: Addr i * 4 bytes
+		 */
+		tx_buf_ptr = cam_start_offset + ((idx * WKFMCAM_SIZE + i * 8) >> 3);
+
+		if (i == 0) {
+			if (context->type == PATTERN_VALID)
+				data_l = WOW_VALID_BIT;
+			else if (context->type == PATTERN_BROADCAST)
+				data_l = WOW_VALID_BIT | WOW_BC_BIT;
+			else if (context->type == PATTERN_MULTICAST)
+				data_l = WOW_VALID_BIT | WOW_MC_BIT;
+			else if (context->type == PATTERN_UNICAST)
+				data_l = WOW_VALID_BIT | WOW_UC_BIT;
+
+			if (context->crc != 0)
+				data_l |= context->crc;
+
+			rtw_write32(adapter, REG_PKTBUF_DBG_DATA_L, data_l);
+		} else {
+			data_l = context->mask[i * 2 - 2];
+			data_h = context->mask[i * 2 - 1];
+			rtw_write32(adapter, REG_PKTBUF_DBG_DATA_L, data_l);
+			rtw_write32(adapter, REG_PKTBUF_DBG_DATA_H, data_h);
+		}
+
+		rtw_write32(adapter, REG_PKTBUF_DBG_CTRL, (tx_buf_ptr & 0x1FFF) | BIT23 | (0xff <<24));
+		count = 0;
+		do {
+			tmp = rtw_read32(adapter, REG_PKTBUF_DBG_CTRL) & BIT23;
+			rtw_udelay_os(2);
+			count++;
+		} while (tmp && count < 100);
+
+		if (count >= 100) {
+			res = _FALSE;
+			RTW_INFO("%s write failed\n", __func__);
+		} else {
+			res = _TRUE;
+			RTW_INFO("%s write OK\n", __func__);
+		}
+	}
+
+	/* Disable TX packet buffer access */
+	rtw_write8(adapter, REG_PKT_BUFF_ACCESS_CTRL, DISABLE_TRXPKT_BUF_ACCESS);
+	return res;
+}
+bool rtw_write_to_frame_mask_buf(_adapter *adapter, u8 idx,
+			     struct  rtl_wow_pattern *context, char *pattern_info, u32 *ppattern_info_len)
+{
 
-				*page_num += CurtPktPageNum;
+	struct pwrctrl_priv *pwrpriv = adapter_to_pwrctl(adapter);
+	u32 page_sz = 0;
+	int res = _FALSE, i = 0;
+	u32 tmp_pattern_buf[6] = {0};
 
-				index += (CurtPktPageNum * page_size);
-				RSVD_PAGE_CFG("WOW-ProbeReq", CurtPktPageNum, *page_num, 0);
-			}
+	if (pattern_info == NULL) {
+		RTW_ERR("[Error]: %s, pattern info is NULL\n", __func__);
+	}
+	if (idx > MAX_WKFM_CAM_NUM) {
+		RTW_ERR("[Error]: %s, pattern index is out of range\n",
+			 __func__);
+		return _FALSE;
+	}
 
-			/* PNO INFO Page */
-			rsvd_page_loc->LocPNOInfo = *page_num;
-			RTW_INFO("LocPNOInfo: %d\n", rsvd_page_loc->LocPNOInfo);
-			rtw_hal_construct_PNO_info(adapter,
-						   &pframe[index - tx_desc],
-						   &PNOLength);
+	rtw_hal_get_def_var(adapter, HAL_DEF_TX_PAGE_SIZE, (u8 *)&page_sz);
+	if (page_sz == 0) {
+		RTW_ERR("[Error]: %s, page_sz is 0!!\n", __func__);
+		return _FALSE;
+	}
 
-			CurtPktPageNum = (u8)PageNum(PNOLength, page_size);
-			*page_num += CurtPktPageNum;
-			index += (CurtPktPageNum * page_size);
-			RSVD_PAGE_CFG("WOW-PNOInfo", CurtPktPageNum, *page_num, 0);
+	/* Fill WKFM */
+	for (i = 0; i < WKFMCAM_ADDR_NUM / 2; i++) {
+		if (i == 0) {
+			if (context->type == PATTERN_VALID)
+				tmp_pattern_buf[0] = WOW_VALID_BIT;
+			else if (context->type == PATTERN_BROADCAST)
+				tmp_pattern_buf[0] = WOW_VALID_BIT | WOW_BC_BIT;
+			else if (context->type == PATTERN_MULTICAST)
+				tmp_pattern_buf[0] = WOW_VALID_BIT | WOW_MC_BIT;
+			else if (context->type == PATTERN_UNICAST)
+				tmp_pattern_buf[0] = WOW_VALID_BIT | WOW_UC_BIT;
 
-			/* Scan Info Page */
-			rsvd_page_loc->LocScanInfo = *page_num;
-			RTW_INFO("LocScanInfo: %d\n", rsvd_page_loc->LocScanInfo);
-			rtw_hal_construct_scan_info(adapter,
-						    &pframe[index - tx_desc],
-						    &ScanInfoLength);
+			if (context->crc != 0)
+				tmp_pattern_buf[0] |= context->crc;
+			/* pattern[1] is reserved in pattern format, dont care. */
 
-			CurtPktPageNum = (u8)PageNum(ScanInfoLength, page_size);
-			*page_num += CurtPktPageNum;
-			*total_pkt_len = index + ScanInfoLength;
-			index += (CurtPktPageNum * page_size);
-			RSVD_PAGE_CFG("WOW-ScanInfo", CurtPktPageNum, *page_num, *total_pkt_len);
+		} else {
+			tmp_pattern_buf[i * 2] = context->mask[i * 2 - 2];
+			tmp_pattern_buf[i * 2 + 1] = context->mask[i * 2 - 1];
 		}
-#endif /* CONFIG_PNO_SUPPORT */
 	}
-}
 
-static void rtw_hal_gate_bb(_adapter *adapter, bool stop)
-{
-	struct pwrctrl_priv *pwrpriv = adapter_to_pwrctl(adapter);
-	u8 i = 0, val8 = 0, empty = _FAIL;
 
-	if (stop) {
-		/* checking TX queue status */
-		for (i = 0 ; i < 5 ; i++) {
-			rtw_hal_get_hwreg(adapter, HW_VAR_CHK_MGQ_CPU_EMPTY, &empty);
-			if (empty) {
-				break;
-			} else {
-				RTW_WARN("%s: MGQ_CPU is busy(%d)!\n",
-					 __func__, i);
-				rtw_mdelay_os(10);
-			}
-		}
+	/* put pattern to pattern_buf */
+	_rtw_memcpy((pattern_info + idx * WKFMCAM_SIZE) , tmp_pattern_buf, WKFMCAM_SIZE);
+	*ppattern_info_len += WKFMCAM_SIZE;
+	#ifdef CONFIG_WOW_PATTERN_IN_TXFIFO_DBG
+	RTW_INFO("\nidx : %u pattern_info_len : %u\n", idx, *ppattern_info_len);
+	RTW_INFO_DUMP("", (pattern_info + idx * WKFMCAM_SIZE), WKFMCAM_SIZE);
+	#endif
+	res = _TRUE;
 
-		if (val8 == 5)
-			RTW_ERR("%s: Polling MGQ_CPU empty fail!\n", __func__);
 
-		/* Pause TX*/
-		pwrpriv->wowlan_txpause_status = rtw_read8(adapter, REG_TXPAUSE);
-		rtw_write8(adapter, REG_TXPAUSE, 0xff);
-		val8 = rtw_read8(adapter, REG_SYS_FUNC_EN);
-		val8 &= ~BIT(0);
-		rtw_write8(adapter, REG_SYS_FUNC_EN, val8);
-		RTW_INFO("%s: BB gated: 0x%02x, store TXPAUSE: %02x\n",
-			 __func__,
-			 rtw_read8(adapter, REG_SYS_FUNC_EN),
-			 pwrpriv->wowlan_txpause_status);
-	} else {
-		val8 = rtw_read8(adapter, REG_SYS_FUNC_EN);
-		val8 |= BIT(0);
-		rtw_write8(adapter, REG_SYS_FUNC_EN, val8);
-		RTW_INFO("%s: BB release: 0x%02x, recover TXPAUSE:%02x\n",
-			 __func__, rtw_read8(adapter, REG_SYS_FUNC_EN),
-			 pwrpriv->wowlan_txpause_status);
-		/* release TX*/
-		rtw_write8(adapter, REG_TXPAUSE, pwrpriv->wowlan_txpause_status);
-	}
+	return res;
 }
+#endif /* CONFIG_WOW_PATTERN_IN_TXFIFO */
 
-static u8 rtw_hal_wow_pattern_generate(_adapter *adapter, u8 idx, struct rtl_wow_pattern *pwow_pattern)
+void rtw_clean_pattern(_adapter *adapter)
 {
 	struct pwrctrl_priv *pwrctl = adapter_to_pwrctl(adapter);
-	 u8 *pattern;
-	 u8 len = 0;
-	 u8 *mask;
+	struct rtl_wow_pattern zero_pattern;
+	int i = 0;
 
+	_rtw_memset(&zero_pattern, 0, sizeof(struct rtl_wow_pattern));
+
+	zero_pattern.type = PATTERN_INVALID;
+	/* pattern in tx fifo do not need clear to zero*/
+
+	rtw_write8(adapter, REG_WKFMCAM_NUM, 0);
+}
+#if 0
+static int rtw_hal_set_pattern(_adapter *adapter, u8 *pattern,
+			       u8 len, u8 *mask, u8 idx)
+{
+	struct pwrctrl_priv *pwrctl = adapter_to_pwrctl(adapter);
+	struct mlme_ext_priv *pmlmeext = NULL;
+	struct mlme_ext_info *pmlmeinfo = NULL;
+	struct rtl_wow_pattern wow_pattern;
 	u8 mask_hw[MAX_WKFM_SIZE] = {0};
 	u8 content[MAX_WKFM_PATTERN_SIZE] = {0};
 	u8 broadcast_addr[6] = {0xff, 0xff, 0xff, 0xff, 0xff, 0xff};
 	u8 multicast_addr1[2] = {0x33, 0x33};
 	u8 multicast_addr2[3] = {0x01, 0x00, 0x5e};
-	u8 mask_len = 0;
+	u8 res = _FALSE, index = 0, mask_len = 0;
 	u8 mac_addr[ETH_ALEN] = {0};
 	u16 count = 0;
-	int i;
+	int i, j;
 
 	if (pwrctl->wowlan_pattern_idx > MAX_WKFM_CAM_NUM) {
 		RTW_INFO("%s pattern_idx is more than MAX_FMC_NUM: %d\n",
 			 __func__, MAX_WKFM_CAM_NUM);
-		return _FAIL;
+		return _FALSE;
 	}
 
-	pattern = pwrctl->patterns[idx].content;
-	len = pwrctl->patterns[idx].len;
-	mask = pwrctl->patterns[idx].mask;
-
+	pmlmeext = &adapter->mlmeextpriv;
+	pmlmeinfo = &pmlmeext->mlmext_info;
 	_rtw_memcpy(mac_addr, adapter_mac_addr(adapter), ETH_ALEN);
-	_rtw_memset(pwow_pattern, 0, sizeof(struct rtl_wow_pattern));
+	_rtw_memset(&wow_pattern, 0, sizeof(struct rtl_wow_pattern));
 
 	mask_len = DIV_ROUND_UP(len, 8);
 
 	/* 1. setup A1 table */
 	if (memcmp(pattern, broadcast_addr, ETH_ALEN) == 0)
-		pwow_pattern->type = PATTERN_BROADCAST;
+		wow_pattern.type = PATTERN_BROADCAST;
 	else if (memcmp(pattern, multicast_addr1, 2) == 0)
-		pwow_pattern->type = PATTERN_MULTICAST;
+		wow_pattern.type = PATTERN_MULTICAST;
 	else if (memcmp(pattern, multicast_addr2, 3) == 0)
-		pwow_pattern->type = PATTERN_MULTICAST;
+		wow_pattern.type = PATTERN_MULTICAST;
 	else if (memcmp(pattern, mac_addr, ETH_ALEN) == 0)
-		pwow_pattern->type = PATTERN_UNICAST;
+		wow_pattern.type = PATTERN_UNICAST;
 	else
-		pwow_pattern->type = PATTERN_INVALID;
+		wow_pattern.type = PATTERN_INVALID;
 
 	/* translate mask from os to mask for hw */
 
-	/******************************************************************************
-	 * pattern from OS uses 'ethenet frame', like this:
+/******************************************************************************
+ * pattern from OS uses 'ethenet frame', like this:
 
-		|    6   |    6   |   2  |     20    |  Variable  |  4  |
-		|--------+--------+------+-----------+------------+-----|
-		|    802.3 Mac Header    | IP Header | TCP Packet | FCS |
-		|   DA   |   SA   | Type |
+	|    6   |    6   |   2  |     20    |  Variable  |  4  |
+	|--------+--------+------+-----------+------------+-----|
+	|    802.3 Mac Header    | IP Header | TCP Packet | FCS |
+	|   DA   |   SA   | Type |
 
-	 * BUT, packet catched by our HW is in '802.11 frame', begin from LLC,
+ * BUT, packet catched by our HW is in '802.11 frame', begin from LLC,
 
-		|     24 or 30      |    6   |   2  |     20    |  Variable  |  4  |
-		|-------------------+--------+------+-----------+------------+-----|
-		| 802.11 MAC Header |       LLC     | IP Header | TCP Packet | FCS |
-				    | Others | Tpye |
+	|     24 or 30      |    6   |   2  |     20    |  Variable  |  4  |
+	|-------------------+--------+------+-----------+------------+-----|
+	| 802.11 MAC Header |       LLC     | IP Header | TCP Packet | FCS |
+			    | Others | Tpye |
 
-	 * Therefore, we need translate mask_from_OS to mask_to_hw.
-	 * We should left-shift mask by 6 bits, then set the new bit[0~5] = 0,
-	 * because new mask[0~5] means 'SA', but our HW packet begins from LLC,
-	 * bit[0~5] corresponds to first 6 Bytes in LLC, they just don't match.
-	 ******************************************************************************/
+ * Therefore, we need translate mask_from_OS to mask_to_hw.
+ * We should left-shift mask by 6 bits, then set the new bit[0~5] = 0,
+ * because new mask[0~5] means 'SA', but our HW packet begins from LLC,
+ * bit[0~5] corresponds to first 6 Bytes in LLC, they just don't match.
+ ******************************************************************************/
 	/* Shift 6 bits */
 	for (i = 0; i < mask_len - 1; i++) {
 		mask_hw[i] = mask[i] >> 6;
@@ -9962,10 +10110,10 @@ static u8 rtw_hal_wow_pattern_generate(_adapter *adapter, u8 idx, struct rtl_wow
 	mask_hw[0] &= 0xC0;
 
 	for (i = 0; i < (MAX_WKFM_SIZE / 4); i++) {
-		pwow_pattern->mask[i] = mask_hw[i * 4];
-		pwow_pattern->mask[i] |= (mask_hw[i * 4 + 1] << 8);
-		pwow_pattern->mask[i] |= (mask_hw[i * 4 + 2] << 16);
-		pwow_pattern->mask[i] |= (mask_hw[i * 4 + 3] << 24);
+		wow_pattern.mask[i] = mask_hw[i * 4];
+		wow_pattern.mask[i] |= (mask_hw[i * 4 + 1] << 8);
+		wow_pattern.mask[i] |= (mask_hw[i * 4 + 2] << 16);
+		wow_pattern.mask[i] |= (mask_hw[i * 4 + 3] << 24);
 	}
 
 	/* To get the wake up pattern from the mask.
@@ -9979,1207 +10127,1348 @@ static u8 rtw_hal_wow_pattern_generate(_adapter *adapter, u8 idx, struct rtl_wow
 		}
 	}
 
-	pwow_pattern->crc = rtw_calc_crc(content, count);
+	wow_pattern.crc = rtw_calc_crc(content, count);
 
-	if (pwow_pattern->crc != 0) {
-		if (pwow_pattern->type == PATTERN_INVALID)
-			pwow_pattern->type = PATTERN_VALID;
+	if (wow_pattern.crc != 0) {
+		if (wow_pattern.type == PATTERN_INVALID)
+			wow_pattern.type = PATTERN_VALID;
 	}
 
-	return _SUCCESS;
-}
-
-void rtw_dump_wow_pattern(void *sel, struct rtl_wow_pattern *pwow_pattern, u8 idx)
-{
-	int j;
-
-	RTW_PRINT_SEL(sel, "=======WOW CAM-ID[%d]=======\n", idx);
-	RTW_PRINT_SEL(sel, "[WOW CAM] type:%d\n", pwow_pattern->type);
-	RTW_PRINT_SEL(sel, "[WOW CAM] crc:0x%04x\n", pwow_pattern->crc);
-	for (j = 0; j < 4; j++)
-		RTW_PRINT_SEL(sel, "[WOW CAM] Mask:0x%08x\n", pwow_pattern->mask[j]);
-}
-/*bit definition of pattern match format*/
-#define WOW_VALID_BIT	BIT31
-#ifndef CONFIG_WOW_PATTERN_IN_TXFIFO
-#define WOW_BC_BIT		BIT26
-#define WOW_MC_BIT		BIT25
-#define WOW_UC_BIT		BIT24
-#else
-#define WOW_BC_BIT		BIT18
-#define WOW_UC_BIT		BIT17
-#define WOW_MC_BIT		BIT16
-#endif /*CONFIG_WOW_PATTERN_IN_TXFIFO*/
-
-#ifndef CONFIG_WOW_PATTERN_HW_CAM
-#ifndef CONFIG_WOW_PATTERN_IN_TXFIFO
-static void rtw_hal_reset_mac_rx(_adapter *adapter)
-{
-	u8 val8 = 0;
-	/* Set REG_CR bit1, bit3, bit7 to 0*/
-	val8 = rtw_read8(adapter, REG_CR);
-	val8 &= 0x75;
-	rtw_write8(adapter, REG_CR, val8);
-	val8 = rtw_read8(adapter, REG_CR);
-	/* Set REG_CR bit1, bit3, bit7 to 1*/
-	val8 |= 0x8a;
-	rtw_write8(adapter, REG_CR, val8);
-	RTW_INFO("0x%04x: %02x\n", REG_CR, rtw_read8(adapter, REG_CR));
-}
-static void rtw_hal_set_wow_rxff_boundary(_adapter *adapter, bool wow_mode)
-{
-	u8 val8 = 0;
-	u16 rxff_bndy = 0;
-	u32 rx_dma_buff_sz = 0;
-
-	val8 = rtw_read8(adapter, REG_FIFOPAGE + 3);
-	if (val8 != 0)
-		RTW_INFO("%s:[%04x]some PKTs in TXPKTBUF\n",
-			 __func__, (REG_FIFOPAGE + 3));
+	index = idx;
 
-	rtw_hal_reset_mac_rx(adapter);
+	if (!pwrctl->bInSuspend)
+		index += 2;
 
-	if (wow_mode) {
-		rtw_hal_get_def_var(adapter, HAL_DEF_RX_DMA_SZ_WOW,
-				    (u8 *)&rx_dma_buff_sz);
-		rxff_bndy = rx_dma_buff_sz - 1;
+	/* write pattern */
+	res = rtw_write_to_frame_mask(adapter, index, &wow_pattern);
 
-		rtw_write16(adapter, (REG_TRXFF_BNDY + 2), rxff_bndy);
-		RTW_INFO("%s: wow mode, 0x%04x: 0x%04x\n", __func__,
-			 REG_TRXFF_BNDY + 2,
-			 rtw_read16(adapter, (REG_TRXFF_BNDY + 2)));
-	} else {
-		rtw_hal_get_def_var(adapter, HAL_DEF_RX_DMA_SZ,
-				    (u8 *)&rx_dma_buff_sz);
-		rxff_bndy = rx_dma_buff_sz - 1;
-		rtw_write16(adapter, (REG_TRXFF_BNDY + 2), rxff_bndy);
-		RTW_INFO("%s: normal mode, 0x%04x: 0x%04x\n", __func__,
-			 REG_TRXFF_BNDY + 2,
-			 rtw_read16(adapter, (REG_TRXFF_BNDY + 2)));
-	}
+	if (res == _FALSE)
+		RTW_INFO("%s: ERROR!! idx: %d write_to_frame_mask_cam fail\n",
+			 __func__, idx);
+
+	return res;
 }
-#endif /* CONFIG_WOW_PATTERN_IN_TXFIFO*/
-#ifndef CONFIG_WOW_PATTERN_IN_TXFIFO
-bool rtw_read_from_frame_mask(_adapter *adapter, u8 idx)
+#endif
+#else /*CONFIG_WOW_PATTERN_HW_CAM*/
+
+#define WOW_CAM_ACCESS_TIMEOUT_MS	200
+static u32 _rtw_wow_pattern_read_cam(_adapter *adapter, u8 addr)
 {
-	u32 data_l = 0, data_h = 0, rx_dma_buff_sz = 0, page_sz = 0;
-	u16 offset, rx_buf_ptr = 0;
-	u16 cam_start_offset = 0;
-	u16 ctrl_l = 0, ctrl_h = 0;
-	u8 count = 0, tmp = 0;
-	int i = 0;
-	bool res = _TRUE;
+	struct pwrctrl_priv *pwrpriv = adapter_to_pwrctl(adapter);
+	_mutex *mutex = &pwrpriv->wowlan_pattern_cam_mutex;
 
-	if (idx > MAX_WKFM_CAM_NUM) {
-		RTW_INFO("[Error]: %s, pattern index is out of range\n",
-			 __func__);
-		return _FALSE;
-	}
+	u32 rdata = 0;
+	u32 cnt = 0;
+	systime start = 0;
+	u8 timeout = 0;
+	u8 rst = _FALSE;
 
-	rtw_hal_get_def_var(adapter, HAL_DEF_RX_DMA_SZ_WOW,
-			    (u8 *)&rx_dma_buff_sz);
+	_enter_critical_mutex(mutex, NULL);
 
-	if (rx_dma_buff_sz == 0) {
-		RTW_INFO("[Error]: %s, rx_dma_buff_sz is 0!!\n", __func__);
-		return _FALSE;
-	}
+	rtw_write32(adapter, REG_WKFMCAM_CMD, BIT_WKFCAM_POLLING_V1 | BIT_WKFCAM_ADDR_V2(addr));
 
-	rtw_hal_get_def_var(adapter, HAL_DEF_RX_PAGE_SIZE, (u8 *)&page_sz);
+	start = rtw_get_current_time();
+	while (1) {
+		if (rtw_is_surprise_removed(adapter))
+			break;
 
-	if (page_sz == 0) {
-		RTW_INFO("[Error]: %s, page_sz is 0!!\n", __func__);
-		return _FALSE;
+		cnt++;
+		if (0 == (rtw_read32(adapter, REG_WKFMCAM_CMD) & BIT_WKFCAM_POLLING_V1)) {
+			rst = _SUCCESS;
+			break;
+		}
+		if (rtw_get_passing_time_ms(start) > WOW_CAM_ACCESS_TIMEOUT_MS) {
+			timeout = 1;
+			break;
+		}
 	}
 
-	offset = (u16)PageNum(rx_dma_buff_sz, page_sz);
-	cam_start_offset = offset * page_sz;
+	rdata = rtw_read32(adapter, REG_WKFMCAM_RWD);
 
-	ctrl_l = 0x0;
-	ctrl_h = 0x0;
+	_exit_critical_mutex(mutex, NULL);
 
-	/* Enable RX packet buffer access */
-	rtw_write8(adapter, REG_PKT_BUFF_ACCESS_CTRL, RXPKT_BUF_SELECT);
+	/*RTW_INFO("%s ==> addr:0x%02x , rdata:0x%08x\n", __func__, addr, rdata);*/
 
-	/* Read the WKFM CAM */
-	for (i = 0; i < (WKFMCAM_ADDR_NUM / 2); i++) {
-		/*
-		 * Set Rx packet buffer offset.
-		 * RxBufer pointer increases 1, we can access 8 bytes in Rx packet buffer.
-		 * CAM start offset (unit: 1 byte) =  Index*WKFMCAM_SIZE
-		 * RxBufer pointer addr = (CAM start offset + per entry offset of a WKFMCAM)/8
-		 * * Index: The index of the wake up frame mask
-		 * * WKFMCAM_SIZE: the total size of one WKFM CAM
-		 * * per entry offset of a WKFM CAM: Addr i * 4 bytes
-		 */
-		rx_buf_ptr =
-			(cam_start_offset + idx * WKFMCAM_SIZE + i * 8) >> 3;
-		rtw_write16(adapter, REG_PKTBUF_DBG_CTRL, rx_buf_ptr);
+	if (timeout)
+		RTW_ERR(FUNC_ADPT_FMT" failed due to polling timeout\n", FUNC_ADPT_ARG(adapter));
 
-		rtw_write16(adapter, REG_RXPKTBUF_CTRL, ctrl_l);
-		data_l = rtw_read32(adapter, REG_PKTBUF_DBG_DATA_L);
-		data_h = rtw_read32(adapter, REG_PKTBUF_DBG_DATA_H);
+	return rdata;
+}
+void rtw_wow_pattern_read_cam_ent(_adapter *adapter, u8 id, struct  rtl_wow_pattern *context)
+{
+	int i;
+	u32 rdata;
 
-		RTW_INFO("[%d]: %08x %08x\n", i, data_h, data_l);
+	_rtw_memset(context, 0, sizeof(struct  rtl_wow_pattern));
 
-		count = 0;
+	for (i = 4; i >= 0; i--) {
+		rdata = _rtw_wow_pattern_read_cam(adapter, (id << 3) | i);
 
-		do {
-			tmp = rtw_read8(adapter, REG_RXPKTBUF_CTRL);
-			rtw_udelay_os(2);
-			count++;
-		} while (!tmp && count < 100);
+		switch (i) {
+		case 4:
+			if (rdata & WOW_BC_BIT)
+				context->type = PATTERN_BROADCAST;
+			else if (rdata & WOW_MC_BIT)
+				context->type = PATTERN_MULTICAST;
+			else if (rdata & WOW_UC_BIT)
+				context->type = PATTERN_UNICAST;
+			else
+				context->type = PATTERN_INVALID;
 
-		if (count >= 100) {
-			RTW_INFO("%s count:%d\n", __func__, count);
-			res = _FALSE;
+			context->crc = rdata & 0xFFFF;
+			break;
+		default:
+			_rtw_memcpy(&context->mask[i], (u8 *)(&rdata), 4);
+			break;
 		}
 	}
-
-	/* Disable RX packet buffer access */
-	rtw_write8(adapter, REG_PKT_BUFF_ACCESS_CTRL,
-		   DISABLE_TRXPKT_BUF_ACCESS);
-	return res;
 }
 
-bool rtw_write_to_frame_mask(_adapter *adapter, u8 idx,
-			     struct  rtl_wow_pattern *context)
+static void _rtw_wow_pattern_write_cam(_adapter *adapter, u8 addr, u32 wdata)
 {
-	u32 data = 0, rx_dma_buff_sz = 0, page_sz = 0;
-	u16 offset, rx_buf_ptr = 0;
-	u16 cam_start_offset = 0;
-	u16 ctrl_l = 0, ctrl_h = 0;
-	u8 count = 0, tmp = 0;
-	int res = 0, i = 0;
+	struct pwrctrl_priv *pwrpriv = adapter_to_pwrctl(adapter);
+	_mutex *mutex = &pwrpriv->wowlan_pattern_cam_mutex;
+	u32 cnt = 0;
+	systime start = 0, end = 0;
+	u8 timeout = 0;
 
-	if (idx > MAX_WKFM_CAM_NUM) {
-		RTW_INFO("[Error]: %s, pattern index is out of range\n",
-			 __func__);
-		return _FALSE;
-	}
+	/*RTW_INFO("%s ==> addr:0x%02x , wdata:0x%08x\n", __func__, addr, wdata);*/
+	_enter_critical_mutex(mutex, NULL);
 
-	rtw_hal_get_def_var(adapter, HAL_DEF_RX_DMA_SZ_WOW,
-			    (u8 *)&rx_dma_buff_sz);
+	rtw_write32(adapter, REG_WKFMCAM_RWD, wdata);
+	rtw_write32(adapter, REG_WKFMCAM_CMD, BIT_WKFCAM_POLLING_V1 | BIT_WKFCAM_WE | BIT_WKFCAM_ADDR_V2(addr));
 
-	if (rx_dma_buff_sz == 0) {
-		RTW_INFO("[Error]: %s, rx_dma_buff_sz is 0!!\n", __func__);
-		return _FALSE;
+	start = rtw_get_current_time();
+	while (1) {
+		if (rtw_is_surprise_removed(adapter))
+			break;
+
+		cnt++;
+		if (0 == (rtw_read32(adapter, REG_WKFMCAM_CMD) & BIT_WKFCAM_POLLING_V1))
+			break;
+
+		if (rtw_get_passing_time_ms(start) > WOW_CAM_ACCESS_TIMEOUT_MS) {
+			timeout = 1;
+			break;
+		}
 	}
+	end = rtw_get_current_time();
 
-	rtw_hal_get_def_var(adapter, HAL_DEF_RX_PAGE_SIZE, (u8 *)&page_sz);
+	_exit_critical_mutex(mutex, NULL);
 
-	if (page_sz == 0) {
-		RTW_INFO("[Error]: %s, page_sz is 0!!\n", __func__);
-		return _FALSE;
+	if (timeout) {
+		RTW_ERR(FUNC_ADPT_FMT" addr:0x%02x, wdata:0x%08x, to:%u, polling:%u, %d ms\n"
+			, FUNC_ADPT_ARG(adapter), addr, wdata, timeout, cnt, rtw_get_time_interval_ms(start, end));
 	}
+}
 
-	offset = (u16)PageNum(rx_dma_buff_sz, page_sz);
+void rtw_wow_pattern_write_cam_ent(_adapter *adapter, u8 id, struct  rtl_wow_pattern *context)
+{
+	int j;
+	u8 addr;
+	u32 wdata = 0;
 
-	cam_start_offset = offset * page_sz;
+	for (j = 4; j >= 0; j--) {
+		switch (j) {
+		case 4:
+			wdata = context->crc;
 
-	if (IS_HARDWARE_TYPE_8188E(adapter)) {
-		ctrl_l = 0x0001;
-		ctrl_h = 0x0001;
-	} else {
-		ctrl_l = 0x0f01;
-		ctrl_h = 0xf001;
+			if (PATTERN_BROADCAST == context->type)
+				wdata |= WOW_BC_BIT;
+			if (PATTERN_MULTICAST == context->type)
+				wdata |= WOW_MC_BIT;
+			if (PATTERN_UNICAST == context->type)
+				wdata |= WOW_UC_BIT;
+			if (PATTERN_INVALID != context->type)
+				wdata |= WOW_VALID_BIT;
+			break;
+		default:
+			wdata = context->mask[j];
+			break;
+		}
+
+		addr = (id << 3) + j;
+
+		_rtw_wow_pattern_write_cam(adapter, addr, wdata);
 	}
+}
 
-	/* Enable RX packet buffer access */
-	rtw_write8(adapter, REG_PKT_BUFF_ACCESS_CTRL, RXPKT_BUF_SELECT);
+static u8 _rtw_wow_pattern_clean_cam(_adapter *adapter)
+{
+	struct pwrctrl_priv *pwrpriv = adapter_to_pwrctl(adapter);
+	_mutex *mutex = &pwrpriv->wowlan_pattern_cam_mutex;
+	u32 cnt = 0;
+	systime start = 0;
+	u8 timeout = 0;
+	u8 rst = _FAIL;
 
-	/* Write the WKFM CAM */
-	for (i = 0; i < WKFMCAM_ADDR_NUM; i++) {
-		/*
-		 * Set Rx packet buffer offset.
-		 * RxBufer pointer increases 1, we can access 8 bytes in Rx packet buffer.
-		 * CAM start offset (unit: 1 byte) =  Index*WKFMCAM_SIZE
-		 * RxBufer pointer addr = (CAM start offset + per entry offset of a WKFMCAM)/8
-		 * * Index: The index of the wake up frame mask
-		 * * WKFMCAM_SIZE: the total size of one WKFM CAM
-		 * * per entry offset of a WKFM CAM: Addr i * 4 bytes
-		 */
-		rx_buf_ptr =
-			(cam_start_offset + idx * WKFMCAM_SIZE + i * 4) >> 3;
-		rtw_write16(adapter, REG_PKTBUF_DBG_CTRL, rx_buf_ptr);
+	_enter_critical_mutex(mutex, NULL);
+	rtw_write32(adapter, REG_WKFMCAM_CMD, BIT_WKFCAM_POLLING_V1 | BIT_WKFCAM_CLR_V1);
 
-		if (i == 0) {
-			if (context->type == PATTERN_VALID)
-				data = WOW_VALID_BIT;
-			else if (context->type == PATTERN_BROADCAST)
-				data = WOW_VALID_BIT | WOW_BC_BIT;
-			else if (context->type == PATTERN_MULTICAST)
-				data = WOW_VALID_BIT | WOW_MC_BIT;
-			else if (context->type == PATTERN_UNICAST)
-				data = WOW_VALID_BIT | WOW_UC_BIT;
+	start = rtw_get_current_time();
+	while (1) {
+		if (rtw_is_surprise_removed(adapter))
+			break;
+
+		cnt++;
+		if (0 == (rtw_read32(adapter, REG_WKFMCAM_CMD) & BIT_WKFCAM_POLLING_V1)) {
+			rst = _SUCCESS;
+			break;
+		}
+		if (rtw_get_passing_time_ms(start) > WOW_CAM_ACCESS_TIMEOUT_MS) {
+			timeout = 1;
+			break;
+		}
+	}
+	_exit_critical_mutex(mutex, NULL);
 
-			if (context->crc != 0)
-				data |= context->crc;
+	if (timeout)
+		RTW_ERR(FUNC_ADPT_FMT" falied ,polling timeout\n", FUNC_ADPT_ARG(adapter));
 
-			rtw_write32(adapter, REG_PKTBUF_DBG_DATA_L, data);
-			rtw_write16(adapter, REG_RXPKTBUF_CTRL, ctrl_l);
-		} else if (i == 1) {
-			data = 0;
-			rtw_write32(adapter, REG_PKTBUF_DBG_DATA_H, data);
-			rtw_write16(adapter, REG_RXPKTBUF_CTRL, ctrl_h);
-		} else if (i == 2 || i == 4) {
-			data = context->mask[i - 2];
-			rtw_write32(adapter, REG_PKTBUF_DBG_DATA_L, data);
-			/* write to RX packet buffer*/
-			rtw_write16(adapter, REG_RXPKTBUF_CTRL, ctrl_l);
-		} else if (i == 3 || i == 5) {
-			data = context->mask[i - 2];
-			rtw_write32(adapter, REG_PKTBUF_DBG_DATA_H, data);
-			/* write to RX packet buffer*/
-			rtw_write16(adapter, REG_RXPKTBUF_CTRL, ctrl_h);
-		}
+	return rst;
+}
 
-		count = 0;
-		do {
-			tmp = rtw_read8(adapter, REG_RXPKTBUF_CTRL);
-			rtw_udelay_os(2);
-			count++;
-		} while (tmp && count < 100);
+void rtw_clean_pattern(_adapter *adapter)
+{
+	if (_FAIL == _rtw_wow_pattern_clean_cam(adapter))
+		RTW_ERR("rtw_clean_pattern failed\n");
+}
+void rtw_fill_pattern(_adapter *adapter)
+{
+	int i = 0, total = 0;
+	struct pwrctrl_priv *pwrpriv = adapter_to_pwrctl(adapter);
+	struct rtl_wow_pattern wow_pattern;
 
-		if (count >= 100)
-			res = _FALSE;
-		else
-			res = _TRUE;
-	}
+	total = pwrpriv->wowlan_pattern_idx;
 
-	/* Disable RX packet buffer access */
-	rtw_write8(adapter, REG_PKT_BUFF_ACCESS_CTRL,
-		   DISABLE_TRXPKT_BUF_ACCESS);
+	if (total > MAX_WKFM_CAM_NUM)
+		total = MAX_WKFM_CAM_NUM;
 
-	return res;
+	for (i = 0 ; i < total ; i++) {
+		if (_SUCCESS == rtw_hal_wow_pattern_generate(adapter, i, &wow_pattern)) {
+			rtw_dump_wow_pattern(RTW_DBGDUMP, &wow_pattern, i);
+			rtw_wow_pattern_write_cam_ent(adapter, i, &wow_pattern);
+		}
+	}
 }
-#else /* CONFIG_WOW_PATTERN_IN_TXFIFO */
-bool rtw_read_from_frame_mask(_adapter *adapter, u8 idx)
+
+#endif
+void rtw_wow_pattern_cam_dump(_adapter *adapter)
 {
-	u32 data_l = 0, data_h = 0, rx_dma_buff_sz = 0, page_sz = 0;
-	u16 tx_page_start, tx_buf_ptr = 0;
-	u16 cam_start_offset = 0;
-	u16 ctrl_l = 0, ctrl_h = 0;
-	u8 count = 0, tmp = 0, last_entry = 0;
-	int i = 0;
-	bool res = _TRUE;
 
-	if (idx > MAX_WKFM_CAM_NUM) {
-		RTW_INFO("[Error]: %s, pattern index is out of range\n",
-			 __func__);
-		return _FALSE;
+#ifndef CONFIG_WOW_PATTERN_HW_CAM
+	int i = 0, total = 0;
+	struct pwrctrl_priv *pwrpriv = adapter_to_pwrctl(adapter);
+	total = pwrpriv->wowlan_pattern_idx;
+
+	if (total > MAX_WKFM_CAM_NUM)
+		total = MAX_WKFM_CAM_NUM;
+
+	for (i = 0 ; i < total; i++) {
+		RTW_INFO("=======[%d]=======\n", i);
+		rtw_read_from_frame_mask(adapter, i);
 	}
+#else
+	struct  rtl_wow_pattern context;
+	int i;
 
-	rtw_hal_get_def_var(adapter, HAL_DEF_TX_PAGE_SIZE, (u8 *)&page_sz);
-	if (page_sz == 0) {
-		RTW_INFO("[Error]: %s, page_sz is 0!!\n", __func__);
-		return _FALSE;
+	for (i = 0 ; i < MAX_WKFM_CAM_NUM; i++) {
+		rtw_wow_pattern_read_cam_ent(adapter, i, &context);
+		rtw_dump_wow_pattern(RTW_DBGDUMP, &context, i);
 	}
 
-	rtw_hal_get_def_var(adapter, HAL_DEF_TX_BUFFER_LAST_ENTRY, (u8 *)&last_entry);
-	if (last_entry == 0) {
-		RTW_INFO("[Error]: %s, last entry of tx buffer is 0!!\n", __func__);
-		return _FALSE;
+#endif
+}
+
+
+static void rtw_hal_dl_pattern(_adapter *adapter, u8 mode)
+{
+	struct pwrctrl_priv *pwrpriv = adapter_to_pwrctl(adapter);
+
+	switch (mode) {
+	case 0:
+		rtw_clean_pattern(adapter);
+		RTW_INFO("%s: total patterns: %d\n", __func__, pwrpriv->wowlan_pattern_idx);
+		break;
+	case 1:
+		#if defined(CONFIG_WOW_PATTERN_IN_TXFIFO)
+		RTW_INFO("%s Patterns have been downloaded in rsvd pages\n", __func__);
+		#else
+		rtw_set_default_pattern(adapter);
+		rtw_fill_pattern(adapter);
+		RTW_INFO("%s: pattern total: %d downloaded\n", __func__, pwrpriv->wowlan_pattern_idx);
+		#endif
+		break;
+	case 2:
+		rtw_clean_pattern(adapter);
+		rtw_wow_pattern_sw_reset(adapter);
+		RTW_INFO("%s: clean patterns\n", __func__);
+		break;
+	default:
+		RTW_INFO("%s: unknown mode\n", __func__);
+		break;
 	}
+}
 
-	/* use the last 2 pages for wow pattern e.g. 0xfe and 0xff */
-	tx_page_start = last_entry - 1;
-	cam_start_offset = tx_page_start * page_sz / 8;
-	ctrl_l = 0x0;
-	ctrl_h = 0x0;
+static void rtw_hal_wow_enable(_adapter *adapter)
+{
+	struct registry_priv  *registry_par = &adapter->registrypriv;
+	struct pwrctrl_priv *pwrctl = adapter_to_pwrctl(adapter);
+	struct security_priv *psecuritypriv = &adapter->securitypriv;
+	struct mlme_priv *pmlmepriv = &adapter->mlmepriv;
+	struct sta_info *psta = NULL;
+	PHAL_DATA_TYPE pHalData = GET_HAL_DATA(adapter);
+	int res;
+	u16 media_status_rpt;
+	u8 no_wake = 0, i;
+	struct dvobj_priv *dvobj = adapter_to_dvobj(adapter);
+	_adapter *iface;
+#ifdef CONFIG_GPIO_WAKEUP
+	u8 val8 = 0;
+#endif
 
-	/* Enable TX packet buffer access */
-	rtw_write8(adapter, REG_PKT_BUFF_ACCESS_CTRL, TXPKT_BUF_SELECT);
+#ifdef CONFIG_LPS_PG
+	u8 lps_pg_hdl_id = 0;
+#endif
 
-	/* Read the WKFM CAM */
-	for (i = 0; i < (WKFMCAM_ADDR_NUM / 2); i++) {
-		/*
-		 * Set Tx packet buffer offset.
-		 * TxBufer pointer increases 1, we can access 8 bytes in Tx packet buffer.
-		 * CAM start offset (unit: 1 byte) =  Index*WKFMCAM_SIZE
-		 * TxBufer pointer addr = (CAM start offset + per entry offset of a WKFMCAM)/8
-		 * * Index: The index of the wake up frame mask
-		 * * WKFMCAM_SIZE: the total size of one WKFM CAM
-		 * * per entry offset of a WKFM CAM: Addr i * 4 bytes
-		 */
-		tx_buf_ptr =
-			(cam_start_offset + idx * WKFMCAM_SIZE + i * 8) >> 3;
-		rtw_write16(adapter, REG_PKTBUF_DBG_CTRL, tx_buf_ptr);
-		rtw_write16(adapter, REG_RXPKTBUF_CTRL, ctrl_l);
-		data_l = rtw_read32(adapter, REG_PKTBUF_DBG_DATA_L);
-		data_h = rtw_read32(adapter, REG_PKTBUF_DBG_DATA_H);
 
-		RTW_INFO("[%d]: %08x %08x\n", i, data_h, data_l);
 
-		count = 0;
+	if(registry_par->suspend_type == FW_IPS_DISABLE_BBRF &&
+	!check_fwstate(pmlmepriv, WIFI_ASOC_STATE))
+		no_wake = 1;
 
-		do {
-			tmp = rtw_read32(adapter, REG_PKTBUF_DBG_CTRL) & BIT23;
-			rtw_udelay_os(2);
-			count++;
-		} while (!tmp && count < 100);
+	RTW_PRINT(FUNC_ADPT_FMT " WOWLAN_ENABLE\n", FUNC_ADPT_ARG(adapter));
+	rtw_hal_gate_bb(adapter, _TRUE);
 
-		if (count >= 100) {
-			RTW_INFO("%s count:%d\n", __func__, count);
-			res = _FALSE;
+	for (i = 0; i < dvobj->iface_nums; i++) {
+		iface = dvobj->padapters[i];
+		/* Start Usb TxDMA */
+		if(iface) {
+			RTW_INFO(ADPT_FMT "enable TX\n", ADPT_ARG(iface));
+			RTW_ENABLE_FUNC(iface, DF_TX_BIT);
 		}
 	}
 
-	/* Disable RX packet buffer access */
-	rtw_write8(adapter, REG_PKT_BUFF_ACCESS_CTRL,
-		   DISABLE_TRXPKT_BUF_ACCESS);
-	return res;
-}
+#ifdef CONFIG_GTK_OL
+	if (psecuritypriv->binstallKCK_KEK == _TRUE)
+		rtw_hal_fw_sync_cam_id(adapter);
+#endif
+	if (IS_HARDWARE_TYPE_8723B(adapter))
+		rtw_hal_backup_rate(adapter);
 
-bool rtw_write_to_frame_mask(_adapter *adapter, u8 idx,
-			     struct  rtl_wow_pattern *context)
-{
-	u32 tx_page_start = 0, page_sz = 0;
-	u16 tx_buf_ptr = 0;
-	u16 cam_start_offset = 0;
-	u32 data_l = 0, data_h = 0;
-	u8 count = 0, tmp = 0, last_entry = 0;
-	int res = 0, i = 0;
+	rtw_hal_fw_dl(adapter, _TRUE);
+	if(no_wake)
+		media_status_rpt = RT_MEDIA_DISCONNECT;
+	else
+		media_status_rpt = RT_MEDIA_CONNECT;
+	rtw_hal_set_hwreg(adapter, HW_VAR_H2C_FW_JOINBSSRPT,
+			  (u8 *)&media_status_rpt);
 
-	if (idx > MAX_WKFM_CAM_NUM) {
-		RTW_INFO("[Error]: %s, pattern index is out of range\n",
-			 __func__);
-		return _FALSE;
-	}
+	/* RX DMA stop */
+	#if defined(CONFIG_RTL8188E)
+	if (IS_HARDWARE_TYPE_8188E(adapter))
+		rtw_hal_disable_tx_report(adapter);
+	#endif
 
-	rtw_hal_get_def_var(adapter, HAL_DEF_TX_PAGE_SIZE, (u8 *)&page_sz);
-	if (page_sz == 0) {
-		RTW_INFO("[Error]: %s, page_sz is 0!!\n", __func__);
-		return _FALSE;
+	res = rtw_hal_pause_rx_dma(adapter);
+	if (res == _FAIL)
+		RTW_PRINT("[WARNING] pause RX DMA fail\n");
+
+	#ifndef CONFIG_WOW_PATTERN_HW_CAM
+	/* Reconfig RX_FF Boundary */
+	#ifndef CONFIG_WOW_PATTERN_IN_TXFIFO
+	rtw_hal_set_wow_rxff_boundary(adapter, _TRUE);
+	#endif /*CONFIG_WOW_PATTERN_IN_TXFIFO*/
+	#endif
+
+	/* redownload wow pattern */
+	if(!no_wake)
+		rtw_hal_dl_pattern(adapter, 1);
+
+	if (!pwrctl->wowlan_pno_enable) {
+		psta = rtw_get_stainfo(&adapter->stapriv, get_bssid(pmlmepriv));
+
+		if (psta != NULL) {
+			#ifdef CONFIG_FW_MULTI_PORT_SUPPORT
+			adapter_to_dvobj(adapter)->dft.port_id = 0xFF;
+			adapter_to_dvobj(adapter)->dft.mac_id = 0xFF;
+			rtw_hal_set_default_port_id_cmd(adapter, psta->cmn.mac_id);
+			#endif
+			if(!no_wake)
+				rtw_sta_media_status_rpt(adapter, psta, 1);
+		}
+#ifdef CONFIG_FW_MULTI_PORT_SUPPORT
+		else {
+			if(registry_par->suspend_type == FW_IPS_WRC) {
+				adapter_to_dvobj(adapter)->dft.port_id = 0xFF;
+				adapter_to_dvobj(adapter)->dft.mac_id = 0xFF;
+				rtw_hal_set_default_port_id_cmd(adapter, 0);
+			}
+		}
+#endif /* CONFIG_FW_MULTI_PORT_SUPPORT */
 	}
-
-	rtw_hal_get_def_var(adapter, HAL_DEF_TX_BUFFER_LAST_ENTRY, (u8 *)&last_entry);
-	if (last_entry == 0) {
-		RTW_INFO("[Error]: %s, last entry of tx buffer is 0!!\n", __func__);
-		return _FALSE;
+#ifdef CONFIG_FW_MULTI_PORT_SUPPORT
+	else {
+		rtw_hal_set_default_port_id_cmd(adapter, 0);
 	}
+#endif /* CONFIG_FW_MULTI_PORT_SUPPORT */
 
-	/* use the last 2 pages for wow pattern e.g. 0xfe and 0xff */
-	tx_page_start = last_entry - 1;
-	cam_start_offset = tx_page_start * page_sz / 8;
+#if defined(CONFIG_SDIO_HCI) || defined(CONFIG_GSPI_HCI)
+	/* Enable CPWM2 only. */
+	res = rtw_hal_enable_cpwm2(adapter);
+	if (res == _FAIL)
+		RTW_PRINT("[WARNING] enable cpwm2 fail\n");
+#endif
+#ifdef CONFIG_GPIO_WAKEUP
+#ifdef CONFIG_RTW_ONE_PIN_GPIO
+	rtw_hal_switch_gpio_wl_ctrl(adapter, pwrctl->wowlan_gpio_index, _TRUE);
+	rtw_hal_set_input_gpio(adapter, pwrctl->wowlan_gpio_index);
+#else
+#ifdef CONFIG_WAKEUP_GPIO_INPUT_MODE
+	if (pwrctl->is_high_active == 0)
+		rtw_hal_set_input_gpio(adapter, pwrctl->wowlan_gpio_index);
+	else
+		rtw_hal_set_output_gpio(adapter, pwrctl->wowlan_gpio_index,
+			GPIO_OUTPUT_LOW);
+#else
+	val8 = (pwrctl->is_high_active == 0) ? 1 : 0;
+	rtw_hal_set_output_gpio(adapter, pwrctl->wowlan_gpio_index, val8);
+	rtw_hal_switch_gpio_wl_ctrl(adapter, pwrctl->wowlan_gpio_index, _TRUE);
+	RTW_INFO("%s: set GPIO_%d to OUTPUT %s state in wow suspend and %s_ACTIVE.\n",
+		 __func__, pwrctl->wowlan_gpio_index,
+		 pwrctl->wowlan_gpio_output_state ? "HIGH" : "LOW",
+		 pwrctl->is_high_active ? "HIGI" : "LOW");
+#endif /* CONFIG_WAKEUP_GPIO_INPUT_MODE */
+#endif /* CONFIG_RTW_ONE_PIN_GPIO */
+#endif /* CONFIG_GPIO_WAKEUP */
+	/* Set WOWLAN H2C command. */
+	RTW_PRINT("Set WOWLan cmd\n");
+	rtw_hal_set_fw_wow_related_cmd(adapter, 1);
 
-	/* Write the PATTERN location to BIT_TXBUF_WKCAM_OFFSET */
-	rtw_write8(adapter, REG_TXBUF_WKCAM_OFFSET, cam_start_offset & 0xFF);
-	rtw_write8(adapter, REG_TXBUF_WKCAM_OFFSET + 1, (cam_start_offset >> 8) & 0xFF);
-	/* Enable TX packet buffer access */
-	rtw_write8(adapter, REG_PKT_BUFF_ACCESS_CTRL, TXPKT_BUF_SELECT);
+	res = rtw_hal_check_wow_ctrl(adapter, _TRUE);
 
-	/* Write the WKFM CAM */
-	for (i = 0; i < WKFMCAM_ADDR_NUM / 2; i++) {
-		/*
-		 * Set Tx packet buffer offset.
-		 * TxBufer pointer increases 1, we can access 8 bytes in Rx packet buffer.
-		 * CAM start offset (unit: 1 byte) =  Index*WKFMCAM_SIZE
-		 * TxBufer pointer addr = (CAM start offset + per entry offset of a WKFMCAM)/8
-		 * * Index: The index of the wake up frame mask
-		 * * WKFMCAM_SIZE: the total size of one WKFM CAM
-		 * * per entry offset of a WKFM CAM: Addr i * 4 bytes
-		 */
-		tx_buf_ptr = cam_start_offset + ((idx * WKFMCAM_SIZE + i * 8) >> 3);
+	if (res == _FALSE)
+		RTW_INFO("[Error]%s: set wowlan CMD fail!!\n", __func__);
 
-		if (i == 0) {
-			if (context->type == PATTERN_VALID)
-				data_l = WOW_VALID_BIT;
-			else if (context->type == PATTERN_BROADCAST)
-				data_l = WOW_VALID_BIT | WOW_BC_BIT;
-			else if (context->type == PATTERN_MULTICAST)
-				data_l = WOW_VALID_BIT | WOW_MC_BIT;
-			else if (context->type == PATTERN_UNICAST)
-				data_l = WOW_VALID_BIT | WOW_UC_BIT;
+	pwrctl->wowlan_wake_reason =
+		rtw_read8(adapter, REG_WOWLAN_WAKE_REASON);
 
-			if (context->crc != 0)
-				data_l |= context->crc;
+	RTW_PRINT("wowlan_wake_reason: 0x%02x\n",
+		  pwrctl->wowlan_wake_reason);
 
-			rtw_write32(adapter, REG_PKTBUF_DBG_DATA_L, data_l);
-		} else {
-			data_l = context->mask[i * 2 - 2];
-			data_h = context->mask[i * 2 - 1];
-			rtw_write32(adapter, REG_PKTBUF_DBG_DATA_L, data_l);
-			rtw_write32(adapter, REG_PKTBUF_DBG_DATA_H, data_h);
-		}
+#if defined(RTW_HALMAC) && defined(CONFIG_PNO_SUPPORT)
+	if(pwrctl->wowlan_pno_enable)
+		rtw_halmac_pno_scanoffload(adapter->dvobj, 1);
+#endif
 
-		rtw_write32(adapter, REG_PKTBUF_DBG_CTRL, (tx_buf_ptr & 0x1FFF) | BIT23 | (0xff <<24));
-		count = 0;
-		do {
-			tmp = rtw_read32(adapter, REG_PKTBUF_DBG_CTRL) & BIT23;
-			rtw_udelay_os(2);
-			count++;
-		} while (tmp && count < 100);
+#ifdef CONFIG_GTK_OL_DBG
+	dump_sec_cam(RTW_DBGDUMP, adapter);
+	dump_sec_cam_cache(RTW_DBGDUMP, adapter);
+#endif
 
-		if (count >= 100) {
-			res = _FALSE;
-			RTW_INFO("%s write failed\n", __func__);
-		} else {
-			res = _TRUE;
-			RTW_INFO("%s write OK\n", __func__);
-		}
+#ifdef CONFIG_LPS_PG
+	if (pwrctl->lps_level == LPS_PG) {
+		lps_pg_hdl_id = LPS_PG_INFO_CFG;
+		rtw_hal_set_hwreg(adapter, HW_VAR_LPS_PG_HANDLE, (u8 *)(&lps_pg_hdl_id));
 	}
+#endif
 
-	/* Disable TX packet buffer access */
-	rtw_write8(adapter, REG_PKT_BUFF_ACCESS_CTRL, DISABLE_TRXPKT_BUF_ACCESS);
-	return res;
-}
-#endif /* CONFIG_WOW_PATTERN_IN_TXFIFO */
-
-void rtw_clean_pattern(_adapter *adapter)
-{
-	struct pwrctrl_priv *pwrctl = adapter_to_pwrctl(adapter);
-	struct rtl_wow_pattern zero_pattern;
-	int i = 0;
-
-	_rtw_memset(&zero_pattern, 0, sizeof(struct rtl_wow_pattern));
+#ifdef CONFIG_USB_HCI
+	/* free adapter's resource */
+	rtw_mi_intf_stop(adapter);
 
-	zero_pattern.type = PATTERN_INVALID;
+#endif
+#if defined(CONFIG_USB_HCI) || defined(CONFIG_PCI_HCI)
+	/* Invoid SE0 reset signal during suspending*/
+	rtw_write8(adapter, REG_RSV_CTRL, 0x20);
+	if (IS_8188F(pHalData->version_id) == FALSE
+		&& IS_8188GTV(pHalData->version_id) == FALSE)
+		rtw_write8(adapter, REG_RSV_CTRL, 0x60);
+#endif
 
-	for (i = 0; i < MAX_WKFM_CAM_NUM; i++)
-		rtw_write_to_frame_mask(adapter, i, &zero_pattern);
+	rtw_hal_gate_bb(adapter, _FALSE);
+}
 
-	rtw_write8(adapter, REG_WKFMCAM_NUM, 0);
+#define DBG_WAKEUP_REASON
+#ifdef DBG_WAKEUP_REASON
+void _dbg_wake_up_reason_string(_adapter *adapter, const char *srt_res)
+{
+	RTW_INFO(ADPT_FMT "- wake up reason - %s\n", ADPT_ARG(adapter), srt_res);
 }
-#if 0
-static int rtw_hal_set_pattern(_adapter *adapter, u8 *pattern,
-			       u8 len, u8 *mask, u8 idx)
+void _dbg_rtw_wake_up_reason(_adapter *adapter, u8 reason)
+{
+	if (RX_PAIRWISEKEY == reason)
+		_dbg_wake_up_reason_string(adapter, "Rx pairwise key");
+	else if (RX_GTK == reason)
+		_dbg_wake_up_reason_string(adapter, "Rx GTK");
+	else if (RX_FOURWAY_HANDSHAKE == reason)
+		_dbg_wake_up_reason_string(adapter, "Rx four way handshake");
+	else if (RX_DISASSOC == reason)
+		_dbg_wake_up_reason_string(adapter, "Rx disassoc");
+	else if (RX_DEAUTH == reason)
+		_dbg_wake_up_reason_string(adapter, "Rx deauth");
+	else if (RX_ARP_REQUEST == reason)
+		_dbg_wake_up_reason_string(adapter, "Rx ARP request");
+	else if (FW_DECISION_DISCONNECT == reason)
+		_dbg_wake_up_reason_string(adapter, "FW detect disconnect");
+	else if (RX_MAGIC_PKT == reason)
+		_dbg_wake_up_reason_string(adapter, "Rx magic packet");
+	else if (RX_UNICAST_PKT == reason)
+		_dbg_wake_up_reason_string(adapter, "Rx unicast packet");
+	else if (RX_PATTERN_PKT == reason)
+		_dbg_wake_up_reason_string(adapter, "Rx pattern packet");
+	else if (RX_PNO == reason)
+		_dbg_wake_up_reason_string(adapter, "RX PNO");
+	else if (RTD3_SSID_MATCH == reason)
+		_dbg_wake_up_reason_string(adapter, "RTD3 SSID match");
+	else if (RX_REALWOW_V2_WAKEUP_PKT == reason)
+		_dbg_wake_up_reason_string(adapter, "Rx real WOW V2 wakeup packet");
+	else if (RX_REALWOW_V2_ACK_LOST == reason)
+		_dbg_wake_up_reason_string(adapter, "Rx real WOW V2 ack lost");
+	else if (ENABLE_FAIL_DMA_IDLE == reason)
+		_dbg_wake_up_reason_string(adapter, "enable fail DMA idle");
+	else if (ENABLE_FAIL_DMA_PAUSE == reason)
+		_dbg_wake_up_reason_string(adapter, "enable fail DMA pause");
+	else if (AP_OFFLOAD_WAKEUP == reason)
+		_dbg_wake_up_reason_string(adapter, "AP offload wakeup");
+	else if (CLK_32K_UNLOCK == reason)
+		_dbg_wake_up_reason_string(adapter, "clk 32k unlock");
+	else if (RTIME_FAIL_DMA_IDLE == reason)
+		_dbg_wake_up_reason_string(adapter, "RTIME fail DMA idle");
+	else if (CLK_32K_LOCK == reason)
+		_dbg_wake_up_reason_string(adapter, "clk 32k lock");
+	#ifdef CONFIG_WOW_KEEP_ALIVE_PATTERN
+	else if (WOW_KEEPALIVE_ACK_TIMEOUT == reason)
+		_dbg_wake_up_reason_string(adapter, "rx keep alive ack timeout");
+	else if (WOW_KEEPALIVE_WAKE == reason)
+		_dbg_wake_up_reason_string(adapter, "rx keep alive wake pattern");
+	#endif /*CONFIG_WOW_KEEP_ALIVE_PATTERN*/
+	else
+		_dbg_wake_up_reason_string(adapter, "unknown reasoen");
+}
+#endif
+
+static void rtw_hal_wow_disable(_adapter *adapter)
 {
+	int i;
+	struct recv_reorder_ctrl *preorder_ctrl;
 	struct pwrctrl_priv *pwrctl = adapter_to_pwrctl(adapter);
-	struct mlme_ext_priv *pmlmeext = NULL;
-	struct mlme_ext_info *pmlmeinfo = NULL;
-	struct rtl_wow_pattern wow_pattern;
-	u8 mask_hw[MAX_WKFM_SIZE] = {0};
-	u8 content[MAX_WKFM_PATTERN_SIZE] = {0};
-	u8 broadcast_addr[6] = {0xff, 0xff, 0xff, 0xff, 0xff, 0xff};
-	u8 multicast_addr1[2] = {0x33, 0x33};
-	u8 multicast_addr2[3] = {0x01, 0x00, 0x5e};
-	u8 res = _FALSE, index = 0, mask_len = 0;
-	u8 mac_addr[ETH_ALEN] = {0};
-	u16 count = 0;
-	int i, j;
+	struct security_priv *psecuritypriv = &adapter->securitypriv;
+	struct mlme_priv *pmlmepriv = &adapter->mlmepriv;
+	struct sta_info *psta = NULL;
+	struct registry_priv  *registry_par = &adapter->registrypriv;
+	int res;
+	u16 media_status_rpt;
 
-	if (pwrctl->wowlan_pattern_idx > MAX_WKFM_CAM_NUM) {
-		RTW_INFO("%s pattern_idx is more than MAX_FMC_NUM: %d\n",
-			 __func__, MAX_WKFM_CAM_NUM);
-		return _FALSE;
+	RTW_PRINT("%s, WOWLAN_DISABLE\n", __func__);
+
+	if(registry_par->suspend_type == FW_IPS_DISABLE_BBRF && !check_fwstate(pmlmepriv, WIFI_ASOC_STATE)) {
+		RTW_INFO("FW_IPS_DISABLE_BBRF resume\n");
+		return;
 	}
 
-	pmlmeext = &adapter->mlmeextpriv;
-	pmlmeinfo = &pmlmeext->mlmext_info;
-	_rtw_memcpy(mac_addr, adapter_mac_addr(adapter), ETH_ALEN);
-	_rtw_memset(&wow_pattern, 0, sizeof(struct rtl_wow_pattern));
+	if (!pwrctl->wowlan_pno_enable) {
+		psta = rtw_get_stainfo(&adapter->stapriv, get_bssid(pmlmepriv));
+		if (psta != NULL)
+			rtw_sta_media_status_rpt(adapter, psta, 0);
+		else
+			RTW_INFO("%s: psta is null\n", __func__);
+	}
+#if defined(RTW_HALMAC) && defined(CONFIG_PNO_SUPPORT)
+	else {
+		rtw_halmac_pno_scanoffload(adapter->dvobj, 0);
+	}
+#endif
 
-	mask_len = DIV_ROUND_UP(len, 8);
+	if (0) {
+		RTW_INFO("0x630:0x%02x\n", rtw_read8(adapter, 0x630));
+		RTW_INFO("0x631:0x%02x\n", rtw_read8(adapter, 0x631));
+		RTW_INFO("0x634:0x%02x\n", rtw_read8(adapter, 0x634));
+		RTW_INFO("0x1c7:0x%02x\n", rtw_read8(adapter, 0x1c7));
+	}
 
-	/* 1. setup A1 table */
-	if (memcmp(pattern, broadcast_addr, ETH_ALEN) == 0)
-		wow_pattern.type = PATTERN_BROADCAST;
-	else if (memcmp(pattern, multicast_addr1, 2) == 0)
-		wow_pattern.type = PATTERN_MULTICAST;
-	else if (memcmp(pattern, multicast_addr2, 3) == 0)
-		wow_pattern.type = PATTERN_MULTICAST;
-	else if (memcmp(pattern, mac_addr, ETH_ALEN) == 0)
-		wow_pattern.type = PATTERN_UNICAST;
-	else
-		wow_pattern.type = PATTERN_INVALID;
+	pwrctl->wowlan_wake_reason = rtw_read8(adapter, REG_WOWLAN_WAKE_REASON);
 
-	/* translate mask from os to mask for hw */
+	RTW_PRINT("wakeup_reason: 0x%02x\n",
+		  pwrctl->wowlan_wake_reason);
+	#ifdef DBG_WAKEUP_REASON
+	_dbg_rtw_wake_up_reason(adapter, pwrctl->wowlan_wake_reason);
+	#endif
 
-/******************************************************************************
- * pattern from OS uses 'ethenet frame', like this:
+	rtw_hal_set_fw_wow_related_cmd(adapter, 0);
 
-	|    6   |    6   |   2  |     20    |  Variable  |  4  |
-	|--------+--------+------+-----------+------------+-----|
-	|    802.3 Mac Header    | IP Header | TCP Packet | FCS |
-	|   DA   |   SA   | Type |
+	res = rtw_hal_check_wow_ctrl(adapter, _FALSE);
 
- * BUT, packet catched by our HW is in '802.11 frame', begin from LLC,
+	#if defined(CONFIG_RTL8188E)
+	if (IS_HARDWARE_TYPE_8188E(adapter))
+		rtw_hal_enable_tx_report(adapter);
+	#endif
 
-	|     24 or 30      |    6   |   2  |     20    |  Variable  |  4  |
-	|-------------------+--------+------+-----------+------------+-----|
-	| 802.11 MAC Header |       LLC     | IP Header | TCP Packet | FCS |
-			    | Others | Tpye |
+	if ((pwrctl->wowlan_wake_reason != RX_DISASSOC) &&
+	    (pwrctl->wowlan_wake_reason != RX_DEAUTH) &&
+	    (pwrctl->wowlan_wake_reason != FW_DECISION_DISCONNECT) &&
+	    (pwrctl->wowlan_wake_reason != NO_WAKE_RX_PAIRWISEKEY) &&
+	    (pwrctl->wowlan_wake_reason != NO_WAKE_RX_GTK) &&
+	    (pwrctl->wowlan_wake_reason != NO_WAKE_RX_DISASSOC) &&
+	    (pwrctl->wowlan_wake_reason != NO_WAKE_RX_DEAUTH) &&
+	    (pwrctl->wowlan_wake_reason != NO_WAKE_RX_EAPREQ_IDENTIFY)) {
+		rtw_hal_get_aoac_rpt(adapter);
+		rtw_hal_update_sw_security_info(adapter);
+	}
 
- * Therefore, we need translate mask_from_OS to mask_to_hw.
- * We should left-shift mask by 6 bits, then set the new bit[0~5] = 0,
- * because new mask[0~5] means 'SA', but our HW packet begins from LLC,
- * bit[0~5] corresponds to first 6 Bytes in LLC, they just don't match.
- ******************************************************************************/
-	/* Shift 6 bits */
-	for (i = 0; i < mask_len - 1; i++) {
-		mask_hw[i] = mask[i] >> 6;
-		mask_hw[i] |= (mask[i + 1] & 0x3F) << 2;
+	if (res == _FALSE) {
+		RTW_INFO("[Error]%s: disable WOW cmd fail\n!!", __func__);
+		rtw_hal_force_enable_rxdma(adapter);
 	}
 
-	mask_hw[i] = (mask[i] >> 6) & 0x3F;
-	/* Set bit 0-5 to zero */
-	mask_hw[0] &= 0xC0;
+	rtw_hal_gate_bb(adapter, _TRUE);
 
-	for (i = 0; i < (MAX_WKFM_SIZE / 4); i++) {
-		wow_pattern.mask[i] = mask_hw[i * 4];
-		wow_pattern.mask[i] |= (mask_hw[i * 4 + 1] << 8);
-		wow_pattern.mask[i] |= (mask_hw[i * 4 + 2] << 16);
-		wow_pattern.mask[i] |= (mask_hw[i * 4 + 3] << 24);
-	}
+	res = rtw_hal_pause_rx_dma(adapter);
+	if (res == _FAIL)
+		RTW_PRINT("[WARNING] pause RX DMA fail\n");
 
-	/* To get the wake up pattern from the mask.
-	 * We do not count first 12 bits which means
-	 * DA[6] and SA[6] in the pattern to match HW design. */
-	count = 0;
-	for (i = 12; i < len; i++) {
-		if ((mask[i / 8] >> (i % 8)) & 0x01) {
-			content[count] = pattern[i];
-			count++;
-		}
-	}
+	/* clean HW pattern match */
+	rtw_hal_dl_pattern(adapter, 0);
 
-	wow_pattern.crc = rtw_calc_crc(content, count);
+	#ifndef CONFIG_WOW_PATTERN_HW_CAM
+	/* config RXFF boundary to original */
+	#ifndef CONFIG_WOW_PATTERN_IN_TXFIFO
+	rtw_hal_set_wow_rxff_boundary(adapter, _FALSE);
+	#endif /*CONFIG_WOW_PATTERN_IN_TXFIFO*/
+	#endif
+	rtw_hal_release_rx_dma(adapter);
 
-	if (wow_pattern.crc != 0) {
-		if (wow_pattern.type == PATTERN_INVALID)
-			wow_pattern.type = PATTERN_VALID;
-	}
+	rtw_hal_fw_dl(adapter, _FALSE);
 
-	index = idx;
+#ifdef CONFIG_GPIO_WAKEUP
 
-	if (!pwrctl->bInSuspend)
-		index += 2;
+#ifdef CONFIG_RTW_ONE_PIN_GPIO
+	rtw_hal_set_input_gpio(adapter, pwrctl->wowlan_gpio_index);
+#else
+#ifdef CONFIG_WAKEUP_GPIO_INPUT_MODE
+	if (pwrctl->is_high_active == 0)
+		rtw_hal_set_input_gpio(adapter, pwrctl->wowlan_gpio_index);
+	else
+		rtw_hal_set_output_gpio(adapter, pwrctl->wowlan_gpio_index,
+			GPIO_OUTPUT_LOW);
+#else
+	rtw_hal_set_output_gpio(adapter, pwrctl->wowlan_gpio_index
+		, pwrctl->wowlan_gpio_output_state);
+	RTW_INFO("%s: set GPIO_%d to OUTPUT %s state in wow resume and %s_ACTIVE.\n",
+		 __func__, pwrctl->wowlan_gpio_index,
+		 pwrctl->wowlan_gpio_output_state ? "HIGH" : "LOW",
+		 pwrctl->is_high_active ? "HIGI" : "LOW");
+#endif /* CONFIG_WAKEUP_GPIO_INPUT_MODE */
+#endif /* CONFIG_RTW_ONE_PIN_GPIO */
+#endif /* CONFIG_GPIO_WAKEUP */
+	if ((pwrctl->wowlan_wake_reason != FW_DECISION_DISCONNECT) &&
+	    (pwrctl->wowlan_wake_reason != RX_PAIRWISEKEY) &&
+	    (pwrctl->wowlan_wake_reason != RX_DISASSOC) &&
+	    (pwrctl->wowlan_wake_reason != RX_DEAUTH)) {
 
-	/* write pattern */
-	res = rtw_write_to_frame_mask(adapter, index, &wow_pattern);
+		media_status_rpt = RT_MEDIA_CONNECT;
+		rtw_hal_set_hwreg(adapter, HW_VAR_H2C_FW_JOINBSSRPT,
+				  (u8 *)&media_status_rpt);
 
-	if (res == _FALSE)
-		RTW_INFO("%s: ERROR!! idx: %d write_to_frame_mask_cam fail\n",
-			 __func__, idx);
+		if (psta != NULL) {
+			#ifdef CONFIG_FW_MULTI_PORT_SUPPORT
+			adapter_to_dvobj(adapter)->dft.port_id = 0xFF;
+			adapter_to_dvobj(adapter)->dft.mac_id = 0xFF;
+			rtw_hal_set_default_port_id_cmd(adapter, psta->cmn.mac_id);
+			#endif
+			rtw_sta_media_status_rpt(adapter, psta, 1);
+		}
+	}
 
-	return res;
-}
-#endif
+	if (psta != NULL) {
+		RTW_PRINT("rtw_set_bit RTW_RECV_REORDER_WOW\n");
+		for (i = 0; i < TID_NUM; i++) {
+			preorder_ctrl = &psta->recvreorder_ctrl[i];
+			rtw_set_bit(RTW_RECV_REORDER_WOW,
+				    &preorder_ctrl->rec_abba_rsp_ack);
+		}
+	}
 
-void rtw_fill_pattern(_adapter *adapter)
+	rtw_hal_gate_bb(adapter, _FALSE);
+}
+#if defined(CONFIG_WOW_PATTERN_IN_TXFIFO)
+static void rtw_hal_construct_pattern_info(
+	PADAPTER	padapter,
+	u8		*pframe,
+	u32		*pLength
+)
 {
+
+	u32 pattern_info_len = 0;
 	int i = 0, total = 0, index;
-	struct pwrctrl_priv *pwrpriv = adapter_to_pwrctl(adapter);
+	struct pwrctrl_priv *pwrpriv = adapter_to_pwrctl(padapter);
 	struct rtl_wow_pattern wow_pattern;
+	u32 page_sz = 0;
 
 	total = pwrpriv->wowlan_pattern_idx;
 
 	if (total > MAX_WKFM_CAM_NUM)
 		total = MAX_WKFM_CAM_NUM;
 
+	/* Generate default pattern */
+	rtw_set_default_pattern(padapter);
+
+	/* Convert pattern to WKFM_CAM pattern */
 	for (i = 0 ; i < total ; i++) {
-		if (_SUCCESS == rtw_hal_wow_pattern_generate(adapter, i, &wow_pattern)) {
+		if (_SUCCESS == rtw_hal_wow_pattern_generate(padapter, i, &wow_pattern)) {
 
 			index = i;
 			if (!pwrpriv->bInSuspend)
 				index += 2;
+			#ifdef CONFIG_WOW_PATTERN_IN_TXFIFO_DBG
 			rtw_dump_wow_pattern(RTW_DBGDUMP, &wow_pattern, i);
-			if (rtw_write_to_frame_mask(adapter, index, &wow_pattern) == _FALSE)
-				RTW_INFO("%s: ERROR!! idx: %d write_to_frame_mask_cam fail\n", __func__, i);
-		}
-
-	}
-	rtw_write8(adapter, REG_WKFMCAM_NUM, total);
-
-}
-
-#else /*CONFIG_WOW_PATTERN_HW_CAM*/
-
-#define WOW_CAM_ACCESS_TIMEOUT_MS	200
-static u32 _rtw_wow_pattern_read_cam(_adapter *adapter, u8 addr)
-{
-	struct pwrctrl_priv *pwrpriv = adapter_to_pwrctl(adapter);
-	_mutex *mutex = &pwrpriv->wowlan_pattern_cam_mutex;
-
-	u32 rdata = 0;
-	u32 cnt = 0;
-	systime start = 0;
-	u8 timeout = 0;
-	u8 rst = _FALSE;
-
-	_enter_critical_mutex(mutex, NULL);
-
-	rtw_write32(adapter, REG_WKFMCAM_CMD, BIT_WKFCAM_POLLING_V1 | BIT_WKFCAM_ADDR_V2(addr));
-
-	start = rtw_get_current_time();
-	while (1) {
-		if (rtw_is_surprise_removed(adapter))
-			break;
+			#endif
 
-		cnt++;
-		if (0 == (rtw_read32(adapter, REG_WKFMCAM_CMD) & BIT_WKFCAM_POLLING_V1)) {
-			rst = _SUCCESS;
-			break;
-		}
-		if (rtw_get_passing_time_ms(start) > WOW_CAM_ACCESS_TIMEOUT_MS) {
-			timeout = 1;
-			break;
+			if (rtw_write_to_frame_mask_buf(padapter, index, &wow_pattern,
+				pframe, &pattern_info_len) == _FALSE)
+				RTW_INFO("%s: ERROR!! idx: %d write_to_frame_mask_cam fail\n", __func__, i);
 		}
 	}
+	*pLength = pattern_info_len;
 
-	rdata = rtw_read32(adapter, REG_WKFMCAM_RWD);
-
-	_exit_critical_mutex(mutex, NULL);
-
-	/*RTW_INFO("%s ==> addr:0x%02x , rdata:0x%08x\n", __func__, addr, rdata);*/
-
-	if (timeout)
-		RTW_ERR(FUNC_ADPT_FMT" failed due to polling timeout\n", FUNC_ADPT_ARG(adapter));
 
-	return rdata;
 }
-void rtw_wow_pattern_read_cam_ent(_adapter *adapter, u8 id, struct  rtl_wow_pattern *context)
+#endif /* CONFIG_WOW_PATTERN_IN_TXFIFO */
+void rtw_hal_set_wow_fw_rsvd_page(_adapter *adapter, u8 *pframe, u16 index,
+		  u8 tx_desc, u32 page_size, u8 *page_num, u32 *total_pkt_len,
+				  RSVDPAGE_LOC *rsvd_page_loc)
 {
+	struct security_priv *psecuritypriv = &adapter->securitypriv;
+	struct mlme_priv *pmlmepriv = &adapter->mlmepriv;
+	struct pwrctrl_priv *pwrctl = adapter_to_pwrctl(adapter);
+	struct mlme_ext_priv	*pmlmeext;
+	struct mlme_ext_info	*pmlmeinfo;
+	u32	ARPLength = 0, GTKLength = 0, PNOLength = 0, ScanInfoLength = 0;
+	u32 ProbeReqLength = 0, ns_len = 0, rc_len = 0;
+	u8 CurtPktPageNum = 0;
+#ifdef CONFIG_WOW_KEEP_ALIVE_PATTERN
+	u32 keep_alive_len=0;
 	int i;
-	u32 rdata;
-
-	_rtw_memset(context, 0, sizeof(struct  rtl_wow_pattern));
-
-	for (i = 4; i >= 0; i--) {
-		rdata = _rtw_wow_pattern_read_cam(adapter, (id << 3) | i);
-
-		switch (i) {
-		case 4:
-			if (rdata & WOW_BC_BIT)
-				context->type = PATTERN_BROADCAST;
-			else if (rdata & WOW_MC_BIT)
-				context->type = PATTERN_MULTICAST;
-			else if (rdata & WOW_UC_BIT)
-				context->type = PATTERN_UNICAST;
-			else
-				context->type = PATTERN_INVALID;
-
-			context->crc = rdata & 0xFFFF;
-			break;
-		default:
-			_rtw_memcpy(&context->mask[i], (u8 *)(&rdata), 4);
-			break;
-		}
-	}
-}
+#endif /*CONFIG_WOW_KEEP_ALIVE_PATTERN */
+#ifdef CONFIG_WAR_OFFLOAD
+	u16 tmp_idx = 0;
+	u32	buf_len = 0;
+#endif
 
-static void _rtw_wow_pattern_write_cam(_adapter *adapter, u8 addr, u32 wdata)
-{
-	struct pwrctrl_priv *pwrpriv = adapter_to_pwrctl(adapter);
-	_mutex *mutex = &pwrpriv->wowlan_pattern_cam_mutex;
-	u32 cnt = 0;
-	systime start = 0, end = 0;
-	u8 timeout = 0;
+#ifdef CONFIG_GTK_OL
+	struct sta_priv *pstapriv = &adapter->stapriv;
+	struct sta_info *psta;
+	struct security_priv *psecpriv = &adapter->securitypriv;
+	u8 kek[RTW_KEK_LEN];
+	u8 kck[RTW_KCK_LEN];
+#endif /* CONFIG_GTK_OL */
+#ifdef CONFIG_PNO_SUPPORT
+	int pno_index;
+	u8 ssid_num;
+#endif /* CONFIG_PNO_SUPPORT */
+#ifdef CONFIG_WOW_PATTERN_IN_TXFIFO
+	u32 PatternLen = 0;
+	u32 cam_start_offset = 0;
+	u32 reg_cam_start_offset_val = 0;
+#endif /* CONFIG_WOW_PATTERN_IN_TXFIFO */
 
-	/*RTW_INFO("%s ==> addr:0x%02x , wdata:0x%08x\n", __func__, addr, wdata);*/
-	_enter_critical_mutex(mutex, NULL);
+	pmlmeext = &adapter->mlmeextpriv;
+	pmlmeinfo = &pmlmeext->mlmext_info;
 
-	rtw_write32(adapter, REG_WKFMCAM_RWD, wdata);
-	rtw_write32(adapter, REG_WKFMCAM_CMD, BIT_WKFCAM_POLLING_V1 | BIT_WKFCAM_WE | BIT_WKFCAM_ADDR_V2(addr));
+	if (pwrctl->wowlan_pno_enable == _FALSE) {
+		/* ARP RSP * 1 page */
 
-	start = rtw_get_current_time();
-	while (1) {
-		if (rtw_is_surprise_removed(adapter))
-			break;
+		rsvd_page_loc->LocArpRsp = *page_num;
 
-		cnt++;
-		if (0 == (rtw_read32(adapter, REG_WKFMCAM_CMD) & BIT_WKFCAM_POLLING_V1))
-			break;
+		RTW_INFO("LocArpRsp: %d\n", rsvd_page_loc->LocArpRsp);
 
-		if (rtw_get_passing_time_ms(start) > WOW_CAM_ACCESS_TIMEOUT_MS) {
-			timeout = 1;
-			break;
+#ifdef CONFIG_WAR_OFFLOAD
+		if ((0 != pwrctl->wowlan_war_offload_ipv4.ip_addr[0]) &&
+			(_FALSE == _rtw_memcmp(&pwrctl->wowlan_war_offload_ipv4.ip_addr[0], pmlmeinfo->ip_addr, 4))) {
+			_rtw_memcpy(pmlmeinfo->ip_addr, &pwrctl->wowlan_war_offload_ipv4.ip_addr[0], 4);
+			RTW_INFO("Update IP(%d.%d.%d.%d) to arp rsvd page\n",
+			pmlmeinfo->ip_addr[0], pmlmeinfo->ip_addr[1],
+			pmlmeinfo->ip_addr[2], pmlmeinfo->ip_addr[3]);
 		}
-	}
-	end = rtw_get_current_time();
-
-	_exit_critical_mutex(mutex, NULL);
+#endif /* CONFIG_WAR_OFFLOAD */
 
-	if (timeout) {
-		RTW_ERR(FUNC_ADPT_FMT" addr:0x%02x, wdata:0x%08x, to:%u, polling:%u, %d ms\n"
-			, FUNC_ADPT_ARG(adapter), addr, wdata, timeout, cnt, rtw_get_time_interval_ms(start, end));
-	}
-}
 
-void rtw_wow_pattern_write_cam_ent(_adapter *adapter, u8 id, struct  rtl_wow_pattern *context)
-{
-	int j;
-	u8 addr;
-	u32 wdata = 0;
+		rtw_hal_construct_ARPRsp(adapter, &pframe[index],
+					 &ARPLength, pmlmeinfo->ip_addr);
 
-	for (j = 4; j >= 0; j--) {
-		switch (j) {
-		case 4:
-			wdata = context->crc;
+		rtw_hal_fill_fake_txdesc(adapter,
+					 &pframe[index - tx_desc],
+					 ARPLength, _FALSE, _FALSE, _TRUE);
 
-			if (PATTERN_BROADCAST == context->type)
-				wdata |= WOW_BC_BIT;
-			if (PATTERN_MULTICAST == context->type)
-				wdata |= WOW_MC_BIT;
-			if (PATTERN_UNICAST == context->type)
-				wdata |= WOW_UC_BIT;
-			if (PATTERN_INVALID != context->type)
-				wdata |= WOW_VALID_BIT;
-			break;
-		default:
-			wdata = context->mask[j];
-			break;
-		}
+		CurtPktPageNum = (u8)PageNum(tx_desc + ARPLength, page_size);
 
-		addr = (id << 3) + j;
+		*page_num += CurtPktPageNum;
 
-		_rtw_wow_pattern_write_cam(adapter, addr, wdata);
-	}
-}
+		index += (CurtPktPageNum * page_size);
+		RSVD_PAGE_CFG("WOW-ARPRsp", CurtPktPageNum, *page_num, 0);
+#ifdef CONFIG_WOW_KEEP_ALIVE_PATTERN
+		/* Keep Alive * ? page*/
+		if(pwrctl->keep_alive_pattern_len){
+			rsvd_page_loc->LocKeepAlive = *page_num;
+			pwrctl->keep_alive_pattern_loc = rsvd_page_loc->LocKeepAlive;
+			RTW_INFO("pwrctl->keep_alive_pattern_loc: %d\n", pwrctl->keep_alive_pattern_loc);
+			rtw_hal_construct_keepalive(adapter,&pframe[index],&keep_alive_len);
+			rtw_hal_fill_fake_txdesc(adapter,
+					 &pframe[index - tx_desc],
+					 keep_alive_len, _FALSE, _FALSE, _TRUE);
+			CurtPktPageNum = (u8)PageNum(tx_desc + keep_alive_len, page_size);
+			*page_num += CurtPktPageNum;
+			index += (CurtPktPageNum * page_size);
+			RSVD_PAGE_CFG("WOW-KeepAlive:", CurtPktPageNum, *page_num, 0);
+		}
+#endif /* CONFIG_WOW_KEEP_ALIVE_PATTERN*/
 
-static u8 _rtw_wow_pattern_clean_cam(_adapter *adapter)
-{
-	struct pwrctrl_priv *pwrpriv = adapter_to_pwrctl(adapter);
-	_mutex *mutex = &pwrpriv->wowlan_pattern_cam_mutex;
-	u32 cnt = 0;
-	systime start = 0;
-	u8 timeout = 0;
-	u8 rst = _FAIL;
+#ifdef CONFIG_IPV6
+		/* 2 NS offload and NDP Info*/
+		if (pwrctl->wowlan_ns_offload_en == _TRUE) {
+			rsvd_page_loc->LocNbrAdv = *page_num;
+			RTW_INFO("LocNbrAdv: %d\n", rsvd_page_loc->LocNbrAdv);
+			rtw_hal_construct_na_message(adapter,
+						     &pframe[index], &ns_len);
+			rtw_hal_fill_fake_txdesc(adapter,
+						 &pframe[index - tx_desc],
+						 ns_len, _FALSE,
+						 _FALSE, _TRUE);
+			CurtPktPageNum = (u8)PageNum(tx_desc + ns_len,
+						      page_size);
+			*page_num += CurtPktPageNum;
+			index += (CurtPktPageNum * page_size);
+			RSVD_PAGE_CFG("WOW-NbrAdv", CurtPktPageNum, *page_num, 0);
 
-	_enter_critical_mutex(mutex, NULL);
-	rtw_write32(adapter, REG_WKFMCAM_CMD, BIT_WKFCAM_POLLING_V1 | BIT_WKFCAM_CLR_V1);
+			rsvd_page_loc->LocNDPInfo = *page_num;
+			RTW_INFO("LocNDPInfo: %d\n",
+				 rsvd_page_loc->LocNDPInfo);
 
-	start = rtw_get_current_time();
-	while (1) {
-		if (rtw_is_surprise_removed(adapter))
-			break;
+			rtw_hal_construct_ndp_info(adapter,
+						   &pframe[index - tx_desc],
+						   &ns_len);
+			CurtPktPageNum =
+				(u8)PageNum(tx_desc + ns_len, page_size);
+			*page_num += CurtPktPageNum;
+			index += (CurtPktPageNum * page_size);
+			RSVD_PAGE_CFG("WOW-NDPInfo", CurtPktPageNum, *page_num, 0);
 
-		cnt++;
-		if (0 == (rtw_read32(adapter, REG_WKFMCAM_CMD) & BIT_WKFCAM_POLLING_V1)) {
-			rst = _SUCCESS;
-			break;
-		}
-		if (rtw_get_passing_time_ms(start) > WOW_CAM_ACCESS_TIMEOUT_MS) {
-			timeout = 1;
-			break;
 		}
-	}
-	_exit_critical_mutex(mutex, NULL);
+#endif /*CONFIG_IPV6*/
+		/* 3 Remote Control Info. * 1 page */
+		rsvd_page_loc->LocRemoteCtrlInfo = *page_num;
+		RTW_INFO("LocRemoteCtrlInfo: %d\n", rsvd_page_loc->LocRemoteCtrlInfo);
+		rtw_hal_construct_remote_control_info(adapter,
+						      &pframe[index - tx_desc],
+						      &rc_len);
+		CurtPktPageNum = (u8)PageNum(rc_len, page_size);
+		*page_num += CurtPktPageNum;
+		*total_pkt_len = index + rc_len;
+		RSVD_PAGE_CFG("WOW-RCI", CurtPktPageNum, *page_num, *total_pkt_len);
+#ifdef CONFIG_GTK_OL
+		index += (CurtPktPageNum * page_size);
 
-	if (timeout)
-		RTW_ERR(FUNC_ADPT_FMT" falied ,polling timeout\n", FUNC_ADPT_ARG(adapter));
+		/* if the ap staion info. exists, get the kek, kck from staion info. */
+		psta = rtw_get_stainfo(pstapriv, get_bssid(pmlmepriv));
+		if (psta == NULL) {
+			_rtw_memset(kek, 0, RTW_KEK_LEN);
+			_rtw_memset(kck, 0, RTW_KCK_LEN);
+			RTW_INFO("%s, KEK, KCK download rsvd page all zero\n",
+				 __func__);
+		} else {
+			_rtw_memcpy(kek, psta->kek, RTW_KEK_LEN);
+			_rtw_memcpy(kck, psta->kck, RTW_KCK_LEN);
+		}
 
-	return rst;
-}
+		/* 3 KEK, KCK */
+		rsvd_page_loc->LocGTKInfo = *page_num;
+		RTW_INFO("LocGTKInfo: %d\n", rsvd_page_loc->LocGTKInfo);
 
-void rtw_clean_pattern(_adapter *adapter)
-{
-	if (_FAIL == _rtw_wow_pattern_clean_cam(adapter))
-		RTW_ERR("rtw_clean_pattern failed\n");
-}
-void rtw_fill_pattern(_adapter *adapter)
-{
-	int i = 0, total = 0;
-	struct pwrctrl_priv *pwrpriv = adapter_to_pwrctl(adapter);
-	struct rtl_wow_pattern wow_pattern;
+		if (IS_HARDWARE_TYPE_8188E(adapter) || IS_HARDWARE_TYPE_8812(adapter)) {
+			struct security_priv *psecpriv = NULL;
 
-	total = pwrpriv->wowlan_pattern_idx;
+			psecpriv = &adapter->securitypriv;
+			_rtw_memcpy(pframe + index - tx_desc,
+				    &psecpriv->dot11PrivacyAlgrthm, 1);
+			_rtw_memcpy(pframe + index - tx_desc + 1,
+				    &psecpriv->dot118021XGrpPrivacy, 1);
+			_rtw_memcpy(pframe + index - tx_desc + 2,
+				    kck, RTW_KCK_LEN);
+			_rtw_memcpy(pframe + index - tx_desc + 2 + RTW_KCK_LEN,
+				    kek, RTW_KEK_LEN);
+			CurtPktPageNum = (u8)PageNum(tx_desc + 2 + RTW_KCK_LEN + RTW_KEK_LEN, page_size);
+		} else {
 
-	if (total > MAX_WKFM_CAM_NUM)
-		total = MAX_WKFM_CAM_NUM;
+			_rtw_memcpy(pframe + index - tx_desc, kck, RTW_KCK_LEN);
+			_rtw_memcpy(pframe + index - tx_desc + RTW_KCK_LEN,
+				    kek, RTW_KEK_LEN);
+			GTKLength = tx_desc + RTW_KCK_LEN + RTW_KEK_LEN;
 
-	for (i = 0 ; i < total ; i++) {
-		if (_SUCCESS == rtw_hal_wow_pattern_generate(adapter, i, &wow_pattern)) {
-			rtw_dump_wow_pattern(RTW_DBGDUMP, &wow_pattern, i);
-			rtw_wow_pattern_write_cam_ent(adapter, i, &wow_pattern);
+			if (psta != NULL &&
+				psecuritypriv->dot118021XGrpPrivacy == _TKIP_) {
+				_rtw_memcpy(pframe + index - tx_desc + 56,
+					&psta->dot11tkiptxmickey, RTW_TKIP_MIC_LEN);
+				GTKLength += RTW_TKIP_MIC_LEN;
+			}
+			CurtPktPageNum = (u8)PageNum(GTKLength, page_size);
+		}
+#if 0
+		{
+			int i;
+			printk("\ntoFW KCK: ");
+			for (i = 0; i < 16; i++)
+				printk(" %02x ", kck[i]);
+			printk("\ntoFW KEK: ");
+			for (i = 0; i < 16; i++)
+				printk(" %02x ", kek[i]);
+			printk("\n");
 		}
-	}
-}
 
+		RTW_INFO("%s(): HW_VAR_SET_TX_CMD: KEK KCK %p %d\n",
+			 __FUNCTION__, &pframe[index - tx_desc],
+			 (tx_desc + RTW_KCK_LEN + RTW_KEK_LEN));
 #endif
-void rtw_wow_pattern_cam_dump(_adapter *adapter)
-{
 
-#ifndef CONFIG_WOW_PATTERN_HW_CAM
-	int i;
+		*page_num += CurtPktPageNum;
 
-	for (i = 0 ; i < MAX_WKFM_CAM_NUM; i++) {
-		RTW_INFO("=======[%d]=======\n", i);
-		rtw_read_from_frame_mask(adapter, i);
-	}
-#else
-	struct  rtl_wow_pattern context;
-	int i;
+		index += (CurtPktPageNum * page_size);
+		RSVD_PAGE_CFG("WOW-GTKInfo", CurtPktPageNum, *page_num, 0);
 
-	for (i = 0 ; i < MAX_WKFM_CAM_NUM; i++) {
-		rtw_wow_pattern_read_cam_ent(adapter, i, &context);
-		rtw_dump_wow_pattern(RTW_DBGDUMP, &context, i);
-	}
+		/* 3 GTK Response */
+		rsvd_page_loc->LocGTKRsp = *page_num;
+		RTW_INFO("LocGTKRsp: %d\n", rsvd_page_loc->LocGTKRsp);
+		rtw_hal_construct_GTKRsp(adapter, &pframe[index], &GTKLength);
 
-#endif
-}
+		rtw_hal_fill_fake_txdesc(adapter, &pframe[index - tx_desc],
+					 GTKLength, _FALSE, _FALSE, _TRUE);
+#if 0
+		{
+			int gj;
+			printk("123GTK pkt=>\n");
+			for (gj = 0; gj < GTKLength + tx_desc; gj++) {
+				printk(" %02x ", pframe[index - tx_desc + gj]);
+				if ((gj + 1) % 16 == 0)
+					printk("\n");
+			}
+			printk(" <=end\n");
+		}
 
+		RTW_INFO("%s(): HW_VAR_SET_TX_CMD: GTK RSP %p %d\n",
+			 __FUNCTION__, &pframe[index - tx_desc],
+			 (tx_desc + GTKLength));
+#endif
 
-static void rtw_hal_dl_pattern(_adapter *adapter, u8 mode)
-{
-	struct pwrctrl_priv *pwrpriv = adapter_to_pwrctl(adapter);
+		CurtPktPageNum = (u8)PageNum(tx_desc + GTKLength, page_size);
 
-	switch (mode) {
-	case 0:
-		rtw_clean_pattern(adapter);
-		RTW_INFO("%s: total patterns: %d\n", __func__, pwrpriv->wowlan_pattern_idx);
-		break;
-	case 1:
-		rtw_set_default_pattern(adapter);
-		rtw_fill_pattern(adapter);
-		RTW_INFO("%s: pattern total: %d downloaded\n", __func__, pwrpriv->wowlan_pattern_idx);
-		break;
-	case 2:
-		rtw_clean_pattern(adapter);
-		rtw_wow_pattern_sw_reset(adapter);
-		RTW_INFO("%s: clean patterns\n", __func__);
-		break;
-	default:
-		RTW_INFO("%s: unknown mode\n", __func__);
-		break;
-	}
-}
+		*page_num += CurtPktPageNum;
 
-static void rtw_hal_wow_enable(_adapter *adapter)
-{
-	struct registry_priv  *registry_par = &adapter->registrypriv;
-	struct pwrctrl_priv *pwrctl = adapter_to_pwrctl(adapter);
-	struct security_priv *psecuritypriv = &adapter->securitypriv;
-	struct mlme_priv *pmlmepriv = &adapter->mlmepriv;
-	struct sta_info *psta = NULL;
-	PHAL_DATA_TYPE pHalData = GET_HAL_DATA(adapter);
-	int res;
-	u16 media_status_rpt;
-	u8 no_wake = 0, i;
-	struct dvobj_priv *dvobj = adapter_to_dvobj(adapter);
-	_adapter *iface;
-#ifdef CONFIG_GPIO_WAKEUP
-	u8 val8 = 0;
-#endif
+		index += (CurtPktPageNum * page_size);
+		RSVD_PAGE_CFG("WOW-GTKRsp", CurtPktPageNum, *page_num, 0);
 
-#ifdef CONFIG_LPS_PG
-	u8 lps_pg_hdl_id = 0;
-#endif
+		/* below page is empty for GTK extension memory */
+		/* 3(11) GTK EXT MEM */
+		rsvd_page_loc->LocGTKEXTMEM = *page_num;
+		RTW_INFO("LocGTKEXTMEM: %d\n", rsvd_page_loc->LocGTKEXTMEM);
+		CurtPktPageNum = 2;
 
+		if (page_size >= 256)
+			CurtPktPageNum = 1;
 
+		*page_num += CurtPktPageNum;
+		/* extension memory for FW */
+		*total_pkt_len = index + (page_size * CurtPktPageNum);
+		RSVD_PAGE_CFG("WOW-GTKEXTMEM", CurtPktPageNum, *page_num, *total_pkt_len);
+#endif /* CONFIG_GTK_OL */
 
-	if(registry_par->suspend_type == FW_IPS_DISABLE_BBRF &&
-	!check_fwstate(pmlmepriv, WIFI_ASOC_STATE))
-		no_wake = 1;
+		index += (CurtPktPageNum * page_size);
 
-	RTW_PRINT(FUNC_ADPT_FMT " WOWLAN_ENABLE\n", FUNC_ADPT_ARG(adapter));
-	rtw_hal_gate_bb(adapter, _TRUE);
+#ifdef CONFIG_WAR_OFFLOAD
+		if(_TRUE == pwrctl->wowlan_war_offload_mode) {
+			u8 zero_ary[16] = {0x00};
+			u8 war_tmp_cnt = 0;
+	
+			/* Reserve 2 page for Ip parameters */
+			/* First page
+			   | Byte 15 -----------Byte 0 |
+			   | IP-4 | IP-3 | IP-2 | IP-1 |
+			   | location of each feature | mac addr |
+			   | NetBIOS name			   |
+			   | location of each feature  |
+			Second page
+			   | IPv6 - 1				   |
+			   | IPv6 - 2				   |
+			   | IPv6 - 3				   |
+			   | IPv6 - 4				   |
+			   | IPv6 - 5				   |
+			   | IPv6 - 6				   |
+			   | IPv6 - 7				   |
+			   | IPv6 - 8				   |
+			*/
+	
+			/* location of each feature : Byte 22 ~ Byte 31
+			 * Byte22 : location of SNMP RX
+			 * Byte23 : location of SNMP V4
+			 * Byte24 : location of SNMP V6
+			 * Byte25 : location of MDNS Param
+			 * Byte26 : location of MDNS V4  
+			 * Byte27 : location of MDNS V6
+			 * Byte28 : location of SSDP pattern
+			 * Byte29 : location of WSD pattern  
+			 * Byte30 : location of SLP pattern
+			 * Byte31 : location of LLMNR
+			 */
+	
+			/* ipv4 : 4 */
+			if (0 == pwrctl->wowlan_war_offload_ipv4.ip_addr[0])
+				_rtw_memcpy(&pwrctl->wowlan_war_offload_ipv4.ip_addr[0], pmlmeinfo->ip_addr, 4);
+			for(war_tmp_cnt=0; war_tmp_cnt<4 ;war_tmp_cnt++)
+				_rtw_memcpy(pframe + index - tx_desc + (war_tmp_cnt*4), &pwrctl->wowlan_war_offload_ipv4.ip_addr[war_tmp_cnt], 4);
+	
+			if (is_zero_mac_addr(pwrctl->wowlan_war_offload_mac)) {
+				_rtw_memcpy(pwrctl->wowlan_war_offload_mac, adapter_mac_addr(adapter), 6);
+			}
+			_rtw_memcpy(pframe + index + 16 - tx_desc, pwrctl->wowlan_war_offload_mac, 6);
+	
+	
+			/* ipv6 : 8 */
+			if (_TRUE == _rtw_memcmp(pwrctl->wowlan_war_offload_ipv6.ipv6_addr[0], zero_ary, RTW_IPv6_ADDR_LEN))
+				_rtw_memcpy(pwrctl->wowlan_war_offload_ipv6.ipv6_addr[0], pmlmeinfo->ip6_addr, RTW_IPv6_ADDR_LEN);
+	
+			for(war_tmp_cnt=0; war_tmp_cnt<8 ;war_tmp_cnt++)
+				_rtw_memcpy(pframe + index + page_size - tx_desc + (war_tmp_cnt*16), pwrctl->wowlan_war_offload_ipv6.ipv6_addr[war_tmp_cnt], 16);
+	
+			rsvd_page_loc->LocIpParm = *page_num;
+	
+			tmp_idx = index;
+			CurtPktPageNum = 2;
+			*page_num += CurtPktPageNum;
+			*total_pkt_len = index + (page_size * CurtPktPageNum);
+			index += (CurtPktPageNum * page_size);
+	
+		
+#if defined(CONFIG_OFFLOAD_MDNS_V4) || defined(CONFIG_OFFLOAD_MDNS_V6)
+			if ( (WAR_MDNS_V4_RSP_EN & pwrctl->wowlan_war_offload_ctrl) || 
+				 (WAR_MDNS_V6_RSP_EN & pwrctl->wowlan_war_offload_ctrl) || 
+				 (WAR_MDNS_V4_WAKEUP_EN & pwrctl->wowlan_war_offload_ctrl) || 
+				 (WAR_MDNS_V6_WAKEUP_EN & pwrctl->wowlan_war_offload_ctrl)) {
+	
+				struct war_mdns_service_info *psinfo = pwrctl->wowlan_war_offload_mdns_service;
+				u8 txt_in_ptr[31]={ 0xc0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
+									 0x00, 0x13, 0x09, 0x74, 0x78, 0x74, 0x76, 0x65, 0x72, 0x73, 
+									 0x3d, 0x31, 0x08, 0x71, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x3d, 0x31};
+				u16 mdns_offset = index - tx_desc;
+				u8 i = 0;
+				
+				rsvd_page_loc->LocMdnsPara = *page_num;
+				RTW_INFO("LocMdnsPara : %d\n", rsvd_page_loc->LocMdnsPara);
+	
+				/* 1. service info */
+				pframe[mdns_offset] = 0x01;  // TLV(T)
+				mdns_offset += 1;
+				_rtw_memcpy(pframe + mdns_offset, &pwrctl->wowlan_war_offload_mdns_service_info_num, 1);
+				mdns_offset += 1;
+	
+				for(i=0; i<pwrctl->wowlan_war_offload_mdns_service_info_num ;i++)
+				{
+					u16 srv_rsp_len = 0;
+					
+					// 1.1 : construct service name string
+					//	   : length of total service name string (service+transport+domain)
+					pframe[mdns_offset] = psinfo[i].service_len + psinfo[i].transport_len + psinfo[i].domain_len + 4;
+					mdns_offset += 1;
+	
+					//	   :  service name
+					pframe[mdns_offset] = psinfo[i].service_len;
+					mdns_offset += 1;
+					_rtw_memcpy(pframe + mdns_offset, &psinfo[i].service, psinfo[i].service_len);
+					mdns_offset += psinfo[i].service_len;
+	
+					//	   : transport name
+					pframe[mdns_offset] = psinfo[i].transport_len;
+					mdns_offset += 1;
+					_rtw_memcpy(pframe + mdns_offset, &psinfo[i].transport, psinfo[i].transport_len);
+					mdns_offset += psinfo[i].transport_len;
+	
+					//	   : domain name
+					pframe[mdns_offset] = psinfo[i].domain_len;
+					mdns_offset += 1;
+					_rtw_memcpy(pframe + mdns_offset, &psinfo[i].domain, psinfo[i].domain_len);
+					mdns_offset += psinfo[i].domain_len;
+	
+					//	   : delimiter
+					mdns_offset += 1;
+	
+					// 1.2 : construct type srv rsp
+					pframe[mdns_offset] = psinfo[i].target_len + 19; // length
+					pframe[mdns_offset + 2] = 0x21; // rsp type (srv)
+					pframe[mdns_offset + 4] = 0x01; // cache flush + class
+					_rtw_memcpy(pframe + mdns_offset + 5, &psinfo[i].ttl, 4); // ttl
+					pframe[mdns_offset + 5] = (u8) ( (psinfo[i].ttl & 0xff000000) >> 24);	// ttl - byte0
+					pframe[mdns_offset + 6] = (u8) ( (psinfo[i].ttl & 0x00ff0000) >> 16);	// ttl - byte1
+					pframe[mdns_offset + 7] = (u8) ( (psinfo[i].ttl & 0x0000ff00) >> 8 );		// ttl - byte2
+					pframe[mdns_offset + 8] = (u8) (psinfo[i].ttl & 0x000000ff);			// ttl - byte3
+					pframe[mdns_offset + 10] = psinfo[i].target_len + 9;	  // data length
+					_rtw_memcpy(pframe + mdns_offset + 15, &psinfo[i].port, 2); // port
+					_rtw_memcpy(pframe + mdns_offset + 17, &psinfo[i].target_len, 1); // target len
+					_rtw_memcpy(pframe + mdns_offset + 18, &psinfo[i].target, psinfo[i].target_len); // target
+					pframe[mdns_offset + 18 + psinfo[i].target_len] = 0xc0; // message compresion, offset will be filled by fw.
+					mdns_offset += (1 + psinfo[i].target_len + 19);
+	
+					// 1.3 : set the idx of txt rsp
+					pframe[mdns_offset] = psinfo[i].txt_rsp_idx;
+					mdns_offset += 1;
+				}
+				
+				/* 2. machine name */
+				pframe[mdns_offset] = 0x02; // TLV(T)
+				mdns_offset += 1;
+				_rtw_memcpy(pframe + mdns_offset, &pwrctl->wowlan_war_offload_mdns_mnane_num, 1); // NUM
+				mdns_offset += 1;
+	
+				for(i=0; i<pwrctl->wowlan_war_offload_mdns_mnane_num; i++)
+				{
+					pframe[mdns_offset] = pwrctl->wowlan_war_offload_mdns_mnane[i].name_len;
+					_rtw_memcpy(pframe + mdns_offset + 1, pwrctl->wowlan_war_offload_mdns_mnane[i].name, 
+						pwrctl->wowlan_war_offload_mdns_mnane[i].name_len); // machine name
+					mdns_offset += (1+pwrctl->wowlan_war_offload_mdns_mnane[i].name_len);
+				}
+				
+				/* 3. A rsp */
+				pframe[mdns_offset] = 0x03; // TLV(T)
+				pframe[mdns_offset + 1] = 14;	// TLV(L)
+				pframe[mdns_offset + 3] = 0x01; // rsp type (a)
+				pframe[mdns_offset + 5] = 0x01; // cache flush + class
+				pframe[mdns_offset + 9] = 0xf0; // ttl (240 sec)
+				pframe[mdns_offset + 11] = 4;	// length of ipv4 addr.
+				_rtw_memcpy(pframe + mdns_offset + 12, &pwrctl->wowlan_war_offload_ipv4.ip_addr[0], 4);
+				mdns_offset += (2 + 14);
+				
+				/* 4. AAAA rsp */
+				pframe[mdns_offset] = 0x04; // TLV(T)
+				pframe[mdns_offset + 1] = 26;	// TLV(L)
+				pframe[mdns_offset + 3] = 0x1c; // rsp type (aaaa)
+				pframe[mdns_offset + 5] = 0x01; // cache flush + class
+				pframe[mdns_offset + 9] = 0xf0; // ttl (240 sec)
+				pframe[mdns_offset + 11] = 16;	// length of ipv6 addr.
+				_rtw_memcpy(pframe + mdns_offset + 12, &pwrctl->wowlan_war_offload_ipv6.ipv6_addr[0], 16);
+				mdns_offset += (2 + 26);
+				
+				/* 5. PTR rsp */
+				pframe[mdns_offset] = 0x05; // TLV(T)
+				pframe[mdns_offset + 1] = 13 + pwrctl->wowlan_war_offload_mdns_domain_name_len; // TLV(L)
+				pframe[mdns_offset + 3] = 0x0c; // rsp type (aaaa)
+				pframe[mdns_offset + 5] = 0x01; // cache flush + class
+				pframe[mdns_offset + 8] = 0x1c; // ttl 
+				pframe[mdns_offset + 9] = 0x20; // ttl (7200 sec)
+				pframe[mdns_offset + 11] = 3 + pwrctl->wowlan_war_offload_mdns_domain_name_len; // data length 
+				pframe[mdns_offset + 12] = pwrctl->wowlan_war_offload_mdns_domain_name_len; // domain name length 
+				_rtw_memcpy(pframe + mdns_offset + 13, &pwrctl->wowlan_war_offload_mdns_domain_name, 
+					pwrctl->wowlan_war_offload_mdns_domain_name_len);
+				pframe[mdns_offset + 13 + pwrctl->wowlan_war_offload_mdns_domain_name_len] = 0xc0; // message compression
+				mdns_offset += (2 + 13 + pwrctl->wowlan_war_offload_mdns_domain_name_len);
+				
+				/* 6. TXT in PTR rsp */
+				pframe[mdns_offset] = 0x06; 		// TLV(T)
+				pframe[mdns_offset + 1] = 31;	// TLV(L)
+				_rtw_memcpy(pframe + mdns_offset + 2, &txt_in_ptr, 31);
+				mdns_offset += (2 + 31);
+				
+				/* 7. TXT rsp */
+				pframe[mdns_offset] = 0x07; // TLV(T)
+				mdns_offset += 1;
+				_rtw_memcpy(pframe + mdns_offset, &pwrctl->wowlan_war_offload_mdns_txt_rsp_num, 1); // NUM
+				mdns_offset += 1;
 	
-	for (i = 0; i < dvobj->iface_nums; i++) {
-		iface = dvobj->padapters[i];
-		/* Start Usb TxDMA */
-		if(iface) {
-			RTW_INFO(ADPT_FMT "enable TX\n", ADPT_ARG(iface));
-			RTW_ENABLE_FUNC(iface, DF_TX_BIT);
-		}
-	}
+				for(i=0; i<pwrctl->wowlan_war_offload_mdns_txt_rsp_num; i++)
+				{
+					u16 txt_rsp_len = pwrctl->wowlan_war_offload_mdns_txt_rsp[i].txt_len;
 	
-#ifdef CONFIG_GTK_OL
-	if (psecuritypriv->binstallKCK_KEK == _TRUE)
-		rtw_hal_fw_sync_cam_id(adapter);
-#endif
-	if (IS_HARDWARE_TYPE_8723B(adapter))
-		rtw_hal_backup_rate(adapter);
-
-	rtw_hal_fw_dl(adapter, _TRUE);
-	if(no_wake)
-		media_status_rpt = RT_MEDIA_DISCONNECT;
-	else
-		media_status_rpt = RT_MEDIA_CONNECT;
-	rtw_hal_set_hwreg(adapter, HW_VAR_H2C_FW_JOINBSSRPT,
-			  (u8 *)&media_status_rpt);
-
-	/* RX DMA stop */
-	#if defined(CONFIG_RTL8188E)
-	if (IS_HARDWARE_TYPE_8188E(adapter))
-		rtw_hal_disable_tx_report(adapter);
-	#endif
-
-	res = rtw_hal_pause_rx_dma(adapter);
-	if (res == _FAIL)
-		RTW_PRINT("[WARNING] pause RX DMA fail\n");
-
-	#ifndef CONFIG_WOW_PATTERN_HW_CAM
-	/* Reconfig RX_FF Boundary */
-	#ifndef CONFIG_WOW_PATTERN_IN_TXFIFO
-	rtw_hal_set_wow_rxff_boundary(adapter, _TRUE);
-	#endif /*CONFIG_WOW_PATTERN_IN_TXFIFO*/
-	#endif
-
-	/* redownload wow pattern */
-	if(!no_wake)
-		rtw_hal_dl_pattern(adapter, 1);
-
-	if (!pwrctl->wowlan_pno_enable) {
-		psta = rtw_get_stainfo(&adapter->stapriv, get_bssid(pmlmepriv));
-
-		if (psta != NULL) {
-			#ifdef CONFIG_FW_MULTI_PORT_SUPPORT
-			adapter_to_dvobj(adapter)->dft.port_id = 0xFF;
-			adapter_to_dvobj(adapter)->dft.mac_id = 0xFF;
-			rtw_hal_set_default_port_id_cmd(adapter, psta->cmn.mac_id);
-			#endif
-			if(!no_wake)
-				rtw_sta_media_status_rpt(adapter, psta, 1);
-		}
-#ifdef CONFIG_FW_MULTI_PORT_SUPPORT
-		else {
-			if(registry_par->suspend_type == FW_IPS_WRC) {
-				adapter_to_dvobj(adapter)->dft.port_id = 0xFF;
-				adapter_to_dvobj(adapter)->dft.mac_id = 0xFF;
-				rtw_hal_set_default_port_id_cmd(adapter, 0);
+					if(pwrctl->wowlan_war_offload_mdns_txt_rsp[i].txt_len==0)
+					{
+						_rtw_memcpy(pframe + mdns_offset, &txt_rsp_len,  2);
+						mdns_offset += ( 2 + txt_rsp_len );
+						continue;
+					}
+	
+					txt_rsp_len += 10;
+					_rtw_memcpy(pframe + mdns_offset, &txt_rsp_len,  2);
+					pframe[mdns_offset + 3] = 0x10; // rsp type (txt)
+					pframe[mdns_offset + 5] = 0x01; // cache flush + class
+					pframe[mdns_offset + 8] = 0x1c; // ttl 
+					pframe[mdns_offset + 9] = 0x20; // ttl (7200 sec)
+					pframe[mdns_offset + 10] = (u8) ((pwrctl->wowlan_war_offload_mdns_txt_rsp[i].txt_len & 0xff00) >> 8);	
+					pframe[mdns_offset + 11] = (u8) (pwrctl->wowlan_war_offload_mdns_txt_rsp[i].txt_len & 0x00ff);
+						_rtw_memcpy(pframe + mdns_offset + 12, &pwrctl->wowlan_war_offload_mdns_txt_rsp[i].txt, 
+							pwrctl->wowlan_war_offload_mdns_txt_rsp[i].txt_len);
+					mdns_offset  += ( 2 + txt_rsp_len );
+				}
+				
+				CurtPktPageNum = (u8)PageNum(mdns_offset - index, page_size)+1;
+				*page_num += CurtPktPageNum;
+				*total_pkt_len = index + (page_size * CurtPktPageNum);
+				index += (CurtPktPageNum * page_size);
 			}
-		}
-#endif /* CONFIG_FW_MULTI_PORT_SUPPORT */
-	}
-
-#if defined(CONFIG_SDIO_HCI) || defined(CONFIG_GSPI_HCI)
-	/* Enable CPWM2 only. */
-	res = rtw_hal_enable_cpwm2(adapter);
-	if (res == _FAIL)
-		RTW_PRINT("[WARNING] enable cpwm2 fail\n");
-#endif
-#ifdef CONFIG_GPIO_WAKEUP
-#ifdef CONFIG_RTW_ONE_PIN_GPIO
-	rtw_hal_switch_gpio_wl_ctrl(adapter, pwrctl->wowlan_gpio_index, _TRUE);
-	rtw_hal_set_input_gpio(adapter, pwrctl->wowlan_gpio_index);
-#else
-#ifdef CONFIG_WAKEUP_GPIO_INPUT_MODE
-	if (pwrctl->is_high_active == 0)
-		rtw_hal_set_input_gpio(adapter, pwrctl->wowlan_gpio_index);
-	else
-		rtw_hal_set_output_gpio(adapter, pwrctl->wowlan_gpio_index,
-			GPIO_OUTPUT_LOW);
-#else
-	val8 = (pwrctl->is_high_active == 0) ? 1 : 0;
-	rtw_hal_set_output_gpio(adapter, pwrctl->wowlan_gpio_index, val8);
-	rtw_hal_switch_gpio_wl_ctrl(adapter, pwrctl->wowlan_gpio_index, _TRUE);
-	RTW_INFO("%s: set GPIO_%d to OUTPUT %s state in wow suspend and %s_ACTIVE.\n",
-		 __func__, pwrctl->wowlan_gpio_index, 
-		 pwrctl->wowlan_gpio_output_state ? "HIGH" : "LOW",
-		 pwrctl->is_high_active ? "HIGI" : "LOW");
-#endif /* CONFIG_WAKEUP_GPIO_INPUT_MODE */
-#endif /* CONFIG_RTW_ONE_PIN_GPIO */
-#endif /* CONFIG_GPIO_WAKEUP */
-	/* Set WOWLAN H2C command. */
-	RTW_PRINT("Set WOWLan cmd\n");
-	rtw_hal_set_fw_wow_related_cmd(adapter, 1);
-
-	res = rtw_hal_check_wow_ctrl(adapter, _TRUE);
-
-	if (res == _FALSE)
-		RTW_INFO("[Error]%s: set wowlan CMD fail!!\n", __func__);
-
-	pwrctl->wowlan_wake_reason =
-		rtw_read8(adapter, REG_WOWLAN_WAKE_REASON);
-
-	RTW_PRINT("wowlan_wake_reason: 0x%02x\n",
-		  pwrctl->wowlan_wake_reason);
-#ifdef CONFIG_GTK_OL_DBG
-	dump_sec_cam(RTW_DBGDUMP, adapter);
-	dump_sec_cam_cache(RTW_DBGDUMP, adapter);
-#endif
-
-#ifdef CONFIG_LPS_PG
-	if (pwrctl->lps_level == LPS_PG) {
-		lps_pg_hdl_id = LPS_PG_INFO_CFG;
-		rtw_hal_set_hwreg(adapter, HW_VAR_LPS_PG_HANDLE, (u8 *)(&lps_pg_hdl_id));
-	}
-#endif
-
-#ifdef CONFIG_USB_HCI
-	/* free adapter's resource */
-	rtw_mi_intf_stop(adapter);
-
-#endif
-#if defined(CONFIG_USB_HCI) || defined(CONFIG_PCI_HCI)
-	/* Invoid SE0 reset signal during suspending*/
-	rtw_write8(adapter, REG_RSV_CTRL, 0x20);
-	if (IS_8188F(pHalData->version_id) == FALSE
-		&& IS_8188GTV(pHalData->version_id) == FALSE)
-		rtw_write8(adapter, REG_RSV_CTRL, 0x60);
-#endif
-
-	rtw_hal_gate_bb(adapter, _FALSE);
-}
-
-#define DBG_WAKEUP_REASON
-#ifdef DBG_WAKEUP_REASON
-void _dbg_wake_up_reason_string(_adapter *adapter, const char *srt_res)
-{
-	RTW_INFO(ADPT_FMT "- wake up reason - %s\n", ADPT_ARG(adapter), srt_res);
-}
-void _dbg_rtw_wake_up_reason(_adapter *adapter, u8 reason)
-{
-	if (RX_PAIRWISEKEY == reason)
-		_dbg_wake_up_reason_string(adapter, "Rx pairwise key");
-	else if (RX_GTK == reason)
-		_dbg_wake_up_reason_string(adapter, "Rx GTK");
-	else if (RX_FOURWAY_HANDSHAKE == reason)
-		_dbg_wake_up_reason_string(adapter, "Rx four way handshake");
-	else if (RX_DISASSOC == reason)
-		_dbg_wake_up_reason_string(adapter, "Rx disassoc");
-	else if (RX_DEAUTH == reason)
-		_dbg_wake_up_reason_string(adapter, "Rx deauth");
-	else if (RX_ARP_REQUEST == reason)
-		_dbg_wake_up_reason_string(adapter, "Rx ARP request");
-	else if (FW_DECISION_DISCONNECT == reason)
-		_dbg_wake_up_reason_string(adapter, "FW detect disconnect");
-	else if (RX_MAGIC_PKT == reason)
-		_dbg_wake_up_reason_string(adapter, "Rx magic packet");
-	else if (RX_UNICAST_PKT == reason)
-		_dbg_wake_up_reason_string(adapter, "Rx unicast packet");
-	else if (RX_PATTERN_PKT == reason)
-		_dbg_wake_up_reason_string(adapter, "Rx pattern packet");
-	else if (RTD3_SSID_MATCH == reason)
-		_dbg_wake_up_reason_string(adapter, "RTD3 SSID match");
-	else if (RX_REALWOW_V2_WAKEUP_PKT == reason)
-		_dbg_wake_up_reason_string(adapter, "Rx real WOW V2 wakeup packet");
-	else if (RX_REALWOW_V2_ACK_LOST == reason)
-		_dbg_wake_up_reason_string(adapter, "Rx real WOW V2 ack lost");
-	else if (ENABLE_FAIL_DMA_IDLE == reason)
-		_dbg_wake_up_reason_string(adapter, "enable fail DMA idle");
-	else if (ENABLE_FAIL_DMA_PAUSE == reason)
-		_dbg_wake_up_reason_string(adapter, "enable fail DMA pause");
-	else if (AP_OFFLOAD_WAKEUP == reason)
-		_dbg_wake_up_reason_string(adapter, "AP offload wakeup");
-	else if (CLK_32K_UNLOCK == reason)
-		_dbg_wake_up_reason_string(adapter, "clk 32k unlock");
-	else if (RTIME_FAIL_DMA_IDLE == reason)
-		_dbg_wake_up_reason_string(adapter, "RTIME fail DMA idle");
-	else if (CLK_32K_LOCK == reason)
-		_dbg_wake_up_reason_string(adapter, "clk 32k lock");
-	#ifdef CONFIG_WOW_KEEP_ALIVE_PATTERN
-	else if (WOW_KEEPALIVE_ACK_TIMEOUT == reason)
-		_dbg_wake_up_reason_string(adapter, "rx keep alive ack timeout");
-	else if (WOW_KEEPALIVE_WAKE == reason)
-		_dbg_wake_up_reason_string(adapter, "rx keep alive wake pattern");
-	#endif /*CONFIG_WOW_KEEP_ALIVE_PATTERN*/
-	else
-		_dbg_wake_up_reason_string(adapter, "unknown reasoen");
-}
-#endif
-
-static void rtw_hal_wow_disable(_adapter *adapter)
-{
-	struct pwrctrl_priv *pwrctl = adapter_to_pwrctl(adapter);
-	struct security_priv *psecuritypriv = &adapter->securitypriv;
-	struct mlme_priv *pmlmepriv = &adapter->mlmepriv;
-	struct sta_info *psta = NULL;
-	struct registry_priv  *registry_par = &adapter->registrypriv;
-	int res;
-	u16 media_status_rpt;
-
-	RTW_PRINT("%s, WOWLAN_DISABLE\n", __func__);
+#endif /* defined(CONFIG_OFFLOAD_MDNS_V4) || defined(CONFIG_OFFLOAD_MDNS_V6) */
 	
-	if(registry_par->suspend_type == FW_IPS_DISABLE_BBRF && !check_fwstate(pmlmepriv, WIFI_ASOC_STATE)) {
-		RTW_INFO("FW_IPS_DISABLE_BBRF resume\n");
-		return;
-	}
+#ifdef CONFIG_OFFLOAD_MDNS_V4
+			if (WAR_MDNS_V4_RSP_EN & pwrctl->wowlan_war_offload_ctrl) {
+				rsvd_page_loc->LocMdnsv4 = *page_num;
+				RTW_INFO("LocMdnsv4: %d\n", rsvd_page_loc->LocMdnsv4);
+				
+				rtw_hal_construct_mdns_rsp_v4(adapter, &pframe[index], &buf_len, pmlmeinfo->ip_addr);
+				rtw_hal_fill_fake_txdesc(adapter, &pframe[index - tx_desc], buf_len, _FALSE, _FALSE, _TRUE);
+				CurtPktPageNum = 16;
+				*page_num += CurtPktPageNum;
+				index += (CurtPktPageNum * page_size);			
+			}
+#endif /* CONFIG_OFFLOAD_MDNS_V4 */
 	
-	if (!pwrctl->wowlan_pno_enable) {
-		psta = rtw_get_stainfo(&adapter->stapriv, get_bssid(pmlmepriv));
-		if (psta != NULL)
-			rtw_sta_media_status_rpt(adapter, psta, 0);
-		else
-			RTW_INFO("%s: psta is null\n", __func__);
-	}
+#ifdef CONFIG_OFFLOAD_MDNS_V6
+			if (WAR_MDNS_V6_RSP_EN & pwrctl->wowlan_war_offload_ctrl) {
+				rsvd_page_loc->LocMdnsv6 = *page_num;
+				RTW_INFO("LocMdnsv6: %d\n", rsvd_page_loc->LocMdnsv6);
+				
+				rtw_hal_construct_mdns_rsp_v6(adapter, &pframe[index], &buf_len, pmlmeinfo->ip_addr);
+				rtw_hal_fill_fake_txdesc(adapter, &pframe[index - tx_desc], buf_len, _FALSE, _FALSE, _TRUE);
+				CurtPktPageNum = 16;
+				*page_num += CurtPktPageNum;
+				index += (CurtPktPageNum * page_size);			
+			}
+#endif /* CONFIG_OFFLOAD_MDNS_V6 */
+	
+#if defined(CONFIG_OFFLOAD_MDNS_V4) || defined(CONFIG_OFFLOAD_MDNS_V6)
+			*(pframe+tmp_idx+25-tx_desc) = rsvd_page_loc->LocMdnsPara;
+			*(pframe+tmp_idx+26-tx_desc) = rsvd_page_loc->LocMdnsv4;
+			*(pframe+tmp_idx+27-tx_desc) = rsvd_page_loc->LocMdnsv6;
+#endif /* defined(CONFIG_OFFLOAD_MDNS_V4) || defined(CONFIG_OFFLOAD_MDNS_V6) */
 
-	if (0) {
-		RTW_INFO("0x630:0x%02x\n", rtw_read8(adapter, 0x630));
-		RTW_INFO("0x631:0x%02x\n", rtw_read8(adapter, 0x631));
-		RTW_INFO("0x634:0x%02x\n", rtw_read8(adapter, 0x634));
-		RTW_INFO("0x1c7:0x%02x\n", rtw_read8(adapter, 0x1c7));
-	}
+			}
+			//rtw_dump_rsvd_page(RTW_DBGDUMP, adapter, rsvd_page_loc->LocIpParm, 46);
+#endif /* CONFIG_WAR_OFFLOAD */
 
-	pwrctl->wowlan_wake_reason = rtw_read8(adapter, REG_WOWLAN_WAKE_REASON);
+#if defined(CONFIG_WOW_PATTERN_IN_TXFIFO)
+		/* pattern_rsvd_page_loc will be used by rtw_read_from_frame_mask() */
+		pwrctl->pattern_rsvd_page_loc = *page_num;
+		RTW_INFO("LocPatternInfo: %d\n", pwrctl->pattern_rsvd_page_loc);
+		rtw_hal_construct_pattern_info(adapter,
+								&pframe[index - tx_desc],
+								&PatternLen);
 
-	RTW_PRINT("wakeup_reason: 0x%02x\n",
-		  pwrctl->wowlan_wake_reason);
-	#ifdef DBG_WAKEUP_REASON
-	_dbg_rtw_wake_up_reason(adapter, pwrctl->wowlan_wake_reason);
-	#endif
+		/* Set cam_start_offset to REG_TXBUF_WKCAM_OFFSET
+		 * Cam address(TxBufer pointer) access 8 bytes at a time
+		 */
 
-	rtw_hal_set_fw_wow_related_cmd(adapter, 0);
+		// Get rsvd page start page number + pattern located page
+		cam_start_offset = rtw_read8(adapter, REG_BCNQ_BDNY) + *page_num;
+		cam_start_offset *= page_size;
+		cam_start_offset /= 8;
 
-	res = rtw_hal_check_wow_ctrl(adapter, _FALSE);
+		reg_cam_start_offset_val = rtw_read32(adapter, REG_TXBUF_WKCAM_OFFSET);
+		reg_cam_start_offset_val &= ~(WKCAM_OFFSET_BIT_MASK << WKCAM_OFFSET_BIT_MASK_OFFSET);
+		reg_cam_start_offset_val |= (cam_start_offset << WKCAM_OFFSET_BIT_MASK_OFFSET);
+		rtw_write32(adapter, REG_TXBUF_WKCAM_OFFSET, reg_cam_start_offset_val);
 
-	#if defined(CONFIG_RTL8188E)
-	if (IS_HARDWARE_TYPE_8188E(adapter))
-		rtw_hal_enable_tx_report(adapter);
-	#endif
+		/* Set pattern number to REG_WKFMCAM_NUM */
+		rtw_write8(adapter, REG_WKFMCAM_NUM, PatternLen / WKFMCAM_SIZE);
 
-	if ((pwrctl->wowlan_wake_reason != RX_DISASSOC) &&
-		(pwrctl->wowlan_wake_reason != RX_DEAUTH) &&
-		(pwrctl->wowlan_wake_reason != FW_DECISION_DISCONNECT)) {
-		rtw_hal_get_aoac_rpt(adapter);
-		rtw_hal_update_sw_security_info(adapter);
-	}
+		CurtPktPageNum = (u8)PageNum(PatternLen, page_size);
+		*page_num += CurtPktPageNum;
+		index += (CurtPktPageNum * page_size);
+		RSVD_PAGE_CFG("WOW-PatternInfo", CurtPktPageNum, *page_num, index);
 
-	if (res == _FALSE) {
-		RTW_INFO("[Error]%s: disable WOW cmd fail\n!!", __func__);
-		rtw_hal_force_enable_rxdma(adapter);
-	}
+#endif /* CONFIG_WOW_PATTERN_IN_TXFIFO */
 
-	rtw_hal_gate_bb(adapter, _TRUE);
+		/*Reserve 1 page for AOAC report*/
+		rsvd_page_loc->LocAOACReport = *page_num;
+		RTW_INFO("LocAOACReport: %d\n", rsvd_page_loc->LocAOACReport);
+		*page_num += 1;
+		*total_pkt_len = index + (page_size * 1);
+		RSVD_PAGE_CFG("WOW-AOAC", 1, *page_num, *total_pkt_len);
 
-	res = rtw_hal_pause_rx_dma(adapter);
-	if (res == _FAIL)
-		RTW_PRINT("[WARNING] pause RX DMA fail\n");
 
-	/* clean HW pattern match */
-	rtw_hal_dl_pattern(adapter, 0);
+	} else {
+#ifdef CONFIG_PNO_SUPPORT
+		if (pwrctl->wowlan_in_resume == _FALSE &&
+		    pwrctl->pno_inited == _TRUE) {
+#ifndef RTW_HALMAC
+			/* Broadcast Probe Request */
+			rsvd_page_loc->LocProbePacket = *page_num;
 
-	#ifndef CONFIG_WOW_PATTERN_HW_CAM
-	/* config RXFF boundary to original */
-	#ifndef CONFIG_WOW_PATTERN_IN_TXFIFO
-	rtw_hal_set_wow_rxff_boundary(adapter, _FALSE);
-	#endif /*CONFIG_WOW_PATTERN_IN_TXFIFO*/
-	#endif
-	rtw_hal_release_rx_dma(adapter);
+			RTW_INFO("loc_probe_req: %d\n",
+				 rsvd_page_loc->LocProbePacket);
 
-	rtw_hal_fw_dl(adapter, _FALSE);
+			rtw_hal_construct_ProbeReq(
+				adapter,
+				&pframe[index],
+				&ProbeReqLength,
+				NULL);
 
-#ifdef CONFIG_GPIO_WAKEUP
+			rtw_hal_fill_fake_txdesc(adapter,
+						 &pframe[index - tx_desc],
+				 ProbeReqLength, _FALSE, _FALSE, _FALSE);
 
-#ifdef CONFIG_RTW_ONE_PIN_GPIO
-	rtw_hal_set_input_gpio(adapter, pwrctl->wowlan_gpio_index);
-#else
-#ifdef CONFIG_WAKEUP_GPIO_INPUT_MODE
-	if (pwrctl->is_high_active == 0)
-		rtw_hal_set_input_gpio(adapter, pwrctl->wowlan_gpio_index);
-	else
-		rtw_hal_set_output_gpio(adapter, pwrctl->wowlan_gpio_index,
-			GPIO_OUTPUT_LOW);
-#else
-	rtw_hal_set_output_gpio(adapter, pwrctl->wowlan_gpio_index
-		, pwrctl->wowlan_gpio_output_state);
-	RTW_INFO("%s: set GPIO_%d to OUTPUT %s state in wow resume and %s_ACTIVE.\n",
-		 __func__, pwrctl->wowlan_gpio_index, 
-		 pwrctl->wowlan_gpio_output_state ? "HIGH" : "LOW",
-		 pwrctl->is_high_active ? "HIGI" : "LOW");
-#endif /* CONFIG_WAKEUP_GPIO_INPUT_MODE */
-#endif /* CONFIG_RTW_ONE_PIN_GPIO */
-#endif /* CONFIG_GPIO_WAKEUP */
-	if ((pwrctl->wowlan_wake_reason != FW_DECISION_DISCONNECT) &&
-	    (pwrctl->wowlan_wake_reason != RX_PAIRWISEKEY) &&
-	    (pwrctl->wowlan_wake_reason != RX_DISASSOC) &&
-	    (pwrctl->wowlan_wake_reason != RX_DEAUTH)) {
+			CurtPktPageNum =
+				(u8)PageNum(tx_desc + ProbeReqLength, page_size);
 
-		media_status_rpt = RT_MEDIA_CONNECT;
-		rtw_hal_set_hwreg(adapter, HW_VAR_H2C_FW_JOINBSSRPT,
-				  (u8 *)&media_status_rpt);
+			*page_num += CurtPktPageNum;
 
-		if (psta != NULL) {
-			#ifdef CONFIG_FW_MULTI_PORT_SUPPORT
-			adapter_to_dvobj(adapter)->dft.port_id = 0xFF;
-			adapter_to_dvobj(adapter)->dft.mac_id = 0xFF;
-			rtw_hal_set_default_port_id_cmd(adapter, psta->cmn.mac_id);
-			#endif
-			rtw_sta_media_status_rpt(adapter, psta, 1);
+			index += (CurtPktPageNum * page_size);
+			RSVD_PAGE_CFG("WOW-ProbeReq", CurtPktPageNum, *page_num, 0);
+
+			/* Scan Info Page */
+			rsvd_page_loc->LocScanInfo = *page_num;
+			RTW_INFO("LocScanInfo: %d\n", rsvd_page_loc->LocScanInfo);
+			rtw_hal_construct_scan_info(adapter,
+						    &pframe[index - tx_desc],
+						    &ScanInfoLength);
+
+			CurtPktPageNum = (u8)PageNum(ScanInfoLength, page_size);
+			*page_num += CurtPktPageNum;
+
+			index += (CurtPktPageNum * page_size);
+			RSVD_PAGE_CFG("WOW-ScanInfo", CurtPktPageNum, *page_num, *total_pkt_len);
+#endif
+			/* Hidden SSID Probe Request */
+			ssid_num = pwrctl->pnlo_info->hidden_ssid_num;
+
+			for (pno_index = 0 ; pno_index < ssid_num ; pno_index++) {
+				pwrctl->pnlo_info->loc_probe_req[pno_index] =
+					*page_num;
+
+				rtw_hal_construct_ProbeReq(
+					adapter,
+					&pframe[index],
+					&ProbeReqLength,
+					&pwrctl->pno_ssid_list->node[pno_index]);
+
+				rtw_hal_fill_fake_txdesc(adapter,
+						 &pframe[index - tx_desc],
+					ProbeReqLength, _FALSE, _FALSE, _FALSE);
+
+				CurtPktPageNum =
+					(u8)PageNum(tx_desc + ProbeReqLength, page_size);
+
+				*page_num += CurtPktPageNum;
+
+				index += (CurtPktPageNum * page_size);
+				RSVD_PAGE_CFG("WOW-ProbeReq", CurtPktPageNum, *page_num, 0);
+			}
+
+			/* PNO INFO Page */
+			rsvd_page_loc->LocPNOInfo = *page_num;
+			RTW_INFO("LocPNOInfo: %d\n", rsvd_page_loc->LocPNOInfo);
+			rtw_hal_construct_PNO_info(adapter,
+						   &pframe[index - tx_desc],
+						   &PNOLength);
+
+			CurtPktPageNum = (u8)PageNum(PNOLength, page_size);
+			*page_num += CurtPktPageNum;
+			*total_pkt_len = index + PNOLength;
+			index += (CurtPktPageNum * page_size);
+			RSVD_PAGE_CFG("WOW-PNOInfo", CurtPktPageNum, *page_num, 0);
 		}
+#endif /* CONFIG_PNO_SUPPORT */
 	}
-	rtw_hal_gate_bb(adapter, _FALSE);
 }
 #endif /*CONFIG_WOWLAN*/
 
@@ -12152,8 +12441,7 @@ static void _rtw_hal_set_fw_rsvd_page(_adapter *adapter, bool finished, u8 *page
 #ifdef CONFIG_WOWLAN
 	/*======== WOW * n page ======== */
 	if (pwrctl->wowlan_mode == _TRUE &&
-		pwrctl->wowlan_in_resume == _FALSE &&
-		check_fwstate(pmlmepriv, WIFI_ASOC_STATE)) {/*WOW mode*/
+		pwrctl->wowlan_in_resume == _FALSE) {
 		rtw_hal_set_wow_fw_rsvd_page(adapter, ReservedPagePacket,
 					     BufIndex, TxDescLen, PageSize,
 			     &TotalPageNum, &TotalPacketLen, &RsvdPageLoc);
@@ -12296,6 +12584,33 @@ static u8 rtw_hal_set_fw_bcn_early_c2h_rpt_cmd(struct _ADAPTER *adapter, u8 enab
 	return ret;
 }
 
+#ifdef CONFIG_FW_MULTI_PORT_SUPPORT
+u8 rtw_hal_set_ap_bcn_imr_cmd(struct _ADAPTER *adapter, u8 enable)
+{
+	u8 ap_port_id;
+	u8 ret = _FAIL;
+
+	if (!MLME_IS_AP(adapter))
+		goto exit;
+
+	ap_port_id = get_hw_port(adapter);
+	if (ap_port_id != HW_PORT0) {
+		RTW_WARN("AP mode should use port0\n");
+		goto exit;
+	}
+
+	ret = rtw_hal_fill_h2c_cmd(adapter,
+					H2C_SET_AP_BCN_IMR,
+					H2C_AP_BCN_MIR_LEN,
+					&enable);
+
+	RTW_INFO(FUNC_ADPT_FMT" : AP mode %s beacon early IMR\n",
+			FUNC_ADPT_ARG(adapter), enable ? "enable" : "disable");
+exit:
+	return ret;
+}
+#endif
+
 /**
  * rtw_hal_get_rsvd_page_num() - Get needed reserved page number
  * @adapter:	struct _ADAPTER*
@@ -12951,6 +13266,12 @@ static void hw_var_set_correct_tsf(_adapter *adapter, u8 mlme_state)
 					RTW_INFO("%s-[ERROR] "ADPT_FMT" Reset port%d TSF fail\n"
 						, __func__, ADPT_ARG(iface), iface->hw_port);
 				#endif	/* CONFIG_TSF_RESET_OFFLOAD*/
+				#ifdef CONFIG_TSF_SYNC
+				if(iface->hw_port == HW_PORT0)
+					rtw_write8(iface, REG_DUAL_TSF_RST, rtw_read8(iface, REG_DUAL_TSF_RST) | BIT(2));
+				else if(iface->hw_port == HW_PORT1)
+					rtw_write8(iface, REG_DUAL_TSF_RST, rtw_read8(iface, REG_DUAL_TSF_RST) | BIT(3));
+				#endif
 			}
 			#endif /* CONFIG_AP_MODE */
 		}
@@ -14067,7 +14388,8 @@ void rtw_hal_check_rxfifo_full(_adapter *adapter)
 		    IS_8192E(pHalData->version_id) ||
 		    IS_8703B_SERIES(pHalData->version_id) ||
 		    IS_8723D_SERIES(pHalData->version_id) ||
-		    IS_8192F_SERIES(pHalData->version_id)) {
+		    IS_8192F_SERIES(pHalData->version_id) ||
+		    IS_8822C_SERIES(pHalData->version_id)) {
 			rtw_write8(adapter, REG_RXERR_RPT + 3, rtw_read8(adapter, REG_RXERR_RPT + 3) | 0xa0);
 			save_cnt = _TRUE;
 		} else {
@@ -14522,8 +14844,14 @@ void rtw_dump_cur_efuse(PADAPTER padapter)
 #ifdef CONFIG_RTW_DEBUG
 	if (hal_data->efuse_file_status == EFUSE_FILE_LOADED)
 		RTW_MAP_DUMP_SEL(RTW_DBGDUMP, "EFUSE FILE", hal_data->efuse_eeprom_data, mapsize);
-	else
-		RTW_MAP_DUMP_SEL(RTW_DBGDUMP, "HW EFUSE", hal_data->efuse_eeprom_data, mapsize);
+	else {
+#ifdef CONFIG_MP_INCLUDED
+		if (rtw_mp_mode_check(padapter) && GET_EFUSE_UPDATE_ON(padapter))
+			RTW_MAP_DUMP_SEL(RTW_DBGDUMP, "FAKE EFUSE", hal_data->efuse_eeprom_data, mapsize);
+		else
+#endif
+			RTW_MAP_DUMP_SEL(RTW_DBGDUMP, "HW EFUSE", hal_data->efuse_eeprom_data, mapsize);
+	}
 #endif
 }
 
@@ -15364,9 +15692,9 @@ void rtw_dump_phy_rx_counters(_adapter *padapter, struct dbg_rx_counter *rx_coun
 		ofdmcrc	= phy_query_bb_reg(padapter, 0xF94, bMaskHWord);
 		htcrc	= phy_query_bb_reg(padapter, 0xF90, bMaskHWord);
 		vht_err	= 0;
-		OFDM_FA = phy_query_bb_reg(padapter, 0xCF0, bMaskLWord) + phy_query_bb_reg(padapter, 0xCF2, bMaskLWord) +
-			phy_query_bb_reg(padapter, 0xDA2, bMaskLWord) + phy_query_bb_reg(padapter, 0xDA4, bMaskLWord) +
-			phy_query_bb_reg(padapter, 0xDA6, bMaskLWord) + phy_query_bb_reg(padapter, 0xDA8, bMaskLWord);
+		OFDM_FA = phy_query_bb_reg(padapter, 0xCF0, bMaskLWord) + phy_query_bb_reg(padapter, 0xCF0, bMaskHWord) +
+			phy_query_bb_reg(padapter, 0xDA0, bMaskHWord) + phy_query_bb_reg(padapter, 0xDA4, bMaskLWord) +
+			phy_query_bb_reg(padapter, 0xDA4, bMaskHWord) + phy_query_bb_reg(padapter, 0xDA8, bMaskLWord);
 
 		CCK_FA = (rtw_read8(padapter, 0xA5B) << 8) | (rtw_read8(padapter, 0xA5C));
 	}
@@ -15403,6 +15731,7 @@ void rtw_reset_phy_rx_counters(_adapter *padapter)
 		/* reset CCK CCA counter */
 		phy_set_bb_reg(padapter, 0x1a2c, BIT(13) | BIT(12), 0);
 		phy_set_bb_reg(padapter, 0x1a2c, BIT(13) | BIT(12), 2);
+		rtw_reset_phy_trx_ok_counters(padapter);
 
 	} else if (IS_HARDWARE_TYPE_JAGUAR3_11N(padapter)) {
 		/* reset CCK FA and CCK CCA counter */
@@ -15924,9 +16253,13 @@ void ResumeTxBeacon(_adapter *padapter)
 	/* TBTT setup time */
 	rtw_write8(padapter, REG_TBTT_PROHIBIT, TBTT_PROHIBIT_SETUP_TIME);
 #endif
-
 	/* TBTT hold time: 0x540[19:8] */
-	rtw_write8(padapter, REG_TBTT_PROHIBIT + 1, TBTT_PROHIBIT_HOLD_TIME & 0xFF);
+#ifdef	CONFIG_NARROWBAND_SUPPORTING
+	if (padapter->registrypriv.rtw_nb_config == RTW_NB_CONFIG_WIDTH_10)
+		rtw_write8(padapter, REG_TBTT_PROHIBIT + 1, 0xc8);
+	else
+#endif
+		rtw_write8(padapter, REG_TBTT_PROHIBIT + 1, TBTT_PROHIBIT_HOLD_TIME & 0xFF);
 	rtw_write8(padapter, REG_TBTT_PROHIBIT + 2,
 		(rtw_read8(padapter, REG_TBTT_PROHIBIT + 2) & 0xF0) | (TBTT_PROHIBIT_HOLD_TIME >> 8));
 }
@@ -16513,10 +16846,13 @@ void rtw_leave_protsel_macsleep(_adapter *padapter)
 
 void rtw_hal_bcn_early_rpt_c2h_handler(_adapter *padapter)
 {
-
 	if(0)
 		RTW_INFO("Recv Bcn Early report!!\n");
 
+#ifdef CONFIG_AP_MODE
+	rtw_mi_update_csa(padapter);
+#endif
+
 #ifdef CONFIG_TDLS
 #ifdef CONFIG_TDLS_CH_SW
 	if (ATOMIC_READ(&padapter->tdlsinfo.chsw_info.chsw_on) == _TRUE)
@@ -16524,3 +16860,62 @@ void rtw_hal_bcn_early_rpt_c2h_handler(_adapter *padapter)
 #endif
 #endif
 }
+
+#ifndef RTW_HALMAC
+void rtw_hal_init_sifs_backup(_adapter *adapter)
+{
+	HAL_DATA_TYPE *hal_data = GET_HAL_DATA(adapter);
+
+	hal_data->init_reg_0x428 = rtw_read16(adapter, 0x428);
+	hal_data->init_reg_0x514 = rtw_read32(adapter, 0x514);
+	hal_data->init_reg_0x63a = rtw_read16(adapter, 0x63a);
+	hal_data->init_reg_0x63c = rtw_read32(adapter, 0x63c);
+
+#ifndef RTW_SIFS_INIT_CHK
+#define RTW_SIFS_INIT_CHK 1
+#endif
+
+#if RTW_SIFS_INIT_CHK
+/*
+the expected initial values:
+0x428[15:0]=0x100A
+0x514[31:0]=0x0E0A0E0A
+0x63A[15:0]=0x100A
+0x63C[31:0]=0x0E0E0A0A
+*/
+#define INIT_REG_0x428 0x100A
+#define INIT_REG_0x514 0x0E0A0E0A
+#define INIT_REG_0x63A 0x100A
+#define INIT_REG_0x63C 0x0E0E0A0A
+
+	if (hal_data->init_reg_0x428 != INIT_REG_0x428) {
+		RTW_WARN("init_reg_0x428:0x%04x != 0x%04x\n", hal_data->init_reg_0x428, INIT_REG_0x428);
+		#if RTW_SIFS_INIT_CHK > 1
+		hal_data->init_reg_0x428 = INIT_REG_0x428;
+		rtw_write16(adapter, 0x428, hal_data->init_reg_0x428);
+		#endif
+	}
+	if (hal_data->init_reg_0x514 != INIT_REG_0x514) {
+		RTW_WARN("init_reg_0x514:0x%08x != 0x%08x\n", hal_data->init_reg_0x514, INIT_REG_0x514);
+		#if RTW_SIFS_INIT_CHK > 1
+		hal_data->init_reg_0x514 = INIT_REG_0x514;
+		rtw_write32(adapter, 0x514, hal_data->init_reg_0x514);
+		#endif
+	}
+	if (hal_data->init_reg_0x63a != INIT_REG_0x63A) {
+		RTW_WARN("init_reg_0x63a:0x%04x != 0x%04x\n", hal_data->init_reg_0x63a, INIT_REG_0x63A);
+		#if RTW_SIFS_INIT_CHK > 1
+		hal_data->init_reg_0x63a = INIT_REG_0x63A;
+		rtw_write16(adapter, 0x63a, hal_data->init_reg_0x63a);
+		#endif
+	}
+	if (hal_data->init_reg_0x63c != INIT_REG_0x63C) {
+		RTW_WARN("init_reg_0x63c:0x%08x != 0x%08x\n", hal_data->init_reg_0x63c, INIT_REG_0x63C);
+		#if RTW_SIFS_INIT_CHK > 1
+		hal_data->init_reg_0x63c = INIT_REG_0x63C;
+		rtw_write32(adapter, 0x63c, hal_data->init_reg_0x63c);
+		#endif
+	}
+#endif
+}
+#endif
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/hal_com_c2h.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/hal_com_c2h.h
index 66b096aec5c4..b9aa9ffc7565 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/hal_com_c2h.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/hal_com_c2h.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/hal_com_phycfg.c b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/hal_com_phycfg.c
index 8e919624dcdb..c4bbd86bfaf4 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/hal_com_phycfg.c
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/hal_com_phycfg.c
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017 Realtek Corporation.
@@ -411,7 +410,6 @@ static const struct map_t rtl8822c_pg_txpwr_def_info =
 	);
 #endif
 
-/* todo : 8723f don't know default power */
 #ifdef CONFIG_RTL8723F
 static const struct map_t rtl8723f_pg_txpwr_def_info =
 	MAP_ENT(0xB8, 1, 0xFF
@@ -471,6 +469,18 @@ static const struct map_t rtl8814b_pg_txpwr_def_info =
 	);
 #endif
 
+#ifdef CONFIG_TXPWR_PG_WITH_TSSI_OFFSET
+	#ifdef CONFIG_RTL8723F
+		#define EEPROM_TX_PWR_CALIBRATE_RATE EEPROM_TX_PWR_CALIBRATE_RATE_8723F
+	#endif
+	#ifdef CONFIG_RTL8814B
+		#define EEPROM_TX_PWR_CALIBRATE_RATE EEPROM_TX_PWR_CALIBRATE_RATE_8814B
+	#endif
+	#ifdef CONFIG_RTL8822C
+		#define EEPROM_TX_PWR_CALIBRATE_RATE EEPROM_TX_PWR_CALIBRATE_RATE_8822C
+	#endif
+#endif /* CONFIG_TXPWR_PG_WITH_TSSI_OFFSET */
+
 const struct map_t *hal_pg_txpwr_def_info(_adapter *adapter)
 {
 	u8 interface_type = 0;
@@ -1105,6 +1115,11 @@ int check_phy_efuse_tx_power_info_valid(_adapter *adapter)
 #if CONFIG_IEEE80211_BAND_5GHZ
 	u8 valid_5g_path_bmp = 0;
 #endif
+
+#ifdef CONFIG_TXPWR_PG_WITH_TSSI_OFFSET
+	u8 tpt_mode = (pg_data[EEPROM_TX_PWR_CALIBRATE_RATE] & 0xF0) >> 4;
+#endif
+
 #ifdef CONFIG_MP_INCLUDED
 	struct mp_priv *pmp_priv = &adapter->mppriv;
 
@@ -1114,6 +1129,14 @@ int check_phy_efuse_tx_power_info_valid(_adapter *adapter)
 		return _FALSE;
 	}
 #endif
+
+#ifdef CONFIG_TXPWR_PG_WITH_TSSI_OFFSET
+	if (tpt_mode >= 4 && tpt_mode <= 7) { /* 4~7: TSSI */
+		RTW_INFO("%s: tpt_mode is TSSI, skip check\n", __func__);
+		return _TRUE;
+	}
+#endif
+
 	/* NOTE: TSSI offset use the same layout as TXPWR base */
 
 	for (path = 0; path < MAX_RF_PATH; path++) {
@@ -2852,7 +2875,7 @@ static s8 phy_txpwr_ww_lmt_value(_adapter *adapter)
 */
 s8 phy_get_txpwr_lmt(
 		PADAPTER			Adapter,
-		const char			*regd_name,
+		const char			*lmt_name,
 		BAND_TYPE			Band,
 		enum channel_width		bw,
 	u8 tlrs,
@@ -2891,18 +2914,25 @@ s8 phy_get_txpwr_lmt(
 	if (lock)
 		_enter_critical_mutex(&rfctl->txpwr_lmt_mutex, &irqL);
 
-	if (!regd_name) /* no regd_name specified, use currnet */
-		regd_name = rfctl->regd_name;
+	if (!lmt_name) { /* no name specified, use currnet */
+		if (Band < BAND_MAX)
+			lmt_name = rfctl->txpwr_lmt_name[Band];
+		else {
+			rtw_warn_on(1);
+			goto release_lock;
+		}
+	}
 
-	if (rfctl->txpwr_regd_num == 0
-		|| strcmp(regd_name, regd_str(TXPWR_LMT_NONE)) == 0)
+	if (rfctl->txpwr_lmt_num == 0
+		|| lmt_name == NULL
+		|| strcmp(lmt_name, txpwr_lmt_str(TXPWR_LMT_NONE)) == 0)
 		goto release_lock;
 
-	if (strcmp(regd_name, regd_str(TXPWR_LMT_WW)) == 0)
+	if (strcmp(lmt_name, txpwr_lmt_str(TXPWR_LMT_WW)) == 0)
 		is_ww_regd = 1;
 
 	if (!is_ww_regd) {
-		ent = _rtw_txpwr_lmt_get_by_name(rfctl, regd_name);
+		ent = _rtw_txpwr_lmt_get_by_name(rfctl, lmt_name);
 		if (!ent)
 			goto release_lock;
 	}
@@ -2949,6 +2979,11 @@ s8 phy_get_txpwr_lmt(
 		}
 	}
 	#endif
+	#if CONFIG_IEEE80211_BAND_6GHZ
+	else if (Band == BAND_ON_6G) {
+		rtw_warn_on(1);
+	}
+	#endif
 
 release_lock:
 	if (lock)
@@ -2963,14 +2998,14 @@ s8 phy_get_txpwr_lmt(
 * hal_spec->txgi_max is returned when NO limit
 */
 inline s8 phy_get_txpwr_lmt_diff(_adapter *adapter
-	, const char *regd_name
+	, const char *lmt_name
 	, BAND_TYPE band, enum channel_width bw
 	, u8 rfpath, u8 rs, u8 tlrs, u8 ntx_idx, u8 cch, u8 lock
 )
 {
 	HAL_DATA_TYPE *hal_data = GET_HAL_DATA(adapter);
 	struct hal_spec_t *hal_spec = GET_HAL_SPEC(adapter);
-	s8 lmt = phy_get_txpwr_lmt(adapter, regd_name, band, bw, tlrs, ntx_idx, cch, lock);
+	s8 lmt = phy_get_txpwr_lmt(adapter, lmt_name, band, bw, tlrs, ntx_idx, cch, lock);
 
 	if (lmt != hal_spec->txgi_max) {
 		/* return diff value */
@@ -2989,7 +3024,7 @@ inline s8 phy_get_txpwr_lmt_diff(_adapter *adapter
 * hsl_spec->txgi_max is returned when NO limit
 */
 s8 phy_get_txpwr_lmt_sub_chs(_adapter *adapter
-	, const char *regd_name
+	, const char *lmt_name
 	, BAND_TYPE band, enum channel_width bw
 	, u8 rfpath, u8 rate, u8 ntx_idx, u8 cch, u8 opch, bool reg_max)
 {
@@ -3104,7 +3139,7 @@ s8 phy_get_txpwr_lmt_sub_chs(_adapter *adapter
 			}
 		}
 
-		lmt = phy_get_txpwr_lmt(adapter, regd_name, band, tmp_bw, tlrs, ntx_idx, tmp_cch, 0);
+		lmt = phy_get_txpwr_lmt(adapter, lmt_name, band, tmp_bw, tlrs, ntx_idx, tmp_cch, 0);
 
 		if (final_lmt > lmt) {
 			if (reg_max)
@@ -3264,7 +3299,7 @@ static void phy_txpwr_lmt_cross_ref_ht_vht(_adapter *adapter)
 
 							if (0)
 								RTW_INFO("reg:%s, bw:%u, ch:%u, %s-%uT ref %s-%uT\n"
-									, ent->regd_name, bw, channel
+									, ent->name, bw, channel
 									, txpwr_lmt_rs_str(tlrs), ntx_idx + 1
 									, txpwr_lmt_rs_str(ref_tlrs), ntx_idx + 1);
 
@@ -3410,7 +3445,7 @@ void phy_txpwr_limit_bandwidth_chk(_adapter *adapter)
 								cur = get_next(cur);
 
 								for (bw_pos = bw; bw_pos < CHANNEL_WIDTH_160; bw_pos--)
-									lmt[bw_pos] = phy_get_txpwr_lmt(adapter, ent->regd_name, band, bw_pos, tlrs, ntx_idx, cch_by_bw[bw_pos], 0);
+									lmt[bw_pos] = phy_get_txpwr_lmt(adapter, ent->name, band, bw_pos, tlrs, ntx_idx, cch_by_bw[bw_pos], 0);
 
 								for (bw_pos = bw; bw_pos > CHANNEL_WIDTH_20; bw_pos--)
 									if (lmt[bw_pos] > lmt[bw_pos - 1])
@@ -3423,7 +3458,7 @@ void phy_txpwr_limit_bandwidth_chk(_adapter *adapter)
 									, ch_width_str(bw)
 									, txpwr_lmt_rs_str(tlrs)
 									, ntx_idx + 1
-									, ent->regd_name
+									, ent->name
 								);
 								for (bw_pos = bw; bw_pos < CHANNEL_WIDTH_160; bw_pos--)
 									_RTW_PRINT_SEL(RTW_DBGDUMP, "%03u ", cch_by_bw[bw_pos]);
@@ -3441,7 +3476,7 @@ void phy_txpwr_limit_bandwidth_chk(_adapter *adapter)
 								_RTW_PRINT_SEL(RTW_DBGDUMP, "\n");
 							}
 							for (bw_pos = bw; bw_pos < CHANNEL_WIDTH_160; bw_pos--)
-								lmt[bw_pos] = phy_get_txpwr_lmt(adapter, regd_str(TXPWR_LMT_WW), band, bw_pos, tlrs, ntx_idx, cch_by_bw[bw_pos], 0);
+								lmt[bw_pos] = phy_get_txpwr_lmt(adapter, txpwr_lmt_str(TXPWR_LMT_WW), band, bw_pos, tlrs, ntx_idx, cch_by_bw[bw_pos], 0);
 
 							for (bw_pos = bw; bw_pos > CHANNEL_WIDTH_20; bw_pos--)
 								if (lmt[bw_pos] > lmt[bw_pos - 1])
@@ -3452,7 +3487,7 @@ void phy_txpwr_limit_bandwidth_chk(_adapter *adapter)
 									, ch_width_str(bw)
 									, txpwr_lmt_rs_str(tlrs)
 									, ntx_idx + 1
-									, regd_str(TXPWR_LMT_WW)
+									, txpwr_lmt_str(TXPWR_LMT_WW)
 								);
 								for (bw_pos = bw; bw_pos < CHANNEL_WIDTH_160; bw_pos--)
 									_RTW_PRINT_SEL(RTW_DBGDUMP, "%03u ", cch_by_bw[bw_pos]);
@@ -3538,7 +3573,7 @@ GetS1ByteIntegerFromStringInDecimal(
 void
 phy_set_tx_power_limit(
 		struct dm_struct		*pDM_Odm,
-		u8				*Regulation,
+		u8				*lmt_name,
 		u8				*Band,
 		u8				*Bandwidth,
 		u8				*RateSection,
@@ -3557,8 +3592,8 @@ phy_set_tx_power_limit(
 	s8 ww_lmt_val = phy_txpwr_ww_lmt_value(Adapter);
 
 	if (0)
-		RTW_INFO("Index of power limit table [regulation %s][band %s][bw %s][rate section %s][ntx %s][chnl %s][val %s]\n"
-			, Regulation, Band, Bandwidth, RateSection, ntx, Channel, PowerLimit);
+		RTW_INFO("Index of power limit table [lmt_name %s][band %s][bw %s][rate section %s][ntx %s][chnl %s][val %s]\n"
+			, lmt_name, Band, Bandwidth, RateSection, ntx, Channel, PowerLimit);
 
 	if (GetU1ByteIntegerFromStringInDecimal((char *)Channel, &channel) == _FALSE
 		|| GetS1ByteIntegerFromStringInDecimal((char *)PowerLimit, &powerLimit) == _FALSE
@@ -3630,7 +3665,7 @@ phy_set_tx_power_limit(
 			return;
 		}
 
-		rtw_txpwr_lmt_add(adapter_to_rfctl(Adapter), Regulation, band, bandwidth, tlrs, ntx_idx, channelIndex, powerLimit);
+		rtw_txpwr_lmt_add(adapter_to_rfctl(Adapter), lmt_name, band, bandwidth, tlrs, ntx_idx, channelIndex, powerLimit);
 	}
 #if CONFIG_IEEE80211_BAND_5GHZ
 	else if (strncmp(Band, "5G", 2) == 0) {
@@ -3642,7 +3677,7 @@ phy_set_tx_power_limit(
 			return;
 		}
 
-		rtw_txpwr_lmt_add(adapter_to_rfctl(Adapter), Regulation, band, bandwidth, tlrs, ntx_idx, channelIndex, powerLimit);
+		rtw_txpwr_lmt_add(adapter_to_rfctl(Adapter), lmt_name, band, bandwidth, tlrs, ntx_idx, channelIndex, powerLimit);
 	}
 #endif
 	else {
@@ -3655,7 +3690,7 @@ phy_set_tx_power_limit(
 void
 phy_set_tx_power_limit_ex(
 		struct dm_struct		*pDM_Odm,
-		u8				Regulation,
+		u8				phydm_id,
 		u8				Band,
 		u8				Bandwidth,
 		u8				RateSection,
@@ -3668,15 +3703,15 @@ phy_set_tx_power_limit_ex(
 	PADAPTER Adapter = pDM_Odm->adapter;
 	HAL_DATA_TYPE *pHalData = GET_HAL_DATA(Adapter);
 	struct hal_spec_t *hal_spec = GET_HAL_SPEC(Adapter);
-	u8 regd;
+	u8 lmt_id;
 	u8 band = 0, bandwidth = 0, tlrs = 0;
 	u8 ntx_idx;
 	s8 prevPowerLimit, channelIndex;
 	s8 ww_lmt_val = phy_txpwr_ww_lmt_value(Adapter);
 
 	if (0)
-		RTW_INFO("Index of power limit table [regulation %d][band %d][bw %d][rate section %d][ntx %d][chnl %d][val %d]\n"
-			, Regulation, Band, Bandwidth, RateSection, ntx, channel, powerLimit);
+		RTW_INFO("Index of power limit table [phydm_id %d][band %d][bw %d][rate section %d][ntx %d][chnl %d][val %d]\n"
+			, phydm_id, Band, Bandwidth, RateSection, ntx, channel, powerLimit);
 
 	if (powerLimit != ww_lmt_val) {
 		if (powerLimit < -hal_spec->txgi_max || powerLimit > hal_spec->txgi_max)
@@ -3688,40 +3723,40 @@ phy_set_tx_power_limit_ex(
 			powerLimit =  ww_lmt_val + 1;
 	}
 
-	switch (Regulation) {
+	switch (phydm_id) {
 	case PW_LMT_REGU_FCC:
-		regd = TXPWR_LMT_FCC;
+		lmt_id = TXPWR_LMT_FCC;
 		break;
 	case PW_LMT_REGU_ETSI:
-		regd = TXPWR_LMT_ETSI;
+		lmt_id = TXPWR_LMT_ETSI;
 		break;
 	case PW_LMT_REGU_MKK:
-		regd = TXPWR_LMT_MKK;
+		lmt_id = TXPWR_LMT_MKK;
 		break;
 	case PW_LMT_REGU_IC:
-		regd = TXPWR_LMT_IC;
+		lmt_id = TXPWR_LMT_IC;
 		break;
 	case PW_LMT_REGU_KCC:
-		regd = TXPWR_LMT_KCC;
+		lmt_id = TXPWR_LMT_KCC;
 		break;
 	case PW_LMT_REGU_ACMA:
-		regd = TXPWR_LMT_ACMA;
+		lmt_id = TXPWR_LMT_ACMA;
 		break;
 	case PW_LMT_REGU_CHILE:
-		regd = TXPWR_LMT_CHILE;
+		lmt_id = TXPWR_LMT_CHILE;
 		break;
 	case PW_LMT_REGU_UKRAINE:
-		regd = TXPWR_LMT_UKRAINE;
+		lmt_id = TXPWR_LMT_UKRAINE;
 		break;
 	case PW_LMT_REGU_MEXICO:
-		regd = TXPWR_LMT_MEXICO;
+		lmt_id = TXPWR_LMT_MEXICO;
 		break;
 	case PW_LMT_REGU_CN:
-		regd = TXPWR_LMT_CN;
+		lmt_id = TXPWR_LMT_CN;
 		break;
 	case PW_LMT_REGU_WW13:
 	default:	
-		RTW_PRINT("Wrong regulation:%d\n", Regulation);
+		RTW_PRINT("Wrong phydm_id:%d\n", phydm_id);
 		return;		
 	}
 
@@ -3793,7 +3828,7 @@ phy_set_tx_power_limit_ex(
 			return;
 		}
 
-		rtw_txpwr_lmt_add(adapter_to_rfctl(Adapter), regd_str(regd), band, bandwidth, tlrs, ntx_idx, channelIndex, powerLimit);
+		rtw_txpwr_lmt_add(adapter_to_rfctl(Adapter), txpwr_lmt_str(lmt_id), band, bandwidth, tlrs, ntx_idx, channelIndex, powerLimit);
 	}
 #if CONFIG_IEEE80211_BAND_5GHZ
 	else if (Band == PW_LMT_BAND_5G) {
@@ -3805,7 +3840,7 @@ phy_set_tx_power_limit_ex(
 			return;
 		}
 
-		rtw_txpwr_lmt_add(adapter_to_rfctl(Adapter), regd_str(regd), band, bandwidth, tlrs, ntx_idx, channelIndex, powerLimit);
+		rtw_txpwr_lmt_add(adapter_to_rfctl(Adapter), txpwr_lmt_str(lmt_id), band, bandwidth, tlrs, ntx_idx, channelIndex, powerLimit);
 	}
 #endif
 	else {
@@ -5406,7 +5441,7 @@ phy_ParsePowerLimitTableFile(
 	u32	i = 0, forCnt = 0;
 	char	*szLine, *ptmp;
 	char band[10], bandwidth[10], rateSection[10], ntx[10], colNumBuf[10];
-	char **regulation = NULL;
+	char **lmt_names = NULL;
 	u8	colNum = 0;
 
 	if (Adapter->registrypriv.RegDecryptCustomFile == 1)
@@ -5511,9 +5546,9 @@ phy_ParsePowerLimitTableFile(
 			if (DBG_TXPWR_LMT_FILE_PARSE)
 				RTW_PRINT("[%s][%s][%s][%s] column num:%d\n", band, bandwidth, rateSection, ntx, colNum);
 
-			regulation = (char **)rtw_zmalloc(sizeof(char *) * colNum);
-			if (!regulation) {
-				RTW_ERR("Regulation alloc fail\n");
+			lmt_names = (char **)rtw_zmalloc(sizeof(char *) * colNum);
+			if (!lmt_names) {
+				RTW_ERR("lmt_names alloc fail\n");
 				goto exit;
 			}
 
@@ -5528,20 +5563,20 @@ phy_ParsePowerLimitTableFile(
 				while (szLine[i] != ' ' && szLine[i] != '\t' && szLine[i] != '\0')
 					i++;
 
-				regulation[forCnt] = (char *)rtw_malloc(i - i_ns + 1);
-				if (!regulation[forCnt]) {
-					RTW_ERR("Regulation alloc fail\n");
+				lmt_names[forCnt] = (char *)rtw_malloc(i - i_ns + 1);
+				if (!lmt_names[forCnt]) {
+					RTW_ERR("lmt_name alloc fail\n");
 					goto exit;
 				}
 
-				_rtw_memcpy(regulation[forCnt], szLine + i_ns, i - i_ns);
-				regulation[forCnt][i - i_ns] = '\0';
+				_rtw_memcpy(lmt_names[forCnt], szLine + i_ns, i - i_ns);
+				lmt_names[forCnt][i - i_ns] = '\0';
 			}
 
 			if (DBG_TXPWR_LMT_FILE_PARSE) {
 				RTW_PRINT("column name:");
 				for (forCnt = 0; forCnt < colNum; ++forCnt)
-					_RTW_PRINT(" %s", regulation[forCnt]);
+					_RTW_PRINT(" %s", lmt_names[forCnt]);
 				_RTW_PRINT("\n");
 			}
 
@@ -5558,15 +5593,15 @@ phy_ParsePowerLimitTableFile(
 
 				if (strncmp((u8 *)(szLine + i), "END", 3) == 0) {
 					loadingStage = LD_STAGE_TAB_DEFINE;
-					if (regulation) {
+					if (lmt_names) {
 						for (forCnt = 0; forCnt < colNum; ++forCnt) {
-							if (regulation[forCnt]) {
-								rtw_mfree(regulation[forCnt], strlen(regulation[forCnt]) + 1);
-								regulation[forCnt] = NULL;
+							if (lmt_names[forCnt]) {
+								rtw_mfree(lmt_names[forCnt], strlen(lmt_names[forCnt]) + 1);
+								lmt_names[forCnt] = NULL;
 							}
 						}
-						rtw_mfree((u8 *)regulation, sizeof(char *) * colNum);
-						regulation = NULL;
+						rtw_mfree((u8 *)lmt_names, sizeof(char *) * colNum);
+						lmt_names = NULL;
 					}
 					colNum = 0;
 					continue;
@@ -5653,7 +5688,7 @@ phy_ParsePowerLimitTableFile(
 				}
 
 				/* store the power limit value */
-				phy_set_tx_power_limit(pDM_Odm, (u8 *)regulation[forCnt], (u8 *)band,
+				phy_set_tx_power_limit(pDM_Odm, (u8 *)lmt_names[forCnt], (u8 *)band,
 					(u8 *)bandwidth, (u8 *)rateSection, (u8 *)ntx, (u8 *)channel, (u8 *)powerLimit);
 
 			}
@@ -5663,15 +5698,15 @@ phy_ParsePowerLimitTableFile(
 	rtStatus = _SUCCESS;
 
 exit:
-	if (regulation) {
+	if (lmt_names) {
 		for (forCnt = 0; forCnt < colNum; ++forCnt) {
-			if (regulation[forCnt]) {
-				rtw_mfree(regulation[forCnt], strlen(regulation[forCnt]) + 1);
-				regulation[forCnt] = NULL;
+			if (lmt_names[forCnt]) {
+				rtw_mfree(lmt_names[forCnt], strlen(lmt_names[forCnt]) + 1);
+				lmt_names[forCnt] = NULL;
 			}
 		}
-		rtw_mfree((u8 *)regulation, sizeof(char *) * colNum);
-		regulation = NULL;
+		rtw_mfree((u8 *)lmt_names, sizeof(char *) * colNum);
+		lmt_names = NULL;
 	}
 
 	RTW_INFO("%s return %d\n", __func__, rtStatus);
@@ -6109,11 +6144,16 @@ u8 hal_com_get_txpwr_idx(_adapter *adapter, enum rf_path rfpath
 		* 3. amends diff (per rate)
 		* base is selected that power index of MCS7 ==  halrf_get_tssi_codeword_for_txindex()
 		*/
+#if defined(CONFIG_RTL8822C) || defined(CONFIG_RTL8814B)
 		s8 mcs7_idx;
 
 		mcs7_idx = phy_get_tssi_txpwr_by_rate_ref(adapter, rfpath, bw, cch, opch);
 		base = halrf_get_tssi_codeword_for_txindex(adapter_to_phydm(adapter)) - mcs7_idx;
 		power_idx = base + rate_target + rate_amends;
+#else
+		base = 0;
+		power_idx = rate_target + rate_amends;
+#endif
 	}
 		break;
 #endif
@@ -6229,7 +6269,7 @@ static s16 _phy_get_txpwr_max_mbm(_adapter *adapter, s8 rfpath
 				if (!(bmp_ht & BIT(hw_rate - DESC_RATEMCS0)))
 					continue;
 			} else if (IS_VHT_HRATE(hw_rate)) {
-				if (!(bmp_vht & BIT(hw_rate - DESC_RATEVHTSS1MCS0)))
+				if (!(bmp_vht & BIT_ULL(hw_rate - DESC_RATEVHTSS1MCS0)))
 					continue;
 			}
 
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/hal_dm.c b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/hal_dm.c
index b556c5f06ad2..5502008708da 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/hal_dm.c
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/hal_dm.c
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2014 - 2017 Realtek Corporation.
@@ -357,6 +356,7 @@ void Init_ODM_ComInfo(_adapter *adapter)
 	PHAL_DATA_TYPE	pHalData = GET_HAL_DATA(adapter);
 	struct dm_struct	*pDM_Odm = &(pHalData->odmpriv);
 	struct pwrctrl_priv *pwrctl = adapter_to_pwrctl(adapter);
+	struct rf_ctl_t *rfctl = dvobj_to_rfctl(dvobj);
 	int i;
 
 	/*phydm_op_mode could be change for different scenarios: ex: SoftAP - PHYDM_BALANCE_MODE*/
@@ -406,8 +406,6 @@ void Init_ODM_ComInfo(_adapter *adapter)
 		/* 1 ============== End of BoardType ============== */
 	}
 
-	rtw_hal_set_odm_var(adapter, HAL_ODM_REGULATION, NULL, _TRUE);
-
 #ifdef CONFIG_DFS_MASTER
 	rtw_odm_update_dfs_region(dvobj);
 	odm_cmn_info_hook(pDM_Odm, ODM_CMNINFO_DFS_MASTER_ENABLE, &(adapter_to_rfctl(adapter)->radar_detect_enabled));
@@ -437,11 +435,12 @@ void Init_ODM_ComInfo(_adapter *adapter)
 
 	/* waiting for PhyDMV034 support*/
 	odm_cmn_info_hook(pDM_Odm, ODM_CMNINFO_MANUAL_SUPPORTABILITY, &(adapter->registrypriv.phydm_ability)); 
+
 	/*Add by YuChen for adaptivity init*/
-	odm_cmn_info_hook(pDM_Odm, ODM_CMNINFO_ADAPTIVITY, &(adapter->registrypriv.adaptivity_en));
-	phydm_adaptivity_info_init(pDM_Odm, PHYDM_ADAPINFO_CARRIER_SENSE_ENABLE, (adapter->registrypriv.adaptivity_mode != 0) ? TRUE : FALSE);
+	odm_cmn_info_hook(pDM_Odm, ODM_CMNINFO_ADAPTIVITY, &rfctl->adaptivity_en);
 	phydm_adaptivity_info_init(pDM_Odm, PHYDM_ADAPINFO_TH_L2H_INI, adapter->registrypriv.adaptivity_th_l2h_ini);
 	phydm_adaptivity_info_init(pDM_Odm, PHYDM_ADAPINFO_TH_EDCCA_HL_DIFF, adapter->registrypriv.adaptivity_th_edcca_hl_diff);
+	rtw_odm_adaptivity_update(dvobj);
 
 	/*halrf info init*/
 	halrf_cmn_info_init(pDM_Odm, HALRF_CMNINFO_EEPROM_THERMAL_VALUE, pHalData->eeprom_thermal_meter);
@@ -640,7 +639,7 @@ void rtw_hal_turbo_edca(_adapter *adapter)
 		return;
 	}
 
-	if (pregpriv->wifi_spec == 1) { /* || (pmlmeinfo->HT_enable == 0)) */
+	if ((pregpriv->wifi_spec == 1)) { /* || (pmlmeinfo->HT_enable == 0)) */
 		precvpriv->is_any_non_be_pkts = _FALSE;
 		return;
 	}
@@ -971,11 +970,6 @@ void SetHalODMVar(
 	case HAL_ODM_WIFI_DISPLAY_STATE:
 		odm_cmn_info_update(podmpriv, ODM_CMNINFO_WIFI_DISPLAY, bSet);
 		break;
-	case HAL_ODM_REGULATION:
-		/* used to auto enable/disable adaptivity by SD7 */
-		phydm_adaptivity_info_update(podmpriv, PHYDM_ADAPINFO_DOMAIN_CODE_2G, 0);
-		phydm_adaptivity_info_update(podmpriv, PHYDM_ADAPINFO_DOMAIN_CODE_5G, 0);
-		break;
 	case HAL_ODM_INITIAL_GAIN: {
 		u8 rx_gain = *((u8 *)(pValue1));
 		/*printk("rx_gain:%x\n",rx_gain);*/
@@ -1857,6 +1851,36 @@ void rtw_phydm_pwr_tracking_directly(_adapter *adapter)
 }
 #endif
 
+void rtw_phydm_update_ap_vendor_ie(_adapter *adapter)
+{
+	u8 i;
+	_adapter *iface;
+	struct mlme_ext_priv	*pmlmeext ;
+	struct mlme_ext_info	*pmlmeinfo ;
+	struct dm_struct *phydm = adapter_to_phydm(adapter);
+	struct dvobj_priv *dvobj = adapter_to_dvobj(adapter);
+	bool HUAWEI_HWID = FALSE;
+	bool ATHEROS_HWID = FALSE;
+
+	for (i = 0; i < dvobj->iface_nums; i++){
+		iface = dvobj->padapters[i];
+		if (iface!= NULL) {
+			pmlmeext = &(iface->mlmeextpriv);
+			pmlmeinfo = &(pmlmeext->mlmext_info);
+			if( pmlmeinfo->assoc_AP_vendor == HT_IOT_PEER_ATHEROS){
+				HUAWEI_HWID = TRUE;
+				ATHEROS_HWID = TRUE;
+				goto exit;
+			}
+		}
+	}
+
+exit:
+	RTW_INFO("%s ODM_CMNINFO_HUAWEI_HWID:%d ATHEROS_HWID:%d\n", __func__, HUAWEI_HWID, ATHEROS_HWID);
+	odm_cmn_info_update(phydm, ODM_CMNINFO_HUAWEI_HWID, HUAWEI_HWID);
+	odm_cmn_info_update(phydm, ODM_CMNINFO_ATHEROS_HWID, ATHEROS_HWID);
+}
+
 void rtw_phydm_watchdog(_adapter *adapter, bool in_lps)
 {
 	u8	bLinked = _FALSE;
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/hal_dm.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/hal_dm.h
index 237520eb7449..e7bb769694b9 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/hal_dm.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/hal_dm.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017 Realtek Corporation.
@@ -49,6 +48,7 @@ void rtw_dyn_soml_config(_adapter *adapter);
 #endif
 void rtw_phydm_set_rrsr(_adapter *adapter, u32 rrsr_value, bool write_rrsr);
 void rtw_phydm_dyn_rrsr_en(_adapter *adapter, bool en_rrsr);
+void rtw_phydm_update_ap_vendor_ie(_adapter *adapter);
 void rtw_phydm_watchdog(_adapter *adapter, bool in_lps);
 
 void rtw_hal_update_iqk_fw_offload_cap(_adapter *adapter);
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/hal_dm_acs.c b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/hal_dm_acs.c
index 831b38604f66..0fa341463092 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/hal_dm_acs.c
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/hal_dm_acs.c
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2014 - 2017 Realtek Corporation.
@@ -453,6 +452,36 @@ void rtw_acs_update_current_info(_adapter *adapter)
 	rtw_acs_current_info_dump(RTW_DBGDUMP, adapter);
 	#endif
 }
+/*
+rsni
+para1:rcpi=>RSSI in dbm
+para2:anpi=>nhm in dbm
+range:0~255
+255: is not available (defined by 802.11k spec)
+
+*/
+u8 rtw_acs_get_rsni(_adapter *adapter, s8 rcpi, u8 ch)
+{
+	struct dm_struct *phydm = adapter_to_phydm(adapter);
+	HAL_DATA_TYPE *hal_data = GET_HAL_DATA(adapter);
+	u8 rsni = 255;
+	s8 anpi = 0;
+	int chan_idx = -1;
+
+	if(ch == 0)
+		goto exit;
+
+	chan_idx = rtw_chset_search_ch(adapter_to_chset(adapter), ch);
+	if(chan_idx == -1)
+		goto exit;
+
+	anpi = rtw_acs_get_nhm_noise_pwr_by_ch_idx(adapter, chan_idx);
+	if((rcpi != 0) && (anpi != 0))
+	 	rsni = phydm_env_mntr_get_802_11_k_rsni(phydm, rcpi, anpi);
+	RTW_DBG("[ACS][RSNI]ch=%d chan_idx=%d RSNI=%u RSSI=%d NHM=%d\n", ch, chan_idx, rsni,rcpi, anpi);
+exit:
+	return rsni;
+}
 #endif /*CONFIG_RTW_ACS*/
 
 #ifdef CONFIG_BACKGROUND_NOISE_MONITOR
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/hal_dm_acs.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/hal_dm_acs.h
index 1ed0d99a3d35..f9620011bebd 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/hal_dm_acs.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/hal_dm_acs.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017 Realtek Corporation.
@@ -81,7 +80,7 @@ struct auto_chan_sel {
 	bool triggered;
 	u8 clm_ratio[MAX_CHANNEL_NUM];
 	u8 nhm_ratio[MAX_CHANNEL_NUM];
-	s8 env_mntr_rpt[MAX_CHANNEL_NUM];
+	s8 env_mntr_rpt[MAX_CHANNEL_NUM]; /*unit:dbm*/
 	#if (RTK_ACS_VERSION == 3)
 	u8 nhm[MAX_CHANNEL_NUM][NHM_RPT_NUM];
 	#endif
@@ -144,7 +143,7 @@ void rtw_acs_current_info_dump(void *sel, _adapter *adapter);
 
 void rtw_acs_start(_adapter *adapter);
 void rtw_acs_stop(_adapter *adapter);
-
+u8 rtw_acs_get_rsni(_adapter *adapter, s8 rcpi, u8 ch);
 #endif /*CONFIG_RTW_ACS*/
 
 #ifdef CONFIG_BACKGROUND_NOISE_MONITOR
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/hal_halmac.c b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/hal_halmac.c
index 15d2b0906ac1..2aa4b31db618 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/hal_halmac.c
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/hal_halmac.c
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2015 - 2019 Realtek Corporation.
@@ -629,7 +628,7 @@ static inline u8 is_valid_id_status(enum halmac_feature_id id, enum halmac_cmd_p
 		if (status == HALMAC_CMD_PROCESS_RCVD)
 			return _FALSE;
 		if ((status != HALMAC_CMD_PROCESS_DONE)
-		    || (status != HALMAC_CMD_PROCESS_ERROR))
+		    && (status != HALMAC_CMD_PROCESS_ERROR))
 			RTW_WARN("%s: %s unexpected status(0x%x)!\n",
 				 __FUNCTION__, RTW_HALMAC_FEATURE_NAME[id],
 				 status);
@@ -1210,8 +1209,8 @@ void rtw_halmac_get_version(char *str, u32 len)
 	if (status != HALMAC_RET_SUCCESS)
 		return;
 
-	rtw_sprintf(str, len, "V%d_%02d_%02d",
-		    ver.major_ver, ver.prototype_ver, ver.minor_ver);
+	rtw_sprintf(str, len, "V%d_%02d_%02d_%02d",
+		    ver.major_ver, ver.prototype_ver, ver.minor_ver, HALMAC_PATCH_VER);
 }
 
 int rtw_halmac_init_adapter(struct dvobj_priv *d, struct halmac_platform_api *pf_api)
@@ -2769,6 +2768,21 @@ int rtw_halmac_poweron(struct dvobj_priv *d)
 		 * Work around for warm reboot but device not power off,
 		 * but it would also fall into this case when auto power on is enabled.
 		 */
+#ifdef CONFIG_NARROWBAND_SUPPORTING
+		{
+			struct registry_priv *regsty = dvobj_to_regsty(d);
+			u32 bw_type;
+
+			if (regsty->rtw_nb_config == RTW_NB_CONFIG_WIDTH_10)
+				bw_type = HALMAC_BW_10;
+			else if (regsty->rtw_nb_config == RTW_NB_CONFIG_WIDTH_5)
+				bw_type = HALMAC_BW_5;
+			else
+				bw_type = HALMAC_BW_20;
+
+			api->halmac_set_hw_value(dvobj_to_halmac(d), HALMAC_HW_BANDWIDTH, &bw_type);
+		}
+#endif
 		_power_switch(halmac, api, HALMAC_MAC_POWER_OFF);
 		status = _power_switch(halmac, api, HALMAC_MAC_POWER_ON);
 		RTW_WARN("%s: Power state abnormal, try to recover...%s\n",
@@ -3109,7 +3123,7 @@ static int _send_general_info(struct dvobj_priv *d)
 	case HALMAC_RET_NO_DLFW:
 		RTW_WARN("%s: halmac_send_general_info() fail because fw not dl!\n",
 			 __FUNCTION__);
-		/* fall through */
+		fallthrough;
 	default:
 		return -1;
 	}
@@ -5319,7 +5333,7 @@ static int _halmac_scanoffload(struct dvobj_priv *d, u32 enable, u8 nlo,
 		if (ssid) {
 			if (ssid_len > sizeof(pnossid.SSID)) {
 				RTW_ERR("%s: SSID length(%d) is too long(>%d)!!\n",
-					__FUNCTION__, ssid_len, sizeof(pnossid.SSID));
+					__FUNCTION__, ssid_len, WLAN_SSID_MAXLEN);
 				return -1;
 			}
 
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/hal_halmac.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/hal_halmac.h
index 70670ca199bb..416141390cd8 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/hal_halmac.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/hal_halmac.h
@@ -1,7 +1,6 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
- * Copyright(c) 2015 - 2019 Realtek Corporation.
+ * Copyright(c) 2015 - 2021 Realtek Corporation.
  *
  * This program is free software; you can redistribute it and/or modify it
  * under the terms of version 2 of the GNU General Public License as
@@ -18,7 +17,11 @@
 
 #include <drv_types.h>		/* adapter_to_dvobj(), struct intf_hdl and etc. */
 #include <hal_data.h>		/* struct hal_spec_t */
+#ifdef CONFIG_HALMAC_RS
+#include "halmac-rs/halmac_api.h"	/* struct halmac_adapter* and etc. */
+#else /* !CONFIG_HALMAC_RS */
 #include "halmac/halmac_api.h"	/* struct halmac_adapter* and etc. */
+#endif /* !CONFIG_HALMAC_RS */
 
 /* HALMAC Definition for Driver */
 #define RTW_HALMAC_H2C_MAX_SIZE		8
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/hal_hci/hal_sdio.c b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/hal_hci/hal_sdio.c
index 70e1e08d1fbd..3e8be28d0436 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/hal_hci/hal_sdio.c
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/hal_hci/hal_sdio.c
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/hal_hci/hal_sdio_coex.c b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/hal_hci/hal_sdio_coex.c
index 818c03f7e8af..564e4089a737 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/hal_hci/hal_sdio_coex.c
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/hal_hci/hal_sdio_coex.c
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2013 Realtek Corporation. All rights reserved.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/hal_intf.c b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/hal_intf.c
index 32dde3f025bd..22033a68ea2d 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/hal_intf.c
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/hal_intf.c
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017 Realtek Corporation.
@@ -37,7 +36,7 @@ const u32 _chip_type_to_odm_ic_type[] = {
 	ODM_RTL8192F,
 	ODM_RTL8822C,
 	ODM_RTL8814B,
-/*	ODM_RTL8723F,  */
+	ODM_RTL8723F,
 	0,
 };
 
@@ -88,13 +87,12 @@ static void rtw_init_wireless_mode(_adapter *padapter)
 	struct hal_spec_t *hal_spec = GET_HAL_SPEC(padapter);
 	if(hal_spec->proto_cap & PROTO_CAP_11B)
 		proto_wireless_mode |= WIRELESS_11B;
-	
+
 	if(hal_spec->proto_cap & PROTO_CAP_11G)
 		proto_wireless_mode |= WIRELESS_11G;
-#ifdef CONFIG_80211AC_VHT
+
 	if(hal_spec->band_cap & BAND_CAP_5G)
 		proto_wireless_mode |= WIRELESS_11A;
-#endif
 
 #ifdef CONFIG_80211N_HT
 	if(hal_spec->proto_cap & PROTO_CAP_11N) {
@@ -897,6 +895,7 @@ s32	rtw_hal_mgnt_xmit(_adapter *padapter, struct xmit_frame *pmgntframe)
 		rtw_mgmt_xmitframe_coalesce(padapter, pmgntframe->pkt, pmgntframe);
 #endif
 
+#if defined(CONFIG_AP_MODE) || defined(CONFIG_TDLS)
 #ifdef CONFIG_RTW_MGMT_QUEUE
 	if (MLME_IS_AP(padapter) || MLME_IS_MESH(padapter)) {
 		_enter_critical_bh(&pxmitpriv->lock, &irqL);
@@ -912,6 +911,7 @@ s32	rtw_hal_mgnt_xmit(_adapter *padapter, struct xmit_frame *pmgntframe)
 		if (ret == RTW_QUEUE_MGMT)
 			return ret;
 	}
+#endif
 #endif
 
 	ret = padapter->hal_func.mgnt_xmit(padapter, pmgntframe);
@@ -1371,8 +1371,7 @@ s32 c2h_handler(_adapter *adapter, u8 id, u8 seq, u8 plen, u8 *payload)
 	case C2H_EXTEND:
 		sub_id = payload[0];
 		/* no handle, goto default */
-		/* fall through */
-
+		fallthrough;
 	default:
 		if (phydm_c2H_content_parsing(adapter_to_phydm(adapter), id, plen, payload) != TRUE)
 			ret = _FAIL;
@@ -1420,11 +1419,6 @@ s32 rtw_hal_c2h_id_handle_directly(_adapter *adapter, u8 id, u8 seq, u8 plen, u8
 }
 #endif /* !RTW_HALMAC */
 
-s32 rtw_hal_is_disable_sw_channel_plan(PADAPTER padapter)
-{
-	return GET_HAL_DATA(padapter)->bDisableSWChannelPlan;
-}
-
 #ifdef CONFIG_PROTSEL_MACSLEEP
 static s32 _rtw_hal_macid_sleep(_adapter *adapter, u8 macid, u8 sleep)
 {
@@ -1964,9 +1958,31 @@ void rtw_hal_set_tx_power_level(_adapter *adapter, u8 channel)
 void rtw_hal_update_txpwr_level(_adapter *adapter)
 {
 	HAL_DATA_TYPE *hal_data = GET_HAL_DATA(adapter);
+#ifdef CONFIG_ACTIVE_TPC_REPORT
+	struct dvobj_priv *dvobj = adapter_to_dvobj(adapter);
+	int i;
+#endif
 
 	rtw_hal_set_tx_power_level(adapter, hal_data->current_channel);
 	rtw_rfctl_update_op_mode(adapter_to_rfctl(adapter), 0, 0);
+
+#ifdef CONFIG_ACTIVE_TPC_REPORT
+	for (i = 0; i < dvobj->iface_nums; i++) {
+		struct mlme_priv *mlme;
+
+		if (!dvobj->padapters[i])
+			continue;
+		if (!CHK_MLME_STATE(dvobj->padapters[i], WIFI_AP_STATE | WIFI_MESH_STATE)
+			|| !MLME_IS_ASOC(dvobj->padapters[i]) || MLME_IS_OPCH_SW(dvobj->padapters[i]))
+			continue;
+		if (dvobj->padapters[i]->mlmeextpriv.bstart_bss != _TRUE)
+			continue;
+
+		mlme = &(dvobj->padapters[i]->mlmepriv);
+		if (MLME_ACTIVE_TPC_REPORT(mlme))
+			update_beacon(dvobj->padapters[i], WLAN_EID_TPC_REPORT, NULL, 1, 0);
+	}
+#endif
 }
 
 void rtw_hal_set_txpwr_done(_adapter *adapter)
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/hal_mcc.c b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/hal_mcc.c
index ac9893f6a4f7..904321817e41 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/hal_mcc.c
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/hal_mcc.c
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2015 - 2017 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/hal_mp.c b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/hal_mp.c
index 1d000d9930c0..3a98afecdfa3 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/hal_mp.c
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/hal_mp.c
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017 Realtek Corporation.
@@ -181,7 +180,7 @@ void hal_mpt_CCKTxPowerAdjust(PADAPTER Adapter, BOOLEAN bInCH14)
 	} else if (IS_HARDWARE_TYPE_8723D(Adapter)) {
 		/* 2.4G CCK TX DFIR */
 		/* 2016.01.20 Suggest from RS BB mingzhi*/
-		if (u1Channel == 14) {
+		if ((u1Channel == 14)) {
 			phy_set_bb_reg(Adapter, rCCK0_TxFilter2, bMaskDWord, 0x0000B81C);
 			phy_set_bb_reg(Adapter, rCCK0_DebugPort, bMaskDWord, 0x00000000);
 			phy_set_bb_reg(Adapter, 0xAAC, bMaskDWord, 0x00003667);
@@ -441,7 +440,7 @@ mpt_SetTxPower(
 		EndPath = RF_PATH_D;
 		tx_nss = 4;
 	} else if (IS_HARDWARE_TYPE_8188F(pAdapter) || IS_HARDWARE_TYPE_8188GTV(pAdapter)
-		|| IS_HARDWARE_TYPE_8723D(pAdapter) || IS_HARDWARE_TYPE_8821C(pAdapter)) {
+		|| IS_HARDWARE_TYPE_8723D(pAdapter) || IS_HARDWARE_TYPE_8821C(pAdapter) || IS_HARDWARE_TYPE_8723F(pAdapter)) {
 		EndPath = RF_PATH_A;
 		tx_nss = 1;
 	}
@@ -603,6 +602,33 @@ void hal_mpt_SetDataRate(PADAPTER pAdapter)
 #endif
 }
 
+u32 hal_mpt_tssi_turn_target_power(PADAPTER padapter, s16 power_offset, u8 path)
+{
+	HAL_DATA_TYPE	*pHalData = GET_HAL_DATA(padapter);
+	struct dm_struct	*pdm = &pHalData->odmpriv;
+	u32 pout = 0;
+
+#ifdef CONFIG_RTL8723F
+	pout = halrf_tssi_turn_target_power(pdm, power_offset, path);
+#endif
+	RTW_INFO("%s()===> pout %d\n", __func__, pout);
+
+	return pout;
+}
+
+void hal_mpt_tssi_set_power_offset(PADAPTER padapter, s16 power_offset, u8 path)
+{
+	HAL_DATA_TYPE	*pHalData = GET_HAL_DATA(padapter);
+	struct dm_struct	*pdm = &pHalData->odmpriv;
+
+#ifdef CONFIG_RTL8723F
+	halrf_tssi_set_power_offset(pdm, power_offset, path);
+#endif
+	RTW_INFO("%s()===>  path%d = %d\n", __func__, path, power_offset);
+
+	return;
+}
+
 #define RF_PATH_AB	22
 
 #ifdef CONFIG_RTL8814A
@@ -963,7 +989,7 @@ mpt_SetSingleTone_8814A(
 		phy_set_bb_reg(pAdapter, rCCAonSec_Jaguar, BIT1, 0x0); /* Enable CCA*/
 
 		if (bEnPMacTx == FALSE) {
-			if(IS_HARDWARE_TYPE_JAGUAR3(pAdapter)) {
+			if (IS_HARDWARE_TYPE_JAGUAR3(pAdapter) || IS_HARDWARE_TYPE_JAGUAR3_11N(pAdapter)) {
 #ifdef	PHYDM_MP_SUPPORT
 					phydm_stop_ofdm_cont_tx(pAdapter);
 					pMptCtx->bCckContTx = FALSE;
@@ -1579,6 +1605,12 @@ void hal_mpt_SetAntenna(PADAPTER	pAdapter)
 	tx_path_nss_set_full_tx(hal->txpath_nss, hal->txpath_num_nss, bb_tx);
 	RTW_INFO("%s ,ant idx %d, tx path_num_nss = %d\n", __func__, anttx, hal->txpath_num_nss[0]);
 
+#ifdef CONFIG_RTL8723F
+		if (IS_HARDWARE_TYPE_8723F(pAdapter)) {
+			rtl8723f_mp_config_rfpath(pAdapter);
+			return;
+		}
+#endif
 #ifdef CONFIG_RTL8822C
 	if (IS_HARDWARE_TYPE_8822C(pAdapter)) {
 		rtl8822c_mp_config_rfpath(pAdapter);
@@ -1677,7 +1709,7 @@ s32 hal_mpt_SetThermalMeter(PADAPTER pAdapter, u8 target_ther)
 
 void hal_mpt_TriggerRFThermalMeter(PADAPTER pAdapter)
 {
-	if (IS_HARDWARE_TYPE_JAGUAR3(pAdapter)) {
+	if (IS_HARDWARE_TYPE_JAGUAR3(pAdapter) || IS_HARDWARE_TYPE_JAGUAR3_11N(pAdapter)) {
 		phy_set_rf_reg(pAdapter, RF_PATH_A, 0x42, BIT19, 0x1);
 		phy_set_rf_reg(pAdapter, RF_PATH_A, 0x42, BIT19, 0x0);
 		phy_set_rf_reg(pAdapter, RF_PATH_A, 0x42, BIT19, 0x1);
@@ -1697,7 +1729,7 @@ u8 hal_mpt_ReadRFThermalMeter(PADAPTER pAdapter, u8 rf_path)
 	s8 thermal_offset = 0;
 	u32 thermal_reg_mask = 0;
 
-	if (IS_8822C_SERIES(GET_HAL_DATA(pAdapter)->version_id))
+	if (IS_8822C_SERIES(GET_HAL_DATA(pAdapter)->version_id) || IS_8723F_SERIES(GET_HAL_DATA(pAdapter)->version_id))
 			thermal_reg_mask = 0x007e; 	/*0x42: RF Reg[6:1], 35332(themal K  & bias k & power trim) & 35325(tssi )*/
 	else
 			thermal_reg_mask = 0xfc00;	/*0x42: RF Reg[15:10]*/
@@ -1754,8 +1786,9 @@ void hal_mpt_SetSingleCarrierTx(PADAPTER pAdapter, u8 bStart)
 		phy_set_bb_reg(pAdapter, rCCK0_System, bCCKScramble, 1);
 
 		/*/ 4. Turn On Continue Tx and turn off the other test modes.*/
-#if defined(CONFIG_RTL8812A) || defined(CONFIG_RTL8821A) || defined(CONFIG_RTL8814A) || defined(CONFIG_RTL8822B) || defined(CONFIG_RTL8821C)
-		if (IS_HARDWARE_TYPE_JAGUAR_ALL(pAdapter))
+#if defined(CONFIG_RTL8812A) || defined(CONFIG_RTL8821A) || defined(CONFIG_RTL8814A)\
+	|| defined(CONFIG_RTL8822B) || defined(CONFIG_RTL8821C) || defined(CONFIG_RTL8723F)
+		if (IS_HARDWARE_TYPE_JAGUAR_ALL(pAdapter) || IS_HARDWARE_TYPE_JAGUAR3_11N(pAdapter))
 			phy_set_bb_reg(pAdapter, rSingleTone_ContTx_Jaguar, BIT18 | BIT17 | BIT16, OFDM_SingleCarrier);
 		else
 #endif /* CONFIG_RTL8812A || CONFIG_RTL8821A || CONFIG_RTL8814A || CONFIG_RTL8822B || CONFIG_RTL8821C */
@@ -1765,8 +1798,9 @@ void hal_mpt_SetSingleCarrierTx(PADAPTER pAdapter, u8 bStart)
 		/*/ Stop Single Carrier.*/
 		/*/ Stop Single Carrier.*/
 		/*/ Turn off all test modes.*/
-#if defined(CONFIG_RTL8812A) || defined(CONFIG_RTL8821A) || defined(CONFIG_RTL8814A) || defined(CONFIG_RTL8822B) || defined(CONFIG_RTL8821C)
-		if (IS_HARDWARE_TYPE_JAGUAR_ALL(pAdapter))
+#if defined(CONFIG_RTL8812A) || defined(CONFIG_RTL8821A) || defined(CONFIG_RTL8814A) || defined(CONFIG_RTL8822B)\
+	|| defined(CONFIG_RTL8821C) || defined(CONFIG_RTL8723F)
+		if (IS_HARDWARE_TYPE_JAGUAR_ALL(pAdapter)|| IS_HARDWARE_TYPE_JAGUAR3_11N(pAdapter))
 			phy_set_bb_reg(pAdapter, rSingleTone_ContTx_Jaguar, BIT18 | BIT17 | BIT16, OFDM_ALL_OFF);
 		else
 #endif /* CONFIG_RTL8812A || CONFIG_RTL8821A || CONFIG_RTL8814A || CONFIG_RTL8822B || CONFIG_RTL8821C */
@@ -1789,7 +1823,7 @@ void hal_mpt_SetSingleToneTx(PADAPTER pAdapter, u8 bStart)
 	static u32		regRF = 0, regBB0 = 0, regBB1 = 0, regBB2 = 0, regBB3 = 0;
 	u8 rfPath;
 
-	if (IS_HARDWARE_TYPE_JAGUAR3(pAdapter)) {
+	if (IS_HARDWARE_TYPE_JAGUAR3(pAdapter) || IS_HARDWARE_TYPE_JAGUAR3_11N(pAdapter)) {
 #ifdef	PHYDM_MP_SUPPORT
 #ifdef CONFIG_RTL8814B
 		if(pHalData->current_channel_bw == CHANNEL_WIDTH_80_80)
@@ -2059,7 +2093,7 @@ void hal_mpt_SetCarrierSuppressionTx(PADAPTER pAdapter, u8 bStart)
 
 	pAdapter->mppriv.mpt_ctx.is_carrier_suppression = bStart;
 
-	if (IS_HARDWARE_TYPE_JAGUAR3(pAdapter)) {
+	if (IS_HARDWARE_TYPE_JAGUAR3(pAdapter) || IS_HARDWARE_TYPE_JAGUAR3_11N(pAdapter)) {
 #ifdef PHYDM_MP_SUPPORT
 		phydm_mp_set_carrier_supp(pdm_odm, bStart, pAdapter->mppriv.rateidx);
 #endif
@@ -2074,7 +2108,7 @@ void hal_mpt_SetCarrierSuppressionTx(PADAPTER pAdapter, u8 bStart)
 				write_bbreg(pAdapter, rFPGA0_RFMOD, bCCKEn, bEnable);/*set CCK block on*/
 
 			/*/Turn Off All Test Mode*/
-			if (IS_HARDWARE_TYPE_JAGUAR_ALL(pAdapter))
+			if (IS_HARDWARE_TYPE_JAGUAR_ALL(pAdapter) || IS_HARDWARE_TYPE_JAGUAR3_11N(pAdapter))
 				phy_set_bb_reg(pAdapter, 0x914, BIT18 | BIT17 | BIT16, OFDM_ALL_OFF); /* rSingleTone_ContTx_Jaguar*/
 			else
 				phy_set_bb_reg(pAdapter, rOFDM1_LSTF, BIT30 | BIT29 | BIT28, OFDM_ALL_OFF);
@@ -2118,7 +2152,7 @@ u32 hal_mpt_query_phytxok(PADAPTER	pAdapter)
 	struct dm_struct *dm = (struct dm_struct *)&pHalData->odmpriv;
 	struct phydm_mp *mp = &dm->dm_mp_table;
 
-	if (IS_HARDWARE_TYPE_JAGUAR3(pAdapter)) {
+	if (IS_HARDWARE_TYPE_JAGUAR3(pAdapter) || IS_HARDWARE_TYPE_JAGUAR3_11N(pAdapter)) {
 		phydm_mp_get_tx_ok(&pHalData->odmpriv, pAdapter->mppriv.rateidx);
 		count = mp->tx_phy_ok_cnt;
 
@@ -2156,7 +2190,7 @@ static	void mpt_StopCckContTx(
 	phy_set_bb_reg(pAdapter, rCCK0_System, bCCKBBMode, 0x0);	/*normal mode*/
 	phy_set_bb_reg(pAdapter, rCCK0_System, bCCKScramble, 0x1);	/*turn on scramble setting*/
 
-	if (!IS_HARDWARE_TYPE_JAGUAR_ALL(pAdapter)) {
+	if (!IS_HARDWARE_TYPE_JAGUAR_ALL(pAdapter) && !IS_HARDWARE_TYPE_JAGUAR3_11N(pAdapter)) {
 		phy_set_bb_reg(pAdapter, 0xa14, 0x300, 0x0);			/* 0xa15[1:0] = 2b00*/
 		phy_set_bb_reg(pAdapter, rOFDM0_TRMuxPar, 0x10000, 0x0);		/* 0xc08[16] = 0*/
 
@@ -2169,9 +2203,11 @@ static	void mpt_StopCckContTx(
 	phy_set_bb_reg(pAdapter, rPMAC_Reset, bBBResetB, 0x0);
 	phy_set_bb_reg(pAdapter, rPMAC_Reset, bBBResetB, 0x1);
 
-	if (!IS_HARDWARE_TYPE_JAGUAR_ALL(pAdapter)) {
-	phy_set_bb_reg(pAdapter, rFPGA0_XA_HSSIParameter1, bMaskDWord, 0x01000100);
-	phy_set_bb_reg(pAdapter, rFPGA0_XB_HSSIParameter1, bMaskDWord, 0x01000100);
+	if (!IS_HARDWARE_TYPE_JAGUAR_ALL(pAdapter) && !IS_HARDWARE_TYPE_JAGUAR3_11N(pAdapter)
+		&& !IS_HARDWARE_TYPE_8723D(pAdapter) && !IS_HARDWARE_TYPE_8192F(pAdapter)
+		&& !IS_HARDWARE_TYPE_8188F(pAdapter)) {
+		phy_set_bb_reg(pAdapter, rFPGA0_XA_HSSIParameter1, bMaskDWord, 0x01000100);
+		phy_set_bb_reg(pAdapter, rFPGA0_XB_HSSIParameter1, bMaskDWord, 0x01000100);
 	}
 
 	if (IS_HARDWARE_TYPE_8188E(pAdapter) || IS_HARDWARE_TYPE_8723B(pAdapter) ||
@@ -2196,14 +2232,14 @@ static	void mpt_StopOfdmContTx(
 	pMptCtx->bCckContTx = FALSE;
 	pMptCtx->bOfdmContTx = FALSE;
 
-	if (IS_HARDWARE_TYPE_JAGUAR_ALL(pAdapter))
+	if (IS_HARDWARE_TYPE_JAGUAR_ALL(pAdapter) || IS_HARDWARE_TYPE_JAGUAR3_11N(pAdapter))
 		phy_set_bb_reg(pAdapter, 0x914, BIT18 | BIT17 | BIT16, OFDM_ALL_OFF);
 	else
 		phy_set_bb_reg(pAdapter, rOFDM1_LSTF, BIT30 | BIT29 | BIT28, OFDM_ALL_OFF);
 
 	rtw_mdelay_os(10);
 
-	if (!IS_HARDWARE_TYPE_JAGUAR_ALL(pAdapter)){
+	if (!IS_HARDWARE_TYPE_JAGUAR_ALL(pAdapter) && !IS_HARDWARE_TYPE_JAGUAR3_11N(pAdapter)){
 		phy_set_bb_reg(pAdapter, 0xa14, 0x300, 0x0);			/* 0xa15[1:0] = 0*/
 		phy_set_bb_reg(pAdapter, rOFDM0_TRMuxPar, 0x10000, 0x0);		/* 0xc08[16] = 0*/
 	}
@@ -2212,9 +2248,11 @@ static	void mpt_StopOfdmContTx(
 	phy_set_bb_reg(pAdapter, rPMAC_Reset, bBBResetB, 0x0);
 	phy_set_bb_reg(pAdapter, rPMAC_Reset, bBBResetB, 0x1);
 
-	if (!IS_HARDWARE_TYPE_JAGUAR_ALL(pAdapter)) {
-	phy_set_bb_reg(pAdapter, rFPGA0_XA_HSSIParameter1, bMaskDWord, 0x01000100);
-	phy_set_bb_reg(pAdapter, rFPGA0_XB_HSSIParameter1, bMaskDWord, 0x01000100);
+	if (!IS_HARDWARE_TYPE_JAGUAR_ALL(pAdapter) && !IS_HARDWARE_TYPE_JAGUAR3_11N(pAdapter)
+		&& !IS_HARDWARE_TYPE_8723D(pAdapter) && !IS_HARDWARE_TYPE_8192F(pAdapter)
+		&& !IS_HARDWARE_TYPE_8188F(pAdapter)) {
+		phy_set_bb_reg(pAdapter, rFPGA0_XA_HSSIParameter1, bMaskDWord, 0x01000100);
+		phy_set_bb_reg(pAdapter, rFPGA0_XB_HSSIParameter1, bMaskDWord, 0x01000100);
 	}
 }	/* mpt_StopOfdmContTx */
 
@@ -2232,7 +2270,7 @@ static	void mpt_StartCckContTx(
 		phy_set_bb_reg(pAdapter, rFPGA0_RFMOD, bCCKEn, 1);/*set CCK block on*/
 
 	/*Turn Off All Test Mode*/
-	if (IS_HARDWARE_TYPE_JAGUAR_ALL(pAdapter))
+	if (IS_HARDWARE_TYPE_JAGUAR_ALL(pAdapter) || IS_HARDWARE_TYPE_JAGUAR3_11N(pAdapter))
 		phy_set_bb_reg(pAdapter, 0x914, BIT18 | BIT17 | BIT16, OFDM_ALL_OFF);
 	else
 		phy_set_bb_reg(pAdapter, rOFDM1_LSTF, BIT30 | BIT29 | BIT28, OFDM_ALL_OFF);
@@ -2244,7 +2282,7 @@ static	void mpt_StartCckContTx(
 	phy_set_bb_reg(pAdapter, rCCK0_System, bCCKBBMode, 0x2);	/*transmit mode*/
 	phy_set_bb_reg(pAdapter, rCCK0_System, bCCKScramble, 0x1);	/*turn on scramble setting*/
 
-	if (!IS_HARDWARE_TYPE_JAGUAR_ALL(pAdapter)) {
+	if (!IS_HARDWARE_TYPE_JAGUAR_ALL(pAdapter) && !IS_HARDWARE_TYPE_JAGUAR3_11N(pAdapter)) {
 		phy_set_bb_reg(pAdapter, 0xa14, 0x300, 0x3);			/* 0xa15[1:0] = 11 force cck rxiq = 0*/
 		phy_set_bb_reg(pAdapter, rOFDM0_TRMuxPar, 0x10000, 0x1);		/* 0xc08[16] = 1 force ofdm rxiq = ofdm txiq*/
 		phy_set_bb_reg(pAdapter, rFPGA0_XA_HSSIParameter2, BIT14, 1);
@@ -2252,7 +2290,9 @@ static	void mpt_StartCckContTx(
 		phy_set_bb_reg(pAdapter, 0x0B34, BIT14, 1);
 	}
 
-	if (!IS_HARDWARE_TYPE_JAGUAR_ALL(pAdapter)) {
+	if (!IS_HARDWARE_TYPE_JAGUAR_ALL(pAdapter) && !IS_HARDWARE_TYPE_JAGUAR3_11N(pAdapter)
+		&& !IS_HARDWARE_TYPE_8723D(pAdapter) && !IS_HARDWARE_TYPE_8192F(pAdapter)
+		&& !IS_HARDWARE_TYPE_8188F(pAdapter)) {
 		phy_set_bb_reg(pAdapter, rFPGA0_XA_HSSIParameter1, bMaskDWord, 0x01000500);
 		phy_set_bb_reg(pAdapter, rFPGA0_XB_HSSIParameter1, bMaskDWord, 0x01000500);
 	}
@@ -2290,18 +2330,20 @@ static	void mpt_StartOfdmContTx(
 	/* 3. turn on scramble setting*/
 	phy_set_bb_reg(pAdapter, rCCK0_System, bCCKScramble, 1);
 
-	if (!IS_HARDWARE_TYPE_JAGUAR_ALL(pAdapter)) {
+	if (!IS_HARDWARE_TYPE_JAGUAR_ALL(pAdapter) && !IS_HARDWARE_TYPE_JAGUAR3_11N(pAdapter)) {
 		phy_set_bb_reg(pAdapter, 0xa14, 0x300, 0x3);			/* 0xa15[1:0] = 2b'11*/
 		phy_set_bb_reg(pAdapter, rOFDM0_TRMuxPar, 0x10000, 0x1);		/* 0xc08[16] = 1*/
 	}
 
 	/* 4. Turn On Continue Tx and turn off the other test modes.*/
-	if (IS_HARDWARE_TYPE_JAGUAR_ALL(pAdapter))
+	if (IS_HARDWARE_TYPE_JAGUAR_ALL(pAdapter) || IS_HARDWARE_TYPE_JAGUAR3_11N(pAdapter))
 		phy_set_bb_reg(pAdapter, 0x914, BIT18 | BIT17 | BIT16, OFDM_ContinuousTx);
 	else
 		phy_set_bb_reg(pAdapter, rOFDM1_LSTF, BIT30 | BIT29 | BIT28, OFDM_ContinuousTx);
 
-	if (!IS_HARDWARE_TYPE_JAGUAR_ALL(pAdapter)) {
+	if (!IS_HARDWARE_TYPE_JAGUAR_ALL(pAdapter) && !IS_HARDWARE_TYPE_JAGUAR3_11N(pAdapter)
+		&& !IS_HARDWARE_TYPE_8723D(pAdapter) && !IS_HARDWARE_TYPE_8192F(pAdapter)
+		&& !IS_HARDWARE_TYPE_8188F(pAdapter)) {
 		phy_set_bb_reg(pAdapter, rFPGA0_XA_HSSIParameter1, bMaskDWord, 0x01000500);
 		phy_set_bb_reg(pAdapter, rFPGA0_XB_HSSIParameter1, bMaskDWord, 0x01000500);
 	}
@@ -2332,6 +2374,11 @@ static void mpt_convert_phydm_txinfo_for_jaguar3(
 	phydmtxinfo->signal_field = pMacTxInfo->SignalField;
 	phydmtxinfo->service_field = pMacTxInfo->ServiceField;
 	phydmtxinfo->length = pMacTxInfo->LENGTH;
+#if defined(CONFIG_RTL8723F)
+	if (IS_MPT_CCK_RATE(pMacTxInfo->TX_RATE))
+		phydmtxinfo->service_field_bit2= 0x1;
+	phydmtxinfo->packet_length = pMacTxInfo->PacketLength;
+#endif
 	_rtw_memcpy(&phydmtxinfo->crc16,pMacTxInfo->CRC16, 2);
 	_rtw_memcpy(&phydmtxinfo->lsig , pMacTxInfo->LSIG,3);
 	_rtw_memcpy(&phydmtxinfo->ht_sig , pMacTxInfo->HT_SIG,6);
@@ -2395,20 +2442,33 @@ u8 mpt_ProSetPMacTx(PADAPTER	Adapter)
 	else
 		PMacTxInfo.BandWidth = CHANNEL_WIDTH_20;
 
-	if (IS_HARDWARE_TYPE_JAGUAR3(Adapter)) {
+	if (IS_HARDWARE_TYPE_JAGUAR3(Adapter) || IS_HARDWARE_TYPE_JAGUAR3_11N(Adapter)) {
 #ifdef PHYDM_PMAC_TX_SETTING_SUPPORT
 		struct phydm_pmac_info phydm_mactxinfo;
 
 		if (PMacTxInfo.bEnPMacTx == TRUE) {
 			pMptCtx->HWTxmode = PMacTxInfo.Mode;
 			pMptCtx->mpt_rate_index = PMacTxInfo.TX_RATE;
-			if (PMacTxInfo.Mode == CONTINUOUS_TX)
+			if (PMacTxInfo.Mode != PACKETS_TX) 
 				hal_mpt_SetTxPower(Adapter);
 		} else {
 			PMacTxInfo.Mode = pMptCtx->HWTxmode;
 			PMacTxInfo.TX_RATE = pMptCtx->mpt_rate_index;
 			pMptCtx->HWTxmode = TEST_NONE;
 		}
+		if (PMacTxInfo.Mode == OFDM_Single_Tone_TX) {
+			phydm_mp_set_single_tone(p_dm_odm, PMacTxInfo.bEnPMacTx ,pMptCtx->mpt_rf_path);
+			RTW_INFO("To set Tx mode OFDM_Single_Tone_TX\n");
+			return status;
+		}
+
+		if (PMacTxInfo.Mode == CCK_Carrier_Suppression_TX) {
+			phydm_mp_set_carrier_supp(p_dm_odm, PMacTxInfo.bEnPMacTx ,PMacTxInfo.TX_RATE);
+			
+			RTW_INFO("To set Tx mode CCK_Carrier_Suppression_TX\n");
+			return status;
+		}
+
 		mpt_convert_phydm_txinfo_for_jaguar3(&PMacTxInfo, &phydm_mactxinfo);
 		phydm_set_pmac_tx(p_dm_odm, &phydm_mactxinfo, pMptCtx->mpt_rf_path);
 #endif
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/hal_phy.c b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/hal_phy.c
index ae806ececf3a..cf5cb3b5470f 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/hal_phy.c
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/hal_phy.c
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_2_platform.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_2_platform.h
index 99220a2635aa..5ba8591b8d8b 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_2_platform.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_2_platform.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2015 - 2018 Realtek Corporation. All rights reserved.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_88xx/halmac_8821c/halmac_8821c_cfg.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_88xx/halmac_8821c/halmac_8821c_cfg.h
index 1ef547c36f64..629d4dfdd0be 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_88xx/halmac_8821c/halmac_8821c_cfg.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_88xx/halmac_8821c/halmac_8821c_cfg.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2016 - 2019 Realtek Corporation. All rights reserved.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_88xx/halmac_8821c/halmac_cfg_wmac_8821c.c b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_88xx/halmac_8821c/halmac_cfg_wmac_8821c.c
index ee9418b8f348..08ae7a2c8e3f 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_88xx/halmac_8821c/halmac_cfg_wmac_8821c.c
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_88xx/halmac_8821c/halmac_cfg_wmac_8821c.c
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2017 - 2019 Realtek Corporation. All rights reserved.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_88xx/halmac_8821c/halmac_cfg_wmac_8821c.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_88xx/halmac_8821c/halmac_cfg_wmac_8821c.h
index 8fd26beb3f5e..2e0d6b913665 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_88xx/halmac_8821c/halmac_cfg_wmac_8821c.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_88xx/halmac_8821c/halmac_cfg_wmac_8821c.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2017 - 2019 Realtek Corporation. All rights reserved.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_88xx/halmac_8821c/halmac_common_8821c.c b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_88xx/halmac_8821c/halmac_common_8821c.c
index bdcf71bc3ac9..701d298f7cd8 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_88xx/halmac_8821c/halmac_common_8821c.c
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_88xx/halmac_8821c/halmac_common_8821c.c
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2017 - 2019 Realtek Corporation. All rights reserved.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_88xx/halmac_8821c/halmac_common_8821c.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_88xx/halmac_8821c/halmac_common_8821c.h
index 3c5b93ffe25f..2f22a2a0ed92 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_88xx/halmac_8821c/halmac_common_8821c.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_88xx/halmac_8821c/halmac_common_8821c.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2017 - 2019 Realtek Corporation. All rights reserved.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_88xx/halmac_8821c/halmac_gpio_8821c.c b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_88xx/halmac_8821c/halmac_gpio_8821c.c
index 6fc9b91e30e4..f552d8cc87d6 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_88xx/halmac_8821c/halmac_gpio_8821c.c
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_88xx/halmac_8821c/halmac_gpio_8821c.c
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2016 - 2019 Realtek Corporation. All rights reserved.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_88xx/halmac_8821c/halmac_gpio_8821c.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_88xx/halmac_8821c/halmac_gpio_8821c.h
index 48981f34ee75..6c9ac478bb0d 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_88xx/halmac_8821c/halmac_gpio_8821c.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_88xx/halmac_8821c/halmac_gpio_8821c.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2016 - 2019 Realtek Corporation. All rights reserved.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_88xx/halmac_8821c/halmac_init_8821c.c b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_88xx/halmac_8821c/halmac_init_8821c.c
index 3a8f0825de60..4c832cccca22 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_88xx/halmac_8821c/halmac_init_8821c.c
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_88xx/halmac_8821c/halmac_init_8821c.c
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2016 - 2019 Realtek Corporation. All rights reserved.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_88xx/halmac_8821c/halmac_init_8821c.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_88xx/halmac_8821c/halmac_init_8821c.h
index c4a09fdd5d59..d37c90018200 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_88xx/halmac_8821c/halmac_init_8821c.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_88xx/halmac_8821c/halmac_init_8821c.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2016 - 2019 Realtek Corporation. All rights reserved.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_88xx/halmac_8821c/halmac_phy_8821c.c b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_88xx/halmac_8821c/halmac_phy_8821c.c
index 9c93fb84c6c9..e03e5073e6b9 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_88xx/halmac_8821c/halmac_phy_8821c.c
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_88xx/halmac_8821c/halmac_phy_8821c.c
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2016 - 2019 Realtek Corporation. All rights reserved.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_88xx/halmac_8821c/halmac_pwr_seq_8821c.c b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_88xx/halmac_8821c/halmac_pwr_seq_8821c.c
index 8d421751d87d..5a578fc03ea4 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_88xx/halmac_8821c/halmac_pwr_seq_8821c.c
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_88xx/halmac_8821c/halmac_pwr_seq_8821c.c
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2016 - 2019 Realtek Corporation. All rights reserved.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_88xx/halmac_8821c/halmac_pwr_seq_8821c.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_88xx/halmac_8821c/halmac_pwr_seq_8821c.h
index a5086f3c273b..96b8e17f705d 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_88xx/halmac_8821c/halmac_pwr_seq_8821c.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_88xx/halmac_8821c/halmac_pwr_seq_8821c.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2016 - 2019 Realtek Corporation. All rights reserved.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_88xx/halmac_8821c/halmac_sdio_8821c.c b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_88xx/halmac_8821c/halmac_sdio_8821c.c
index 0ccda2de554c..3141e29e1771 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_88xx/halmac_8821c/halmac_sdio_8821c.c
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_88xx/halmac_8821c/halmac_sdio_8821c.c
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2016 - 2019 Realtek Corporation. All rights reserved.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_88xx/halmac_8821c/halmac_sdio_8821c.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_88xx/halmac_8821c/halmac_sdio_8821c.h
index 757c727c8ff1..6f4e0e6b9a80 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_88xx/halmac_8821c/halmac_sdio_8821c.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_88xx/halmac_8821c/halmac_sdio_8821c.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2016 - 2019 Realtek Corporation. All rights reserved.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_88xx/halmac_88xx_cfg.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_88xx/halmac_88xx_cfg.h
index 3287d2e01d85..814e865ac400 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_88xx/halmac_88xx_cfg.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_88xx/halmac_88xx_cfg.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2016 - 2019 Realtek Corporation. All rights reserved.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_88xx/halmac_bb_rf_88xx.c b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_88xx/halmac_bb_rf_88xx.c
index 8d9dfa23a95c..245f424bee91 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_88xx/halmac_bb_rf_88xx.c
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_88xx/halmac_bb_rf_88xx.c
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2016 - 2019 Realtek Corporation. All rights reserved.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_88xx/halmac_bb_rf_88xx.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_88xx/halmac_bb_rf_88xx.h
index c051329a7e38..1aa23868a7c7 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_88xx/halmac_bb_rf_88xx.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_88xx/halmac_bb_rf_88xx.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2016 - 2019 Realtek Corporation. All rights reserved.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_88xx/halmac_cfg_wmac_88xx.c b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_88xx/halmac_cfg_wmac_88xx.c
index f5d8d50570f8..053a552d5511 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_88xx/halmac_cfg_wmac_88xx.c
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_88xx/halmac_cfg_wmac_88xx.c
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2016 - 2019 Realtek Corporation. All rights reserved.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_88xx/halmac_cfg_wmac_88xx.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_88xx/halmac_cfg_wmac_88xx.h
index 8fe4c4127cd4..ac46d8ccad5d 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_88xx/halmac_cfg_wmac_88xx.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_88xx/halmac_cfg_wmac_88xx.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2016 - 2019 Realtek Corporation. All rights reserved.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_88xx/halmac_common_88xx.c b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_88xx/halmac_common_88xx.c
index dbe735de4397..885be219cc84 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_88xx/halmac_common_88xx.c
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_88xx/halmac_common_88xx.c
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2016 - 2019 Realtek Corporation. All rights reserved.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_88xx/halmac_common_88xx.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_88xx/halmac_common_88xx.h
index 9484fbf97d77..c641dd7e0438 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_88xx/halmac_common_88xx.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_88xx/halmac_common_88xx.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2016 - 2019 Realtek Corporation. All rights reserved.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_88xx/halmac_efuse_88xx.c b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_88xx/halmac_efuse_88xx.c
index 34adf940320d..184c2df5f6f2 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_88xx/halmac_efuse_88xx.c
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_88xx/halmac_efuse_88xx.c
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2016 - 2019 Realtek Corporation. All rights reserved.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_88xx/halmac_efuse_88xx.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_88xx/halmac_efuse_88xx.h
index 168ad7ef5b4a..0e20f2b0107c 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_88xx/halmac_efuse_88xx.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_88xx/halmac_efuse_88xx.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2016 - 2019 Realtek Corporation. All rights reserved.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_88xx/halmac_flash_88xx.c b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_88xx/halmac_flash_88xx.c
index a1d62b3e5af6..cfdf006b5b87 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_88xx/halmac_flash_88xx.c
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_88xx/halmac_flash_88xx.c
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2017 - 2019 Realtek Corporation. All rights reserved.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_88xx/halmac_flash_88xx.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_88xx/halmac_flash_88xx.h
index 6316ad06c892..1f0abd1e0b85 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_88xx/halmac_flash_88xx.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_88xx/halmac_flash_88xx.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2017 - 2019 Realtek Corporation. All rights reserved.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_88xx/halmac_fw_88xx.c b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_88xx/halmac_fw_88xx.c
index 66b5ac38a734..d170be733f1f 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_88xx/halmac_fw_88xx.c
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_88xx/halmac_fw_88xx.c
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2016 - 2019 Realtek Corporation. All rights reserved.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_88xx/halmac_fw_88xx.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_88xx/halmac_fw_88xx.h
index caae1897d538..67f4b2c24fb2 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_88xx/halmac_fw_88xx.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_88xx/halmac_fw_88xx.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2016 - 2019 Realtek Corporation. All rights reserved.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_88xx/halmac_gpio_88xx.c b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_88xx/halmac_gpio_88xx.c
index e979220c81ff..7edc16f1e543 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_88xx/halmac_gpio_88xx.c
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_88xx/halmac_gpio_88xx.c
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2016 - 2019 Realtek Corporation. All rights reserved.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_88xx/halmac_gpio_88xx.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_88xx/halmac_gpio_88xx.h
index 4b1ce80c1d93..fbd5abe6b59b 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_88xx/halmac_gpio_88xx.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_88xx/halmac_gpio_88xx.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2016 - 2019 Realtek Corporation. All rights reserved.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_88xx/halmac_init_88xx.c b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_88xx/halmac_init_88xx.c
index 3aa69f3211d9..1cdd0e1f4cd2 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_88xx/halmac_init_88xx.c
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_88xx/halmac_init_88xx.c
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2016 - 2019 Realtek Corporation. All rights reserved.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_88xx/halmac_init_88xx.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_88xx/halmac_init_88xx.h
index ac1c70c4ce74..108bb2ed64bb 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_88xx/halmac_init_88xx.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_88xx/halmac_init_88xx.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2016 - 2019 Realtek Corporation. All rights reserved.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_88xx/halmac_mimo_88xx.c b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_88xx/halmac_mimo_88xx.c
index edfc7500dfdd..a13016d212da 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_88xx/halmac_mimo_88xx.c
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_88xx/halmac_mimo_88xx.c
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2016 - 2019 Realtek Corporation. All rights reserved.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_88xx/halmac_mimo_88xx.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_88xx/halmac_mimo_88xx.h
index 59cc60d3c269..5b66b100d013 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_88xx/halmac_mimo_88xx.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_88xx/halmac_mimo_88xx.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2016 - 2019 Realtek Corporation. All rights reserved.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_88xx/halmac_sdio_88xx.c b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_88xx/halmac_sdio_88xx.c
index 22abfc83b5d2..ead9d79fea21 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_88xx/halmac_sdio_88xx.c
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_88xx/halmac_sdio_88xx.c
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2016 - 2019 Realtek Corporation. All rights reserved.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_88xx/halmac_sdio_88xx.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_88xx/halmac_sdio_88xx.h
index 0994da516ba8..10029fdc8884 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_88xx/halmac_sdio_88xx.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_88xx/halmac_sdio_88xx.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2016 - 2019 Realtek Corporation. All rights reserved.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_api.c b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_api.c
index b446b035b6ba..d6f531d33913 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_api.c
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_api.c
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2016 - 2019 Realtek Corporation. All rights reserved.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_api.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_api.h
index 8617cc106757..3c1b864aeecf 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_api.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_api.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2016 - 2019 Realtek Corporation. All rights reserved.
@@ -22,7 +21,7 @@
 #define HALMAC_MAJOR_VER        1
 #define HALMAC_PROTOTYPE_VER    6
 #define HALMAC_MINOR_VER        6
-#define HALMAC_PATCH_VER        22
+#define HALMAC_PATCH_VER        23
 
 #define HALMAC_88XX_SUPPORT	(HALMAC_8821C_SUPPORT || \
 				 HALMAC_8822B_SUPPORT || \
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_bit2.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_bit2.h
index 62956055fd0c..29f757b0817b 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_bit2.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_bit2.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2016 - 2019 Realtek Corporation. All rights reserved.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_bit_8197f.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_bit_8197f.h
index 243e361b660a..e60b39562aa4 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_bit_8197f.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_bit_8197f.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2016 - 2019 Realtek Corporation. All rights reserved.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_bit_8812f.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_bit_8812f.h
index 5ed51c784cd8..a2cb34b8ea01 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_bit_8812f.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_bit_8812f.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2018 - 2019 Realtek Corporation. All rights reserved.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_bit_8814b.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_bit_8814b.h
index 45a3ab489fc0..e15766c30dcb 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_bit_8814b.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_bit_8814b.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2016 - 2019 Realtek Corporation. All rights reserved.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_bit_8821c.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_bit_8821c.h
index 69a57f43fa49..d9550a236d08 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_bit_8821c.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_bit_8821c.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2016 - 2019 Realtek Corporation. All rights reserved.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_bit_8822b.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_bit_8822b.h
index 8f16dcbd7710..9600e9a8e7f4 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_bit_8822b.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_bit_8822b.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2016 - 2019 Realtek Corporation. All rights reserved.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_bit_8822c.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_bit_8822c.h
index 5b17e964bf23..38a2a3d8f463 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_bit_8822c.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_bit_8822c.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2017 - 2019 Realtek Corporation. All rights reserved.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_dbg.c b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_dbg.c
index c38633043ec2..b79c31176766 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_dbg.c
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_dbg.c
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2018 - 2019 Realtek Corporation. All rights reserved.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_dbg.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_dbg.h
index b6fe39720e82..bf500edc6160 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_dbg.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_dbg.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2018 - 2019 Realtek Corporation. All rights reserved.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_fw_info.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_fw_info.h
index d5feea80d954..eea181e8826d 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_fw_info.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_fw_info.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2016 - 2019 Realtek Corporation. All rights reserved.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_fw_offload_c2h_ap.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_fw_offload_c2h_ap.h
index f539cbed85a8..26d21b460b34 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_fw_offload_c2h_ap.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_fw_offload_c2h_ap.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2016 - 2019 Realtek Corporation. All rights reserved.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_fw_offload_c2h_nic.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_fw_offload_c2h_nic.h
index a183c0696244..0b4aeadb9d73 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_fw_offload_c2h_nic.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_fw_offload_c2h_nic.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2016 - 2019 Realtek Corporation. All rights reserved.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_fw_offload_h2c_ap.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_fw_offload_h2c_ap.h
index 0d80942ca2cd..81afe3f5b2f5 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_fw_offload_h2c_ap.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_fw_offload_h2c_ap.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2016 - 2019 Realtek Corporation. All rights reserved.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_fw_offload_h2c_nic.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_fw_offload_h2c_nic.h
index d8f24a278562..4cbc19f41e5d 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_fw_offload_h2c_nic.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_fw_offload_h2c_nic.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2016 - 2019 Realtek Corporation. All rights reserved.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_gpio_cmd.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_gpio_cmd.h
index 3f5ae84dea8a..40efa5773836 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_gpio_cmd.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_gpio_cmd.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2016 - 2019 Realtek Corporation. All rights reserved.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_h2c_extra_info_ap.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_h2c_extra_info_ap.h
index 8cc9b1103038..dc45b1fc7380 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_h2c_extra_info_ap.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_h2c_extra_info_ap.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2016 - 2019 Realtek Corporation. All rights reserved.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_h2c_extra_info_nic.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_h2c_extra_info_nic.h
index 1ca96d64c527..2f5d5152fed5 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_h2c_extra_info_nic.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_h2c_extra_info_nic.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2016 - 2019 Realtek Corporation. All rights reserved.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_hw_cfg.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_hw_cfg.h
index 5c204a5583f7..24e262202f0b 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_hw_cfg.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_hw_cfg.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2016 - 2018 Realtek Corporation. All rights reserved.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_intf_phy_cmd.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_intf_phy_cmd.h
index be225f7e7080..be8f626a8e87 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_intf_phy_cmd.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_intf_phy_cmd.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2016 - 2019 Realtek Corporation. All rights reserved.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_original_c2h_ap.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_original_c2h_ap.h
index a5b1cb2d47d8..f770299eb48d 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_original_c2h_ap.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_original_c2h_ap.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2016 - 2019 Realtek Corporation. All rights reserved.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_original_c2h_nic.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_original_c2h_nic.h
index 4569a304a7b6..85c6da421469 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_original_c2h_nic.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_original_c2h_nic.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2016 - 2019 Realtek Corporation. All rights reserved.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_original_h2c_ap.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_original_h2c_ap.h
index 66371595a2fb..1d1a4ac1abe4 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_original_h2c_ap.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_original_h2c_ap.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2016 - 2019 Realtek Corporation. All rights reserved.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_original_h2c_nic.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_original_h2c_nic.h
index 4d4aa1e364ea..999599fb7df0 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_original_h2c_nic.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_original_h2c_nic.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2016 - 2019 Realtek Corporation. All rights reserved.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_pcie_reg.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_pcie_reg.h
index 5e64ed3c4132..1dda7dbafb3f 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_pcie_reg.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_pcie_reg.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2016 - 2019 Realtek Corporation. All rights reserved.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_pwr_seq_cmd.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_pwr_seq_cmd.h
index ca875b7c60a2..c71d11082e7b 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_pwr_seq_cmd.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_pwr_seq_cmd.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2016 - 2019 Realtek Corporation. All rights reserved.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_reg2.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_reg2.h
index 51890d9cd32b..be4b847deb8d 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_reg2.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_reg2.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2016 - 2019 Realtek Corporation. All rights reserved.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_reg_8197f.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_reg_8197f.h
index b7c53db84227..dd1985b054a3 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_reg_8197f.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_reg_8197f.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2016 - 2019 Realtek Corporation. All rights reserved.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_reg_8812f.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_reg_8812f.h
index 400200e1b96f..5edc4b211800 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_reg_8812f.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_reg_8812f.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2018 - 2019 Realtek Corporation. All rights reserved.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_reg_8814b.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_reg_8814b.h
index aee426a77f0c..9b0ac744e065 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_reg_8814b.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_reg_8814b.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2016 - 2019 Realtek Corporation. All rights reserved.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_reg_8821c.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_reg_8821c.h
index 8ad8b906063f..2bb3eae55923 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_reg_8821c.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_reg_8821c.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2016 - 2019 Realtek Corporation. All rights reserved.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_reg_8822b.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_reg_8822b.h
index e99af2872980..4aea8ffb2750 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_reg_8822b.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_reg_8822b.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2016 - 2019 Realtek Corporation. All rights reserved.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_reg_8822c.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_reg_8822c.h
index 78bbe3d77819..96c8a5216afa 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_reg_8822c.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_reg_8822c.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2017 - 2019 Realtek Corporation. All rights reserved.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_rx_bd_nic.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_rx_bd_nic.h
index 5ab6e4238f67..741f9ecc4b16 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_rx_bd_nic.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_rx_bd_nic.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2016 - 2019 Realtek Corporation. All rights reserved.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_rx_desc_ap.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_rx_desc_ap.h
index 48216df781c8..312d5b835e30 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_rx_desc_ap.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_rx_desc_ap.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2016 - 2019 Realtek Corporation. All rights reserved.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_rx_desc_chip.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_rx_desc_chip.h
index e1315a8169a5..15ac23e99a0e 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_rx_desc_chip.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_rx_desc_chip.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2016 - 2019 Realtek Corporation. All rights reserved.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_rx_desc_nic.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_rx_desc_nic.h
index db7de49ca452..6ee7a773a09c 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_rx_desc_nic.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_rx_desc_nic.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2016 - 2019 Realtek Corporation. All rights reserved.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_sdio_reg.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_sdio_reg.h
index 7f5d22bfbf4e..a00e5e9ddb84 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_sdio_reg.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_sdio_reg.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2016 - 2019 Realtek Corporation. All rights reserved.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_state_machine.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_state_machine.h
index 4d36d54f93f4..0cea549663ec 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_state_machine.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_state_machine.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2017 - 2019 Realtek Corporation. All rights reserved.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_tx_bd_nic.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_tx_bd_nic.h
index af414253c579..394441e63151 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_tx_bd_nic.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_tx_bd_nic.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2016 - 2019 Realtek Corporation. All rights reserved.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_tx_desc_ap.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_tx_desc_ap.h
index be97b614452e..de9d418d1bda 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_tx_desc_ap.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_tx_desc_ap.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2016 - 2019 Realtek Corporation. All rights reserved.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_tx_desc_buffer_ap.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_tx_desc_buffer_ap.h
index 8979b6fbaf6e..a45b023b3c43 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_tx_desc_buffer_ap.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_tx_desc_buffer_ap.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2016 - 2019 Realtek Corporation. All rights reserved.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_tx_desc_buffer_chip.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_tx_desc_buffer_chip.h
index 50a9a2147351..283563afc598 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_tx_desc_buffer_chip.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_tx_desc_buffer_chip.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2016 - 2019 Realtek Corporation. All rights reserved.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_tx_desc_buffer_nic.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_tx_desc_buffer_nic.h
index bed7a344864c..327fa3e7af33 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_tx_desc_buffer_nic.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_tx_desc_buffer_nic.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2016 - 2019 Realtek Corporation. All rights reserved.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_tx_desc_chip.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_tx_desc_chip.h
index 0685cbf93a39..1d0963b7d30d 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_tx_desc_chip.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_tx_desc_chip.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2016 - 2019 Realtek Corporation. All rights reserved.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_tx_desc_ie_ap.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_tx_desc_ie_ap.h
index d5711350ef09..752479308232 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_tx_desc_ie_ap.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_tx_desc_ie_ap.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2016 - 2019 Realtek Corporation. All rights reserved.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_tx_desc_ie_chip.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_tx_desc_ie_chip.h
index cd3d767bbb0b..a35f6da4e355 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_tx_desc_ie_chip.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_tx_desc_ie_chip.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2016 - 2019 Realtek Corporation. All rights reserved.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_tx_desc_ie_nic.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_tx_desc_ie_nic.h
index 66000bd96d8b..b39535b1526b 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_tx_desc_ie_nic.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_tx_desc_ie_nic.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2016 - 2019 Realtek Corporation. All rights reserved.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_tx_desc_nic.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_tx_desc_nic.h
index b50e39b184cd..a1f6eab0ae55 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_tx_desc_nic.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_tx_desc_nic.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2016 - 2019 Realtek Corporation. All rights reserved.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_type.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_type.h
index e25181c6b13a..e0950a454188 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_type.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_type.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2016 - 2019 Realtek Corporation. All rights reserved.
@@ -567,6 +566,13 @@ enum halmac_chip_ver {
 	HALMAC_CHIP_VER_D_CUT = 0x03,
 	HALMAC_CHIP_VER_E_CUT = 0x04,
 	HALMAC_CHIP_VER_F_CUT = 0x05,
+	HALMAC_CHIP_VER_G_CUT = 0x06,
+	HALMAC_CHIP_VER_H_CUT = 0x07,
+	HALMAC_CHIP_VER_I_CUT = 0x08,
+	HALMAC_CHIP_VER_J_CUT = 0x09,
+	HALMAC_CHIP_VER_K_CUT = 0x0A,
+	HALMAC_CHIP_VER_L_CUT = 0x0B,
+	HALMAC_CHIP_VER_M_CUT = 0x0C,
 	HALMAC_CHIP_VER_TEST = 0xFF,
 	HALMAC_CHIP_VER_UNDEFINE = 0x7FFF,
 };
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_usb_reg.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_usb_reg.h
index 5c28a2126b4a..dd7a0162c238 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_usb_reg.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/halmac/halmac_usb_reg.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2016 - 2019 Realtek Corporation. All rights reserved.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/led/hal_led.c b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/led/hal_led.c
index 7a68107c67f8..2a753f9c60e0 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/led/hal_led.c
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/led/hal_led.c
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017 Realtek Corporation.
@@ -64,7 +63,7 @@ void rtw_led_set_strategy(_adapter *adapter, u8 strategy)
 	rtw_hal_sw_led_deinit(pri_adapter);
 #endif
 
-	rtw_led_control(pri_adapter, RTW_LED_OFF);
+	rtw_led_control(pri_adapter, LED_CTL_POWER_OFF);
 }
 
 #ifdef CONFIG_RTW_SW_LED
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/led/hal_sdio_led.c b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/led/hal_sdio_led.c
index 6c4a24fd12d1..506d17d7b3b6 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/led/hal_sdio_led.c
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/led/hal_sdio_led.c
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/ap_makefile.mk b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/ap_makefile.mk
index 8a07d244a9db..980bc8510190 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/ap_makefile.mk
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/ap_makefile.mk
@@ -1,4 +1,3 @@
-# SPDX-License-Identifier: GPL-2.0
 
 _PHYDM_FILES :=\
 	phydm/phydm.o \
@@ -196,13 +195,24 @@ ifeq ($(CONFIG_WLAN_HAL_8814BE),y)
 		_PHYDM_FILES += phydm/halrf/rtl8814b/halrf_txgapk_8814b.o
 		_PHYDM_FILES += phydm/halrf/rtl8814b/halrf_rfk_init_8814b.o
 		_PHYDM_FILES += phydm/halrf/rtl8814b/halhwimg8814b_rf.o
+		ifeq ($(CONFIG_WLAN_HAL_8814CR),y)
+		_PHYDM_FILES += phydm/halrf/rtl8814c/halrf_8814c.o
+		_PHYDM_FILES += phydm/halrf/rtl8814c/halrf_iqk_8814c.o
+		_PHYDM_FILES += phydm/halrf/rtl8814c/halrf_dpk_8814c.o
+		_PHYDM_FILES += phydm/halrf/rtl8814c/halrf_txgapk_8814c.o
+		_PHYDM_FILES += phydm/halrf/rtl8814c/halrf_rfk_init_8814c.o
+		_PHYDM_FILES += phydm/halrf/rtl8814c/halhwimg8814c_rf.o
+		endif
 	ifeq ($(CONFIG_RTL_ODM_WLAN_DRIVER),y)
 		_PHYDM_FILES += \
 		phydm/rtl8814b/phydm_hal_api8814b.o\
 		phydm/rtl8814b/halhwimg8814b_bb.o\
+		phydm/rtl8814c/halhwimg8814c_bb.o\
 		phydm/rtl8814b/phydm_regconfig8814b.o \
 		phydm/rtl8814b/phydm_extraagc8814b.o \
-		phydm/halrf/rtl8814b/halrf_8814b.o
+		phydm/rtl8814c/phydm_extraagc8814c.o \
+		phydm/halrf/rtl8814b/halrf_8814b.o \
+		phydm/halrf/rtl8814c/halrf_8814c.o
 	endif
 endif
 
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/halhwimg.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/halhwimg.h
index 1c8f0841394a..6d658b3935ed 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/halhwimg.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/halhwimg.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2016 - 2017 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/halrf/halphyrf_ap.c b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/halrf/halphyrf_ap.c
index 9fc656644e43..0cafd6978676 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/halrf/halphyrf_ap.c
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/halrf/halphyrf_ap.c
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017 Realtek Corporation.
@@ -122,6 +121,12 @@ void configure_txpower_track(
 		configure_txpower_track_8197g(config);
 #endif
 
+#if RTL8814C_SUPPORT
+	if (dm->support_ic_type == ODM_RTL8814C)
+		configure_txpower_track_8814c(config);
+#endif
+
+
 }
 
 #if (RTL8192E_SUPPORT == 1)
@@ -356,7 +361,7 @@ odm_txpowertracking_callback_thermal_meter_92e(
 }
 #endif
 
-#if (RTL8814B_SUPPORT == 1 || RTL8812F_SUPPORT == 1 || RTL8822C_SUPPORT == 1 || RTL8197G_SUPPORT == 1)
+#if (RTL8814B_SUPPORT == 1 || RTL8812F_SUPPORT == 1 || RTL8822C_SUPPORT == 1 || RTL8197G_SUPPORT == 1 || RTL8814C_SUPPORT == 1)
 void
 odm_txpowertracking_callback_thermal_meter_jaguar_series4(void *dm_void)
 {
@@ -395,7 +400,7 @@ odm_txpowertracking_callback_thermal_meter_jaguar_series4(void *dm_void)
 		(u8 **)&pwrtrk_tab_up_a, (u8 **)&pwrtrk_tab_down_a,
 		(u8 **)&pwrtrk_tab_up_b, (u8 **)&pwrtrk_tab_down_b);
 
-	if (GET_CHIP_VER(priv) == VERSION_8814B) {
+	if (dm->support_ic_type & (ODM_RTL8814B | ODM_RTL8814C)) {
 		(*c.get_delta_swing_table8814only)(dm,
 			(u8 **)&pwrtrk_tab_up_c, (u8 **)&pwrtrk_tab_down_c,
 			(u8 **)&pwrtrk_tab_up_d, (u8 **)&pwrtrk_tab_down_d);
@@ -444,7 +449,7 @@ odm_txpowertracking_callback_thermal_meter_jaguar_series4(void *dm_void)
 		for (i = 0; i < c.rf_path_count; i++) {
 			thermal_value[i] = (u8)odm_get_rf_reg(dm, i, c.thermal_reg_addr, 0xfc00);	/* 0x42: RF Reg[15:10] 88E */
 
-			if (dm->support_ic_type == ODM_RTL8814B) {
+			if (dm->support_ic_type & (ODM_RTL8814B | ODM_RTL8814C)) {
 				thermal_value_temp[i] = (s8)thermal_value[i] + phydm_get_multi_thermal_offset(dm, i);
 				RF_DBG(dm, DBG_RF_TX_PWR_TRACK,
 					"thermal_value_temp[%d](%d) = thermal_value[%d](%d) + multi_thermal_trim(%d)\n", i, thermal_value_temp[i], i, thermal_value[i], phydm_get_multi_thermal_offset(dm, i));
@@ -593,8 +598,7 @@ odm_txpowertracking_callback_thermal_meter_jaguar_series4(void *dm_void)
 		}
 	}
 
-	if (dm->support_ic_type == ODM_RTL8822C || dm->support_ic_type == ODM_RTL8812F ||
-		dm->support_ic_type == ODM_RTL8814B || dm->support_ic_type == ODM_RTL8197G)
+	if (dm->support_ic_type & (ODM_RTL8822C | ODM_RTL8812F | ODM_RTL8814B | ODM_RTL8197G | ODM_RTL8814C))
 		for (p = RF_PATH_A; p < c.rf_path_count; p++)
 			(*c.odm_tx_pwr_track_set_pwr)(dm, tracking_method, p, 0);
 
@@ -610,9 +614,12 @@ odm_txpowertracking_callback_thermal_meter_jaguar_series4(void *dm_void)
 			/* 	(*c.do_iqk)(dm, delta_IQK, thermal_value[RF_PATH_A], 8);*/
 			/*RF_DBG(dm, DBG_RF_TX_PWR_TRACK, "Do IQK\n");*/
 
-			/*if (!cali_info->is_iqk_in_progress)*/
-			/*	(*c.do_tssi_dck)(dm, true);*/
-			RF_DBG(dm, DBG_RF_TX_PWR_TRACK, "Do TSSI DCK\n");
+			if (dm->support_ic_type == ODM_RTL8814C) {
+				if ( (!cali_info->is_iqk_in_progress) && (!cali_info->is_lck_in_progress) )
+				(*c.do_tssi_dck)(dm, true);
+				RF_DBG(dm, DBG_RF_TX_PWR_TRACK, "Do TSSI DCK\n");
+			}
+			
 		}
 	}
 
@@ -1343,8 +1350,8 @@ odm_txpowertracking_callback_thermal_meter(
 	struct dm_iqk_info	*iqk_info = &dm->IQK_info;
 
 	
-#if (RTL8814B_SUPPORT == 1 || RTL8812F_SUPPORT == 1 || RTL8822C_SUPPORT == 1 || RTL8197G_SUPPORT == 1)
-	if (dm->support_ic_type & (ODM_RTL8814B | ODM_RTL8812F | ODM_RTL8822C | ODM_RTL8197G)) {
+#if (RTL8814B_SUPPORT == 1 || RTL8812F_SUPPORT == 1 || RTL8822C_SUPPORT == 1 || RTL8197G_SUPPORT == 1 || RTL8814C_SUPPORT == 1)
+	if (dm->support_ic_type & (ODM_RTL8814B | ODM_RTL8812F | ODM_RTL8822C | ODM_RTL8197G | ODM_RTL8814C)) {
 		odm_txpowertracking_callback_thermal_meter_jaguar_series4(dm);
 		return;
 	}
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/halrf/halphyrf_ap.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/halrf/halphyrf_ap.h
index 005e5a3b08b5..8cc2797bc58c 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/halrf/halphyrf_ap.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/halrf/halphyrf_ap.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/halrf/halphyrf_ce.c b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/halrf/halphyrf_ce.c
index bee1372e5084..6ba960600b5f 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/halrf/halphyrf_ce.c
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/halrf/halphyrf_ce.c
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017  Realtek Corporation.
@@ -853,7 +852,7 @@ void odm_txpowertracking_callback_thermal_meter(void *adapter)
 	cali_info->tx_powercount = 0;
 }
 
-#if (RTL8822C_SUPPORT == 1 || RTL8814B_SUPPORT == 1)
+#if (RTL8822C_SUPPORT == 1 || RTL8814B_SUPPORT == 1  || RTL8723F_SUPPORT == 1)
 void
 odm_txpowertracking_new_callback_thermal_meter(void *dm_void)
 {
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/halrf/halphyrf_ce.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/halrf/halphyrf_ce.h
index 930a7b2c9cb9..dcded1e0acb5 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/halrf/halphyrf_ce.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/halrf/halphyrf_ce.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017  Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/halrf/halphyrf_iot.c b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/halrf/halphyrf_iot.c
index 8ed17f31462b..b87d5e971f49 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/halrf/halphyrf_iot.c
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/halrf/halphyrf_iot.c
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017  Realtek Corporation.
@@ -461,8 +460,7 @@ odm_txpowertracking_callback_thermal_meter(
 		RF_DBG(dm, DBG_RF_TX_PWR_TRACK,
 		       "**********Enter POWER Tracking MIX_MODE**********\n");
 		for (p = RF_PATH_A; p < c.rf_path_count; p++)
-			(*c.odm_tx_pwr_track_set_pwr)(dm, MIX_MODE, p,
-						      indexforchannel);
+			(*c.odm_tx_pwr_track_set_pwr)(dm, MIX_MODE, p, 0);
 
 		/*Record last time Power Tracking result as base.*/
 		cali_info->bb_swing_idx_cck_base = cali_info->bb_swing_idx_cck;
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/halrf/halphyrf_iot.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/halrf/halphyrf_iot.h
index 31b035176424..8d4395a1f74d 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/halrf/halphyrf_iot.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/halrf/halphyrf_iot.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017  Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/halrf/halphyrf_win.c b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/halrf/halphyrf_win.c
index 124ffbca29e1..3f7778f991dd 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/halrf/halphyrf_win.c
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/halrf/halphyrf_win.c
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017 Realtek Corporation.
@@ -115,6 +114,12 @@ void configure_txpower_track(
 		configure_txpower_track_8723f(config);
 #endif
 
+#if RTL8814C_SUPPORT
+	if (dm->support_ic_type == ODM_RTL8814C)
+		configure_txpower_track_8814c(config);
+#endif
+
+
 }
 
 /* **********************************************************************
@@ -235,8 +240,11 @@ odm_txpowertracking_callback_thermal_meter(
 	<Kordan> rf_calibrate_info.rega24 will be initialized when ODM HW configuring, but MP configures with para files. */
 #if (DM_ODM_SUPPORT_TYPE & ODM_WIN)
 #if (MP_DRIVER == 1)
+#ifndef RTL8723F_SUPPORT
 	cali_info->rega24 = 0x090e1317;
 #endif
+#endif
+
 #elif (DM_ODM_SUPPORT_TYPE & ODM_CE)
 	if (*(dm->mp_mode) == true)
 		cali_info->rega24 = 0x090e1317;
@@ -758,7 +766,7 @@ odm_txpowertracking_callback_thermal_meter(
 	cali_info->tx_powercount = 0;
 }
 
-#if (RTL8822C_SUPPORT == 1 || RTL8814B_SUPPORT == 1)
+#if (RTL8822C_SUPPORT == 1 || RTL8814B_SUPPORT == 1 || RTL8723F_SUPPORT == 1 || RTL8814C_SUPPORT == 1)
 void
 odm_txpowertracking_new_callback_thermal_meter(void *dm_void)
 {
@@ -792,7 +800,7 @@ odm_txpowertracking_new_callback_thermal_meter(void *dm_void)
 	(*c.get_delta_swing_table)(dm, (u8 **)&delta_swing_table_idx_tup_a, (u8 **)&delta_swing_table_idx_tdown_a,
 		(u8 **)&delta_swing_table_idx_tup_b, (u8 **)&delta_swing_table_idx_tdown_b);
 
-	if (dm->support_ic_type == ODM_RTL8814B) {
+	if (dm->support_ic_type & (ODM_RTL8814B | ODM_RTL8814C)) {
 		(*c.get_delta_swing_table)(dm, (u8 **)&delta_swing_table_idx_tup_c, (u8 **)&delta_swing_table_idx_tdown_c,
 			(u8 **)&delta_swing_table_idx_tup_d, (u8 **)&delta_swing_table_idx_tdown_d);
 	}
@@ -815,7 +823,7 @@ odm_txpowertracking_new_callback_thermal_meter(void *dm_void)
 		for (i = 0; i < c.rf_path_count; i++) {
 			thermal_value[i] = (u8)odm_get_rf_reg(dm, i, c.thermal_reg_addr, 0xfc00);	/* 0x42: RF Reg[15:10] 88E */
 
-			if (dm->support_ic_type == ODM_RTL8814B) {
+			if (dm->support_ic_type & (ODM_RTL8814B | ODM_RTL8814C)) {
 				thermal_value_temp[i] = (s8)thermal_value[i] + phydm_get_multi_thermal_offset(dm, i);
 				RF_DBG(dm, DBG_RF_TX_PWR_TRACK,
 					"thermal_value_temp[%d](%d) = thermal_value[%d](%d) + multi_thermal_trim(%d)\n", i, thermal_value_temp[i], i, thermal_value[i], phydm_get_multi_thermal_offset(dm, i));
@@ -882,7 +890,9 @@ odm_txpowertracking_new_callback_thermal_meter(void *dm_void)
 			cali_info->thermal_value_lck = thermal_value[RF_PATH_A];
 
 			/*Use RTLCK, so close power tracking driver LCK*/
-			if ((!(dm->support_ic_type & ODM_RTL8814A)) && (!(dm->support_ic_type & ODM_RTL8822B))) {
+			if ((!(dm->support_ic_type & ODM_RTL8814A)) &&
+			    (!(dm->support_ic_type & ODM_RTL8822B)) &&
+			    (!(dm->support_ic_type & ODM_RTL8723F))) {
 				if (c.phy_lc_calibrate)
 					(*c.phy_lc_calibrate)(dm);
 			} else
@@ -966,7 +976,7 @@ odm_txpowertracking_new_callback_thermal_meter(void *dm_void)
 		}	
 	}
 
-	if (dm->support_ic_type == ODM_RTL8822C || dm->support_ic_type == ODM_RTL8814B)
+	if (dm->support_ic_type & (ODM_RTL8822C | ODM_RTL8814B | ODM_RTL8814C))
 		for (p = RF_PATH_A; p < c.rf_path_count; p++)
 			(*c.odm_tx_pwr_track_set_pwr)(dm, tracking_method, p, 0);
 
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/halrf/halphyrf_win.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/halrf/halphyrf_win.h
index 25a7638e04ee..0d5fc97a5886 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/halrf/halphyrf_win.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/halrf/halphyrf_win.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017 Realtek Corporation.
@@ -109,7 +108,7 @@ odm_txpowertracking_callback_thermal_meter(
 #endif
 );
 
-#if (RTL8822C_SUPPORT == 1 || RTL8814B_SUPPORT == 1)
+#if (RTL8822C_SUPPORT == 1 || RTL8814B_SUPPORT == 1 || RTL8814C_SUPPORT == 1)
 void
 odm_txpowertracking_new_callback_thermal_meter(void *dm_void);
 #endif
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/halrf/halrf.c b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/halrf/halrf.c
index fe7a9cbfb94e..61db264b181e 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/halrf/halrf.c
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/halrf/halrf.c
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017  Realtek Corporation.
@@ -36,7 +35,7 @@
 	RTL8195B_SUPPORT == 1 || RTL8198F_SUPPORT == 1 ||\
 	RTL8814B_SUPPORT == 1 || RTL8822C_SUPPORT == 1 ||\
 	RTL8812F_SUPPORT == 1 || RTL8710C_SUPPORT == 1 ||\
-	RTL8197G_SUPPORT == 1)
+	RTL8197G_SUPPORT == 1 || RTL8814C_SUPPORT == 1 )
 
 void _iqk_check_if_reload(void *dm_void)
 {
@@ -97,7 +96,8 @@ u32 halrf_psd_log2base(u32 val)
 	return result;
 }
 #if (RTL8822B_SUPPORT == 1 || RTL8821C_SUPPORT == 1 ||\
-	RTL8814B_SUPPORT == 1 || RTL8822C_SUPPORT == 1)
+	RTL8814B_SUPPORT == 1 || RTL8822C_SUPPORT == 1 ||\
+	RTL8814C_SUPPORT == 1)
 void halrf_iqk_xym_enable(struct dm_struct *dm, u8 xym_enable)
 {
 	struct dm_iqk_info *iqk_info = &dm->IQK_info;
@@ -308,7 +308,8 @@ void halrf_iqk_info_dump(void *dm_void, u32 *_used, char *output, u32 *_out_len)
 		 "rfk_forbidden", (iqk_info->rfk_forbidden) ? "True" : "False");
 #if (RTL8814A_SUPPORT == 1 || RTL8822B_SUPPORT == 1 || \
 	RTL8821C_SUPPORT == 1 || RTL8195B_SUPPORT == 1 ||\
-	RTL8814B_SUPPORT == 1 || RTL8822C_SUPPORT == 1)
+	RTL8814B_SUPPORT == 1 || RTL8822C_SUPPORT == 1||\
+	RTL8814C_SUPPORT == 1 )
 	PDM_SNPF(out_len, used, output + used, out_len - used, "%-20s: %s\n",
 		 "segment_iqk", (iqk_info->segment_iqk) ? "True" : "False");
 #endif
@@ -432,7 +433,8 @@ void halrf_iqk_dbg(void *dm_void)
 	       (iqk_info->rfk_forbidden) ? "True" : "False");
 #if (RTL8814A_SUPPORT == 1 || RTL8822B_SUPPORT == 1 || \
 	RTL8821C_SUPPORT == 1 || RTL8195B_SUPPORT == 1 ||\
-	RTL8814B_SUPPORT == 1 || RTL8822C_SUPPORT == 1)
+	RTL8814B_SUPPORT == 1 || RTL8822C_SUPPORT == 1||\
+	RTL8814C_SUPPORT == 1)
 	RF_DBG(dm, DBG_RF_IQK, "%-20s: %s\n", "segment_iqk",
 	       (iqk_info->segment_iqk) ? "True" : "False");
 #endif
@@ -492,6 +494,12 @@ void phydm_get_iqk_cfir(void *dm_void, u8 idx, u8 path, boolean debug)
 		phy_get_iqk_cfir_8814b(dm, idx, path, debug);
 	break;
 #endif
+#if (RTL8814C_SUPPORT == 1)
+	case ODM_RTL8814C:		
+		phy_get_iqk_cfir_8814c(dm, idx, path, debug);
+	break;
+#endif
+
 	default:
 	break;
 	}
@@ -520,6 +528,12 @@ void halrf_iqk_dbg_cfir_backup(void *dm_void)
 			phy_iqk_dbg_cfir_backup_8814b(dm);
 				break;
 #endif
+#if (RTL8814C_SUPPORT == 1)
+		case ODM_RTL8814C:			
+			phy_iqk_dbg_cfir_backup_8814c(dm);
+				break;
+#endif
+
 	default:
 	break;
 	}
@@ -539,13 +553,19 @@ void halrf_iqk_dbg_cfir_backup_update(void *dm_void)
 #if (RTL8822B_SUPPORT == 1)
 	case ODM_RTL8822B:
 		phy_iqk_dbg_cfir_backup_update_8822b(dm);
-		break;
+	break;
 #endif
 #if (RTL8822C_SUPPORT == 1)
 	case ODM_RTL8822C:		
 		phy_iqk_dbg_cfir_backup_update_8822c(dm);
-		break;
+	break;
+#endif
+#if (RTL8814C_SUPPORT == 1)
+	case ODM_RTL8814C:
+		phy_iqk_dbg_cfir_backup_update_8814c(dm);
+	break;
 #endif
+
 	default:
 	break;
 	}
@@ -569,8 +589,14 @@ void halrf_iqk_dbg_cfir_reload(void *dm_void)
 #if (RTL8822C_SUPPORT == 1)
 	case ODM_RTL8822C:		
 		phy_iqk_dbg_cfir_reload_8822c(dm);
-		break;
+	break;
+#endif
+#if (RTL8814C_SUPPORT == 1)
+	case ODM_RTL8814C:
+		phy_iqk_dbg_cfir_reload_8814c(dm);
+	break;
 #endif
+
 	default:
 	break;
 	}
@@ -593,6 +619,12 @@ void halrf_iqk_dbg_cfir_write(void *dm_void, u8 type, u32 path, u32 idx,
 		phy_iqk_dbg_cfir_write_8822c(dm, type, path, idx, i, data);
 		break;
 #endif
+#if (RTL8814C_SUPPORT == 1)
+		case ODM_RTL8814C:
+		phy_iqk_dbg_cfir_write_8814c(dm, type, path, idx, i, data);
+		break;
+#endif
+
 	default:
 	break;
 	}
@@ -615,6 +647,12 @@ void halrf_iqk_dbg_cfir_backup_show(void *dm_void)
 		phy_iqk_dbg_cfir_backup_8822c(dm);
 		break;
 #endif
+#if (RTL8814C_SUPPORT == 1)
+	case ODM_RTL8814C:		
+		phy_iqk_dbg_cfir_backup_8814c(dm);
+	break;
+#endif
+
 	default:
 	break;
 	}
@@ -641,7 +679,8 @@ void halrf_do_imr_test(void *dm_void, u8 flag_imr_test)
 		}
 }
 
-#if (RTL8822B_SUPPORT == 1 || RTL8821C_SUPPORT == 1 || RTL8822C_SUPPORT == 1 || RTL8814B_SUPPORT == 1)
+#if (RTL8822B_SUPPORT == 1 || RTL8821C_SUPPORT == 1 || RTL8822C_SUPPORT == 1 ||\
+	RTL8814B_SUPPORT == 1 || RTL8814C_SUPPORT == 1)
 void halrf_iqk_debug(void *dm_void, u32 *const dm_value, u32 *_used,
 		     char *output, u32 *_out_len)
 {
@@ -802,9 +841,14 @@ void halrf_rf_lna_setting(void *dm_void, enum halrf_lna_set type)
 		break;
 #endif
 #if (RTL8814B_SUPPORT == 1)
-		case ODM_RTL8814B:
-			break;
+	case ODM_RTL8814B:
+		break;
+#endif
+#if (RTL8814C_SUPPORT == 1)
+	case ODM_RTL8814C:
+		break;
 #endif
+
 	default:
 		break;
 	}
@@ -998,7 +1042,8 @@ void halrf_cmn_info_set(void *dm_void, u32 cmn_info, u64 value)
 		break;
 #if (RTL8814A_SUPPORT == 1 || RTL8822B_SUPPORT == 1 || \
 	RTL8821C_SUPPORT == 1 || RTL8195B_SUPPORT == 1 ||\
-	RTL8814B_SUPPORT == 1 || RTL8822C_SUPPORT == 1)
+	RTL8814B_SUPPORT == 1 || RTL8822C_SUPPORT == 1||\
+	RTL8814C_SUPPORT == 1 )
 	case HALRF_CMNINFO_IQK_SEGMENT:
 		dm->IQK_info.segment_iqk = (boolean)value;
 		break;
@@ -1045,7 +1090,8 @@ u64 halrf_cmn_info_get(void *dm_void, u32 cmn_info)
 		break;
 #if (RTL8814A_SUPPORT == 1 || RTL8822B_SUPPORT == 1 || \
 	RTL8821C_SUPPORT == 1 || RTL8195B_SUPPORT == 1 ||\
-	RTL8814B_SUPPORT == 1  || RTL8822C_SUPPORT == 1)
+	RTL8814B_SUPPORT == 1  || RTL8822C_SUPPORT == 1||\
+	RTL8814C_SUPPORT == 1)
 	case HALRF_CMNINFO_IQK_SEGMENT:
 		return_value = dm->IQK_info.segment_iqk;
 		break;
@@ -1205,14 +1251,28 @@ void halrf_supportability_init_mp(void *dm_void)
 #if (RTL8723F_SUPPORT == 1)
 	case ODM_RTL8723F:
 		rf->rf_supportability =
-			/*@HAL_RF_TX_PWR_TRACK |*/
+			HAL_RF_TX_PWR_TRACK |
 			HAL_RF_IQK |
 			HAL_RF_LCK |
 			HAL_RF_DPK |
+			HAL_RF_TXGAPK |
 			HAL_RF_DPK_TRACK |
 			0;
 		break;
 #endif
+	case ODM_RTL8814C:
+#if (RTL8814C_SUPPORT == 1)
+		rf->rf_supportability =
+			/*HAL_RF_TX_PWR_TRACK |*/
+			HAL_RF_IQK |
+			HAL_RF_LCK |
+			HAL_RF_DPK |
+			HAL_RF_DACK |
+			HAL_RF_TXGAPK |
+			HAL_RF_DPK_TRACK |
+			0;
+#endif
+	break;
 
 	default:
 		rf->rf_supportability =
@@ -1376,14 +1436,28 @@ void halrf_supportability_init(void *dm_void)
 #if (RTL8723F_SUPPORT == 1)
 		case ODM_RTL8723F:
 			rf->rf_supportability =
-				/*@HAL_RF_TX_PWR_TRACK |*/
+				HAL_RF_TX_PWR_TRACK |
 				HAL_RF_IQK |
 				HAL_RF_LCK |
 				HAL_RF_DPK |
+				HAL_RF_TXGAPK |
 				HAL_RF_DPK_TRACK |
 				0;
 			break;
 #endif
+		case ODM_RTL8814C:
+#if (RTL8814C_SUPPORT == 1)
+			rf->rf_supportability =
+				HAL_RF_TX_PWR_TRACK |
+				HAL_RF_IQK |
+				HAL_RF_LCK |
+				HAL_RF_DPK |
+				HAL_RF_DACK |
+				HAL_RF_DPK_TRACK |
+				HAL_RF_TXGAPK |
+				0;
+#endif
+			break;
 
 	default:
 		rf->rf_supportability =
@@ -1407,13 +1481,20 @@ void halrf_watchdog(void *dm_void)
 #if 0
 	/*RF_DBG(dm, DBG_RF_TMP, "%s\n", __func__);*/
 #endif
-
 	if (rf->is_dpk_in_progress || dm->rf_calibrate_info.is_iqk_in_progress ||
 		rf->is_tssi_in_progress)
 		return;
 
-	phydm_rf_watchdog(dm);
+	if (!(dm->support_ic_type & ODM_RTL8723F))
+		phydm_rf_watchdog(dm);
+
 	halrf_dpk_track(dm);
+#if (RTL8723F_SUPPORT == 1)
+	if (dm->support_ic_type & ODM_RTL8723F){
+		halrf_xtal_thermal_track(dm);
+		halrf_powertracking_thermal(dm);
+	}
+#endif
 }
 
 #if 0
@@ -1462,6 +1543,17 @@ void halrf_rfk_power_save(void *dm_void, boolean is_power_save)
 		halrf_rfk_power_save_8822c(dm, is_power_save);
 	break;
 #endif
+
+#if (RTL8723F_SUPPORT == 1)
+	case ODM_RTL8723F:
+		halrf_rfk_power_save_8723f(dm, is_power_save);
+	break;
+#endif
+#if (RTL8814C_SUPPORT == 1)
+		case ODM_RTL8814C:
+		break;
+#endif
+
 	default:
 	break;
 	}
@@ -1489,6 +1581,11 @@ void halrf_reload_iqk(void *dm_void, boolean reset)
 		iqk_reload_iqk_8195b(dm, reset);
 	break;
 #endif
+#if (RTL8814C_SUPPORT == 1)
+	case ODM_RTL8814C:
+		iqk_reload_iqk_8814c(dm, reset);
+	break;
+#endif
 
 	default:
 	break;
@@ -1517,6 +1614,16 @@ void halrf_rfk_handshake(void *dm_void, boolean is_before_k)
 			halrf_rfk_handshake_8710c(dm, is_before_k);
 			break;
 #endif
+#if (RTL8723F_SUPPORT == 1)
+		case ODM_RTL8723F:
+			halrf_rfk_handshake_8723f(dm, is_before_k);
+			break;
+#endif
+#if (RTL8814C_SUPPORT == 1)
+		case ODM_RTL8814C:
+			break;
+#endif
+
 		default:
 			break;
 	}
@@ -1533,6 +1640,12 @@ void halrf_bbreset(void *dm_void)
 			phydm_bb_reset_8814b(dm);
 			break;
 #endif
+#if (RTL8814C_SUPPORT == 1)
+		case ODM_RTL8814C:
+			phydm_bb_reset_8814c(dm);
+			break;
+#endif
+
 		default:
 			break;
 	}
@@ -1555,7 +1668,10 @@ void halrf_rf_k_connect_trigger(void *dm_void, boolean is_recovery,
 			*rf->is_carrier_suppresion))
 			return;
 	}
-
+#if (RTL8723F_SUPPORT == 1)
+	if(dm->support_ic_type == ODM_RTL8723F)
+		halrf_dis_cca_8723f(dm, true);
+#endif
 	/*[TX GAP K]*/
 	halrf_txgapk_trigger(dm);
 
@@ -1565,14 +1681,22 @@ void halrf_rf_k_connect_trigger(void *dm_void, boolean is_recovery,
 	/*[TSSI Trk]*/
 	halrf_tssi_trigger(dm);
 	/*[DPK]*/
+#if 1
 	if(dpk_info->is_dpk_by_channel == true)
 		halrf_dpk_trigger(dm);
 	else
 		halrf_dpk_reload(dm);
+#endif
 	//ADDA restore to MP_UI setting;
 	config_halrf_path_adda_setting_trigger(dm);
 
+	halrf_spur_compensation(dm);
+
 	halrf_bbreset(dm);
+#if (RTL8723F_SUPPORT == 1)
+	if(dm->support_ic_type == ODM_RTL8723F)
+		halrf_dis_cca_8723f(dm, false);
+#endif
 }
 
 void config_halrf_path_adda_setting_trigger(void *dm_void)
@@ -1583,6 +1707,11 @@ void config_halrf_path_adda_setting_trigger(void *dm_void)
 	if (dm->support_ic_type & ODM_RTL8814B)
 		config_phydm_path_adda_setting_8814b(dm);
 #endif
+#if (RTL8814C_SUPPORT == 1)
+	if (dm->support_ic_type & ODM_RTL8814C)
+		config_phydm_path_adda_setting_8814c(dm);
+#endif
+
 	
 }
 
@@ -1599,6 +1728,12 @@ void halrf_dack_restore(void *dm_void)
 		halrf_dack_restore_8822c(dm);
 		break;
 #endif
+#if (RTL8814C_SUPPORT == 1)
+	case ODM_RTL8814C:
+		//halrf_dack_restore_8814c(dm);
+	break;
+#endif
+
 	default:
 		break;
 	}
@@ -1631,6 +1766,12 @@ void halrf_dack_trigger(void *dm_void, boolean force)
 		halrf_dac_cal_8814b(dm);
 		break;
 #endif
+#if (RTL8814C_SUPPORT == 1)
+	case ODM_RTL8814C:
+		halrf_dac_cal_8814c(dm);
+	break;
+#endif
+
 	default:
 		break;
 	}
@@ -1695,6 +1836,7 @@ void halrf_segment_iqk_trigger(void *dm_void, boolean clear,
 	if (iqk_info->rfk_forbidden)
 		return;
 
+	rf->rfk_type = RF01_IQK;
 	halrf_rfk_handshake(dm, true);
 
 	if (!dm->rf_calibrate_info.is_iqk_in_progress) {
@@ -1816,6 +1958,18 @@ void halrf_segment_iqk_trigger(void *dm_void, boolean clear,
 			phy_iq_calibrate_8814a(dm, false);
 			break;
 #endif
+#if (RTL8723F_SUPPORT == 1)
+		case ODM_RTL8723F:
+			phy_iq_calibrate_8723f(dm, false);
+			break;
+#endif
+#if (RTL8814C_SUPPORT == 1)
+		case ODM_RTL8814C:
+			phy_iq_calibrate_8814c(dm, clear, segment_iqk);
+			break;
+#endif
+
+
 		default:
 			break;
 		}
@@ -1872,6 +2026,7 @@ void halrf_iqk_trigger(void *dm_void, boolean is_recovery)
 	if (iqk_info->rfk_forbidden)
 		return;
 
+	rf->rfk_type = RF01_IQK;
 	halrf_rfk_handshake(dm, true);
 
 	if (!dm->rf_calibrate_info.is_iqk_in_progress) {
@@ -1993,7 +2148,12 @@ void halrf_iqk_trigger(void *dm_void, boolean is_recovery)
 #endif
 #if (RTL8723F_SUPPORT == 1)
 		case ODM_RTL8723F:
-			phy_iq_calibrate_8723f(dm, false, false);
+			phy_iq_calibrate_8723f(dm, is_recovery);
+			break;
+#endif
+#if (RTL8814C_SUPPORT == 1)
+		case ODM_RTL8814C:
+			phy_iq_calibrate_8814c(dm, false, false);
 			break;
 #endif
 
@@ -2168,6 +2328,12 @@ void halrf_lck_trigger(void *dm_void)
 			phy_lc_calibrate_8723f(dm);
 			break;
 #endif
+#if (RTL8814C_SUPPORT == 1)
+		case ODM_RTL8814C:
+			phy_lc_calibrate_8814c(dm);
+			break;
+#endif
+
 
 		default:
 			break;
@@ -2247,6 +2413,12 @@ void halrf_x2k_check(struct dm_struct *dm)
 		phy_x2_check_8812f(dm);
 		break;
 #endif
+	case ODM_RTL8723F:
+#if (RTL8723F_SUPPORT == 1)
+		phy_x2_check_8723f(dm);
+		break;
+#endif
+
 	default:
 		break;
 	}
@@ -2312,6 +2484,10 @@ void halrf_init(void *dm_void)
 	halrf_tssi_dck(dm, true);
 	halrf_tssi_get_efuse(dm);
 	halrf_tssi_set_de(dm);
+#if (RTL8723F_SUPPORT == 1)
+	halrf_do_tssi(dm);
+	halrf_rx_port_ctl_8723f(dm);
+#endif
 
 	/*TX Gap K*/
 	halrf_txgapk_write_gain_table(dm);
@@ -2352,6 +2528,7 @@ void halrf_dpk_trigger(void *dm_void)
 	if (iqk_info->rfk_forbidden)
 		return;
 
+	rf->rfk_type = RF03_DPK;
 	halrf_rfk_handshake(dm, true);
 
 	if (!rf->is_dpk_in_progress) {
@@ -2364,7 +2541,12 @@ void halrf_dpk_trigger(void *dm_void)
 #if (RTL8822C_SUPPORT == 1)
 		case ODM_RTL8822C:
 			do_dpk_8822c(dm);
-			break;
+		break;
+#endif
+#if (RTL8814C_SUPPORT == 1)
+		case ODM_RTL8814C:
+			do_dpk_8814c(dm);
+		break;
 #endif
 
 #if (DM_ODM_SUPPORT_TYPE & (ODM_AP))
@@ -2419,6 +2601,7 @@ void halrf_dpk_trigger(void *dm_void)
 			do_dpk_8721d(dm);
 			break;
 #endif
+
 #endif
 		default:
 			break;
@@ -2461,6 +2644,12 @@ void halrf_set_dpkbychannel(void *dm_void, boolean dpk_by_ch)
 		break;
 #endif
 #endif
+#if (RTL8814C_SUPPORT == 1)
+		case ODM_RTL8814C:
+			dpk_set_dpkbychannel_8814c(dm, dpk_by_ch);
+		break;
+#endif
+
 		default:
 			if (dpk_by_ch)
 				dpk_info->is_dpk_by_channel = 1;
@@ -2500,6 +2689,12 @@ void halrf_set_dpkenable(void *dm_void, boolean is_dpk_enable)
 #endif
 
 #endif
+#if (RTL8814C_SUPPORT == 1)
+	case ODM_RTL8814C:
+		dpk_set_is_dpk_enable_8814c(dm, is_dpk_enable);
+		break;
+#endif
+
 	default:
 	break;
 	}
@@ -2528,6 +2723,13 @@ boolean halrf_get_dpkbychannel(void *dm_void)
 #endif
 #endif
 
+#if (RTL8814C_SUPPORT == 1)
+	case ODM_RTL8814C:
+		is_dpk_by_channel = dpk_get_dpkbychannel_8814c(dm);
+	break;
+#endif
+
+
 	default:
 	break;
 	}
@@ -2559,6 +2761,12 @@ boolean halrf_get_dpkenable(void *dm_void)
 		break;
 #endif
 #endif
+#if (RTL8814C_SUPPORT == 1)
+		case ODM_RTL8814C:
+			is_dpk_enable = dpk_get_is_dpk_enable_8814c(dm);
+		break;
+#endif
+
 		default:
 		break;
 	}
@@ -2638,6 +2846,15 @@ u8 halrf_dpk_result_check(void *dm_void)
 			result = 0;
 		break;
 #endif
+#if (RTL8814C_SUPPORT == 1)
+	case ODM_RTL8814C:
+		if (dpk_info->dpk_path_ok == 0xf)
+			result = 1;
+		else
+			result = 0;
+		break;
+#endif
+
 
 #if (RTL8812F_SUPPORT == 1)
 	case ODM_RTL8812F:
@@ -2727,7 +2944,14 @@ void halrf_dpk_sram_read(void *dm_void)
 		break;
 #endif
 
+#if (RTL8814C_SUPPORT == 1)
+	case ODM_RTL8814C:
+		dpk_sram_read_8814c(dm);
+		break;
+#endif
+
 #endif
+
 	default:
 		break;
 	}
@@ -2800,6 +3024,17 @@ void halrf_dpk_enable_disable(void *dm_void)
 		break;
 #endif
 
+#if (RTL8723F_SUPPORT == 1)
+	case ODM_RTL8723F:
+		dpk_enable_disable_8723f(dm);
+		break;
+#endif
+#if (RTL8814C_SUPPORT == 1)
+	case ODM_RTL8814C:
+		dpk_enable_disable_8814c(dm);
+		break;
+#endif
+
 #endif
 	default:
 		break;
@@ -2895,6 +3130,12 @@ void halrf_dpk_track(void *dm_void)
 #endif
 
 #endif
+#if (RTL8814C_SUPPORT == 1)
+	case ODM_RTL8814C:
+		dpk_track_8814c(dm);
+	break;
+#endif
+
 	default:
 		break;
 	}
@@ -2961,6 +3202,14 @@ void halrf_dpk_reload(void *dm_void)
 		break;		
 #endif
 
+#if (RTL8814C_SUPPORT == 1)
+	case ODM_RTL8814C:
+		if (dpk_info->dpk_path_ok > 0)
+			dpk_reload_8814c(dm);
+		break;		
+#endif
+
+
 #endif
 	default:
 		break;
@@ -3087,6 +3336,13 @@ void _halrf_display_dpk_info(void *dm_void, u32 *_used, char *output, u32 *_out_
 		ic_name = "8195B";
 		break;
 #endif
+#if (RTL8814C_SUPPORT)
+	case ODM_RTL8814C:
+		ic_name = "8814C";
+		break;
+#endif
+	default:
+	break;
 	}
 
 	PDM_SNPF(out_len, used, output + used, out_len - used,
@@ -3348,6 +3604,13 @@ halrf_config_rfk_with_header_file(void *dm_void, u32 config_type)
 			odm_read_and_config_mp_8723f_cal_init(dm);
 	}
 #endif
+#if (RTL8814C_SUPPORT == 1)
+	if (dm->support_ic_type == ODM_RTL8814C) {
+		if (config_type == CONFIG_BB_RF_CAL_INIT)
+			odm_read_and_config_mp_8814c_cal_init(dm);
+	}
+#endif
+
 
 #if 1
 	if (dm->fw_offload_ability & PHYDM_PHY_PARAM_OFFLOAD) {
@@ -3367,6 +3630,7 @@ void halrf_txgapk_trigger(void *dm_void)
 	if (!(rf->rf_supportability & HAL_RF_TXGAPK))
 		return;
 
+	rf->rfk_type = RF04_TXGAPK;
 	halrf_rfk_handshake(dm, true);
 
 	start_time = odm_get_current_time(dm);
@@ -3374,6 +3638,7 @@ void halrf_txgapk_trigger(void *dm_void)
 	halrf_rfk_power_save(dm, false);
 
 	switch (dm->support_ic_type) {
+		
 #if (DM_ODM_SUPPORT_TYPE & (ODM_IOT))
 #if (RTL8195B_SUPPORT == 1)
 	case ODM_RTL8195B:
@@ -3394,12 +3659,25 @@ void halrf_txgapk_trigger(void *dm_void)
 	break;
 #endif
 
+#if (RTL8814C_SUPPORT == 1)
+	case ODM_RTL8814C:
+		halrf_txgapk_8814c(dm);
+	break;
+#endif
+
+
 #if (RTL8822C_SUPPORT == 1)
 	case ODM_RTL8822C:
 		halrf_txgapk_8822c(dm);
 	break;
 #endif
 
+#if (RTL8723F_SUPPORT == 1)
+	case ODM_RTL8723F:
+		halrf_txgapk_8723f(dm);
+	break;
+#endif
+
 	default:
 		break;
 	}	
@@ -3414,6 +3692,23 @@ void halrf_txgapk_trigger(void *dm_void)
 	       rf->dpk_progressing_time);
 }
 
+void halrf_spur_compensation(void *dm_void)
+{
+	struct dm_struct *dm = (struct dm_struct *)dm_void;
+
+	switch (dm->support_ic_type) {
+#if (RTL8723F_SUPPORT == 1)
+	case ODM_RTL8723F:
+		halrf_rfk_power_save(dm, false);
+		halrf_spur_compensation_8723f(dm);
+		halrf_rfk_power_save(dm, true);
+		break;
+#endif
+	default:
+		break;
+	}
+}
+
 void halrf_tssi_get_efuse(void *dm_void)
 {
 	struct dm_struct *dm = (struct dm_struct *)dm_void;
@@ -3444,6 +3739,19 @@ void halrf_tssi_get_efuse(void *dm_void)
 	}
 #endif
 
+#if (RTL8723F_SUPPORT == 1)
+	if (dm->support_ic_type & ODM_RTL8723F) {
+		halrf_tssi_get_efuse_8723f(dm);
+	}
+#endif
+
+#if (RTL8814C_SUPPORT == 1)
+	if (dm->support_ic_type & ODM_RTL8814C) {
+		halrf_tssi_get_efuse_8814c(dm);
+		halrf_get_efuse_thermal_pwrtype_8814c(dm);
+	}
+#endif
+
 }
 
 void halrf_do_rxbb_dck(void *dm_void)
@@ -3455,6 +3763,11 @@ void halrf_do_rxbb_dck(void *dm_void)
 	if (dm->support_ic_type == ODM_RTL8814B)
 		halrf_do_rxbb_dck_8814b(dm);
 #endif
+#if (RTL8814C_SUPPORT == 1)
+	if (dm->support_ic_type == ODM_RTL8814C)
+		halrf_do_rxbb_dck_8814c(dm);
+#endif
+
 
 }
 
@@ -3477,6 +3790,36 @@ void halrf_do_tssi(void *dm_void)
 		halrf_do_tssi_8197g(dm);
 #endif
 
+#if (RTL8723F_SUPPORT == 1)
+	if (dm->support_ic_type == ODM_RTL8723F) {
+		halrf_rfk_power_save(dm, false);
+		halrf_do_tssi_8723f(dm);
+		halrf_rfk_power_save(dm, true);
+		}
+#endif
+
+#if (RTL8814C_SUPPORT == 1)
+	if (dm->support_ic_type == ODM_RTL8814C)
+		halrf_tssi_trigger_bit_reset_8814c(dm);
+#endif
+
+}
+
+u8 halrf_do_tssi_by_manual(void *dm_void, u8 path)
+{
+	struct dm_struct *dm = (struct dm_struct *)dm_void;
+
+#if (RTL8814B_SUPPORT == 1)
+	if (dm->support_ic_type & ODM_RTL8814B)
+		return halrf_do_tssi_8814b(dm, path);
+#endif
+
+#if (RTL8814C_SUPPORT == 1)
+	if (dm->support_ic_type & ODM_RTL8814C)
+		return halrf_do_tssi_8814c(dm, path);
+#endif
+
+	return 0;
 }
 
 void halrf_set_tssi_enable(void *dm_void, boolean enable)
@@ -3519,6 +3862,14 @@ u32 halrf_set_tssi_value(void *dm_void, u32 tssi_value)
 	if (dm->support_ic_type & ODM_RTL8814B)
 		return halrf_set_tssi_value_8814b(dm, tssi_value);
 #endif
+#if (RTL8723F_SUPPORT == 1)
+	if (dm->support_ic_type & ODM_RTL8723F)
+		return halrf_tssi_set_de_8723f(dm, tssi_value);
+#endif
+#if (RTL8814C_SUPPORT == 1)
+	if (dm->support_ic_type & ODM_RTL8814C)
+		return halrf_set_tssi_value_8814c(dm, tssi_value);
+#endif
 
 	return 0;
 }
@@ -3556,6 +3907,42 @@ void halrf_tssi_set_de_for_tx_verify(void *dm_void, u32 tssi_de, u8 path)
 		halrf_tssi_set_de_for_tx_verify_8197g(dm, tssi_de, path);
 #endif
 
+#if (RTL8723F_SUPPORT == 1)
+	if (dm->support_ic_type & ODM_RTL8723F)
+		halrf_tssi_set_de_for_tx_verify_8723f(dm, tssi_de, path);
+#endif
+#if (RTL8814C_SUPPORT == 1)
+	if (dm->support_ic_type & ODM_RTL8814C)
+		halrf_tssi_set_de_for_tx_verify_8814c(dm, tssi_de, path);
+#endif
+
+}
+
+u32 halrf_tssi_turn_target_power(void *dm_void, s16 power_offset, u8 path)
+{
+	struct dm_struct *dm = (struct dm_struct *)dm_void;
+	u32 pout = 0;
+
+    if (dm->mp_mode) {
+        if (*dm->mp_mode) { 
+#if (RTL8723F_SUPPORT == 1)
+	if (dm->support_ic_type & ODM_RTL8723F)
+		pout = halrf_tssi_set_powerbyrate_pout_8723f(dm, power_offset, path);
+#endif
+            }
+        }
+	return pout;
+}
+
+void halrf_tssi_set_power_offset(void *dm_void, s16 power_offset, u8 path)
+{
+	struct dm_struct *dm = (struct dm_struct *)dm_void;
+
+#if (RTL8723F_SUPPORT == 1)
+	if (dm->support_ic_type & ODM_RTL8723F)
+		 _halrf_tssi_set_powerlevel_8723f(dm, power_offset, path);
+#endif
+
 }
 
 u32 halrf_query_tssi_value(void *dm_void)
@@ -3571,6 +3958,11 @@ u32 halrf_query_tssi_value(void *dm_void)
 	if (dm->support_ic_type & ODM_RTL8814B)
 		return halrf_query_tssi_value_8814b(dm);
 #endif
+#if (RTL8814C_SUPPORT == 1)
+	if (dm->support_ic_type & ODM_RTL8814C)
+		return halrf_query_tssi_value_8814c(dm);
+#endif
+
 	return 0;
 }
 
@@ -3605,6 +3997,11 @@ void halrf_tssi_set_de(void *dm_void)
 	if (dm->support_ic_type & ODM_RTL8814B)
 		halrf_tssi_set_de_8814b(dm);
 #endif
+#if (RTL8814C_SUPPORT == 1)
+	if (dm->support_ic_type & ODM_RTL8814C)
+		halrf_tssi_set_de_8814c(dm);
+#endif
+
 }
 
 void halrf_tssi_dck(void *dm_void, u8 direct_do)
@@ -3640,6 +4037,19 @@ void halrf_tssi_dck(void *dm_void, u8 direct_do)
 	if (dm->support_ic_type == ODM_RTL8197G)
 		halrf_tssi_dck_8197g(dm);
 #endif
+#if (RTL8814C_SUPPORT == 1)
+	if (dm->support_ic_type & ODM_RTL8814C) {
+#if (DM_ODM_SUPPORT_TYPE & (ODM_AP))
+	if (dm->rfe_type == 1 || dm->rfe_type == 4 || dm->rfe_type == 5)
+		return;
+#else
+	if (dm->rfe_type == 1 || dm->rfe_type == 6)
+		return;
+#endif
+	halrf_tssi_dck_8814c(dm, direct_do);
+	}
+#endif
+
 
 	halrf_rfk_handshake(dm, false);
 
@@ -3657,7 +4067,12 @@ void halrf_calculate_tssi_codeword(void *dm_void)
 #if (RTL8822C_SUPPORT == 1)
 	if (dm->support_ic_type & ODM_RTL8822C)
 		halrf_calculate_tssi_codeword_8822c(dm);
-#endif	
+#endif
+#if (RTL8814C_SUPPORT == 1)
+	if (dm->support_ic_type & ODM_RTL8814C)
+		halrf_calculate_tssi_codeword_8814c(dm, RF_PATH_A);
+#endif
+
 }
 
 void halrf_set_tssi_codeword(void *dm_void)
@@ -3678,6 +4093,11 @@ void halrf_set_tssi_codeword(void *dm_void)
 		halrf_set_tssi_codeword_8822c(dm, tssi->tssi_codeword);
 #endif	
 
+#if (RTL8814C_SUPPORT == 1)
+	if (dm->support_ic_type & ODM_RTL8814C)
+		halrf_set_tssi_codeword_8814c(dm, tssi->tssi_codeword);
+#endif
+
 }
 
 u8 halrf_get_tssi_codeword_for_txindex(void *dm_void)
@@ -3708,7 +4128,15 @@ u8 halrf_get_tssi_codeword_for_txindex(void *dm_void)
 	if (dm->support_ic_type & ODM_RTL8197G)
 		return 100;
 #endif
-
+#if (RTL8814C_SUPPORT == 1)
+	if (dm->support_ic_type & ODM_RTL8814C) {
+#if (DM_ODM_SUPPORT_TYPE & (ODM_AP))
+		return 80;
+#else
+		return 60;
+#endif
+	}
+#endif
 	return 60;
 }
 
@@ -3731,7 +4159,10 @@ void halrf_tssi_clean_de(
 	if (dm->support_ic_type & ODM_RTL8197G)
 		halrf_tssi_clean_de_8197g(dm);
 #endif
-
+#if (RTL8814C_SUPPORT == 1)
+	if (dm->support_ic_type & ODM_RTL8814C)
+		halrf_tssi_clean_de_8814c(dm);
+#endif
 }
 
 u32 halrf_tssi_trigger_de(void *dm_void, u8 path)
@@ -3752,6 +4183,11 @@ u32 halrf_tssi_trigger_de(void *dm_void, u8 path)
 	if (dm->support_ic_type & ODM_RTL8197G)
 		return halrf_tssi_trigger_de_8197g(dm, path);
 #endif
+
+#if (RTL8814C_SUPPORT == 1)
+	if (dm->support_ic_type & ODM_RTL8814C)
+		return halrf_tssi_trigger_de_8814c(dm, path);
+#endif
 	return 0;
 }
 
@@ -3777,6 +4213,21 @@ u32 halrf_tssi_get_de(void *dm_void, u8 path)
 #if (RTL8197G_SUPPORT == 1)
 	if (dm->support_ic_type & ODM_RTL8197G)
 		return halrf_tssi_get_de_8197g(dm, path);
+#endif
+#if (RTL8814C_SUPPORT == 1)
+	if (dm->support_ic_type & ODM_RTL8814C)
+		return halrf_tssi_get_de_8814c(dm, path);
+#endif
+	return 0;
+}
+
+u32 halrf_get_online_tssi_de(void *dm_void, u8 path, s32 pout)
+{
+	struct dm_struct *dm = (struct dm_struct *)dm_void;
+
+#if (RTL8723F_SUPPORT == 1)
+	if (dm->support_ic_type & ODM_RTL8723F)
+		return halrf_get_online_tssi_de_8723f(dm, path, pout);
 #endif
 	return 0;
 }
@@ -3822,6 +4273,11 @@ void halrf_txgapk_write_gain_table(void *dm_void)
 	if (dm->support_ic_type & ODM_RTL8822C)
 		halrf_txgapk_save_all_tx_gain_table_8822c(dm);
 #endif
+#if (RTL8814C_SUPPORT == 1)
+	if (dm->support_ic_type & ODM_RTL8814C)
+		halrf_txgapk_save_all_tx_gain_table_8814c(dm);
+#endif
+
 }
 
 void halrf_txgapk_reload_tx_gain(void *dm_void)
@@ -3832,6 +4288,12 @@ void halrf_txgapk_reload_tx_gain(void *dm_void)
 	if (dm->support_ic_type & ODM_RTL8822C)
 		halrf_txgapk_reload_tx_gain_8822c(dm);
 #endif
+/*
+#if (RTL8814C_SUPPORT == 1)
+	if (dm->support_ic_type & ODM_RTL8814C)
+		halrf_txgapk_reload_tx_gain_8814c(dm);
+#endif
+*/
 }
 
 void halrf_txgap_enable_disable(void *dm_void, u8 enable)
@@ -3848,6 +4310,290 @@ void halrf_txgap_enable_disable(void *dm_void, u8 enable)
 	}
 }
 
+#if (RTL8723F_SUPPORT == 1)
+s8 _halrf_get_power_offset_by_thermal_8723f(void *dm_void, u8 path, s8 thermal_detla)
+{
+	struct dm_struct *dm = (struct dm_struct *)dm_void;
+	struct dm_rf_calibration_struct *cali_info = &dm->rf_calibrate_info;
+	u8 channel = *dm->channel;
+	u8 tx_rate = phydm_get_tx_rate(dm);
+	s8 power_offset = 0;
+	u8 i = 0;
+	u8 thermal_up_a[DELTA_SWINGIDX_SIZE] = {0}, thermal_down_a[DELTA_SWINGIDX_SIZE] = {0};
+	u8 thermal_up_b[DELTA_SWINGIDX_SIZE] = {0}, thermal_down_b[DELTA_SWINGIDX_SIZE] = {0};
+	u8 txagc_offset_2g_cck_a_p[] = {
+		0, 0, 0, 1, 1, 2, 2, 2, 3, 3, 4, 4, 4, 5, 5, 5,
+		 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6};
+	u8 txagc_offset_2g_cck_a_n[] = {
+		0, 0, 0, 1, 1, 2, 2, 2, 3, 3, 4, 4, 4, 5, 5, 5,
+		 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6};
+	u8 txagc_offset_2g_cck_b_p[] = {
+		0, 0, 0, 1, 1, 2, 2, 2, 3, 3, 4, 4, 4, 5, 5,
+		 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6};
+	u8 txagc_offset_2g_cck_b_n[] = {
+		0, 0, 0, 1, 1, 2, 2, 2, 3, 3, 4, 4, 4, 5,
+		 5, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6};
+	u8 txagc_offset_2ga_p[] = {
+		0, 0, 1, 1, 2, 2, 2, 3, 3, 3, 4, 4, 5, 5, 6,
+		 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7};
+	u8 txagc_offset_2ga_n[] = {
+		0, 0, 0, 1, 1, 1, 2, 2, 2, 3, 3, 3, 4, 4, 4,
+		 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6};
+	u8 txagc_offset_2gb_p[] = {
+		0, 0, 1, 1, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 5,
+		 5, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7};
+	u8 txagc_offset_2gb_n[] = {
+		0, 0, 0, 1, 1, 1, 2, 2, 2, 3, 3, 3, 4, 4, 4,
+		 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6};
+	u8 txagc_offset_5ga_n[][30] = {
+		{0, 0, 2, 2, 2, 2, 3, 3, 4, 4, 4, 4, 5, 5, 5, 6, 6,
+			6, 7, 7, 7, 7, 7, 8, 8, 8, 8, 8, 8, 8},
+		{0, 0, 2, 2, 2, 2, 3, 3, 4, 4, 4, 4, 5, 5, 5, 6, 6,
+			6, 7, 7, 7, 7, 7, 8, 8, 8, 8, 8, 8, 8},
+		{0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 4, 4, 5, 5, 5, 6, 6,
+			6, 7, 7, 7, 7, 7, 8, 8, 8, 8, 8, 8, 8},
+	};
+	u8 txagc_offset_5ga_p[][30] = {
+		{0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 4, 4, 6, 6, 6, 6, 8,
+			8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8},
+		{0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 4, 4, 6, 6, 6, 6, 8,
+			8, 8, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9},
+		{0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 6, 6, 6, 6, 7, 7, 8,
+			8, 8, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9},
+	};
+	RF_DBG(dm, DBG_RF_TX_PWR_TRACK,"[RF][TSSI] ======>%s\n", __func__);
+
+	if (channel >= 1 && channel <= 14) {
+		if (IS_CCK_RATE(tx_rate)) {
+			odm_move_memory(dm, thermal_up_a, txagc_offset_2g_cck_a_p, sizeof(thermal_up_a));
+			odm_move_memory(dm, thermal_down_a, txagc_offset_2g_cck_a_n, sizeof(thermal_down_a));
+			odm_move_memory(dm, thermal_up_b, txagc_offset_2g_cck_b_p, sizeof(thermal_up_b));
+			odm_move_memory(dm, thermal_down_b, txagc_offset_2g_cck_b_n, sizeof(thermal_down_b));
+		} else {
+			odm_move_memory(dm, thermal_up_a, txagc_offset_2ga_p, sizeof(thermal_up_a));
+			odm_move_memory(dm, thermal_down_a, txagc_offset_2ga_n, sizeof(thermal_down_a));
+			odm_move_memory(dm, thermal_up_b, txagc_offset_2gb_p, sizeof(thermal_up_b));
+			odm_move_memory(dm, thermal_down_b, txagc_offset_2gb_n, sizeof(thermal_down_b));
+		}
+	}
+
+	if (channel >= 36 && channel <= 64) {
+		odm_move_memory(dm, thermal_up_a, txagc_offset_5ga_p[0], sizeof(thermal_up_a));
+		odm_move_memory(dm, thermal_down_a, txagc_offset_5ga_n[0], sizeof(thermal_down_a));
+	} else if (channel >= 100 && channel <= 144) {
+		 odm_move_memory(dm, thermal_up_a, txagc_offset_5ga_p[1], sizeof(thermal_up_a));
+		odm_move_memory(dm, thermal_down_a, txagc_offset_5ga_n[1], sizeof(thermal_down_a));
+	} else if (channel >= 149 && channel <= 177) {
+		odm_move_memory(dm, thermal_up_a, txagc_offset_5ga_p[2], sizeof(thermal_up_a));
+		odm_move_memory(dm, thermal_down_a, txagc_offset_5ga_n[2], sizeof(thermal_down_a));
+	}
+
+	if(thermal_detla < 0) {
+		if (thermal_detla < -29)
+			i = 29;
+		else
+			i = (u8)(-1 * thermal_detla);
+
+		if (path ==0 )
+			power_offset = thermal_down_a[i];
+		else
+			power_offset = thermal_down_b[i];
+
+		RF_DBG(dm, DBG_RF_TX_PWR_TRACK,"[RF][TSSI] Temp is lower\n");
+	} else {
+		if (thermal_detla >= 30)
+			i = 29;
+		else
+			i = thermal_detla;
+
+		if (path ==0 )
+			power_offset = thermal_up_a[i];
+		else
+			power_offset = thermal_up_b[i];
+		RF_DBG(dm, DBG_RF_TX_PWR_TRACK,"[RF][TSSI] Temp is higher\n");
+	}
+
+	return power_offset;
+}
+
+void halrf_powertracking_thermal(void *dm_void)
+{
+	struct dm_struct *dm = (struct dm_struct *)dm_void;
+	struct _hal_rf_ *rf = &dm->rf_table;
+	struct _halrf_tssi_data *tssi = &rf->halrf_tssi_data;
+	struct dm_rf_calibration_struct *cali_info = &(dm->rf_calibrate_info);
+	s8 thermal_value = 0, thermal_detla = 0;
+	s8 power_offset0 = 0, power_offset1 = 0;
+	u8 thermal_base = 0, temp[2] = {0};
+	u8 path;
+	u8 rate = phydm_get_tx_rate(dm);
+	//RF_DBG(dm, DBG_RF_TX_PWR_TRACK,"[RF][TSSI] ======>%s\n", __func__);
+
+	if(rf->is_tssi_in_progress == 1)
+		return;
+	if (*dm->mp_mode == 1) {
+		if (cali_info->txpowertrack_control <= 2) {
+			RF_DBG(dm, DBG_RF_TX_PWR_TRACK,"[RF][TSSI] return!! txpowertrack_control = %d\n",
+				cali_info->txpowertrack_control);
+			return;
+		}
+	} else {
+		if (!(rf->rf_supportability & HAL_RF_TX_PWR_TRACK)) {
+			RF_DBG(dm, DBG_RF_TX_PWR_TRACK,
+				"[RF][TSSI] ===>is_txpowertracking is false, return!!\n");
+			return;
+		}
+	}
+
+	if (odm_get_bb_reg(dm, R_0x4318, BIT30) == 1){
+		RF_DBG(dm, DBG_RF_TX_PWR_TRACK,"[RF][TSSI] return!! txpowertrack_control = %d, 0x4318 = 0x%x\n",
+			cali_info->txpowertrack_control,odm_get_bb_reg(dm, R_0x4318, MASKDWORD));
+		return;
+	}
+	path = (u8)odm_get_bb_reg(dm, 0x1884, BIT(20));
+	thermal_base = tssi->thermal_cal;
+	thermal_value = (s8)odm_get_rf_reg(dm, 0, RF_0x42, 0x7E);/*path0*/
+	thermal_detla = (s8)(thermal_value - thermal_base);
+	RF_DBG(dm, DBG_RF_TX_PWR_TRACK, "[RF][TSSI] thermal_value = 0x%x, thermal_base = 0x%x\n",
+		thermal_value, thermal_base);
+	power_offset0 = _halrf_get_power_offset_by_thermal_8723f(dm, 0, thermal_detla);
+	power_offset1 = _halrf_get_power_offset_by_thermal_8723f(dm, 1, thermal_detla);
+
+	if (rate == ODM_MGN_1M || rate == ODM_MGN_2M || rate == ODM_MGN_5_5M || rate == ODM_MGN_11M){
+		temp[0] = tssi->txagc_offset_thermaltrack[0] -0x18 + 4*(power_offset0);/*s0*/
+		temp[1] = tssi->txagc_offset_thermaltrack[1] - 0x8 + 4*(power_offset1);/*s1*/
+	} else {
+		temp[0] = tssi->txagc_offset_thermaltrack[0] + 4*(power_offset0);
+		temp[1] = tssi->txagc_offset_thermaltrack[1] + 4*(power_offset1);
+	}
+	/*S0:in the same index,cck_pwr-ofdm_pwr=7dB*/
+	odm_set_bb_reg(dm, R_0x4388, MASKBYTE0, temp[0]);/*s0*/
+	/*S1:in the same index,cck_pwr-ofdm_pwr=5dB*/
+	odm_set_bb_reg(dm, R_0x4388, MASKBYTE2, temp[1]);/*s1*/
+
+	RF_DBG(dm, DBG_RF_TX_PWR_TRACK, "[RF][TSSI] current_Path = %d, tx_rate = 0x%x\n", path, rate);
+	RF_DBG(dm, DBG_RF_TX_PWR_TRACK, "[RF][TSSI] txagc_offset = 0x%x\n",
+		tssi->txagc_offset_thermaltrack[path]);
+	RF_DBG(dm, DBG_RF_TX_PWR_TRACK,
+		"[RF][TSSI] thermal_detla = %d, thermal_offset_s0 = 0x%x, thermal_offset_s1 = 0x%x\n",
+		thermal_detla, power_offset0, power_offset1);
+	RF_DBG(dm, DBG_RF_TX_PWR_TRACK,"[RF][TSSI] 0x4388 = 0x%x\n",
+		odm_get_bb_reg(dm, R_0x4388, MASKDWORD));
+
+
+}
+void halrf_xtal_thermal_track(void *dm_void)
+{
+	struct dm_struct *dm = (struct dm_struct *)dm_void;
+	struct _hal_rf_ *rf = &dm->rf_table;
+	struct _halrf_tssi_data *tssi = &rf->halrf_tssi_data;
+	struct dm_rf_calibration_struct *cali_info = &(dm->rf_calibrate_info);
+	s8	*delta_swing_table_xtal_up = NULL;
+	u8	xtal_offset_eanble = 0, i =0;
+	s8	thermal_value = 0, thermal_detla = 0;
+	u8  	thermal_base = 0;
+	s8  	xtal_table_up[DELTA_SWINGIDX_SIZE] = {0};
+	s8  	xtal_table_down[DELTA_SWINGIDX_SIZE] = {0};
+	s32 	reg_val = 0, crystal_cap = 0;
+
+	RF_DBG(dm, DBG_RF_TX_PWR_TRACK,
+	       "[RF][xtal] ======>%s\n", __func__);
+
+	if ( dm->support_ic_type == ODM_RTL8723F) {	
+		if (rf->is_dpk_in_progress || dm->rf_calibrate_info.is_iqk_in_progress ||
+		    dm->is_psd_in_process || rf->is_tssi_in_progress ||
+		    !(rf->rf_supportability & HAL_RF_DPK_TRACK) || 
+		    rf->is_txgapk_in_progress)
+			return;
+
+		if(tssi->thermal[0] == 0xff) {
+			//RF_DBG(dm, DBG_RF_TX_PWR_TRACK, "[RF][xtal] thermal 0xFF, return!\n");
+			return;
+		} else {
+			thermal_base = tssi->thermal[0];
+			//RF_DBG(dm, DBG_RF_TX_PWR_TRACK, "[RF][xtal] thermal_base = 0x%x\n", thermal_base);
+		}
+
+		RF_DBG(dm, DBG_RF_TX_PWR_TRACK, "[RF][xtal] thermal_base = 0x%x\n", thermal_base);
+		
+		thermal_value = (s8)odm_get_rf_reg(dm, RF_PATH_A, RF_0x42, 0x7E);	/* 0x42: RF Reg[6:1]*/
+
+		thermal_detla = (s8)(thermal_value - thermal_base);
+		
+		RF_DBG(dm, DBG_RF_TX_PWR_TRACK, "[RF][xtal] cali_info->xtal_offset = 0x%x\n", cali_info->xtal_offset);
+
+		cali_info->xtal_offset_last = cali_info->xtal_offset;
+		/*
+		RF_DBG(dm, DBG_RF_TX_PWR_TRACK,
+						   "[RF][Xtal] cali_info->delta_swing_table_xtal_p = %d\n", cali_info->delta_swing_table_xtal_p[2]);
+		*/
+		RF_DBG(dm, DBG_RF_TX_PWR_TRACK,
+		       "[RF][Xtal] thermal_value = 0x%x, thermal_detla = 0x%x, xtal_offset_last = 0x%x\n", 
+		       thermal_value, thermal_detla, cali_info->xtal_offset_last);
+		odm_move_memory(dm, xtal_table_up, cali_info->delta_swing_table_xtal_p, sizeof(xtal_table_up));//(void *)
+		odm_move_memory(dm, xtal_table_down, cali_info->delta_swing_table_xtal_n, sizeof(xtal_table_down));
+		/*
+		RF_DBG(dm, DBG_RF_TX_PWR_TRACK,
+						   "[RF][Xtal] xtal_table_up[1] = %d\n", xtal_table_up[1]);*/
+		if(thermal_detla < 0) {
+			
+			if (thermal_detla < -29)
+				i = 29;
+			else
+				i = (u8)(-1 * thermal_detla);
+			cali_info->xtal_offset = xtal_table_down[i];
+		} else {
+
+			if (thermal_detla >= 30)
+				i = 29;
+			else
+				i = thermal_detla;
+
+			cali_info->xtal_offset = xtal_table_up[i];
+		}
+		
+		RF_DBG(dm, DBG_RF_TX_PWR_TRACK,
+		       "[RF][Xtal] xtal_offset = %d\n", cali_info->xtal_offset);
+		if (cali_info->xtal_offset_last == cali_info->xtal_offset)
+			xtal_offset_eanble = 0;
+		else
+			xtal_offset_eanble = 1;
+		RF_DBG(dm, DBG_RF_TX_PWR_TRACK,
+		       "[RF][Xtal] xtal_offset_eanble = %d\n", xtal_offset_eanble);
+		if (xtal_offset_eanble != 0) {
+			RF_DBG(dm, DBG_RF_TX_PWR_TRACK, "**********Enter Xtal Tracking**********\n");
+			RF_DBG(dm, DBG_RF_TX_PWR_TRACK,
+		       "[RF][Xtal] R_0x103c[16:10] = 0x%x\n", odm_get_mac_reg(dm, R_0x103c, 0x0001FC00));
+
+			crystal_cap = dm->dm_cfo_track.crystal_cap_default & 0x7F;
+			RF_DBG(dm, DBG_RF_TX_PWR_TRACK,
+		       "[RF][Xtal] DEFAULT crystal_cap = 0x%x\n", crystal_cap);
+			reg_val = crystal_cap + cali_info->xtal_offset;
+			if (reg_val > 0x7F)
+				reg_val = 0x7F;
+			else if (reg_val < 0)
+				reg_val = 0x0;
+
+			//reg_val = (u32)(odm_get_mac_reg(dm, R_0x103c, 0x0001FC00) + cali_info->xtal_offset);
+			RF_DBG(dm, DBG_RF_TX_PWR_TRACK,
+		       "[RF][Xtal] reg_val = 0x%x\n", reg_val);
+			/* write 0x103c[23:17] = 0x103c[16:10] = crystal_cap */
+			crystal_cap = reg_val | (reg_val << 7);
+			odm_set_mac_reg(dm, R_0x103c, 0x00FFFC00, crystal_cap);
+			RF_DBG(dm, DBG_RF_TX_PWR_TRACK,
+		       "[RF][Xtal] R_0x103c[16:10] = 0x%x\n", odm_get_mac_reg(dm, R_0x103c, 0x0001FC00));
+			RF_DBG(dm, DBG_RF_TX_PWR_TRACK,
+		       "[RF][Xtal] R_0x103c[23:17] = 0x%x\n", odm_get_mac_reg(dm, R_0x103c, 0x00FE0000));
+			RF_DBG(dm, DBG_RF_TX_PWR_TRACK, "**********End Xtal Tracking**********\n");
+		}
+		//odm_set_rf_reg(dm, RF_PATH_A, RF_0x42, 0x30000, 0x3);
+		//delay
+	}
+	/*RF_DBG(dm, DBG_RF_TX_PWR_TRACK,
+	       "[RF][xtal] <======%s\n", __func__);*/
+}
+#endif
+
 void _halrf_dump_subpage(void *dm_void, u32 *_used, char *output, u32 *_out_len, u8 page)
 {
 	struct dm_struct *dm = (struct dm_struct *)dm_void;
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/halrf/halrf.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/halrf/halrf.h
index e0eaa7f632cd..36caa945b6a6 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/halrf/halrf.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/halrf/halrf.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017  Realtek Corporation.
@@ -62,6 +61,14 @@
 #include "halrf/rtl8814b/halrf_txgapk_8814b.h"
 #endif
 
+#if (RTL8814C_SUPPORT == 1)
+#include "halrf/rtl8814c/halrf_rfk_init_8814c.h"
+#include "halrf/rtl8814c/halrf_iqk_8814c.h"
+#include "halrf/rtl8814c/halrf_dpk_8814c.h"
+#include "halrf/rtl8814c/halrf_txgapk_8814c.h"
+#endif
+
+
 /*@============================================================*/
 /*@Definition */
 /*@============================================================*/
@@ -109,6 +116,8 @@
 #define IQK_VER_8812F "0x0c"
 #define IQK_VER_8710C "0x0a"
 #define IQK_VER_8197G "0x03"
+#define IQK_VER_8723F "0x00"
+#define IQK_VER_8814C "0x00"
 
 /*LCK version*/
 #define LCK_VER_8188E "0x02"
@@ -125,12 +134,13 @@
 #define LCK_VER_8723D "0x01"
 #define LCK_VER_8822B "0x02"
 #define LCK_VER_8822C "0x00"
-#define LCK_VER_8821C "0x02"
+#define LCK_VER_8821C "0x03"
 #define LCK_VER_8814B "0x02"
 #define LCK_VER_8195B "0x02"
 #define LCK_VER_8710C "0x02"
 #define LCK_VER_8197G "0x01"
 #define LCK_VER_8198F "0x01"
+#define LCK_VER_8814C "0x00"
 
 /*power tracking version*/
 #define PWRTRK_VER_8188E "0x01"
@@ -150,6 +160,7 @@
 #define PWRTRK_VER_8821C "0x01"
 #define PWRTRK_VER_8814B "0x00"
 #define PWRTRK_VER_8197G "0x00"
+#define PWRTRK_VER_8814C "0x00"
 
 /*DPK version*/
 #define DPK_VER_8188E "NONE"
@@ -166,12 +177,13 @@
 #define DPK_VER_8822B "NONE"
 #define DPK_VER_8822C "0x20"
 #define DPK_VER_8821C "NONE"
-#define DPK_VER_8192F "0x0e"
+#define DPK_VER_8192F "0x13"
 #define DPK_VER_8198F "0x0e"
 #define DPK_VER_8814B "0x0f"
 #define DPK_VER_8195B "0x0c"
 #define DPK_VER_8812F "0x0a"
 #define DPK_VER_8197G "0x09"
+#define DPK_VER_8814C "0x01"
 
 /*RFK_INIT version*/
 #define RFK_INIT_VER_8822B "0x8"
@@ -181,10 +193,12 @@
 #define RFK_INIT_VER_8814B "0xa"
 #define RFK_INIT_VER_8812F "0x4"
 #define RFK_INIT_VER_8197G "0x4"
+#define RFK_INIT_VER_8814C "0x0"
 
 /*DACK version*/
 #define DACK_VER_8822C "0xa"
 #define DACK_VER_8814B "0x4"
+#define DACK_VER_8814C "0x0"
 
 /*TXGAPK version*/
 #define TXGAPK_VER_8814B "0x1"
@@ -231,6 +245,7 @@
 #define TSSI_VER_8821C "0x1"
 #define TSSI_VER_8814B "0x1"
 #define TSSI_VER_8197G "0x1"
+#define TSSI_VER_8723F "0x1"
 
 /*PA Bias Calibration version*/
 #define PABIASK_VER_8188E \
@@ -286,6 +301,7 @@
 	(dm->support_ic_type == ODM_RTL8821C) ? IQK_VER_8821C : \
 	(dm->support_ic_type == ODM_RTL8814B) ? IQK_VER_8814B : \
 	(dm->support_ic_type == ODM_RTL8710C) ? IQK_VER_8710C : \
+	(dm->support_ic_type == ODM_RTL8723F) ? IQK_VER_8723F : \
 	(dm->support_ic_type == ODM_RTL8197G) ? IQK_VER_8197G : "unknown"
 
 #define HALRF_LCK_VER \
@@ -370,7 +386,8 @@
 	(dm->support_ic_type == ODM_RTL8822C) ? TSSI_VER_8822C : \
 	(dm->support_ic_type == ODM_RTL8821C) ? TSSI_VER_8821C : \
 	(dm->support_ic_type == ODM_RTL8814B) ? TSSI_VER_8814B : \
-	(dm->support_ic_type == ODM_RTL8197G) ? TSSI_VER_8197G : "unknown"
+	(dm->support_ic_type == ODM_RTL8197G) ? TSSI_VER_8197G : \
+	(dm->support_ic_type == ODM_RTL8723F) ? TSSI_VER_8723F : "unknown"
 
 #define HALRF_PABIASK_VER \
 	(dm->support_ic_type == ODM_RTL8188E) ? PABIASK_VER_8188E : \
@@ -535,6 +552,11 @@ struct _halrf_tssi_data {
 	u8 get_thermal;
 	u8 tssi_finish_bit[PHYDM_MAX_RF_PATH];
 	u8 thermal_trigger;
+	s8 tssi_de;
+#if (RTL8723F_SUPPORT == 1)
+	s8 txagc_offset_thermaltrack[MAX_PATH_NUM_8723F];
+	u8 thermal_cal;
+#endif
 };
 
 struct _halrf_txgapk_info {
@@ -581,6 +603,8 @@ struct _hal_rf_ {
 	u32 p_rate_index;
 	u8 pwt_type;
 	u32 rf_dbg_comp;
+	u8 rfk_type;
+	u32 gnt_control;
 
 	u8 ext_lna;		/*@with 2G external LNA  NO/Yes = 0/1*/
 	u8 ext_lna_5g;		/*@with 5G external LNA  NO/Yes = 0/1*/
@@ -723,6 +747,9 @@ void halrf_tssi_get_efuse(void *dm_void);
 
 void halrf_do_tssi(void *dm_void);
 
+u8 halrf_do_tssi_by_manual(void *dm_void, u8 path);
+
+
 void halrf_set_tssi_enable(void *dm_void, boolean enable);
 
 void halrf_do_thermal(void *dm_void);
@@ -755,8 +782,12 @@ u32 halrf_tssi_trigger_de(void *dm_void, u8 path);
 
 u32 halrf_tssi_get_de(void *dm_void, u8 path);
 
+u32 halrf_get_online_tssi_de(void *dm_void, u8 path, s32 pout);
+
 void halrf_tssi_trigger(void *dm_void);
 
+void halrf_spur_compensation(void *dm_void);
+
 void halrf_txgapk_write_gain_table(void *dm_void);
 
 void halrf_txgapk_reload_tx_gain(void *dm_void);
@@ -798,6 +829,14 @@ void halrf_delay_10us(u16 v1);
 void halrf_dump_rfk_reg(void *dm_void, char input[][16], u32 *_used,
 			      char *output, u32 *_out_len);
 
+void halrf_xtal_thermal_track(void *dm_void);
+
+void halrf_powertracking_thermal(void *dm_void);
+
+u32 halrf_tssi_turn_target_power(void *dm_void, s16 power_offset, u8 path);
+
+void halrf_tssi_set_power_offset(void *dm_void, s16 power_offset, u8 path);
+
 void halrf_rfk_power_save(void *dm_void, boolean is_power_save);
 
 #endif /*__HALRF_H__*/
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/halrf/halrf_debug.c b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/halrf/halrf_debug.c
index ff79a5990a43..3f2d142b6921 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/halrf/halrf_debug.c
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/halrf/halrf_debug.c
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017  Realtek Corporation.
@@ -379,7 +378,7 @@ void halrf_init_debug_setting(void *dm_void)
 
 	DBG_RF_RFK		|
 #if DBG
-#if 0
+#if 1
 	/*DBG_RF_TX_PWR_TRACK	| */
 	/*DBG_RF_IQK		| */
 	/*DBG_RF_LCK		| */
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/halrf/halrf_debug.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/halrf/halrf_debug.h
index 765dd1726b65..c13f3c5677f2 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/halrf/halrf_debug.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/halrf/halrf_debug.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017  Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/halrf/halrf_dpk.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/halrf/halrf_dpk.h
index c090e7ea508c..f51ff6f6ebac 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/halrf/halrf_dpk.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/halrf/halrf_dpk.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017  Realtek Corporation.
@@ -45,10 +44,10 @@
 #define THERMAL_DPK_AVG_NUM 4
 
 /*define RF path numer*/
-#if (RTL8198F_SUPPORT == 1 || RTL8814B_SUPPORT == 1)
+#if (RTL8198F_SUPPORT == 1 || RTL8814B_SUPPORT == 1|| RTL8814C_SUPPORT == 1)
 #define KPATH 4
 #elif (RTL8192F_SUPPORT == 1 || RTL8197F_SUPPORT == 1 ||RTL8197G_SUPPORT == 1 ||\
-	RTL8822C_SUPPORT == 1 || RTL8812F_SUPPORT == 1)
+	RTL8822C_SUPPORT == 1 || RTL8812F_SUPPORT == 1 || RTL8723F_SUPPORT == 1)
 #define KPATH 2
 #else
 #define KPATH 1
@@ -123,7 +122,12 @@ struct dm_dpk_info {
 	u8	tx_gain;
 #endif
 
-#if (RTL8195B_SUPPORT == 1 || RTL8721D_SUPPORT == 1)
+#if (RTL8814C_SUPPORT == 1)
+	u8	thr_pwsf[KPATH];
+#endif
+
+
+#if (RTL8195B_SUPPORT == 1)
 		u8	dpk_txagc;
 		/*2G DPK data*/
 	u8	dpk_2g_result[KPATH][3];			/*path/group*/
@@ -136,6 +140,46 @@ struct dm_dpk_info {
 	u32	lut_5g_even[KPATH][GROUP_5G][16];		/*path/group/LUT data*/
 	u32	lut_5g_odd[KPATH][GROUP_5G][16];		/*path/group/LUT data*/
 #endif
+
+#if (RTL8721D_SUPPORT == 1)
+	s16	tmp_pas_i[32];			/*PAScan I data*/
+	s16	tmp_pas_q[32];			/*PAScan Q data*/
+	u8	dpk_txagc;			/*path*/
+#if (DPK_BY_GROUP_K_8721D)
+	/*2G DPK data*/
+	u8	dpk_2g_result[1][3];		/*path/group*/
+	u8	pwsf_2g[1][3];			/*path/group*/
+	u32	lut_2g_even[1][3][16];		/*path/group/LUT data*/
+	u32	lut_2g_odd[1][3][16];		/*path/group/LUT data*/
+	/*5G DPK data*/
+	u8	dpk_5g_result[1][6];		/*path/group*/
+	u8	pwsf_5g[1][6];			/*path/group*/
+	u32	lut_5g_even[1][6][16];		/*path/group/LUT data*/
+	u32	lut_5g_odd[1][6][16];		/*path/group/LUT data*/
+#else
+	u8	dpk_2g_result[1][1];		/*path/group*/
+	u8	pwsf_2g[1][1];			/*path/group*/
+	u32	lut_2g_even[1][1][16];		/*path/group/LUT data*/
+	u32	lut_2g_odd[1][1][16];		/*path/group/LUT data*/
+	u8	dpk_5g_result[1][1];		/*path/group*/
+	u8	pwsf_5g[1][1];			/*path/group*/
+	u32	lut_5g_even[1][1][16];		/*path/group/LUT data*/
+	u32	lut_5g_odd[1][1][16];		/*path/group/LUT data*/
+#endif
+#endif
+
+#if(RTL8723F_SUPPORT == 1)
+	u8	one_shot_cnt;
+	u8	dpk_current_path;
+	u8	thermal_init[KPATH];
+	u8	dpk_delta_thermal[KPATH];		/*path*/
+	s8	last_offset[KPATH];			/*path*/
+	u8	txagc[KPATH];				/*path*/
+	u8	tssi_txagc[KPATH][2];			/*path/0:txagc_rf,1:tssi_offset*/
+	u16	digital_bbgain[KPATH];			/*path*/
+	u16	pwsf[KPATH];				/*path*/
+
+#endif
 };
 
 #if (RTL8822C_SUPPORT == 1)
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/halrf/halrf_features.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/halrf/halrf_features.h
index a17483b98753..da97614be1e9 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/halrf/halrf_features.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/halrf/halrf_features.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017  Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/halrf/halrf_iqk.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/halrf/halrf_iqk.h
index 2d0df4069c05..0c7fe30f3b45 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/halrf/halrf_iqk.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/halrf/halrf_iqk.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017  Realtek Corporation.
@@ -41,10 +40,11 @@
 #define TXWBIQK_EN 1
 #define RXWBIQK_EN 1
 #if (RTL8814A_SUPPORT == 1 || RTL8198F_SUPPORT == 1 ||\
-	RTL8814B_SUPPORT)
+	RTL8814B_SUPPORT ||RTL8814C_SUPPORT == 1)
 #define NUM 4
 #elif (RTL8822B_SUPPORT == 1 || RTL8822C_SUPPORT == 1 ||\
-	RTL8812F_SUPPORT == 1 ||	RTL8197G_SUPPORT == 1)
+	RTL8812F_SUPPORT == 1 || RTL8197G_SUPPORT == 1 ||\
+	RTL8723F_SUPPORT == 1)
 #define NUM 2
 #else
 #define NUM 1
@@ -86,19 +86,26 @@ struct dm_iqk_info {
 	RTL8195B_SUPPORT == 1 || RTL8198F_SUPPORT == 1 ||\
 	RTL8814B_SUPPORT == 1 || RTL8822C_SUPPORT == 1 ||\
 	RTL8812F_SUPPORT == 1 || RTL8197G_SUPPORT == 1 ||\
-	RTL8710C_SUPPORT == 1 || RTL8723F_SUPPORT == 1)
+	RTL8710C_SUPPORT == 1 || RTL8723F_SUPPORT == 1 ||\
+	RTL8814C_SUPPORT == 1)
 	u32 iqk_channel[2];
 	boolean iqk_fail_report[2][NUM][2]; /*channel/path/TRX(TX:0, RX:1) */
 	/*channel / path / TRX(TX:0, RX:1) / CFIR_real*/
 	/*channel index = 2 is just for debug*/
-#if (RTL8814B_SUPPORT == 1)
+#if (RTL8814B_SUPPORT == 1||RTL8814C_SUPPORT == 1)
 	u16 iqk_cfir_real[3][NUM][2][19];
 	u16 iqk_cfir_imag[3][NUM][2][19];
+	u32 rx_cfir_real[2][NUM][17];
+	u32 rx_cfir_imag[2][NUM][17];
+	u32 rx_cfir[2][NUM];
 #elif (RTL8812F_SUPPORT == 1 || RTL8822C_SUPPORT == 1 )
 	u16 iqk_cfir_real[3][2][2][17];
 	/*channel / path / TRX(TX:0, RX:1) / CFIR_imag*/
 	/*channel index = 2 is just for debug*/
 	u16 iqk_cfir_imag[3][2][2][17];
+	u32 rx_cfir_real[2][2][17];
+	u32 rx_cfir_imag[2][2][17];
+	u32 rx_cfir[2][2];
 	/*times/path*/
 #elif (RTL8195B_SUPPORT == 1)
 	u32 iqk_cfir_real[3][NUM][2][9];
@@ -112,11 +119,6 @@ struct dm_iqk_info {
 	u32 iqk_cfir_imag[3][NUM][2][8];
 #endif
 
-#if (RTL8812F_SUPPORT == 1 || RTL8822C_SUPPORT == 1 )
-	u32 rx_cfir_real[2][2][17];
-	u32 rx_cfir_imag[2][2][17];
-	u32 rx_cfir[2][2];
-#endif
 	u8 retry_count[2][NUM][3]; /* channel / path / (TXK:0, RXK1:1, RXK2:2) */
 	u8 gs_retry_count[2][NUM][2]; /* channel / path / (GSRXK1:0, GSRXK2:1) */
 	/* channel / path 0:SRXK1 fail, 1:RXK1 fail 2:RXK2 fail */
@@ -146,6 +148,11 @@ struct dm_iqk_info {
 	u32 txxy[2][2];
 	u32 rxxy[2][2];
 #endif
+#if (RTL8723F_SUPPORT == 1)
+	u32 txxy[2][2];
+	u32 rxxy[2][2][2];
+#endif
+
 #endif
 };
 
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/halrf/halrf_kfree.c b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/halrf/halrf_kfree.c
index 3c4a939cd585..66a9a7077fcd 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/halrf/halrf_kfree.c
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/halrf/halrf_kfree.c
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017  Realtek Corporation.
@@ -3333,6 +3332,310 @@ void phydm_get_thermal_trim_offset_8814b(void *dm_void)
 	}
 }
 
+void phydm_get_thermal_trim_offset_8723f(void *dm_void)
+{
+	struct dm_struct *dm = (struct dm_struct *)dm_void;
+	struct odm_power_trim_data *power_trim_info = &dm->power_trim_data;
+	u8 pg_therm = 0xff;
+
+#if 1
+	odm_efuse_one_byte_read(dm, PPG_THERMAL_OFFSET_8723F, &pg_therm, false);
+
+	if (pg_therm != 0xff) {
+		pg_therm = pg_therm & 0x1f;
+		if ((pg_therm & BIT(0)) == 0)
+			power_trim_info->thermal = (-1 * (pg_therm >> 1));
+		else
+			power_trim_info->thermal = (pg_therm >> 1);
+
+		power_trim_info->flag |= KFREE_FLAG_THERMAL_K_ON;
+	}
+	/*if (pg_therm != 0xff) {
+		pg_therm = pg_therm & 0x1f;
+		thermal[RF_PATH_A] =((pg_therm & 0x1) << 3) | ((pg_therm >> 1) & 0x7);
+		odm_set_rf_reg(dm, RF_PATH_A, RF_0x43, 0x000f0000, thermal[RF_PATH_A]);
+	}*/
+
+	RF_DBG(dm, DBG_RF_MP, "[kfree] 8723F thermal trim flag:0x%02x\n",
+	       power_trim_info->flag);
+
+	if (power_trim_info->flag & KFREE_FLAG_THERMAL_K_ON)
+		RF_DBG(dm, DBG_RF_MP, "[kfree] 8723F thermal:%d\n",
+		       power_trim_info->thermal);	
+#endif
+}
+
+void phydm_get_set_power_trim_offset_8723f(void *dm_void)
+{
+	struct dm_struct *dm = (struct dm_struct *)dm_void;
+	struct odm_power_trim_data *power_trim_info = &dm->power_trim_data;	
+	u8 pg_power = 0xff, i, j;
+	u8 pg_power1, pg_power2 , pg_power3, pg_power4, pg_power5;
+#if 0	
+	odm_efuse_one_byte_read(dm, PPG_2GL_TXAB_22C, &pg_power1, false);
+	odm_efuse_one_byte_read(dm, PPG_2GM_TXAB_22C, &pg_power2, false);
+	odm_efuse_one_byte_read(dm, PPG_2GH_TXAB_22C, &pg_power3, false);
+	odm_efuse_one_byte_read(dm, PPG_5GL1_TXA_22C, &pg_power4, false);
+	odm_efuse_one_byte_read(dm, PPG_5GL1_TXB_22C, &pg_power5, false);
+	
+	if (pg_power1 != 0xff || pg_power2 != 0xff || pg_power3 != 0xff ||
+		pg_power4 != 0xff || pg_power5 != 0xff) {
+		odm_efuse_one_byte_read(dm, PPG_2GL_TXAB_22C, &pg_power, false);
+		if (pg_power == 0xff)
+			pg_power = 0;
+		power_trim_info->bb_gain[0][0] = pg_power & 0xf;
+		power_trim_info->bb_gain[0][1] = (pg_power & 0xf0) >> 4;
+	
+		odm_efuse_one_byte_read(dm, PPG_2GM_TXAB_22C, &pg_power, false);
+		if (pg_power == 0xff)
+			pg_power = 0;
+		power_trim_info->bb_gain[1][0] = pg_power & 0xf;
+		power_trim_info->bb_gain[1][1] = (pg_power & 0xf0) >> 4;
+	
+		odm_efuse_one_byte_read(dm, PPG_2GH_TXAB_22C, &pg_power, false);
+		if (pg_power == 0xff)
+			pg_power = 0;
+		power_trim_info->bb_gain[2][0] = pg_power & 0xf;
+		power_trim_info->bb_gain[2][1] = (pg_power & 0xf0) >> 4;
+	
+		odm_efuse_one_byte_read(dm, PPG_5GL1_TXA_22C, &pg_power, false);
+		if (pg_power == 0xff)
+			pg_power = 0;
+		power_trim_info->bb_gain[3][0] = pg_power & 0x1f;
+		odm_efuse_one_byte_read(dm, PPG_5GL1_TXB_22C, &pg_power, false);
+		if (pg_power == 0xff)
+			pg_power = 0;
+		power_trim_info->bb_gain[3][1] = pg_power & 0x1f;
+	
+		odm_efuse_one_byte_read(dm, PPG_5GL2_TXA_22C, &pg_power, false);
+		if (pg_power == 0xff)
+			pg_power = 0;
+		power_trim_info->bb_gain[4][0] = pg_power & 0x1f;
+		odm_efuse_one_byte_read(dm, PPG_5GL2_TXB_22C, &pg_power, false);
+		if (pg_power == 0xff)
+			pg_power = 0;
+		power_trim_info->bb_gain[4][1] = pg_power & 0x1f;
+	
+		odm_efuse_one_byte_read(dm, PPG_5GM1_TXA_22C, &pg_power, false);
+		if (pg_power == 0xff)
+			pg_power = 0;
+		power_trim_info->bb_gain[5][0] = pg_power & 0x1f;
+		odm_efuse_one_byte_read(dm, PPG_5GM1_TXB_22C, &pg_power, false);
+		if (pg_power == 0xff)
+			pg_power = 0;
+		power_trim_info->bb_gain[5][1] = pg_power & 0x1f;
+	
+		odm_efuse_one_byte_read(dm, PPG_5GM2_TXA_22C, &pg_power, false);
+		if (pg_power == 0xff)
+			pg_power = 0;
+		power_trim_info->bb_gain[6][0] = pg_power & 0x1f;
+		odm_efuse_one_byte_read(dm, PPG_5GM2_TXB_22C, &pg_power, false);
+		if (pg_power == 0xff)
+			pg_power = 0;
+		power_trim_info->bb_gain[6][1] = pg_power & 0x1f;
+	
+		odm_efuse_one_byte_read(dm, PPG_5GH1_TXA_22C, &pg_power, false);
+		if (pg_power == 0xff)
+			pg_power = 0;
+		power_trim_info->bb_gain[7][0] = pg_power & 0x1f;
+		odm_efuse_one_byte_read(dm, PPG_5GH1_TXB_22C, &pg_power, false);
+		if (pg_power == 0xff)
+			pg_power = 0;
+		power_trim_info->bb_gain[7][1] = pg_power & 0x1f;
+	
+		power_trim_info->flag =
+			power_trim_info->flag | KFREE_FLAG_ON |
+						KFREE_FLAG_ON_2G |
+						KFREE_FLAG_ON_5G;
+	
+		phydm_set_power_trim_offset_8822c(dm);
+	}
+	
+	RF_DBG(dm, DBG_RF_MP, "[kfree] 8822c power trim flag:0x%02x\n",
+	       power_trim_info->flag);
+	
+	if (power_trim_info->flag & KFREE_FLAG_ON) {
+		for (i = 0; i < KFREE_BAND_NUM; i++) {
+			for (j = 0; j < 2; j++) {
+				RF_DBG(dm, DBG_RF_MP,
+				       "[kfree] 8822c pwr_trim->bb_gain[%d][%d]=0x%X\n",
+				       i, j, power_trim_info->bb_gain[i][j]);
+			}
+		}
+	}
+#endif
+}
+
+void phydm_get_tssi_trim_offset_8723f(void *dm_void)
+{
+	struct dm_struct *dm = (struct dm_struct *)dm_void;
+	struct odm_power_trim_data *power_trim_info = &dm->power_trim_data;
+	u8 i, j, k;
+	u8 pg_power[16] = {0xff, 0xff, 0xff, 0xff,
+			   0xff, 0xff, 0xff, 0xff,
+			   0xff, 0xff, 0xff, 0xff,
+			   0xff, 0xff, 0xff, 0xff};
+#if 1
+	odm_efuse_one_byte_read(dm, PPG_S0_CH3_TSSIDE_8723F, &pg_power[0], false);
+	odm_efuse_one_byte_read(dm, PPG_S1_CH3_TSSIDE_8723F, &pg_power[1], false);
+	odm_efuse_one_byte_read(dm, PPG_S0_CH11_TSSIDE_8723F, &pg_power[2], false);
+	odm_efuse_one_byte_read(dm, PPG_S1_CH11_TSSIDE_8723F, &pg_power[3], false);
+	odm_efuse_one_byte_read(dm, PPG_S0_CH42_TSSIDE_8723F, &pg_power[4], false);
+	odm_efuse_one_byte_read(dm, PPG_S0_CH58_TSSIDE_8723F, &pg_power[6], false);
+	odm_efuse_one_byte_read(dm, PPG_S0_CH110_TSSIDE_8723F, &pg_power[8], false);
+	odm_efuse_one_byte_read(dm, PPG_S0_CH134_TSSIDE_8723F, &pg_power[10], false);
+	odm_efuse_one_byte_read(dm, PPG_S0_CH159_TSSIDE_8723F, &pg_power[12], false);
+	odm_efuse_one_byte_read(dm, PPG_S0_CH171_TSSIDE_8723F, &pg_power[14], false);
+
+	j = 0;
+	for (i = 0; i < 16; i++) {
+		if ((pg_power[i] & 0xff) == 0xff)
+			j++;
+	}
+
+	if (j == 16) {
+		for (i = 0; i < 9; i++)
+			for(k = 0; i < 2; i++)
+				power_trim_info->tssi_trim[i][k] = 0;
+		RF_DBG(dm, DBG_RF_MP, "[kfree] 8723F tssi trim no PG\n");
+	} else {
+		power_trim_info->tssi_trim[0][0] = (s8)pg_power[0];
+		power_trim_info->tssi_trim[0][1] = (s8)pg_power[1];
+		power_trim_info->tssi_trim[1][0] = (s8)pg_power[2];
+		power_trim_info->tssi_trim[1][1] = (s8)pg_power[3];
+		power_trim_info->tssi_trim[2][0] = (s8)pg_power[4];
+		power_trim_info->tssi_trim[2][1] = 0;
+		power_trim_info->tssi_trim[3][0] = (s8)pg_power[6];
+		power_trim_info->tssi_trim[3][1] = 0;
+		power_trim_info->tssi_trim[4][0] = (s8)pg_power[8];
+		power_trim_info->tssi_trim[4][1] = 0;
+		power_trim_info->tssi_trim[5][0] = (s8)pg_power[10];
+		power_trim_info->tssi_trim[5][1] = 0;
+		power_trim_info->tssi_trim[6][0] = (s8)pg_power[12];
+		power_trim_info->tssi_trim[6][1] = 0;
+		power_trim_info->tssi_trim[7][0] = (s8)pg_power[14];
+		power_trim_info->tssi_trim[7][1] = 0;
+
+		power_trim_info->flag =
+			power_trim_info->flag | TSSI_TRIM_FLAG_ON;
+
+		if (power_trim_info->flag & TSSI_TRIM_FLAG_ON) {
+			for (i = 0; i < 8; i++) { //KFREE_BAND_NUM
+				for (j = 0; j < 2; j++) {
+					RF_DBG(dm, DBG_RF_MP,
+					       "[kfree] 8723F tssi_trim[%d][%d]=0x%X\n",
+					       i, j, power_trim_info->tssi_trim[i][j]);
+				}
+			}
+		}
+	}
+#endif
+}
+
+s8 phydm_get_tssi_trim_de_8723f(void *dm_void, u8 path)
+{
+	struct dm_struct *dm = (struct dm_struct *)dm_void;
+	struct odm_power_trim_data *power_trim_info = &dm->power_trim_data;
+	u8 channel = *dm->channel, group = 0;
+
+	if (channel >= 1 && channel <= 7) {
+		group = 0;
+	} else if (channel >= 8 && channel <= 14) {
+		group = 1;
+	} else if (channel >= 36 && channel <= 50) {
+		group = 2;
+	} else if (channel >= 52 && channel <= 64) {
+		group = 3;
+	} else if (channel >= 100 && channel <= 128) {
+		group = 4;
+	} else if (channel >= 129 && channel <= 144) {
+		group = 5;
+	} else if (channel >= 149 && channel <= 163) {
+		group = 6;
+	} else if (channel >= 164 && channel <= 177) {
+		group = 7;
+	} else {
+		RF_DBG(dm, DBG_RF_MP, "[kfree] Channel(%d) is not exist in Group\n", channel);
+		return 0;
+	}
+
+	return power_trim_info->tssi_trim[group][path];
+}
+
+void phydm_get_set_pa_bias_offset_8723f(void *dm_void)
+{
+	struct dm_struct *dm = (struct dm_struct *)dm_void;
+	struct odm_power_trim_data *power_trim_info = &dm->power_trim_data;
+
+	u8 i;
+	u8 ppa_bias_2g[2] = {0}, ppa_bias_5g = 0;
+
+	odm_efuse_one_byte_read(dm, PPG_PABIAS_2GA_8723F, &ppa_bias_2g[0], false);
+	odm_efuse_one_byte_read(dm, PPG_PABIAS_2GB_8723F, &ppa_bias_2g[1], false);
+	odm_efuse_one_byte_read(dm, PPG_PABIAS_5GA_8723F, &ppa_bias_5g, false);
+
+	if (ppa_bias_2g[0] == 0xff && ppa_bias_2g[1] == 0xff) {
+		RF_DBG(dm, DBG_RF_MP, "[kfree] 8723f 2g PA Bias K no PG\n");
+	} else {
+		for (i = 0; i < MAX_PATH_NUM_8723F; i++) {
+			power_trim_info->pa_bias_trim[0][i] = ppa_bias_2g[i] & 0xf;
+			RF_DBG(dm, DBG_RF_MP,
+			       "[kfree] 8723f S%d 2g PA Bias K efuse:0x%x\n",
+			       i, power_trim_info->pa_bias_trim[0][i]);
+			odm_set_rf_reg(dm, i, RF_0x60, 0x0f000, power_trim_info->pa_bias_trim[0][i]);
+		}
+		power_trim_info->pa_bias_flag |= PA_BIAS_FLAG_ON;
+	}
+
+	if (ppa_bias_5g == 0xff) {
+		RF_DBG(dm, DBG_RF_MP, "[kfree] 8723f 5g PA Bias K no PG\n");
+	} else {
+		power_trim_info->pa_bias_trim[1][RF_PATH_A] = ppa_bias_5g & 0xf;
+		RF_DBG(dm, DBG_RF_MP, "[kfree] 8723f 5g PA Bias K efuse:0x%x\n",
+		       power_trim_info->pa_bias_trim[1][RF_PATH_A]);
+
+		odm_set_rf_reg(dm, RF_PATH_A, RF_0x60, 0xf0000, power_trim_info->pa_bias_trim[1][0]);
+		power_trim_info->pa_bias_flag |= PA_BIAS_FLAG_ON;
+	}
+}
+
+void phydm_get_set_lna_offset_8723f(void *dm_void)
+{
+	struct dm_struct *dm = (struct dm_struct *)dm_void;
+	struct odm_power_trim_data *power_trim_info = &dm->power_trim_data;
+
+	u8 i;
+	u8 pg_lna_2g[2] = {0}, pg_lna_5g = 0;
+
+	odm_efuse_one_byte_read(dm, PPG_LNA_2GA_8723F, &pg_lna_2g[0], false);
+	odm_efuse_one_byte_read(dm, PPG_LNA_2GB_8723F, &pg_lna_2g[1], false);
+	odm_efuse_one_byte_read(dm, PPG_LNA_5GA_8723F, &pg_lna_5g, false);
+
+	if (pg_lna_2g[0] == 0xff && pg_lna_2g[1] == 0xff) {
+		RF_DBG(dm, DBG_RF_MP, "[kfree] 8723f 2g LNA Bias K no PG\n");
+	} else {
+		for (i = 0; i < MAX_PATH_NUM_8723F; i++) {
+			power_trim_info->lna_trim[i] = pg_lna_2g[i] & 0x3f;
+			RF_DBG(dm, DBG_RF_MP,
+			       "[kfree] 8723f S%d 2g LNA Bias K efuse:0x%x\n",
+			       i, power_trim_info->lna_trim[i]);
+			odm_set_rf_reg(dm, i, RF_0x88, 0x003f0, power_trim_info->lna_trim[i]);
+		}
+		power_trim_info->lna_flag |= LNA_FLAG_ON;
+	}
+
+	if (pg_lna_5g == 0xff) {
+		RF_DBG(dm, DBG_RF_MP, "[kfree] 8723f 5g LNA Bias K no PG\n");
+	} else {
+		power_trim_info->lna_trim[2] = pg_lna_5g & 0x3f;
+		RF_DBG(dm, DBG_RF_MP, "[kfree] 8723f 5g LNA Bias K efuse:0x%x\n",
+		       power_trim_info->lna_trim[2]);
+
+		odm_set_rf_reg(dm, RF_PATH_A, RF_0x8b, 0x03f00, power_trim_info->lna_trim[2]);
+		power_trim_info->lna_flag |= LNA_FLAG_ON;
+	}
+}
+
 s8 phydm_get_tssi_trim_de(void *dm_void, u8 path)
 {
 	struct dm_struct *dm = (struct dm_struct *)dm_void;
@@ -3345,8 +3648,10 @@ s8 phydm_get_tssi_trim_de(void *dm_void, u8 path)
 		return phydm_get_tssi_trim_de_8197g(dm, path);
 	else if (dm->support_ic_type & ODM_RTL8814B)
 		return phydm_get_tssi_trim_de_8814b(dm, path);
+	else if (dm->support_ic_type & ODM_RTL8723F)
+		return phydm_get_tssi_trim_de_8723f(dm, path);
 	else
-		return 0;	
+		return 0;
 }
 
 void phydm_do_new_kfree(void *dm_void)
@@ -3404,6 +3709,13 @@ void phydm_do_new_kfree(void *dm_void)
 		phydm_get_pa_bias_offset_8814b(dm);
 		phydm_get_tssi_trim_offset_8814b(dm);
 	}
+	if (dm->support_ic_type & ODM_RTL8723F) {
+		phydm_get_thermal_trim_offset_8723f(dm);
+		phydm_get_set_power_trim_offset_8723f(dm);
+		phydm_get_set_pa_bias_offset_8723f(dm);
+		phydm_get_set_lna_offset_8723f(dm);
+		phydm_get_tssi_trim_offset_8723f(dm);
+	}
 }
 
 void phydm_set_kfree_to_rf(void *dm_void, u8 e_rf_path, u8 data)
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/halrf/halrf_kfree.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/halrf/halrf_kfree.h
index 153dcff116a3..0446c4b6f52e 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/halrf/halrf_kfree.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/halrf/halrf_kfree.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017  Realtek Corporation.
@@ -164,6 +163,26 @@
 #define PPG_5GM2_TXA_8721D 0x1EA
 #define PPG_5GH1_TXA_8721D 0x1E9
 
+/*8723F*/
+/*#define KFREE_BAND_NUM_8723F*/
+#define PPG_THERMAL_OFFSET_8723F 0x1EF
+#define PPG_S0_CH3_TSSIDE_8723F 0x1DD
+#define PPG_S1_CH3_TSSIDE_8723F 0x1DC
+#define PPG_S0_CH11_TSSIDE_8723F 0x1DB
+#define PPG_S1_CH11_TSSIDE_8723F 0x1DA
+#define PPG_S0_CH42_TSSIDE_8723F 0x1D9
+#define PPG_S0_CH58_TSSIDE_8723F 0x1D8
+#define PPG_S0_CH110_TSSIDE_8723F 0x1D7
+#define PPG_S0_CH134_TSSIDE_8723F 0x1D6
+#define PPG_S0_CH159_TSSIDE_8723F 0x1D5
+#define PPG_S0_CH171_TSSIDE_8723F 0x1D4
+#define PPG_PABIAS_5GA_8723F 0x1E8
+#define PPG_PABIAS_2GA_8723F 0x1E7
+#define PPG_PABIAS_2GB_8723F 0x1E6
+#define PPG_LNA_2GA_8723F 0x1E3
+#define PPG_LNA_2GB_8723F 0x1E2
+#define PPG_LNA_5GA_8723F 0x1E1
+
 /*8197G*/
 #define PPG_THERMAL_A_OFFSET_97G 0x50
 #define PPG_THERMAL_B_OFFSET_97G 0x27
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/halrf/halrf_powertracking.c b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/halrf/halrf_powertracking.c
index bde6dd15765d..3ccbf7484f34 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/halrf/halrf_powertracking.c
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/halrf/halrf_powertracking.c
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017  Realtek Corporation.
@@ -163,19 +162,25 @@ void halrf_set_pwr_track(void *dm_void, u8 enable)
 	configure_txpower_track(dm, &c);
 	if (enable) {
 		rf->rf_supportability = rf->rf_supportability | HAL_RF_TX_PWR_TRACK;
-		if (cali_info->txpowertrack_control == 1 || cali_info->txpowertrack_control == 3)
-			halrf_do_tssi(dm);
+
+		if (dm->support_ic_type != ODM_RTL8723F) {
+			if (cali_info->txpowertrack_control == 1 || cali_info->txpowertrack_control == 3)
+				halrf_do_tssi(dm);
+		}
+
+		halrf_tssi_get_efuse(dm);
+		halrf_do_tssi(dm);
+
 	} else {
 		rf->rf_supportability = rf->rf_supportability & ~HAL_RF_TX_PWR_TRACK;
 		odm_clear_txpowertracking_state(dm);
 		halrf_do_tssi(dm);
 		halrf_calculate_tssi_codeword(dm);
 		halrf_set_tssi_codeword(dm);
-		
-#if !(RTL8723F_SUPPORT == 1)
+
 		for (i = 0; i < c.rf_path_count; i++)
 			(*c.odm_tx_pwr_track_set_pwr)(dm, CLEAN_MODE, i, 0);
-#endif
+
 	}
 
 	if (cali_info->txpowertrack_control == 2 ||
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/halrf/halrf_powertracking.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/halrf/halrf_powertracking.h
index 99ee3cff4dfa..c81f25225d7a 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/halrf/halrf_powertracking.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/halrf/halrf_powertracking.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017  Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/halrf/halrf_powertracking_ap.c b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/halrf/halrf_powertracking_ap.c
index 462b2f8b95f0..aaadf8878a47 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/halrf/halrf_powertracking_ap.c
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/halrf/halrf_powertracking_ap.c
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017 Realtek Corporation.
@@ -739,7 +738,7 @@ u8 cck_swing_table_ch14_92e[CCK_TABLE_SIZE_92E][8] = {
 
 #if (RTL8814A_SUPPORT == 1 || RTL8822B_SUPPORT == 1 ||\
 	RTL8821C_SUPPORT == 1 || RTL8198F_SUPPORT == 1 ||\
-	RTL8814B_SUPPORT == 1)
+	RTL8814B_SUPPORT == 1 || RTL8814C_SUPPORT == 1)
 u32 tx_scaling_table_jaguar[TXSCALE_TABLE_SIZE] = {
 	0x081, /* 0,  -12.0dB */
 	0x088, /* 1,  -11.5dB */
@@ -928,7 +927,8 @@ odm_txpowertracking_init(
 {
 	struct dm_struct		*dm = (struct dm_struct *)dm_void;
 #if (DM_ODM_SUPPORT_TYPE & (ODM_AP))
-	if (!(dm->support_ic_type & (ODM_RTL8814A | ODM_RTL8822B | ODM_RTL8814B | ODM_IC_11N_SERIES)))
+	if (!(dm->support_ic_type & (ODM_RTL8814A | ODM_RTL8822B |
+		ODM_RTL8814B | ODM_RTL8814C | ODM_IC_11N_SERIES)))
 		return;
 #endif
 
@@ -988,6 +988,28 @@ get_swing_index(
 	return i;
 }
 
+u8 get_cck_swing_index(void *dm_void)
+{
+	struct dm_struct *dm = (struct dm_struct *)dm_void;
+	struct rtl8192cd_priv *priv = dm->priv;
+
+	u8 i = 0;
+	u32 bb_cck_swing;
+
+#if (RTL8192F_SUPPORT == 1)
+	if (GET_CHIP_VER(priv) == VERSION_8192F) {
+		bb_cck_swing = odm_get_bb_reg(dm, R_0xab4, 0x7ff);
+
+		for (i = 0; i < CCK_TABLE_SIZE; i++) {
+			if (bb_cck_swing == cck_swing_table_ch1_ch14_8192f[i])
+				break;
+		}
+	}
+#endif
+
+	return i;
+}
+
 s8
 get_txagc_default_index(
 	void *dm_void
@@ -996,8 +1018,8 @@ get_txagc_default_index(
 	struct dm_struct *dm = (struct dm_struct *)dm_void;
 	s8 tmp;
 
-#if RTL8814B_SUPPORT
-	if (dm->support_ic_type == ODM_RTL8814B) {
+#if (RTL8814B_SUPPORT == 1 || RTL8814C_SUPPORT == 1)
+	if (dm->support_ic_type  & (ODM_RTL8814B | ODM_RTL8814C)) {
 		tmp = (s8)(odm_get_bb_reg(dm, R_0x18a0, 0x7f) & 0xff);
 		if (tmp & BIT(6))
 			tmp = tmp | 0x80;
@@ -1019,10 +1041,13 @@ odm_txpowertracking_thermal_meter_init(
 	struct rtl8192cd_priv		*priv = dm->priv;
 	u8 p;
 	u8 default_swing_index;
+	u8 default_cckswing_idx;
 	u8 i;
 #if (RTL8197F_SUPPORT == 1 || RTL8822B_SUPPORT == 1 || RTL8192F_SUPPORT == 1)
 	if ((GET_CHIP_VER(priv) == VERSION_8197F) || (GET_CHIP_VER(priv) == VERSION_8822B) ||(GET_CHIP_VER(priv) == VERSION_8192F))
 		default_swing_index = get_swing_index(dm);
+	if (GET_CHIP_VER(priv) == VERSION_8192F)
+		default_cckswing_idx = get_cck_swing_index(dm);
 #endif
 
 #if (DM_ODM_SUPPORT_TYPE == ODM_WIN)
@@ -1096,7 +1121,7 @@ odm_txpowertracking_thermal_meter_init(
 #if (RTL8192F_SUPPORT == 1)
 	if (GET_CHIP_VER(priv) == VERSION_8192F) {
 		cali_info->default_ofdm_index = (default_swing_index >= (OFDM_TABLE_SIZE_92D - 1)) ? 30 : default_swing_index;
-		cali_info->default_cck_index = 28;
+		cali_info->default_cck_index = (default_cckswing_idx >= (CCK_TABLE_SIZE_8192F - 1)) ? 28 : default_cckswing_idx;
 	}
 #endif
 
@@ -1120,8 +1145,8 @@ odm_txpowertracking_thermal_meter_init(
 	}
 #endif
 
-#if RTL8814B_SUPPORT
-	if (GET_CHIP_VER(priv) == VERSION_8814B) {
+#if (RTL8814B_SUPPORT == 1 || RTL8814C_SUPPORT == 1)
+	if (dm->support_ic_type & (ODM_RTL8814B | ODM_RTL8814C)) {
 		cali_info->default_txagc_index = get_txagc_default_index(dm);
 
 		for (i = 0; i < MAX_PATH_NUM_8814B; i++)
@@ -1246,7 +1271,7 @@ odm_txpowertracking_check_ap(
 	struct _hal_rf_ *rf = &dm->rf_table;
 	struct _halrf_tssi_data *tssi = &rf->halrf_tssi_data;
 
-#if ((RTL8188E_SUPPORT == 1) || (RTL8192E_SUPPORT == 1) || (RTL8812A_SUPPORT == 1) || (RTL8881A_SUPPORT == 1) || (RTL8814A_SUPPORT == 1) || (RTL8197F_SUPPORT == 1) || (RTL8192F_SUPPORT == 1) || (RTL8198F_SUPPORT == 1) || (RTL8814B_SUPPORT == 1) || (RTL8812F_SUPPORT == 1) || (RTL8197G_SUPPORT == 1))
+#if ((RTL8188E_SUPPORT == 1) || (RTL8192E_SUPPORT == 1) || (RTL8812A_SUPPORT == 1) || (RTL8881A_SUPPORT == 1) || (RTL8814A_SUPPORT == 1) || (RTL8197F_SUPPORT == 1) || (RTL8192F_SUPPORT == 1) || (RTL8198F_SUPPORT == 1) || (RTL8814B_SUPPORT == 1) || (RTL8812F_SUPPORT == 1) || (RTL8197G_SUPPORT == 1) || (RTL8814C_SUPPORT == 1))
 	if (!dm->rf_calibrate_info.tm_trigger) {
 		if (dm->support_ic_type & (ODM_RTL8188E | ODM_RTL8192E | ODM_RTL8812 | ODM_RTL8881A | ODM_RTL8814A | ODM_RTL8197F | ODM_RTL8822B | ODM_RTL8821C | ODM_RTL8192F | ODM_RTL8198F)) {
 			odm_set_rf_reg(dm, RF_PATH_A, 0x42, (BIT(17) | BIT(16)), 0x3);
@@ -1258,7 +1283,7 @@ odm_txpowertracking_check_ap(
 			odm_set_rf_reg(dm, RF_PATH_B, R_0x42, BIT(19), 0x01);
 			odm_set_rf_reg(dm, RF_PATH_B, R_0x42, BIT(19), 0x00);
 			odm_set_rf_reg(dm, RF_PATH_B, R_0x42, BIT(19), 0x01);
-		} else if (dm->support_ic_type & ODM_RTL8814B) {
+		} else if (dm->support_ic_type & (ODM_RTL8814B | ODM_RTL8814C)) {
 			odm_set_rf_reg(dm, RF_PATH_A, 0x42, BIT(17), 0x1);
 			odm_set_rf_reg(dm, RF_PATH_B, 0x42, BIT(17), 0x1);
 			odm_set_rf_reg(dm, RF_PATH_C, 0x42, BIT(17), 0x1);
@@ -1273,7 +1298,7 @@ odm_txpowertracking_check_ap(
 			odm_set_rf_reg(dm, RF_PATH_B, RF_0x42, BIT(17), 0x1);
 		}
 
-		if (dm->support_ic_type & ODM_RTL8814B) {
+		if (dm->support_ic_type & (ODM_RTL8814B | ODM_RTL8814C)) {
 			ODM_delay_us(300);
 			odm_txpowertracking_callback_thermal_meter(dm);
 			tssi->thermal_trigger = 1;
@@ -1282,7 +1307,7 @@ odm_txpowertracking_check_ap(
 		dm->rf_calibrate_info.tm_trigger = 1;
 	} else {
 		odm_txpowertracking_callback_thermal_meter(dm);
-		if (dm->support_ic_type & ODM_RTL8814B)
+		if (dm->support_ic_type & (ODM_RTL8814B | ODM_RTL8814C))
 			tssi->thermal_trigger = 0;
 		dm->rf_calibrate_info.tm_trigger = 0;
 	}
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/halrf/halrf_powertracking_ap.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/halrf/halrf_powertracking_ap.h
index e81698ee11e4..098e2845067c 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/halrf/halrf_powertracking_ap.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/halrf/halrf_powertracking_ap.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/halrf/halrf_powertracking_ce.c b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/halrf/halrf_powertracking_ce.c
index d2eb70e52a18..4fd3de0eaa09 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/halrf/halrf_powertracking_ce.c
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/halrf/halrf_powertracking_ce.c
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017  Realtek Corporation.
@@ -714,8 +713,9 @@ void odm_txpowertracking_thermal_meter_init(void *dm_void)
 	cali_info->thermal_value_iqk = rf->eeprom_thermal;
 	cali_info->thermal_value_lck = rf->eeprom_thermal;
 
-#if (RTL8822C_SUPPORT == 1 || RTL8814B_SUPPORT == 1)
-	if (dm->support_ic_type == ODM_RTL8822C) {
+#if (RTL8822C_SUPPORT == 1 || RTL8814B_SUPPORT == 1 || RTL8723F_SUPPORT == 1)
+	if (dm->support_ic_type == ODM_RTL8822C || 
+	    dm->support_ic_type == ODM_RTL8723F) {
 		cali_info->thermal_value_path[RF_PATH_A] = tssi->thermal[RF_PATH_A];
 		cali_info->thermal_value_path[RF_PATH_B] = tssi->thermal[RF_PATH_B];
 		cali_info->thermal_value_iqk = tssi->thermal[RF_PATH_A];
@@ -825,6 +825,12 @@ void odm_txpowertracking_check_ce(void *dm_void)
 #if (DM_ODM_SUPPORT_TYPE == ODM_CE)
 	if (!(rf->rf_supportability & HAL_RF_TX_PWR_TRACK))
 		return;
+#if (RTL8723F_SUPPORT == 1)
+	if (dm->support_ic_type & ODM_RTL8723F) {
+		/*RF_DBG(dm, DBG_RF_TX_PWR_TRACK, "[RF][TSSI] Pwrtrack return!\n");*/
+		return;
+	}
+#endif
 
 	if ((rf->power_track_type & 0xf0) >> 4 != 0) {
 		if (dm->support_ic_type & ODM_RTL8822C) {
@@ -888,10 +894,17 @@ odm_txpowertracking_direct_ce(void *dm_void)
 {
 	struct dm_struct *dm = (struct dm_struct *)dm_void;
 	struct _hal_rf_ *rf = &dm->rf_table;
+
 #if (DM_ODM_SUPPORT_TYPE == ODM_CE)
 
 	if (!(rf->rf_supportability & HAL_RF_TX_PWR_TRACK))
 		return;
+	if (dm->support_ic_type & ODM_RTL8723F) {
+#if (RTL8723F_SUPPORT == 1)
+		/*RF_DBG(dm, DBG_RF_TX_PWR_TRACK, "[RF]===>%s 8723F TSSI, return!\n", __func__);*/
+		return;
+#endif
+	}
 
 	if (dm->support_ic_type & ODM_RTL8822C) {
 		/*halrf_tssi_cck(dm);*/
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/halrf/halrf_powertracking_ce.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/halrf/halrf_powertracking_ce.h
index 871a64eb1fdf..3fec1abf799f 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/halrf/halrf_powertracking_ce.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/halrf/halrf_powertracking_ce.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017  Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/halrf/halrf_powertracking_iot.c b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/halrf/halrf_powertracking_iot.c
index a6de4238ae82..494fdec37a46 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/halrf/halrf_powertracking_iot.c
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/halrf/halrf_powertracking_iot.c
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017  Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/halrf/halrf_powertracking_iot.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/halrf/halrf_powertracking_iot.h
index f56ab1f73b51..082e248c2d40 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/halrf/halrf_powertracking_iot.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/halrf/halrf_powertracking_iot.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017  Realtek Corporation.
@@ -100,7 +99,7 @@ odm_txpowertracking_init(
 
 struct iqk_matrix_regs_setting {
 	boolean	is_iqk_done;
-	s32		value[3][iqk_matrix_reg_num];
+	s32		value[1][iqk_matrix_reg_num];
 	boolean	is_bw_iqk_result_saved[3];
 };
 
@@ -150,8 +149,10 @@ struct dm_rf_calibration_struct {
 	s8	xtal_offset;
 	s8	xtal_offset_last;
 
-#if (RTL8710B_SUPPORT == 1 || RTL8721D_SUPPORT == 1)
+#if (RTL8710B_SUPPORT == 1)
 	struct iqk_matrix_regs_setting iqk_matrix_reg_setting[IQK_MATRIX_SETTINGS_NUM];
+#elif  (RTL8721D_SUPPORT == 1)
+	struct iqk_matrix_regs_setting iqk_matrix_reg_setting[1];
 #endif
 	u8	delta_lck;
 	s8  bb_swing_diff_2g, bb_swing_diff_5g; /* Unit: dB */
@@ -176,7 +177,7 @@ struct dm_rf_calibration_struct {
 	u8  delta_swing_table_idx_2gd_n[DELTA_SWINGIDX_SIZE];
 #endif
 
-#if (RTL8195B_SUPPORT == 1)
+#if (RTL8195B_SUPPORT == 1 || RTL8721D_SUPPORT == 1)
 	u8  delta_swing_table_idx_5ga_p[BAND_NUM][DELTA_SWINGIDX_SIZE];
 	u8  delta_swing_table_idx_5ga_n[BAND_NUM][DELTA_SWINGIDX_SIZE];
 	u8  delta_swing_table_idx_5gb_p[BAND_NUM][DELTA_SWINGIDX_SIZE];
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/halrf/halrf_powertracking_win.c b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/halrf/halrf_powertracking_win.c
index 1c02d0e4a2b8..90d2a913ea91 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/halrf/halrf_powertracking_win.c
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/halrf/halrf_powertracking_win.c
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017 Realtek Corporation.
@@ -596,7 +595,7 @@ get_txagc_default_index(
 	struct dm_struct *dm = (struct dm_struct *)dm_void;
 	s8 tmp;
 
-	if (dm->support_ic_type == ODM_RTL8814B) {
+	if (dm->support_ic_type & (ODM_RTL8814B | ODM_RTL8814C)){
 		tmp = (s8)(odm_get_bb_reg(dm, R_0x18a0, 0x7f) & 0xff);
 		if (tmp & BIT(6))
 			tmp = tmp | 0x80;
@@ -678,15 +677,16 @@ odm_txpowertracking_thermal_meter_init(
 	cali_info->thermal_value_iqk	= hal_data->eeprom_thermal_meter;
 	cali_info->thermal_value_lck	= hal_data->eeprom_thermal_meter;
 
-#if (RTL8822C_SUPPORT == 1 || RTL8814B_SUPPORT == 1)
-	if (dm->support_ic_type == ODM_RTL8822C) {
+#if (RTL8822C_SUPPORT == 1 || RTL8814B_SUPPORT == 1 || RTL8723F_SUPPORT == 1 || RTL8814C_SUPPORT == 1)
+	if (dm->support_ic_type == ODM_RTL8822C || 
+	    dm->support_ic_type == ODM_RTL8723F) {
 		cali_info->thermal_value_path[RF_PATH_A] = tssi->thermal[RF_PATH_A];
 		cali_info->thermal_value_path[RF_PATH_B] = tssi->thermal[RF_PATH_B];
 		cali_info->thermal_value_iqk = tssi->thermal[RF_PATH_A];
 		cali_info->thermal_value_lck = tssi->thermal[RF_PATH_A];
 	}
 
-	if (dm->support_ic_type == ODM_RTL8814B) {
+	if (dm->support_ic_type & (ODM_RTL8814B | ODM_RTL8814C)) {
 		cali_info->thermal_value_path[RF_PATH_A] = tssi->thermal[RF_PATH_A];
 		cali_info->thermal_value_path[RF_PATH_B] = tssi->thermal[RF_PATH_B];
 		cali_info->thermal_value_path[RF_PATH_C] = tssi->thermal[RF_PATH_C];
@@ -854,8 +854,14 @@ odm_txpowertracking_direct_call(
 	HAL_DATA_TYPE		*hal_data	= GET_HAL_DATA(((PADAPTER)adapter));
 	struct dm_struct			*dm = &hal_data->DM_OutSrc;
 
-	if (dm->support_ic_type & (ODM_RTL8822C | ODM_RTL8814B)) {
-#if (RTL8822C_SUPPORT == 1 || RTL8814B_SUPPORT == 1)
+	if (dm->support_ic_type & ODM_RTL8723F) {
+#if (RTL8723F_SUPPORT == 1)
+		RF_DBG(dm, DBG_RF_TX_PWR_TRACK, "[RF]===>%s 8723F TSSI, return!\n", __func__);
+		return;
+#endif
+	}
+	if (dm->support_ic_type & (ODM_RTL8822C | ODM_RTL8814B | ODM_RTL8814C)) {
+#if (RTL8822C_SUPPORT == 1 || RTL8814B_SUPPORT == 1 || RTL8814C_SUPPORT == 1)
 		odm_txpowertracking_new_callback_thermal_meter(dm);
 #endif
 	} else
@@ -893,15 +899,20 @@ odm_txpowertracking_thermal_meter_check(
 			odm_set_rf_reg(dm, RF_PATH_B, R_0x42, BIT(19), 0x01);
 			odm_set_rf_reg(dm, RF_PATH_B, R_0x42, BIT(19), 0x00);
 			odm_set_rf_reg(dm, RF_PATH_B, R_0x42, BIT(19), 0x01);
-		} else if (IS_HARDWARE_TYPE_8814B(adapter)) {
+		} else if (dm->support_ic_type & (ODM_RTL8814B | ODM_RTL8814C)) {
 			odm_set_rf_reg(dm, RF_PATH_A, 0x42, BIT(17), 0x1);
 			odm_set_rf_reg(dm, RF_PATH_B, 0x42, BIT(17), 0x1);
 			odm_set_rf_reg(dm, RF_PATH_C, 0x42, BIT(17), 0x1);
 			odm_set_rf_reg(dm, RF_PATH_D, 0x42, BIT(17), 0x1);
-		} else
+		} else if (IS_HARDWARE_TYPE_8723F(adapter)) {
+			odm_set_rf_reg(dm, RF_PATH_A, R_0x42, BIT(16), 0x01);
+			odm_set_rf_reg(dm, RF_PATH_A, R_0x42, BIT(16), 0x00);
+			odm_set_rf_reg(dm, RF_PATH_A, R_0x42, BIT(16), 0x01);
+		}
+		else
 			PHY_SetRFReg(adapter, RF_PATH_A, RF_T_METER, RFREGOFFSETMASK, 0x60);
 
-		if (dm->support_ic_type & ODM_RTL8814B) {
+		if (dm->support_ic_type & (ODM_RTL8814B | ODM_RTL8814C)) {
 			ODM_delay_us(300);
 			odm_txpowertracking_direct_call(adapter);
 			tssi->thermal_trigger = 1;
@@ -915,7 +926,7 @@ odm_txpowertracking_thermal_meter_check(
 		RT_TRACE(COMP_POWER_TRACKING, DBG_LOUD, ("Schedule TxPowerTracking direct call!!\n"));
 		odm_txpowertracking_direct_call(adapter);
 
-		if (dm->support_ic_type & ODM_RTL8814B)
+		if (dm->support_ic_type & (ODM_RTL8814B | ODM_RTL8814C))
 			tssi->thermal_trigger = 0;
 
 		tm_trigger = 0;
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/halrf/halrf_powertracking_win.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/halrf/halrf_powertracking_win.h
index 7642e013877f..f84d440da560 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/halrf/halrf_powertracking_win.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/halrf/halrf_powertracking_win.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/halrf/halrf_psd.c b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/halrf/halrf_psd.c
index e87cb88f6d14..16fe9b96b926 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/halrf/halrf_psd.c
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/halrf/halrf_psd.c
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017 Realtek Corporation.
@@ -261,18 +260,103 @@ void _halrf_psd_iqk_init(struct dm_struct *dm)
 	odm_set_bb_reg(dm, 0x1bcc, 0x3f, 0x3f);	
 }
 
+void _halrf_iqk_psd_init_8723f(void *dm_void,	 boolean onoff)
+{
+	struct dm_struct *dm = (struct dm_struct *)dm_void;
+	u8 s;
+
+	s = (u8)odm_get_bb_reg(dm, 0x1884, BIT(20));
+
+	if (onoff) {
+		/*01_8723F_AFE_ON_BB_settings.txt*/
+		odm_set_bb_reg(dm, 0x1c38, MASKDWORD, 0x0);
+		odm_set_bb_reg(dm, R_0x1830, BIT(30), 0x0);
+		odm_set_bb_reg(dm, R_0x1860, 0xF0000000, 0xf);
+		odm_set_bb_reg(dm, R_0x1860, 0x0FFFF000, 0x0041);
+		odm_set_bb_reg(dm, 0x09f0, 0x0000FFFF, 0xbbbb);
+		odm_set_bb_reg(dm, 0x1d40, BIT(3), 0x1);
+		odm_set_bb_reg(dm, 0x1d40, 0x00000007, 0x3);
+		odm_set_bb_reg(dm, 0x09b4, 0x00000700, 0x3);
+		odm_set_bb_reg(dm, 0x09b4, 0x00003800, 0x3);
+		odm_set_bb_reg(dm, 0x09b4, 0x0001C000, 0x3);
+		odm_set_bb_reg(dm, 0x09b4, 0x000E0000, 0x3);
+		odm_set_bb_reg(dm, R_0x1c20, BIT(5), 0x1);
+		odm_set_bb_reg(dm, R_0x1e24, BIT(31), 0x0);
+		odm_set_bb_reg(dm, R_0x1e28, 0x0000000F, 0x1);
+		odm_set_bb_reg(dm, R_0x824, 0x000F0000, 0x1);
+		odm_set_bb_reg(dm, R_0x1cd0, 0xF0000000, 0x7);
+		odm_set_bb_reg(dm, R_0x2a24, BIT(13), 0x1);
+		odm_set_bb_reg(dm, R_0x1c68, BIT(24), 0x1);
+		odm_set_bb_reg(dm, R_0x1864, BIT(31), 0x1);
+		odm_set_bb_reg(dm, R_0x180c, BIT(27), 0x1);
+		odm_set_bb_reg(dm, R_0x180c, BIT(30), 0x1);
+		odm_set_bb_reg(dm, R_0x1e24, BIT(17), 0x1);
+		odm_set_bb_reg(dm, R_0x1880, BIT(21), 0x0);
+		odm_set_bb_reg(dm, R_0x1c38, MASKDWORD, 0xffffffff);
+		/*02_IQK_Preset.txt*/
+		//odm_set_rf_reg(dm, RF_PATH_A, 0x05, BIT(0), 0x0);
+		//odm_set_rf_reg(dm, RF_PATH_B, 0x05, BIT(0), 0x0);
+		odm_set_bb_reg(dm, R_0x1b08, MASKDWORD, 0x00000080);
+		//odm_set_bb_reg(dm, R_0x1bd8, MASKDWORD, 0x00000002);
+		//switch path  10 od 0x1b38 0x1/0x3 [1:0]
+		if (s == 0)
+			odm_set_bb_reg(dm, R_0x1b00, MASKDWORD, 0x00000008);
+		else
+			odm_set_bb_reg(dm, R_0x1b00, MASKDWORD, 0x0000000a);
+
+		odm_set_bb_reg(dm, R_0x1b18, MASKDWORD, 0x40010101);
+		odm_set_bb_reg(dm, R_0x1b14, MASKDWORD, 0x40010100);
+		//odm_set_bb_reg(dm, R_0x1b1c, MASKDWORD, 0xA2103C00);
+		odm_set_bb_reg(dm, R_0x1b0c, 0x00000C00, 0x2);
+		odm_set_bb_reg(dm, R_0x1bcc, 0x0000003F, 0x3f);	
+		//DbgPrint("[PSD][8723F]iqkpsd init!\n");
+	} else {
+		/*10_IQK_Reg_PSD_Restore.txt*/
+		//odm_set_bb_reg(dm, R_0x1b1c, MASKDWORD, 0xA2103C00);
+		odm_set_bb_reg(dm, R_0x1b08, MASKDWORD, 0x00000000);
+		odm_set_bb_reg(dm, R_0x1b38, BIT(0), 0x0);
+		odm_set_bb_reg(dm, R_0x1bcc, 0x0000003F, 0x0);	
+		//odm_set_rf_reg(dm, RF_PATH_A, 0x05, BIT(0), 0x1);
+		//odm_set_rf_reg(dm, RF_PATH_B, 0x05, BIT(0), 0x1);
+		/*11_8723F_restore_AFE_BB_settings.txt*/
+		odm_set_bb_reg(dm, 0x1c38, MASKDWORD, 0x0);
+		odm_set_bb_reg(dm, R_0x1830, BIT(30), 0x1);
+		odm_set_bb_reg(dm, R_0x1e24, BIT(31), 0x1);
+		odm_set_bb_reg(dm, R_0x2a24, BIT(13), 0x0);
+		odm_set_bb_reg(dm, R_0x1c68, BIT(24), 0x0);
+		odm_set_bb_reg(dm, R_0x1864, BIT(31), 0x0);
+		odm_set_bb_reg(dm, R_0x180c, BIT(27), 0x0);
+		odm_set_bb_reg(dm, R_0x180c, BIT(30), 0x0);
+		odm_set_bb_reg(dm, R_0x1880, BIT(21), 0x0);
+		odm_set_bb_reg(dm, R_0x1c38, MASKDWORD, 0xffa1005e);
+		//DbgPrint("[PSD][8723F]iqkpsd resotre!\n");
+	}
+}
 
-u32 halrf_get_iqk_psd_data(
-	struct dm_struct *dm,
-	u32 point)
+void _halrf_psd_iqk_init_8814c(struct dm_struct *dm)
 {
+	odm_set_bb_reg(dm, 0x1b04, MASKDWORD, 0x0);
+	odm_set_bb_reg(dm, 0x1b08, MASKDWORD, 0x80);
+	odm_set_bb_reg(dm, 0x1b0c, 0xc00, 0x3);
+	odm_set_bb_reg(dm, 0x1b14, MASKDWORD, 0x0);
+	odm_set_bb_reg(dm, 0x1b18, BIT(0), 0x1);
+	odm_set_bb_reg(dm, 0x1b28, MASKDWORD, 0x0);
+	odm_set_bb_reg(dm, 0x1b30, MASKDWORD, 0x40000000);
+	odm_set_bb_reg(dm, 0x1bcc, 0x3f, 0x3f);
+}
+
+
+u64 halrf_get_iqk_psd_data(void *dm_void, u32 point)
+{
+	struct dm_struct *dm = (struct dm_struct *)dm_void;
 	struct _hal_rf_ *rf = &(dm->rf_table);
 	struct _halrf_psd_data *psd = &(rf->halrf_psd_data);
-	u32 psd_val, psd_val1, psd_val2, psd_point, i, delay_time = 0;
+	u64 psd_val, psd_val1, psd_val2;
+	u32 psd_point, i, delay_time = 0;
 
 #if (DEV_BUS_TYPE == RT_USB_INTERFACE) || (DEV_BUS_TYPE == RT_SDIO_INTERFACE)
 	if (dm->support_interface == ODM_ITRF_USB || dm->support_interface == ODM_ITRF_SDIO) {
-		if (dm->support_ic_type & ODM_RTL8822C)
+		if (dm->support_ic_type & (ODM_RTL8822C | ODM_RTL8723F | ODM_RTL8814C))
 			delay_time = 1000;
 		else
 			delay_time = 0;
@@ -280,7 +364,7 @@ u32 halrf_get_iqk_psd_data(
 #endif
 #if (DEV_BUS_TYPE == RT_PCI_INTERFACE)
 	if (dm->support_interface == ODM_ITRF_PCIE) {
-		if (dm->support_ic_type & ODM_RTL8822C)
+		if (dm->support_ic_type & (ODM_RTL8822C | ODM_RTL8814C))
 			delay_time = 1000;
 		else
 			delay_time = 150;
@@ -321,6 +405,14 @@ u32 halrf_get_iqk_psd_data(
 		psd_val2 = odm_get_bb_reg(dm, R_0x1bfc, MASKDWORD);
 
 		psd_val = (psd_val1 << 27) + (psd_val2 >> 5);
+	} else if (dm->support_ic_type & ODM_RTL8723F) {
+		odm_set_bb_reg(dm, R_0x1bd4, MASKDWORD, 0x00210001);
+		psd_val1 = odm_get_bb_reg(dm, R_0x1bfc, MASKDWORD);
+		psd_val1 = (psd_val1 & 0x00FF0000) >> 16;
+		odm_set_bb_reg(dm, R_0x1bd4, MASKDWORD, 0x00220001);
+		psd_val2 = odm_get_bb_reg(dm, R_0x1bfc, MASKDWORD);
+		//psd_val = (psd_val1 << 27) + (psd_val2 >> 5);
+		psd_val = (psd_val1 << 32) + psd_val2;
 	} else {
 		odm_set_bb_reg(dm, R_0x1bd4, MASKDWORD, 0x00250001);
 
@@ -358,8 +450,8 @@ void halrf_iqk_psd(
 	mode = average >> 16;
 
 	if (mode == 2) {
-		if (dm->support_ic_type & ODM_RTL8822C)
-			average_tmp = 1;
+		if (dm->support_ic_type & (ODM_RTL8822C | ODM_RTL8723F | ODM_RTL8814C))
+			average_tmp = 1; //HW average
 		else {
 			reg_tmp = odm_get_bb_reg(dm, R_0x1b1c, 0x000e0000);
 			if (reg_tmp == 0)
@@ -382,63 +474,85 @@ void halrf_iqk_psd(
 			average_tmp = 16;
 		else if (reg_tmp == 5)
 			average_tmp = 32;
-		odm_set_bb_reg(dm, R_0x1b1c, 0x000e0000, 0x0);
+		if (!(dm->support_ic_type & ODM_RTL8723F))
+			odm_set_bb_reg(dm, R_0x1b1c, 0x000e0000, 0x0);
 	}
 
 #if 0
 	DbgPrint("[PSD]point=%d, start_point=%d, stop_point=%d, average=0x%x, average_tmp=%d, buf_size=%d, mode=%d\n",
-		point, start_point, stop_point, average, average_tmp, psd->buf_size, mode);
+				point, start_point, stop_point, average, average_tmp, psd->buf_size, mode);
 #endif
 
 	for (i = 0; i < psd->buf_size; i++)
 		psd->psd_data[i] = 0;
 
 	i = start_point;
-	while (i < stop_point) {
-		data_tatal = 0;
 
-		if (i >= point)
-			point_temp = i - point;
-		else
-		{
-			if (dm->support_ic_type & ODM_RTL8814B)
-			{
-				s_point_tmp = i - point - 1;
-				point_temp = s_point_tmp & 0xfff;
-			}
+	if (dm->support_ic_type & ODM_RTL8723F) {
+		while (i < stop_point) {
+			data_tatal = 0;
+
+			if (i >= point)
+				point_temp = i - point;
 			else
-				point_temp = i;
-		}
+				point_temp = i + 0xB00;
+			//-640:0xD80,640:0x280,0x280+0xB00 =0xD80
+				//point_temp = i + 0xC00;
+			//-512:0xE00,512:0x200,0x200+0xC00 = 0xE00
 
-		for (k = 0; k < average_tmp; k++) {
 			data_temp[k] = halrf_get_iqk_psd_data(dm, point_temp);
-			/*data_tatal = data_tatal + (data_temp[k] * data_temp[k]);*/
-			data_tatal = data_tatal + data_temp[k];
+			data_tatal = data_temp[k];
+			psd->psd_data[j] = (u32)data_tatal;
+			i++;
+			j++;
+		}
+	} else {
+		while (i < stop_point) {
+			data_tatal = 0;
+
+			if (i >= point)
+				point_temp = i - point;
+			else
+			{
+				if (dm->support_ic_type & (ODM_RTL8814B | ODM_RTL8814C))
+				{
+					s_point_tmp = i - point - 1;
+					point_temp = s_point_tmp & 0xfff;
+				}
+				else
+					point_temp = i;
+			}
+
+			for (k = 0; k < average_tmp; k++) {
+				data_temp[k] = halrf_get_iqk_psd_data(dm, point_temp);
+				/*data_tatal = data_tatal + (data_temp[k] * data_temp[k]);*/
+				data_tatal = data_tatal + data_temp[k];
 
 #if 0
-			if ((k % 20) == 0)
-				DbgPrint("\n ");
+				if ((k % 20) == 0)
+					DbgPrint("\n ");
 
-			DbgPrint("0x%x ", data_temp[k]);
+				DbgPrint("0x%x ", data_temp[k]);
 #endif
-		}
-
-		data_tatal = phydm_division64((data_tatal * 10), average_tmp);
-		psd->psd_data[j] = (u32)data_tatal;
+			}
 
-		i++;
-		j++;
-	}
+			data_tatal = phydm_division64((data_tatal * 10), average_tmp);
+			psd->psd_data[j] = (u32)data_tatal;
 
-	if (dm->support_ic_type & (ODM_RTL8814B | ODM_RTL8198F | ODM_RTL8197G))
-		odm_set_bb_reg(dm, R_0x1b1c, 0x000e0000, reg_tmp);
+			i++;
+			j++;
+		}
 
+		if (dm->support_ic_type & (ODM_RTL8814B | ODM_RTL8198F | ODM_RTL8197G))
+			odm_set_bb_reg(dm, R_0x1b1c, 0x000e0000, reg_tmp);
+	} 
+	
 #if 0
 	DbgPrint("\n [iqk psd]psd result:\n");
 
 	for (i = 0; i < psd->buf_size; i++) {
 		if ((i % 20) == 0)
-			DbgPrint("\n ");
+		DbgPrint("\n ");
 
 		DbgPrint("0x%x ", psd->psd_data[i]);
 	}
@@ -456,22 +570,58 @@ halrf_psd_init(
 	struct _hal_rf_ *rf = &(dm->rf_table);
 	struct _halrf_psd_data *psd = &(rf->halrf_psd_data);
 
-#if 0
-	u32 bb_backup[12];
+	u32 bb_backup[18];
+	u32 backup_bb_addr[18] = {0};
+	u32 bk_counter = 18;
+	
 	u32 backup_bb_reg[12] = {0x1b04, 0x1b08, 0x1b0c, 0x1b14, 0x1b18,
 				0x1b1c, 0x1b28, 0x1bcc, 0x1b2c, 0x1b34,
 				0x1bd4, 0x1bfc};
-#endif
+
+	u32 backup_bb_reg_8723f[11] = {0x09f0, 0x09b4, 0x1c38, 0x1860, 0x1cd0,
+				 	0x824, 0x2a24, 0x1d40, 0x1c20, 0x1880,
+				 	0x180c};
+
+	u32 backup_bb_reg_8814c[18] = {0x1e24, 0x1cd0, 0x1b08, 0x1d58, 0x1834,
+					0x4134, 0x5234, 0x5334, 0x180c, 0x410c,
+					0x520c, 0x530c, 0x186c, 0x416c, 0x526c,
+					0x536c, 0x1a00, 0x1c38};
+
+	if (dm->support_ic_type & ODM_RTL8723F) {
+		odm_move_memory(dm, backup_bb_addr, backup_bb_reg_8723f,
+			sizeof(backup_bb_addr));
+		bk_counter = 11;
+	} else if (dm->support_ic_type & ODM_RTL8814C) {
+		odm_move_memory(dm, backup_bb_addr, backup_bb_reg_8814c,
+			sizeof(backup_bb_addr));
+		bk_counter = 18;
+	} else {
+		odm_move_memory(dm, backup_bb_addr, backup_bb_reg,
+			sizeof(backup_bb_addr));
+		bk_counter = 12;
+	}
 
 	if (psd->psd_progress) {
 		ret_status = RT_STATUS_PENDING;
 	} else {
 		psd->psd_progress = 1;
-		if (dm->support_ic_type & (ODM_RTL8822C | ODM_RTL8814B | ODM_RTL8198F | ODM_RTL8197G)) {
-			/*backup_bb_register(dm, bb_backup, backup_bb_reg, 12);*/
+		if (dm->support_ic_type & ODM_RTL8723F) {
+			backup_bb_register(dm, bb_backup, backup_bb_addr, bk_counter);
+			_halrf_iqk_psd_init_8723f(dm, true);
+			halrf_iqk_psd(dm, psd->point, psd->start_point, psd->stop_point, psd->average);
+			_halrf_iqk_psd_init_8723f(dm, false);
+			restore_bb_register(dm, bb_backup, backup_bb_addr, bk_counter);
+		} else if (dm->support_ic_type & ODM_RTL8814C) {
+			backup_bb_register(dm, bb_backup, backup_bb_addr, bk_counter);
+			_halrf_psd_iqk_init_8814c(dm);
+			halrf_iqk_psd(dm, psd->point, psd->start_point, psd->stop_point, psd->average);
+			restore_bb_register(dm, bb_backup, backup_bb_addr, bk_counter);
+		} else if (dm->support_ic_type & 
+			(ODM_RTL8822C | ODM_RTL8814B | ODM_RTL8198F | ODM_RTL8197G)) {
+			backup_bb_register(dm, bb_backup, backup_bb_addr, bk_counter);
 			_halrf_psd_iqk_init(dm);
 			halrf_iqk_psd(dm, psd->point, psd->start_point, psd->stop_point, psd->average);
-			/*restore_bb_register(dm, bb_backup, backup_bb_reg, 12);*/
+			restore_bb_register(dm, bb_backup, backup_bb_addr, bk_counter);
 		} else
 			halrf_psd(dm, psd->point, psd->start_point, psd->stop_point, psd->average);
 		psd->psd_progress = 0;
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/halrf/halrf_psd.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/halrf/halrf_psd.h
index fe7b327cd0ad..d714a562311a 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/halrf/halrf_psd.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/halrf/halrf_psd.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017 Realtek Corporation.
@@ -32,6 +31,16 @@ u32
 halrf_psd_init(
 	void *dm_void);
 
+void
+_halrf_iqk_psd_init_8723f(
+	void *dm_void,
+	boolean onoff);
+
+u64
+halrf_get_iqk_psd_data(
+	void *dm_void,
+	u32 point);
+
 u32
 halrf_psd_query(
 	void *dm_void,
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/halrf/halrf_txgapcal.c b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/halrf/halrf_txgapcal.c
index 45aec82a4ebe..0cc44974bf3f 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/halrf/halrf_txgapcal.c
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/halrf/halrf_txgapcal.c
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017  Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/halrf/halrf_txgapcal.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/halrf/halrf_txgapcal.h
index bafa6d3f813a..09651cbee3b9 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/halrf/halrf_txgapcal.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/halrf/halrf_txgapcal.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017  Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/halrf/rtl8821c/halhwimg8821c_rf.c b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/halrf/rtl8821c/halhwimg8821c_rf.c
index 8e1ffa7e3944..9e90f911c18d 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/halrf/rtl8821c/halhwimg8821c_rf.c
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/halrf/rtl8821c/halhwimg8821c_rf.c
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017 Realtek Corporation.
@@ -1910,7 +1909,7 @@ const u32 array_mp_8821c_radioa[] = {
 		0x033, 0x00000000,
 		0x03F, 0x0006AC00,
 		0x033, 0x00000001,
-		0x03F, 0x00060C00,
+		0x03F, 0x0006AC00,
 		0x033, 0x00000002,
 		0x03F, 0x0006AC00,
 		0x033, 0x00000003,
@@ -1921,7 +1920,7 @@ const u32 array_mp_8821c_radioa[] = {
 		0x033, 0x00000000,
 		0x03F, 0x0006AC00,
 		0x033, 0x00000001,
-		0x03F, 0x00060C00,
+		0x03F, 0x0006AC00,
 		0x033, 0x00000002,
 		0x03F, 0x0006AC00,
 		0x033, 0x00000003,
@@ -1932,7 +1931,7 @@ const u32 array_mp_8821c_radioa[] = {
 		0x033, 0x00000000,
 		0x03F, 0x0006AC00,
 		0x033, 0x00000001,
-		0x03F, 0x00060C00,
+		0x03F, 0x0006AC00,
 		0x033, 0x00000002,
 		0x03F, 0x0006AC00,
 		0x033, 0x00000003,
@@ -1943,7 +1942,7 @@ const u32 array_mp_8821c_radioa[] = {
 		0x033, 0x00000000,
 		0x03F, 0x0006AC00,
 		0x033, 0x00000001,
-		0x03F, 0x00060C00,
+		0x03F, 0x0006AC00,
 		0x033, 0x00000002,
 		0x03F, 0x0006AC00,
 		0x033, 0x00000003,
@@ -2756,7 +2755,7 @@ odm_read_and_config_mp_8821c_radioa(struct dm_struct *dm)
 u32
 odm_get_version_mp_8821c_radioa(void)
 {
-		return 62;
+		return 64;
 }
 
 /******************************************************************************
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/halrf/rtl8821c/halhwimg8821c_rf.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/halrf/rtl8821c/halhwimg8821c_rf.h
index 32781b16c44f..8e0de25cbaa1 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/halrf/rtl8821c/halhwimg8821c_rf.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/halrf/rtl8821c/halhwimg8821c_rf.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/halrf/rtl8821c/halrf_8821c.c b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/halrf/rtl8821c/halrf_8821c.c
index c08d095ad34c..af44482015c2 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/halrf/rtl8821c/halrf_8821c.c
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/halrf/rtl8821c/halrf_8821c.c
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017 Realtek Corporation.
@@ -330,16 +329,25 @@ void _phy_aac_calibrate_8821c(struct dm_struct *dm)
 #endif
 }
 
+boolean phy_lck_done_8821c(struct dm_struct *dm)
+{
+	boolean lck_ok = false;
+
+	if (odm_get_rf_reg(dm, RF_PATH_A, 0xc6, BIT(19)) == 0x0)
+		lck_ok = true;
+	return lck_ok;
+}
+
 void _phy_lc_calibrate_8821c(struct dm_struct *dm)
 {
-#if 1
+#if 0
 	aac_check_8821c(dm);
 	RF_DBG(dm, DBG_RF_LCK, "[LCK]real-time LCK!!!!!!!\n");
 	odm_set_rf_reg(dm, RF_PATH_A, RF_0xcc, RFREGOFFSETMASK, 0x2018);
 	odm_set_rf_reg(dm, RF_PATH_A, RF_0xc4, RFREGOFFSETMASK, 0x8f602);
 	odm_set_rf_reg(dm, RF_PATH_A, RF_0xcc, RFREGOFFSETMASK, 0x201c);
 #endif
-#if 0
+#if 1
 	u32 lc_cal = 0, cnt = 0, tmp0xc00;
 	/*RF to standby mode*/
 	tmp0xc00 = odm_read_4byte(dm, 0xc00);
@@ -369,8 +377,8 @@ void _phy_lc_calibrate_8821c(struct dm_struct *dm)
 #endif
 }
 
-/*LCK:0x2*/
-/*1. add AACK check*/
+/*LCK:0x3*/
+/*1. full LCK*/
 void phy_lc_calibrate_8821c(void *dm_void)
 {
 	struct dm_struct *dm = (struct dm_struct *)dm_void;
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/halrf/rtl8821c/halrf_8821c.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/halrf/rtl8821c/halrf_8821c.h
index 49be5fd67bc3..921795992c02 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/halrf/rtl8821c/halrf_8821c.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/halrf/rtl8821c/halrf_8821c.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/halrf/rtl8821c/halrf_iqk_8821c.c b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/halrf/rtl8821c/halrf_iqk_8821c.c
index fa8adba63447..15879c69f88a 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/halrf/rtl8821c/halrf_iqk_8821c.c
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/halrf/rtl8821c/halrf_iqk_8821c.c
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2016 - 2017 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/halrf/rtl8821c/halrf_iqk_8821c.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/halrf/rtl8821c/halrf_iqk_8821c.h
index 5e84fd583cc5..12194f744f02 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/halrf/rtl8821c/halrf_iqk_8821c.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/halrf/rtl8821c/halrf_iqk_8821c.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2016 - 2017 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/halrf/rtl8821c/version_rtl8821c_rf.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/halrf/rtl8821c/version_rtl8821c_rf.h
index e5be203fb284..0c9df4b3b6e6 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/halrf/rtl8821c/version_rtl8821c_rf.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/halrf/rtl8821c/version_rtl8821c_rf.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017  Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/mp_precomp.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/mp_precomp.h
index 34208ac03b43..897adc13ffca 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/mp_precomp.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/mp_precomp.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017  Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm.c b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm.c
index 185a237b02ef..9722044b2443 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm.c
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm.c
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017  Realtek Corporation.
@@ -130,7 +129,7 @@ void phydm_cck_new_agc_chk(struct dm_struct *dm)
 	    ODM_RTL8721D | ODM_RTL8710C)) {
 		new_agc_addr = R_0xa9c;
 	} else if (dm->support_ic_type & (ODM_RTL8198F | ODM_RTL8822C |
-		   ODM_RTL8814B | ODM_RTL8197G)) {
+		   ODM_RTL8814B | ODM_RTL8197G | ODM_RTL8814C)) {
 		new_agc_addr = R_0x1a9c;
 	}
 
@@ -547,6 +546,10 @@ void phydm_phy_info_update(struct dm_struct *dm)
 
 void phydm_hw_setting(struct dm_struct *dm)
 {
+#if (RTL8188F_SUPPORT)
+	if (dm->support_ic_type & ODM_RTL8188F)
+		odm_hw_setting_8188F(dm);
+#endif
 #if (RTL8821A_SUPPORT)
 	if (dm->support_ic_type & ODM_RTL8821)
 		odm_hw_setting_8821a(dm);
@@ -650,6 +653,12 @@ boolean phydm_chk_bb_rf_pkg_set_valid(struct dm_struct *dm)
 						      RELEASE_VERSION_8814B,
 						      RF_RELEASE_VERSION_8814B);
 	#endif
+	#if (RTL8814C_SUPPORT)
+	} else if (dm->support_ic_type == ODM_RTL8814C) {
+		valid = phydm_chk_pkg_set_valid_8814b(dm,
+						      RELEASE_VERSION_8814C,
+						      RF_RELEASE_VERSION_8814C);
+	#endif
 	#if (RTL8723F_SUPPORT)
 	} else if (dm->support_ic_type == ODM_RTL8723F) {
 		valid = phydm_chk_pkg_set_valid_8723f(dm,
@@ -1453,6 +1462,19 @@ u64 phydm_supportability_init_ap(
 			ODM_BB_CFO_TRACKING |
 			ODM_BB_ENV_MONITOR;
 		break;
+	case ODM_RTL8814C:
+		support_ability |=
+			ODM_BB_DIG |
+			ODM_BB_RA_MASK |
+			ODM_BB_FA_CNT |
+			ODM_BB_RSSI_MONITOR |
+			ODM_BB_CCK_PD |
+			/*ODM_BB_PWR_TRAIN |*/
+			/*ODM_BB_RATE_ADAPTIVE |*/
+			ODM_BB_ADAPTIVITY |
+			ODM_BB_CFO_TRACKING |
+			ODM_BB_ENV_MONITOR;
+		break;
 #endif
 
 #if (RTL8197G_SUPPORT)
@@ -1724,7 +1746,10 @@ void phydm_supportability_init(void *dm_void)
 		if(IS_FUNC_EN(&dm->en_tssi_mode) &&
 		    (dm->support_ic_type & ODM_RTL8822C))
 			support_ability &= ~ODM_BB_DYNAMIC_TXPWR;
-
+		/*@[DYNAMIC_TXPWR and TSSI cannot coexist]*/
+		if(IS_FUNC_EN(&dm->en_tssi_mode) &&
+		    (dm->support_ic_type & ODM_RTL8723F))
+			support_ability &= ~ODM_BB_DYNAMIC_TXPWR;
 	}
 	dm->support_ability = support_ability;
 	PHYDM_DBG(dm, ODM_COMP_INIT, "IC=0x%x, mp=%d, Supportability=0x%llx\n",
@@ -1810,7 +1835,6 @@ enum phydm_init_result odm_dm_init(struct dm_struct *dm)
 	phydm_cck_pd_init(dm);
 #endif
 	phydm_env_monitor_init(dm);
-	phydm_enhance_monitor_init(dm);
 	phydm_adaptivity_init(dm);
 	phydm_ra_info_init(dm);
 	phydm_rssi_monitor_init(dm);
@@ -2399,6 +2423,8 @@ void phydm_watchdog(struct dm_struct *dm)
 
 	phydm_hw_setting(dm);
 
+	phydm_env_mntr_result_watchdog(dm);
+
 #ifdef PHYDM_TDMA_DIG_SUPPORT
 	if (dm->original_dig_restore == 0) {
 		phydm_tdma_dig_timer_check(dm);
@@ -2459,8 +2485,7 @@ void phydm_watchdog(struct dm_struct *dm)
 	odm_dtc(dm);
 #endif
 
-	phydm_env_mntr_watchdog(dm);
-	phydm_enhance_mntr_watchdog(dm);
+	phydm_env_mntr_set_watchdog(dm);
 
 #ifdef PHYDM_LNA_SAT_CHK_SUPPORT
 	phydm_lna_sat_chk_watchdog(dm);
@@ -2719,6 +2744,9 @@ void odm_cmn_info_init(struct dm_struct *dm, enum odm_cmninfo cmn_info,
 	case ODM_CMNINFO_EN_AUTO_BW_TH:
 		dm->en_auto_bw_th = (u8)value;
 		break;
+	case ODM_CMNINFO_EN_NBI_DETECT:
+		dm->en_nbi_detect = (boolean)value;
+		break;
 #if (RTL8721D_SUPPORT)
 	case ODM_CMNINFO_POWER_VOLTAGE:
 		dm->power_voltage = (u8)value;
@@ -2882,6 +2910,12 @@ void odm_cmn_info_hook(struct dm_struct *dm, enum odm_cmninfo cmn_info,
 		break;
 	case ODM_CMNINFO_EN_DYM_BW_INDICATION:
 		dm->dis_dym_bw_indication = (u8 *)value;
+		break;
+#if (RTL8192F_SUPPORT || RTL8721D_SUPPORT || RTL8710C_SUPPORT)
+	case ODM_ANTI_INTERFERENCE_EN:
+		dm->anti_interference_en = (u8 *)value;
+		break;
+#endif
 	default:
 		/*do nothing*/
 		break;
@@ -2995,6 +3029,12 @@ void odm_cmn_info_update(struct dm_struct *dm, u32 cmn_info, u64 value)
 	case ODM_CMNINFO_TSSI_ENABLE:
 		dm->en_tssi_mode = (u8)value;
 		break;
+	case ODM_CMNINFO_HUAWEI_HWID:
+		dm->is_dig_low_bond = (boolean)value;
+		break;
+	case ODM_CMNINFO_ATHEROS_HWID:
+		dm->is_R2R_CCA_MASKT_TIME_SHORT = (boolean)value;
+		break;
 	default:
 		break;
 	}
@@ -3090,7 +3130,14 @@ u32 phydm_cmn_info_query(struct dm_struct *dm, enum phydm_info_query info_type)
 		return (u32)ccx_info->nhm_pwr;
 	case PHYDM_INFO_NHM_ENV_RATIO:
 		return (u32)ccx_info->nhm_env_ratio;
-
+	case PHYDM_INFO_TXEN_CCK:
+		return (u32)fa_t->cnt_cck_txen;
+	case PHYDM_INFO_TXEN_OFDM:
+		return (u32)fa_t->cnt_ofdm_txen;
+	case PHYDM_INFO_NHM_IDLE_RATIO:
+		return (u32)ccx_info->nhm_idle_ratio;
+	case PHYDM_INFO_NHM_TX_RATIO:
+		return (u32)ccx_info->nhm_tx_ratio;
 	default:
 		return 0xffffffff;
 	}
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm.h
index 071fbb27d61b..7ece890b2aab 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017  Realtek Corporation.
@@ -205,6 +204,8 @@ extern const u16	phy_rate_table[84];
 #define PHY_HIST_SIZE		12
 #define PHY_HIST_TH_SIZE	(PHY_HIST_SIZE - 1)
 
+#define	S_TO_US			1000000
+
 /*@============================================================*/
 /*structure and define*/
 /*@============================================================*/
@@ -437,12 +438,15 @@ enum odm_cmninfo {
 	ODM_CMNINFO_X_CAP_SETTING,
 	ODM_CMNINFO_ADVANCE_OTA,
 	ODM_CMNINFO_HP_HWID,
+	ODM_CMNINFO_HUAWEI_HWID,
+	ODM_CMNINFO_ATHEROS_HWID,
 	ODM_CMNINFO_TSSI_ENABLE, /*also for cmn_info_update*/
 	ODM_CMNINFO_DIS_DPD,
 	ODM_CMNINFO_POWER_VOLTAGE,
 	ODM_CMNINFO_ANTDIV_GPIO,
 	ODM_CMNINFO_EN_AUTO_BW_TH,
 	ODM_CMNINFO_PEAK_DETECT_MODE,
+	ODM_CMNINFO_EN_NBI_DETECT,
 	/*@-----------HOOK BEFORE REG INIT-----------*/
 
 	/*@Dynamic value:*/
@@ -482,6 +486,7 @@ enum odm_cmninfo {
 	ODM_CMNINFO_BF_ANTDIV_DECISION,
 	ODM_CMNINFO_MANUAL_SUPPORTABILITY,
 	ODM_CMNINFO_EN_DYM_BW_INDICATION,
+	ODM_ANTI_INTERFERENCE_EN,
 	/*@--------- POINTER REFERENCE-----------*/
 
 	/*@------------CALL BY VALUE-------------*/
@@ -569,7 +574,10 @@ enum phydm_info_query {
 	PHYDM_INFO_NHM_NOISE_PWR,
 	PHYDM_INFO_NHM_PWR,
 	PHYDM_INFO_NHM_ENV_RATIO,
-
+	PHYDM_INFO_TXEN_CCK,
+	PHYDM_INFO_TXEN_OFDM,
+	PHYDM_INFO_NHM_IDLE_RATIO,
+	PHYDM_INFO_NHM_TX_RATIO,
 };
 
 enum phydm_api {
@@ -793,9 +801,19 @@ struct dm_struct {
 	u32			last_num_qry_phy_status_all;
 	u32			rx_pwdb_ave;
 	boolean		is_init_hw_info_by_rfe;
+	boolean         is_R2R_CCA_MASKT_TIME_SHORT;
+#if (DM_ODM_SUPPORT_TYPE & ODM_WIN)
+	u32			rts_drop_cnt;
+	u32			low_rate_tx_fail_cnt;
+	u32			low_rate_tx_ok_cnt;
+#endif
 
 	//TSSI
 	u8			en_tssi_mode;
+	#if (RTL8723F_SUPPORT)
+	//ZWDFS for 80M
+	u8			en_zwdfs_bw80;
+	#endif
 
 	/*@------ ODM HANDLE, DRIVER NEEDS NOT TO HOOK------*/
 	boolean			is_cck_high_power;
@@ -865,11 +883,16 @@ struct dm_struct {
 	boolean			en_dis_dpd;
 	u16			dis_dpd_rate;
 	u8			en_auto_bw_th;
-	#if (RTL8822C_SUPPORT || RTL8814B_SUPPORT || RTL8197G_SUPPORT || RTL8723F_SUPPORT)
+	boolean			is_pause_dig;
+	boolean			en_nbi_detect;
+	#if (RTL8822C_SUPPORT || RTL8814B_SUPPORT || RTL8197G_SUPPORT)
 	u8			txagc_buff[RF_PATH_MEM_SIZE][PHY_NUM_RATE_IDX];
 	u32			bp_0x9b0;
+	#elif (RTL8723F_SUPPORT)
+	u8			txagc_buff[2][PHY_NUM_RATE_IDX];
+	u32			bp_0x9b0;
 	#endif
-	#if (RTL8822C_SUPPORT)
+	#if (RTL8822C_SUPPORT || RTL8723F_SUPPORT)
 	u8			ofdm_rxagc_l_bnd[16];
 	boolean			l_bnd_detect[16];
 	u16			agc_rf_gain_ori[16][64];/*[table][mp_gain_idx]*/
@@ -918,6 +941,7 @@ struct dm_struct {
 	u8			*bb_op_mode;
 	u32			*manual_supportability;
 	u8			*dis_dym_bw_indication;
+	u8			*anti_interference_en;
 /*@===========================================================*/
 /*@====[ CALL BY VALUE ]===========================================*/
 /*@===========================================================*/
@@ -1006,6 +1030,7 @@ struct dm_struct {
 	boolean			MPDIG_2G;		/*off MPDIG*/
 	u8			times_2g;		/*@for MP DIG*/
 	u8			force_igi;		/*@for debug*/
+	boolean			is_dig_low_bond;
 
 	/*@[TDMA-DIG]*/
 	u8			tdma_dig_timer_ms;
@@ -1177,7 +1202,7 @@ struct dm_struct {
 	u32			radar_detect_reg_f74;
 	/*@---For zero-wait DFS---------------------------------------*/
 	boolean			seg1_dfs_flag;
-	/*@-----------------------------------------------------------*/
+	/*@---For ETSI 302 ---------------------------------------*/
 /*@-----------------------------------------------------------*/
 #endif
 
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm.mk b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm.mk
index 042db19d26ba..2c007b79f7b5 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm.mk
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm.mk
@@ -232,6 +232,16 @@ _PHYDM_FILES += hal/phydm/$(RTL871X)/halhwimg8814b_bb.o\
 								hal/phydm/halrf/$(RTL871X)/halrf_dpk_8814b.o\
 								hal/phydm/halrf/$(RTL871X)/halrf_rfk_init_8814b.o\
 								hal/phydm/halrf/$(RTL871X)/halrf_txgapk_8814b.o
+	ifeq ($(CONFIG_RTL8814C), y)
+		_PHYDM_FILES += hal/phydm/halrf/rtl8814c/halrf_8814c.o\
+				hal/phydm/halrf/rtl8814c/halrf_iqk_8814c.o\
+				hal/phydm/halrf/rtl8814c/halrf_dpk_8814c.o\
+				hal/phydm/halrf/rtl8814c/halrf_rfk_init_8814c.o\
+				hal/phydm/halrf/rtl8814c/halhwimg8814c_rf.o\
+				hal/phydm/halrf/rtl8814c/halrf_8814c.o\
+				hal/phydm/rtl8814c/halhwimg8814c_bb.o\
+				hal/phydm/rtl8814c/phydm_extraagc8814c.o
+	endif
 endif
 ifeq ($(CONFIG_RTL8723F), y)
 RTL871X = rtl8723f
@@ -243,6 +253,7 @@ _PHYDM_FILES += hal/phydm/$(RTL871X)/halhwimg8723f_bb.o\
 								hal/phydm/halrf/$(RTL871X)/halrf_iqk_8723f.o\
 								hal/phydm/halrf/$(RTL871X)/halrf_tssi_8723f.o\
 								hal/phydm/halrf/$(RTL871X)/halrf_dpk_8723f.o\
+								hal/phydm/halrf/$(RTL871X)/halrf_txgapk_8723f.o\
 								hal/phydm/halrf/$(RTL871X)/halrf_rfk_init_8723f.o\
 								hal/phydm/halrf/$(RTL871X)/halhwimg8723f_rf.o
 endif
\ No newline at end of file
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm_adaptivity.c b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm_adaptivity.c
index 519f335ba587..ed6fea4d94d0 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm_adaptivity.c
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm_adaptivity.c
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017  Realtek Corporation.
@@ -153,9 +152,9 @@ void phydm_set_l2h_th_ini_win(void *dm_void)
 
 	 /*@ [New Format: JGR3]IGI-idx:45 = RSSI:35 = -65dBm*/
 	if (dm->support_ic_type & ODM_IC_JGR3_SERIES) {
-		if (dm->support_ic_type & ODM_RTL8822C)
+		if (dm->support_ic_type & (ODM_RTL8822C | ODM_RTL8723F))
 			dm->th_l2h_ini = 45;
-		else if (dm->support_ic_type & ODM_RTL8814B)
+		else if (dm->support_ic_type & (ODM_RTL8814B | ODM_RTL8814C))
 			dm->th_l2h_ini = 49;
 	} else if (dm->support_ic_type & ODM_IC_11AC_SERIES) {
 	 /*@ [Old Format] -11+base(50) = IGI_idx:39 = RSSI:29 = -71dBm*/
@@ -171,6 +170,311 @@ void phydm_set_l2h_th_ini_win(void *dm_void)
 		dm->th_l2h_ini = -9;
 	}
 }
+
+void phydm_l2h_ini_recorder_reset(void *dm_void)
+{
+	struct dm_struct *dm = (struct dm_struct *)dm_void;
+	struct phydm_adaptivity_struct *adapt = &dm->adaptivity;
+	struct phydm_l2h_ini_recorder_strcut *adapt_rc = &adapt->l2h_ini_recorder_t;
+
+	PHYDM_DBG(dm, DBG_ADPTVTY, "%s ======>\n", __func__);
+
+	odm_memory_set(dm, &adapt_rc->l2h_ini_bitmap, 0,
+		       sizeof(struct phydm_l2h_ini_recorder_strcut));
+}
+
+
+void phydm_l2h_ini_recorder(void *dm_void)
+{
+	struct dm_struct *dm = (struct dm_struct *)dm_void;
+	struct phydm_adaptivity_struct *adapt = &dm->adaptivity;
+	struct phydm_l2h_ini_recorder_strcut *adapt_rc = &adapt->l2h_ini_recorder_t;
+	u32 low_rate_tx_fail_cnt = dm->low_rate_tx_fail_cnt;
+	s8 l2h_ini_curr = dm->th_l2h_ini;
+	s8 l2h_ini_pre = adapt_rc->l2h_ini_hist[0];
+	s8 l2h_ini_down = 0;
+
+	if (!dm->is_linked || adapt->is_adapt_by_dig || adapt->rts_drop_en)
+		return;
+
+	PHYDM_DBG(dm, DBG_ADPTVTY, "%s ======>\n", __func__);
+
+	if (dm->first_connect) {
+		phydm_l2h_ini_recorder_reset(dm);
+		adapt_rc->l2h_ini_hist[0] = l2h_ini_curr;
+		return;
+	}
+
+	l2h_ini_down = (l2h_ini_curr < l2h_ini_pre) ? 1 : 0;
+	adapt_rc->l2h_ini_bitmap = ((adapt_rc->l2h_ini_bitmap << 1) & 0xfe) | l2h_ini_down;
+
+	adapt_rc->l2h_ini_hist[3] = adapt_rc->l2h_ini_hist[2];
+	adapt_rc->l2h_ini_hist[2] = adapt_rc->l2h_ini_hist[1];
+	adapt_rc->l2h_ini_hist[1] = adapt_rc->l2h_ini_hist[0];
+	adapt_rc->l2h_ini_hist[0] = l2h_ini_curr;
+
+	adapt_rc->low_rate_tx_fail_hist[3] = adapt_rc->low_rate_tx_fail_hist[2];
+	adapt_rc->low_rate_tx_fail_hist[2] = adapt_rc->low_rate_tx_fail_hist[1];
+	adapt_rc->low_rate_tx_fail_hist[1] = adapt_rc->low_rate_tx_fail_hist[0];
+	adapt_rc->low_rate_tx_fail_hist[0] = low_rate_tx_fail_cnt;
+
+	PHYDM_DBG(dm, DBG_ADPTVTY, "l2h_ini_hist[3:0] = {0x%x, 0x%x, 0x%x, 0x%x}\n",
+		  adapt_rc->l2h_ini_hist[3], adapt_rc->l2h_ini_hist[2],
+		  adapt_rc->l2h_ini_hist[1], adapt_rc->l2h_ini_hist[0]);
+	PHYDM_DBG(dm, DBG_ADPTVTY, "low_rate_tx_fail_hist[3:0] = {%d, %d, %d, %d}\n",
+		  adapt_rc->low_rate_tx_fail_hist[3], adapt_rc->low_rate_tx_fail_hist[2],
+		  adapt_rc->low_rate_tx_fail_hist[1], adapt_rc->low_rate_tx_fail_hist[0]);
+	PHYDM_DBG(dm, DBG_ADPTVTY, "l2h_ini_bitmap = {%d, %d, %d, %d} = 0x%x\n",
+		  (u8)((adapt_rc->l2h_ini_bitmap & BIT(3)) >> 3),
+		  (u8)((adapt_rc->l2h_ini_bitmap & BIT(2)) >> 2),
+		  (u8)((adapt_rc->l2h_ini_bitmap & BIT(1)) >> 1),
+		  (u8)(adapt_rc->l2h_ini_bitmap & BIT(0)),
+		  adapt_rc->l2h_ini_bitmap);
+}
+
+void phydm_rts_drop_chk(void *dm_void)
+{
+	struct dm_struct *dm = (struct dm_struct *)dm_void;
+	struct phydm_adaptivity_struct *adapt = &dm->adaptivity;
+	u32 time_tmp = 0;
+
+	if (!dm->is_linked || adapt->is_adapt_by_dig)
+		return;
+
+	PHYDM_DBG(dm, DBG_ADPTVTY, "%s ======>\n", __func__);
+
+	if (dm->rts_drop_cnt > 0) {
+		adapt->rts_drop_en = 1;
+		adapt->rts_drop_limit_time = dm->phydm_sys_up_time;
+	}
+
+	/*@== Fix l2h_ini to l2h_ini_range_min================================*/
+	if (adapt->rts_drop_en) {
+		PHYDM_DBG(dm, DBG_ADPTVTY,
+			  "[RTS DROP!] rts_drop_limit_time=%d, phydm_sys_up_time=%d\n",
+			  adapt->rts_drop_limit_time, dm->phydm_sys_up_time);
+
+		time_tmp = adapt->rts_drop_limit_time + L2H_INI_LIMIT_PERIOD;
+		dm->th_l2h_ini = adapt->l2h_ini_range_min;
+
+		if (time_tmp < dm->phydm_sys_up_time && dm->rts_drop_cnt == 0) {
+			adapt->rts_drop_en = 0;
+			PHYDM_DBG(dm, DBG_ADPTVTY, "rts_drop_cnt=%d\n",
+				  dm->rts_drop_cnt);
+		}
+	}
+	return;
+}
+
+
+void phydm_l2h_ini_damping_chk(void *dm_void)
+{
+	struct dm_struct *dm = (struct dm_struct *)dm_void;
+	struct phydm_adaptivity_struct *adapt = &dm->adaptivity;
+	struct phydm_l2h_ini_recorder_strcut *adapt_rc = &adapt->l2h_ini_recorder_t;
+	u8 l2h_ini_bitmap_4bit = adapt_rc->l2h_ini_bitmap & 0xf;
+	s8 diff1 = 0, diff2 = 0, min_l2h_ini = 0x7f;
+	u32 tx_fail_low_th = adapt->low_rate_tx_fail_th[0];
+	u32 tx_fail_high_th = adapt->low_rate_tx_fail_th[1];
+	u32 tx_fail_high_th2 = adapt->low_rate_tx_fail_th[2];
+	u8 tx_fail_pattern_match = 0;
+	u32 time_tmp = 0;
+	u8 i = 0;
+
+	if (!dm->is_linked || adapt->is_adapt_by_dig || adapt->rts_drop_en)
+		return;
+
+	PHYDM_DBG(dm, DBG_ADPTVTY, "%s ======>\n", __func__);
+
+	/*@== Release Damping ================================================*/
+	if (adapt_rc->damping_limit_en) {
+		PHYDM_DBG(dm, DBG_ADPTVTY,
+			  "[Damping Limit!] limit_time=%d, phydm_sys_up_time=%d\n",
+			  adapt_rc->limit_time, dm->phydm_sys_up_time);
+
+		time_tmp = adapt_rc->limit_time + L2H_INI_LIMIT_PERIOD;
+
+		if (DIFF_2(dm->low_rate_tx_fail_cnt, adapt_rc->limit_low_rate_tx_fail) > 3 ||
+		    time_tmp < dm->phydm_sys_up_time) {
+			adapt_rc->damping_limit_en = 0;
+			PHYDM_DBG(dm, DBG_ADPTVTY, "low_rate_tx_fail_cnt=%d, limit_low_rate_tx_fail=%d\n",
+				  dm->low_rate_tx_fail_cnt, adapt_rc->limit_low_rate_tx_fail);
+		}
+		return;
+	}
+
+	/*@== Damping Pattern Check===========================================*/
+	PHYDM_DBG(dm, DBG_ADPTVTY, "low_rate_tx_fail_th{H, L}= {%d,%d}\n", tx_fail_high_th, tx_fail_low_th);
+
+	switch (l2h_ini_bitmap_4bit) {
+	case 0x5:
+	/*@ 4b'0101 
+	* L2H_INI:     [3]up(40)  ->[2]down(38)->[1]up(40)  ->[0]down(38)->[new](Lock @ 38)
+	* low_rate_tx_fail_cnt: [3] >high1 ->[2] <low   ->[1] >high1 ->[0] <low   ->[new]   <low
+	*
+	* L2H_INI:     [3]up(45)  ->[2]down(40)->[1]up(42)  ->[0]down(37)->[new](Lock @ 37)
+	* low_rate_tx_fail_cnt: [3] >high2 ->[2] <low   ->[1] >high2 ->[0] <low   ->[new]   <low
+	*/
+		if (adapt_rc->l2h_ini_hist[0] < adapt_rc->l2h_ini_hist[1])
+			diff1 = adapt_rc->l2h_ini_hist[1] - adapt_rc->l2h_ini_hist[0];
+
+		if (adapt_rc->l2h_ini_hist[2] < adapt_rc->l2h_ini_hist[3])
+			diff2 = adapt_rc->l2h_ini_hist[3] - adapt_rc->l2h_ini_hist[2];
+
+		if (adapt_rc->low_rate_tx_fail_hist[0] < tx_fail_low_th &&
+		    adapt_rc->low_rate_tx_fail_hist[1] > tx_fail_high_th &&
+		    adapt_rc->low_rate_tx_fail_hist[2] < tx_fail_low_th &&
+		    adapt_rc->low_rate_tx_fail_hist[3] > tx_fail_high_th) {
+		    /*@Check each rts drop element*/
+			tx_fail_pattern_match = 1;
+		}
+		break;
+	case 0x9:
+	/*@ 4b'1001
+	* L2H_INI:     [3]down(40)->[2]up(42)->[1]up(44)  ->[0]down(39)->[new](Lock @ 39)
+	* low_rate_tx_fail_cnt: [3]  <low  ->[2] <low ->[1] >high2 ->[0] <low   ->[new]  <low
+	*/
+		if (adapt_rc->l2h_ini_hist[0] < adapt_rc->l2h_ini_hist[1])
+			diff1 = adapt_rc->l2h_ini_hist[1] - adapt_rc->l2h_ini_hist[0];
+
+		if (adapt_rc->l2h_ini_hist[2] > adapt_rc->l2h_ini_hist[3])
+			diff2 = adapt_rc->l2h_ini_hist[2] - adapt_rc->l2h_ini_hist[3];
+
+		if (adapt_rc->low_rate_tx_fail_hist[0] < tx_fail_low_th &&
+		    adapt_rc->low_rate_tx_fail_hist[1] > tx_fail_high_th2 &&
+		    adapt_rc->low_rate_tx_fail_hist[2] < tx_fail_low_th &&
+		    adapt_rc->low_rate_tx_fail_hist[3] < tx_fail_low_th) {
+		    /*@Check each fa element*/
+			tx_fail_pattern_match = 1;
+		}
+		break;
+	default:
+		break;
+	}
+
+	if (diff1 >= 2 && diff2 >= 2 && tx_fail_pattern_match) {
+		for (i = 0; i < L2H_INI_RECORD_NUM; i++) {
+			if (min_l2h_ini > adapt_rc->l2h_ini_hist[i])
+				min_l2h_ini = adapt_rc->l2h_ini_hist[i];
+		}
+
+		adapt_rc->damping_limit_en = 1;
+		adapt_rc->damping_limit_val = min_l2h_ini;
+		adapt_rc->limit_time = dm->phydm_sys_up_time;
+		adapt_rc->limit_low_rate_tx_fail = dm->low_rate_tx_fail_cnt;
+
+		PHYDM_DBG(dm, DBG_ADPTVTY,
+			  "[Start damping_limit!] l2h_ini_min=0x%x, limit_time=%d, limit_low_rate_tx_fail=%d\n",
+			  adapt_rc->damping_limit_val,
+			  adapt_rc->limit_time, adapt_rc->limit_low_rate_tx_fail);
+	}
+
+	PHYDM_DBG(dm, DBG_ADPTVTY, "damping_limit=%d\n", adapt_rc->damping_limit_en);
+}
+
+void phydm_low_rate_tx_fail_threshold_check(void *dm_void)
+{
+	struct dm_struct *dm = (struct dm_struct *)dm_void;
+	struct phydm_adaptivity_struct *adapt = &dm->adaptivity;
+
+	if (adapt->is_dbg_low_rate_tx_fail_th) {
+		PHYDM_DBG(dm, DBG_ADPTVTY, "Manual Fix low_rate_tx_fail_th\n");
+	} else {
+		adapt->low_rate_tx_fail_th[0] = 2;
+		adapt->low_rate_tx_fail_th[1] = 2;
+		adapt->low_rate_tx_fail_th[2] = 5;
+	}
+
+	PHYDM_DBG(dm, DBG_ADPTVTY, "low_rate_tx_fail_th={%d,%d,%d}\n", adapt->low_rate_tx_fail_th[0],
+		  adapt->low_rate_tx_fail_th[1], adapt->low_rate_tx_fail_th[2]);
+}
+
+s8 phydm_new_l2h_ini_by_low_rate_tx_fail(void *dm_void, s8 l2h_ini,
+				  u8 *step_size)
+{
+	struct dm_struct *dm = (struct dm_struct *)dm_void;
+	struct phydm_adaptivity_struct *adapt = &dm->adaptivity;
+	u32 low_rate_tx_fail_cnt = dm->low_rate_tx_fail_cnt;
+
+	if (low_rate_tx_fail_cnt > adapt->low_rate_tx_fail_th[2])
+		l2h_ini = l2h_ini - step_size[2];
+	else if (low_rate_tx_fail_cnt > adapt->low_rate_tx_fail_th[1])
+		l2h_ini = l2h_ini - step_size[1];
+	else if (low_rate_tx_fail_cnt < adapt->low_rate_tx_fail_th[0])
+		l2h_ini = l2h_ini + step_size[0];
+
+	return l2h_ini;
+}
+
+
+void phydm_get_new_l2h_ini(void *dm_void)
+{
+	struct dm_struct *dm = (struct dm_struct *)dm_void;
+	struct phydm_adaptivity_struct *adapt = &dm->adaptivity;
+	struct phydm_l2h_ini_recorder_strcut *adapt_rc = &adapt->l2h_ini_recorder_t;
+	u8 step[3] = {1, 2, 5};
+	u32 low_rate_tx_fail_cnt = dm->low_rate_tx_fail_cnt;
+	u32 low_rate_tx_ok_cnt = dm->low_rate_tx_ok_cnt;
+	s8 l2h_ini = dm->th_l2h_ini;
+
+	if (!dm->is_linked || adapt->is_adapt_by_dig || adapt->rts_drop_en)
+		return;
+
+	if (adapt_rc->damping_limit_en) {
+		dm->th_l2h_ini = adapt_rc->damping_limit_val;
+		PHYDM_DBG(dm, DBG_ADPTVTY, "[Limit by Damping] l2h_ini: 0x%x -> 0x%x\n",
+			  l2h_ini, dm->th_l2h_ini);
+		return;
+	}
+
+	l2h_ini = phydm_new_l2h_ini_by_low_rate_tx_fail(dm, l2h_ini, step);
+
+	PHYDM_DBG(dm, DBG_ADPTVTY, "step = {-%d, -%d, +%d}\n", step[2], step[1],
+		  step[0]);
+
+	/*@Check th_l2h_ini by dyn-upper/lower bound */
+	if (l2h_ini < adapt->l2h_ini_range_min)
+		l2h_ini = adapt->l2h_ini_range_min;
+
+	if (l2h_ini > adapt->l2h_ini_range_max)
+		l2h_ini = adapt->l2h_ini_range_max;
+
+	PHYDM_DBG(dm, DBG_ADPTVTY, "low_rate_tx_fail_cnt = %d, low_rate_tx_ok_cnt = %d, l2h_ini: 0x%x -> 0x%x\n",
+		  low_rate_tx_fail_cnt, low_rate_tx_ok_cnt, dm->th_l2h_ini,
+		  l2h_ini);
+
+	dm->th_l2h_ini = l2h_ini;
+}
+
+void phydm_dyn_l2h_ini(void *dm_void)
+{
+	struct dm_struct *dm = (struct dm_struct *)dm_void;
+	struct phydm_adaptivity_struct *adapt = &dm->adaptivity;
+
+	if (dm->rssi_min <= 20 || !dm->is_linked) {
+		phydm_set_l2h_th_ini_win(dm);
+		PHYDM_DBG(dm, DBG_ADPTVTY, "th_l2h_ini = %d\n", dm->th_l2h_ini);
+		return;
+	}
+
+	/*Check rts drop*/
+	phydm_rts_drop_chk(dm);
+
+	/*Record l2h_ini History*/
+	phydm_l2h_ini_recorder(dm);
+
+	/*@l2h_ini Damping Check*/
+	phydm_l2h_ini_damping_chk(dm);
+
+	/*@low_rate_tx_fail threshold decision */
+	phydm_low_rate_tx_fail_threshold_check(dm);
+
+	/*Select new l2h_ini by tx_fail */
+	phydm_get_new_l2h_ini(dm);
+	PHYDM_DBG(dm, DBG_ADPTVTY, "Adjust l2h init @ linked, th_l2h_ini = %d\n",
+		  dm->th_l2h_ini);
+}
+
 #endif
 
 void phydm_dig_up_bound_lmt_en(void *dm_void)
@@ -330,9 +634,9 @@ void phydm_set_l2h_th_ini(void *dm_void)
 
 	 /*@ [New Format: JGR3]IGI-idx:45 = RSSI:35 = -65dBm*/
 	if (dm->support_ic_type & ODM_IC_JGR3_SERIES) {
-		if (dm->support_ic_type & ODM_RTL8822C)
+		if (dm->support_ic_type & (ODM_RTL8822C | ODM_RTL8723F))
 			dm->th_l2h_ini = 45;
-		else if (dm->support_ic_type & ODM_RTL8814B)
+		else if (dm->support_ic_type & (ODM_RTL8814B | ODM_RTL8814C))
 			dm->th_l2h_ini = 49;
 	} else if (dm->support_ic_type & ODM_IC_11AC_SERIES) {
 	 /*@ [Old Format] -11+base(50) = IGI_idx:39 = RSSI:29 = -71dBm*/
@@ -390,6 +694,7 @@ void phydm_adaptivity_debug(void *dm_void, char input[][16], u32 *_used,
 {
 	struct dm_struct *dm = (struct dm_struct *)dm_void;
 	struct phydm_adaptivity_struct *adaptivity = &dm->adaptivity;
+	struct phydm_l2h_ini_recorder_strcut *adapt_rc = &adaptivity->l2h_ini_recorder_t;
 	u32 used = *_used;
 	u32 out_len = *_out_len;
 	char help[] = "-h";
@@ -398,7 +703,7 @@ void phydm_adaptivity_debug(void *dm_void, char input[][16], u32 *_used,
 	u32 reg_value32 = 0;
 	s8 h2l_diff = 0;
 
-	for (i = 0; i < 5; i++) {
+	for (i = 0; i < 6; i++) {
 		PHYDM_SSCANF(input[i + 1], DCMD_HEX, &dm_value[i]);
 		input_idx++;
 	}
@@ -409,6 +714,8 @@ void phydm_adaptivity_debug(void *dm_void, char input[][16], u32 *_used,
 			 "Enter debug mode: {1} {th_l2h_ini} {th_edcca_hl_diff}\n");
 		PDM_SNPF(out_len, used, output + used, out_len - used,
 			 "Leave debug mode: {2}\n");
+		PDM_SNPF(out_len, used, output + used, out_len - used,
+			 "RTS drop debug mode: {3} {en} {low_rate_tx_fail_th[0]} {low_rate_tx_fail_th[1]} {low_rate_tx_fail_th[2]}\n");
 		goto out;
 	}
 
@@ -453,6 +760,21 @@ void phydm_adaptivity_debug(void *dm_void, char input[][16], u32 *_used,
 		else
 			PDM_SNPF(out_len, used, output + used, out_len - used,
 				 "adaptivity disable\n");
+	} else if (dm_value[0] == PHYDM_L2H_INI_DEBUG) {
+		if (dm_value[1] == 1) {
+			adaptivity->is_dbg_low_rate_tx_fail_th = true;
+			adaptivity->low_rate_tx_fail_th[0] = (u32)dm_value[2];
+			adaptivity->low_rate_tx_fail_th[1] = (u32)dm_value[3];
+			adaptivity->low_rate_tx_fail_th[2] = (u32)dm_value[4];
+
+			PDM_SNPF(out_len, used, output + used, out_len - used,
+				 "Set low_rate_tx_fail_th={%d,%d,%d}\n",
+				 adaptivity->low_rate_tx_fail_th[0],
+				 adaptivity->low_rate_tx_fail_th[1],
+				 adaptivity->low_rate_tx_fail_th[2]);
+		} else {
+			adaptivity->is_dbg_low_rate_tx_fail_th = false;
+		}
 	}
 
 out:
@@ -697,6 +1019,20 @@ void phydm_adaptivity_init(void *dm_void)
 		adaptivity->mode_cvrt_en = true;
 	else
 		adaptivity->mode_cvrt_en = false;
+
+	if (dm->support_ic_type & ODM_RTL8822C) {
+		adaptivity->l2h_ini_range_max = 45;
+		adaptivity->l2h_ini_range_min = 35;
+	} else {
+		adaptivity->l2h_ini_range_max = dm->th_l2h_ini;
+		adaptivity->l2h_ini_range_min = dm->th_l2h_ini;
+	}
+	adaptivity->low_rate_tx_fail_th[0] = 2;
+	adaptivity->low_rate_tx_fail_th[1] = 2;
+	adaptivity->low_rate_tx_fail_th[2] = 5;
+	adaptivity->is_dbg_low_rate_tx_fail_th = false;
+	adaptivity->rts_drop_en = false;
+	phydm_l2h_ini_recorder_reset(dm);
 #elif (DM_ODM_SUPPORT_TYPE & ODM_CE)
 	if (!dm->carrier_sense_enable) {
 		if (dm->th_l2h_ini == 0)
@@ -809,8 +1145,19 @@ void phydm_adaptivity(void *dm_void)
 	    !adapt->debug_mode &&
 	    adapt->switch_th_l2h_ini_in_band)
 		phydm_set_l2h_th_ini_win(dm);
-#endif
 
+	if (dm->support_ic_type & ODM_RTL8822C)
+		phydm_dyn_l2h_ini(dm);
+#endif
+#if (DM_ODM_SUPPORT_TYPE == ODM_CE)
+	if (!adapt->debug_mode) {
+		if (*dm->edcca_mode == PHYDM_EDCCA_ADAPT_MODE &&
+		    dm->carrier_sense_enable)
+			phydm_set_l2h_th_ini_carrier_sense(dm);
+		else if (*dm->edcca_mode == PHYDM_EDCCA_ADAPT_MODE)
+			phydm_set_l2h_th_ini(dm);
+	}
+#endif
 	PHYDM_DBG(dm, DBG_ADPTVTY, "%s ====>\n", __func__);
 	PHYDM_DBG(dm, DBG_ADPTVTY, "mode = %s, debug_mode = %d\n",
 		  (*dm->edcca_mode ?
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm_adaptivity.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm_adaptivity.h
index 833839c77665..35adabddde8f 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm_adaptivity.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm_adaptivity.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017  Realtek Corporation.
@@ -27,14 +26,16 @@
 #ifndef __PHYDMADAPTIVITY_H__
 #define __PHYDMADAPTIVITY_H__
 
-#define ADAPTIVITY_VERSION "9.7.07" /*@20190321 changed by Kevin,
-				     *add 8721D threshold l2h init
+#define ADAPTIVITY_VERSION "9.7.08" /*@20210121 changed by Archer,
+				     *add dynamic th_l2h_ini
 				     */
 #define ADC_BACKOFF 12
 #define EDCCA_TH_L2H_LB 48
 #define TH_L2H_DIFF_IGI 8
 #define EDCCA_HL_DIFF_NORMAL 8
 #define IGI_2_DBM(igi) (igi - 110)
+#define L2H_INI_RECORD_NUM 4
+#define L2H_INI_LIMIT_PERIOD 60 /*60 sec*/
 /*@ [PHYDM-337][Old IC] EDCCA TH = IGI + REG setting*/
 #define ODM_IC_PWDB_EDCCA (ODM_RTL8188E | ODM_RTL8723B | ODM_RTL8192E |\
 			   ODM_RTL8881A | ODM_RTL8821 | ODM_RTL8812)
@@ -55,6 +56,15 @@ enum phydm_regulation_type {
 	MAX_REGULATION_NUM	= 4
 };
 #endif
+struct phydm_l2h_ini_recorder_strcut {
+	u8		l2h_ini_bitmap; /*@Don't add any new parameter before this*/
+	s8		l2h_ini_hist[L2H_INI_RECORD_NUM];
+	u32		low_rate_tx_fail_hist[L2H_INI_RECORD_NUM];
+	u8		damping_limit_en;
+	s8		damping_limit_val; /*@Limit l2h_ini_dyn_max*/
+	u32		limit_time;
+	u32		limit_low_rate_tx_fail;
+};
 
 enum phydm_edcca_mode {
 	PHYDM_EDCCA_NORMAL_MODE = 0,
@@ -80,9 +90,18 @@ enum phydm_adaptivity_debug_mode {
 	PHYDM_ADAPT_MSG			= 0,
 	PHYDM_ADAPT_DEBUG		= 1,
 	PHYDM_ADAPT_RESUME		= 2,
+	PHYDM_L2H_INI_DEBUG		= 3
 };
 
 struct phydm_adaptivity_struct {
+	struct phydm_l2h_ini_recorder_strcut l2h_ini_recorder_t;
+	u32			low_rate_tx_fail_th[3];
+	u32			rts_drop_limit_time;
+	s8			l2h_ini_range_max;	/*@l2h_ini_dynamic_max*/
+	s8			l2h_ini_range_min;	/*@l2h_ini_dynamic_min*/
+	boolean		rts_drop_en;
+	boolean		is_dbg_low_rate_tx_fail_th;
+	boolean		is_adapt_by_dig;
 	boolean			mode_cvrt_en;
 	s8			th_l2h_ini_backup;
 	s8			th_edcca_hl_diff_backup;
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm_adc_sampling.c b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm_adc_sampling.c
index 371cb9a2d5fb..7cf20a8227ff 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm_adc_sampling.c
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm_adc_sampling.c
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017  Realtek Corporation.
@@ -49,7 +48,7 @@ boolean phydm_la_finish_addr_recover_8814B(void *dm_void, u32 *finish_addr)
 	struct rt_adcsmp *smp = &dm->adcsmp;
 	boolean recover_success;
 
-	if (dm->support_ic_type != ODM_RTL8814B)
+	if (!(dm->support_ic_type & (ODM_RTL8814B | ODM_RTL8814C)))
 		return false;
 
 	if (smp->la_buff_mode == ADCSMP_BUFF_HALF) {
@@ -147,6 +146,9 @@ phydm_la_mac_clk_en(void *dm_void, boolean enable)
 		return;
 
 	odm_set_mac_reg(dm, R_0x1008, BIT(1), val);
+	/*Set IRAM2/3*/
+	odm_set_mac_reg(dm, R_0x1000, 0xc0, 0x0);
+	odm_set_mac_reg(dm, R_0x1000, 0x3000, 0x3);
 }
 #endif
 
@@ -205,6 +207,70 @@ phydm_la_mv_data_2_tx_buffer(void *dm_void)
 }
 #endif
 
+
+#if(RTL8723F_SUPPORT)
+void
+phydm_la_mv_data_2_tx_buffer_rtl8723f(void *dm_void,  u32	source, u32	dest, u32 	length)
+{
+	struct dm_struct *dm = (struct dm_struct *)dm_void;
+	struct rt_adcsmp *smp = &dm->adcsmp;
+	struct rt_adcsmp_string *buf = &smp->adc_smp_buf;
+	//u32	ch0ctrl = (BIT(29)|BIT(31));
+	u32	ch0ctrl = BIT(31);
+	u32	cnt=25000;
+
+	pr_debug("GetTxPktBuf from iMEM\n");
+	/*Disable LA mode HW block*/
+	odm_set_mac_reg(dm, R_0x7c0, BIT(0), 0x0);
+
+	/* @move LA mode content from IMEM to TxPktBuffer
+	 * Source : OCPBASE_IMEM 0x14040000
+	 * Destination : OCPBASE_TXBUF 0x18780000
+	 * Length : 32K
+	 */
+	/*
+	OCPBASE_IMEM = 0x18600000;
+	OCPBASE_TXBUF = 0x18780000;
+	GET_HAL_INTERFACE(dm->priv)->init_ddma_handler(dm->priv,
+						       OCPBASE_IMEM,
+						       OCPBASE_TXBUF
+						       + buf->start_pos,
+						       0x8000);
+	*/
+
+	// TODO: Replace all register define & bit define
+
+
+	//check if ddma ch0 is idle
+	while(odm_get_mac_reg(dm, R_0x1208 , BIT(31))){
+		ODM_delay_ms(10);
+		cnt--;
+		if(cnt==0){
+            pr_debug("1 InitDDMA88XX polling fail \n");
+			return;
+		}
+	}
+
+	ch0ctrl |= length & 0x3FFFF;
+
+	//check if chksum continuous
+	//ch0ctrl |= BIT(24);
+
+	odm_set_mac_reg(dm, R_0x1200, MASKDWORD, source); /*0x1200[31:0]:Source Address*/
+	odm_set_mac_reg(dm, R_0x1204, MASKDWORD, dest); /*0x1204[31:0]:Destination Address*/
+	odm_set_mac_reg(dm, R_0x1208, MASKDWORD, ch0ctrl); /*0x1208[17:0]:DMA Length*/
+//check if ddma ch0 is idle
+        while(odm_get_mac_reg(dm, R_0x1208 , BIT(31))){
+                ODM_delay_ms(10);
+                cnt--;
+                if(cnt==0){
+            pr_debug("2 InitDDMA88XX polling fail \n");
+                        return ;
+                }
+        }
+}
+#endif
+
 #ifdef PHYDM_IC_JGR3_SERIES_SUPPORT
 
 void phydm_la_bb_adv_reset_jgr3(void *dm_void)
@@ -837,6 +903,15 @@ void phydm_la_get_tx_pkt_buf(void *dm_void)
 	boolean is_round_up = false;
 	u32 addr_8byte = 0;
 	u32 round_up_point = 0;
+	u32 index = 0;
+	u32 imem_base;
+	u32 txbuf_base;
+	u32 dma_len;
+	u32 imem_start_addr;
+	u32 imem_start_addr_offset;
+	u32 txbuff_start_addr;
+	u32 tx_buff_addr;
+
 	#if (RTL8814B_SUPPORT)
 	boolean recover_success = true;
 	#endif
@@ -887,12 +962,76 @@ void phydm_la_get_tx_pkt_buf(void *dm_void)
 
 	/*@==== [Get LA Patterns in TXFF] ====================================*/
 	pr_debug("Dump_Start\n");
+#if(RTL8723F_SUPPORT)
+	imem_base = 0x14040000;
+	txbuf_base = 0x18780000;
+	dma_len = 0x8000;
+	txbuff_start_addr = txbuf_base;
+	imem_start_addr_offset = addr;
+	if (is_round_up) {
+		for(index = 0;index < 4;index++) {
+			dma_len = 0x8000;
+			imem_start_addr= imem_base + (imem_start_addr_offset&0x1FFFF);
+
+			if((imem_start_addr_offset + 0x8000) >= buf->end_pos) {
+				dma_len = buf->end_pos-imem_start_addr_offset;
+
+				phydm_la_mv_data_2_tx_buffer_rtl8723f(dm, imem_start_addr, txbuff_start_addr, dma_len);
+
+				tx_buff_addr = 0;
+				for (i = 0; i < (dma_len >> 3); i++) {
+					phydm_la_access_tx_pkt_buf(dm, tx_buff_addr, i << 1);
+					tx_buff_addr += 8;
+				}
+				imem_start_addr = imem_base;
+				dma_len = 0x8000-dma_len;
+				phydm_la_mv_data_2_tx_buffer_rtl8723f(dm, imem_start_addr, txbuff_start_addr, dma_len);
+
+				tx_buff_addr = 0;
+				for (i = 0; i < (dma_len >> 3); i++) {
+					phydm_la_access_tx_pkt_buf(dm, tx_buff_addr, i << 1);
+					tx_buff_addr += 8;
+				}
+				imem_start_addr_offset = dma_len;
+			}
+			else {
+				dma_len = 0x8000;
+				phydm_la_mv_data_2_tx_buffer_rtl8723f(dm, imem_start_addr, txbuff_start_addr, dma_len);
+
+				tx_buff_addr = 0;
+				for (i = 0; i <4096; i++) {
+					phydm_la_access_tx_pkt_buf(dm, tx_buff_addr, i << 1);
+					tx_buff_addr += 8;
+				}
+				imem_start_addr_offset += 0x8000;
+			}
+		}
+	} else {
+		for(index = 0; index < 4;index++) {
+			imem_start_addr = imem_base + (imem_start_addr_offset & 0x1FFFF);
+			if ((imem_start_addr_offset + 0x8000) > (finish_addr << 3))
+				dma_len = (finish_addr << 3) - imem_start_addr_offset; /*0x1208[17:0]:DMA Length*/
+			phydm_la_mv_data_2_tx_buffer_rtl8723f(dm,imem_start_addr, txbuff_start_addr, dma_len);
+			tx_buff_addr = 0;
+			for (i = 0; i < (dma_len >> 3); i++) {
+				phydm_la_access_tx_pkt_buf(dm, tx_buff_addr, i << 1);
+				tx_buff_addr += 8;
+			}
+			dma_len = 0x8000;
+			imem_start_addr_offset += 0x8000;
+			if (imem_start_addr_offset > (finish_addr << 3))
+				break;
+		}
+	}
+#else
+
 	#ifdef PHYDM_COMPILE_LA_STORE_IN_IMEM
 	phydm_la_mv_data_2_tx_buffer(dm);
 	#endif
 
 	#if (RTL8814B_SUPPORT)
-	if ((dm->support_ic_type & ODM_RTL8814B) && !recover_success) {
+	if ((dm->support_ic_type & (ODM_RTL8814B | ODM_RTL8814C)) &&
+	    !recover_success) {
 		addr = buf->start_pos;
 		smp->smp_number = smp->smp_number_max;
 	}
@@ -909,6 +1048,7 @@ void phydm_la_get_tx_pkt_buf(void *dm_void)
 	#if (RTL8197F_SUPPORT)
 	phydm_la_stop_dma_8197f(dm, PHYDM_RESTORE);
 	#endif
+#endif
 	pr_debug("Dump_End\n");
 }
 
@@ -1168,7 +1308,7 @@ void phydm_la_set_mac_trigger_time(void *dm_void, u32 trigger_time_mu_sec)
 		odm_set_mac_reg(dm, R_0x7fc, BIT(2) | BIT(1) | BIT(0), unit);
 		odm_set_mac_reg(dm, R_0x7f0, 0x7f00, (time_unit_num & 0x7f));
 	#ifdef PHYDM_IC_JGR3_SERIES_SUPPORT
-	} else if (dm->support_ic_type & ODM_RTL8814B) {
+	} else if (dm->support_ic_type & (ODM_RTL8814B | ODM_RTL8814C)) {
 		odm_set_mac_reg(dm, R_0x7cc, BIT(20) | BIT(19) | BIT(18), unit);
 		odm_set_mac_reg(dm, R_0x7c0, 0x7f00, (time_unit_num & 0x7f));
 	} else if (dm->support_ic_type & ODM_IC_JGR3_SERIES) {
@@ -1206,6 +1346,7 @@ void phydm_la_set_buff_mode(void *dm_void, enum la_buff_mode mode)
 		end_pos_tmp = 0x40000;
 		break;
 	case ODM_RTL8814B:
+	case ODM_RTL8814C:
 		buff_size_base = 0x30000;
 		end_pos_tmp = 0x60000;
 		break;
@@ -1231,7 +1372,7 @@ void phydm_la_set_buff_mode(void *dm_void, enum la_buff_mode mode)
 		break;
 	case ODM_RTL8723F:
 		buff_size_base = 0x20000;
-		end_pos_tmp = 0x60000;
+		end_pos_tmp = 0x20000;
 		break;
 	default:
 		pr_debug("[%s] Warning!", __func__);
@@ -1240,7 +1381,7 @@ void phydm_la_set_buff_mode(void *dm_void, enum la_buff_mode mode)
 
 	buf->buffer_size = buff_size_base;
 
-	if (dm->support_ic_type & ODM_RTL8814B) {
+	if (dm->support_ic_type & (ODM_RTL8814B | ODM_RTL8814C)) {
 		if (mode == ADCSMP_BUFF_HALF) {
 			odm_set_mac_reg(dm, R_0x7cc, BIT(21), 0);
 		} else {
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm_adc_sampling.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm_adc_sampling.h
index c6429f83d705..d0ad1c173490 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm_adc_sampling.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm_adc_sampling.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017  Realtek Corporation.
@@ -46,7 +45,7 @@
 #define PHYDM_LA_STORE_IN_IMEM_IC (ODM_RTL8197F | ODM_RTL8198F | ODM_RTL8197G)
 
 #define FULL_BUFF_MODE_SUPPORT (ODM_RTL8821C | ODM_RTL8195B | ODM_RTL8822C |\
-				ODM_RTL8812F | ODM_RTL8814B)
+				ODM_RTL8812F | ODM_RTL8814B | ODM_RTL8814C)
 
 /* @ ============================================================
  *  enumrate
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm_antdect.c b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm_antdect.c
index 0057e7b17b7d..a3213896ccdb 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm_antdect.c
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm_antdect.c
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017  Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm_antdect.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm_antdect.h
index c36b936b9725..f7fc75f185ab 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm_antdect.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm_antdect.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017  Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm_antdiv.c b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm_antdiv.c
index 192e4edb74e1..3c2cc583eecb 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm_antdiv.c
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm_antdiv.c
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017  Realtek Corporation.
@@ -75,7 +74,7 @@ void odm_trx_hw_ant_div_init_8710c(void *dm_void)
 	/*@BT Coexistence*/
 	/*@keep antsel_map when GNT_BT = 1*/
 	odm_set_bb_reg(dm, R_0x864, BIT(12), 1);
-	
+
 	/* @Disable hw antsw & fast_train.antsw when GNT_BT=1 */
 	odm_set_bb_reg(dm, R_0x874, BIT(23), 1);
 	odm_set_bb_reg(dm, R_0x930, 0xF00, 8); /* RFE CTRL_2 ANTSEL0 */
@@ -84,13 +83,13 @@ void odm_trx_hw_ant_div_init_8710c(void *dm_void)
 	odm_set_bb_reg(dm, R_0x804, BIT(8), 0); /* r_keep_rfpin */
 
 	/*@Mapping Table*/
-	//odm_set_bb_reg(dm, R_0x864, BIT2|BIT1|BIT0, 2); 
-	odm_set_bb_reg(dm, R_0x944, 0xFFFF, 0xffff); 
+	//odm_set_bb_reg(dm, R_0x864, BIT2|BIT1|BIT0, 2);
+	odm_set_bb_reg(dm, R_0x944, 0xFFFF, 0xffff);
 	odm_set_bb_reg(dm, R_0x914, MASKBYTE0, 0);
 	odm_set_bb_reg(dm, R_0x914, MASKBYTE1, 1);
 	/*@antenna training	*/
 	odm_set_bb_reg(dm, R_0xe08, BIT(16), 0);
-	
+
 	//need to check!!!!!!!!!!
 	/* Set WLBB_SEL_RF_ON 1 if RXFIR_PWDB > 0xCcc[3:0] */
 	odm_set_bb_reg(dm, R_0xccc, BIT(12), 0);
@@ -125,7 +124,7 @@ void odm_update_rx_idle_ant_8710c(void *dm_void, u8 ant, u32 default_ant,
 	struct dm_struct *dm = (struct dm_struct *)dm_void;
 	struct phydm_fat_struct *fat_tab = &dm->dm_fat_table;
 	void *adapter = dm->adapter;
-	
+
 	PHYDM_DBG(dm, DBG_ANT_DIV,
 		  "***odm_update_rx_idle_ant_8710c!!!\n");
 	if (dm->ant_div_type == S0S1_SW_ANTDIV) {
@@ -133,7 +132,7 @@ void odm_update_rx_idle_ant_8710c(void *dm_void, u8 ant, u32 default_ant,
 			HAL_WRITE32(SYSTEM_CTRL_BASE, R_0x1210,0x800000);
 		else
 			HAL_WRITE32(SYSTEM_CTRL_BASE, R_0x1214,0x800000);
-		
+
 		fat_tab->rx_idle_ant = ant;
 	}else if (dm->ant_div_type == CG_TRX_HW_ANTDIV) {
 		odm_set_bb_reg(dm, R_0x864, BIT(5) | BIT(4) | BIT(3), default_ant);
@@ -258,7 +257,7 @@ void odm_trx_hw_ant_div_init_8721d(void *dm_void)
 		odm_set_bb_reg(dm, R_0x930, 0xF00, 8);
 		odm_set_bb_reg(dm, R_0x930, 0xF000, 8);
 		odm_set_bb_reg(dm, R_0x92c, BIT(3) | BIT(2), 2);
-		odm_set_bb_reg(dm, R_0x944, 0x0000000C, 0x3); 	
+		odm_set_bb_reg(dm, R_0x944, 0x0000000C, 0x3);
 	}
 	else if(dm->antdiv_gpio == ANTDIV_GPIO_PB1PB2PB26){
               /* 3 antenna diversity for AmebaD only */
@@ -496,8 +495,16 @@ void phydm_jgr3_on_off(void *dm_void, u8 swch, u8 path)
 
 	odm_set_bb_reg(dm, R_0x8a0, BIT(17), swch);
 	/* OFDM AntDiv function block enable */
+	if (dm->support_ic_type & ODM_RTL8723F) {
+	odm_set_bb_reg(dm, R_0x1a48, BIT(16), swch);
+	/* @CCK AntDiv function block enable */
+	}
+	else{
 	odm_set_bb_reg(dm, R_0xa00, BIT(15), swch);
 	/* @CCK AntDiv function block enable */
+	}
+	PHYDM_DBG(dm, DBG_ANT_DIV,
+		  "[8723F] AntDiv_on\n");
 }
 
 void odm_ant_div_on_off(void *dm_void, u8 swch, u8 path)
@@ -606,6 +613,12 @@ void phydm_keep_rx_ack_ant_by_tx_ant_time(void *dm_void, u32 time)
 		odm_set_bb_reg(dm, R_0xe20, 0xf00000, time);
 	else if (dm->support_ic_type & ODM_AC_ANTDIV_SUPPORT)
 		odm_set_bb_reg(dm, R_0x818, 0xf00000, time);
+	if (dm->support_ic_type & ODM_RTL8723F) {
+		odm_set_bb_reg(dm, R_0x1c8c, 0xf00, time);
+			/* keep antenna index after tx */
+	}
+
+
 }
 
 void phydm_update_rx_idle_ac(void *dm_void, u8 ant, u32 default_ant,
@@ -713,7 +726,13 @@ void odm_update_rx_idle_ant(void *dm_void, u8 ant)
 	struct dm_struct *dm = (struct dm_struct *)dm_void;
 	struct phydm_fat_struct *fat_tab = &dm->dm_fat_table;
 	u32 default_ant, optional_ant, value32, default_tx_ant;
-
+	if (dm->support_ic_type & ODM_JGR3_ANTDIV_SUPPORT) {
+		PHYDM_DBG(dm, DBG_ANT_DIV,"JGR3 HW-AntDiv block\n");
+	}
+	else{
+		PHYDM_DBG(dm, DBG_ANT_DIV,"not suppoty JGR3 HW-AntDiv block\n");
+		PHYDM_DBG(dm, DBG_ANT_DIV,"dm->support_ic_type=%d\n",dm->support_ic_type);
+}
 	if (fat_tab->rx_idle_ant != ant) {
 		PHYDM_DBG(dm, DBG_ANT_DIV,
 			  "[ Update Rx-Idle-ant ] rx_idle_ant =%s\n",
@@ -790,7 +809,7 @@ void odm_update_rx_idle_ant_sp3t(void *dm_void, u8 ant) /* added by Jiao Qi on M
 		/*@Optional RX*/
 		odm_set_bb_reg(dm, R_0x860, BIT(14) | BIT(13) | BIT(12), default_ant);
 		/*@Default TX*/
-		
+
 		/*PathA Resp Tx*/
 		if (dm->support_ic_type & (ODM_RTL8821C | ODM_RTL8822B |
 		    ODM_RTL8814A))
@@ -884,7 +903,7 @@ void odm_update_tx_ant(void *dm_void, u8 ant, u32 mac_id)
 		else
 			tx_ant = ANT2_2G;
 		}
-	else		
+	else
 		tx_ant = fat_tab->ant_idx_vec[0]-1;
 #endif
 	fat_tab->antsel_a[mac_id] = tx_ant & BIT(0);
@@ -1892,6 +1911,53 @@ void phydm_rx_hw_ant_div_init_97g(void *dm_void)
 }
 #endif //#if (RTL8197F_SUPPORT == 1)
 
+#if (RTL8723F_SUPPORT == 1)
+void phydm_rx_hw_ant_div_init_23f(void *dm_void)
+{
+	struct dm_struct *dm = (struct dm_struct *)dm_void;
+	struct phydm_fat_struct *fat_tab = &dm->dm_fat_table;
+
+	PHYDM_DBG(dm, DBG_ANT_DIV, "[%s]=====>\n", __func__);
+		/* @3 --RFE pin setting--------- */
+	/* @[MAC] */
+		/* @gpioA_11,gpioA_12*/
+	odm_set_mac_reg(dm, R_0x10d8, 0xFF000000, 0x16);
+	odm_set_mac_reg(dm, R_0x10dc, 0xFF, 0x16);
+	/* @[BB] */
+	odm_set_bb_reg(dm, R_0x1c94, BIT(2) | BIT(3), 0x3); /* output enable */
+	odm_set_bb_reg(dm, R_0x1ca0, BIT(2) | BIT(3), 0x0);
+	odm_set_bb_reg(dm, R_0x1c98, BIT(4) | BIT(5), 0x0);
+		/* r_rfe_path_sel_   (RFE_CTRL_2) */
+	odm_set_bb_reg(dm, R_0x1c98, BIT(6) | BIT(7), 0x0);
+		/* r_rfe_path_sel_   (RFE_CTRL_3) */
+	odm_set_bb_reg(dm, R_0x1838, BIT(28), 0); /* RFE_buffer_en */
+	odm_set_bb_reg(dm, R_0x183c, BIT(2), 1); /* rfe_inv  (RFE_CTRL_2) */
+	odm_set_bb_reg(dm, R_0x183c, BIT(3), 0); /* rfe_inv  (RFE_CTRL_3) */
+	odm_set_bb_reg(dm, R_0x1840, 0xF00, 0x8); /* path-A, RFE_CTRL_2 */
+	odm_set_bb_reg(dm, R_0x1840, 0xF000, 0x8); /* path-A, RFE_CTRL_3 */
+	/* @3 ------------------------- */
+
+	/* Pin Settings */
+	odm_set_bb_reg(dm, R_0x1884, BIT(23), 0);
+	odm_set_bb_reg(dm, R_0x1884, BIT(25), 0);
+	/* reg1844[23]=1'b0 *//*"CG switching" is controlled by HWs*/
+	/* reg1844[25]=1'b0 *//*"CG switching" is controlled by HWs*/
+	odm_set_bb_reg(dm, R_0x1884, BIT(16), 1);
+	/* reg1844[16]=1'b1 *//*"antsel" is controlled by HWs*/
+
+	/* @Mapping table */
+	odm_set_bb_reg(dm, R_0x1870, 0xFFFF, 0x0100);
+	/* @antenna mapping table */
+
+	/* OFDM Settings */
+	odm_set_bb_reg(dm, R_0x1938, 0xFFE0, 0xA0); /* thershold */
+	odm_set_bb_reg(dm, R_0x1938, 0x7FF0000, 0x0); /* @bias */
+#ifdef ODM_EVM_ENHANCE_ANTDIV
+	phydm_evm_sw_antdiv_init(dm);
+#endif
+}
+#endif //#if (RTL8723F_SUPPORT == 1)
+
 #if (RTL8723D_SUPPORT == 1)
 void odm_trx_hw_ant_div_init_8723d(void *dm_void)
 {
@@ -2507,7 +2573,7 @@ void odm_trx_hw_ant_div_init_8195b(void *dm_void)
 	struct dm_struct *dm = (struct dm_struct *)dm_void;
 
 	PHYDM_DBG(dm, DBG_ANT_DIV, "[%s]=====>\n", __func__);
-	
+
 	odm_set_bb_reg(dm, R_0xcb8, BIT(16), 0);
 	/*RFE control pin 0,1*/
 	odm_set_bb_reg(dm, R_0xcb0, 0xF, 8); /* @DPDT_P = ANTSEL[0] */
@@ -4739,10 +4805,10 @@ void odm_ant_div_init(void *dm_void)
 
 	fat_tab->is_become_linked = false;
 	fat_tab->ant_div_on_off = 0xff;
-	
-	for(i=0;i<3;i++) 
+
+	for(i=0;i<3;i++)
 		fat_tab->ant_idx_vec[i]=i+1; /* initialize ant_idx_vec for SP3T */
-	
+
 
 /* @3       -   AP   - */
 #if (DM_ODM_SUPPORT_TYPE == ODM_AP)
@@ -4792,9 +4858,9 @@ void odm_ant_div_init(void *dm_void)
 			dm->support_ability &= ~(ODM_BB_ANT_DIV);
 			return;
 		}
-#endif 
+#endif
 	}
-	
+
 	/*to make RX-idle-antenna will be updated absolutly*/
 	odm_update_rx_idle_ant(dm, MAIN_ANT);
 	phydm_keep_rx_ack_ant_by_tx_ant_time(dm, 0);
@@ -4916,6 +4982,20 @@ void odm_ant_div_init(void *dm_void)
 		phydm_rx_hw_ant_div_init_97g(dm);
 	}
 #endif
+
+#if (RTL8723F_SUPPORT == 1)
+	else if (dm->support_ic_type == ODM_RTL8723F) {
+		dm->ant_div_type = CG_TRX_HW_ANTDIV;
+
+		if (dm->ant_div_type != CG_TRX_HW_ANTDIV) {
+			PHYDM_DBG(dm, DBG_ANT_DIV,
+				  "[Return!!!]  8723F Not Supprrt This AntDiv type\n");
+			dm->support_ability &= ~(ODM_BB_ANT_DIV);
+			return;
+		}
+		phydm_rx_hw_ant_div_init_23f(dm);
+	}
+#endif
 /* @2 [--8723B---] */
 #if (RTL8723B_SUPPORT == 1)
 	else if (dm->support_ic_type == ODM_RTL8723B) {
@@ -5365,6 +5445,14 @@ void odm_ant_div(void *dm_void)
 	}
 #endif
 
+/*@ [--8723F--] */
+#if (RTL8723F_SUPPORT == 1)
+	else if (dm->support_ic_type == ODM_RTL8723F) {
+		if (dm->ant_div_type == CG_TRX_HW_ANTDIV)
+			odm_hw_ant_div(dm);
+	}
+#endif
+
 #if (RTL8723B_SUPPORT == 1)
 /*@ [--8723B---] */
 	else if (dm->support_ic_type == ODM_RTL8723B) {
@@ -6379,20 +6467,20 @@ void phydm_antdiv_debug(void *dm_void, char input[][16], u32 *_used,
 				 "AntDiv: Auto\n");
 		} else if (dm_value[1] == 1) {
 			dm->ant_type = ODM_FIX_MAIN_ANT;
-			
+
 		#if (RTL8710C_SUPPORT == 1)
 			dm->antdiv_select = 1;
 		#endif
-		
+
 			PDM_SNPF(out_len, used, output + used, out_len - used,
 				 "AntDiv: Fix Main\n");
 		} else if (dm_value[1] == 2) {
 			dm->ant_type = ODM_FIX_AUX_ANT;
-			
+
 		#if (RTL8710C_SUPPORT == 1)
 			dm->antdiv_select = 2;
 		#endif
-		
+
 			PDM_SNPF(out_len, used, output + used, out_len - used,
 				 "AntDiv: Fix Aux\n");
 		}
@@ -6550,4 +6638,3 @@ void odm_antenna_diversity(void *dm_void)
 	odm_ant_div(dm);
 }
 #endif /*@#ifdef CONFIG_PHYDM_ANTENNA_DIVERSITY*/
-
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm_antdiv.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm_antdiv.h
index 0555cc8732ba..f68bbdb258d4 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm_antdiv.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm_antdiv.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017  Realtek Corporation.
@@ -88,8 +87,8 @@
 			ODM_RTL8197F | ODM_RTL8721D | ODM_RTL8710C)
 #define ODM_AC_ANTDIV_SUPPORT (ODM_RTL8821 | ODM_RTL8881A | ODM_RTL8812 |\
 			ODM_RTL8821C | ODM_RTL8822B | ODM_RTL8814B |\
-			ODM_RTL8195B)
-#define ODM_JGR3_ANTDIV_SUPPORT ODM_RTL8197G
+			ODM_RTL8195B | ODM_RTL8814C)
+#define ODM_JGR3_ANTDIV_SUPPORT (ODM_RTL8197G | ODM_RTL8723F)
 #define ODM_ANTDIV_SUPPORT	(ODM_N_ANTDIV_SUPPORT | ODM_AC_ANTDIV_SUPPORT |\
 			ODM_JGR3_ANTDIV_SUPPORT)
 #define ODM_SMART_ANT_SUPPORT	(ODM_RTL8188E | ODM_RTL8192E)
@@ -97,9 +96,9 @@
 
 #define ODM_ANTDIV_2G_SUPPORT_IC (ODM_RTL8188E | ODM_RTL8192E | ODM_RTL8723B |\
 			ODM_RTL8881A | ODM_RTL8188F | ODM_RTL8723D |\
-			ODM_RTL8197F | ODM_RTL8197G)
+			ODM_RTL8197F | ODM_RTL8197G|ODM_RTL8723F)
 #define ODM_ANTDIV_5G_SUPPORT_IC (ODM_RTL8821 | ODM_RTL8881A | ODM_RTL8812 |\
-			ODM_RTL8821C | ODM_RTL8822B | ODM_RTL8195B)
+			ODM_RTL8821C | ODM_RTL8822B | ODM_RTL8195B|ODM_RTL8723F)
 
 #define ODM_ANTDIV_SUPPORT_IC (ODM_ANTDIV_2G_SUPPORT_IC | ODM_ANTDIV_5G_SUPPORT_IC)
 
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm_api.c b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm_api.c
index 3d432a7bcd76..349f35744489 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm_api.c
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm_api.c
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017  Realtek Corporation.
@@ -372,7 +371,8 @@ void phydm_config_trx_path_v2(void *dm_void, char input[][16], u32 *_used,
 
 	if (!(dm->support_ic_type &
 	    (ODM_RTL8822B | ODM_RTL8197F | ODM_RTL8192F | ODM_RTL8822C |
-	     ODM_RTL8814B | ODM_RTL8812F | ODM_RTL8197G | ODM_RTL8198F)))
+	     ODM_RTL8814B | ODM_RTL8812F | ODM_RTL8197G | ODM_RTL8198F |
+	     ODM_RTL8814C)))
 		return;
 
 	for (i = 0; i < 5; i++) {
@@ -503,7 +503,8 @@ void phydm_config_trx_path(void *dm_void, char input[][16], u32 *_used,
 		#endif
 	} else if (dm->support_ic_type & (ODM_RTL8822B | ODM_RTL8197F |
 		   ODM_RTL8192F | ODM_RTL8822C | ODM_RTL8812F |
-		   ODM_RTL8197G | ODM_RTL8814B | ODM_RTL8198F)) {
+		   ODM_RTL8197G | ODM_RTL8814B | ODM_RTL8198F |
+		   ODM_RTL8814C)) {
 		#if (RTL8822B_SUPPORT || RTL8197F_SUPPORT ||\
 		     RTL8192F_SUPPORT || RTL8822C_SUPPORT ||\
 		     RTL8814B_SUPPORT || RTL8812F_SUPPORT ||\
@@ -1244,22 +1245,12 @@ boolean phydm_spur_case_mapping(void *dm_void)
 	u8 channel = *dm->channel, bw = *dm->band_width;
 	boolean mapping_result = false;
 #if (RTL8814B_SUPPORT == 1)
-	if (channel == 153 && bw == CHANNEL_WIDTH_20) {
-		odm_set_bb_reg(dm, R_0x804, BIT(31), 0);
-		odm_set_bb_reg(dm, R_0xc00, BIT(25) | BIT(24), 0);
+	if (channel == 153 && bw == CHANNEL_WIDTH_20)
 		mapping_result =  true;
-	} else if (channel == 151 && bw == CHANNEL_WIDTH_40) {
-		odm_set_bb_reg(dm, R_0x804, BIT(31), 0);
-		odm_set_bb_reg(dm, R_0xc00, BIT(25) | BIT(24), 0);
+	else if (channel == 151 && bw == CHANNEL_WIDTH_40)
 		mapping_result =  true;
-	} else if (channel == 155 && bw == CHANNEL_WIDTH_80) {
-		odm_set_bb_reg(dm, R_0x804, BIT(31), 0);
-		odm_set_bb_reg(dm, R_0xc00, BIT(25) | BIT(24), 0);
+	else if (channel == 155 && bw == CHANNEL_WIDTH_80)
 		mapping_result =  true;
-	} else {
-		odm_set_bb_reg(dm, R_0x804, BIT(31), 1);
-		odm_set_bb_reg(dm, R_0xc00, BIT(25) | BIT(24), 1);
-	}
 #endif
 	return mapping_result;
 }
@@ -1342,7 +1333,7 @@ u32 phydm_rf_psd_jgr3(void *dm_void, u8 path, u32 tone_idx)
 		odm_set_bb_reg(dm, R_0x1b34, MASKDWORD, 0x1);
 		odm_set_bb_reg(dm, R_0x1b34, MASKDWORD, 0x0);
 
-		if (dm->support_ic_type & ODM_RTL8814B)
+		if (dm->support_ic_type & (ODM_RTL8814B | ODM_RTL8814C))
 			for (poll_cnt = 0; poll_cnt < 20; poll_cnt++) {
 				odm_set_bb_reg(dm, R_0x1bd4, 0x3f0000, 0x2b);
 				psd_status_temp = odm_get_bb_reg(dm, R_0x1bfc,
@@ -1357,14 +1348,14 @@ u32 phydm_rf_psd_jgr3(void *dm_void, u8 path, u32 tone_idx)
 
 		/*read RxIQK power*/
 		odm_set_bb_reg(dm, R_0x1bd4, MASKDWORD, 0x00250001);
-		if (dm->support_ic_type & ODM_RTL8814B)
+		if (dm->support_ic_type & (ODM_RTL8814B | ODM_RTL8814C))
 			psd_val_msb = odm_get_bb_reg(dm, R_0x1bfc, 0x7ff0000);
 		else if (dm->support_ic_type & ODM_RTL8198F)
 			psd_val_msb = odm_get_bb_reg(dm, R_0x1bfc, 0x1f0000);
 
 		odm_set_bb_reg(dm, R_0x1bd4, MASKDWORD, 0x002e0001);
 		psd_val_lsb = odm_get_bb_reg(dm, R_0x1bfc, MASKDWORD);
-		if (dm->support_ic_type & ODM_RTL8814B)
+		if (dm->support_ic_type & (ODM_RTL8814B | ODM_RTL8814C))
 			psd_val = (psd_val_msb << 21) + (psd_val_lsb >> 11);
 		else if (dm->support_ic_type & ODM_RTL8198F)
 			psd_val = (psd_val_msb << 27) + (psd_val_lsb >> 5);
@@ -1418,7 +1409,8 @@ u8 phydm_find_intf_distance_jgr3(void *dm_void, u32 bw, u32 fc,
 		int_distance = DIFF_2(fc, f_interference);
 		/*@10*(int_distance /0.3125)*/
 		if (channel < 15 &&
-		    (dm->support_ic_type & (ODM_RTL8814B | ODM_RTL8198F)))
+		    (dm->support_ic_type &
+		    (ODM_RTL8814B | ODM_RTL8198F | ODM_RTL8814C)))
 			tone_idx_tmp = int_distance / 312;
 		else
 			tone_idx_tmp = ((int_distance + 156) / 312);
@@ -1520,7 +1512,8 @@ void phydm_set_csi_mask_jgr3(void *dm_void, u32 tone_idx_tmp, u8 tone_direction,
 	odm_set_bb_reg(dm, R_0x1d94, BIT(31) | BIT(30), 0x1);
 
 	if (channel < 15 &&
-	    (dm->support_ic_type & (ODM_RTL8814B | ODM_RTL8198F))) {
+	    (dm->support_ic_type &
+	    (ODM_RTL8814B | ODM_RTL8198F | ODM_RTL8814C))) {
 		if (tone_idx_tmp % 2 == 1) {
 			if (tone_direction == FREQ_POSITIVE) {
 				/*===Tone 1===*/
@@ -1594,7 +1587,7 @@ void phydm_set_csi_mask_jgr3(void *dm_void, u32 tone_idx_tmp, u8 tone_direction,
 			}
 		}
 	} else {
-		if ((dm->support_ic_type & (ODM_RTL8814B)) &&
+		if ((dm->support_ic_type & (ODM_RTL8814B | ODM_RTL8814C)) &&
 		    phydm_spur_case_mapping(dm)) {
 			if (!(tone_idx_tmp % 2)) {
 				odm_set_bb_reg(dm, R_0x1d94, MASKBYTE2,
@@ -1678,7 +1671,7 @@ void phydm_nbi_reset_jgr3(void *dm_void)
 	odm_set_bb_reg(dm, R_0x818, BIT(3), 0);
 	odm_set_bb_reg(dm, R_0x818, BIT(11), 0);
 	#if RTL8814B_SUPPORT
-	if (dm->support_ic_type & ODM_RTL8814B) {
+	if (dm->support_ic_type & (ODM_RTL8814B | ODM_RTL8814C)) {
 		odm_set_bb_reg(dm, R_0x1944, 0x300, 0x3);
 		odm_set_bb_reg(dm, R_0x4044, 0x300, 0x3);
 		odm_set_bb_reg(dm, R_0x5044, 0x300, 0x3);
@@ -1738,7 +1731,7 @@ u8 phydm_nbi_setting_jgr3(void *dm_void, u32 enable, u32 ch, u32 bw, u32 f_intf,
 	else
 		phydm_nbi_enable_jgr3(dm, FUNC_DISABLE, path);
 
-	if (dm->support_ic_type & ODM_RTL8814B)
+	if (dm->support_ic_type & (ODM_RTL8814B | ODM_RTL8814C))
 		odm_set_bb_reg(dm, R_0x1d3c, BIT(19), 0);
 
 	return set_result;
@@ -1770,7 +1763,7 @@ void phydm_set_nbi_reg_jgr3(void *dm_void, u32 tone_idx_tmp, u8 tone_direction,
 	}
 	/*Mark the tone idx for Packet detection*/
 	#if RTL8814B_SUPPORT
-	if (dm->support_ic_type & ODM_RTL8814B) {
+	if (dm->support_ic_type & (ODM_RTL8814B | ODM_RTL8814C)) {
 		odm_set_bb_reg(dm, R_0xc24, 0xff, 0xff);
 		if ((*dm->channel == 5) &&
 		    (*dm->band_width == CHANNEL_WIDTH_40))
@@ -2404,6 +2397,7 @@ phydm_api_shift_txagc(void *dm_void, u32 pwr_offset, enum rf_path path,
 	u32 txagc_ofdm = 0;
 	u32 r_txagc_ofdm[4] = {R_0x18e8, R_0x41e8, R_0x52e8, R_0x53e8};
 	u32 r_txagc_cck[4] = {R_0x18a0, R_0x41a0, R_0x52a0, R_0x53a0};
+	u32 r_new_txagc[1] = {R_0x4308};
 
 	#if (RTL8822C_SUPPORT || RTL8812F_SUPPORT || RTL8197G_SUPPORT)
 	if (dm->support_ic_type &
@@ -2456,7 +2450,8 @@ phydm_api_shift_txagc(void *dm_void, u32 pwr_offset, enum rf_path path,
 	#endif
 
 	#if (RTL8198F_SUPPORT || RTL8814B_SUPPORT)
-	if (dm->support_ic_type & (ODM_RTL8198F | ODM_RTL8814B)) {
+	if (dm->support_ic_type &
+	    (ODM_RTL8198F | ODM_RTL8814B | ODM_RTL8814C)) {
 		if (path > RF_PATH_D) {
 			PHYDM_DBG(dm, ODM_PHY_CONFIG, "Unsupported path (%d)\n",
 				  path);
@@ -2505,10 +2500,10 @@ phydm_api_shift_txagc(void *dm_void, u32 pwr_offset, enum rf_path path,
 				  path);
 			return false;
 		}
-		txagc_cck = (u8)odm_get_bb_reg(dm, r_txagc_cck[path],
-						   0x7F0000);
-		txagc_ofdm = (u8)odm_get_bb_reg(dm, r_txagc_ofdm[path],
-						    0x1FC00);
+		txagc_cck = (u8)odm_get_bb_reg(dm, r_new_txagc[path],
+					       0x0000007f);
+		txagc_ofdm = (u8)odm_get_bb_reg(dm, r_new_txagc[path],
+						0x00007f00);
 		if (is_positive) {
 			if (((txagc_cck + pwr_offset) > 127) ||
 			    ((txagc_ofdm + pwr_offset) > 127))
@@ -2666,7 +2661,7 @@ phydm_api_set_txagc(void *dm_void, u32 pwr_idx, enum rf_path path,
 #endif
 
 #if (RTL8814B_SUPPORT)
-	if (dm->support_ic_type & ODM_RTL8814B) {
+	if (dm->support_ic_type & (ODM_RTL8814B | ODM_RTL8814C)) {
 		if (rate < 0x4)
 			txagc_tmp = config_phydm_read_txagc_8814b(dm, path,
 								  rate,
@@ -2853,7 +2848,7 @@ u8 phydm_api_get_txagc(void *dm_void, enum rf_path path, u8 hw_rate)
 #endif
 
 #if (RTL8814B_SUPPORT)
-	if (dm->support_ic_type & ODM_RTL8814B) {
+	if (dm->support_ic_type & (ODM_RTL8814B | ODM_RTL8814C)) {
 		if (hw_rate < 0x4) {
 			ret = config_phydm_read_txagc_8814b(dm, path, hw_rate,
 							    PDM_CCK);
@@ -3008,6 +3003,7 @@ phydm_api_switch_bw_channel(void *dm_void, u8 ch, u8 pri_ch,
 
 #if (RTL8814B_SUPPORT)
 	case ODM_RTL8814B:
+	case ODM_RTL8814C:
 		ret = config_phydm_switch_channel_bw_8814b(dm, ch, pri_ch, bw);
 	break;
 #endif
@@ -3081,6 +3077,7 @@ phydm_api_trx_mode(void *dm_void, enum bb_path tx_path, enum bb_path rx_path,
 
 	#if (RTL8814B_SUPPORT)
 	case ODM_RTL8814B:
+	case ODM_RTL8814C:
 		ret = config_phydm_trx_mode_8814b(dm, tx_path, rx_path);
 		break;
 	#endif
@@ -3092,6 +3089,13 @@ phydm_api_trx_mode(void *dm_void, enum bb_path tx_path, enum bb_path rx_path,
 		break;
 	#endif
 
+	#if (RTL8723F_SUPPORT)
+	case ODM_RTL8723F:
+		ret = config_phydm_trx_mode_8723f(dm, tx_path, rx_path,
+						  tx_path_ctrl);
+		break;
+	#endif
+
 	#if (RTL8812F_SUPPORT)
 	case ODM_RTL8812F:
 		ret = config_phydm_trx_mode_8812f(dm, tx_path, rx_path, is_2tx);
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm_api.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm_api.h
index 0e7ce1675673..a27b72514b59 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm_api.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm_api.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017  Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm_auto_dbg.c b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm_auto_dbg.c
index 0fd57525d50a..203764d7c4ec 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm_auto_dbg.c
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm_auto_dbg.c
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017  Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm_auto_dbg.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm_auto_dbg.h
index 9e18ceb87c79..78bde627f83c 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm_auto_dbg.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm_auto_dbg.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017  Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm_beamforming.c b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm_beamforming.c
index a6093417a04c..1c055c8b9fb8 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm_beamforming.c
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm_beamforming.c
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017  Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm_beamforming.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm_beamforming.h
index 02d2dc2d5ac3..efb53e3099da 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm_beamforming.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm_beamforming.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017  Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm_cck_pd.c b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm_cck_pd.c
index 97f81968d70a..15a4b9319db0 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm_cck_pd.c
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm_cck_pd.c
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017  Realtek Corporation.
@@ -86,29 +85,49 @@ void phydm_cckpd_type1(void *dm_void)
 
 	if (dm->is_linked) {
 	#if (DM_ODM_SUPPORT_TYPE & (ODM_WIN | ODM_CE))
-		if (dm->rssi_min > 60) {
-			lv = CCK_PD_LV_3;
-		} else if (dm->rssi_min > 35) {
-			lv = CCK_PD_LV_2;
-		} else if (dm->rssi_min > 20) {
-			if (cckpd_t->cck_fa_ma > 500)
+		if (dm->support_ic_type & ODM_RTL8822B) {
+			if (dm->rssi_min > 35) {
 				lv = CCK_PD_LV_2;
-			else if (cckpd_t->cck_fa_ma < 250)
+			} else if (dm->rssi_min > 20) {
+				if (cckpd_t->cck_fa_ma > 500)
+					lv = CCK_PD_LV_2;
+				else if (cckpd_t->cck_fa_ma < 250)
+					lv = CCK_PD_LV_1;
+				else
+					is_update = false;
+			} else { /*RSSI < 20*/
 				lv = CCK_PD_LV_1;
-			else
-				is_update = false;
-		} else { /*RSSI < 20*/
-			lv = CCK_PD_LV_1;
+			}
+		} else {
+			if (dm->rssi_min > 60) {
+				lv = CCK_PD_LV_3;
+			} else if (dm->rssi_min > 35) {
+				lv = CCK_PD_LV_2;
+			} else if (dm->rssi_min > 20) {
+				if (cckpd_t->cck_fa_ma > 500)
+					lv = CCK_PD_LV_2;
+				else if (cckpd_t->cck_fa_ma < 250)
+					lv = CCK_PD_LV_1;
+				else
+					is_update = false;
+			} else { /*RSSI < 20*/
+				lv = CCK_PD_LV_1;
+			}
 		}
 	#else /*ODM_AP*/
-		if (dig_t->cur_ig_value > 0x32)
+		if (dig_t->cur_ig_value > 0x32) {
 			lv = CCK_PD_LV_4;
-		else if (dig_t->cur_ig_value > 0x2a)
+			// remove lv4 only for 8822b
+			if (dm->support_ic_type & ODM_RTL8822B) {
+				lv = CCK_PD_LV_3;
+			}
+		} else if (dig_t->cur_ig_value > 0x2a) {
 			lv = CCK_PD_LV_3;
-		else if (dig_t->cur_ig_value > 0x24)
+		} else if (dig_t->cur_ig_value > 0x24) {
 			lv = CCK_PD_LV_2;
-		else
+		} else {
 			lv = CCK_PD_LV_1;
+		}
 	#endif
 	} else {
 		if (cckpd_t->cck_fa_ma > 1000)
@@ -540,6 +559,19 @@ void phydm_cckpd_type3(void *dm_void)
 			else
 				is_update = false;
 		}
+		if ((dm->anti_interference_en != NULL) && (*dm->anti_interference_en == 1)) {
+        	if (igi >= 0x20 && dm->rssi_min >= 27 && (igi - dm->rssi_min < 10)) {
+				//printf(">>>>>TUYA CCK FA CNT = %d, RSSI = %d, IGI =%d \n", cckpd_t->cck_fa_ma, dm->rssi_min, igi);
+				is_update = false;
+				odm_set_bb_reg(dm, R_0xa08, BIT(21) | BIT(20), 0x2);
+				//odm_set_bb_reg(dm, R_0xac8, 0xff, 0x18);
+			}
+			else {
+				//printf("CCK FA CNT = %d, RSSI = %d, IGI =%d \n", cckpd_t->cck_fa_ma, dm->rssi_min, igi);
+				odm_set_bb_reg(dm, R_0xa08, BIT(21) | BIT(20), cckpd_t->cck_din_shift_opt);
+				//odm_set_bb_reg(dm, R_0xac8, 0xff, cckpd_t->cck_pd_20m_1r);
+			}
+		}
 	} else {
 		if (cckpd_t->cck_fa_ma > 1000)
 			lv = CCK_PD_LV_1;
@@ -586,6 +618,7 @@ void phydm_cck_pd_init_type3(void *dm_void)
 	cckpd_t->cck_pd_20m_2r = (u8)odm_get_bb_reg(dm, R_0xac8, 0xff00);
 	cckpd_t->cck_pd_40m_1r = (u8)odm_get_bb_reg(dm, R_0xacc, 0xff);
 	cckpd_t->cck_pd_40m_2r = (u8)odm_get_bb_reg(dm, R_0xacc, 0xff00);
+    cckpd_t->cck_din_shift_opt = (u8)odm_get_bb_reg(dm, R_0xa08, BIT(21) | BIT(20));
 
 	reg_tmp = odm_get_bb_reg(dm, R_0xad0, MASKDWORD);
 	cckpd_t->cck_cs_ratio_20m_1r = (u8)(reg_tmp & 0x1f);
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm_cck_pd.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm_cck_pd.h
index 00ed6980de8d..2a1d3eab505a 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm_cck_pd.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm_cck_pd.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017  Realtek Corporation.
@@ -157,6 +156,7 @@ struct phydm_cckpd_struct {
 	u8		cck_cs_ratio_20m_2r;
 	u8		cck_cs_ratio_40m_1r;
 	u8		cck_cs_ratio_40m_2r;
+    u8		cck_din_shift_opt;
 	/*Current value*/
 	u8		cur_cck_pd_20m_1r;
 	u8		cur_cck_pd_20m_2r;
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm_cck_rx_pathdiv.c b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm_cck_rx_pathdiv.c
index 733c33793465..3106f19395c8 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm_cck_rx_pathdiv.c
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm_cck_rx_pathdiv.c
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017  Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm_cck_rx_pathdiv.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm_cck_rx_pathdiv.h
index b480d6536aad..952bcf5f987e 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm_cck_rx_pathdiv.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm_cck_rx_pathdiv.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017  Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm_ccx.c b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm_ccx.c
index 1f0dc5d2b77b..2bd002a3f851 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm_ccx.c
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm_ccx.c
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017  Realtek Corporation.
@@ -27,6 +26,35 @@
 #include "mp_precomp.h"
 #include "phydm_precomp.h"
 
+u8 phydm_env_mntr_get_802_11_k_rsni(void *dm_void, s8 rcpi, s8 anpi)
+{
+	u8 rsni = 0;
+	u8 signal = 0;
+	u8 sig_to_rsni[13] = {0, 8, 15, 20, 24, 27, 30, 32, 35, 37, 39, 41, 43};
+
+	/*rcpi = signal + noise + interference = rssi*/
+	/*anpi = noise + interferecne = nhm*/
+	/*signal = rcpi - anpi*/
+
+	/*rsni = 2*(10*log10((rcpi_lin/anpi_lin)-1)+10), unit = 0.5dB*/
+	/*rcpi_lin/anpi_lin=10^((rcpi_dB-anpi_db)/10)*/
+	/*rsni is approximated as 2*((rcpi_db-anpi_db)+10) when signal >= 13*/
+
+	if (rcpi <= anpi)
+		signal = 0;
+	else if (rcpi - anpi >= 117)
+		signal = 117;
+	else
+		signal = rcpi - anpi;
+
+	if (signal < 13)
+		rsni = sig_to_rsni[signal];
+	else
+		rsni = 2 * (signal + 10);
+
+	return rsni;
+}
+
 void phydm_ccx_hw_restart(void *dm_void)
 			  /*@Will Restart NHM/CLM/FAHM simultaneously*/
 {
@@ -49,130 +77,145 @@ void phydm_ccx_hw_restart(void *dm_void)
 	odm_set_bb_reg(dm, reg1, BIT(8), 0x1);
 }
 
-#ifdef FAHM_SUPPORT
+u8 phydm_ccx_get_rpt_ratio(void *dm_void, u16 rpt, u16 denom)
+{
+	u32 numer = 0;
 
-void phydm_fahm_racing_release(void *dm_void)
+	numer = rpt * 100 + (denom >> 1);
+
+	return (u8)PHYDM_DIV(numer, denom);
+}
+
+#ifdef NHM_SUPPORT
+
+void phydm_nhm_racing_release(void *dm_void)
 {
 	struct dm_struct *dm = (struct dm_struct *)dm_void;
 	struct ccx_info *ccx = &dm->dm_ccx_info;
 	u32 value32 = 0;
 
 	PHYDM_DBG(dm, DBG_ENV_MNTR, "[%s]===>\n", __func__);
-	PHYDM_DBG(dm, DBG_ENV_MNTR, "fahm_racing_release : lv:(%d)->(0)\n",
-		  ccx->fahm_set_lv);
+	PHYDM_DBG(dm, DBG_ENV_MNTR, "lv:(%d)->(0)\n", ccx->nhm_set_lv);
 
-	ccx->fahm_ongoing = false;
-	ccx->fahm_set_lv = FAHM_RELEASE;
+	ccx->nhm_ongoing = false;
+	ccx->nhm_set_lv = NHM_RELEASE;
 
-	if (!(ccx->fahm_app == FAHM_BACKGROUND || ccx->fahm_app == FAHM_ACS))
+	if (!(ccx->nhm_app == NHM_BACKGROUND || ccx->nhm_app == NHM_ACS)) {
 		phydm_pause_func(dm, F00_DIG, PHYDM_RESUME,
 				 PHYDM_PAUSE_LEVEL_1, 1, &value32);
+	}
 
-	ccx->fahm_app = FAHM_BACKGROUND;
+	ccx->nhm_app = NHM_BACKGROUND;
 }
 
-u8 phydm_fahm_racing_ctrl(void *dm_void, enum phydm_fahm_level lv)
+u8 phydm_nhm_racing_ctrl(void *dm_void, enum phydm_nhm_level nhm_lv)
 {
 	struct dm_struct *dm = (struct dm_struct *)dm_void;
 	struct ccx_info *ccx = &dm->dm_ccx_info;
 	u8 set_result = PHYDM_SET_SUCCESS;
-	/*acquire to control FAHM API*/
+	/*@acquire to control NHM API*/
 
-	PHYDM_DBG(dm, DBG_ENV_MNTR, "fahm_ongoing=%d, lv:(%d)->(%d)\n",
-		  ccx->fahm_ongoing, ccx->fahm_set_lv, lv);
-	if (ccx->fahm_ongoing) {
-		if (lv <= ccx->fahm_set_lv) {
+	PHYDM_DBG(dm, DBG_ENV_MNTR, "nhm_ongoing=%d, lv:(%d)->(%d)\n",
+		  ccx->nhm_ongoing, ccx->nhm_set_lv, nhm_lv);
+	if (ccx->nhm_ongoing) {
+		if (nhm_lv <= ccx->nhm_set_lv) {
 			set_result = PHYDM_SET_FAIL;
 		} else {
 			phydm_ccx_hw_restart(dm);
-			ccx->fahm_ongoing = false;
+			ccx->nhm_ongoing = false;
 		}
 	}
 
 	if (set_result)
-		ccx->fahm_set_lv = lv;
+		ccx->nhm_set_lv = nhm_lv;
 
-	PHYDM_DBG(dm, DBG_ENV_MNTR, "fahm racing success=%d\n", set_result);
+	PHYDM_DBG(dm, DBG_ENV_MNTR, "nhm racing success=%d\n", set_result);
 	return set_result;
 }
 
-void phydm_fahm_trigger(void *dm_void)
-{ /*@unit (4us)*/
+void phydm_nhm_trigger(void *dm_void)
+{
 	struct dm_struct *dm = (struct dm_struct *)dm_void;
 	struct ccx_info *ccx = &dm->dm_ccx_info;
-	u32 reg = 0;
+	u32 nhm_reg1 = 0;
 
+	if (dm->support_ic_type & ODM_IC_11AC_SERIES)
+		nhm_reg1 = R_0x994;
+	#ifdef PHYDM_IC_JGR3_SERIES_SUPPORT
+	else if (dm->support_ic_type & ODM_IC_JGR3_SERIES)
+		nhm_reg1 = R_0x1e60;
+	#endif
+	else
+		nhm_reg1 = R_0x890;
 	PHYDM_DBG(dm, DBG_ENV_MNTR, "[%s]===>\n", __func__);
 
-	switch (dm->ic_ip_series) {
-	case PHYDM_IC_JGR3:
-		reg = R_0x1e60;
-		break;
-	case PHYDM_IC_AC:
-		reg = R_0x994;
-		break;
-	case PHYDM_IC_N:
-		reg = R_0x890;
-		break;
-	default:
-		break;
-	}
-
-	odm_set_bb_reg(dm, reg, BIT(2), 0);
-	odm_set_bb_reg(dm, reg, BIT(2), 1);
-
-	ccx->fahm_trigger_time = dm->phydm_sys_up_time;
-	ccx->fahm_rpt_stamp++;
-	ccx->fahm_ongoing = true;
+	/* @Trigger NHM*/
+	pdm_set_reg(dm, nhm_reg1, BIT(1), 0);
+	pdm_set_reg(dm, nhm_reg1, BIT(1), 1);
+	ccx->nhm_trigger_time = dm->phydm_sys_up_time;
+	ccx->nhm_rpt_stamp++;
+	ccx->nhm_ongoing = true;
 }
 
 boolean
-phydm_fahm_check_rdy(void *dm_void)
+phydm_nhm_check_rdy(void *dm_void)
 {
 	struct dm_struct *dm = (struct dm_struct *)dm_void;
 	boolean is_ready = false;
-	u32 reg = 0, reg_bit = 0;
+	u32 reg1 = 0, reg1_bit = 0;
 
-	switch (dm->ic_ip_series) {
-	case PHYDM_IC_JGR3:
-		reg = R_0x2d84;
-		reg_bit = 31;
-		break;
-	case PHYDM_IC_AC:
-		reg = R_0x1f98;
-		reg_bit = 31;
-		break;
-	case PHYDM_IC_N:
-		reg = R_0x9f0;
-		reg_bit = 31;
-		break;
-	default:
-		break;
+	if (dm->support_ic_type & ODM_IC_11AC_SERIES) {
+		reg1 = R_0xfb4;
+		reg1_bit = 16;
+	#ifdef PHYDM_IC_JGR3_SERIES_SUPPORT
+	} else if (dm->support_ic_type & ODM_IC_JGR3_SERIES) {
+		reg1 = R_0x2d4c;
+		reg1_bit = 16;
+	#endif
+	} else {
+		reg1 = R_0x8b4;
+		if (dm->support_ic_type & (ODM_RTL8710B | ODM_RTL8721D |
+					ODM_RTL8710C))
+			reg1_bit = 25;
+		else
+			reg1_bit = 17;
 	}
-
-	if (odm_get_bb_reg(dm, reg, BIT(reg_bit)))
+	if (odm_get_bb_reg(dm, reg1, BIT(reg1_bit)))
 		is_ready = true;
 
-	PHYDM_DBG(dm, DBG_ENV_MNTR, "FAHM rdy=%d\n", is_ready);
+	PHYDM_DBG(dm, DBG_ENV_MNTR, "NHM rdy=%d\n", is_ready);
 
 	return is_ready;
 }
 
-u8 phydm_fahm_cal_wgt_avg(void *dm_void, u8 start_i, u8 end_i, u16 r_sum,
-			  u16 period)
+void phydm_nhm_cal_wgt(void *dm_void)
 {
 	struct dm_struct *dm = (struct dm_struct *)dm_void;
 	struct ccx_info *ccx = &dm->dm_ccx_info;
 	u8 i = 0;
-	u32 pwr_tmp = 0;
-	u8 pwr = 0;
-	u32 fahm_valid = 0;
 
-	PHYDM_DBG(dm, DBG_ENV_MNTR, "[%s]===>\n", __func__);
+	for (i = 0; i < NHM_RPT_NUM; i++) {
+		if (i == 0)
+			ccx->nhm_wgt[0] = (u8)(MAX_2(ccx->nhm_th[0] - 2, 0));
+		else if (i == (NHM_RPT_NUM - 1))
+			ccx->nhm_wgt[NHM_RPT_NUM - 1] = (u8)(ccx->nhm_th[NHM_TH_NUM - 1] + 2);
+		else
+			ccx->nhm_wgt[i] = (u8)((ccx->nhm_th[i - 1] + ccx->nhm_th[i]) >> 1);
+	}
+}
 
-	if (r_sum == 0) {
+u8 phydm_nhm_cal_wgt_avg(void *dm_void, u8 start_i, u8 end_i, u8 n_sum)
+{
+	struct dm_struct *dm = (struct dm_struct *)dm_void;
+	struct ccx_info *ccx = &dm->dm_ccx_info;
+	u8 i = 0;
+	u32 noise_tmp = 0;
+	u8 noise = 0;
+	u32 nhm_valid = 0;
+
+	if (n_sum == 0) {
 		PHYDM_DBG(dm, DBG_ENV_MNTR,
-			  "rpt_sum = 0, don't need to update\n");
+			  "n_sum = 0, don't need to update noise\n");
 		return 0x0;
 	} else if (end_i > NHM_RPT_NUM - 1) {
 		PHYDM_DBG(dm, DBG_ENV_MNTR,
@@ -180,327 +223,457 @@ u8 phydm_fahm_cal_wgt_avg(void *dm_void, u8 start_i, u8 end_i, u16 r_sum,
 		return 0x0;
 	}
 
-	for (i = start_i; i <= end_i; i++) {
-		if (i == 0)
-			pwr_tmp += ccx->fahm_result[0] *
-				   MAX_2(ccx->fahm_th[0] - 2, 0);
-		else if (i == (NHM_RPT_NUM - 1))
-			pwr_tmp += ccx->fahm_result[NHM_RPT_NUM - 1] *
-				   (ccx->fahm_th[NHM_TH_NUM - 1] + 2);
-		else
-			pwr_tmp += ccx->fahm_result[i] *
-				   (ccx->fahm_th[i - 1] + ccx->fahm_th[i]) >> 1;
-	}
+	for (i = start_i; i <= end_i; i++)
+		noise_tmp += ccx->nhm_result[i] * ccx->nhm_wgt[i];
 
-	/* protection for the case of minus pwr(RSSI)*/
-	pwr = (u8)(NTH_TH_2_RSSI(MAX_2(PHYDM_DIV(pwr_tmp, r_sum), 20)));
-	fahm_valid = PHYDM_DIV(r_sum * 100, period);
+	/* protection for the case of minus noise(RSSI)*/
+	noise = (u8)(NTH_TH_2_RSSI(MAX_2(PHYDM_DIV(noise_tmp, n_sum), 20)));
+	nhm_valid = (n_sum * 100) >> 8;
 	PHYDM_DBG(dm, DBG_ENV_MNTR,
-		  "valid: ((%d)) percent, pwr(RSSI)=((%d))\n",
-		  fahm_valid, pwr);
+		  "cal wgt_avg : valid: ((%d)) percent, noise(RSSI)=((%d))\n",
+		  nhm_valid, noise);
 
-	return pwr;
+	return noise;
 }
 
-void phydm_fahm_get_utility(void *dm_void)
+u8 phydm_nhm_cal_nhm_env(void *dm_void)
 {
 	struct dm_struct *dm = (struct dm_struct *)dm_void;
 	struct ccx_info *ccx = &dm->dm_ccx_info;
+	u8 first_idx = 0;
+	u8 nhm_env = 0;
+	u8 i = 0;
 
-	if (ccx->fahm_rpt_sum >= ccx->fahm_result[0]) {
-		ccx->fahm_pwr = phydm_fahm_cal_wgt_avg(dm, 0, NHM_RPT_NUM - 1,
-						       ccx->fahm_rpt_sum,
-						       ccx->fahm_period);
+	nhm_env = ccx->nhm_rpt_sum;
+
+	/*search first cluster*/
+	for (i = 0; i < NHM_RPT_NUM; i++) {
+		if (ccx->nhm_result[i]) {
+			first_idx = i;
+			break;
+		}
+	}
+
+	/*exclude first cluster under -80dBm*/
+	for (i = 0; i < 4; i++) {
+		if (((first_idx + i) < NHM_RPT_NUM) &&
+		    (ccx->nhm_wgt[first_idx + i] <= NHM_IC_NOISE_TH))
+			nhm_env -= ccx->nhm_result[first_idx + i];
+	}
+
+	/*exclude nhm_rpt[0] above -80dBm*/
+	if (ccx->nhm_wgt[0] > NHM_IC_NOISE_TH)
+		nhm_env -= ccx->nhm_result[0];
+
+	PHYDM_DBG(dm, DBG_ENV_MNTR, "cal nhm_env: first_idx=%d, nhm_env=%d\n",
+		  first_idx, nhm_env);
+
+	return nhm_env;
+}
+
+void phydm_nhm_get_utility(void *dm_void)
+{
+	struct dm_struct *dm = (struct dm_struct *)dm_void;
+	struct ccx_info *ccx = &dm->dm_ccx_info;
+	u8 nhm_rpt_non_0 = 0;
+	u8 nhm_rpt_non_11 = 0;
+	u8 nhm_env = 0;
+
+	if (ccx->nhm_rpt_sum >= ccx->nhm_result[0]) {
+		phydm_nhm_cal_wgt(dm);
+
+		nhm_rpt_non_0 = ccx->nhm_rpt_sum - ccx->nhm_result[0];
+		nhm_rpt_non_11 = ccx->nhm_rpt_sum - ccx->nhm_result[11];
+		/*exclude nhm_r[0] above -80dBm or first cluster under -80dBm*/
+		nhm_env = phydm_nhm_cal_nhm_env(dm);
+		ccx->nhm_ratio = phydm_ccx_get_rpt_ratio(dm, nhm_rpt_non_0,
+				 NHM_RPT_MAX);
+		ccx->nhm_env_ratio = phydm_ccx_get_rpt_ratio(dm, nhm_env,
+				     NHM_RPT_MAX);
+		if ((ccx->nhm_include_txon == NHM_EXCLUDE_TXON) &&
+		    (ccx->nhm_include_cca == NHM_EXCLUDE_CCA))
+			ccx->nhm_idle_ratio = phydm_ccx_get_rpt_ratio(dm,
+								      ccx->nhm_duration,
+								      ccx->nhm_period);
+		else
+			ccx->nhm_idle_ratio = ENV_MNTR_FAIL;
+		ccx->nhm_level_valid = phydm_ccx_get_rpt_ratio(dm,
+				       nhm_rpt_non_11, NHM_RPT_MAX);
+		ccx->nhm_level = phydm_nhm_cal_wgt_avg(dm, 0, NHM_RPT_NUM - 2,
+						     nhm_rpt_non_11);
+		ccx->nhm_pwr = phydm_nhm_cal_wgt_avg(dm, 0, NHM_RPT_NUM - 1,
+						     ccx->nhm_rpt_sum);
 	} else {
-		PHYDM_DBG(dm, DBG_ENV_MNTR, "[warning] fahm_rpt_sum invalid\n");
-		ccx->fahm_pwr = 0;
+		PHYDM_DBG(dm, DBG_ENV_MNTR, "[warning] nhm_rpt_sum invalid\n");
+		ccx->nhm_ratio = ENV_MNTR_FAIL;
+		ccx->nhm_env_ratio = ENV_MNTR_FAIL;
+		ccx->nhm_idle_ratio = ENV_MNTR_FAIL;
 	}
 
-	PHYDM_DBG(dm, DBG_ENV_MNTR, "fahm_pwr=%d\n", ccx->fahm_pwr);
+	PHYDM_DBG(dm, DBG_ENV_MNTR,
+		  "nhm_ratio=%d, nhm_env_ratio=%d, nhm_level=%d, nhm_pwr=%d\n",
+		  ccx->nhm_ratio, ccx->nhm_env_ratio, ccx->nhm_level,
+		  ccx->nhm_pwr);
 }
 
 boolean
-phydm_fahm_get_result(void *dm_void)
+phydm_nhm_get_result(void *dm_void)
 {
 	struct dm_struct *dm = (struct dm_struct *)dm_void;
 	struct ccx_info *ccx = &dm->dm_ccx_info;
 	u32 value32 = 0;
-	u16 denom; /*fahm_denominator packet count*/
-	u32 reg1 = 0;
-	u32 reg2 = 0;
 	u8 i = 0;
-	u32 fahm_rpt_sum_tmp = 0;
+	u32 nhm_reg1 = 0;
+	u16 nhm_rpt_sum_tmp = 0;
+	u16 nhm_duration = 0;
 
-	switch (dm->ic_ip_series) {
-	case PHYDM_IC_JGR3:
-		reg1 = R_0x2d6c;
-		reg2 = R_0x2d84;
-		break;
-	case PHYDM_IC_AC:
-		reg1 = R_0x1f80;
-		reg2 = R_0x1f98;
-		break;
-	case PHYDM_IC_N:
-		reg1 = R_0x9d8;
-		reg2 = R_0x9f0;
-		break;
-	default:
-		break;
-	}
+	if (dm->support_ic_type & ODM_IC_11AC_SERIES)
+		nhm_reg1 = R_0x994;
+	#ifdef PHYDM_IC_JGR3_SERIES_SUPPORT
+	else if (dm->support_ic_type & ODM_IC_JGR3_SERIES)
+		nhm_reg1 = R_0x1e60;
+	#endif
+	else
+		nhm_reg1 = R_0x890;
+	PHYDM_DBG(dm, DBG_ENV_MNTR, "[%s]===>\n", __func__);
 
-	if (!(phydm_fahm_check_rdy(dm))) {
-		PHYDM_DBG(dm, DBG_ENV_MNTR, "Get FAHM report Fail\n");
-		phydm_fahm_racing_release(dm);
+	if ((dm->support_ic_type & ODM_IC_11N_SERIES) ||
+	    (dm->support_ic_type & ODM_IC_11AC_SERIES) ||
+	    (dm->support_ic_type & ODM_RTL8198F) ||
+	    (dm->support_ic_type & ODM_RTL8814B))
+		pdm_set_reg(dm, nhm_reg1, BIT(1), 0);
+
+	if (!(phydm_nhm_check_rdy(dm))) {
+		PHYDM_DBG(dm, DBG_ENV_MNTR, "Get NHM report Fail\n");
+		phydm_nhm_racing_release(dm);
 		return false;
 	}
 
-	/*@Get FAHM Denominator*/
-	denom = (u16)odm_get_bb_reg(dm, reg2, MASKLWORD);
+	if (dm->support_ic_type & ODM_IC_11AC_SERIES) {
+		value32 = odm_read_4byte(dm, R_0xfa8);
+		value32 = odm_convert_to_le32(value32);
+		odm_move_memory(dm, &ccx->nhm_result[0], &value32, 4);
 
-	if (ccx->fahm_period >= 65530)
-		PHYDM_DBG(dm, DBG_ENV_MNTR,
-			  "FAHM denominator = %d, valid: %d percent\n", denom,
-			  (denom * 100) >> 16);
+		value32 = odm_read_4byte(dm, R_0xfac);
+		value32 = odm_convert_to_le32(value32);
+		odm_move_memory(dm, &ccx->nhm_result[4], &value32, 4);
 
-	/*Get FAHM numerator and sum all fahm_result*/
-	for (i = 0; i < 6; i++) {
-		value32 = odm_get_bb_reg(dm, reg1 + (i << 2), MASKDWORD);
-		ccx->fahm_result[i * 2] = (u16)(value32 & MASKLWORD);
-		ccx->fahm_result[i * 2 + 1] = (u16)((value32 & MASKHWORD) >> 16);
-		fahm_rpt_sum_tmp = (u32)(fahm_rpt_sum_tmp +
-					 ccx->fahm_result[i * 2] +
-					 ccx->fahm_result[i * 2 + 1]);
+		value32 = odm_read_4byte(dm, R_0xfb0);
+		value32 = odm_convert_to_le32(value32);
+		odm_move_memory(dm, &ccx->nhm_result[8], &value32, 4);
+
+		/*@Get NHM duration*/
+		value32 = odm_read_4byte(dm, R_0xfb4);
+		nhm_duration = (u16)(value32 & MASKLWORD);
+	#ifdef PHYDM_IC_JGR3_SERIES_SUPPORT
+	} else if (dm->support_ic_type & ODM_IC_JGR3_SERIES) {
+		value32 = odm_read_4byte(dm, R_0x2d40);
+		value32 = odm_convert_to_le32(value32);
+		odm_move_memory(dm, &ccx->nhm_result[0], &value32, 4);
+
+		value32 = odm_read_4byte(dm, R_0x2d44);
+		value32 = odm_convert_to_le32(value32);
+		odm_move_memory(dm, &ccx->nhm_result[4], &value32, 4);
+
+		value32 = odm_read_4byte(dm, R_0x2d48);
+		value32 = odm_convert_to_le32(value32);
+		odm_move_memory(dm, &ccx->nhm_result[8], &value32, 4);
+
+		/*@Get NHM duration*/
+		value32 = odm_read_4byte(dm, R_0x2d4c);
+		nhm_duration = (u16)(value32 & MASKLWORD);
+	#endif
+	} else {
+		value32 = odm_read_4byte(dm, R_0x8d8);
+		value32 = odm_convert_to_le32(value32);
+		odm_move_memory(dm, &ccx->nhm_result[0], &value32, 4);
+
+		value32 = odm_read_4byte(dm, R_0x8dc);
+		value32 = odm_convert_to_le32(value32);
+		odm_move_memory(dm, &ccx->nhm_result[4], &value32, 4);
+
+		value32 = odm_read_4byte(dm, R_0x8d0);
+
+		ccx->nhm_result[8] = (u8)((value32 & MASKBYTE2) >> 16);
+		ccx->nhm_result[9] = (u8)((value32 & MASKBYTE3) >> 24);
+
+		value32 = odm_read_4byte(dm, R_0x8d4);
+
+		ccx->nhm_result[10] = (u8)((value32 & MASKBYTE2) >> 16);
+		ccx->nhm_result[11] = (u8)((value32 & MASKBYTE3) >> 24);
+
+		/*@Get NHM duration*/
+		nhm_duration = (u16)(value32 & MASKLWORD);
 	}
+	ccx->nhm_duration = nhm_duration;
+
+	/* sum all nhm_result */
+	if (ccx->nhm_period >= 65530)
+		PHYDM_DBG(dm, DBG_ENV_MNTR,
+			  "NHM valid time = %d, valid: %d percent\n",
+			  nhm_duration, (nhm_duration * 100) >> 16);
+
+	for (i = 0; i < NHM_RPT_NUM; i++)
+		nhm_rpt_sum_tmp = (u16)(nhm_rpt_sum_tmp + ccx->nhm_result[i]);
 
-	ccx->fahm_rpt_sum = (u16)fahm_rpt_sum_tmp;
+	ccx->nhm_rpt_sum = (u8)nhm_rpt_sum_tmp;
 
 	PHYDM_DBG(dm, DBG_ENV_MNTR,
-		  "FAHM_Rpt[%d](H->L)[%d %d %d %d %d %d %d %d %d %d %d %d]\n",
-		  ccx->fahm_rpt_stamp, ccx->fahm_result[11],
-		  ccx->fahm_result[10], ccx->fahm_result[9],
-		  ccx->fahm_result[8], ccx->fahm_result[7], ccx->fahm_result[6],
-		  ccx->fahm_result[5], ccx->fahm_result[4], ccx->fahm_result[3],
-		  ccx->fahm_result[2], ccx->fahm_result[1],
-		  ccx->fahm_result[0]);
+		  "NHM_Rpt[%d](H->L)[%d %d %d %d %d %d %d %d %d %d %d %d]\n",
+		  ccx->nhm_rpt_stamp, ccx->nhm_result[11], ccx->nhm_result[10],
+		  ccx->nhm_result[9], ccx->nhm_result[8], ccx->nhm_result[7],
+		  ccx->nhm_result[6], ccx->nhm_result[5], ccx->nhm_result[4],
+		  ccx->nhm_result[3], ccx->nhm_result[2], ccx->nhm_result[1],
+		  ccx->nhm_result[0]);
 
-	phydm_fahm_racing_release(dm);
+	phydm_nhm_racing_release(dm);
 
-	if (fahm_rpt_sum_tmp > 0xffff) {
+	if (nhm_rpt_sum_tmp > 255) {
 		PHYDM_DBG(dm, DBG_ENV_MNTR,
-			  "[Warning] Invalid FAHM RPT, total=%d\n",
-			  fahm_rpt_sum_tmp);
+			  "[Warning] Invalid NHM RPT, total=%d\n",
+			  nhm_rpt_sum_tmp);
 		return false;
 	}
 
 	return true;
 }
 
-void phydm_fahm_set_th_reg(void *dm_void)
+void phydm_nhm_set_th_reg(void *dm_void)
 {
 	struct dm_struct *dm = (struct dm_struct *)dm_void;
 	struct ccx_info *ccx = &dm->dm_ccx_info;
+	u32 reg1 = 0, reg2 = 0, reg3 = 0, reg4 = 0, reg4_bit = 0;
 	u32 val = 0;
 
-	/*Set FAHM threshold*/ /*Unit: PWdB U(8,1)*/
-	switch (dm->ic_ip_series) {
-	case PHYDM_IC_JGR3:
-		val = BYTE_2_DWORD(ccx->fahm_th[3], ccx->fahm_th[2],
-				   ccx->fahm_th[1], ccx->fahm_th[0]);
-		odm_set_bb_reg(dm, R_0x1e50, MASKDWORD, val);
-		val = BYTE_2_DWORD(ccx->fahm_th[7], ccx->fahm_th[6],
-				   ccx->fahm_th[5], ccx->fahm_th[4]);
-		odm_set_bb_reg(dm, R_0x1e54, MASKDWORD, val);
-		val = BYTE_2_DWORD(0, ccx->fahm_th[10], ccx->fahm_th[9],
-				   ccx->fahm_th[8]);
-		odm_set_bb_reg(dm, R_0x1e58, 0xffffff, val);
-		break;
-	case PHYDM_IC_AC:
-		val = BYTE_2_DWORD(0, ccx->fahm_th[2], ccx->fahm_th[1],
-				   ccx->fahm_th[0]);
-		odm_set_bb_reg(dm, R_0x1c38, 0xffffff00, val);
-		val = BYTE_2_DWORD(0, ccx->fahm_th[5], ccx->fahm_th[4],
-				   ccx->fahm_th[3]);
-		odm_set_bb_reg(dm, R_0x1c78, 0xffffff00, val);
-		val = BYTE_2_DWORD(0, 0, ccx->fahm_th[7], ccx->fahm_th[6]);
-		odm_set_bb_reg(dm, R_0x1c7c, 0xffff0000, val);
-		val = BYTE_2_DWORD(0, ccx->fahm_th[10], ccx->fahm_th[9],
-				   ccx->fahm_th[8]);
-		odm_set_bb_reg(dm, R_0x1cb8, 0xffffff00, val);
-		break;
-	case PHYDM_IC_N:
-		val = BYTE_2_DWORD(ccx->fahm_th[3], ccx->fahm_th[2],
-				   ccx->fahm_th[1], ccx->fahm_th[0]);
-		odm_set_bb_reg(dm, R_0x970, MASKDWORD, val);
-		val = BYTE_2_DWORD(ccx->fahm_th[7], ccx->fahm_th[6],
-				   ccx->fahm_th[5], ccx->fahm_th[4]);
-		odm_set_bb_reg(dm, R_0x974, MASKDWORD, val);
-		val = BYTE_2_DWORD(0, ccx->fahm_th[10], ccx->fahm_th[9],
-				   ccx->fahm_th[8]);
-		odm_set_bb_reg(dm, R_0x978, 0xffffff, val);
-		break;
-	default:
-		break;
+	PHYDM_DBG(dm, DBG_ENV_MNTR, "[%s]===>\n", __func__);
+
+	if (dm->support_ic_type & ODM_IC_11AC_SERIES) {
+		reg1 = R_0x994;
+		reg2 = R_0x998;
+		reg3 = R_0x99c;
+		reg4 = R_0x9a0;
+		reg4_bit = MASKBYTE0;
+	#ifdef PHYDM_IC_JGR3_SERIES_SUPPORT
+	} else if (dm->support_ic_type & ODM_IC_JGR3_SERIES) {
+		reg1 = R_0x1e60;
+		reg2 = R_0x1e44;
+		reg3 = R_0x1e48;
+		reg4 = R_0x1e5c;
+		reg4_bit = MASKBYTE2;
+	#endif
+	} else {
+		reg1 = R_0x890;
+		reg2 = R_0x898;
+		reg3 = R_0x89c;
+		reg4 = R_0xe28;
+		reg4_bit = MASKBYTE0;
 	}
 
+	/*Set NHM threshold*/ /*Unit: PWdB U(8,1)*/
+	val = BYTE_2_DWORD(ccx->nhm_th[3], ccx->nhm_th[2],
+			   ccx->nhm_th[1], ccx->nhm_th[0]);
+	pdm_set_reg(dm, reg2, MASKDWORD, val);
+	val = BYTE_2_DWORD(ccx->nhm_th[7], ccx->nhm_th[6],
+			   ccx->nhm_th[5], ccx->nhm_th[4]);
+	pdm_set_reg(dm, reg3, MASKDWORD, val);
+	pdm_set_reg(dm, reg4, reg4_bit, ccx->nhm_th[8]);
+	val = BYTE_2_DWORD(0, 0, ccx->nhm_th[10], ccx->nhm_th[9]);
+	pdm_set_reg(dm, reg1, 0xffff0000, val);
+
 	PHYDM_DBG(dm, DBG_ENV_MNTR,
-		  "Update FAHM_th[H->L]=[%d %d %d %d %d %d %d %d %d %d %d]\n",
-		  ccx->fahm_th[10], ccx->fahm_th[9], ccx->fahm_th[8],
-		  ccx->fahm_th[7], ccx->fahm_th[6], ccx->fahm_th[5],
-		  ccx->fahm_th[4], ccx->fahm_th[3], ccx->fahm_th[2],
-		  ccx->fahm_th[1], ccx->fahm_th[0]);
+		  "Update NHM_th[H->L]=[%d %d %d %d %d %d %d %d %d %d %d]\n",
+		  ccx->nhm_th[10], ccx->nhm_th[9], ccx->nhm_th[8],
+		  ccx->nhm_th[7], ccx->nhm_th[6], ccx->nhm_th[5],
+		  ccx->nhm_th[4], ccx->nhm_th[3], ccx->nhm_th[2],
+		  ccx->nhm_th[1], ccx->nhm_th[0]);
 }
 
 boolean
-phydm_fahm_th_update_chk(void *dm_void, enum fahm_application fahm_app,
-			 u8 *fahm_th, u32 *igi_new, boolean en_1db_mode,
-			 u8 fahm_th0_manual)
+phydm_nhm_th_update_chk(void *dm_void, enum nhm_application nhm_app, u8 *nhm_th,
+			u32 *igi_new, boolean en_1db_mode, u8 nhm_th0_manual)
 {
 	struct dm_struct *dm = (struct dm_struct *)dm_void;
 	struct ccx_info *ccx = &dm->dm_ccx_info;
 	boolean is_update = false;
 	u8 igi_curr = phydm_get_igi(dm, BB_PATH_A);
+	u8 nhm_igi_th_11k_low[NHM_TH_NUM] = {0x12, 0x15, 0x18, 0x1b, 0x1e,
+					     0x23, 0x28, 0x2c, 0x78,
+					     0x78, 0x78};
+	u8 nhm_igi_th_11k_high[NHM_TH_NUM] = {0x1e, 0x23, 0x28, 0x2d, 0x32,
+					      0x37, 0x78, 0x78, 0x78, 0x78,
+					      0x78};
+	u8 nhm_igi_th_xbox[NHM_TH_NUM] = {0x1a, 0x2c, 0x2e, 0x30, 0x32, 0x34,
+					  0x36, 0x38, 0x3a, 0x3c, 0x3d};
+	u8 nhm_igi_th_11k[NHM_TH_NUM] = {0x12, 0x15, 0x18, 0x1b, 0x1e, 0x23,
+					  0x28, 0x2d, 0x32, 0x37, 0x3c};
+	/*11k_dbm : {-92, -89, -86, -83, -80, -75, -70, -65, -60, -55, -50};*/
+	/*11k_gain_idx : {18, 21, 24, 27, 30, 35, 40, 45, 50, 55, 60};*/
+
 	u8 i = 0;
 	u8 th_tmp = igi_curr - CCA_CAP;
 	u8 th_step = 2;
 
-	PHYDM_DBG(dm, DBG_ENV_MNTR, "fahm_th_update_chk : App=%d, fahm_igi=0x%x, igi_curr=0x%x\n",
-		  fahm_app, ccx->fahm_igi, igi_curr);
+	PHYDM_DBG(dm, DBG_ENV_MNTR, "[%s]===>\n", __func__);
+	PHYDM_DBG(dm, DBG_ENV_MNTR, "App=%d, nhm_igi=0x%x, igi_curr=0x%x\n",
+		  nhm_app, ccx->nhm_igi, igi_curr);
 
 	if (igi_curr < 0x10) /* Protect for invalid IGI*/
 		return false;
 
-	switch (fahm_app) {
-	case FAHM_BACKGROUND: /*Get IGI from driver parameter(cur_ig_value)*/
-		if (ccx->fahm_igi != igi_curr || ccx->fahm_app != fahm_app) {
+	switch (nhm_app) {
+	case NHM_BACKGROUND: /* @Get IGI form driver parameter(cur_ig_value)*/
+		if (ccx->nhm_igi != igi_curr || ccx->nhm_app != nhm_app) {
 			is_update = true;
 			*igi_new = (u32)igi_curr;
 
-			fahm_th[0] = (u8)IGI_2_NHM_TH(th_tmp);
+			#ifdef NHM_DYM_PW_TH_SUPPORT
+			if (ccx->nhm_dym_pw_th_en) {
+				th_tmp = MAX_2(igi_curr - DYM_PWTH_CCA_CAP, 0);
+				th_step = 3;
+			}
+			#endif
+
+			nhm_th[0] = (u8)IGI_2_NHM_TH(th_tmp);
 
 			for (i = 1; i <= 10; i++)
-				fahm_th[i] = fahm_th[0] +
+				nhm_th[i] = nhm_th[0] +
 					    IGI_2_NHM_TH(th_step * i);
 
 		}
 		break;
-	case FAHM_ACS:
-		if (ccx->fahm_igi != igi_curr || ccx->fahm_app != fahm_app) {
+
+	case NHM_ACS:
+		if (ccx->nhm_igi != igi_curr || ccx->nhm_app != nhm_app) {
 			is_update = true;
 			*igi_new = (u32)igi_curr;
-			fahm_th[0] = (u8)IGI_2_NHM_TH(igi_curr - CCA_CAP);
-			for (i = 1; i <= 10; i++)
-				fahm_th[i] = fahm_th[0] + IGI_2_NHM_TH(2 * i);
+			for (i = 0; i < NHM_TH_NUM; i++)
+				nhm_th[i] = IGI_2_NHM_TH(nhm_igi_th_11k[i]);
 		}
 		break;
-	case FAHM_DBG: /*Get IGI from register*/
-		igi_curr = phydm_get_igi(dm, BB_PATH_A);
-		if (ccx->fahm_igi != igi_curr || ccx->fahm_app != fahm_app) {
-			is_update = true;
-			*igi_new = (u32)igi_curr;
-			if (en_1db_mode) {
-				fahm_th[0] = (u8)IGI_2_NHM_TH(fahm_th0_manual +
-							      10);
-				th_step = 1;
-			} else {
-				fahm_th[0] = (u8)IGI_2_NHM_TH(igi_curr -
-							      CCA_CAP);
-			}
 
-			for (i = 1; i <= 10; i++)
-				fahm_th[i] = fahm_th[0] +
-					     IGI_2_NHM_TH(th_step * i);
-		}
+	case IEEE_11K_HIGH:
+		is_update = true;
+		*igi_new = 0x2c;
+		for (i = 0; i < NHM_TH_NUM; i++)
+			nhm_th[i] = IGI_2_NHM_TH(nhm_igi_th_11k_high[i]);
 		break;
-	}
+
+	case IEEE_11K_LOW:
+		is_update = true;
+		*igi_new = 0x20;
+		for (i = 0; i < NHM_TH_NUM; i++)
+			nhm_th[i] = IGI_2_NHM_TH(nhm_igi_th_11k_low[i]);
+		break;
+
+	case INTEL_XBOX:
+		is_update = true;
+		*igi_new = 0x36;
+		for (i = 0; i < NHM_TH_NUM; i++)
+			nhm_th[i] = IGI_2_NHM_TH(nhm_igi_th_xbox[i]);
+		break;
+
+	case NHM_DBG: /*@Get IGI form register*/
+		igi_curr = phydm_get_igi(dm, BB_PATH_A);
+		if (ccx->nhm_igi != igi_curr || ccx->nhm_app != nhm_app) {
+			is_update = true;
+			*igi_new = (u32)igi_curr;
+			if (en_1db_mode) {
+				nhm_th[0] = (u8)IGI_2_NHM_TH(nhm_th0_manual +
+							     10);
+				th_step = 1;
+			} else {
+				nhm_th[0] = (u8)IGI_2_NHM_TH(igi_curr -
+							     CCA_CAP);
+			}
+
+			for (i = 1; i <= 10; i++)
+				nhm_th[i] = nhm_th[0] + IGI_2_NHM_TH(th_step *
+					    i);
+		}
+		break;
+	}
 
 	if (is_update) {
-		PHYDM_DBG(dm, DBG_ENV_MNTR, "[Update FAHM_TH] igi_RSSI=%d\n",
+		PHYDM_DBG(dm, DBG_ENV_MNTR, "[Update NHM_TH] igi_RSSI=%d\n",
 			  IGI_2_RSSI(*igi_new));
 
-		for (i = 0; i < NHM_TH_NUM; i++)
-			PHYDM_DBG(dm, DBG_ENV_MNTR, "FAHM_th[%d](RSSI) = %d\n",
-				  i, NTH_TH_2_RSSI(fahm_th[i]));
+		for (i = 0; i < NHM_TH_NUM; i++) {
+			PHYDM_DBG(dm, DBG_ENV_MNTR, "NHM_th[%d](RSSI) = %d\n",
+				  i, NTH_TH_2_RSSI(nhm_th[i]));
+		}
 	} else {
-		PHYDM_DBG(dm, DBG_ENV_MNTR, "No need to update FAHM_TH\n");
+		PHYDM_DBG(dm, DBG_ENV_MNTR, "No need to update NHM_TH\n");
 	}
 	return is_update;
 }
 
-void phydm_fahm_set(void *dm_void, enum fahm_opt_fa inclu_fa,
-		    enum fahm_opt_crc32_ok inclu_crc32_ok,
-		    enum fahm_opt_crc32_err inclu_crc32_err,
-		    enum fahm_application app, u16 period, boolean en_1db_mode,
-		    u8 th0_manual)
+void phydm_nhm_set(void *dm_void, enum nhm_option_txon_all include_tx,
+		   enum nhm_option_cca_all include_cca,
+		   enum nhm_divider_opt_all divi_opt,
+		   enum nhm_application nhm_app, u16 period,
+		   boolean en_1db_mode, u8 nhm_th0_manual)
 {
 	struct dm_struct *dm = (struct dm_struct *)dm_void;
 	struct ccx_info *ccx = &dm->dm_ccx_info;
-	u8 fahm_th[NHM_TH_NUM] = {0};
+	u8 nhm_th[NHM_TH_NUM] = {0};
 	u32 igi = 0x20;
-	u32 reg1 = 0, reg2 = 0, reg3 = 0;
+	u32 reg1 = 0, reg2 = 0;
 	u32 val_tmp = 0;
 
+	PHYDM_DBG(dm, DBG_ENV_MNTR, "[%s]===>\n", __func__);
+
 	PHYDM_DBG(dm, DBG_ENV_MNTR,
-		  "incld{fa, crc32_ok, crc32_err}={%d, %d, %d}, period=%d\n",
-		  inclu_fa, inclu_crc32_ok, inclu_crc32_err, period);
+		  "incld{tx, cca}={%d, %d}, divi_opt=%d, period=%d\n",
+		  include_tx, include_cca, divi_opt, period);
 
-	switch (dm->ic_ip_series) {
-	case PHYDM_IC_JGR3:
-		reg1 = R_0x1e60;
-		reg2 = R_0x1e58;
-		reg3 = R_0x1e5c;
-		break;
-	case PHYDM_IC_AC:
+	if (dm->support_ic_type & ODM_IC_11AC_SERIES) {
 		reg1 = R_0x994;
-		reg2 = R_0x1cf8;
-		break;
-	case PHYDM_IC_N:
+		reg2 = R_0x990;
+	#ifdef PHYDM_IC_JGR3_SERIES_SUPPORT
+	} else if (dm->support_ic_type & ODM_IC_JGR3_SERIES) {
+		reg1 = R_0x1e60;
+		reg2 = R_0x1e40;
+	#endif
+	} else {
 		reg1 = R_0x890;
-		reg2 = R_0x978;
-		reg3 = R_0x97c;
-		break;
-	default:
-		 break;
-	}
-
-	/*Set enable fa, ignore crc32 ok, ignore crc32 err*/
-	if (inclu_fa != ccx->fahm_incld_fa ||
-	    inclu_crc32_ok != ccx->fahm_incld_crc32_ok ||
-	    inclu_crc32_err != ccx->fahm_incld_crc32_err) {
-		val_tmp = (u32)((inclu_crc32_err << 2) | (inclu_crc32_ok << 1) |
-			  inclu_fa);
-		odm_set_bb_reg(dm, reg1, 0xe0, val_tmp);
-		ccx->fahm_incld_fa = inclu_fa;
-		ccx->fahm_incld_crc32_ok = inclu_crc32_ok;
-		ccx->fahm_incld_crc32_err = inclu_crc32_err;
+		reg2 = R_0x894;
 	}
 
-	/*Set FAHM period*/
-	if (period != ccx->fahm_period) {
-		switch (dm->ic_ip_series) {
-		case PHYDM_IC_AC:
-			odm_set_bb_reg(dm, reg2, 0xffff00, period);
-			break;
-		case PHYDM_IC_JGR3:
-		case PHYDM_IC_N:
-			odm_set_bb_reg(dm, reg2, 0xff000000, (period & 0xff));
-			odm_set_bb_reg(dm, reg3, 0xff, (period & 0xff00) >> 8);
-			break;
-		default:
-			break;
+	/*Set disable_ignore_cca, disable_ignore_txon, ccx_en*/
+	if (include_tx != ccx->nhm_include_txon ||
+	    include_cca != ccx->nhm_include_cca ||
+	    divi_opt != ccx->nhm_divider_opt) {
+	    /* some old ic is not supported on NHM divider option */
+		if (dm->support_ic_type & (ODM_RTL8188E | ODM_RTL8723B |
+		    ODM_RTL8195A | ODM_RTL8192E)) {
+			val_tmp = (u32)((include_tx << 2) |
+				  (include_cca << 1) | 1);
+			pdm_set_reg(dm, reg1, 0x700, val_tmp);
+		} else {
+			val_tmp = (u32)BIT_2_BYTE(divi_opt, include_tx,
+				  include_cca, 1);
+			pdm_set_reg(dm, reg1, 0xf00, val_tmp);
 		}
+		ccx->nhm_include_txon = include_tx;
+		ccx->nhm_include_cca = include_cca;
+		ccx->nhm_divider_opt = divi_opt;
+	}
 
+	/*Set NHM period*/
+	if (period != ccx->nhm_period) {
+		pdm_set_reg(dm, reg2, MASKHWORD, period);
 		PHYDM_DBG(dm, DBG_ENV_MNTR,
-			  "Update FAHM period ((%d)) -> ((%d))\n",
-			  ccx->fahm_period, period);
+			  "Update NHM period ((%d)) -> ((%d))\n",
+			  ccx->nhm_period, period);
 
-		ccx->fahm_period = period;
+		ccx->nhm_period = period;
 	}
 
-	/*Set FAHM threshold*/
-	if (phydm_fahm_th_update_chk(dm, app, &fahm_th[0], &igi, en_1db_mode,
-				     th0_manual)) {
+	/*Set NHM threshold*/
+	if (phydm_nhm_th_update_chk(dm, nhm_app, &nhm_th[0], &igi,
+				    en_1db_mode, nhm_th0_manual)) {
 		/*Pause IGI*/
-		if (app == FAHM_BACKGROUND || app == FAHM_ACS) {
+		if (nhm_app == NHM_BACKGROUND || nhm_app == NHM_ACS) {
 			PHYDM_DBG(dm, DBG_ENV_MNTR, "DIG Free Run\n");
 		} else if (phydm_pause_func(dm, F00_DIG, PHYDM_PAUSE,
 					    PHYDM_PAUSE_LEVEL_1, 1, &igi)
@@ -510,1954 +683,1889 @@ void phydm_fahm_set(void *dm_void, enum fahm_opt_fa inclu_fa,
 		} else {
 			PHYDM_DBG(dm, DBG_ENV_MNTR, "pause DIG=0x%x\n", igi);
 		}
-		ccx->fahm_app = app;
-		ccx->fahm_igi = (u8)igi;
-		odm_move_memory(dm, &ccx->fahm_th[0], &fahm_th, NHM_TH_NUM);
+		ccx->nhm_app = nhm_app;
+		ccx->nhm_igi = (u8)igi;
+		odm_move_memory(dm, &ccx->nhm_th[0], &nhm_th, NHM_TH_NUM);
 
-		/*Set FAHM th*/
-		phydm_fahm_set_th_reg(dm);
+		/*Set NHM th*/
+		phydm_nhm_set_th_reg(dm);
 	}
 }
 
 boolean
-phydm_fahm_mntr_set(void *dm_void, struct fahm_para_info *para)
+phydm_nhm_mntr_set(void *dm_void, struct nhm_para_info *nhm_para)
 {
 	struct dm_struct *dm = (struct dm_struct *)dm_void;
-	u16 fahm_time = 0; /*unit: 4us*/
+	u16 nhm_time = 0; /*unit: 4us*/
 
 	PHYDM_DBG(dm, DBG_ENV_MNTR, "[%s]===>\n", __func__);
 
-	if (para->mntr_time == 0)
+	if (nhm_para->mntr_time == 0)
 		return false;
 
-	if (para->lv >= FAHM_MAX_NUM) {
-		PHYDM_DBG(dm, DBG_ENV_MNTR, "Wrong LV=%d\n", para->lv);
+	if (nhm_para->nhm_lv >= NHM_MAX_NUM) {
+		PHYDM_DBG(dm, DBG_ENV_MNTR, "Wrong LV=%d\n", nhm_para->nhm_lv);
 		return false;
 	}
 
-	if (phydm_fahm_racing_ctrl(dm, para->lv) == PHYDM_SET_FAIL)
+	if (phydm_nhm_racing_ctrl(dm, nhm_para->nhm_lv) == PHYDM_SET_FAIL)
 		return false;
 
-	if (para->mntr_time >= 262)
-		fahm_time = NHM_PERIOD_MAX;
+	if (nhm_para->mntr_time >= 262)
+		nhm_time = NHM_PERIOD_MAX;
 	else
-		fahm_time = para->mntr_time * MS_TO_4US_RATIO;
+		nhm_time = nhm_para->mntr_time * MS_TO_4US_RATIO;
 
-	phydm_fahm_set(dm, para->incld_fa, para->incld_crc32_ok,
-		       para->incld_crc32_err, para->app, fahm_time,
-		       para->en_1db_mode, para->th0_manual);
+	phydm_nhm_set(dm, nhm_para->incld_txon, nhm_para->incld_cca,
+		      nhm_para->div_opt, nhm_para->nhm_app, nhm_time,
+		      nhm_para->en_1db_mode, nhm_para->nhm_th0_manual);
 
 	return true;
 }
 
-boolean
-phydm_fahm_mntr_chk(void *dm_void, u16 monitor_time /*unit ms*/)
+#ifdef NHM_DYM_PW_TH_SUPPORT
+void
+phydm_nhm_restore_pw_th(void *dm_void)
 {
 	struct dm_struct *dm = (struct dm_struct *)dm_void;
 	struct ccx_info *ccx = &dm->dm_ccx_info;
-	struct fahm_para_info para = {0};
-	boolean fahm_chk_result = false;
-	boolean fahm_polling_result = false;
-	u32 sys_return_time = 0;
+
+	odm_set_bb_reg(dm, R_0x82c, 0x3f, ccx->pw_th_rf20_ori);
+}
+
+void
+phydm_nhm_set_pw_th(void *dm_void, u8 noise, boolean chk_succ)
+{
+	struct dm_struct *dm = (struct dm_struct *)dm_void;
+	struct ccx_info *ccx = &dm->dm_ccx_info;
+	boolean not_update = false;
+	u8 pw_th_rf20_new = 0;
+	u8 pw_th_u_bnd = 0;
+	s8 noise_diff = 0;
+	u8 point_mean = 15;
 
 	PHYDM_DBG(dm, DBG_ENV_MNTR, "[%s]===>\n", __func__);
 
-	if (ccx->fahm_manual_ctrl) {
-		PHYDM_DBG(dm, DBG_ENV_MNTR, "FAHM in manual ctrl\n");
-		return fahm_chk_result;
+	if (*dm->band_width != CHANNEL_WIDTH_20 ||
+	    *dm->band_type == ODM_BAND_5G) {
+		PHYDM_DBG(dm, DBG_ENV_MNTR,  "bandwidth=((%d)), band=((%d))\n",
+			  *dm->band_width, *dm->band_type);
+		phydm_nhm_restore_pw_th(dm);
+		return;
 	}
-	sys_return_time = ccx->fahm_trigger_time + MAX_ENV_MNTR_TIME;
-	if (ccx->fahm_app != FAHM_BACKGROUND &&
-	    (sys_return_time > dm->phydm_sys_up_time)) {
-		PHYDM_DBG(dm, DBG_ENV_MNTR,
-			  "fahm_app=%d, trigger_time %d, sys_time=%d\n",
-			  ccx->fahm_app, ccx->fahm_trigger_time,
-			  dm->phydm_sys_up_time);
 
-		return fahm_chk_result;
-	}
+	if (chk_succ) {
+		noise_diff = noise - (ccx->nhm_igi - 10);
+		pw_th_u_bnd = (u8)(noise_diff + 32 + point_mean);
 
-	/*[FAHM get result & calculate Utility]---------------------------*/
-	fahm_polling_result = phydm_fahm_get_result(dm);
-	if (fahm_polling_result) {
-		PHYDM_DBG(dm, DBG_ENV_MNTR, "Get FAHM_rpt success\n");
-		phydm_fahm_get_utility(dm);
-	}
+		pw_th_u_bnd = MIN_2(pw_th_u_bnd, ccx->nhm_pw_th_max);
 
-	/*[FAHM trigger setting]------------------------------------------*/
-	para.incld_fa = FAHM_INCLUDE_FA;
-	para.incld_crc32_ok = FAHM_EXCLUDE_CRC32_OK;
-	para.incld_crc32_err = FAHM_EXCLUDE_CRC32_ERR;
-	para.app = FAHM_BACKGROUND;
-	para.lv = FAHM_LV_1;
-	para.en_1db_mode = false;
-	para.mntr_time = monitor_time;
+		PHYDM_DBG(dm, DBG_ENV_MNTR,
+			  "noise_diff=((%d)), max=((%d)), pw_th_u_bnd=((%d))\n",
+			  noise_diff, ccx->nhm_pw_th_max, pw_th_u_bnd);
 
-	fahm_chk_result = phydm_fahm_mntr_set(dm, &para);
+		if (pw_th_u_bnd > ccx->pw_th_rf20_cur) {
+			pw_th_rf20_new = ccx->pw_th_rf20_cur + 1;
+		} else if (pw_th_u_bnd < ccx->pw_th_rf20_cur) {
+			if (ccx->pw_th_rf20_cur > ccx->pw_th_rf20_ori)
+				pw_th_rf20_new = ccx->pw_th_rf20_cur - 1;
+			else /*ccx->pw_th_rf20_cur == ccx->pw_th_ori*/
+				not_update = true;
+		} else {/*pw_th_u_bnd == ccx->pw_th_rf20_cur*/
+			not_update = true;
+		}
+	} else {
+		if (ccx->pw_th_rf20_cur > ccx->pw_th_rf20_ori)
+			pw_th_rf20_new = ccx->pw_th_rf20_cur - 1;
+		else /*ccx->pw_th_rf20_cur == ccx->pw_th_ori*/
+			not_update = true;
+	}
 
-	return fahm_chk_result;
+	PHYDM_DBG(dm, DBG_ENV_MNTR, "pw_th_cur=((%d)), pw_th_new=((%d))\n",
+		  ccx->pw_th_rf20_cur, pw_th_rf20_new);
+
+	if (!not_update) {
+		odm_set_bb_reg(dm, R_0x82c, 0x3f, pw_th_rf20_new);
+		ccx->pw_th_rf20_cur = pw_th_rf20_new;
+	}
 }
 
-void phydm_fahm_init(void *dm_void)
+void
+phydm_nhm_dym_pw_th(void *dm_void)
 {
 	struct dm_struct *dm = (struct dm_struct *)dm_void;
 	struct ccx_info *ccx = &dm->dm_ccx_info;
-	u8 denum_sel = 0;
-	u32 reg = 0;
-
-	if (!(dm->support_ic_type & PHYDM_IC_SUPPORT_FAHM))
-		return;
+	u8 i = 0;
+	u8 n_sum = 0;
+	u8 noise = 0;
+	boolean chk_succ = false;
 
 	PHYDM_DBG(dm, DBG_ENV_MNTR, "[%s]===>\n", __func__);
 
-	ccx->fahm_app = FAHM_BACKGROUND;
-	ccx->fahm_igi = 0xff;
+	for (i = 0; i < NHM_RPT_NUM - 3; i++) {
+		n_sum = ccx->nhm_result[i] + ccx->nhm_result[i + 1] +
+			ccx->nhm_result[i + 2] + ccx->nhm_result[i + 3];
+		if (n_sum >= ccx->nhm_sl_pw_th) {
+			PHYDM_DBG(dm, DBG_ENV_MNTR, "Do sl[%d:%d]\n", i, i + 3);
+			chk_succ = true;
+			noise = phydm_nhm_cal_wgt_avg(dm, i, i + 3, n_sum);
+			break;
+		}
+	}
 
-	/*Set FAHM threshold*/
-	ccx->fahm_ongoing = false;
-	ccx->fahm_set_lv = FAHM_RELEASE;
+	if (!chk_succ)
+		PHYDM_DBG(dm, DBG_ENV_MNTR, "SL method failed!\n");
 
-	if (phydm_fahm_th_update_chk(dm, ccx->fahm_app, &ccx->fahm_th[0],
-				    (u32 *)&ccx->fahm_igi, false, 0))
-		phydm_fahm_set_th_reg(dm);
+	phydm_nhm_set_pw_th(dm, noise, chk_succ);
+}
 
-	ccx->fahm_period = 0;
+boolean
+phydm_nhm_dym_pw_th_en(void *dm_void)
+{
+	struct dm_struct *dm = (struct dm_struct *)dm_void;
+	struct ccx_info *ccx = &dm->dm_ccx_info;
+	struct phydm_iot_center	*iot_table = &dm->iot_table;
 
-	ccx->fahm_incld_fa = FAHM_FA_INIT;
-	ccx->fahm_incld_crc32_ok = FAHM_CRC32_OK_INIT;
-	ccx->fahm_incld_crc32_err = FAHM_CRC32_ERR_INIT;
+	if (!(dm->support_ic_type & ODM_RTL8822C))
+		return false;
 
-	ccx->fahm_manual_ctrl = 0;
-	ccx->fahm_rpt_stamp = 0;
+	if (ccx->dym_pwth_manual_ctrl)
+		return true;
 
-	switch (dm->ic_ip_series) {
-	case PHYDM_IC_JGR3:
-		reg = R_0x1e60;
-		break;
-	case PHYDM_IC_AC:
-		reg = R_0x994;
-		break;
-	case PHYDM_IC_N:
-		reg = R_0x890;
-		break;
-	default:
-		break;
+	if (dm->iot_table.phydm_patch_id == 0x100f0401 ||
+	    iot_table->patch_id_100f0401) {
+		return true;
+	} else if (ccx->nhm_dym_pw_th_en) {
+		phydm_nhm_restore_pw_th(dm);
+		return false;
+	} else {
+		return false;
 	}
-
-	/*enable CCK/OFDM CRC32 check*/
-	odm_set_bb_reg(dm, reg, 0x18, 0x3);
-	/*denominator:FA/CRC32_OK/CRC32_ERR*/
-	odm_set_bb_reg(dm, reg, 0x7000, 0x7);
 }
+#endif
 
-void phydm_fahm_dbg(void *dm_void, char input[][16], u32 *_used, char *output,
-		    u32 *_out_len)
+/*Environment Monitor*/
+boolean
+phydm_nhm_mntr_racing_chk(void *dm_void)
 {
 	struct dm_struct *dm = (struct dm_struct *)dm_void;
 	struct ccx_info *ccx = &dm->dm_ccx_info;
-	struct fahm_para_info para = {0};
-	char help[] = "-h";
-	u32 var1[10] = {0};
-	u32 used = *_used;
-	u32 out_len = *_out_len;
-	u16 result_tmp = 0;
-	u8 i = 0;
-
-	if (!(dm->support_ic_type & PHYDM_IC_SUPPORT_FAHM))
-		return;
-
-	PHYDM_SSCANF(input[1], DCMD_DECIMAL, &var1[0]);
-
-	if ((strcmp(input[1], help) == 0)) {
-		PDM_SNPF(out_len, used, output + used, out_len - used,
-			 "FAHM Basic-Trigger 262ms: {1}\n");
-
-		PDM_SNPF(out_len, used, output + used, out_len - used,
-			 "FAHM Adv-Trigger: {2} {Include FA} {Include CRC32 ok} {Include CRC32 Err}\n {App:1 for dbg} {LV:1~4} {0~262ms}, 1dB mode :{en} {t[0](RSSI)}\n");
+	u32 sys_return_time = 0;
 
-		PDM_SNPF(out_len, used, output + used, out_len - used,
-			 "FAHM Get Result: {100}\n");
-	} else if (var1[0] == 100) { /*Get FAHM results*/
-		PDM_SNPF(out_len, used, output + used, out_len - used,
-			 "IGI=0x%x, rpt_stamp=%d\n", ccx->fahm_igi,
-			 ccx->fahm_rpt_stamp);
+	if (ccx->nhm_manual_ctrl) {
+		PHYDM_DBG(dm, DBG_ENV_MNTR, "NHM in manual ctrl\n");
+		return true;
+	}
 
-		if (phydm_fahm_get_result(dm)) {
-			for (i = 0; i < NHM_RPT_NUM; i++) {
-				result_tmp = ccx->fahm_result[i];
-				PDM_SNPF(out_len, used, output + used,
-					 out_len - used,
-					 "fahm_rpt[%d] = %d (%d percent)\n",
-					 i, result_tmp,
-					 (((result_tmp * 100) + 32768) >> 16));
-			}
-			phydm_fahm_get_utility(dm);
+	sys_return_time = ccx->nhm_trigger_time + MAX_ENV_MNTR_TIME;
 
-			PDM_SNPF(out_len, used, output + used, out_len - used,
-				 "fahm_pwr=%d\n", ccx->fahm_pwr);
-		} else {
-			PDM_SNPF(out_len, used, output + used, out_len - used,
-				 "Get FAHM_rpt Fail\n");
-		}
-		ccx->fahm_manual_ctrl = 0;
-	} else { /*FAMH trigger*/
-		ccx->fahm_manual_ctrl = 1;
+	if (ccx->nhm_app != NHM_BACKGROUND &&
+	    (sys_return_time > dm->phydm_sys_up_time)) {
+		PHYDM_DBG(dm, DBG_ENV_MNTR,
+			  "nhm_app=%d, trigger_time %d, sys_time=%d\n",
+			  ccx->nhm_app, ccx->nhm_trigger_time,
+			  dm->phydm_sys_up_time);
 
-		for (i = 1; i < 9; i++)
-			PHYDM_SSCANF(input[i + 1], DCMD_DECIMAL, &var1[i]);
+		return true;
+	}
 
-		if (var1[0] == 1) {
-			para.incld_fa = FAHM_INCLUDE_FA;
-			para.incld_crc32_ok = FAHM_EXCLUDE_CRC32_OK;
-			para.incld_crc32_err = FAHM_EXCLUDE_CRC32_ERR;
-			para.app = FAHM_DBG;
-			para.lv = FAHM_LV_4;
-			para.mntr_time = 262;
-			para.en_1db_mode = false;
-			para.th0_manual = 0;
-		} else {
-			para.incld_fa = (enum fahm_opt_fa)var1[1];
-			para.incld_crc32_ok = (enum fahm_opt_crc32_ok)var1[2];
-			para.incld_crc32_err = (enum fahm_opt_crc32_err)var1[3];
-			para.app = (enum fahm_application)var1[4];
-			para.lv = (enum phydm_fahm_level)var1[5];
-			para.mntr_time = (u16)var1[6];
-			para.en_1db_mode = (boolean)var1[7];
-			para.th0_manual = (u8)var1[8];
-		}
+	return false;
+}
 
-		PDM_SNPF(out_len, used, output + used, out_len - used,
-			 "fa=%d, crc32_ok=%d, crc32_err=%d, app=%d, lv=%d, time=%d ms\n",
-			 para.incld_fa, para.incld_crc32_ok,
-			 para.incld_crc32_err, para.app, para.lv,
-			 para.mntr_time);
+boolean
+phydm_nhm_mntr_chk(void *dm_void, u16 monitor_time /*unit ms*/)
+{
+	struct dm_struct *dm = (struct dm_struct *)dm_void;
+	struct ccx_info *ccx = &dm->dm_ccx_info;
+	struct nhm_para_info nhm_para = {0};
+	boolean nhm_chk_result = false;
 
-		PDM_SNPF(out_len, used, output + used, out_len - used,
-			 "en_1db_mode=%d, th0(for 1db mode)=%d\n",
-			 para.en_1db_mode, para.th0_manual);
+	PHYDM_DBG(dm, DBG_ENV_MNTR, "[%s]===>\n", __func__);
 
-		if (phydm_fahm_mntr_set(dm, &para))
-			phydm_fahm_trigger(dm);
+	if (phydm_nhm_mntr_racing_chk(dm))
+		return nhm_chk_result;
 
-		PDM_SNPF(out_len, used, output + used, out_len - used,
-			 "IGI=0x%x, rpt_stamp=%d\n", ccx->fahm_igi,
-			 ccx->fahm_rpt_stamp);
+	/*[NHM trigger setting]------------------------------------------*/
+	nhm_para.incld_txon = NHM_EXCLUDE_TXON;
+	nhm_para.incld_cca = NHM_EXCLUDE_CCA;
+	nhm_para.div_opt = NHM_CNT_ALL;
+	nhm_para.nhm_app = NHM_BACKGROUND;
+	nhm_para.nhm_lv = NHM_LV_1;
+	nhm_para.en_1db_mode = false;
+	nhm_para.mntr_time = monitor_time;
 
-		for (i = 0; i < NHM_TH_NUM; i++)
-			PDM_SNPF(out_len, used, output + used, out_len - used,
-				 "FAHM_th[%d] RSSI = %d\n", i,
-				 NTH_TH_2_RSSI(ccx->fahm_th[i]));
+	#ifdef NHM_DYM_PW_TH_SUPPORT
+	if (ccx->nhm_dym_pw_th_en) {
+		nhm_para.div_opt = NHM_VALID;
+		nhm_para.mntr_time = monitor_time >> ccx->nhm_period_decre;
 	}
+	#endif
 
-	*_used = used;
-	*_out_len = out_len;
+	nhm_chk_result = phydm_nhm_mntr_set(dm, &nhm_para);
+
+	return nhm_chk_result;
 }
 
-void phydm_fahm_watchdog(void *dm_void)
+boolean
+phydm_nhm_mntr_result(void *dm_void)
 {
 	struct dm_struct *dm = (struct dm_struct *)dm_void;
 	struct ccx_info *ccx = &dm->dm_ccx_info;
-	boolean fahm_chk_ok = false;
-
-	if (!(dm->support_ic_type & PHYDM_IC_SUPPORT_FAHM))
-		return;
+	boolean nhm_chk_result = false;
 
-	fahm_chk_ok = phydm_fahm_mntr_chk(dm, 262);
+	PHYDM_DBG(dm, DBG_ENV_MNTR, "[%s]===>\n", __func__);
 
-	if (fahm_chk_ok)
-		phydm_fahm_trigger(dm);
-}
+	if (phydm_nhm_mntr_racing_chk(dm))
+		return nhm_chk_result;
 
+	/*[NHM get result & calculate Utility]---------------------------*/
+	if (phydm_nhm_get_result(dm)) {
+		PHYDM_DBG(dm, DBG_ENV_MNTR, "Get NHM_rpt success\n");
+		phydm_nhm_get_utility(dm);
+		nhm_chk_result = true;
+	}
 
-#endif /*#ifdef FAHM_SUPPORT*/
+	#ifdef NHM_DYM_PW_TH_SUPPORT
+	ccx->nhm_dym_pw_th_en = phydm_nhm_dym_pw_th_en(dm);
+	if (ccx->nhm_dym_pw_th_en) {
+		if (nhm_chk_result)
+			phydm_nhm_dym_pw_th(dm);
+		else
+			phydm_nhm_set_pw_th(dm, 0x0, false);
+	}
+	#endif
 
-#ifdef NHM_SUPPORT
+	return nhm_chk_result;
+}
 
-void phydm_nhm_racing_release(void *dm_void)
+void phydm_nhm_init(void *dm_void)
 {
 	struct dm_struct *dm = (struct dm_struct *)dm_void;
 	struct ccx_info *ccx = &dm->dm_ccx_info;
-	u32 value32 = 0;
 
 	PHYDM_DBG(dm, DBG_ENV_MNTR, "[%s]===>\n", __func__);
-	PHYDM_DBG(dm, DBG_ENV_MNTR, "lv:(%d)->(0)\n", ccx->nhm_set_lv);
+	PHYDM_DBG(dm, DBG_ENV_MNTR, "cur_igi=0x%x\n",
+		  dm->dm_dig_table.cur_ig_value);
 
+	ccx->nhm_app = NHM_BACKGROUND;
+	ccx->nhm_igi = 0xff;
+
+	/*Set NHM threshold*/
 	ccx->nhm_ongoing = false;
 	ccx->nhm_set_lv = NHM_RELEASE;
 
-	if (!(ccx->nhm_app == NHM_BACKGROUND || ccx->nhm_app == NHM_ACS)) {
-		phydm_pause_func(dm, F00_DIG, PHYDM_RESUME,
-				 PHYDM_PAUSE_LEVEL_1, 1, &value32);
-	}
-
-	ccx->nhm_app = NHM_BACKGROUND;
-}
+	if (phydm_nhm_th_update_chk(dm, ccx->nhm_app, &ccx->nhm_th[0],
+				    (u32 *)&ccx->nhm_igi, false, 0))
+		phydm_nhm_set_th_reg(dm);
 
-u8 phydm_nhm_racing_ctrl(void *dm_void, enum phydm_nhm_level nhm_lv)
-{
-	struct dm_struct *dm = (struct dm_struct *)dm_void;
-	struct ccx_info *ccx = &dm->dm_ccx_info;
-	u8 set_result = PHYDM_SET_SUCCESS;
-	/*@acquire to control NHM API*/
+	ccx->nhm_period = 0;
 
-	PHYDM_DBG(dm, DBG_ENV_MNTR, "nhm_ongoing=%d, lv:(%d)->(%d)\n",
-		  ccx->nhm_ongoing, ccx->nhm_set_lv, nhm_lv);
-	if (ccx->nhm_ongoing) {
-		if (nhm_lv <= ccx->nhm_set_lv) {
-			set_result = PHYDM_SET_FAIL;
-		} else {
-			phydm_ccx_hw_restart(dm);
-			ccx->nhm_ongoing = false;
-		}
-	}
+	ccx->nhm_include_cca = NHM_CCA_INIT;
+	ccx->nhm_include_txon = NHM_TXON_INIT;
+	ccx->nhm_divider_opt = NHM_CNT_INIT;
 
-	if (set_result)
-		ccx->nhm_set_lv = nhm_lv;
+	ccx->nhm_manual_ctrl = 0;
+	ccx->nhm_rpt_stamp = 0;
 
-	PHYDM_DBG(dm, DBG_ENV_MNTR, "nhm racing success=%d\n", set_result);
-	return set_result;
+	#ifdef NHM_DYM_PW_TH_SUPPORT
+	if (dm->support_ic_type & ODM_RTL8822C) {
+		ccx->nhm_dym_pw_th_en = false;
+		ccx->pw_th_rf20_ori = (u8)odm_get_bb_reg(dm, R_0x82c, 0x3f);
+		ccx->pw_th_rf20_cur = ccx->pw_th_rf20_ori;
+		ccx->nhm_pw_th_max = 63;
+		ccx->nhm_sl_pw_th = 100; /*39%*/
+		ccx->nhm_period_decre = 1;
+		ccx->dym_pwth_manual_ctrl = false;
+	}
+	#endif
 }
 
-void phydm_nhm_trigger(void *dm_void)
-{
-	struct dm_struct *dm = (struct dm_struct *)dm_void;
-	struct ccx_info *ccx = &dm->dm_ccx_info;
-	u32 nhm_reg1 = 0;
-
-	if (dm->support_ic_type & ODM_IC_11AC_SERIES)
-		nhm_reg1 = R_0x994;
-	#ifdef PHYDM_IC_JGR3_SERIES_SUPPORT
-	else if (dm->support_ic_type & ODM_IC_JGR3_SERIES)
-		nhm_reg1 = R_0x1e60;
-	#endif
-	else
-		nhm_reg1 = R_0x890;
-	PHYDM_DBG(dm, DBG_ENV_MNTR, "[%s]===>\n", __func__);
-
-	/* @Trigger NHM*/
-	pdm_set_reg(dm, nhm_reg1, BIT(1), 0);
-	pdm_set_reg(dm, nhm_reg1, BIT(1), 1);
-	ccx->nhm_trigger_time = dm->phydm_sys_up_time;
-	ccx->nhm_rpt_stamp++;
-	ccx->nhm_ongoing = true;
-}
-
-boolean
-phydm_nhm_check_rdy(void *dm_void)
-{
-	struct dm_struct *dm = (struct dm_struct *)dm_void;
-	boolean is_ready = false;
-	u32 reg1 = 0, reg1_bit = 0;
-
-	if (dm->support_ic_type & ODM_IC_11AC_SERIES) {
-		reg1 = R_0xfb4;
-		reg1_bit = 16;
-	#ifdef PHYDM_IC_JGR3_SERIES_SUPPORT
-	} else if (dm->support_ic_type & ODM_IC_JGR3_SERIES) {
-		reg1 = R_0x2d4c;
-		reg1_bit = 16;
-	#endif
-	} else {
-		reg1 = R_0x8b4;
-		if (dm->support_ic_type & (ODM_RTL8710B | ODM_RTL8721D |
-					ODM_RTL8710C))
-			reg1_bit = 25;
-		else
-			reg1_bit = 17;
-	}
-	if (odm_get_bb_reg(dm, reg1, BIT(reg1_bit)))
-		is_ready = true;
-
-	PHYDM_DBG(dm, DBG_ENV_MNTR, "NHM rdy=%d\n", is_ready);
-
-	return is_ready;
-}
-
-void phydm_nhm_cal_wgt(void *dm_void)
+void phydm_nhm_dbg(void *dm_void, char input[][16], u32 *_used, char *output,
+		   u32 *_out_len)
 {
 	struct dm_struct *dm = (struct dm_struct *)dm_void;
 	struct ccx_info *ccx = &dm->dm_ccx_info;
+	struct nhm_para_info nhm_para = {0};
+	char help[] = "-h";
+	u32 var1[10] = {0};
+	u32 used = *_used;
+	u32 out_len = *_out_len;
+	u8 result_tmp = 0;
 	u8 i = 0;
 
-	for (i = 0; i < NHM_RPT_NUM; i++) {
-		if (i == 0)
-			ccx->nhm_wgt[0] = (u8)(MAX_2(ccx->nhm_th[0] - 2, 0));
-		else if (i == (NHM_RPT_NUM - 1))
-			ccx->nhm_wgt[NHM_RPT_NUM - 1] = (u8)(ccx->nhm_th[NHM_TH_NUM - 1] + 2);
-		else
-			ccx->nhm_wgt[i] = (u8)((ccx->nhm_th[i - 1] + ccx->nhm_th[i]) >> 1);
-	}
-}
-
-u8 phydm_nhm_cal_wgt_avg(void *dm_void, u8 start_i, u8 end_i, u8 n_sum)
-{
-	struct dm_struct *dm = (struct dm_struct *)dm_void;
-	struct ccx_info *ccx = &dm->dm_ccx_info;
-	u8 i = 0;
-	u32 noise_tmp = 0;
-	u8 noise = 0;
-	u32 nhm_valid = 0;
-
-	if (n_sum == 0) {
-		PHYDM_DBG(dm, DBG_ENV_MNTR,
-			  "n_sum = 0, don't need to update noise\n");
-		return 0x0;
-	} else if (end_i > NHM_RPT_NUM - 1) {
-		PHYDM_DBG(dm, DBG_ENV_MNTR,
-			  "[WARNING]end_i is larger than 11!!\n");
-		return 0x0;
-	}
-
-	for (i = start_i; i <= end_i; i++)
-		noise_tmp += ccx->nhm_result[i] * ccx->nhm_wgt[i];
-
-	/* protection for the case of minus noise(RSSI)*/
-	noise = (u8)(NTH_TH_2_RSSI(MAX_2(PHYDM_DIV(noise_tmp, n_sum), 20)));
-	nhm_valid = (n_sum * 100) >> 8;
-	PHYDM_DBG(dm, DBG_ENV_MNTR,
-		  "cal wgt_avg : valid: ((%d)) percent, noise(RSSI)=((%d))\n",
-		  nhm_valid, noise);
-
-	return noise;
-}
-
-u8 phydm_nhm_cal_nhm_env(void *dm_void)
-{
-	struct dm_struct *dm = (struct dm_struct *)dm_void;
-	struct ccx_info *ccx = &dm->dm_ccx_info;
-	u8 first_idx = 0;
-	u8 nhm_env = 0;
-	u8 i = 0;
+	PHYDM_SSCANF(input[1], DCMD_DECIMAL, &var1[0]);
 
-	nhm_env = ccx->nhm_rpt_sum;
+	if ((strcmp(input[1], help) == 0)) {
+		PDM_SNPF(out_len, used, output + used, out_len - used,
+			 "NHM Basic-Trigger 262ms: {1}\n");
 
-	/*search first cluster*/
-	for (i = 0; i < NHM_RPT_NUM; i++) {
-		if (ccx->nhm_result[i]) {
-			first_idx = i;
-			break;
+		PDM_SNPF(out_len, used, output + used, out_len - used,
+			 "NHM Adv-Trigger: {2} {Include TXON} {Include CCA}\n{0:Cnt_all, 1:Cnt valid} {App:5 for dbg} {LV:1~4} {0~262ms}, 1dB mode :{en} {t[0](RSSI)}\n");
+		#ifdef NHM_DYM_PW_TH_SUPPORT
+		if (dm->support_ic_type & ODM_RTL8822C) {
+			PDM_SNPF(out_len, used, output + used, out_len - used,
+				 "NHM dym_pw_th: {3} {0:off}\n");
+			PDM_SNPF(out_len, used, output + used, out_len - used,
+				 "NHM dym_pw_th: {3} {1:on} {max} {period_decre} {sl_th}\n");
+			PDM_SNPF(out_len, used, output + used, out_len - used,
+				 "NHM dym_pw_th: {3} {2:fast on}\n");
 		}
-	}
-
-	/*exclude first cluster under -80dBm*/
-	for (i = 0; i < 4; i++) {
-		if (((first_idx + i) < NHM_RPT_NUM) &&
-		    (ccx->nhm_wgt[first_idx + i] <= NHM_IC_NOISE_TH))
-			nhm_env -= ccx->nhm_result[first_idx + i];
-	}
-
-	/*exclude nhm_rpt[0] above -80dBm*/
-	if (ccx->nhm_wgt[0] > NHM_IC_NOISE_TH)
-		nhm_env -= ccx->nhm_result[0];
-
-	PHYDM_DBG(dm, DBG_ENV_MNTR, "cal nhm_env: first_idx=%d, nhm_env=%d\n",
-		  first_idx, nhm_env);
-
-	return nhm_env;
-}
-
-void phydm_nhm_get_utility(void *dm_void)
-{
-	struct dm_struct *dm = (struct dm_struct *)dm_void;
-	struct ccx_info *ccx = &dm->dm_ccx_info;
-	u8 nhm_rpt_non_0 = 0;
-	u8 nhm_rpt_non_11 = 0;
-	u8 nhm_env = 0;
+		#endif
 
-	if (ccx->nhm_rpt_sum >= ccx->nhm_result[0]) {
-		phydm_nhm_cal_wgt(dm);
+		PDM_SNPF(out_len, used, output + used, out_len - used,
+			 "NHM Get Result: {100}\n");
+	} else if (var1[0] == 100) { /*Get NHM results*/
 
-		nhm_rpt_non_0 = ccx->nhm_rpt_sum - ccx->nhm_result[0];
-		nhm_rpt_non_11 = ccx->nhm_rpt_sum - ccx->nhm_result[11];
-		/*exclude nhm_r[0] above -80dBm or first cluster under -80dBm*/
-		nhm_env = phydm_nhm_cal_nhm_env(dm);
-		ccx->nhm_ratio = (nhm_rpt_non_0 * 100) >> 8;
-		ccx->nhm_env_ratio = (nhm_env * 100) >> 8;
-		ccx->nhm_level_valid = (nhm_rpt_non_11 * 100) >> 8;
-		ccx->nhm_level = phydm_nhm_cal_wgt_avg(dm, 0, NHM_RPT_NUM - 2,
-						     nhm_rpt_non_11);
-		ccx->nhm_pwr = phydm_nhm_cal_wgt_avg(dm, 0, NHM_RPT_NUM - 1,
-						     ccx->nhm_rpt_sum);
-	} else {
-		PHYDM_DBG(dm, DBG_ENV_MNTR, "[warning] nhm_rpt_sum invalid\n");
-		ccx->nhm_ratio = 0;
-		ccx->nhm_env_ratio = 0;
-	}
+		PDM_SNPF(out_len, used, output + used, out_len - used,
+			 "IGI=0x%x, rpt_stamp=%d\n", ccx->nhm_igi,
+			 ccx->nhm_rpt_stamp);
 
-	PHYDM_DBG(dm, DBG_ENV_MNTR,
-		  "nhm_ratio=%d, nhm_env_ratio=%d, nhm_level=%d, nhm_pwr=%d\n",
-		  ccx->nhm_ratio, ccx->nhm_env_ratio, ccx->nhm_level,
-		  ccx->nhm_pwr);
-}
+		if (phydm_nhm_get_result(dm)) {
+			for (i = 0; i < NHM_RPT_NUM; i++) {
+				result_tmp = ccx->nhm_result[i];
+				PDM_SNPF(out_len, used, output + used,
+					 out_len - used,
+					 "nhm_rpt[%d] = %d (%d percent)\n",
+					 i, result_tmp,
+					 (((result_tmp * 100) + 128) >> 8));
+			}
+			phydm_nhm_get_utility(dm);
 
-boolean
-phydm_nhm_get_result(void *dm_void)
-{
-	struct dm_struct *dm = (struct dm_struct *)dm_void;
-	struct ccx_info *ccx = &dm->dm_ccx_info;
-	u32 value32 = 0;
-	u8 i = 0;
-	u32 nhm_reg1 = 0;
-	u16 nhm_rpt_sum_tmp = 0;
-	u16 nhm_duration = 0;
+			PDM_SNPF(out_len, used, output + used, out_len - used,
+				 "NHM_noise: valid: %d percent, noise(RSSI) = %d\n",
+				 ccx->nhm_level_valid, ccx->nhm_level);
+			PDM_SNPF(out_len, used, output + used, out_len - used,
+				 "NHM_pwr: nhm_pwr (RSSI) = %d\n", ccx->nhm_pwr);
+			PDM_SNPF(out_len, used, output + used, out_len - used,
+				 "ratio: nhm_ratio=%d, nhm_env_ratio=%d, nhm_idle_ratio=%d\n",
+				 ccx->nhm_ratio, ccx->nhm_env_ratio, 
+				 ccx->nhm_idle_ratio);
+		} else {
+			PDM_SNPF(out_len, used, output + used, out_len - used,
+				 "Get NHM_rpt Fail\n");
+		}
+		ccx->nhm_manual_ctrl = 0;
+	#ifdef NHM_DYM_PW_TH_SUPPORT
+	} else if (var1[0] == 3) { /*NMH dym_pw_th*/
+		if (dm->support_ic_type & ODM_RTL8822C) {
+			for (i = 1; i < 7; i++) {
+				PHYDM_SSCANF(input[i + 1], DCMD_DECIMAL,
+					     &var1[i]);
+			}
 
-	if (dm->support_ic_type & ODM_IC_11AC_SERIES)
-		nhm_reg1 = R_0x994;
-	#ifdef PHYDM_IC_JGR3_SERIES_SUPPORT
-	else if (dm->support_ic_type & ODM_IC_JGR3_SERIES)
-		nhm_reg1 = R_0x1e60;
+			if (var1[1] == 1) {
+				ccx->nhm_dym_pw_th_en = true;
+				ccx->nhm_pw_th_max = (u8)var1[2];
+				ccx->nhm_period_decre = (u8)var1[3];
+				ccx->nhm_sl_pw_th = (u8)var1[4];
+				ccx->dym_pwth_manual_ctrl = true;
+			} else if (var1[1] == 2) {
+				ccx->nhm_dym_pw_th_en = true;
+				ccx->nhm_pw_th_max = 63;
+				ccx->nhm_period_decre = 1;
+				ccx->nhm_sl_pw_th = 100;
+				ccx->dym_pwth_manual_ctrl = true;
+			} else {
+				ccx->nhm_dym_pw_th_en = false;
+				phydm_nhm_restore_pw_th(dm);
+				ccx->dym_pwth_manual_ctrl = false;
+			}
+		}
 	#endif
-	else
-		nhm_reg1 = R_0x890;
-	PHYDM_DBG(dm, DBG_ENV_MNTR, "[%s]===>\n", __func__);
-
-	if (!(dm->support_ic_type & (ODM_RTL8822C | ODM_RTL8812F |
-				     ODM_RTL8197G | ODM_RTL8723F)))
-		pdm_set_reg(dm, nhm_reg1, BIT(1), 0);
-
-	if (!(phydm_nhm_check_rdy(dm))) {
-		PHYDM_DBG(dm, DBG_ENV_MNTR, "Get NHM report Fail\n");
-		phydm_nhm_racing_release(dm);
-		return false;
-	}
-
-	if (dm->support_ic_type & ODM_IC_11AC_SERIES) {
-		value32 = odm_read_4byte(dm, R_0xfa8);
-		odm_move_memory(dm, &ccx->nhm_result[0], &value32, 4);
-
-		value32 = odm_read_4byte(dm, R_0xfac);
-		odm_move_memory(dm, &ccx->nhm_result[4], &value32, 4);
+	} else { /*NMH trigger*/
+		ccx->nhm_manual_ctrl = 1;
 
-		value32 = odm_read_4byte(dm, R_0xfb0);
-		odm_move_memory(dm, &ccx->nhm_result[8], &value32, 4);
+		for (i = 1; i < 9; i++) {
+			PHYDM_SSCANF(input[i + 1], DCMD_DECIMAL,
+				     &var1[i]);
+		}
 
-		/*@Get NHM duration*/
-		value32 = odm_read_4byte(dm, R_0xfb4);
-		nhm_duration = (u16)(value32 & MASKLWORD);
-	#ifdef PHYDM_IC_JGR3_SERIES_SUPPORT
-	} else if (dm->support_ic_type & ODM_IC_JGR3_SERIES) {
-		value32 = odm_read_4byte(dm, R_0x2d40);
-		odm_move_memory(dm, &ccx->nhm_result[0], &value32, 4);
+		if (var1[0] == 1) {
+			nhm_para.incld_txon = NHM_EXCLUDE_TXON;
+			nhm_para.incld_cca = NHM_EXCLUDE_CCA;
+			nhm_para.div_opt = NHM_CNT_ALL;
+			nhm_para.nhm_app = NHM_DBG;
+			nhm_para.nhm_lv = NHM_LV_4;
+			nhm_para.mntr_time = 262;
+			nhm_para.en_1db_mode = false;
+			nhm_para.nhm_th0_manual = 0;
+		} else {
+			nhm_para.incld_txon = (enum nhm_option_txon_all)var1[1];
+			nhm_para.incld_cca = (enum nhm_option_cca_all)var1[2];
+			nhm_para.div_opt = (enum nhm_divider_opt_all)var1[3];
+			nhm_para.nhm_app = (enum nhm_application)var1[4];
+			nhm_para.nhm_lv = (enum phydm_nhm_level)var1[5];
+			nhm_para.mntr_time = (u16)var1[6];
+			nhm_para.en_1db_mode = (boolean)var1[7];
+			nhm_para.nhm_th0_manual = (u8)var1[8];
 
-		value32 = odm_read_4byte(dm, R_0x2d44);
-		odm_move_memory(dm, &ccx->nhm_result[4], &value32, 4);
+			/*some old ic is not supported on NHM divider option */
+			if (dm->support_ic_type & (ODM_RTL8188E | ODM_RTL8723B |
+			    ODM_RTL8195A | ODM_RTL8192E)) {
+				nhm_para.div_opt = NHM_CNT_ALL;
+			}
+		}
 
-		value32 = odm_read_4byte(dm, R_0x2d48);
-		odm_move_memory(dm, &ccx->nhm_result[8], &value32, 4);
+		PDM_SNPF(out_len, used, output + used, out_len - used,
+			 "txon=%d, cca=%d, dev=%d, app=%d, lv=%d, time=%d ms\n",
+			 nhm_para.incld_txon, nhm_para.incld_cca,
+			 nhm_para.div_opt, nhm_para.nhm_app,
+			 nhm_para.nhm_lv, nhm_para.mntr_time);
 
-		/*@Get NHM duration*/
-		value32 = odm_read_4byte(dm, R_0x2d4c);
-		nhm_duration = (u16)(value32 & MASKLWORD);
-	#endif
-	} else {
-		value32 = odm_read_4byte(dm, R_0x8d8);
-		odm_move_memory(dm, &ccx->nhm_result[0], &value32, 4);
+		PDM_SNPF(out_len, used, output + used, out_len - used,
+			 "en_1db_mode=%d, th0(for 1db mode)=%d\n",
+			 nhm_para.en_1db_mode, nhm_para.nhm_th0_manual);
 
-		value32 = odm_read_4byte(dm, R_0x8dc);
-		odm_move_memory(dm, &ccx->nhm_result[4], &value32, 4);
+		if (phydm_nhm_mntr_set(dm, &nhm_para))
+			phydm_nhm_trigger(dm);
 
-		value32 = odm_get_bb_reg(dm, R_0x8d0, 0xffff0000);
-		odm_move_memory(dm, &ccx->nhm_result[8], &value32, 2);
+		PDM_SNPF(out_len, used, output + used, out_len - used,
+			 "IGI=0x%x, rpt_stamp=%d\n", ccx->nhm_igi,
+			 ccx->nhm_rpt_stamp);
 
-		value32 = odm_read_4byte(dm, R_0x8d4);
+		for (i = 0; i < NHM_TH_NUM; i++) {
+			PDM_SNPF(out_len, used, output + used, out_len - used,
+				 "NHM_th[%d] RSSI = %d\n", i,
+				 NTH_TH_2_RSSI(ccx->nhm_th[i]));
+		}
+	}
 
-		ccx->nhm_result[10] = (u8)((value32 & MASKBYTE2) >> 16);
-		ccx->nhm_result[11] = (u8)((value32 & MASKBYTE3) >> 24);
+	*_used = used;
+	*_out_len = out_len;
+}
 
-		/*@Get NHM duration*/
-		nhm_duration = (u16)(value32 & MASKLWORD);
-	}
+#endif /*@#ifdef NHM_SUPPORT*/
 
-	/* sum all nhm_result */
-	if (ccx->nhm_period >= 65530)
-		PHYDM_DBG(dm, DBG_ENV_MNTR,
-			  "NHM valid time = %d, valid: %d percent\n",
-			  nhm_duration, (nhm_duration * 100) >> 16);
+#ifdef CLM_SUPPORT
 
-	for (i = 0; i < NHM_RPT_NUM; i++)
-		nhm_rpt_sum_tmp = (u16)(nhm_rpt_sum_tmp + ccx->nhm_result[i]);
+void phydm_clm_racing_release(void *dm_void)
+{
+	struct dm_struct *dm = (struct dm_struct *)dm_void;
+	struct ccx_info *ccx = &dm->dm_ccx_info;
 
-	ccx->nhm_rpt_sum = (u8)nhm_rpt_sum_tmp;
+	PHYDM_DBG(dm, DBG_ENV_MNTR, "[%s]===>\n", __func__);
+	PHYDM_DBG(dm, DBG_ENV_MNTR, "lv:(%d)->(0)\n", ccx->clm_set_lv);
 
-	PHYDM_DBG(dm, DBG_ENV_MNTR,
-		  "NHM_Rpt[%d](H->L)[%d %d %d %d %d %d %d %d %d %d %d %d]\n",
-		  ccx->nhm_rpt_stamp, ccx->nhm_result[11], ccx->nhm_result[10],
-		  ccx->nhm_result[9], ccx->nhm_result[8], ccx->nhm_result[7],
-		  ccx->nhm_result[6], ccx->nhm_result[5], ccx->nhm_result[4],
-		  ccx->nhm_result[3], ccx->nhm_result[2], ccx->nhm_result[1],
-		  ccx->nhm_result[0]);
+	ccx->clm_ongoing = false;
+	ccx->clm_set_lv = CLM_RELEASE;
+	ccx->clm_app = CLM_BACKGROUND;
+}
 
-	phydm_nhm_racing_release(dm);
+u8 phydm_clm_racing_ctrl(void *dm_void, enum phydm_clm_level clm_lv)
+{
+	struct dm_struct *dm = (struct dm_struct *)dm_void;
+	struct ccx_info *ccx = &dm->dm_ccx_info;
+	u8 set_result = PHYDM_SET_SUCCESS;
+	/*@acquire to control CLM API*/
 
-	if (nhm_rpt_sum_tmp > 255) {
-		PHYDM_DBG(dm, DBG_ENV_MNTR,
-			  "[Warning] Invalid NHM RPT, total=%d\n",
-			  nhm_rpt_sum_tmp);
-		return false;
+	PHYDM_DBG(dm, DBG_ENV_MNTR, "clm_ongoing=%d, lv:(%d)->(%d)\n",
+		  ccx->clm_ongoing, ccx->clm_set_lv, clm_lv);
+	if (ccx->clm_ongoing) {
+		if (clm_lv <= ccx->clm_set_lv) {
+			set_result = PHYDM_SET_FAIL;
+		} else {
+			phydm_ccx_hw_restart(dm);
+			ccx->clm_ongoing = false;
+		}
 	}
 
-	return true;
+	if (set_result)
+		ccx->clm_set_lv = clm_lv;
+
+	PHYDM_DBG(dm, DBG_ENV_MNTR, "clm racing success=%d\n", set_result);
+	return set_result;
 }
 
-void phydm_nhm_set_th_reg(void *dm_void)
+void phydm_clm_c2h_report_handler(void *dm_void, u8 *cmd_buf, u8 cmd_len)
 {
 	struct dm_struct *dm = (struct dm_struct *)dm_void;
-	struct ccx_info *ccx = &dm->dm_ccx_info;
-	u32 reg1 = 0, reg2 = 0, reg3 = 0, reg4 = 0, reg4_bit = 0;
-	u32 val = 0;
-
-	PHYDM_DBG(dm, DBG_ENV_MNTR, "[%s]===>\n", __func__);
+	struct ccx_info *ccx_info = &dm->dm_ccx_info;
+	u8 clm_report = cmd_buf[0];
+	/*@u8 clm_report_idx = cmd_buf[1];*/
 
-	if (dm->support_ic_type & ODM_IC_11AC_SERIES) {
-		reg1 = R_0x994;
-		reg2 = R_0x998;
-		reg3 = R_0x99c;
-		reg4 = R_0x9a0;
-		reg4_bit = MASKBYTE0;
-	#ifdef PHYDM_IC_JGR3_SERIES_SUPPORT
-	} else if (dm->support_ic_type & ODM_IC_JGR3_SERIES) {
-		reg1 = R_0x1e60;
-		reg2 = R_0x1e44;
-		reg3 = R_0x1e48;
-		reg4 = R_0x1e5c;
-		reg4_bit = MASKBYTE2;
-	#endif
-	} else {
-		reg1 = R_0x890;
-		reg2 = R_0x898;
-		reg3 = R_0x89c;
-		reg4 = R_0xe28;
-		reg4_bit = MASKBYTE0;
-	}
+	if (cmd_len >= 12)
+		return;
 
-	/*Set NHM threshold*/ /*Unit: PWdB U(8,1)*/
-	val = BYTE_2_DWORD(ccx->nhm_th[3], ccx->nhm_th[2],
-			   ccx->nhm_th[1], ccx->nhm_th[0]);
-	pdm_set_reg(dm, reg2, MASKDWORD, val);
-	val = BYTE_2_DWORD(ccx->nhm_th[7], ccx->nhm_th[6],
-			   ccx->nhm_th[5], ccx->nhm_th[4]);
-	pdm_set_reg(dm, reg3, MASKDWORD, val);
-	pdm_set_reg(dm, reg4, reg4_bit, ccx->nhm_th[8]);
-	val = BYTE_2_DWORD(0, 0, ccx->nhm_th[10], ccx->nhm_th[9]);
-	pdm_set_reg(dm, reg1, 0xffff0000, val);
+	ccx_info->clm_fw_result_acc += clm_report;
+	ccx_info->clm_fw_result_cnt++;
 
-	PHYDM_DBG(dm, DBG_ENV_MNTR,
-		  "Update NHM_th[H->L]=[%d %d %d %d %d %d %d %d %d %d %d]\n",
-		  ccx->nhm_th[10], ccx->nhm_th[9], ccx->nhm_th[8],
-		  ccx->nhm_th[7], ccx->nhm_th[6], ccx->nhm_th[5],
-		  ccx->nhm_th[4], ccx->nhm_th[3], ccx->nhm_th[2],
-		  ccx->nhm_th[1], ccx->nhm_th[0]);
+	PHYDM_DBG(dm, DBG_ENV_MNTR, "[%d] clm_report= %d\n",
+		  ccx_info->clm_fw_result_cnt, clm_report);
 }
 
-boolean
-phydm_nhm_th_update_chk(void *dm_void, enum nhm_application nhm_app, u8 *nhm_th,
-			u32 *igi_new, boolean en_1db_mode, u8 nhm_th0_manual)
+void phydm_clm_h2c(void *dm_void, u16 obs_time, u8 fw_clm_en)
 {
 	struct dm_struct *dm = (struct dm_struct *)dm_void;
-	struct ccx_info *ccx = &dm->dm_ccx_info;
-	boolean is_update = false;
-	u8 igi_curr = phydm_get_igi(dm, BB_PATH_A);
-	u8 nhm_igi_th_11k_low[NHM_TH_NUM] = {0x12, 0x15, 0x18, 0x1b, 0x1e,
-					     0x23, 0x28, 0x2c, 0x78,
-					     0x78, 0x78};
-	u8 nhm_igi_th_11k_high[NHM_TH_NUM] = {0x1e, 0x23, 0x28, 0x2d, 0x32,
-					      0x37, 0x78, 0x78, 0x78, 0x78,
-					      0x78};
-	u8 nhm_igi_th_xbox[NHM_TH_NUM] = {0x1a, 0x2c, 0x2e, 0x30, 0x32, 0x34,
-					  0x36, 0x38, 0x3a, 0x3c, 0x3d};
+	u8 h2c_val[H2C_MAX_LENGTH] = {0};
 	u8 i = 0;
-	u8 th_tmp = igi_curr - CCA_CAP;
-	u8 th_step = 2;
+	u8 obs_time_idx = 0;
 
-	PHYDM_DBG(dm, DBG_ENV_MNTR, "[%s]===>\n", __func__);
-	PHYDM_DBG(dm, DBG_ENV_MNTR, "App=%d, nhm_igi=0x%x, igi_curr=0x%x\n",
-		  nhm_app, ccx->nhm_igi, igi_curr);
+	PHYDM_DBG(dm, DBG_ENV_MNTR, "[%s] ======>\n", __func__);
+	PHYDM_DBG(dm, DBG_ENV_MNTR, "obs_time_index=%d *4 us\n", obs_time);
 
-	if (igi_curr < 0x10) /* Protect for invalid IGI*/
-		return false;
+	for (i = 1; i <= 16; i++) {
+		if (obs_time & BIT(16 - i)) {
+			obs_time_idx = 16 - i;
+			break;
+		}
+	}
+#if 0
+	obs_time = (2 ^ 16 - 1)~(2 ^ 15)  => obs_time_idx = 15  (65535 ~32768)
+	obs_time = (2 ^ 15 - 1)~(2 ^ 14)  => obs_time_idx = 14
+	...
+	...
+	...
+	obs_time = (2 ^ 1 - 1)~(2 ^ 0)  => obs_time_idx = 0
 
-	switch (nhm_app) {
-	case NHM_BACKGROUND: /* @Get IGI form driver parameter(cur_ig_value)*/
-		if (ccx->nhm_igi != igi_curr || ccx->nhm_app != nhm_app) {
-			is_update = true;
-			*igi_new = (u32)igi_curr;
+#endif
 
-			#ifdef NHM_DYM_PW_TH_SUPPORT
-			if (ccx->nhm_dym_pw_th_en) {
-				th_tmp = MAX_2(igi_curr - DYM_PWTH_CCA_CAP, 0);
-				th_step = 3;
-			}
-			#endif
+	h2c_val[0] = obs_time_idx | (((fw_clm_en) ? 1 : 0) << 7);
+	h2c_val[1] = CLM_MAX_REPORT_TIME;
 
-			nhm_th[0] = (u8)IGI_2_NHM_TH(th_tmp);
+	PHYDM_DBG(dm, DBG_ENV_MNTR, "PHYDM h2c[0x4d]=0x%x %x %x %x %x %x %x\n",
+		  h2c_val[6], h2c_val[5], h2c_val[4], h2c_val[3], h2c_val[2],
+		  h2c_val[1], h2c_val[0]);
 
-			for (i = 1; i <= 10; i++)
-				nhm_th[i] = nhm_th[0] +
-					    IGI_2_NHM_TH(th_step * i);
+	odm_fill_h2c_cmd(dm, PHYDM_H2C_FW_CLM_MNTR, H2C_MAX_LENGTH, h2c_val);
+}
 
-		}
-		break;
+void phydm_clm_setting(void *dm_void, u16 clm_period /*@4us sample 1 time*/)
+{
+	struct dm_struct *dm = (struct dm_struct *)dm_void;
+	struct ccx_info *ccx = &dm->dm_ccx_info;
 
-	case NHM_ACS:
-		if (ccx->nhm_igi != igi_curr || ccx->nhm_app != nhm_app) {
-			is_update = true;
-			*igi_new = (u32)igi_curr;
-			nhm_th[0] = (u8)IGI_2_NHM_TH(igi_curr - CCA_CAP);
-			for (i = 1; i <= 10; i++)
-				nhm_th[i] = nhm_th[0] + IGI_2_NHM_TH(2 * i);
-		}
-		break;
+	if (ccx->clm_period != clm_period) {
+		if (dm->support_ic_type & ODM_IC_11AC_SERIES)
+			odm_set_bb_reg(dm, R_0x990, MASKLWORD, clm_period);
+		#ifdef PHYDM_IC_JGR3_SERIES_SUPPORT
+		else if (dm->support_ic_type & ODM_IC_JGR3_SERIES)
+			odm_set_bb_reg(dm, R_0x1e40, MASKLWORD, clm_period);
+		#endif
+		else if (dm->support_ic_type & ODM_IC_11N_SERIES)
+			odm_set_bb_reg(dm, R_0x894, MASKLWORD, clm_period);
 
-	case IEEE_11K_HIGH:
-		is_update = true;
-		*igi_new = 0x2c;
-		for (i = 0; i < NHM_TH_NUM; i++)
-			nhm_th[i] = IGI_2_NHM_TH(nhm_igi_th_11k_high[i]);
-		break;
+		ccx->clm_period = clm_period;
+		PHYDM_DBG(dm, DBG_ENV_MNTR,
+			  "Update CLM period ((%d)) -> ((%d))\n",
+			  ccx->clm_period, clm_period);
+	}
+
+	PHYDM_DBG(dm, DBG_ENV_MNTR, "Set CLM period=%d * 4us\n",
+		  ccx->clm_period);
+}
+
+void phydm_clm_trigger(void *dm_void)
+{
+	struct dm_struct *dm = (struct dm_struct *)dm_void;
+	struct ccx_info *ccx = &dm->dm_ccx_info;
+	u32 reg1 = 0;
+
+	if (dm->support_ic_type & ODM_IC_11AC_SERIES)
+		reg1 = R_0x994;
+	#ifdef PHYDM_IC_JGR3_SERIES_SUPPORT
+	else if (dm->support_ic_type & ODM_IC_JGR3_SERIES)
+		reg1 = R_0x1e60;
+	#endif
+	else
+		reg1 = R_0x890;
+	PHYDM_DBG(dm, DBG_ENV_MNTR, "[%s]===>\n", __func__);
 
-	case IEEE_11K_LOW:
-		is_update = true;
-		*igi_new = 0x20;
-		for (i = 0; i < NHM_TH_NUM; i++)
-			nhm_th[i] = IGI_2_NHM_TH(nhm_igi_th_11k_low[i]);
-		break;
+	odm_set_bb_reg(dm, reg1, BIT(0), 0x0);
+	odm_set_bb_reg(dm, reg1, BIT(0), 0x1);
 
-	case INTEL_XBOX:
-		is_update = true;
-		*igi_new = 0x36;
-		for (i = 0; i < NHM_TH_NUM; i++)
-			nhm_th[i] = IGI_2_NHM_TH(nhm_igi_th_xbox[i]);
-		break;
+	ccx->clm_trigger_time = dm->phydm_sys_up_time;
+	ccx->clm_rpt_stamp++;
+	ccx->clm_ongoing = true;
+}
 
-	case NHM_DBG: /*@Get IGI form register*/
-		igi_curr = phydm_get_igi(dm, BB_PATH_A);
-		if (ccx->nhm_igi != igi_curr || ccx->nhm_app != nhm_app) {
-			is_update = true;
-			*igi_new = (u32)igi_curr;
-			if (en_1db_mode) {
-				nhm_th[0] = (u8)IGI_2_NHM_TH(nhm_th0_manual +
-							     10);
-				th_step = 1;
-			} else {
-				nhm_th[0] = (u8)IGI_2_NHM_TH(igi_curr -
-							     CCA_CAP);
-			}
+boolean
+phydm_clm_check_rdy(void *dm_void)
+{
+	struct dm_struct *dm = (struct dm_struct *)dm_void;
+	boolean is_ready = false;
+	u32 reg1 = 0, reg1_bit = 0;
 
-			for (i = 1; i <= 10; i++)
-				nhm_th[i] = nhm_th[0] + IGI_2_NHM_TH(th_step *
-					    i);
+	if (dm->support_ic_type & ODM_IC_11AC_SERIES) {
+		reg1 = R_0xfa4;
+		reg1_bit = 16;
+	#ifdef PHYDM_IC_JGR3_SERIES_SUPPORT
+	} else if (dm->support_ic_type & ODM_IC_JGR3_SERIES) {
+		reg1 = R_0x2d88;
+		reg1_bit = 16;
+	#endif
+	} else if (dm->support_ic_type & ODM_IC_11N_SERIES) {
+		if (dm->support_ic_type & (ODM_RTL8710B | ODM_RTL8721D |
+					ODM_RTL8710C)) {
+			reg1 = R_0x8b4;
+			reg1_bit = 24;
+		} else {
+			reg1 = R_0x8b4;
+			reg1_bit = 16;
 		}
-		break;
 	}
+	if (odm_get_bb_reg(dm, reg1, BIT(reg1_bit)))
+		is_ready = true;
 
-	if (is_update) {
-		PHYDM_DBG(dm, DBG_ENV_MNTR, "[Update NHM_TH] igi_RSSI=%d\n",
-			  IGI_2_RSSI(*igi_new));
+	PHYDM_DBG(dm, DBG_ENV_MNTR, "CLM rdy=%d\n", is_ready);
 
-		for (i = 0; i < NHM_TH_NUM; i++) {
-			PHYDM_DBG(dm, DBG_ENV_MNTR, "NHM_th[%d](RSSI) = %d\n",
-				  i, NTH_TH_2_RSSI(nhm_th[i]));
-		}
-	} else {
-		PHYDM_DBG(dm, DBG_ENV_MNTR, "No need to update NHM_TH\n");
-	}
-	return is_update;
+	return is_ready;
 }
 
-void phydm_nhm_set(void *dm_void, enum nhm_option_txon_all include_tx,
-		   enum nhm_option_cca_all include_cca,
-		   enum nhm_divider_opt_all divi_opt,
-		   enum nhm_application nhm_app, u16 period,
-		   boolean en_1db_mode, u8 nhm_th0_manual)
+void phydm_clm_get_utility(void *dm_void)
 {
 	struct dm_struct *dm = (struct dm_struct *)dm_void;
 	struct ccx_info *ccx = &dm->dm_ccx_info;
-	u8 nhm_th[NHM_TH_NUM] = {0};
-	u32 igi = 0x20;
-	u32 reg1 = 0, reg2 = 0;
-	u32 val_tmp = 0;
 
-	PHYDM_DBG(dm, DBG_ENV_MNTR, "[%s]===>\n", __func__);
+	if (ccx->clm_period == 0) {
+		PHYDM_DBG(dm, DBG_ENV_MNTR, "[warning] clm_period = 0\n");
+		ccx->clm_ratio = 0;
+	} else {
+		ccx->clm_ratio = phydm_ccx_get_rpt_ratio(dm, ccx->clm_result,
+							 ccx->clm_period);
+	}
+}
 
-	PHYDM_DBG(dm, DBG_ENV_MNTR,
-		  "incld{tx, cca}={%d, %d}, divi_opt=%d, period=%d\n",
-		  include_tx, include_cca, divi_opt, period);
+boolean
+phydm_clm_get_result(void *dm_void)
+{
+	struct dm_struct *dm = (struct dm_struct *)dm_void;
+	struct ccx_info *ccx_info = &dm->dm_ccx_info;
+	u32 reg1 = 0;
+	u32 val = 0;
 
-	if (dm->support_ic_type & ODM_IC_11AC_SERIES) {
+	if (dm->support_ic_type & ODM_IC_11AC_SERIES)
 		reg1 = R_0x994;
-		reg2 = R_0x990;
 	#ifdef PHYDM_IC_JGR3_SERIES_SUPPORT
-	} else if (dm->support_ic_type & ODM_IC_JGR3_SERIES) {
+	else if (dm->support_ic_type & ODM_IC_JGR3_SERIES)
 		reg1 = R_0x1e60;
-		reg2 = R_0x1e40;
 	#endif
-	} else {
+	else
 		reg1 = R_0x890;
-		reg2 = R_0x894;
-	}
+	if ((dm->support_ic_type & ODM_IC_11N_SERIES) ||
+	    (dm->support_ic_type & ODM_IC_11AC_SERIES) ||
+	    (dm->support_ic_type & ODM_RTL8198F) ||
+	    (dm->support_ic_type & ODM_RTL8814B))
+		odm_set_bb_reg(dm, reg1, BIT(0), 0x0);
 
-	/*Set disable_ignore_cca, disable_ignore_txon, ccx_en*/
-	if (include_tx != ccx->nhm_include_txon ||
-	    include_cca != ccx->nhm_include_cca ||
-	    divi_opt != ccx->nhm_divider_opt) {
-	    /* some old ic is not supported on NHM divider option */
-		if (dm->support_ic_type & (ODM_RTL8188E | ODM_RTL8723B |
-		    ODM_RTL8195A | ODM_RTL8192E)) {
-			val_tmp = (u32)((include_tx << 2) |
-				  (include_cca << 1) | 1);
-			pdm_set_reg(dm, reg1, 0x700, val_tmp);
-		} else {
-			val_tmp = (u32)BIT_2_BYTE(divi_opt, include_tx,
-				  include_cca, 1);
-			pdm_set_reg(dm, reg1, 0xf00, val_tmp);
-		}
-		ccx->nhm_include_txon = include_tx;
-		ccx->nhm_include_cca = include_cca;
-		ccx->nhm_divider_opt = divi_opt;
+	if (!(phydm_clm_check_rdy(dm))) {
+		PHYDM_DBG(dm, DBG_ENV_MNTR, "Get CLM report Fail\n");
+		phydm_clm_racing_release(dm);
+		return false;
 	}
 
-	/*Set NHM period*/
-	if (period != ccx->nhm_period) {
-		pdm_set_reg(dm, reg2, MASKHWORD, period);
-		PHYDM_DBG(dm, DBG_ENV_MNTR,
-			  "Update NHM period ((%d)) -> ((%d))\n",
-			  ccx->nhm_period, period);
-
-		ccx->nhm_period = period;
+	if (dm->support_ic_type & ODM_IC_11AC_SERIES) {
+		val = odm_get_bb_reg(dm, R_0xfa4, MASKLWORD);
+		ccx_info->clm_result = (u16)val;
+	#ifdef PHYDM_IC_JGR3_SERIES_SUPPORT
+	} else if (dm->support_ic_type & ODM_IC_JGR3_SERIES) {
+		val = odm_get_bb_reg(dm, R_0x2d88, MASKLWORD);
+		ccx_info->clm_result = (u16)val;
+	#endif
+	} else if (dm->support_ic_type & ODM_IC_11N_SERIES) {
+		val = odm_get_bb_reg(dm, R_0x8d0, MASKLWORD);
+		ccx_info->clm_result = (u16)val;
 	}
 
-	/*Set NHM threshold*/
-	if (phydm_nhm_th_update_chk(dm, nhm_app, &nhm_th[0], &igi,
-				    en_1db_mode, nhm_th0_manual)) {
-		/*Pause IGI*/
-		if (nhm_app == NHM_BACKGROUND || nhm_app == NHM_ACS) {
-			PHYDM_DBG(dm, DBG_ENV_MNTR, "DIG Free Run\n");
-		} else if (phydm_pause_func(dm, F00_DIG, PHYDM_PAUSE,
-					    PHYDM_PAUSE_LEVEL_1, 1, &igi)
-					    == PAUSE_FAIL) {
-			PHYDM_DBG(dm, DBG_ENV_MNTR, "pause DIG Fail\n");
-			return;
-		} else {
-			PHYDM_DBG(dm, DBG_ENV_MNTR, "pause DIG=0x%x\n", igi);
-		}
-		ccx->nhm_app = nhm_app;
-		ccx->nhm_igi = (u8)igi;
-		odm_move_memory(dm, &ccx->nhm_th[0], &nhm_th, NHM_TH_NUM);
-
-		/*Set NHM th*/
-		phydm_nhm_set_th_reg(dm);
-	}
+	PHYDM_DBG(dm, DBG_ENV_MNTR, "CLM result = %d *4 us\n",
+		  ccx_info->clm_result);
+	phydm_clm_racing_release(dm);
+	return true;
 }
 
 boolean
-phydm_nhm_mntr_set(void *dm_void, struct nhm_para_info *nhm_para)
+phydm_clm_mntr_set(void *dm_void, struct clm_para_info *clm_para)
 {
+	/*@Driver Monitor CLM*/
 	struct dm_struct *dm = (struct dm_struct *)dm_void;
-	u16 nhm_time = 0; /*unit: 4us*/
-
-	PHYDM_DBG(dm, DBG_ENV_MNTR, "[%s]===>\n", __func__);
+	struct ccx_info *ccx = &dm->dm_ccx_info;
+	u16 clm_period = 0;
 
-	if (nhm_para->mntr_time == 0)
+	if (clm_para->mntr_time == 0)
 		return false;
 
-	if (nhm_para->nhm_lv >= NHM_MAX_NUM) {
-		PHYDM_DBG(dm, DBG_ENV_MNTR, "Wrong LV=%d\n", nhm_para->nhm_lv);
+	if (clm_para->clm_lv >= CLM_MAX_NUM) {
+		PHYDM_DBG(dm, DBG_ENV_MNTR, "[WARNING] Wrong LV=%d\n",
+			  clm_para->clm_lv);
 		return false;
 	}
 
-	if (phydm_nhm_racing_ctrl(dm, nhm_para->nhm_lv) == PHYDM_SET_FAIL)
+	if (phydm_clm_racing_ctrl(dm, clm_para->clm_lv) == PHYDM_SET_FAIL)
 		return false;
 
-	if (nhm_para->mntr_time >= 262)
-		nhm_time = NHM_PERIOD_MAX;
+	if (clm_para->mntr_time >= 262)
+		clm_period = CLM_PERIOD_MAX;
 	else
-		nhm_time = nhm_para->mntr_time * MS_TO_4US_RATIO;
+		clm_period = clm_para->mntr_time * MS_TO_4US_RATIO;
 
-	phydm_nhm_set(dm, nhm_para->incld_txon, nhm_para->incld_cca,
-		      nhm_para->div_opt, nhm_para->nhm_app, nhm_time,
-		      nhm_para->en_1db_mode, nhm_para->nhm_th0_manual);
+	ccx->clm_app = clm_para->clm_app;
+	phydm_clm_setting(dm, clm_period);
 
 	return true;
 }
 
-#ifdef NHM_DYM_PW_TH_SUPPORT
-void
-phydm_nhm_restore_pw_th(void *dm_void)
+boolean
+phydm_clm_mntr_racing_chk(void *dm_void)
 {
 	struct dm_struct *dm = (struct dm_struct *)dm_void;
 	struct ccx_info *ccx = &dm->dm_ccx_info;
+	u32 sys_return_time = 0;
 
-	odm_set_bb_reg(dm, R_0x82c, 0x3f, ccx->pw_th_rf20_ori);
+	if (ccx->clm_manual_ctrl) {
+		PHYDM_DBG(dm, DBG_ENV_MNTR, "CLM in manual ctrl\n");
+		return true;
+	}
+
+	sys_return_time = ccx->clm_trigger_time + MAX_ENV_MNTR_TIME;
+
+	if (ccx->clm_app != CLM_BACKGROUND &&
+	    (sys_return_time > dm->phydm_sys_up_time)) {
+		PHYDM_DBG(dm, DBG_ENV_MNTR,
+			  "clm_app=%d, trigger_time %d, sys_time=%d\n",
+			  ccx->clm_app, ccx->clm_trigger_time,
+			  dm->phydm_sys_up_time);
+
+		return true;
+	}
+
+	return false;
+}
+
+boolean
+phydm_clm_mntr_chk(void *dm_void, u16 monitor_time /*unit ms*/)
+{
+	struct dm_struct *dm = (struct dm_struct *)dm_void;
+	struct ccx_info *ccx = &dm->dm_ccx_info;
+	struct clm_para_info clm_para = {0};
+	boolean clm_chk_result = false;
+
+	PHYDM_DBG(dm, DBG_ENV_MNTR, "[%s] ======>\n", __func__);
+
+	if (phydm_clm_mntr_racing_chk(dm))
+		return clm_chk_result;
+
+	clm_para.clm_app = CLM_BACKGROUND;
+	clm_para.clm_lv = CLM_LV_1;
+	clm_para.mntr_time = monitor_time;
+	if (ccx->clm_mntr_mode == CLM_DRIVER_MNTR) {
+		if (phydm_clm_mntr_set(dm, &clm_para))
+			clm_chk_result = true;
+	} else {
+		if (monitor_time >= 262)
+			ccx->clm_period = 65535;
+		else
+			ccx->clm_period = monitor_time * MS_TO_4US_RATIO;
+
+		phydm_clm_h2c(dm, ccx->clm_period, true);
+	}
+
+	return clm_chk_result;
 }
 
-void
-phydm_nhm_set_pw_th(void *dm_void, u8 noise, boolean chk_succ)
+boolean
+phydm_clm_mntr_result(void *dm_void)
 {
 	struct dm_struct *dm = (struct dm_struct *)dm_void;
 	struct ccx_info *ccx = &dm->dm_ccx_info;
-	boolean not_update = false;
-	u8 pw_th_rf20_new = 0;
-	u8 pw_th_u_bnd = 0;
-	s8 noise_diff = 0;
-	u8 point_mean = 15;
-
-	PHYDM_DBG(dm, DBG_ENV_MNTR, "[%s]===>\n", __func__);
+	boolean clm_chk_result = false;
+	u32 val = 0;
 
-	if (*dm->band_width != CHANNEL_WIDTH_20 ||
-	    *dm->band_type == ODM_BAND_5G) {
-		PHYDM_DBG(dm, DBG_ENV_MNTR,  "bandwidth=((%d)), band=((%d))\n",
-			  *dm->band_width, *dm->band_type);
-		phydm_nhm_restore_pw_th(dm);
-		return;
-	}
+	PHYDM_DBG(dm, DBG_ENV_MNTR, "[%s] ======>\n", __func__);
 
-	if (chk_succ) {
-		noise_diff = noise - (ccx->nhm_igi - 10);
-		pw_th_u_bnd = (u8)(noise_diff + 32 + point_mean);
+	if (phydm_clm_mntr_racing_chk(dm))
+		return clm_chk_result;
 
-		pw_th_u_bnd = MIN_2(pw_th_u_bnd, ccx->nhm_pw_th_max);
+	if (ccx->clm_mntr_mode == CLM_DRIVER_MNTR) {
+		if (phydm_clm_get_result(dm)) {
+			PHYDM_DBG(dm, DBG_ENV_MNTR, "Get CLM_rpt success\n");
+			phydm_clm_get_utility(dm);
+			if ((ccx->ccx_watchdog_result & NHM_SUCCESS) &&
+			    ((ccx->nhm_idle_ratio != ENV_MNTR_FAIL)))
+				ccx->nhm_tx_ratio = 100 - ccx->clm_ratio -
+						    ccx->nhm_idle_ratio;
+			else
+				ccx->nhm_tx_ratio = ENV_MNTR_FAIL;
+			clm_chk_result = true;
+		}
+	} else {
+		if (ccx->clm_fw_result_cnt != 0) {
+			val = ccx->clm_fw_result_acc / ccx->clm_fw_result_cnt;
+			ccx->clm_ratio = (u8)val;
+			clm_chk_result = true;
+		} else {
+			ccx->clm_ratio = 0;
+		}
 
 		PHYDM_DBG(dm, DBG_ENV_MNTR,
-			  "noise_diff=((%d)), max=((%d)), pw_th_u_bnd=((%d))\n",
-			  noise_diff, ccx->nhm_pw_th_max, pw_th_u_bnd);
+			  "clm_fw_result_acc=%d, clm_fw_result_cnt=%d\n",
+			  ccx->clm_fw_result_acc, ccx->clm_fw_result_cnt);
 
-		if (pw_th_u_bnd > ccx->pw_th_rf20_cur) {
-			pw_th_rf20_new = ccx->pw_th_rf20_cur + 1;
-		} else if (pw_th_u_bnd < ccx->pw_th_rf20_cur) {
-			if (ccx->pw_th_rf20_cur > ccx->pw_th_rf20_ori)
-				pw_th_rf20_new = ccx->pw_th_rf20_cur - 1;
-			else /*ccx->pw_th_rf20_cur == ccx->pw_th_ori*/
-				not_update = true;
-		} else {/*pw_th_u_bnd == ccx->pw_th_rf20_cur*/
-			not_update = true;
-		}
-	} else {
-		if (ccx->pw_th_rf20_cur > ccx->pw_th_rf20_ori)
-			pw_th_rf20_new = ccx->pw_th_rf20_cur - 1;
-		else /*ccx->pw_th_rf20_cur == ccx->pw_th_ori*/
-			not_update = true;
+		ccx->nhm_tx_ratio = ENV_MNTR_FAIL;
+		ccx->clm_fw_result_acc = 0;
+		ccx->clm_fw_result_cnt = 0;
 	}
 
-	PHYDM_DBG(dm, DBG_ENV_MNTR, "pw_th_cur=((%d)), pw_th_new=((%d))\n",
-		  ccx->pw_th_rf20_cur, pw_th_rf20_new);
+	PHYDM_DBG(dm, DBG_ENV_MNTR, "clm_ratio=%d\n", ccx->clm_ratio);
 
-	if (!not_update) {
-		odm_set_bb_reg(dm, R_0x82c, 0x3f, pw_th_rf20_new);
-		ccx->pw_th_rf20_cur = pw_th_rf20_new;
-	}
+	return clm_chk_result;
 }
 
-void
-phydm_nhm_dym_pw_th(void *dm_void)
+void phydm_set_clm_mntr_mode(void *dm_void, enum clm_monitor_mode mode)
 {
 	struct dm_struct *dm = (struct dm_struct *)dm_void;
-	struct ccx_info *ccx = &dm->dm_ccx_info;
-	u8 i = 0;
-	u8 n_sum = 0;
-	u8 noise = 0;
-	boolean chk_succ = false;
+	struct ccx_info *ccx_info = &dm->dm_ccx_info;
 
-	PHYDM_DBG(dm, DBG_ENV_MNTR, "[%s]===>\n", __func__);
+	if (ccx_info->clm_mntr_mode != mode) {
+		ccx_info->clm_mntr_mode = mode;
+		phydm_ccx_hw_restart(dm);
 
-	for (i = 0; i < NHM_RPT_NUM - 3; i++) {
-		n_sum = ccx->nhm_result[i] + ccx->nhm_result[i + 1] +
-			ccx->nhm_result[i + 2] + ccx->nhm_result[i + 3];
-		if (n_sum >= ccx->nhm_sl_pw_th) {
-			PHYDM_DBG(dm, DBG_ENV_MNTR, "Do sl[%d:%d]\n", i, i + 3);
-			chk_succ = true;
-			noise = phydm_nhm_cal_wgt_avg(dm, i, i + 3, n_sum);
-			break;
-		}
+		if (mode == CLM_DRIVER_MNTR)
+			phydm_clm_h2c(dm, CLM_PERIOD_MAX, 0);
 	}
+}
 
-	if (!chk_succ)
-		PHYDM_DBG(dm, DBG_ENV_MNTR, "SL method failed!\n");
+void phydm_clm_init(void *dm_void)
+{
+	struct dm_struct *dm = (struct dm_struct *)dm_void;
+	struct ccx_info *ccx = &dm->dm_ccx_info;
 
-	phydm_nhm_set_pw_th(dm, noise, chk_succ);
+	PHYDM_DBG(dm, DBG_ENV_MNTR, "[%s]===>\n", __func__);
+	ccx->clm_ongoing = false;
+	ccx->clm_manual_ctrl = 0;
+	ccx->clm_mntr_mode = CLM_DRIVER_MNTR;
+	ccx->clm_period = 0;
+	ccx->clm_rpt_stamp = 0;
+	phydm_clm_setting(dm, 65535);
 }
 
-boolean
-phydm_nhm_dym_pw_th_en(void *dm_void)
+void phydm_clm_dbg(void *dm_void, char input[][16], u32 *_used, char *output,
+		   u32 *_out_len)
 {
 	struct dm_struct *dm = (struct dm_struct *)dm_void;
 	struct ccx_info *ccx = &dm->dm_ccx_info;
-	struct phydm_iot_center	*iot_table = &dm->iot_table;
+	char help[] = "-h";
+	u32 var1[10] = {0};
+	u32 used = *_used;
+	u32 out_len = *_out_len;
+	struct clm_para_info clm_para = {0};
+	u32 i;
 
-	if (!(dm->support_ic_type & ODM_RTL8822C))
-		return false;
+	for (i = 0; i < 4; i++) {
+		PHYDM_SSCANF(input[i + 1], DCMD_DECIMAL, &var1[i]);
+	}
 
-	if (ccx->dym_pwth_manual_ctrl)
-		return true;
+	if ((strcmp(input[1], help) == 0)) {
+		PDM_SNPF(out_len, used, output + used, out_len - used,
+			 "CLM Driver Basic-Trigger 262ms: {1}\n");
+		PDM_SNPF(out_len, used, output + used, out_len - used,
+			 "CLM Driver Adv-Trigger: {2} {app} {LV} {0~262ms}\n");
+		PDM_SNPF(out_len, used, output + used, out_len - used,
+			 "CLM FW Trigger: {3} {1:drv, 2:fw}\n");
+		PDM_SNPF(out_len, used, output + used, out_len - used,
+			 "CLM Get Result: {100}\n");
+	} else if (var1[0] == 100) { /* @Get CLM results */
 
-	if (dm->iot_table.phydm_patch_id == 0x100f0401 ||
-	    iot_table->patch_id_100f0401) {
-		return true;
-	} else if (ccx->nhm_dym_pw_th_en) {
-		phydm_nhm_restore_pw_th(dm);
-		return false;
-	} else {
-		return false;
+		if (phydm_clm_get_result(dm))
+			phydm_clm_get_utility(dm);
+
+		PDM_SNPF(out_len, used, output + used, out_len - used,
+			 "clm_rpt_stamp=%d\n", ccx->clm_rpt_stamp);
+
+		PDM_SNPF(out_len, used, output + used, out_len - used,
+			 "clm_ratio:((%d percent)) = (%d us/ %d us)\n",
+			 ccx->clm_ratio, ccx->clm_result << 2,
+			 ccx->clm_period << 2);
+
+		ccx->clm_manual_ctrl = 0;
+	} else if (var1[0] == 3) {
+		phydm_set_clm_mntr_mode(dm, (enum clm_monitor_mode)var1[1]);
+		PDM_SNPF(out_len, used, output + used, out_len - used,
+			 "CLM mode: %s mode\n",
+			 ((ccx->clm_mntr_mode == CLM_FW_MNTR) ? "FW" : "Drv"));
+	} else { /* Set & trigger CLM */
+		ccx->clm_manual_ctrl = 1;
+
+		if (var1[0] == 1) {
+			clm_para.clm_app = CLM_BACKGROUND;
+			clm_para.clm_lv = CLM_LV_4;
+			clm_para.mntr_time = 262;
+			ccx->clm_mntr_mode = CLM_DRIVER_MNTR;
+		} else if (var1[0] == 2) {
+			clm_para.clm_app = (enum clm_application)var1[1];
+			clm_para.clm_lv = (enum phydm_clm_level)var1[2];
+			ccx->clm_mntr_mode = CLM_DRIVER_MNTR;
+			clm_para.mntr_time = (u16)var1[3];
+		}
+
+		PDM_SNPF(out_len, used, output + used, out_len - used,
+			 "app=%d, lv=%d, mode=%s, time=%d ms\n",
+			 clm_para.clm_app, clm_para.clm_lv,
+			 ((ccx->clm_mntr_mode == CLM_FW_MNTR) ? "FW" :
+			 "driver"), clm_para.mntr_time);
+
+		if (phydm_clm_mntr_set(dm, &clm_para))
+			phydm_clm_trigger(dm);
+
+		PDM_SNPF(out_len, used, output + used, out_len - used,
+			 "clm_rpt_stamp=%d\n", ccx->clm_rpt_stamp);
 	}
+
+	*_used = used;
+	*_out_len = out_len;
 }
-#endif
 
-/*Environment Monitor*/
-boolean
-phydm_nhm_mntr_chk(void *dm_void, u16 monitor_time /*unit ms*/)
+#endif /*@#ifdef CLM_SUPPORT*/
+
+u8 phydm_env_mntr_trigger(void *dm_void, struct nhm_para_info *nhm_para,
+			  struct clm_para_info *clm_para,
+			  struct env_trig_rpt *trig_rpt)
 {
+	u8 trigger_result = 0;
+#if (defined(NHM_SUPPORT) && defined(CLM_SUPPORT))
 	struct dm_struct *dm = (struct dm_struct *)dm_void;
 	struct ccx_info *ccx = &dm->dm_ccx_info;
-	struct nhm_para_info nhm_para = {0};
-	boolean nhm_chk_result = false;
-	boolean nhm_polling_result = false;
-	u32 sys_return_time = 0;
+	boolean nhm_set_ok = false;
+	boolean clm_set_ok = false;
 
-	PHYDM_DBG(dm, DBG_ENV_MNTR, "[%s]===>\n", __func__);
+	PHYDM_DBG(dm, DBG_ENV_MNTR, "[%s] ======>\n", __func__);
 
-	if (ccx->nhm_manual_ctrl) {
-		PHYDM_DBG(dm, DBG_ENV_MNTR, "NHM in manual ctrl\n");
-		return nhm_chk_result;
-	}
-	sys_return_time = ccx->nhm_trigger_time + MAX_ENV_MNTR_TIME;
-	if (ccx->nhm_app != NHM_BACKGROUND &&
-	    (sys_return_time > dm->phydm_sys_up_time)) {
-		PHYDM_DBG(dm, DBG_ENV_MNTR,
-			  "nhm_app=%d, trigger_time %d, sys_time=%d\n",
-			  ccx->nhm_app, ccx->nhm_trigger_time,
-			  dm->phydm_sys_up_time);
+	/*@[NHM]*/
+	nhm_set_ok = phydm_nhm_mntr_set(dm, nhm_para);
 
-		return nhm_chk_result;
+	/*@[CLM]*/
+	if (ccx->clm_mntr_mode == CLM_DRIVER_MNTR) {
+		clm_set_ok = phydm_clm_mntr_set(dm, clm_para);
+	} else if (ccx->clm_mntr_mode == CLM_FW_MNTR) {
+		phydm_clm_h2c(dm, CLM_PERIOD_MAX, true);
+		trigger_result |= CLM_SUCCESS;
 	}
 
-	/*[NHM get result & calculate Utility----------------------------*/
-	nhm_polling_result = phydm_nhm_get_result(dm);
-	if (nhm_polling_result) {
-		PHYDM_DBG(dm, DBG_ENV_MNTR, "Get NHM_rpt success\n");
-		phydm_nhm_get_utility(dm);
+	if (nhm_set_ok) {
+		phydm_nhm_trigger(dm);
+		trigger_result |= NHM_SUCCESS;
 	}
 
-	#ifdef NHM_DYM_PW_TH_SUPPORT
-	ccx->nhm_dym_pw_th_en = phydm_nhm_dym_pw_th_en(dm);
-	if (ccx->nhm_dym_pw_th_en) {
-		if (nhm_polling_result)
-			phydm_nhm_dym_pw_th(dm);
-		else
-			phydm_nhm_set_pw_th(dm, 0x0, false);
+	if (clm_set_ok) {
+		phydm_clm_trigger(dm);
+		trigger_result |= CLM_SUCCESS;
 	}
-	#endif
-
-	/*[NHM trigger setting]------------------------------------------*/
-	nhm_para.incld_txon = NHM_EXCLUDE_TXON;
-	nhm_para.incld_cca = NHM_EXCLUDE_CCA;
-	nhm_para.div_opt = NHM_CNT_ALL;
-	nhm_para.nhm_app = NHM_BACKGROUND;
-	nhm_para.nhm_lv = NHM_LV_1;
-	nhm_para.en_1db_mode = false;
-	nhm_para.mntr_time = monitor_time;
 
-	#ifdef NHM_DYM_PW_TH_SUPPORT
-	if (ccx->nhm_dym_pw_th_en) {
-		nhm_para.div_opt = NHM_VALID;
-		nhm_para.mntr_time = monitor_time >> ccx->nhm_period_decre;
-	}
-	#endif
+	/*@monitor for the test duration*/
+	ccx->start_time = odm_get_current_time(dm);
 
-	nhm_chk_result = phydm_nhm_mntr_set(dm, &nhm_para);
+	trig_rpt->nhm_rpt_stamp = ccx->nhm_rpt_stamp;
+	trig_rpt->clm_rpt_stamp = ccx->clm_rpt_stamp;
 
-	return nhm_chk_result;
+	PHYDM_DBG(dm, DBG_ENV_MNTR, "nhm_rpt_stamp=%d, clm_rpt_stamp=%d,\n\n",
+		  trig_rpt->nhm_rpt_stamp, trig_rpt->clm_rpt_stamp);
+#endif
+	return trigger_result;
 }
 
-void phydm_nhm_init(void *dm_void)
+u8 phydm_env_mntr_result(void *dm_void, struct env_mntr_rpt *rpt)
 {
+	u8 env_mntr_rpt = 0;
+#if (defined(NHM_SUPPORT) && defined(CLM_SUPPORT))
 	struct dm_struct *dm = (struct dm_struct *)dm_void;
 	struct ccx_info *ccx = &dm->dm_ccx_info;
+	u64 progressing_time = 0;
+	u32 val_tmp = 0;
 
-	PHYDM_DBG(dm, DBG_ENV_MNTR, "[%s]===>\n", __func__);
-	PHYDM_DBG(dm, DBG_ENV_MNTR, "cur_igi=0x%x\n",
-		  dm->dm_dig_table.cur_ig_value);
+	/*@monitor for the test duration*/
+	progressing_time = odm_get_progressing_time(dm, ccx->start_time);
+	PHYDM_DBG(dm, DBG_ENV_MNTR, "[%s] ======>\n", __func__);
+	PHYDM_DBG(dm, DBG_ENV_MNTR, "env_time=%lld\n", progressing_time);
 
-	ccx->nhm_app = NHM_BACKGROUND;
-	ccx->nhm_igi = 0xff;
+	/*@Get NHM result*/
+	if (phydm_nhm_get_result(dm)) {
+		PHYDM_DBG(dm, DBG_ENV_MNTR, "Get NHM_rpt success\n");
+		phydm_nhm_get_utility(dm);
+		rpt->nhm_ratio = ccx->nhm_ratio;
+		rpt->nhm_env_ratio = ccx->nhm_env_ratio;
+		rpt->nhm_idle_ratio = ccx->nhm_idle_ratio;
+		rpt->nhm_noise_pwr = ccx->nhm_level;
+		rpt->nhm_pwr = ccx->nhm_pwr;
+		env_mntr_rpt |= NHM_SUCCESS;
 
-	/*Set NHM threshold*/
-	ccx->nhm_ongoing = false;
-	ccx->nhm_set_lv = NHM_RELEASE;
+		odm_move_memory(dm, &rpt->nhm_result[0],
+				&ccx->nhm_result[0], NHM_RPT_NUM);
+	} else {
+		rpt->nhm_ratio = ENV_MNTR_FAIL;
+		rpt->nhm_env_ratio = ENV_MNTR_FAIL;
+		rpt->nhm_idle_ratio = ENV_MNTR_FAIL;
+	}
 
-	if (phydm_nhm_th_update_chk(dm, ccx->nhm_app, &ccx->nhm_th[0],
-				    (u32 *)&ccx->nhm_igi, false, 0))
-		phydm_nhm_set_th_reg(dm);
+	/*@Get CLM result*/
+	if (ccx->clm_mntr_mode == CLM_DRIVER_MNTR) {
+		if (phydm_clm_get_result(dm)) {
+			PHYDM_DBG(dm, DBG_ENV_MNTR, "Get CLM_rpt success\n");
+			phydm_clm_get_utility(dm);
+			env_mntr_rpt |= CLM_SUCCESS;
+			rpt->clm_ratio = ccx->clm_ratio;
+			if ((env_mntr_rpt & NHM_SUCCESS) &&
+			    (rpt->nhm_idle_ratio != ENV_MNTR_FAIL))
+				rpt->nhm_tx_ratio = 100 - rpt->clm_ratio -
+						    rpt->nhm_idle_ratio;
+			else
+				rpt->nhm_tx_ratio = ENV_MNTR_FAIL;
+		} else {
+			rpt->clm_ratio = ENV_MNTR_FAIL;
+			rpt->nhm_tx_ratio = ENV_MNTR_FAIL;
+		}
+	} else {
+		if (ccx->clm_fw_result_cnt != 0) {
+			val_tmp = ccx->clm_fw_result_acc
+			/ ccx->clm_fw_result_cnt;
+			ccx->clm_ratio = (u8)val_tmp;
+		} else {
+			ccx->clm_ratio = 0;
+		}
 
-	ccx->nhm_period = 0;
+		rpt->clm_ratio = ccx->clm_ratio;
+		PHYDM_DBG(dm, DBG_ENV_MNTR,
+			  "clm_fw_result_acc=%d, clm_fw_result_cnt=%d\n",
+			  ccx->clm_fw_result_acc, ccx->clm_fw_result_cnt);
 
-	ccx->nhm_include_cca = NHM_CCA_INIT;
-	ccx->nhm_include_txon = NHM_TXON_INIT;
-	ccx->nhm_divider_opt = NHM_CNT_INIT;
+		rpt->nhm_tx_ratio = ENV_MNTR_FAIL;
+		ccx->clm_fw_result_acc = 0;
+		ccx->clm_fw_result_cnt = 0;
+		env_mntr_rpt |= CLM_SUCCESS;
+	}
 
-	ccx->nhm_manual_ctrl = 0;
-	ccx->nhm_rpt_stamp = 0;
+	rpt->nhm_rpt_stamp = ccx->nhm_rpt_stamp;
+	rpt->clm_rpt_stamp = ccx->clm_rpt_stamp;
 
-	#ifdef NHM_DYM_PW_TH_SUPPORT
-	if (dm->support_ic_type & ODM_RTL8822C) {
-		ccx->nhm_dym_pw_th_en = false;
-		ccx->pw_th_rf20_ori = (u8)odm_get_bb_reg(dm, R_0x82c, 0x3f);
-		ccx->pw_th_rf20_cur = ccx->pw_th_rf20_ori;
-		ccx->nhm_pw_th_max = 63;
-		ccx->nhm_sl_pw_th = 100; /*39%*/
-		ccx->nhm_period_decre = 1;
-		ccx->dym_pwth_manual_ctrl = false;
-	}
-	#endif
+	PHYDM_DBG(dm, DBG_ENV_MNTR,
+		  "IGI=0x%x, nhm_ratio=%d, nhm_env_ratio=%d, clm_ratio=%d, nhm_rpt_stamp=%d, clm_rpt_stamp=%d\n\n",
+		  ccx->nhm_igi, rpt->nhm_ratio, rpt->nhm_env_ratio,
+		  rpt->clm_ratio, rpt->nhm_rpt_stamp, rpt->clm_rpt_stamp);
+#endif
+	return env_mntr_rpt;
 }
 
-void phydm_nhm_dbg(void *dm_void, char input[][16], u32 *_used, char *output,
-		   u32 *_out_len)
+void phydm_env_mntr_dbg(void *dm_void, char input[][16], u32 *_used,
+			char *output, u32 *_out_len)
 {
 	struct dm_struct *dm = (struct dm_struct *)dm_void;
-	struct ccx_info *ccx = &dm->dm_ccx_info;
-	struct nhm_para_info nhm_para = {0};
 	char help[] = "-h";
 	u32 var1[10] = {0};
 	u32 used = *_used;
 	u32 out_len = *_out_len;
-	u8 result_tmp = 0;
+	struct clm_para_info clm_para = {0};
+	struct nhm_para_info nhm_para = {0};
+	struct env_mntr_rpt rpt = {0};
+	struct env_trig_rpt trig_rpt = {0};
+	struct ccx_info *ccx = &dm->dm_ccx_info;
+	u8 set_result = 0;
 	u8 i = 0;
 
 	PHYDM_SSCANF(input[1], DCMD_DECIMAL, &var1[0]);
 
 	if ((strcmp(input[1], help) == 0)) {
 		PDM_SNPF(out_len, used, output + used, out_len - used,
-			 "NHM Basic-Trigger 262ms: {1}\n");
-
+			 "Basic-Trigger 262ms: {1}\n");
 		PDM_SNPF(out_len, used, output + used, out_len - used,
-			 "NHM Adv-Trigger: {2} {Include TXON} {Include CCA}\n{0:Cnt_all, 1:Cnt valid} {App:5 for dbg} {LV:1~4} {0~262ms}, 1dB mode :{en} {t[0](RSSI)}\n");
-		#ifdef NHM_DYM_PW_TH_SUPPORT
-		if (dm->support_ic_type & ODM_RTL8822C) {
-			PDM_SNPF(out_len, used, output + used, out_len - used,
-				 "NHM dym_pw_th: {3} {0:off}\n");
-			PDM_SNPF(out_len, used, output + used, out_len - used,
-				 "NHM dym_pw_th: {3} {1:on} {max} {period_decre} {sl_th}\n");
-			PDM_SNPF(out_len, used, output + used, out_len - used,
-				 "NHM dym_pw_th: {3} {2:fast on}\n");
-		}
-		#endif
+			 "Get Result: {100}\n");
+	} else if (var1[0] == 100) { /* Get results */
+		set_result = phydm_env_mntr_result(dm, &rpt);
 
 		PDM_SNPF(out_len, used, output + used, out_len - used,
-			 "NHM Get Result: {100}\n");
-	} else if (var1[0] == 100) { /*Get NHM results*/
-
+			 "Set Result=%d\n nhm_ratio=%d nhm_env_ratio=%d clm_ratio=%d\n nhm_rpt_stamp=%d, clm_rpt_stamp=%d,\n",
+			 set_result, rpt.nhm_ratio, rpt.nhm_env_ratio,
+			 rpt.clm_ratio, rpt.nhm_rpt_stamp, rpt.clm_rpt_stamp);
 		PDM_SNPF(out_len, used, output + used, out_len - used,
-			 "IGI=0x%x, rpt_stamp=%d\n", ccx->nhm_igi,
-			 ccx->nhm_rpt_stamp);
-
-		if (phydm_nhm_get_result(dm)) {
-			for (i = 0; i < NHM_RPT_NUM; i++) {
-				result_tmp = ccx->nhm_result[i];
-				PDM_SNPF(out_len, used, output + used,
-					 out_len - used,
-					 "nhm_rpt[%d] = %d (%d percent)\n",
-					 i, result_tmp,
-					 (((result_tmp * 100) + 128) >> 8));
-			}
-			phydm_nhm_get_utility(dm);
-
-			PDM_SNPF(out_len, used, output + used, out_len - used,
-				 "NHM_noise: valid: %d percent, noise(RSSI) = %d\n",
-				 ccx->nhm_level_valid, ccx->nhm_level);
-			PDM_SNPF(out_len, used, output + used, out_len - used,
-				 "NHM_pwr: nhm_pwr (RSSI) = %d\n", ccx->nhm_pwr);
-			PDM_SNPF(out_len, used, output + used, out_len - used,
-				 "ratio: nhm_ratio=%d, nhm_env_ratio=%d\n",
-				 ccx->nhm_ratio, ccx->nhm_env_ratio);
-		} else {
+			 "nhm_idle_ratio=%d, nhm_tx_ratio=%d\n",
+			 rpt.nhm_idle_ratio, rpt.nhm_tx_ratio);
+		for (i = 0; i <= 11; i++) {
 			PDM_SNPF(out_len, used, output + used, out_len - used,
-				 "Get NHM_rpt Fail\n");
-		}
-		ccx->nhm_manual_ctrl = 0;
-	#ifdef NHM_DYM_PW_TH_SUPPORT
-	} else if (var1[0] == 3) { /*NMH dym_pw_th*/
-		if (dm->support_ic_type & ODM_RTL8822C) {
-			for (i = 1; i < 7; i++) {
-				PHYDM_SSCANF(input[i + 1], DCMD_DECIMAL,
-					     &var1[i]);
-			}
-
-			if (var1[1] == 1) {
-				ccx->nhm_dym_pw_th_en = true;
-				ccx->nhm_pw_th_max = (u8)var1[2];
-				ccx->nhm_period_decre = (u8)var1[3];
-				ccx->nhm_sl_pw_th = (u8)var1[4];
-				ccx->dym_pwth_manual_ctrl = true;
-			} else if (var1[1] == 2) {
-				ccx->nhm_dym_pw_th_en = true;
-				ccx->nhm_pw_th_max = 63;
-				ccx->nhm_period_decre = 1;
-				ccx->nhm_sl_pw_th = 100;
-				ccx->dym_pwth_manual_ctrl = true;
-			} else {
-				ccx->nhm_dym_pw_th_en = false;
-				phydm_nhm_restore_pw_th(dm);
-				ccx->dym_pwth_manual_ctrl = false;
-			}
-		}
-	#endif
-	} else { /*NMH trigger*/
-		ccx->nhm_manual_ctrl = 1;
-
-		for (i = 1; i < 9; i++) {
-			PHYDM_SSCANF(input[i + 1], DCMD_DECIMAL,
-				     &var1[i]);
-		}
-
-		if (var1[0] == 1) {
-			nhm_para.incld_txon = NHM_EXCLUDE_TXON;
-			nhm_para.incld_cca = NHM_EXCLUDE_CCA;
-			nhm_para.div_opt = NHM_CNT_ALL;
-			nhm_para.nhm_app = NHM_DBG;
-			nhm_para.nhm_lv = NHM_LV_4;
-			nhm_para.mntr_time = 262;
-			nhm_para.en_1db_mode = false;
-			nhm_para.nhm_th0_manual = 0;
-		} else {
-			nhm_para.incld_txon = (enum nhm_option_txon_all)var1[1];
-			nhm_para.incld_cca = (enum nhm_option_cca_all)var1[2];
-			nhm_para.div_opt = (enum nhm_divider_opt_all)var1[3];
-			nhm_para.nhm_app = (enum nhm_application)var1[4];
-			nhm_para.nhm_lv = (enum phydm_nhm_level)var1[5];
-			nhm_para.mntr_time = (u16)var1[6];
-			nhm_para.en_1db_mode = (boolean)var1[7];
-			nhm_para.nhm_th0_manual = (u8)var1[8];
-
-			/*some old ic is not supported on NHM divider option */
-			if (dm->support_ic_type & (ODM_RTL8188E | ODM_RTL8723B |
-			    ODM_RTL8195A | ODM_RTL8192E)) {
-				nhm_para.div_opt = NHM_CNT_ALL;
-			}
+				 "nhm_rpt[%d] = %d (%d percent)\n", i,
+				 rpt.nhm_result[i],
+				 (((rpt.nhm_result[i] * 100) + 128) >> 8));
 		}
-
 		PDM_SNPF(out_len, used, output + used, out_len - used,
-			 "txon=%d, cca=%d, dev=%d, app=%d, lv=%d, time=%d ms\n",
-			 nhm_para.incld_txon, nhm_para.incld_cca,
-			 nhm_para.div_opt, nhm_para.nhm_app,
-			 nhm_para.nhm_lv, nhm_para.mntr_time);
+			 "[NHM] valid: %d percent, noise(RSSI) = %d\n",
+			 ccx->nhm_level_valid, ccx->nhm_level);
+	} else { /* Set & trigger*/
+		/*nhm para*/
+		nhm_para.incld_txon = NHM_EXCLUDE_TXON;
+		nhm_para.incld_cca = NHM_EXCLUDE_CCA;
+		nhm_para.div_opt = NHM_CNT_ALL;
+		nhm_para.nhm_app = NHM_ACS;
+		nhm_para.nhm_lv = NHM_LV_2;
+		nhm_para.mntr_time = 262;
+		nhm_para.en_1db_mode = false;
 
-		PDM_SNPF(out_len, used, output + used, out_len - used,
-			 "en_1db_mode=%d, th0(for 1db mode)=%d\n",
-			 nhm_para.en_1db_mode, nhm_para.nhm_th0_manual);
+		/*clm para*/
+		clm_para.clm_app = CLM_ACS;
+		clm_para.clm_lv = CLM_LV_2;
+		clm_para.mntr_time = 262;
 
-		if (phydm_nhm_mntr_set(dm, &nhm_para))
-			phydm_nhm_trigger(dm);
+		set_result = phydm_env_mntr_trigger(dm, &nhm_para,
+						    &clm_para, &trig_rpt);
 
 		PDM_SNPF(out_len, used, output + used, out_len - used,
-			 "IGI=0x%x, rpt_stamp=%d\n", ccx->nhm_igi,
-			 ccx->nhm_rpt_stamp);
-
-		for (i = 0; i < NHM_TH_NUM; i++) {
-			PDM_SNPF(out_len, used, output + used, out_len - used,
-				 "NHM_th[%d] RSSI = %d\n", i,
-				 NTH_TH_2_RSSI(ccx->nhm_th[i]));
-		}
+			 "Set Result=%d, nhm_rpt_stamp=%d, clm_rpt_stamp=%d\n",
+			 set_result, trig_rpt.nhm_rpt_stamp,
+			 trig_rpt.clm_rpt_stamp);
 	}
 
 	*_used = used;
 	*_out_len = out_len;
 }
 
-#endif /*@#ifdef NHM_SUPPORT*/
-
-#ifdef CLM_SUPPORT
+#ifdef FAHM_SUPPORT
 
-void phydm_clm_racing_release(void *dm_void)
+void phydm_fahm_racing_release(void *dm_void)
 {
 	struct dm_struct *dm = (struct dm_struct *)dm_void;
 	struct ccx_info *ccx = &dm->dm_ccx_info;
+	u32 value32 = 0;
 
-	PHYDM_DBG(dm, DBG_ENV_MNTR, "[%s]===>\n", __func__);
-	PHYDM_DBG(dm, DBG_ENV_MNTR, "lv:(%d)->(0)\n", ccx->clm_set_lv);
+	PHYDM_DBG(dm, DBG_ENV_MNTR, "fahm_racing_release : lv:(%d)->(0)\n",
+		  ccx->fahm_set_lv);
 
-	ccx->clm_ongoing = false;
-	ccx->clm_set_lv = CLM_RELEASE;
-	ccx->clm_app = CLM_BACKGROUND;
+	ccx->fahm_ongoing = false;
+	ccx->fahm_set_lv = FAHM_RELEASE;
+
+	if (!(ccx->fahm_app == FAHM_BACKGROUND || ccx->fahm_app == FAHM_ACS))
+		phydm_pause_func(dm, F00_DIG, PHYDM_RESUME,
+				 PHYDM_PAUSE_LEVEL_1, 1, &value32);
+
+	ccx->fahm_app = FAHM_BACKGROUND;
 }
 
-u8 phydm_clm_racing_ctrl(void *dm_void, enum phydm_clm_level clm_lv)
+u8 phydm_fahm_racing_ctrl(void *dm_void, enum phydm_fahm_level lv)
 {
 	struct dm_struct *dm = (struct dm_struct *)dm_void;
 	struct ccx_info *ccx = &dm->dm_ccx_info;
 	u8 set_result = PHYDM_SET_SUCCESS;
-	/*@acquire to control CLM API*/
+	/*acquire to control FAHM API*/
 
-	PHYDM_DBG(dm, DBG_ENV_MNTR, "clm_ongoing=%d, lv:(%d)->(%d)\n",
-		  ccx->clm_ongoing, ccx->clm_set_lv, clm_lv);
-	if (ccx->clm_ongoing) {
-		if (clm_lv <= ccx->clm_set_lv) {
+	PHYDM_DBG(dm, DBG_ENV_MNTR, "fahm_ongoing=%d, lv:(%d)->(%d)\n",
+		  ccx->fahm_ongoing, ccx->fahm_set_lv, lv);
+	if (ccx->fahm_ongoing) {
+		if (lv <= ccx->fahm_set_lv) {
 			set_result = PHYDM_SET_FAIL;
 		} else {
 			phydm_ccx_hw_restart(dm);
-			ccx->clm_ongoing = false;
+			ccx->fahm_ongoing = false;
 		}
 	}
 
 	if (set_result)
-		ccx->clm_set_lv = clm_lv;
+		ccx->fahm_set_lv = lv;
 
-	PHYDM_DBG(dm, DBG_ENV_MNTR, "clm racing success=%d\n", set_result);
+	PHYDM_DBG(dm, DBG_ENV_MNTR, "fahm racing success=%d\n", set_result);
 	return set_result;
 }
 
-void phydm_clm_c2h_report_handler(void *dm_void, u8 *cmd_buf, u8 cmd_len)
-{
-	struct dm_struct *dm = (struct dm_struct *)dm_void;
-	struct ccx_info *ccx_info = &dm->dm_ccx_info;
-	u8 clm_report = cmd_buf[0];
-	/*@u8 clm_report_idx = cmd_buf[1];*/
-
-	if (cmd_len >= 12)
-		return;
-
-	ccx_info->clm_fw_result_acc += clm_report;
-	ccx_info->clm_fw_result_cnt++;
-
-	PHYDM_DBG(dm, DBG_ENV_MNTR, "[%d] clm_report= %d\n",
-		  ccx_info->clm_fw_result_cnt, clm_report);
-}
-
-void phydm_clm_h2c(void *dm_void, u16 obs_time, u8 fw_clm_en)
-{
-	struct dm_struct *dm = (struct dm_struct *)dm_void;
-	u8 h2c_val[H2C_MAX_LENGTH] = {0};
-	u8 i = 0;
-	u8 obs_time_idx = 0;
-
-	PHYDM_DBG(dm, DBG_ENV_MNTR, "[%s] ======>\n", __func__);
-	PHYDM_DBG(dm, DBG_ENV_MNTR, "obs_time_index=%d *4 us\n", obs_time);
-
-	for (i = 1; i <= 16; i++) {
-		if (obs_time & BIT(16 - i)) {
-			obs_time_idx = 16 - i;
-			break;
-		}
-	}
-#if 0
-	obs_time = (2 ^ 16 - 1)~(2 ^ 15)  => obs_time_idx = 15  (65535 ~32768)
-	obs_time = (2 ^ 15 - 1)~(2 ^ 14)  => obs_time_idx = 14
-	...
-	...
-	...
-	obs_time = (2 ^ 1 - 1)~(2 ^ 0)  => obs_time_idx = 0
-
-#endif
-
-	h2c_val[0] = obs_time_idx | (((fw_clm_en) ? 1 : 0) << 7);
-	h2c_val[1] = CLM_MAX_REPORT_TIME;
-
-	PHYDM_DBG(dm, DBG_ENV_MNTR, "PHYDM h2c[0x4d]=0x%x %x %x %x %x %x %x\n",
-		  h2c_val[6], h2c_val[5], h2c_val[4], h2c_val[3], h2c_val[2],
-		  h2c_val[1], h2c_val[0]);
-
-	odm_fill_h2c_cmd(dm, PHYDM_H2C_FW_CLM_MNTR, H2C_MAX_LENGTH, h2c_val);
-}
-
-void phydm_clm_setting(void *dm_void, u16 clm_period /*@4us sample 1 time*/)
-{
+void phydm_fahm_trigger(void *dm_void)
+{ /*@unit (4us)*/
 	struct dm_struct *dm = (struct dm_struct *)dm_void;
 	struct ccx_info *ccx = &dm->dm_ccx_info;
+	u32 reg = 0;
 
-	if (ccx->clm_period != clm_period) {
-		if (dm->support_ic_type & ODM_IC_11AC_SERIES)
-			odm_set_bb_reg(dm, R_0x990, MASKLWORD, clm_period);
-		#ifdef PHYDM_IC_JGR3_SERIES_SUPPORT
-		else if (dm->support_ic_type & ODM_IC_JGR3_SERIES)
-			odm_set_bb_reg(dm, R_0x1e40, MASKLWORD, clm_period);
-		#endif
-		else if (dm->support_ic_type & ODM_IC_11N_SERIES)
-			odm_set_bb_reg(dm, R_0x894, MASKLWORD, clm_period);
+	PHYDM_DBG(dm, DBG_ENV_MNTR, "[%s]===>\n", __func__);
 
-		ccx->clm_period = clm_period;
-		PHYDM_DBG(dm, DBG_ENV_MNTR,
-			  "Update CLM period ((%d)) -> ((%d))\n",
-			  ccx->clm_period, clm_period);
+	switch (dm->ic_ip_series) {
+	case PHYDM_IC_JGR3:
+		reg = R_0x1e60;
+		break;
+	case PHYDM_IC_AC:
+		reg = R_0x994;
+		break;
+	case PHYDM_IC_N:
+		reg = R_0x890;
+		break;
+	default:
+		break;
 	}
 
-	PHYDM_DBG(dm, DBG_ENV_MNTR, "Set CLM period=%d * 4us\n",
-		  ccx->clm_period);
-}
-
-void phydm_clm_trigger(void *dm_void)
-{
-	struct dm_struct *dm = (struct dm_struct *)dm_void;
-	struct ccx_info *ccx = &dm->dm_ccx_info;
-	u32 reg1 = 0;
-
-	if (dm->support_ic_type & ODM_IC_11AC_SERIES)
-		reg1 = R_0x994;
-	#ifdef PHYDM_IC_JGR3_SERIES_SUPPORT
-	else if (dm->support_ic_type & ODM_IC_JGR3_SERIES)
-		reg1 = R_0x1e60;
-	#endif
-	else
-		reg1 = R_0x890;
-	PHYDM_DBG(dm, DBG_ENV_MNTR, "[%s]===>\n", __func__);
-
-	odm_set_bb_reg(dm, reg1, BIT(0), 0x0);
-	odm_set_bb_reg(dm, reg1, BIT(0), 0x1);
+	odm_set_bb_reg(dm, reg, BIT(2), 0);
+	odm_set_bb_reg(dm, reg, BIT(2), 1);
 
-	ccx->clm_trigger_time = dm->phydm_sys_up_time;
-	ccx->clm_rpt_stamp++;
-	ccx->clm_ongoing = true;
+	ccx->fahm_trigger_time = dm->phydm_sys_up_time;
+	ccx->fahm_rpt_stamp++;
+	ccx->fahm_ongoing = true;
 }
 
 boolean
-phydm_clm_check_rdy(void *dm_void)
+phydm_fahm_check_rdy(void *dm_void)
 {
 	struct dm_struct *dm = (struct dm_struct *)dm_void;
 	boolean is_ready = false;
-	u32 reg1 = 0, reg1_bit = 0;
+	u32 reg = 0, reg_bit = 0;
 
-	if (dm->support_ic_type & ODM_IC_11AC_SERIES) {
-		reg1 = R_0xfa4;
-		reg1_bit = 16;
-	#ifdef PHYDM_IC_JGR3_SERIES_SUPPORT
-	} else if (dm->support_ic_type & ODM_IC_JGR3_SERIES) {
-		reg1 = R_0x2d88;
-		reg1_bit = 16;
-	#endif
-	} else if (dm->support_ic_type & ODM_IC_11N_SERIES) {
-		if (dm->support_ic_type & (ODM_RTL8710B | ODM_RTL8721D |
-					ODM_RTL8710C)) {
-			reg1 = R_0x8b4;
-			reg1_bit = 24;
-		} else {
-			reg1 = R_0x8b4;
-			reg1_bit = 16;
-		}
+	switch (dm->ic_ip_series) {
+	case PHYDM_IC_JGR3:
+		reg = R_0x2d84;
+		reg_bit = 31;
+		break;
+	case PHYDM_IC_AC:
+		reg = R_0x1f98;
+		reg_bit = 31;
+		break;
+	case PHYDM_IC_N:
+		reg = R_0x9f0;
+		reg_bit = 31;
+		break;
+	default:
+		break;
 	}
-	if (odm_get_bb_reg(dm, reg1, BIT(reg1_bit)))
+
+	if (odm_get_bb_reg(dm, reg, BIT(reg_bit)))
 		is_ready = true;
 
-	PHYDM_DBG(dm, DBG_ENV_MNTR, "CLM rdy=%d\n", is_ready);
+	PHYDM_DBG(dm, DBG_ENV_MNTR, "FAHM rdy=%d\n", is_ready);
 
 	return is_ready;
 }
 
-void phydm_clm_get_utility(void *dm_void)
+u8 phydm_fahm_cal_wgt_avg(void *dm_void, u8 start_i, u8 end_i, u16 r_sum,
+			  u16 period)
 {
 	struct dm_struct *dm = (struct dm_struct *)dm_void;
 	struct ccx_info *ccx = &dm->dm_ccx_info;
-	u32 clm_result_tmp;
-
-	if (ccx->clm_period == 0) {
-		PHYDM_DBG(dm, DBG_ENV_MNTR, "[warning] clm_period = 0\n");
-		ccx->clm_ratio = 0;
-	} else if (ccx->clm_period >= 65530) {
-		clm_result_tmp = (u32)(ccx->clm_result * 100);
-		ccx->clm_ratio = (u8)((clm_result_tmp + (1 << 15)) >> 16);
-	} else {
-		clm_result_tmp = (u32)(ccx->clm_result * 100);
-		ccx->clm_ratio = (u8)(clm_result_tmp / (u32)ccx->clm_period);
-	}
-}
+	u8 i = 0;
+	u32 pwr_tmp = 0;
+	u8 pwr = 0;
+	u32 fahm_valid = 0;
 
-boolean
-phydm_clm_get_result(void *dm_void)
-{
-	struct dm_struct *dm = (struct dm_struct *)dm_void;
-	struct ccx_info *ccx_info = &dm->dm_ccx_info;
-	u32 reg1 = 0;
-	u32 val = 0;
+	PHYDM_DBG(dm, DBG_ENV_MNTR, "[%s]===>\n", __func__);
 
-	if (dm->support_ic_type & ODM_IC_11AC_SERIES)
-		reg1 = R_0x994;
-	#ifdef PHYDM_IC_JGR3_SERIES_SUPPORT
-	else if (dm->support_ic_type & ODM_IC_JGR3_SERIES)
-		reg1 = R_0x1e60;
-	#endif
-	else
-		reg1 = R_0x890;
-	if (!(dm->support_ic_type & (ODM_RTL8822C | ODM_RTL8812F |
-				     ODM_RTL8197G | ODM_RTL8723F)))
-		odm_set_bb_reg(dm, reg1, BIT(0), 0x0);
-	if (!(phydm_clm_check_rdy(dm))) {
-		PHYDM_DBG(dm, DBG_ENV_MNTR, "Get CLM report Fail\n");
-		phydm_clm_racing_release(dm);
-		return false;
+	if (r_sum == 0) {
+		PHYDM_DBG(dm, DBG_ENV_MNTR,
+			  "rpt_sum = 0, don't need to update\n");
+		return 0x0;
+	} else if (end_i > FAHM_RPT_NUM - 1) {
+		PHYDM_DBG(dm, DBG_ENV_MNTR,
+			  "[WARNING]end_i is larger than 11!!\n");
+		return 0x0;
 	}
 
-	if (dm->support_ic_type & ODM_IC_11AC_SERIES) {
-		val = odm_get_bb_reg(dm, R_0xfa4, MASKLWORD);
-		ccx_info->clm_result = (u16)val;
-	#ifdef PHYDM_IC_JGR3_SERIES_SUPPORT
-	} else if (dm->support_ic_type & ODM_IC_JGR3_SERIES) {
-		val = odm_get_bb_reg(dm, R_0x2d88, MASKLWORD);
-		ccx_info->clm_result = (u16)val;
-	#endif
-	} else if (dm->support_ic_type & ODM_IC_11N_SERIES) {
-		val = odm_get_bb_reg(dm, R_0x8d0, MASKLWORD);
-		ccx_info->clm_result = (u16)val;
+	for (i = start_i; i <= end_i; i++) {
+		if (i == 0)
+			pwr_tmp += ccx->fahm_result[0] *
+				   MAX_2(ccx->fahm_th[0] - 2, 0);
+		else if (i == (FAHM_RPT_NUM - 1))
+			pwr_tmp += ccx->fahm_result[FAHM_RPT_NUM - 1] *
+				   (ccx->fahm_th[FAHM_TH_NUM - 1] + 2);
+		else
+			pwr_tmp += ccx->fahm_result[i] *
+				   (ccx->fahm_th[i - 1] + ccx->fahm_th[i]) >> 1;
 	}
 
-	PHYDM_DBG(dm, DBG_ENV_MNTR, "CLM result = %d *4 us\n",
-		  ccx_info->clm_result);
-	phydm_clm_racing_release(dm);
-	return true;
+	/* protection for the case of minus pwr(RSSI)*/
+	pwr = (u8)(NTH_TH_2_RSSI(MAX_2(PHYDM_DIV(pwr_tmp, r_sum), 20)));
+	fahm_valid = PHYDM_DIV(r_sum * 100, period);
+	PHYDM_DBG(dm, DBG_ENV_MNTR,
+		  "valid: ((%d)) percent, pwr(RSSI)=((%d))\n",
+		  fahm_valid, pwr);
+
+	return pwr;
 }
 
-void phydm_clm_mntr_fw(void *dm_void, u16 monitor_time /*unit ms*/)
+void phydm_fahm_get_utility(void *dm_void)
 {
 	struct dm_struct *dm = (struct dm_struct *)dm_void;
 	struct ccx_info *ccx = &dm->dm_ccx_info;
-	u32 val = 0;
 
-	/*@[Get CLM report]*/
-	if (ccx->clm_fw_result_cnt != 0) {
-		val = ccx->clm_fw_result_acc / ccx->clm_fw_result_cnt;
-		ccx->clm_ratio = (u8)val;
+	if (ccx->fahm_result_sum >= ccx->fahm_result[0]) {
+		ccx->fahm_pwr = phydm_fahm_cal_wgt_avg(dm, 0, FAHM_RPT_NUM - 1,
+						       ccx->fahm_result_sum,
+						       ccx->fahm_period);
+		ccx->fahm_ratio = phydm_ccx_get_rpt_ratio(dm,
+				  ccx->fahm_result_sum, ccx->fahm_period);
+		ccx->fahm_denom_ratio = phydm_ccx_get_rpt_ratio(dm,
+					ccx->fahm_denom_result,
+					ccx->fahm_period);
 	} else {
-		ccx->clm_ratio = 0;
+		PHYDM_DBG(dm, DBG_ENV_MNTR,
+			  "[warning] fahm_result_sum invalid\n");
+		ccx->fahm_pwr = 0;
+		ccx->fahm_ratio = 0;
+		ccx->fahm_denom_ratio = 0;
 	}
 
 	PHYDM_DBG(dm, DBG_ENV_MNTR,
-		  "clm_fw_result_acc=%d, clm_fw_result_cnt=%d\n",
-		  ccx->clm_fw_result_acc, ccx->clm_fw_result_cnt);
-
-	ccx->clm_fw_result_acc = 0;
-	ccx->clm_fw_result_cnt = 0;
-
-	/*@[CLM trigger]*/
-	if (monitor_time >= 262)
-		ccx->clm_period = 65535;
-	else
-		ccx->clm_period = monitor_time * MS_TO_4US_RATIO;
-
-	phydm_clm_h2c(dm, ccx->clm_period, true);
+		  "fahm_pwr=%d, fahm_ratio=%d, fahm_denom_ratio=%d\n",
+		  ccx->fahm_pwr, ccx->fahm_ratio, ccx->fahm_denom_ratio);
 }
 
 boolean
-phydm_clm_mntr_set(void *dm_void, struct clm_para_info *clm_para)
+phydm_fahm_get_result(void *dm_void)
 {
-	/*@Driver Monitor CLM*/
 	struct dm_struct *dm = (struct dm_struct *)dm_void;
 	struct ccx_info *ccx = &dm->dm_ccx_info;
-	u16 clm_period = 0;
+	u32 value32 = 0;
+	u32 reg1 = 0;
+	u32 reg2 = 0;
+	u8 i = 0;
+	u32 fahm_rpt_sum_tmp = 0;
 
-	if (clm_para->mntr_time == 0)
-		return false;
+	switch (dm->ic_ip_series) {
+	case PHYDM_IC_JGR3:
+		reg1 = R_0x2d6c;
+		reg2 = R_0x2d84;
+		break;
+	case PHYDM_IC_AC:
+		reg1 = R_0x1f80;
+		reg2 = R_0x1f98;
+		break;
+	case PHYDM_IC_N:
+		reg1 = R_0x9d8;
+		reg2 = R_0x9f0;
+		break;
+	default:
+		break;
+	}
 
-	if (clm_para->clm_lv >= CLM_MAX_NUM) {
-		PHYDM_DBG(dm, DBG_ENV_MNTR, "[WARNING] Wrong LV=%d\n",
-			  clm_para->clm_lv);
+	if (!(phydm_fahm_check_rdy(dm))) {
+		PHYDM_DBG(dm, DBG_ENV_MNTR, "Get FAHM report Fail\n");
+		phydm_fahm_racing_release(dm);
 		return false;
 	}
 
-	if (phydm_clm_racing_ctrl(dm, clm_para->clm_lv) == PHYDM_SET_FAIL)
-		return false;
+	/*Get FAHM numerator and sum all fahm_result*/
+	for (i = 0; i < 6; i++) {
+		value32 = odm_get_bb_reg(dm, reg1 + (i << 2), MASKDWORD);
+		ccx->fahm_result[i * 2] = (u16)(value32 & MASKLWORD);
+		ccx->fahm_result[i * 2 + 1] = (u16)((value32 & MASKHWORD) >> 16);
+		fahm_rpt_sum_tmp = (u32)(fahm_rpt_sum_tmp +
+					 ccx->fahm_result[i * 2] +
+					 ccx->fahm_result[i * 2 + 1]);
+	}
+	ccx->fahm_result_sum = (u16)fahm_rpt_sum_tmp;
 
-	if (clm_para->mntr_time >= 262)
-		clm_period = CLM_PERIOD_MAX;
-	else
-		clm_period = clm_para->mntr_time * MS_TO_4US_RATIO;
+	/*Get FAHM Denominator*/
+	ccx->fahm_denom_result = (u16)odm_get_bb_reg(dm, reg2, MASKLWORD);
 
-	ccx->clm_app = clm_para->clm_app;
-	phydm_clm_setting(dm, clm_period);
+	if (!(ccx->fahm_inclu_cck))
+		PHYDM_DBG(dm, DBG_ENV_MNTR,
+			  "===>The following fahm report does not count CCK pkt\n");
+
+	PHYDM_DBG(dm, DBG_ENV_MNTR,
+		  "fahm_result_sum=%d, fahm_denom_result = %d\n",
+		  ccx->fahm_result_sum, ccx->fahm_denom_result);
+
+	PHYDM_DBG(dm, DBG_ENV_MNTR,
+		  "FAHM_Rpt[%d](H->L)[%d %d %d %d %d %d %d %d %d %d %d %d]\n",
+		  ccx->fahm_rpt_stamp, ccx->fahm_result[11],
+		  ccx->fahm_result[10], ccx->fahm_result[9],
+		  ccx->fahm_result[8], ccx->fahm_result[7], ccx->fahm_result[6],
+		  ccx->fahm_result[5], ccx->fahm_result[4], ccx->fahm_result[3],
+		  ccx->fahm_result[2], ccx->fahm_result[1],
+		  ccx->fahm_result[0]);
+
+	phydm_fahm_racing_release(dm);
+
+	if (fahm_rpt_sum_tmp > 0xffff) {
+		PHYDM_DBG(dm, DBG_ENV_MNTR,
+			  "[Warning] Invalid FAHM RPT, total=%d\n",
+			  fahm_rpt_sum_tmp);
+		return false;
+	}
 
 	return true;
 }
 
-boolean
-phydm_clm_mntr_chk(void *dm_void, u16 monitor_time /*unit ms*/)
+void phydm_fahm_set_th_reg(void *dm_void)
 {
 	struct dm_struct *dm = (struct dm_struct *)dm_void;
 	struct ccx_info *ccx = &dm->dm_ccx_info;
-	struct clm_para_info clm_para = {0};
-	boolean clm_chk_result = false;
-	u32 sys_return_time = 0;
+	u32 val = 0;
 
-	PHYDM_DBG(dm, DBG_ENV_MNTR, "[%s] ======>\n", __func__);
-	if (ccx->clm_manual_ctrl) {
-		PHYDM_DBG(dm, DBG_ENV_MNTR, "CLM in manual ctrl\n");
-		return clm_chk_result;
+	/*Set FAHM threshold*/ /*Unit: PWdB U(8,1)*/
+	switch (dm->ic_ip_series) {
+	case PHYDM_IC_JGR3:
+		val = BYTE_2_DWORD(ccx->fahm_th[3], ccx->fahm_th[2],
+				   ccx->fahm_th[1], ccx->fahm_th[0]);
+		odm_set_bb_reg(dm, R_0x1e50, MASKDWORD, val);
+		val = BYTE_2_DWORD(ccx->fahm_th[7], ccx->fahm_th[6],
+				   ccx->fahm_th[5], ccx->fahm_th[4]);
+		odm_set_bb_reg(dm, R_0x1e54, MASKDWORD, val);
+		val = BYTE_2_DWORD(0, ccx->fahm_th[10], ccx->fahm_th[9],
+				   ccx->fahm_th[8]);
+		odm_set_bb_reg(dm, R_0x1e58, 0xffffff, val);
+		break;
+	case PHYDM_IC_AC:
+		val = BYTE_2_DWORD(0, ccx->fahm_th[2], ccx->fahm_th[1],
+				   ccx->fahm_th[0]);
+		odm_set_bb_reg(dm, R_0x1c38, 0xffffff00, val);
+		val = BYTE_2_DWORD(0, ccx->fahm_th[5], ccx->fahm_th[4],
+				   ccx->fahm_th[3]);
+		odm_set_bb_reg(dm, R_0x1c78, 0xffffff00, val);
+		val = BYTE_2_DWORD(0, 0, ccx->fahm_th[7], ccx->fahm_th[6]);
+		odm_set_bb_reg(dm, R_0x1c7c, 0xffff0000, val);
+		val = BYTE_2_DWORD(0, ccx->fahm_th[10], ccx->fahm_th[9],
+				   ccx->fahm_th[8]);
+		odm_set_bb_reg(dm, R_0x1cb8, 0xffffff00, val);
+		break;
+	case PHYDM_IC_N:
+		val = BYTE_2_DWORD(ccx->fahm_th[3], ccx->fahm_th[2],
+				   ccx->fahm_th[1], ccx->fahm_th[0]);
+		odm_set_bb_reg(dm, R_0x970, MASKDWORD, val);
+		val = BYTE_2_DWORD(ccx->fahm_th[7], ccx->fahm_th[6],
+				   ccx->fahm_th[5], ccx->fahm_th[4]);
+		odm_set_bb_reg(dm, R_0x974, MASKDWORD, val);
+		val = BYTE_2_DWORD(0, ccx->fahm_th[10], ccx->fahm_th[9],
+				   ccx->fahm_th[8]);
+		odm_set_bb_reg(dm, R_0x978, 0xffffff, val);
+		break;
+	default:
+		break;
 	}
 
-	sys_return_time = ccx->clm_trigger_time + MAX_ENV_MNTR_TIME;
+	PHYDM_DBG(dm, DBG_ENV_MNTR,
+		  "Update FAHM_th[H->L]=[%d %d %d %d %d %d %d %d %d %d %d]\n",
+		  ccx->fahm_th[10], ccx->fahm_th[9], ccx->fahm_th[8],
+		  ccx->fahm_th[7], ccx->fahm_th[6], ccx->fahm_th[5],
+		  ccx->fahm_th[4], ccx->fahm_th[3], ccx->fahm_th[2],
+		  ccx->fahm_th[1], ccx->fahm_th[0]);
+}
 
-	if (ccx->clm_app != CLM_BACKGROUND &&
-	    sys_return_time > dm->phydm_sys_up_time) {
-		PHYDM_DBG(dm, DBG_ENV_MNTR, "trigger_time %d, sys_time=%d\n",
-			  ccx->clm_trigger_time, dm->phydm_sys_up_time);
+boolean
+phydm_fahm_th_update_chk(void *dm_void, enum fahm_application fahm_app,
+			 u8 *fahm_th, u32 *igi_new, boolean en_1db_mode,
+			 u8 fahm_th0_manual)
+{
+	struct dm_struct *dm = (struct dm_struct *)dm_void;
+	struct ccx_info *ccx = &dm->dm_ccx_info;
+	boolean is_update = false;
+	u8 igi_curr = phydm_get_igi(dm, BB_PATH_A);
+	u8 i = 0;
+	u8 th_tmp = igi_curr - CCA_CAP;
+	u8 th_step = 2;
+	u8 fahm_igi_th_11k[NHM_TH_NUM] = {0x12, 0x15, 0x18, 0x1b, 0x1e, 0x23,
+					  0x28, 0x2d, 0x32, 0x37, 0x3c};
+	/*11k_dbm : {-92, -89, -86, -83, -80, -75, -70, -65, -60, -55, -50};*/
+	/*11k_gain_idx : {18, 21, 24, 27, 30, 35, 40, 45, 50, 55, 60};*/
 
-		return clm_chk_result;
-	}
+	PHYDM_DBG(dm, DBG_ENV_MNTR, "fahm_th_update_chk : App=%d, fahm_igi=0x%x, igi_curr=0x%x\n",
+		  fahm_app, ccx->fahm_igi, igi_curr);
 
-	clm_para.clm_app = CLM_BACKGROUND;
-	clm_para.clm_lv = CLM_LV_1;
-	clm_para.mntr_time = monitor_time;
-	if (ccx->clm_mntr_mode == CLM_DRIVER_MNTR) {
-		/*@[Get CLM report]*/
-		if (phydm_clm_get_result(dm)) {
-			PHYDM_DBG(dm, DBG_ENV_MNTR, "Get CLM_rpt success\n");
-			phydm_clm_get_utility(dm);
+	if (igi_curr < 0x10) /* Protect for invalid IGI*/
+		return false;
+
+	switch (fahm_app) {
+	case FAHM_BACKGROUND: /*Get IGI from driver parameter(cur_ig_value)*/
+		if (ccx->fahm_igi != igi_curr || ccx->fahm_app != fahm_app) {
+			is_update = true;
+			*igi_new = (u32)igi_curr;
+
+			fahm_th[0] = (u8)IGI_2_NHM_TH(th_tmp);
+
+			for (i = 1; i <= 10; i++)
+				fahm_th[i] = fahm_th[0] +
+					    IGI_2_NHM_TH(th_step * i);
+
+		}
+		break;
+	case FAHM_ACS:
+		if (ccx->fahm_igi != igi_curr || ccx->fahm_app != fahm_app) {
+			is_update = true;
+			*igi_new = (u32)igi_curr;
+			for (i = 0; i < FAHM_TH_NUM; i++)
+				fahm_th[i] = IGI_2_NHM_TH(fahm_igi_th_11k[i]);
+		}
+		break;
+	case FAHM_DBG: /*Get IGI from register*/
+		igi_curr = phydm_get_igi(dm, BB_PATH_A);
+		if (ccx->fahm_igi != igi_curr || ccx->fahm_app != fahm_app) {
+			is_update = true;
+			*igi_new = (u32)igi_curr;
+			if (en_1db_mode) {
+				fahm_th[0] = (u8)IGI_2_NHM_TH(fahm_th0_manual +
+							      10);
+				th_step = 1;
+			} else {
+				fahm_th[0] = (u8)IGI_2_NHM_TH(igi_curr -
+							      CCA_CAP);
+			}
+
+			for (i = 1; i <= 10; i++)
+				fahm_th[i] = fahm_th[0] +
+					     IGI_2_NHM_TH(th_step * i);
 		}
+		break;
+	}
 
-		/*@[CLM trigger]----------------------------------------------*/
-		if (phydm_clm_mntr_set(dm, &clm_para))
-			clm_chk_result = true;
+	if (is_update) {
+		PHYDM_DBG(dm, DBG_ENV_MNTR, "[Update FAHM_TH] igi_RSSI=%d\n",
+			  IGI_2_RSSI(*igi_new));
+
+		for (i = 0; i < FAHM_TH_NUM; i++)
+			PHYDM_DBG(dm, DBG_ENV_MNTR, "FAHM_th[%d](RSSI) = %d\n",
+				  i, NTH_TH_2_RSSI(fahm_th[i]));
 	} else {
-		phydm_clm_mntr_fw(dm, monitor_time);
+		PHYDM_DBG(dm, DBG_ENV_MNTR, "No need to update FAHM_TH\n");
+	}
+	return is_update;
+}
+
+void phydm_fahm_set(void *dm_void, u8 numer_opt, u8 denom_opt,
+		    enum fahm_application app, u16 period, boolean en_1db_mode,
+		    u8 th0_manual)
+{
+	struct dm_struct *dm = (struct dm_struct *)dm_void;
+	struct ccx_info *ccx = &dm->dm_ccx_info;
+	u8 fahm_th[FAHM_TH_NUM] = {0};
+	u32 igi = 0x20;
+	u32 reg1 = 0, reg2 = 0, reg3 = 0;
+	u32 val_tmp = 0;
+
+	PHYDM_DBG(dm, DBG_ENV_MNTR, "numer_opt=%d, denom_opt=%d, period=%d\n",
+		  numer_opt, denom_opt, period);
+
+	switch (dm->ic_ip_series) {
+	case PHYDM_IC_JGR3:
+		reg1 = R_0x1e60;
+		reg2 = R_0x1e58;
+		reg3 = R_0x1e5c;
+		break;
+	case PHYDM_IC_AC:
+		reg1 = R_0x994;
+		reg2 = R_0x1cf8;
+		break;
+	case PHYDM_IC_N:
+		reg1 = R_0x890;
+		reg2 = R_0x978;
+		reg3 = R_0x97c;
+		break;
+	default:
+		 break;
 	}
 
-	PHYDM_DBG(dm, DBG_ENV_MNTR, "clm_ratio=%d\n", ccx->clm_ratio);
+	/*Set enable fa, ignore crc32 ok, ignore crc32 err*/
+	if (numer_opt != ccx->fahm_numer_opt ||
+	    denom_opt != ccx->fahm_denom_opt) {
+		odm_set_bb_reg(dm, reg1, 0xe0, numer_opt);
+		odm_set_bb_reg(dm, reg1, 0x7000, denom_opt);
+		ccx->fahm_numer_opt = numer_opt;
+		ccx->fahm_denom_opt = denom_opt;
+
+		/*[PHYDM-400]*/
+		/*Counting B mode pkt for new B mode IP or fahm_opt is non-FA*/
+		if ((dm->support_ic_type & ODM_RTL8723F) ||
+		    (((numer_opt | denom_opt) & FAHM_INCLU_FA) == 0))
+			ccx->fahm_inclu_cck = true;
+		else
+			ccx->fahm_inclu_cck = false;
 
-	/*@PHYDM_DBG(dm, DBG_ENV_MNTR, "clm_chk_result=%d\n",clm_chk_result);*/
+		odm_set_bb_reg(dm, reg1, BIT(4), ccx->fahm_inclu_cck);
+		PHYDM_DBG(dm, DBG_ENV_MNTR, "fahm_inclu_cck=%d\n",
+			  ccx->fahm_inclu_cck);
+	}
 
-	return clm_chk_result;
-}
+	/*Set FAHM period*/
+	if (period != ccx->fahm_period) {
+		switch (dm->ic_ip_series) {
+		case PHYDM_IC_AC:
+			odm_set_bb_reg(dm, reg2, 0xffff00, period);
+			break;
+		case PHYDM_IC_JGR3:
+		case PHYDM_IC_N:
+			odm_set_bb_reg(dm, reg2, 0xff000000, (period & 0xff));
+			odm_set_bb_reg(dm, reg3, 0xff, (period & 0xff00) >> 8);
+			break;
+		default:
+			break;
+		}
 
-void phydm_set_clm_mntr_mode(void *dm_void, enum clm_monitor_mode mode)
-{
-	struct dm_struct *dm = (struct dm_struct *)dm_void;
-	struct ccx_info *ccx_info = &dm->dm_ccx_info;
+		PHYDM_DBG(dm, DBG_ENV_MNTR,
+			  "Update FAHM period ((%d)) -> ((%d))\n",
+			  ccx->fahm_period, period);
 
-	if (ccx_info->clm_mntr_mode != mode) {
-		ccx_info->clm_mntr_mode = mode;
-		phydm_ccx_hw_restart(dm);
+		ccx->fahm_period = period;
+	}
 
-		if (mode == CLM_DRIVER_MNTR)
-			phydm_clm_h2c(dm, CLM_PERIOD_MAX, 0);
+	/*Set FAHM threshold*/
+	if (phydm_fahm_th_update_chk(dm, app, &fahm_th[0], &igi, en_1db_mode,
+				     th0_manual)) {
+		/*Pause IGI*/
+		if (app == FAHM_BACKGROUND || app == FAHM_ACS) {
+			PHYDM_DBG(dm, DBG_ENV_MNTR, "DIG Free Run\n");
+		} else if (phydm_pause_func(dm, F00_DIG, PHYDM_PAUSE,
+					    PHYDM_PAUSE_LEVEL_1, 1, &igi)
+					    == PAUSE_FAIL) {
+			PHYDM_DBG(dm, DBG_ENV_MNTR, "pause DIG Fail\n");
+			return;
+		} else {
+			PHYDM_DBG(dm, DBG_ENV_MNTR, "pause DIG=0x%x\n", igi);
+		}
+		ccx->fahm_app = app;
+		ccx->fahm_igi = (u8)igi;
+		odm_move_memory(dm, &ccx->fahm_th[0], &fahm_th, FAHM_TH_NUM);
+
+		/*Set FAHM th*/
+		phydm_fahm_set_th_reg(dm);
 	}
 }
 
-void phydm_clm_init(void *dm_void)
+boolean
+phydm_fahm_mntr_set(void *dm_void, struct fahm_para_info *para)
 {
 	struct dm_struct *dm = (struct dm_struct *)dm_void;
-	struct ccx_info *ccx = &dm->dm_ccx_info;
+	u16 fahm_time = 0; /*unit: 4us*/
 
 	PHYDM_DBG(dm, DBG_ENV_MNTR, "[%s]===>\n", __func__);
-	ccx->clm_ongoing = false;
-	ccx->clm_manual_ctrl = 0;
-	ccx->clm_mntr_mode = CLM_DRIVER_MNTR;
-	ccx->clm_period = 0;
-	ccx->clm_rpt_stamp = 0;
-	phydm_clm_setting(dm, 65535);
-}
 
-void phydm_clm_dbg(void *dm_void, char input[][16], u32 *_used, char *output,
-		   u32 *_out_len)
-{
-	struct dm_struct *dm = (struct dm_struct *)dm_void;
-	struct ccx_info *ccx = &dm->dm_ccx_info;
-	char help[] = "-h";
-	u32 var1[10] = {0};
-	u32 used = *_used;
-	u32 out_len = *_out_len;
-	struct clm_para_info clm_para = {0};
-	u32 i;
+	if (para->mntr_time == 0)
+		return false;
 
-	for (i = 0; i < 4; i++) {
-		PHYDM_SSCANF(input[i + 1], DCMD_DECIMAL, &var1[i]);
+	if (para->lv >= FAHM_MAX_NUM) {
+		PHYDM_DBG(dm, DBG_ENV_MNTR, "Wrong LV=%d\n", para->lv);
+		return false;
 	}
 
-	if ((strcmp(input[1], help) == 0)) {
-		PDM_SNPF(out_len, used, output + used, out_len - used,
-			 "CLM Driver Basic-Trigger 262ms: {1}\n");
-		PDM_SNPF(out_len, used, output + used, out_len - used,
-			 "CLM Driver Adv-Trigger: {2} {app} {LV} {0~262ms}\n");
-		PDM_SNPF(out_len, used, output + used, out_len - used,
-			 "CLM FW Trigger: {3} {1:drv, 2:fw}\n");
-		PDM_SNPF(out_len, used, output + used, out_len - used,
-			 "CLM Get Result: {100}\n");
-	} else if (var1[0] == 100) { /* @Get CLM results */
+	if (phydm_fahm_racing_ctrl(dm, para->lv) == PHYDM_SET_FAIL)
+		return false;
 
-		if (phydm_clm_get_result(dm))
-			phydm_clm_get_utility(dm);
+	if (para->mntr_time >= 262)
+		fahm_time = FAHM_PERIOD_MAX;
+	else
+		fahm_time = para->mntr_time * MS_TO_4US_RATIO;
 
-		PDM_SNPF(out_len, used, output + used, out_len - used,
-			 "clm_rpt_stamp=%d\n", ccx->clm_rpt_stamp);
+	phydm_fahm_set(dm, para->numer_opt, para->denom_opt, para->app,
+		       fahm_time, para->en_1db_mode, para->th0_manual);
 
-		PDM_SNPF(out_len, used, output + used, out_len - used,
-			 "clm_ratio:((%d percent)) = (%d us/ %d us)\n",
-			 ccx->clm_ratio, ccx->clm_result << 2,
-			 ccx->clm_period << 2);
+	return true;
+}
 
-		ccx->clm_manual_ctrl = 0;
-	} else if (var1[0] == 3) {
-		phydm_set_clm_mntr_mode(dm, (enum clm_monitor_mode)var1[1]);
-		PDM_SNPF(out_len, used, output + used, out_len - used,
-			 "CLM mode: %s mode\n",
-			 ((ccx->clm_mntr_mode == CLM_FW_MNTR) ? "FW" : "Drv"));
-	} else { /* Set & trigger CLM */
-		ccx->clm_manual_ctrl = 1;
+boolean
+phydm_fahm_mntr_racing_chk(void *dm_void)
+{
+	struct dm_struct *dm = (struct dm_struct *)dm_void;
+	struct ccx_info *ccx = &dm->dm_ccx_info;
+	u32 sys_return_time = 0;
 
-		if (var1[0] == 1) {
-			clm_para.clm_app = CLM_BACKGROUND;
-			clm_para.clm_lv = CLM_LV_4;
-			clm_para.mntr_time = 262;
-			ccx->clm_mntr_mode = CLM_DRIVER_MNTR;
-		} else if (var1[0] == 2) {
-			clm_para.clm_app = (enum clm_application)var1[1];
-			clm_para.clm_lv = (enum phydm_clm_level)var1[2];
-			ccx->clm_mntr_mode = CLM_DRIVER_MNTR;
-			clm_para.mntr_time = (u16)var1[3];
-		}
+	if (ccx->fahm_manual_ctrl) {
+		PHYDM_DBG(dm, DBG_ENV_MNTR, "FAHM in manual ctrl\n");
+		return true;
+	}
 
-		PDM_SNPF(out_len, used, output + used, out_len - used,
-			 "app=%d, lv=%d, mode=%s, time=%d ms\n",
-			 clm_para.clm_app, clm_para.clm_lv,
-			 ((ccx->clm_mntr_mode == CLM_FW_MNTR) ? "FW" :
-			 "driver"), clm_para.mntr_time);
+	sys_return_time = ccx->fahm_trigger_time + MAX_ENV_MNTR_TIME;
 
-		if (phydm_clm_mntr_set(dm, &clm_para))
-			phydm_clm_trigger(dm);
+	if (ccx->fahm_app != FAHM_BACKGROUND &&
+	    (sys_return_time > dm->phydm_sys_up_time)) {
+		PHYDM_DBG(dm, DBG_ENV_MNTR,
+			  "fahm_app=%d, trigger_time %d, sys_time=%d\n",
+			  ccx->fahm_app, ccx->fahm_trigger_time,
+			  dm->phydm_sys_up_time);
 
-		PDM_SNPF(out_len, used, output + used, out_len - used,
-			 "clm_rpt_stamp=%d\n", ccx->clm_rpt_stamp);
+		return true;
 	}
 
-	*_used = used;
-	*_out_len = out_len;
+	return false;
 }
 
-#endif /*@#ifdef CLM_SUPPORT*/
-
-u8 phydm_env_mntr_trigger(void *dm_void, struct nhm_para_info *nhm_para,
-			  struct clm_para_info *clm_para,
-			  struct env_trig_rpt *trig_rpt)
+boolean
+phydm_fahm_mntr_chk(void *dm_void, u16 monitor_time /*unit ms*/)
 {
-	u8 trigger_result = 0;
-#if (defined(NHM_SUPPORT) && defined(CLM_SUPPORT))
 	struct dm_struct *dm = (struct dm_struct *)dm_void;
 	struct ccx_info *ccx = &dm->dm_ccx_info;
-	boolean nhm_set_ok = false;
-	boolean clm_set_ok = false;
-
-	PHYDM_DBG(dm, DBG_ENV_MNTR, "[%s] ======>\n", __func__);
-
-	/*@[NHM]*/
-	nhm_set_ok = phydm_nhm_mntr_set(dm, nhm_para);
-
-	/*@[CLM]*/
-	if (ccx->clm_mntr_mode == CLM_DRIVER_MNTR) {
-		clm_set_ok = phydm_clm_mntr_set(dm, clm_para);
-	} else if (ccx->clm_mntr_mode == CLM_FW_MNTR) {
-		phydm_clm_h2c(dm, CLM_PERIOD_MAX, true);
-		trigger_result |= CLM_SUCCESS;
-	}
+	struct fahm_para_info para = {0};
+	boolean fahm_chk_result = false;
 
-	if (nhm_set_ok) {
-		phydm_nhm_trigger(dm);
-		trigger_result |= NHM_SUCCESS;
-	}
+	PHYDM_DBG(dm, DBG_ENV_MNTR, "[%s]===>\n", __func__);
 
-	if (clm_set_ok) {
-		phydm_clm_trigger(dm);
-		trigger_result |= CLM_SUCCESS;
-	}
+	if (phydm_fahm_mntr_racing_chk(dm))
+		return fahm_chk_result;
 
-	/*@monitor for the test duration*/
-	ccx->start_time = odm_get_current_time(dm);
+	/*[FAHM trigger setting]------------------------------------------*/
+	para.numer_opt = FAHM_INCLU_FA;
+	para.denom_opt = FAHM_INCLU_CRC_ERR;
+	para.app = FAHM_BACKGROUND;
+	para.lv = FAHM_LV_1;
+	para.en_1db_mode = false;
+	para.mntr_time = monitor_time;
 
-	trig_rpt->nhm_rpt_stamp = ccx->nhm_rpt_stamp;
-	trig_rpt->clm_rpt_stamp = ccx->clm_rpt_stamp;
+	fahm_chk_result = phydm_fahm_mntr_set(dm, &para);
 
-	PHYDM_DBG(dm, DBG_ENV_MNTR, "nhm_rpt_stamp=%d, clm_rpt_stamp=%d,\n\n",
-		  trig_rpt->nhm_rpt_stamp, trig_rpt->clm_rpt_stamp);
-#endif
-	return trigger_result;
+	return fahm_chk_result;
 }
 
-u8 phydm_env_mntr_result(void *dm_void, struct env_mntr_rpt *rpt)
+boolean
+phydm_fahm_mntr_result(void *dm_void)
 {
-	u8 env_mntr_rpt = 0;
-#if (defined(NHM_SUPPORT) && defined(CLM_SUPPORT))
 	struct dm_struct *dm = (struct dm_struct *)dm_void;
 	struct ccx_info *ccx = &dm->dm_ccx_info;
-	u64 progressing_time = 0;
-	u32 val_tmp = 0;
-
-	/*@monitor for the test duration*/
-	progressing_time = odm_get_progressing_time(dm, ccx->start_time);
-	PHYDM_DBG(dm, DBG_ENV_MNTR, "[%s] ======>\n", __func__);
-	PHYDM_DBG(dm, DBG_ENV_MNTR, "env_time=%lld\n", progressing_time);
-
-	/*@Get NHM result*/
-	if (phydm_nhm_get_result(dm)) {
-		PHYDM_DBG(dm, DBG_ENV_MNTR, "Get NHM_rpt success\n");
-		phydm_nhm_get_utility(dm);
-		rpt->nhm_ratio = ccx->nhm_ratio;
-		rpt->nhm_env_ratio = ccx->nhm_env_ratio;
-		rpt->nhm_noise_pwr = ccx->nhm_level;
-		rpt->nhm_pwr = ccx->nhm_pwr;
-		env_mntr_rpt |= NHM_SUCCESS;
-
-		odm_move_memory(dm, &rpt->nhm_result[0],
-				&ccx->nhm_result[0], NHM_RPT_NUM);
-	} else {
-		rpt->nhm_ratio = ENV_MNTR_FAIL;
-		rpt->nhm_env_ratio = ENV_MNTR_FAIL;
-	}
-
-	/*@Get CLM result*/
-	if (ccx->clm_mntr_mode == CLM_DRIVER_MNTR) {
-		if (phydm_clm_get_result(dm)) {
-			PHYDM_DBG(dm, DBG_ENV_MNTR, "Get CLM_rpt success\n");
-			phydm_clm_get_utility(dm);
-			env_mntr_rpt |= CLM_SUCCESS;
-			rpt->clm_ratio = ccx->clm_ratio;
-		} else {
-			rpt->clm_ratio = ENV_MNTR_FAIL;
-		}
+	boolean fahm_chk_result = false;
 
-	} else {
-		if (ccx->clm_fw_result_cnt != 0) {
-			val_tmp = ccx->clm_fw_result_acc
-			/ ccx->clm_fw_result_cnt;
-			ccx->clm_ratio = (u8)val_tmp;
-		} else {
-			ccx->clm_ratio = 0;
-		}
+	PHYDM_DBG(dm, DBG_ENV_MNTR, "[%s]===>\n", __func__);
 
-		rpt->clm_ratio = ccx->clm_ratio;
-		PHYDM_DBG(dm, DBG_ENV_MNTR,
-			  "clm_fw_result_acc=%d, clm_fw_result_cnt=%d\n",
-			  ccx->clm_fw_result_acc, ccx->clm_fw_result_cnt);
+	if (phydm_fahm_mntr_racing_chk(dm))
+		return fahm_chk_result;
 
-		ccx->clm_fw_result_acc = 0;
-		ccx->clm_fw_result_cnt = 0;
-		env_mntr_rpt |= CLM_SUCCESS;
+	/*[FAHM get result & calculate Utility]---------------------------*/
+	if (phydm_fahm_get_result(dm)) {
+		PHYDM_DBG(dm, DBG_ENV_MNTR, "Get FAHM_rpt success\n");
+		phydm_fahm_get_utility(dm);
+		fahm_chk_result = true;
 	}
 
-	rpt->nhm_rpt_stamp = ccx->nhm_rpt_stamp;
-	rpt->clm_rpt_stamp = ccx->clm_rpt_stamp;
-
-	PHYDM_DBG(dm, DBG_ENV_MNTR,
-		  "IGI=0x%x, nhm_ratio=%d, nhm_env_ratio=%d, clm_ratio=%d, nhm_rpt_stamp=%d, clm_rpt_stamp=%d\n\n",
-		  ccx->nhm_igi, rpt->nhm_ratio, rpt->nhm_env_ratio,
-		  rpt->clm_ratio, rpt->nhm_rpt_stamp, rpt->clm_rpt_stamp);
-#endif
-	return env_mntr_rpt;
+	return fahm_chk_result;
 }
 
-/*@Environment Monitor*/
-void phydm_env_mntr_watchdog(void *dm_void)
+void phydm_fahm_init(void *dm_void)
 {
-#if (defined(NHM_SUPPORT) && defined(CLM_SUPPORT))
 	struct dm_struct *dm = (struct dm_struct *)dm_void;
 	struct ccx_info *ccx = &dm->dm_ccx_info;
-	boolean nhm_chk_ok = false;
-	boolean clm_chk_ok = false;
+	u32 reg = 0;
 
-	if (!(dm->support_ability & ODM_BB_ENV_MONITOR))
+	if (!(dm->support_ic_type & PHYDM_IC_SUPPORT_FAHM))
 		return;
 
 	PHYDM_DBG(dm, DBG_ENV_MNTR, "[%s]===>\n", __func__);
-	nhm_chk_ok = phydm_nhm_mntr_chk(dm, 262); /*@monitor 262ms*/
-	clm_chk_ok = phydm_clm_mntr_chk(dm, 262); /*@monitor 262ms*/
 
-	/*@PHYDM_DBG(dm, DBG_ENV_MNTR, "nhm_chk_ok %d\n\n",nhm_chk_ok);*/
-	/*@PHYDM_DBG(dm, DBG_ENV_MNTR, "clm_chk_ok %d\n\n",clm_chk_ok);*/
-
-	if (nhm_chk_ok)
-		phydm_nhm_trigger(dm);
+	ccx->fahm_app = FAHM_BACKGROUND;
+	ccx->fahm_igi = 0xff;
 
-	if (clm_chk_ok)
-		phydm_clm_trigger(dm);
+	/*Set FAHM threshold*/
+	ccx->fahm_ongoing = false;
+	ccx->fahm_set_lv = FAHM_RELEASE;
 
-	PHYDM_DBG(dm, DBG_ENV_MNTR,
-		  "Summary: nhm_ratio=((%d)) clm_ratio=((%d))\n\n",
-		  ccx->nhm_ratio, ccx->clm_ratio);
+	if (phydm_fahm_th_update_chk(dm, ccx->fahm_app, &ccx->fahm_th[0],
+				    (u32 *)&ccx->fahm_igi, false, 0))
+		phydm_fahm_set_th_reg(dm);
 
-	#ifdef FAHM_SUPPORT
-	phydm_fahm_watchdog(dm);
-	#endif
-#endif
-}
+	ccx->fahm_period = 0;
+	ccx->fahm_numer_opt = 0;
+	ccx->fahm_denom_opt = 0;
+	ccx->fahm_manual_ctrl = 0;
+	ccx->fahm_rpt_stamp = 0;
+	ccx->fahm_inclu_cck = false;
 
-void phydm_env_monitor_init(void *dm_void)
-{
-#if (defined(NHM_SUPPORT) && defined(CLM_SUPPORT))
-	struct dm_struct *dm = (struct dm_struct *)dm_void;
+	switch (dm->ic_ip_series) {
+	case PHYDM_IC_JGR3:
+		reg = R_0x1e60;
+		break;
+	case PHYDM_IC_AC:
+		reg = R_0x994;
+		break;
+	case PHYDM_IC_N:
+		reg = R_0x890;
+		break;
+	default:
+		break;
+	}
 
-	phydm_ccx_hw_restart(dm);
-	phydm_nhm_init(dm);
-	phydm_clm_init(dm);
-	#ifdef FAHM_SUPPORT
-	phydm_fahm_init(dm);
-	#endif
-#endif
+	/*Counting OFDM pkt*/
+	odm_set_bb_reg(dm, reg, BIT(3), 1);
 }
 
-void phydm_env_mntr_dbg(void *dm_void, char input[][16], u32 *_used,
-			char *output, u32 *_out_len)
+void phydm_fahm_dbg(void *dm_void, char input[][16], u32 *_used, char *output,
+		    u32 *_out_len)
 {
 	struct dm_struct *dm = (struct dm_struct *)dm_void;
+	struct ccx_info *ccx = &dm->dm_ccx_info;
+	struct fahm_para_info para = {0};
 	char help[] = "-h";
 	u32 var1[10] = {0};
 	u32 used = *_used;
 	u32 out_len = *_out_len;
-	struct clm_para_info clm_para = {0};
-	struct nhm_para_info nhm_para = {0};
-	struct env_mntr_rpt rpt = {0};
-	struct env_trig_rpt trig_rpt = {0};
-	struct ccx_info *ccx = &dm->dm_ccx_info;
-	u8 set_result = 0;
+	u16 result_tmp = 0;
 	u8 i = 0;
 
+	if (!(dm->support_ic_type & PHYDM_IC_SUPPORT_FAHM))
+		return;
+
 	PHYDM_SSCANF(input[1], DCMD_DECIMAL, &var1[0]);
 
 	if ((strcmp(input[1], help) == 0)) {
 		PDM_SNPF(out_len, used, output + used, out_len - used,
-			 "Basic-Trigger 262ms: {1}\n");
+			 "FAHM Basic-Trigger 262ms: {1}\n");
 		PDM_SNPF(out_len, used, output + used, out_len - used,
-			 "Get Result: {100}\n");
-	} else if (var1[0] == 100) { /* Get results */
-		set_result = phydm_env_mntr_result(dm, &rpt);
-
+			 "FAHM Adv-Trigger: {2} {numer_opt} {denom_opt}\n {App:1 for dbg} {LV:1~4} {0~262ms}, 1dB mode :{en} {t[0](RSSI)}\n");
 		PDM_SNPF(out_len, used, output + used, out_len - used,
-			 "Set Result=%d\n nhm_ratio=%d nhm_env_ratio=%d clm_ratio=%d\n nhm_rpt_stamp=%d, clm_rpt_stamp=%d,\n",
-			 set_result, rpt.nhm_ratio, rpt.nhm_env_ratio,
-			 rpt.clm_ratio, rpt.nhm_rpt_stamp, rpt.clm_rpt_stamp);
+			 "FAHM Get Result: {100}\n");
+		PDM_SNPF(out_len, used, output + used, out_len - used,
+			 "numer_opt/denom_opt: {BIT 0/1/2} = {FA/CRC32_OK/CRC32_ERR}\n");
+	} else if (var1[0] == 100) { /*Get FAHM results*/
+		PDM_SNPF(out_len, used, output + used, out_len - used,
+			 "IGI=0x%x, rpt_stamp=%d\n", ccx->fahm_igi,
+			 ccx->fahm_rpt_stamp);
+
+		if (phydm_fahm_get_result(dm)) {
+			if (!(ccx->fahm_inclu_cck))
+				PDM_SNPF(out_len, used, output + used,
+					 out_len - used,
+					 "===>The following fahm report does not count CCK pkt\n");
+		
+			for (i = 0; i < FAHM_RPT_NUM; i++) {
+				result_tmp = ccx->fahm_result[i];
+				PDM_SNPF(out_len, used, output + used,
+					 out_len - used,
+					 "fahm_rpt[%d] = %d (%d percent)\n",
+					 i, result_tmp,
+					 (((result_tmp * 100) + 32768) >> 16));
+			}
+			phydm_fahm_get_utility(dm);
 
-		for (i = 0; i <= 11; i++) {
 			PDM_SNPF(out_len, used, output + used, out_len - used,
-				 "nhm_rpt[%d] = %d (%d percent)\n", i,
-				 rpt.nhm_result[i],
-				 (((rpt.nhm_result[i] * 100) + 128) >> 8));
+				 "fahm_pwr=%d, fahm_ratio=%d, fahm_denom_ratio=%d\n",
+				 ccx->fahm_pwr, ccx->fahm_ratio,
+				 ccx->fahm_denom_ratio);
+		} else {
+			PDM_SNPF(out_len, used, output + used, out_len - used,
+				 "Get FAHM_rpt Fail\n");
+		}
+		ccx->fahm_manual_ctrl = 0;
+	} else { /*FAMH trigger*/
+		ccx->fahm_manual_ctrl = 1;
+
+		for (i = 1; i < 9; i++)
+			PHYDM_SSCANF(input[i + 1], DCMD_DECIMAL, &var1[i]);
+
+		if (var1[0] == 1) {
+			para.numer_opt = FAHM_INCLU_FA;
+			para.denom_opt = FAHM_INCLU_CRC_ERR;
+			para.app = FAHM_DBG;
+			para.lv = FAHM_LV_4;
+			para.mntr_time = 262;
+			para.en_1db_mode = false;
+			para.th0_manual = 0;
+		} else {
+			para.numer_opt = (u8)var1[1];
+			para.denom_opt = (u8)var1[2];
+			para.app = (enum fahm_application)var1[3];
+			para.lv = (enum phydm_fahm_level)var1[4];
+			para.mntr_time = (u16)var1[5];
+			para.en_1db_mode = (boolean)var1[6];
+			para.th0_manual = (u8)var1[7];
 		}
+
 		PDM_SNPF(out_len, used, output + used, out_len - used,
-			 "[NHM] valid: %d percent, noise(RSSI) = %d\n",
-			 ccx->nhm_level_valid, ccx->nhm_level);
-	} else { /* Set & trigger*/
-		/*nhm para*/
-		nhm_para.incld_txon = NHM_EXCLUDE_TXON;
-		nhm_para.incld_cca = NHM_EXCLUDE_CCA;
-		nhm_para.div_opt = NHM_CNT_ALL;
-		nhm_para.nhm_app = NHM_ACS;
-		nhm_para.nhm_lv = NHM_LV_2;
-		nhm_para.mntr_time = 262;
-		nhm_para.en_1db_mode = false;
+			 "numer_opt=%d, denom_opt=%d, app=%d, lv=%d, time=%d ms\n",
+			 para.numer_opt, para.denom_opt,para.app, para.lv,
+			 para.mntr_time);
 
-		/*clm para*/
-		clm_para.clm_app = CLM_ACS;
-		clm_para.clm_lv = CLM_LV_2;
-		clm_para.mntr_time = 262;
+		PDM_SNPF(out_len, used, output + used, out_len - used,
+			 "en_1db_mode=%d, th0(for 1db mode)=%d\n",
+			 para.en_1db_mode, para.th0_manual);
 
-		set_result = phydm_env_mntr_trigger(dm, &nhm_para,
-						    &clm_para, &trig_rpt);
+		if (phydm_fahm_mntr_set(dm, &para))
+			phydm_fahm_trigger(dm);
 
 		PDM_SNPF(out_len, used, output + used, out_len - used,
-			 "Set Result=%d, nhm_rpt_stamp=%d, clm_rpt_stamp=%d\n",
-			 set_result, trig_rpt.nhm_rpt_stamp,
-			 trig_rpt.clm_rpt_stamp);
+			 "IGI=0x%x, rpt_stamp=%d\n", ccx->fahm_igi,
+			 ccx->fahm_rpt_stamp);
+
+		for (i = 0; i < FAHM_TH_NUM; i++)
+			PDM_SNPF(out_len, used, output + used, out_len - used,
+				 "FAHM_th[%d] RSSI = %d\n", i,
+				 NTH_TH_2_RSSI(ccx->fahm_th[i]));
 	}
 
 	*_used = used;
 	*_out_len = out_len;
 }
 
+#endif /*#ifdef FAHM_SUPPORT*/
+
 #ifdef IFS_CLM_SUPPORT
 void phydm_ifs_clm_restart(void *dm_void)
-			  /*Will Restart IFS CLM simultaneously*/
 {
 	struct dm_struct *dm = (struct dm_struct *)dm_void;
-	u32 reg1 = 0;
 
 	PHYDM_DBG(dm, DBG_ENV_MNTR, "[%s]===>\n", __func__);
 
@@ -2524,29 +2632,38 @@ void phydm_ifs_clm_get_utility(void *dm_void)
 {
 	struct dm_struct *dm = (struct dm_struct *)dm_void;
 	struct ccx_info *ccx = &dm->dm_ccx_info;
-	u32 numerator = 0;
-	u16 denominator = 0;
+	u16 denom = 0;
 
 	PHYDM_DBG(dm, DBG_ENV_MNTR, "[%s]===>\n", __func__);
 
-	denominator = ccx->ifs_clm_period;
-	numerator = ccx->ifs_clm_tx * 100;
-	ccx->ifs_clm_tx_ratio = (u8)PHYDM_DIV(numerator, denominator);
-	numerator = ccx->ifs_clm_edcca_excl_cca * 100;
-	ccx->ifs_clm_edcca_excl_cca_ratio = (u8)PHYDM_DIV(numerator,
-							  denominator);
-	numerator = (ccx->ifs_clm_cckfa + ccx->ifs_clm_ofdmfa) * 100;
-	ccx->ifs_clm_fa_ratio = (u8)PHYDM_DIV(numerator, denominator);
-	numerator = (ccx->ifs_clm_cckcca_excl_fa +
-		     ccx->ifs_clm_ofdmcca_excl_fa) * 100;
-	ccx->ifs_clm_cca_excl_fa_ratio = (u8)PHYDM_DIV(numerator, denominator);
+	denom = ccx->ifs_clm_period;
+	ccx->ifs_clm_tx_ratio = phydm_ccx_get_rpt_ratio(dm, ccx->ifs_clm_tx,
+				denom);
+	ccx->ifs_clm_edcca_excl_cca_ratio = phydm_ccx_get_rpt_ratio(dm,
+					    ccx->ifs_clm_edcca_excl_cca,
+					    denom);
+	ccx->ifs_clm_cck_fa_ratio = phydm_ccx_get_rpt_ratio(dm,
+				    ccx->ifs_clm_cckfa, denom);
+	ccx->ifs_clm_ofdm_fa_ratio = phydm_ccx_get_rpt_ratio(dm,
+				     ccx->ifs_clm_ofdmfa, denom);
+	ccx->ifs_clm_cck_cca_excl_fa_ratio = phydm_ccx_get_rpt_ratio(dm,
+					     ccx->ifs_clm_cckcca_excl_fa,
+					     denom);
+	ccx->ifs_clm_ofdm_cca_excl_fa_ratio = phydm_ccx_get_rpt_ratio(dm,
+					      ccx->ifs_clm_ofdmcca_excl_fa,
+					      denom);
 
 	PHYDM_DBG(dm, DBG_ENV_MNTR,
 		  "Tx_ratio = %d, EDCCA_exclude_CCA_ratio = %d \n",
 		  ccx->ifs_clm_tx_ratio, ccx->ifs_clm_edcca_excl_cca_ratio);
 	PHYDM_DBG(dm, DBG_ENV_MNTR,
-		  "FA_ratio = %d, CCA_exclude_FA_ratio = %d \n",
-		  ccx->ifs_clm_fa_ratio, ccx->ifs_clm_cca_excl_fa_ratio);
+		  "CCK : FA_ratio = %d, CCA_exclude_FA_ratio = %d \n",
+		  ccx->ifs_clm_cck_fa_ratio,
+		  ccx->ifs_clm_cck_cca_excl_fa_ratio);
+	PHYDM_DBG(dm, DBG_ENV_MNTR,
+		  "OFDM : FA_ratio = %d, CCA_exclude_FA_ratio = %d \n",
+		  ccx->ifs_clm_ofdm_fa_ratio,
+		  ccx->ifs_clm_ofdm_cca_excl_fa_ratio);
 }
 
 void phydm_ifs_clm_get_result(void *dm_void)
@@ -2573,6 +2690,7 @@ void phydm_ifs_clm_get_result(void *dm_void)
 
 	/* IFS result */
 	value32 = odm_get_bb_reg(dm, R_0x2e70, MASKDWORD);
+	value32 = odm_convert_to_le32(value32);
 	odm_move_memory(dm, &ccx->ifs_clm_his[0], &value32, 4);
 	value32 = odm_get_bb_reg(dm, R_0x2e74, MASKDWORD);
 	ccx->ifs_clm_avg[0] = (u16)(value32 & MASKLWORD);
@@ -2793,22 +2911,19 @@ phydm_ifs_clm_mntr_set(void *dm_void, struct ifs_clm_para_info *ifs_clm_para)
 }
 
 boolean
-phydm_ifs_clm_mntr_chk(void *dm_void, u16 monitor_time /*unit ms*/)
+phydm_ifs_clm_mntr_racing_chk(void *dm_void)
 {
 	struct dm_struct *dm = (struct dm_struct *)dm_void;
 	struct ccx_info *ccx = &dm->dm_ccx_info;
-	struct ifs_clm_para_info ifs_clm_para = {0};
-	boolean ifs_clm_chk_result = false;
 	u32 sys_return_time = 0;
 
-	PHYDM_DBG(dm, DBG_ENV_MNTR, "[%s]===>\n", __func__);
-
 	if (ccx->ifs_clm_manual_ctrl) {
-		PHYDM_DBG(dm, DBG_ENV_MNTR, "IFS CLM in manual ctrl\n");
-		return ifs_clm_chk_result;
+		PHYDM_DBG(dm, DBG_ENV_MNTR, "IFS_CLM in manual ctrl\n");
+		return true;
 	}
 
 	sys_return_time = ccx->ifs_clm_trigger_time + MAX_ENV_MNTR_TIME;
+
 	if (ccx->ifs_clm_app != IFS_CLM_BACKGROUND &&
 	    (sys_return_time > dm->phydm_sys_up_time)) {
 		PHYDM_DBG(dm, DBG_ENV_MNTR,
@@ -2816,12 +2931,24 @@ phydm_ifs_clm_mntr_chk(void *dm_void, u16 monitor_time /*unit ms*/)
 			  ccx->ifs_clm_app, ccx->ifs_clm_trigger_time,
 			  dm->phydm_sys_up_time);
 
-		return ifs_clm_chk_result;
+		return true;
 	}
 
-	/*[IFS CLM get result ------------------------------------]*/
-	phydm_ifs_clm_get_result(dm);
-	phydm_ifs_clm_get_utility(dm);
+	return false;
+}
+
+boolean
+phydm_ifs_clm_mntr_chk(void *dm_void, u16 monitor_time /*unit ms*/)
+{
+	struct dm_struct *dm = (struct dm_struct *)dm_void;
+	struct ccx_info *ccx = &dm->dm_ccx_info;
+	struct ifs_clm_para_info ifs_clm_para = {0};
+	boolean ifs_clm_chk_result = false;
+
+	PHYDM_DBG(dm, DBG_ENV_MNTR, "[%s]===>\n", __func__);
+
+	if (phydm_ifs_clm_mntr_racing_chk(dm))
+		return ifs_clm_chk_result;
 
 	/*[IFS CLM trigger setting]------------------------------------------*/
 	ifs_clm_para.ifs_clm_app = IFS_CLM_BACKGROUND;
@@ -2834,6 +2961,26 @@ phydm_ifs_clm_mntr_chk(void *dm_void, u16 monitor_time /*unit ms*/)
 	return ifs_clm_chk_result;
 }
 
+boolean
+phydm_ifs_clm_mntr_result(void *dm_void)
+{
+	struct dm_struct *dm = (struct dm_struct *)dm_void;
+	struct ccx_info *ccx = &dm->dm_ccx_info;
+	boolean ifs_clm_chk_result = false;
+
+	PHYDM_DBG(dm, DBG_ENV_MNTR, "[%s]===>\n", __func__);
+
+	if (phydm_ifs_clm_mntr_racing_chk(dm))
+		return ifs_clm_chk_result;
+
+	/*[IFS CLM get result] ------------------------------------]*/
+	phydm_ifs_clm_get_result(dm);
+	phydm_ifs_clm_get_utility(dm);
+	ifs_clm_chk_result = true;
+
+	return ifs_clm_chk_result;
+}
+
 void phydm_ifs_clm_init(void *dm_void)
 {
 	struct dm_struct *dm = (struct dm_struct *)dm_void;
@@ -3051,6 +3198,7 @@ u8 phydm_enhance_mntr_result(void *dm_void, struct enhance_mntr_rpt *rpt)
 		phydm_nhm_get_utility(dm);
 		rpt->nhm_ratio = ccx->nhm_ratio;
 		rpt->nhm_env_ratio = ccx->nhm_env_ratio;
+		rpt->nhm_idle_ratio = ccx->nhm_idle_ratio;
 		rpt->nhm_noise_pwr = ccx->nhm_level;
 		rpt->nhm_pwr = ccx->nhm_pwr;
 		enhance_mntr_rpt |= NHM_SUCCESS;
@@ -3060,6 +3208,7 @@ u8 phydm_enhance_mntr_result(void *dm_void, struct enhance_mntr_rpt *rpt)
 	} else {
 		rpt->nhm_ratio = ENV_MNTR_FAIL;
 		rpt->nhm_env_ratio = ENV_MNTR_FAIL;
+		rpt->nhm_idle_ratio = ENV_MNTR_FAIL;
 	}
 
 	PHYDM_DBG(dm, DBG_ENV_MNTR,
@@ -3074,8 +3223,15 @@ u8 phydm_enhance_mntr_result(void *dm_void, struct enhance_mntr_rpt *rpt)
 			phydm_clm_get_utility(dm);
 			enhance_mntr_rpt |= CLM_SUCCESS;
 			rpt->clm_ratio = ccx->clm_ratio;
+			if ((enhance_mntr_rpt & NHM_SUCCESS) &&
+			    (rpt->nhm_idle_ratio != ENV_MNTR_FAIL))
+				rpt->nhm_tx_ratio = 100 - rpt->clm_ratio -
+						    rpt->nhm_idle_ratio;
+			else
+				rpt->nhm_tx_ratio = ENV_MNTR_FAIL;
 		} else {
 			rpt->clm_ratio = ENV_MNTR_FAIL;
+			rpt->nhm_tx_ratio = ENV_MNTR_FAIL;
 		}
 	} else {
 		if (ccx->clm_fw_result_cnt != 0) {
@@ -3090,6 +3246,7 @@ u8 phydm_enhance_mntr_result(void *dm_void, struct enhance_mntr_rpt *rpt)
 			  "clm_fw_result_acc=%d, clm_fw_result_cnt=%d\n",
 			  ccx->clm_fw_result_acc, ccx->clm_fw_result_cnt);
 
+		rpt->nhm_tx_ratio = ENV_MNTR_FAIL;
 		ccx->clm_fw_result_acc = 0;
 		ccx->clm_fw_result_cnt = 0;
 		enhance_mntr_rpt |= CLM_SUCCESS;
@@ -3103,77 +3260,54 @@ u8 phydm_enhance_mntr_result(void *dm_void, struct enhance_mntr_rpt *rpt)
 		PHYDM_DBG(dm, DBG_ENV_MNTR, "Get FAHM_rpt success\n");
 		phydm_fahm_get_utility(dm);
 		rpt->fahm_pwr = ccx->fahm_pwr;
+		rpt->fahm_ratio = ccx->fahm_ratio;
+		rpt->fahm_denom_ratio = ccx->fahm_denom_ratio;
+		rpt->fahm_inclu_cck = ccx->fahm_inclu_cck;
 		enhance_mntr_rpt |= FAHM_SUCCESS;
 
 		odm_move_memory(dm, &rpt->fahm_result[0],
-				&ccx->fahm_result[0], NHM_RPT_NUM * 2);
+				&ccx->fahm_result[0], FAHM_RPT_NUM * 2);
 	} else {
 		rpt->fahm_pwr = 0;
+		rpt->fahm_ratio = 0;
+		rpt->fahm_denom_ratio = 0;
 	}
 
-	PHYDM_DBG(dm, DBG_ENV_MNTR, "[FAHM]rpt_stamp=%d, IGI=0x%x, pwr=%d\n",
-		  rpt->fahm_rpt_stamp, ccx->fahm_igi, rpt->fahm_pwr);
+	PHYDM_DBG(dm, DBG_ENV_MNTR,
+		  "[FAHM]stamp=%d, IGI=0x%x, fahm_inclu_cck=%d, fahm_pwr=%d, fahm_ratio=%d, fahm_denom_ratio=%d\n",
+		  rpt->fahm_rpt_stamp, ccx->fahm_igi, rpt->fahm_inclu_cck,
+		  rpt->fahm_pwr, rpt->fahm_ratio, rpt->fahm_denom_ratio);
 
 	/*Get IFS_CLM result*/
 	phydm_ifs_clm_get_result(dm);
-	phydm_ifs_clm_get_utility(dm);
-	rpt->ifs_clm_tx_ratio = ccx->ifs_clm_tx_ratio;
-	rpt->ifs_clm_edcca_excl_cca_ratio = ccx->ifs_clm_edcca_excl_cca_ratio;
-	rpt->ifs_clm_fa_ratio = ccx->ifs_clm_fa_ratio;
-	rpt->ifs_clm_cca_excl_fa_ratio = ccx->ifs_clm_cca_excl_fa_ratio;
-	rpt->ifs_clm_rpt_stamp = ccx->ifs_clm_rpt_stamp;
-	enhance_mntr_rpt |= IFS_CLM_SUCCESS;
-
-	PHYDM_DBG(dm, DBG_ENV_MNTR,
-		  "[IFS_CLM]rpt_stamp = %d, Tx_ratio = %d, EDCCA_exclude_CCA_ratio = %d\n",
-		  ccx->ifs_clm_rpt_stamp, ccx->ifs_clm_tx_ratio,
-		  ccx->ifs_clm_edcca_excl_cca_ratio);	
-
-	PHYDM_DBG(dm, DBG_ENV_MNTR,
-		  "FA_ratio = %d, CCA_exclude_FA_ratio = %d\n",
-		  ccx->ifs_clm_fa_ratio, ccx->ifs_clm_cca_excl_fa_ratio);
-
-	rpt->nhm_rpt_stamp = ccx->nhm_rpt_stamp;
-	rpt->clm_rpt_stamp = ccx->clm_rpt_stamp;
-	rpt->fahm_rpt_stamp = ccx->fahm_rpt_stamp;
-	rpt->ifs_clm_rpt_stamp = ccx->ifs_clm_rpt_stamp;
-#endif
-	return enhance_mntr_rpt;
-}
-
-void phydm_enhance_mntr_watchdog(void *dm_void)
-{
-#ifdef IFS_CLM_SUPPORT
-	struct dm_struct *dm = (struct dm_struct *)dm_void;
-	struct ccx_info *ccx = &dm->dm_ccx_info;
-	boolean ifs_clm_chk_ok = false;
-
-	if (!(dm->support_ability & ODM_BB_ENV_MONITOR))
-		return;
-
-	if (!(dm->support_ic_type & PHYDM_IC_SUPPORT_IFS_CLM))
-		return;
-
-	PHYDM_DBG(dm, DBG_ENV_MNTR, "[%s]===>\n", __func__);
-	ifs_clm_chk_ok = phydm_ifs_clm_mntr_chk(dm, 960); /*monitor 960ms*/
-
-	if (ifs_clm_chk_ok)
-		phydm_ifs_clm_trigger(dm);
-#endif
-}
-
-void phydm_enhance_monitor_init(void *dm_void)
-{
-#ifdef IFS_CLM_SUPPORT
-	struct dm_struct *dm = (struct dm_struct *)dm_void;
+	phydm_ifs_clm_get_utility(dm);
+	rpt->ifs_clm_tx_ratio = ccx->ifs_clm_tx_ratio;
+	rpt->ifs_clm_edcca_excl_cca_ratio = ccx->ifs_clm_edcca_excl_cca_ratio;
+	rpt->ifs_clm_cck_fa_ratio = ccx->ifs_clm_cck_fa_ratio;
+	rpt->ifs_clm_cck_cca_excl_fa_ratio = ccx->ifs_clm_cck_cca_excl_fa_ratio;
+	rpt->ifs_clm_ofdm_fa_ratio = ccx->ifs_clm_ofdm_fa_ratio;
+	rpt->ifs_clm_ofdm_cca_excl_fa_ratio = ccx->ifs_clm_ofdm_cca_excl_fa_ratio;
+	rpt->ifs_clm_rpt_stamp = ccx->ifs_clm_rpt_stamp;
+	enhance_mntr_rpt |= IFS_CLM_SUCCESS;
 
-	if (!(dm->support_ic_type & PHYDM_IC_SUPPORT_IFS_CLM))
-		return;
+	PHYDM_DBG(dm, DBG_ENV_MNTR,
+		  "[IFS_CLM]rpt_stamp = %d, Tx_ratio = %d, EDCCA_exclude_CCA_ratio = %d\n",
+		  ccx->ifs_clm_rpt_stamp, ccx->ifs_clm_tx_ratio,
+		  ccx->ifs_clm_edcca_excl_cca_ratio);	
+	PHYDM_DBG(dm, DBG_ENV_MNTR,
+		  "CCK : FA_ratio = %d, CCA_exclude_FA_ratio = %d\n",
+		  ccx->ifs_clm_cck_fa_ratio, ccx->ifs_clm_cck_cca_excl_fa_ratio);
+	PHYDM_DBG(dm, DBG_ENV_MNTR,
+		  "OFDM : FA_ratio = %d, CCA_exclude_FA_ratio = %d\n",
+		  ccx->ifs_clm_ofdm_fa_ratio,
+		  ccx->ifs_clm_ofdm_cca_excl_fa_ratio);
 
-	PHYDM_DBG(dm, DBG_ENV_MNTR, "[%s]===>\n", __func__);
-	phydm_ifs_clm_restart(dm);
-	phydm_ifs_clm_init(dm);
+	rpt->nhm_rpt_stamp = ccx->nhm_rpt_stamp;
+	rpt->clm_rpt_stamp = ccx->clm_rpt_stamp;
+	rpt->fahm_rpt_stamp = ccx->fahm_rpt_stamp;
+	rpt->ifs_clm_rpt_stamp = ccx->ifs_clm_rpt_stamp;
 #endif
+	return enhance_mntr_rpt;
 }
 
 void phydm_enhance_mntr_dbg(void *dm_void, char input[][16], u32 *_used,
@@ -3213,37 +3347,47 @@ void phydm_enhance_mntr_dbg(void *dm_void, char input[][16], u32 *_used,
 			 "Set Result=%d, rpt_stamp{NHM, CLM, FAHM, IFS_CLM}={%d, %d, %d, %d}\n",
 			 set_result, rpt.nhm_rpt_stamp, rpt.clm_rpt_stamp,
 			 rpt.fahm_rpt_stamp, rpt.ifs_clm_rpt_stamp);
-
 		PDM_SNPF(out_len, used, output + used, out_len - used,
-			 "nhm_IGI=0x%x, nhm_ratio=%d, ,nhm_env_ratio=%d, noise_pwr=%d, pwr=%d\n",
+			 "clm_ratio=%d, nhm_idle_ratio=%d, nhm_tx_ratio=%d\n",
+			 rpt.clm_ratio, rpt.nhm_idle_ratio, rpt.nhm_tx_ratio);
+		PDM_SNPF(out_len, used, output + used, out_len - used,
+			 "nhm_IGI=0x%x, nhm_ratio=%d, nhm_env_ratio=%d, nhm_noise_pwr=%d, nhm_pwr=%d\n",
 			 ccx->nhm_igi, rpt.nhm_ratio, rpt.nhm_env_ratio,
 			 rpt.nhm_noise_pwr, rpt.nhm_pwr);
-
-		for (i = 0; i <= 11; i++) {
+		for (i = 0; i < NHM_RPT_NUM; i++) {
 			PDM_SNPF(out_len, used, output + used, out_len - used,
 				 "nhm_rpt[%d] = %d (%d percent)\n", i,
 				 rpt.nhm_result[i],
 				 (((rpt.nhm_result[i] * 100) + 128) >> 8));
 		}
+		if (!(rpt.fahm_inclu_cck))
+			PDM_SNPF(out_len, used, output + used,
+				 out_len - used,
+				 "===>The following fahm report does not count CCK pkt\n");
 
-		PDM_SNPF(out_len, used, output + used, out_len - used,
-			 "clm_ratio=%d, fahm_IGI=0x%x, fahm_pwr=%d\n",
-			 rpt.clm_ratio, ccx->fahm_igi, rpt.fahm_pwr);
-
-		for (i = 0; i <= 11; i++) {
+		for (i = 0; i < FAHM_RPT_NUM; i++) {
 			PDM_SNPF(out_len, used, output + used, out_len - used,
 				 "fahm_rpt[%d] = %d (%d percent)\n", i,
 				 rpt.fahm_result[i],
 				 (((rpt.fahm_result[i] * 100) + 32768) >> 16));
 		}
 
+		PDM_SNPF(out_len, used, output + used, out_len - used,
+			 "fahm_IGI=0x%x, fahm_pwr=%d, fahm_ratio=%d, fahm_denom_ratio=%d\n",
+			 ccx->fahm_igi, rpt.fahm_pwr, rpt.fahm_ratio,
+			 rpt.fahm_denom_ratio);
 		PDM_SNPF(out_len, used, output + used, out_len - used,
 			 "ifs_clm_Tx_ratio = %d, ifs_clm_EDCCA_exclude_CCA_ratio = %d \n",
 			 rpt.ifs_clm_tx_ratio,
 			 rpt.ifs_clm_edcca_excl_cca_ratio);
 		PDM_SNPF(out_len, used, output + used, out_len - used,
-			 "ifs_clm_FA_ratio = %d, ifs_clm_CCA_exclude_FA_ratio = %d \n",
-			 rpt.ifs_clm_fa_ratio, rpt.ifs_clm_cca_excl_fa_ratio);
+			 "ifs_clm_cck_fa_ratio = %d, ifs_clm_cck_cca_exclude_FA_ratio = %d \n",
+			 rpt.ifs_clm_cck_fa_ratio,
+			 rpt.ifs_clm_cck_cca_excl_fa_ratio);
+		PDM_SNPF(out_len, used, output + used, out_len - used,
+			 "ifs_clm_ofdm_fa_ratio = %d, ifs_clm_ofdm_cca_exclude_FA_ratio = %d \n",
+			 rpt.ifs_clm_ofdm_fa_ratio,
+			 rpt.ifs_clm_ofdm_cca_excl_fa_ratio);
 	} else { /* Set & trigger*/
 		/*nhm para*/
 		nhm_para.incld_txon = NHM_EXCLUDE_TXON;
@@ -3260,9 +3404,8 @@ void phydm_enhance_mntr_dbg(void *dm_void, char input[][16], u32 *_used,
 		clm_para.mntr_time = 262;
 
 		/*fahm para*/
-		fahm_para.incld_fa = FAHM_INCLUDE_FA;
-		fahm_para.incld_crc32_ok = FAHM_EXCLUDE_CRC32_OK;
-		fahm_para.incld_crc32_err = FAHM_EXCLUDE_CRC32_ERR;
+		fahm_para.numer_opt = FAHM_INCLU_FA;
+		fahm_para.denom_opt = FAHM_INCLU_CRC_ERR;
 		fahm_para.app = FAHM_ACS;
 		fahm_para.lv = FAHM_LV_2;
 		fahm_para.mntr_time = 262;
@@ -3289,3 +3432,372 @@ void phydm_enhance_mntr_dbg(void *dm_void, char input[][16], u32 *_used,
 #endif
 }
 
+#ifdef EDCCA_CLM_SUPPORT
+
+void phydm_edcca_clm_racing_release(void *dm_void)
+{
+	struct dm_struct *dm = (struct dm_struct *)dm_void;
+	struct ccx_info *ccx = &dm->dm_ccx_info;
+
+	PHYDM_DBG(dm, DBG_ENV_MNTR, "[%s]===>\n", __func__);
+	PHYDM_DBG(dm, DBG_ENV_MNTR, "lv:(%d)->(0)\n", ccx->edcca_clm_set_lv);
+
+	ccx->edcca_clm_ongoing = false;
+	ccx->edcca_clm_set_lv = EDCCA_CLM_RELEASE;
+	ccx->edcca_clm_app = EDCCA_CLM_BACKGROUND;
+}
+
+u8 phydm_edcca_clm_racing_ctrl(void *dm_void, enum phydm_edcca_clm_level lv)
+{
+	struct dm_struct *dm = (struct dm_struct *)dm_void;
+	struct ccx_info *ccx = &dm->dm_ccx_info;
+	u8 set_result = PHYDM_SET_SUCCESS;
+
+	PHYDM_DBG(dm, DBG_ENV_MNTR, "edcca_clm_ongoing=%d, lv:(%d)->(%d)\n",
+		  ccx->edcca_clm_ongoing, ccx->edcca_clm_set_lv, lv);
+	if (ccx->edcca_clm_ongoing) {
+		if (lv <= ccx->edcca_clm_set_lv) {
+			set_result = PHYDM_SET_FAIL;
+		} else {
+			phydm_ccx_hw_restart(dm);
+			ccx->edcca_clm_ongoing = false;
+		}
+	}
+
+	if (set_result)
+		ccx->edcca_clm_set_lv = lv;
+
+	PHYDM_DBG(dm, DBG_ENV_MNTR, "edcca_clm racing success=%d\n",
+		  set_result);
+	return set_result;
+}
+
+void phydm_edcca_clm_trigger(void *dm_void)
+{
+	struct dm_struct *dm = (struct dm_struct *)dm_void;
+	struct ccx_info *ccx = &dm->dm_ccx_info;
+
+	PHYDM_DBG(dm, DBG_ENV_MNTR, "[%s]===>\n", __func__);
+
+	odm_set_bb_reg(dm, R_0x1e5c, BIT(26), 0x0);
+	odm_set_bb_reg(dm, R_0x1e5c, BIT(26), 0x1);
+
+	ccx->edcca_clm_trigger_time = dm->phydm_sys_up_time;
+	ccx->edcca_clm_rpt_stamp++;
+	ccx->edcca_clm_ongoing = true;
+}
+
+void phydm_edcca_clm_get_utility(void *dm_void)
+{
+	struct dm_struct *dm = (struct dm_struct *)dm_void;
+	struct ccx_info *ccx = &dm->dm_ccx_info;
+
+	ccx->edcca_clm_ratio = phydm_ccx_get_rpt_ratio(dm,
+						       ccx->edcca_clm_result,
+						       EDCCA_CLM_PERIOD);
+}
+
+boolean
+phydm_edcca_clm_get_result(void *dm_void)
+{
+	struct dm_struct *dm = (struct dm_struct *)dm_void;
+	struct ccx_info *ccx_info = &dm->dm_ccx_info;
+	u32 val = 0;
+
+	if (!(odm_get_bb_reg(dm, R_0x2d8c, BIT(16)))) {
+		PHYDM_DBG(dm, DBG_ENV_MNTR, "Get EDCCA_CLM report Fail\n");
+		phydm_edcca_clm_racing_release(dm);
+		return false;
+	}
+
+	val = odm_get_bb_reg(dm, R_0x2d8c, MASKLWORD);
+	ccx_info->edcca_clm_result = (u16)val;
+
+	PHYDM_DBG(dm, DBG_ENV_MNTR, "EDCCA_CLM result = %d *4 us\n",
+		  ccx_info->edcca_clm_result);
+	phydm_edcca_clm_racing_release(dm);
+	return true;
+}
+
+u8 phydm_edcca_clm_mntr_set(void *dm_void, struct edcca_clm_para_info *para)
+{
+	struct dm_struct *dm = (struct dm_struct *)dm_void;
+	struct ccx_info *ccx = &dm->dm_ccx_info;
+
+	if (para->edcca_clm_lv >= EDCCA_CLM_MAX_NUM) {
+		PHYDM_DBG(dm, DBG_ENV_MNTR, "[WARNING] Wrong LV=%d\n",
+			  para->edcca_clm_lv);
+		return PHYDM_SET_FAIL;
+	}
+
+	if (phydm_edcca_clm_racing_ctrl(dm, para->edcca_clm_lv) == PHYDM_SET_FAIL)
+		return PHYDM_SET_FAIL;
+
+	ccx->edcca_clm_app = para->edcca_clm_app;
+
+	return PHYDM_SET_SUCCESS;
+}
+
+boolean
+phydm_edcca_clm_mntr_racing_chk(void *dm_void)
+{
+	struct dm_struct *dm = (struct dm_struct *)dm_void;
+	struct ccx_info *ccx = &dm->dm_ccx_info;
+	u32 sys_return_time = 0;
+
+	if (ccx->edcca_clm_manual_ctrl) {
+		PHYDM_DBG(dm, DBG_ENV_MNTR, "EDCCA_CLM in manual ctrl\n");
+		return true;
+	}
+
+	sys_return_time = ccx->edcca_clm_trigger_time + MAX_ENV_MNTR_TIME;
+
+	if (ccx->edcca_clm_app != EDCCA_CLM_BACKGROUND &&
+	    (sys_return_time > dm->phydm_sys_up_time)) {
+		PHYDM_DBG(dm, DBG_ENV_MNTR,
+			  "edcca_clm_app=%d, trigger_time %d, sys_time=%d\n",
+			  ccx->edcca_clm_app, ccx->edcca_clm_trigger_time,
+			  dm->phydm_sys_up_time);
+
+		return true;
+	}
+
+	return false;
+}
+
+boolean
+phydm_edcca_clm_mntr_chk(void *dm_void)
+{
+	struct dm_struct *dm = (struct dm_struct *)dm_void;
+	struct ccx_info *ccx = &dm->dm_ccx_info;
+	struct edcca_clm_para_info para = {0};
+	boolean edcca_clm_chk_result = false;
+
+	PHYDM_DBG(dm, DBG_ENV_MNTR, "[%s]===>\n", __func__);
+
+	if (phydm_edcca_clm_mntr_racing_chk(dm))
+		return edcca_clm_chk_result;
+
+	/*[EDCCA_CLM trigger setting]----------------------------------------*/
+	para.edcca_clm_app = EDCCA_CLM_BACKGROUND;
+	para.edcca_clm_lv = EDCCA_CLM_LV_1;
+
+	edcca_clm_chk_result = phydm_edcca_clm_mntr_set(dm, &para);
+
+	return edcca_clm_chk_result;
+}
+
+boolean
+phydm_edcca_clm_mntr_result(void *dm_void)
+{
+	struct dm_struct *dm = (struct dm_struct *)dm_void;
+	struct ccx_info *ccx = &dm->dm_ccx_info;
+	boolean edcca_clm_chk_result = false;
+
+	PHYDM_DBG(dm, DBG_ENV_MNTR, "[%s]===>\n", __func__);
+
+	if (phydm_edcca_clm_mntr_racing_chk(dm))
+		return edcca_clm_chk_result;
+
+	/*[EDCCA_CLM get result & calculate Utility]-------------------------*/
+	if (phydm_edcca_clm_get_result(dm)) {
+		PHYDM_DBG(dm, DBG_ENV_MNTR, "Get EDCCA_CLM_rpt success\n");
+		phydm_edcca_clm_get_utility(dm);
+		edcca_clm_chk_result = true;
+	}
+
+	return edcca_clm_chk_result;
+}
+
+void phydm_edcca_clm_init(void *dm_void)
+{
+	struct dm_struct *dm = (struct dm_struct *)dm_void;
+	struct ccx_info *ccx = &dm->dm_ccx_info;
+
+	PHYDM_DBG(dm, DBG_ENV_MNTR, "[%s]===>\n", __func__);
+	ccx->edcca_clm_ongoing = false;
+	ccx->edcca_clm_manual_ctrl = 0;
+	ccx->edcca_clm_rpt_stamp = 0;
+}
+
+void phydm_edcca_clm_dbg(void *dm_void, char input[][16], u32 *_used,
+			 char *output, u32 *_out_len)
+{
+	struct dm_struct *dm = (struct dm_struct *)dm_void;
+	struct ccx_info *ccx = &dm->dm_ccx_info;
+	char help[] = "-h";
+	u32 var1[10] = {0};
+	u32 used = *_used;
+	u32 out_len = *_out_len;
+	struct edcca_clm_para_info para = {0};
+	u32 i;
+
+	if (!(dm->support_ic_type & PHYDM_IC_SUPPORT_EDCCA_CLM))
+		return;
+
+	for (i = 0; i < 4; i++) {
+		if (input[i + 1])
+			PHYDM_SSCANF(input[i + 1], DCMD_DECIMAL, &var1[i]);
+	}
+
+	if ((strcmp(input[1], help) == 0)) {
+		PDM_SNPF(out_len, used, output + used, out_len - used,
+			 "EDCCA_CLM Basic-Trigger 262ms: {1}\n");
+		PDM_SNPF(out_len, used, output + used, out_len - used,
+			 "EDCCA_CLM Adv-Trigger 262ms: {2} {app} {LV}\n");
+		PDM_SNPF(out_len, used, output + used, out_len - used,
+			 "EDCCA_CLM Get Result: {100}\n");
+	} else if (var1[0] == 100) {
+		if (phydm_edcca_clm_get_result(dm))
+			phydm_edcca_clm_get_utility(dm);
+
+		PDM_SNPF(out_len, used, output + used, out_len - used,
+			 "edcca_clm_rpt_stamp=%d\n", ccx->edcca_clm_rpt_stamp);
+
+		PDM_SNPF(out_len, used, output + used, out_len - used,
+			 "edcca_clm_ratio:((%d percent)) = (%d us/ 262140 us)\n",
+			 ccx->edcca_clm_ratio, ccx->edcca_clm_result << 2);
+
+		ccx->edcca_clm_manual_ctrl = 0;
+	} else {
+		ccx->edcca_clm_manual_ctrl = 1;
+
+		if (var1[0] == 1) {
+			para.edcca_clm_app = EDCCA_CLM_DBG;
+			para.edcca_clm_lv = EDCCA_CLM_LV_4;
+		} else if (var1[0] == 2) {
+			para.edcca_clm_app = (enum edcca_clm_application)var1[1];
+			para.edcca_clm_lv = (enum phydm_edcca_clm_level)var1[2];
+		}
+
+		PDM_SNPF(out_len, used, output + used, out_len - used,
+			 "app=%d, lv=%d\n", para.edcca_clm_app,
+			 para.edcca_clm_lv);
+
+		if (phydm_edcca_clm_mntr_set(dm, &para) == PHYDM_SET_SUCCESS)
+			phydm_edcca_clm_trigger(dm);
+
+		PDM_SNPF(out_len, used, output + used, out_len - used,
+			 "edcca_clm_rpt_stamp=%d\n", ccx->edcca_clm_rpt_stamp);
+	}
+
+	*_used = used;
+	*_out_len = out_len;
+}
+
+#endif
+
+/*Environment Monitor*/
+void phydm_env_mntr_result_watchdog(void *dm_void)
+{
+	struct dm_struct *dm = (struct dm_struct *)dm_void;
+	struct ccx_info *ccx = &dm->dm_ccx_info;
+
+	ccx->ccx_watchdog_result = 0;
+
+	if (!(dm->support_ability & ODM_BB_ENV_MONITOR))
+		return;
+
+	#if (defined(NHM_SUPPORT) && defined(CLM_SUPPORT))
+	if (phydm_nhm_mntr_result(dm))
+		ccx->ccx_watchdog_result |= NHM_SUCCESS;
+
+	if (phydm_clm_mntr_result(dm))
+		ccx->ccx_watchdog_result |= CLM_SUCCESS;
+
+	PHYDM_DBG(dm, DBG_ENV_MNTR,
+		  "Summary: nhm_ratio=((%d)) nhm_env_ratio=((%d)) clm_ratio=((%d))\n",
+		  ccx->nhm_ratio, ccx->nhm_env_ratio, ccx->clm_ratio);
+	PHYDM_DBG(dm, DBG_ENV_MNTR,
+		  "nhm_idle_ratio=((%d)) nhm_tx_ratio=((%d))\n\n",
+		  ccx->nhm_idle_ratio, ccx->nhm_tx_ratio);
+	#endif
+
+	#ifdef FAHM_SUPPORT
+	if (dm->support_ic_type & PHYDM_IC_SUPPORT_FAHM) {
+		if (phydm_fahm_mntr_result(dm))
+			ccx->ccx_watchdog_result |= FAHM_SUCCESS;
+	}
+	#endif
+
+	#ifdef IFS_CLM_SUPPORT
+	if (dm->support_ic_type & PHYDM_IC_SUPPORT_IFS_CLM) {
+		if (phydm_ifs_clm_mntr_result(dm))
+			ccx->ccx_watchdog_result |= IFS_CLM_SUCCESS;
+	}
+	#endif
+
+	#ifdef EDCCA_CLM_SUPPORT
+	if (dm->support_ic_type & PHYDM_IC_SUPPORT_EDCCA_CLM) {
+		if (phydm_edcca_clm_mntr_result(dm))
+			ccx->ccx_watchdog_result |= EDCCA_CLM_SUCCESS;
+	}
+	#endif
+}
+
+void phydm_env_mntr_set_watchdog(void *dm_void)
+{
+	struct dm_struct *dm = (struct dm_struct *)dm_void;
+	struct ccx_info *ccx = &dm->dm_ccx_info;
+
+	if (!(dm->support_ability & ODM_BB_ENV_MONITOR))
+		return;
+
+	PHYDM_DBG(dm, DBG_ENV_MNTR, "[%s]===>\n", __func__);
+
+	#if (defined(NHM_SUPPORT) && defined(CLM_SUPPORT))
+	if (phydm_nhm_mntr_chk(dm, 262))
+		phydm_nhm_trigger(dm);
+
+	if (phydm_clm_mntr_chk(dm, 262))
+		phydm_clm_trigger(dm);
+	#endif
+
+	#ifdef FAHM_SUPPORT
+	if (dm->support_ic_type & PHYDM_IC_SUPPORT_FAHM) {
+		if (phydm_fahm_mntr_chk(dm, 262))
+			phydm_fahm_trigger(dm);
+	}
+	#endif
+
+	#ifdef IFS_CLM_SUPPORT
+	if (dm->support_ic_type & PHYDM_IC_SUPPORT_IFS_CLM) {
+		if (phydm_ifs_clm_mntr_chk(dm, 960))
+			phydm_ifs_clm_trigger(dm);
+	}
+	#endif
+
+	#ifdef EDCCA_CLM_SUPPORT
+	if (dm->support_ic_type & PHYDM_IC_SUPPORT_EDCCA_CLM) {
+		if (phydm_edcca_clm_mntr_chk(dm))
+			phydm_edcca_clm_trigger(dm);
+	}
+	#endif
+}
+
+void phydm_env_monitor_init(void *dm_void)
+{
+	struct dm_struct *dm = (struct dm_struct *)dm_void;
+	#if (defined(NHM_SUPPORT) && defined(CLM_SUPPORT))
+	phydm_ccx_hw_restart(dm);
+	phydm_nhm_init(dm);
+	phydm_clm_init(dm);
+	#endif
+
+	#ifdef FAHM_SUPPORT
+	phydm_fahm_init(dm);
+	#endif
+
+	#ifdef IFS_CLM_SUPPORT
+	if (dm->support_ic_type & PHYDM_IC_SUPPORT_IFS_CLM) {
+		phydm_ifs_clm_restart(dm);
+		phydm_ifs_clm_init(dm);
+	}
+	#endif
+
+	#ifdef EDCCA_CLM_SUPPORT
+	if (dm->support_ic_type & PHYDM_IC_SUPPORT_EDCCA_CLM)
+		phydm_edcca_clm_init(dm);
+	#endif
+}
+
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm_ccx.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm_ccx.h
index 5f0ec4f145b4..2dd7c57decad 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm_ccx.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm_ccx.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017  Realtek Corporation.
@@ -27,8 +26,8 @@
 #ifndef __PHYDMCCX_H__
 #define __PHYDMCCX_H__
 
-/* 2020.07.21 Fix 8723F compile warning and remove 8723f in dym_pw_th(this machanism is WA patch only for 8822C ASUS)*/
-#define CCX_VERSION "4.4"
+/* 2021.03.10 Add 8814C flag*/
+#define CCX_VERSION "4.9"
 
 /* @1 ============================================================
  * 1  Definition
@@ -40,25 +39,38 @@
 #define	MS_TO_US		1000
 #define	MS_TO_4US_RATIO		250
 #define	CCA_CAP			14
+/*CLM*/
 #define	CLM_MAX_REPORT_TIME	10
 #define	CLM_PERIOD_MAX		65535
-#define	IFS_CLM_PERIOD_MAX	65535
+/*NHM*/
 #define	NHM_PERIOD_MAX		65534
-#define	NHM_TH_NUM		11	/*threshold number of NHM/FAHM*/
+#define	NHM_TH_NUM		11	/*threshold number of NHM*/
 #define	NHM_RPT_NUM		12
 #define NHM_IC_NOISE_TH		60	/*60/2 - 10 = 20 = -80 dBm*/
-#define	IFS_CLM_NUM		4
+#define NHM_RPT_MAX		255
 #ifdef NHM_DYM_PW_TH_SUPPORT
 #define	DYM_PWTH_CCA_CAP	24
 #endif
-
 #define	IGI_2_NHM_TH(igi)	((igi) << 1)/*NHM/FAHM threshold = IGI * 2*/
 #define	NTH_TH_2_RSSI(th)	((th >> 1) - 10)
+/*FAHM*/
+#define	FAHM_INCLU_FA		BIT(0)
+#define	FAHM_INCLU_CRC_OK	BIT(1)
+#define	FAHM_INCLU_CRC_ERR	BIT(2)
+#define	FAHM_PERIOD_MAX		65534
+#define	FAHM_TH_NUM		11	/*threshold number of FAHM*/
+#define	FAHM_RPT_NUM		12
+/*IFS-CLM*/
+#define	IFS_CLM_PERIOD_MAX	65535
+#define	IFS_CLM_NUM		4
+/*EDCCA-CLM*/
+#define	EDCCA_CLM_PERIOD	65535
 
 #define NHM_SUCCESS		BIT(0)
 #define CLM_SUCCESS		BIT(1)
 #define FAHM_SUCCESS		BIT(2)
 #define IFS_CLM_SUCCESS		BIT(3)
+#define EDCCA_CLM_SUCCESS	BIT(4)
 #define	ENV_MNTR_FAIL		0xff
 
 /* @1 ============================================================
@@ -101,6 +113,15 @@ enum phydm_ifs_clm_level {
 	IFS_CLM_MAX_NUM		= 5
 };
 
+enum phydm_edcca_clm_level {
+	EDCCA_CLM_RELEASE	= 0,
+	EDCCA_CLM_LV_1	= 1,	/* @Low Priority function */
+	EDCCA_CLM_LV_2	= 2,	/* @Middle Priority function */
+	EDCCA_CLM_LV_3	= 3,	/* @High priority function (ex: Check hang function) */
+	EDCCA_CLM_LV_4	= 4,	/* @Debug function (the highest priority) */
+	EDCCA_CLM_MAX_NUM	= 5
+};
+
 enum nhm_divider_opt_all {
 	NHM_CNT_ALL		= 0,	/*nhm SUM report <= 255*/
 	NHM_VALID		= 1,	/*nhm SUM report = 255*/
@@ -139,24 +160,6 @@ enum clm_application {
 	CLM_ACS			= 1,
 };
 
-enum fahm_opt_fa {
-	FAHM_EXCLUDE_FA	= 	0,
-	FAHM_INCLUDE_FA	= 	1,
-	FAHM_FA_INIT
-};
-
-enum fahm_opt_crc32_ok {
-	FAHM_EXCLUDE_CRC32_OK	= 0,
-	FAHM_INCLUDE_CRC32_OK	= 1,
-	FAHM_CRC32_OK_INIT
-};
-
-enum fahm_opt_crc32_err {
-	FAHM_EXCLUDE_CRC32_ERR	= 0,
-	FAHM_INCLUDE_CRC32_ERR	= 1,
-	FAHM_CRC32_ERR_INIT
-};
-
 enum fahm_application {
 	FAHM_BACKGROUND		= 0,/*default*/
 	FAHM_ACS		= 1,
@@ -183,6 +186,12 @@ enum phydm_ifs_clm_unit {
 	IFS_CLM_INIT
 };
 
+enum edcca_clm_application {
+	EDCCA_CLM_BACKGROUND	= 0,/*@default*/
+	EDCCA_CLM_ACS		= 1,
+	EDCCA_CLM_DBG		= 2,
+};
+
 /* @1 ============================================================
  * 1  structure
  * 1 ============================================================
@@ -195,6 +204,8 @@ struct env_trig_rpt {
 struct env_mntr_rpt {
 	u8			nhm_ratio;
 	u8			nhm_env_ratio; /*exclude nhm_r[0] above -80dBm or first cluster under -80dBm*/
+	u8			nhm_idle_ratio;
+	u8			nhm_tx_ratio;
 	u8			nhm_result[NHM_RPT_NUM];
 	u8			clm_ratio;
 	u8			nhm_rpt_stamp;
@@ -213,6 +224,8 @@ struct enhance_mntr_trig_rpt {
 struct enhance_mntr_rpt {
 	u8			nhm_ratio;
 	u8			nhm_env_ratio; /*exclude nhm_r[0] above -80dBm or first cluster under -80dBm*/
+	u8			nhm_idle_ratio;
+	u8			nhm_tx_ratio;
 	u8			nhm_result[NHM_RPT_NUM];
 	u8			clm_ratio;
 	u8			nhm_rpt_stamp;
@@ -222,11 +235,16 @@ struct enhance_mntr_rpt {
 	u16			fahm_result[NHM_RPT_NUM];
 	u8			fahm_rpt_stamp;
 	u8			fahm_pwr;
+	u8			fahm_ratio;
+	u8			fahm_denom_ratio;
+	u8			fahm_inclu_cck;
 	u8			ifs_clm_rpt_stamp;
 	u8			ifs_clm_tx_ratio;
 	u8			ifs_clm_edcca_excl_cca_ratio;
-	u8			ifs_clm_fa_ratio;
-	u8			ifs_clm_cca_excl_fa_ratio;
+	u8			ifs_clm_cck_fa_ratio;
+	u8			ifs_clm_cck_cca_excl_fa_ratio;
+	u8			ifs_clm_ofdm_fa_ratio;
+	u8			ifs_clm_ofdm_cca_excl_fa_ratio;
 };
 
 struct nhm_para_info {
@@ -247,12 +265,11 @@ struct clm_para_info {
 };
 
 struct fahm_para_info {
-	enum fahm_opt_fa		incld_fa;
-	enum fahm_opt_crc32_ok		incld_crc32_ok;
-	enum fahm_opt_crc32_err		incld_crc32_err;
 	enum fahm_application		app;
 	enum phydm_fahm_level		lv;
 	u16				mntr_time;	/*0~262 unit ms*/
+	u8				numer_opt;
+	u8				denom_opt;
 	boolean				en_1db_mode;
 	u8				th0_manual;/* for 1-db mode*/
 };
@@ -268,12 +285,19 @@ struct ifs_clm_para_info {
 	s16				th_shift;
 };
 
+struct edcca_clm_para_info {
+	enum edcca_clm_application	edcca_clm_app;
+	enum phydm_edcca_clm_level	edcca_clm_lv;
+};
+
 struct ccx_info {
 	u32			nhm_trigger_time;
 	u32			clm_trigger_time;
 	u32			fahm_trigger_time;
 	u32			ifs_clm_trigger_time;
+	u32			edcca_clm_trigger_time;
 	u64			start_time;	/*@monitor for the test duration*/
+	u8			ccx_watchdog_result;
 #ifdef NHM_SUPPORT
 	enum nhm_application		nhm_app;
 	enum nhm_option_txon_all	nhm_include_txon;
@@ -288,7 +312,10 @@ struct ccx_info {
 	u8			nhm_manual_ctrl;
 	u8			nhm_ratio;	/*@1% per nuit, it means the interference igi can't overcome.*/
 	u8			nhm_env_ratio; /*exclude nhm_r[0] above -80dBm or first cluster under -80dBm*/
+	u8			nhm_idle_ratio;
+	u8			nhm_tx_ratio;
 	u8			nhm_rpt_sum;
+	u16			nhm_duration;	/*@Real time of NHM_VALID */
 	u8			nhm_set_lv;
 	boolean			nhm_ongoing;
 	u8			nhm_rpt_stamp;
@@ -321,21 +348,22 @@ struct ccx_info {
 #endif
 #ifdef FAHM_SUPPORT
 	enum fahm_application	fahm_app;
-	enum fahm_opt_fa	fahm_incld_fa;
-	enum fahm_opt_crc32_ok	fahm_incld_crc32_ok;
-	enum fahm_opt_crc32_err	fahm_incld_crc32_err;
 	boolean			fahm_ongoing;
-	u8			fahm_nume_sel;	/*@fahm_numerator_sel: select {FA, CRCOK, CRC_fail} */
-	u8			fahm_denom_sel;	/*@fahm_denominator_sel: select {FA, CRCOK, CRC_fail} */
+	u8			fahm_numer_opt;
+	u8			fahm_denom_opt;
+	boolean			fahm_inclu_cck;
 	u8			fahm_th[NHM_TH_NUM];
 	u16			fahm_result[NHM_RPT_NUM];
+	u16			fahm_result_sum;
+	u16			fahm_denom_result;
 	u16			fahm_period;	/*unit: 4us*/
 	u8			fahm_igi;
 	u8			fahm_manual_ctrl;
-	u16			fahm_rpt_sum;
 	u8			fahm_set_lv;
 	u8			fahm_rpt_stamp;
 	u8			fahm_pwr; /*including r[0]~r[11]*/
+	u8			fahm_ratio;
+	u8			fahm_denom_ratio;
 #endif
 #ifdef IFS_CLM_SUPPORT
 	enum ifs_clm_application	ifs_clm_app;
@@ -363,8 +391,19 @@ struct ccx_info {
 	u16			ifs_clm_avg_cca[IFS_CLM_NUM];	/*4,8,12,16us per unit*/
 	u8			ifs_clm_tx_ratio;
 	u8			ifs_clm_edcca_excl_cca_ratio;
-	u8			ifs_clm_fa_ratio;
-	u8			ifs_clm_cca_excl_fa_ratio;
+	u8			ifs_clm_cck_fa_ratio;
+	u8			ifs_clm_cck_cca_excl_fa_ratio;
+	u8			ifs_clm_ofdm_fa_ratio;
+	u8			ifs_clm_ofdm_cca_excl_fa_ratio;
+#endif
+#ifdef EDCCA_CLM_SUPPORT
+	enum edcca_clm_application	edcca_clm_app;
+	u8				edcca_clm_manual_ctrl;
+	u8				edcca_clm_set_lv;
+	boolean 			edcca_clm_ongoing;
+	u16				edcca_clm_result;
+	u8				edcca_clm_ratio;
+	u8				edcca_clm_rpt_stamp;
 #endif
 };
 
@@ -399,10 +438,6 @@ u8 phydm_env_mntr_trigger(void *dm_void, struct nhm_para_info *nhm_para,
 
 u8 phydm_env_mntr_result(void *dm_void, struct env_mntr_rpt *rpt);
 
-void phydm_env_mntr_watchdog(void *dm_void);
-
-void phydm_env_monitor_init(void *dm_void);
-
 void phydm_env_mntr_dbg(void *dm_void, char input[][16], u32 *_used,
 			char *output, u32 *_out_len);
 
@@ -420,10 +455,20 @@ u8 phydm_enhance_mntr_trigger(void *dm_void,
 
 u8 phydm_enhance_mntr_result(void *dm_void, struct enhance_mntr_rpt *rpt);
 
-void phydm_enhance_mntr_watchdog(void *dm_void);
-
-void phydm_enhance_monitor_init(void *dm_void);
-
 void phydm_enhance_mntr_dbg(void *dm_void, char input[][16], u32 *_used,
 			char *output, u32 *_out_len);
+
+#ifdef EDCCA_CLM_SUPPORT
+void phydm_edcca_clm_dbg(void *dm_void, char input[][16], u32 *_used,
+			 char *output, u32 *_out_len);
+#endif
+
+void phydm_env_mntr_result_watchdog(void *dm_void);
+
+void phydm_env_mntr_set_watchdog(void *dm_void);
+
+u8 phydm_env_mntr_get_802_11_k_rsni(void *dm_void, s8 rcpi, s8 anpi);
+
+void phydm_env_monitor_init(void *dm_void);
+
 #endif
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm_cfotracking.c b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm_cfotracking.c
index 6eb3384b4ba3..766511a4ac00 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm_cfotracking.c
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm_cfotracking.c
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017  Realtek Corporation.
@@ -212,7 +211,8 @@ phydm_set_crystal_cap_reg(void *dm_void, u8 crystal_cap)
 	u32 reg_val = 0;
 
 	if (dm->support_ic_type & (ODM_RTL8822C | ODM_RTL8814B |
-	    ODM_RTL8195B | ODM_RTL8812F | ODM_RTL8721D | ODM_RTL8710C|ODM_RTL8723F)) {
+	    ODM_RTL8195B | ODM_RTL8812F | ODM_RTL8721D |
+	    ODM_RTL8710C | ODM_RTL8723F | ODM_RTL8814C)) {
 		crystal_cap &= 0x7F;
 		reg_val = crystal_cap | (crystal_cap << 7);
 	} else {
@@ -298,7 +298,7 @@ phydm_set_crystal_cap_reg(void *dm_void, u8 crystal_cap)
 	#endif
 #if (RTL8822C_SUPPORT || RTL8814B_SUPPORT || RTL8812F_SUPPORT)
 	else if (dm->support_ic_type & (ODM_RTL8822C | ODM_RTL8814B |
-		 ODM_RTL8812F)) {
+		 ODM_RTL8812F | ODM_RTL8814C)) {
 		/* write 0x1040[23:17] = 0x1040[16:10] = crystal_cap */
 		odm_set_mac_reg(dm, R_0x1040, 0x00FFFC00, reg_val);
 	} else {
@@ -331,7 +331,8 @@ void phydm_cfo_tracking_reset(void *dm_void)
 	PHYDM_DBG(dm, DBG_CFO_TRK, "%s ======>\n", __func__);
 
 	if (dm->support_ic_type & (ODM_RTL8822C | ODM_RTL8814B | ODM_RTL8195B |
-	    ODM_RTL8812F|ODM_RTL8723F))
+	    ODM_RTL8812F | ODM_RTL8710C | ODM_RTL8721D | ODM_RTL8723F |
+	    ODM_RTL8814C))
 		cfo_track->def_x_cap = cfo_track->crystal_cap_default & 0x7f;
 	else
 		cfo_track->def_x_cap = cfo_track->crystal_cap_default & 0x3f;
@@ -357,7 +358,7 @@ void phydm_cfo_tracking_reset(void *dm_void)
 #endif
 #ifdef PHYDM_IC_JGR3_SERIES_SUPPORT
 #if (DM_ODM_SUPPORT_TYPE & (ODM_WIN | ODM_CE | ODM_AP))
-	if (dm->support_ic_type & ODM_RTL8814B) {
+	if (dm->support_ic_type & (ODM_RTL8814B | ODM_RTL8814C)) {
 		/*Disable advance time for CFO residual*/
 		odm_set_bb_reg(dm, R_0xc2c, BIT29, 0x0);
 	}
@@ -372,7 +373,8 @@ void phydm_cfo_tracking_init(void *dm_void)
 
 	PHYDM_DBG(dm, DBG_CFO_TRK, "[%s]=========>\n", __func__);
 	if (dm->support_ic_type & (ODM_RTL8822C | ODM_RTL8814B | ODM_RTL8195B |
-	    ODM_RTL8812F|ODM_RTL8723F))
+	    ODM_RTL8812F | ODM_RTL8710C | ODM_RTL8721D | ODM_RTL8723F |
+	    ODM_RTL8814C))
 		cfo_track->crystal_cap = cfo_track->crystal_cap_default & 0x7f;
 	else
 		cfo_track->crystal_cap = cfo_track->crystal_cap_default & 0x3f;
@@ -487,7 +489,8 @@ void phydm_cfo_tracking(void *dm_void)
 				crystal_cap -= 1;
 
 			if (dm->support_ic_type & (ODM_RTL8822C | ODM_RTL8814B |
-			    ODM_RTL8195B | ODM_RTL8812F|ODM_RTL8723F)) {
+			    ODM_RTL8195B | ODM_RTL8812F | ODM_RTL8710C |
+			    ODM_RTL8721D | ODM_RTL8723F | ODM_RTL8814C)) {
 				if (crystal_cap > 0x7F)
 					crystal_cap = 0x7F;
 			} else {
@@ -517,7 +520,7 @@ void phydm_cfo_tracking(void *dm_void)
 		#endif
 		#ifdef PHYDM_IC_JGR3_SERIES_SUPPORT
 		#if (DM_ODM_SUPPORT_TYPE & (ODM_WIN | ODM_CE | ODM_AP))
-		if (dm->support_ic_type & ODM_RTL8814B) {
+		if (dm->support_ic_type & (ODM_RTL8814B | ODM_RTL8814C)) {
 			//Disable advance time for CFO residual
 			odm_set_bb_reg(dm, R_0xc2c, BIT29, 0x0);
 		}
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm_cfotracking.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm_cfotracking.h
index 420e1f9e6d72..253f3ba3eabe 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm_cfotracking.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm_cfotracking.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017  Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm_debug.c b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm_debug.c
index 56a15cfe1b59..1d1df021ad4b 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm_debug.c
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm_debug.c
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017  Realtek Corporation.
@@ -1004,12 +1003,13 @@ void phydm_dm_summary_cli_win(void *dm_void, char *buf, u8 macid)
 		return;
 	}
 
-	RT_SPRINTF(buf, DBGM_CLI_BUF_SIZE, "00.(%s) %-12s: IGI=0x%x, Dyn_Rng=0x%x~0x%x, FA_th={%d,%d,%d}\n",
+	RT_SPRINTF(buf, DBGM_CLI_BUF_SIZE, "00.(%s) %-12s: IGI=0x%x, Dyn_Rng=0x%x~0x%x, fa_src=%d, FA_th={%d,%d,%d}\n",
 		   ((comp & ODM_BB_DIG) ?
 		   ((pause_comp & ODM_BB_DIG) ? "P" : "V") : "."),
 		   "DIG",
 		   dig_t->cur_ig_value,
 		   dig_t->rx_gain_range_min, dig_t->rx_gain_range_max,
+		   dig_t->fa_source,
 		   dig_t->fa_th[0], dig_t->fa_th[1], dig_t->fa_th[2]);
         RT_PRINT(buf);
 
@@ -1088,13 +1088,39 @@ void phydm_dm_summary_cli_win(void *dm_void, char *buf, u8 macid)
 	RT_PRINT(buf);
 
 	RT_SPRINTF(buf, DBGM_CLI_BUF_SIZE,
-		   "15.(%s) %-12s: ratio{nhm, clm}={%d, %d}, level{valid, RSSI}={%d, %d}\n",
+		   "15.(%s) %-12s: ratio{nhm, nhm_env, clm, idle, tx}={%d, %d, %d, %d, %d}, nhm_pwr=%d\n",
 		   ((comp & ODM_BB_ENV_MONITOR) ?
 		   ((pause_comp & ODM_BB_ENV_MONITOR) ? "P" : "V") : "."),
 		   "EnvMntr",
-		   dm->dm_ccx_info.nhm_ratio, dm->dm_ccx_info.clm_ratio,
-		   dm->dm_ccx_info.nhm_level_valid, dm->dm_ccx_info.nhm_level);
+		   dm->dm_ccx_info.nhm_ratio, dm->dm_ccx_info.nhm_env_ratio,
+		   dm->dm_ccx_info.clm_ratio, dm->dm_ccx_info.nhm_idle_ratio,
+		    dm->dm_ccx_info.nhm_tx_ratio, dm->dm_ccx_info.nhm_pwr);
 	RT_PRINT(buf);
+
+	RT_SPRINTF(buf, DBGM_CLI_BUF_SIZE, "15.(%s) %-12s: NHM_Rpt(H->L)[%d %d %d %d %d %d %d %d %d %d %d %d]\n",
+		   ((comp & ODM_BB_ENV_MONITOR) ?
+		   ((pause_comp & ODM_BB_ENV_MONITOR) ? "P" : "V") : "."),
+		   "EnvMntr",
+		   dm->dm_ccx_info.nhm_result[11],
+		   dm->dm_ccx_info.nhm_result[10],
+		   dm->dm_ccx_info.nhm_result[9], dm->dm_ccx_info.nhm_result[8],
+		   dm->dm_ccx_info.nhm_result[7], dm->dm_ccx_info.nhm_result[6],
+		   dm->dm_ccx_info.nhm_result[5], dm->dm_ccx_info.nhm_result[4],
+		   dm->dm_ccx_info.nhm_result[3], dm->dm_ccx_info.nhm_result[2],
+		   dm->dm_ccx_info.nhm_result[1], dm->dm_ccx_info.nhm_result[0]);
+	RT_PRINT(buf);
+
+#ifdef EDCCA_CLM_SUPPORT
+	if (dm->support_ic_type & PHYDM_IC_SUPPORT_EDCCA_CLM) {
+		RT_SPRINTF(buf, DBGM_CLI_BUF_SIZE, "15.(%s) %-12s: edcca_clm_ratio=%d\n",
+			   ((comp & ODM_BB_ENV_MONITOR) ?
+			   ((pause_comp & ODM_BB_ENV_MONITOR) ? "P" : "V") : "."),
+			   "EnvMntr",
+			   dm->dm_ccx_info.edcca_clm_ratio);
+		RT_PRINT(buf);
+	}
+#endif
+
 #ifdef PHYDM_PRIMARY_CCA
 	RT_SPRINTF(buf, DBGM_CLI_BUF_SIZE, "16.(%s) %-12s: CCA @ (%s SB)\n",
 		   ((comp & ODM_BB_PRIMARY_CCA) ?
@@ -1481,6 +1507,12 @@ void phydm_basic_dbg_msg_cli_win(void *dm_void, char *buf)
 		RT_PRINT(buf);
 	}
 
+	RT_SPRINTF(buf, DBGM_CLI_BUF_SIZE, 
+		   "\r\n [Tx cnt] {CCK_TxEN, CCK_TxON, OFDM_TxEN, OFDM_TxON} = {%d, %d, %d, %d}",
+		   fa_t->cnt_cck_txen, fa_t->cnt_cck_txon, fa_t->cnt_ofdm_txen,
+		   fa_t->cnt_ofdm_txon);
+	RT_PRINT(buf);
+
 	RT_SPRINTF(buf, DBGM_CLI_BUF_SIZE, "\r\n [CCA Cnt] {CCK, OFDM, Total} = {%d, %d, %d}",
 		   fa_t->cnt_cck_cca, fa_t->cnt_ofdm_cca, fa_t->cnt_cca_all);
 	RT_PRINT(buf);
@@ -1489,6 +1521,12 @@ void phydm_basic_dbg_msg_cli_win(void *dm_void, char *buf)
 		   fa_t->cnt_cck_fail, fa_t->cnt_ofdm_fail, fa_t->cnt_all);
 	RT_PRINT(buf);
 
+	RT_SPRINTF(buf, DBGM_CLI_BUF_SIZE,
+		   "\r\n [FA duration(us)] {exp, ifs_clm, fahm} = {%d, %d, %d}",
+		   fa_t->time_fa_exp, fa_t->time_fa_ifs_clm,
+		   fa_t->time_fa_fahm);
+	RT_PRINT(buf);
+
 	RT_SPRINTF(buf, DBGM_CLI_BUF_SIZE,
 		   "\r\n [OFDM FA] Parity=%d, Rate=%d, Fast_Fsync=%d, SBD=%d",
 		   fa_t->cnt_parity_fail, fa_t->cnt_rate_illegal,
@@ -2612,10 +2650,18 @@ void phydm_basic_dbg_message(void *dm_void)
 	else
 		PHYDM_DBG(dm, DBG_CMN, "No Link !!!\n");
 
+	PHYDM_DBG(dm, DBG_CMN,
+		  "[Tx cnt] {CCK_TxEN, CCK_TxON, OFDM_TxEN, OFDM_TxON} = {%d, %d, %d, %d}\n",
+		  fa_t->cnt_cck_txen, fa_t->cnt_cck_txon, fa_t->cnt_ofdm_txen,
+		  fa_t->cnt_ofdm_txon);
 	PHYDM_DBG(dm, DBG_CMN, "[CCA Cnt] {CCK, OFDM, Total} = {%d, %d, %d}\n",
 		  fa_t->cnt_cck_cca, fa_t->cnt_ofdm_cca, fa_t->cnt_cca_all);
 	PHYDM_DBG(dm, DBG_CMN, "[FA Cnt] {CCK, OFDM, Total} = {%d, %d, %d}\n",
 		  fa_t->cnt_cck_fail, fa_t->cnt_ofdm_fail, fa_t->cnt_all);
+	PHYDM_DBG(dm, DBG_CMN,
+		  "[FA duration(us)] {exp, ifs_clm, fahm} = {%d, %d, %d}\n",
+		  fa_t->time_fa_exp, fa_t->time_fa_ifs_clm,
+		  fa_t->time_fa_fahm);
 	PHYDM_DBG(dm, DBG_CMN,
 		  "[OFDM FA] Parity=%d, Rate=%d, Fast_Fsync=%d, SBD=%d\n",
 		  fa_t->cnt_parity_fail, fa_t->cnt_rate_illegal,
@@ -2652,11 +2698,22 @@ void phydm_basic_dbg_message(void *dm_void)
 			  dm->is_linked, dm->number_linked_client, dm->rssi_min,
 			  dm->dm_dig_table.cur_ig_value);
 
-#ifdef NHM_SUPPORT
-	if (dm->support_ability & ODM_BB_ENV_MONITOR) {
-		PHYDM_DBG(dm, DBG_CMN,
-			  "[NHM] valid: %d percent, noise(RSSI) = %d\n",
-			  ccx->nhm_level_valid, ccx->nhm_level);
+	PHYDM_DBG(dm, DBG_CMN,
+		  "ratio{nhm, nhm_env, clm, idle, tx}={%d, %d, %d, %d, %d}, nhm_pwr=%d\n",
+		  ccx->nhm_ratio, ccx->nhm_env_ratio, ccx->clm_ratio,
+		  ccx->nhm_idle_ratio, ccx->nhm_tx_ratio, ccx->nhm_pwr);
+
+	PHYDM_DBG(dm, DBG_CMN,
+		  "NHM_Rpt(H->L)[%d %d %d %d %d %d %d %d %d %d %d %d]\n",
+		  ccx->nhm_result[11], ccx->nhm_result[10], ccx->nhm_result[9],
+		  ccx->nhm_result[8], ccx->nhm_result[7], ccx->nhm_result[6],
+		  ccx->nhm_result[5], ccx->nhm_result[4], ccx->nhm_result[3],
+		  ccx->nhm_result[2], ccx->nhm_result[1], ccx->nhm_result[0]);
+
+#ifdef EDCCA_CLM_SUPPORT
+	if (dm->support_ic_type & PHYDM_IC_SUPPORT_EDCCA_CLM) {
+		PHYDM_DBG(dm, DBG_CMN, "edcca_clm_ratio=%d\n",
+			  ccx->edcca_clm_ratio);
 	}
 #endif
 }
@@ -2862,6 +2919,14 @@ void phydm_basic_profile(void *dm_void, u32 *_used, char *output, u32 *_out_len)
 		release_ver = RELEASE_VERSION_8814B;
 	}
 #endif
+#if (RTL8814C_SUPPORT)
+	else if (dm->support_ic_type ==  ODM_RTL8814C) {
+		ic_type = "RTL8814C";
+		date = RELEASE_DATE_8814C;
+		commit_by = COMMIT_BY_8814C;
+		release_ver = RELEASE_VERSION_8814C;
+	}
+#endif
 
 	PDM_SNPF(out_len, used, output + used, out_len - used,
 		 "  %-35s: %s (MP Chip: %s)\n", "IC type", ic_type,
@@ -3325,7 +3390,7 @@ void phydm_shift_txagc(void *dm_void, u32 *const val, u32 *_used, char *output,
 				rpt &= phydm_api_set_txagc(dm, pow, path, i, 1);
 			}
 		} else if (dm->support_ic_type &
-			   (ODM_RTL8822C | ODM_RTL8814B |
+			   (ODM_RTL8822C | ODM_RTL8814B | ODM_RTL8814C |
 			    ODM_RTL8812F | ODM_RTL8197G | ODM_RTL8723F)) {
 			rpt &= phydm_api_shift_txagc(dm, val[3], path, 1);
 		}
@@ -5264,7 +5329,8 @@ enum PHYDM_CMD_ID {
 	PHYDM_SHIFT_RXAGC,
 	PHYDM_IFS_CLM,
 	PHYDM_ENHANCE_MNTR,
-	PHYDM_CSI_DBG
+	PHYDM_CSI_DBG,
+	PHYDM_EDCCA_CLM
 };
 
 struct phydm_command phy_dm_ary[] = {
@@ -5339,7 +5405,8 @@ struct phydm_command phy_dm_ary[] = {
 	{"shift_rxagc", PHYDM_SHIFT_RXAGC},
 	{"ifs_clm", PHYDM_IFS_CLM},
 	{"enh_mntr", PHYDM_ENHANCE_MNTR},
-	{"csi_dbg", PHYDM_CSI_DBG}
+	{"csi_dbg", PHYDM_CSI_DBG},
+	{"edcca_clm", PHYDM_EDCCA_CLM}
 	};
 
 #endif /*@#ifdef CONFIG_PHYDM_DEBUG_FUNCTION*/
@@ -5741,6 +5808,11 @@ void phydm_cmd_parser(struct dm_struct *dm, char input[][MAX_ARGV],
 	case PHYDM_CSI_DBG:
 		phydm_get_csi_table(dm, &used, output, &out_len);
 		break;
+	case PHYDM_EDCCA_CLM:
+	#ifdef EDCCA_CLM_SUPPORT
+		phydm_edcca_clm_dbg(dm, input, &used, output, &out_len);
+	#endif
+		break;
 	default:
 		PDM_SNPF(out_len, used, output + used, out_len - used,
 			 "Do not support this command\n");
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm_debug.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm_debug.h
index 25ae1da827d3..06e809b57458 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm_debug.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm_debug.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017  Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm_dfs.c b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm_dfs.c
index ab7ee27f3782..8742acc85a85 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm_dfs.c
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm_dfs.c
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017  Realtek Corporation.
@@ -51,7 +50,7 @@ void phydm_dfs_segment_distinguish(void *dm_void, enum rf_syn syn_path)
 {
 	struct dm_struct *dm = (struct dm_struct *)dm_void;
 
-	if (!(dm->support_ic_type & (ODM_RTL8814B)))
+	if (!(dm->support_ic_type & (ODM_RTL8814B | ODM_RTL8814C)))
 		return;
 	if (syn_path == RF_SYN1)
 		dm->seg1_dfs_flag = 1;
@@ -63,7 +62,7 @@ void phydm_dfs_segment_flag_reset(void *dm_void)
 {
 	struct dm_struct *dm = (struct dm_struct *)dm_void;
 
-	if (!(dm->support_ic_type & (ODM_RTL8814B)))
+	if (!(dm->support_ic_type & (ODM_RTL8814B | ODM_RTL8814C)))
 		return;
 	if (dm->seg1_dfs_flag)
 		dm->seg1_dfs_flag = 0;
@@ -82,7 +81,7 @@ void phydm_radar_detect_reset(void *dm_void)
 		odm_set_bb_reg(dm, R_0xf58, BIT(29), 0);
 		odm_set_bb_reg(dm, R_0xf58, BIT(29), 1);
 	#endif
-	} else if (dm->support_ic_type & (ODM_RTL8814B)) {
+	} else if (dm->support_ic_type & (ODM_RTL8814B | ODM_RTL8814C)) {
 		if (dm->seg1_dfs_flag == 1) {
 			odm_set_bb_reg(dm, R_0xa6c, BIT(0), 0);
 			odm_set_bb_reg(dm, R_0xa6c, BIT(0), 1);
@@ -103,7 +102,7 @@ void phydm_radar_detect_disable(void *dm_void)
 	if (dm->support_ic_type & (ODM_RTL8198F | ODM_RTL8822C | ODM_RTL8812F |
 				   ODM_RTL8197G | ODM_RTL8723F))
 		odm_set_bb_reg(dm, R_0xa40, BIT(15), 0);
-	else if (dm->support_ic_type & (ODM_RTL8814B)) {
+	else if (dm->support_ic_type & (ODM_RTL8814B | ODM_RTL8814C)) {
 		if (dm->seg1_dfs_flag == 1) {
 			odm_set_bb_reg(dm, R_0xa6c, BIT(0), 0);
 			dm->seg1_dfs_flag = 0;
@@ -444,38 +443,44 @@ void phydm_radar_detect_enable(void *dm_void)
 			goto exit;
 		}
 		if (region_domain == PHYDM_DFS_DOMAIN_ETSI) {
-			odm_set_bb_reg(dm, R_0xa40, MASKDWORD, 0xb359c5bd);
-			if (dm->support_ic_type & (ODM_RTL8814B)) {
+			odm_set_bb_reg(dm, R_0xa40, MASKDWORD, 0xb25dc0bd);
+			if (dm->support_ic_type &
+			    (ODM_RTL8814B | ODM_RTL8814C)) {
 				if (dm->seg1_dfs_flag == 1)
 					odm_set_bb_reg(dm, R_0xa6c, BIT(0), 1);
 			}
-			odm_set_bb_reg(dm, R_0xa44, MASKDWORD, 0x3033bebd);
+			odm_set_bb_reg(dm, R_0xa44, MASKDWORD, 0x3030bea0);
 			odm_set_bb_reg(dm, R_0xa48, MASKDWORD, 0x2a521254);
-			odm_set_bb_reg(dm, R_0xa4c, MASKDWORD, 0xa2533345);
-			odm_set_bb_reg(dm, R_0xa50, MASKDWORD, 0x605be003);
-			odm_set_bb_reg(dm, R_0xa54, MASKDWORD, 0x500089e8);
+			odm_set_bb_reg(dm, R_0xa4c, MASKDWORD, 0x42533345);
+			odm_set_bb_reg(dm, R_0xa50, MASKDWORD, 0x605be0c3);
+			odm_set_bb_reg(dm, R_0xa54, MASKDWORD, 0x500009e8);
+			odm_set_bb_reg(dm, R_0x180c, 0xe0000, 0x0);
 		} else if (region_domain == PHYDM_DFS_DOMAIN_MKK) {
-			odm_set_bb_reg(dm, R_0xa40, MASKDWORD, 0xb359c5bd);
-			if (dm->support_ic_type & (ODM_RTL8814B)) {
+			odm_set_bb_reg(dm, R_0xa40, MASKDWORD, 0xb25dc0bd);
+			if (dm->support_ic_type &
+			    (ODM_RTL8814B | ODM_RTL8814C)) {
 				if (dm->seg1_dfs_flag == 1)
 					odm_set_bb_reg(dm, R_0xa6c, BIT(0), 1);
 			}
-			odm_set_bb_reg(dm, R_0xa44, MASKDWORD, 0x3033bebd);
+			odm_set_bb_reg(dm, R_0xa44, MASKDWORD, 0x3030bea0);
 			odm_set_bb_reg(dm, R_0xa48, MASKDWORD, 0x2a521254);
-			odm_set_bb_reg(dm, R_0xa4c, MASKDWORD, 0xa2533345);
-			odm_set_bb_reg(dm, R_0xa50, MASKDWORD, 0x605be003);
-			odm_set_bb_reg(dm, R_0xa54, MASKDWORD, 0x500089e8);
+			odm_set_bb_reg(dm, R_0xa4c, MASKDWORD, 0x42533345);
+			odm_set_bb_reg(dm, R_0xa50, MASKDWORD, 0x605be0c3);
+			odm_set_bb_reg(dm, R_0xa54, MASKDWORD, 0x500009e8);
+			odm_set_bb_reg(dm, R_0x180c, 0xe0000, 0x0);
 		} else if (region_domain == PHYDM_DFS_DOMAIN_FCC) {
-			odm_set_bb_reg(dm, R_0xa40, MASKDWORD, 0xb359c5bd);
-			if (dm->support_ic_type & (ODM_RTL8814B)) {
+			odm_set_bb_reg(dm, R_0xa40, MASKDWORD, 0xb25dc0bd);
+			if (dm->support_ic_type &
+			    (ODM_RTL8814B | ODM_RTL8814C)) {
 				if (dm->seg1_dfs_flag == 1)
 					odm_set_bb_reg(dm, R_0xa6c, BIT(0), 1);
 			}
-			odm_set_bb_reg(dm, R_0xa44, MASKDWORD, 0x3033bebd);
+			odm_set_bb_reg(dm, R_0xa44, MASKDWORD, 0x3030bea0);
 			odm_set_bb_reg(dm, R_0xa48, MASKDWORD, 0x2a521254);
-			odm_set_bb_reg(dm, R_0xa4c, MASKDWORD, 0xa2533345);
-			odm_set_bb_reg(dm, R_0xa50, MASKDWORD, 0x605be003);
-			odm_set_bb_reg(dm, R_0xa54, MASKDWORD, 0x500089e8);
+			odm_set_bb_reg(dm, R_0xa4c, MASKDWORD, 0x42533345);
+			odm_set_bb_reg(dm, R_0xa50, MASKDWORD, 0x605be0c3);
+			odm_set_bb_reg(dm, R_0xa54, MASKDWORD, 0x500009e8);
+			odm_set_bb_reg(dm, R_0x180c, 0xe0000, 0x0);
 		} else {
 			/* not supported */
 			PHYDM_DBG(dm, DBG_DFS,
@@ -633,10 +638,33 @@ void phydm_dfs_parameter_init(void *dm_void)
 		dfs->hist_cond_on = 1;
 	else
 		dfs->hist_cond_on = 0;
+	if (dm->support_ic_type & (ODM_RTL8723F | ODM_RTL8822C)) {
+		dfs->det_print_jar3 = 1;
+		dfs->nhm_dfs_en = true;
+		dfs->det_jar3_en = true;
+	} else {
+		dfs->det_print_jar3 = 0;
+		dfs->nhm_dfs_en = false;
+		dfs->det_jar3_en = false;
+	}
+
+	/*@for flag en*/
+	dfs->pw_flag_en = true;
+	dfs->pri_flag_en = true;
+	dfs->loct_flag_en = true;
+	dfs->nhm_cnt_th = 4;
+	dfs->nhm_dty_th = 40;
+
+	/*@for jgar3*/
+	dfs->pri_var_offset = 2;
+	dfs->pri_var_tp_offset = 10;
+	dfs->pri_cnt_th = 2;
+	dfs->loct_diff_th = 15;
+	dfs->dc_cnt_th = 3;
 
 	/*@for dynamic dfs*/
 	dfs->pwdb_th = 8;
-	dfs->fa_mask_th = 30 * (dfs->dfs_polling_time) / 100;
+	dfs->fa_mask_th = 120 * dfs->dfs_polling_time / 100;
 	dfs->st_l2h_min = 0x20;
 	dfs->st_l2h_max = 0x4e;
 	dfs->pwdb_scalar_factor = 12;
@@ -757,6 +785,7 @@ void phydm_dfs_dynamic_setting(
 	}
 
 	if (dm->support_ic_type & ODM_IC_JGR3_SERIES) {
+		/*
 		if (dfs->peak_th != peak_th_cur)
 			odm_set_bb_reg(dm, R_0xa48, 0x00c00000, peak_th_cur);
 		if (dfs->short_pulse_cnt_th != short_pulse_cnt_th_cur)
@@ -774,6 +803,7 @@ void phydm_dfs_dynamic_setting(
 		if (dfs->three_peak_th2 != three_peak_th2_cur)
 			odm_set_bb_reg(dm, R_0xa44, 0x00000007,
 				       three_peak_th2_cur);
+		*/
 	#if (RTL8721D_SUPPORT)
 	} else if (dm->support_ic_type & (ODM_RTL8721D)) {
 		if (dfs->peak_th != peak_th_cur)
@@ -828,6 +858,7 @@ phydm_radar_detect_dm_check(
 {
 	struct dm_struct *dm = (struct dm_struct *)dm_void;
 	struct _DFS_STATISTICS *dfs = &dm->dfs;
+	struct phydm_fa_struct *fa_t = &dm->false_alm_cnt;
 	u8 region_domain = dm->dfs_region_domain, index = 0;
 
 	u16 i = 0, j = 0, fa_count_cur = 0, fa_count_inc = 0;
@@ -838,9 +869,12 @@ phydm_radar_detect_dm_check(
 	u32 reg920_value = 0, reg924_value = 0, radar_rpt_reg_value = 0;
 	u32 regf54_value = 0, regf58_value = 0, regf5c_value = 0;
 	u32 regdf4_value = 0, regf70_value = 0, regf74_value = 0;
-	#if (RTL8812F_SUPPORT || RTL8822C_SUPPORT || RTL8814B_SUPPORT)
+	#if (RTL8812F_SUPPORT || RTL8822C_SUPPORT || RTL8814B_SUPPORT || RTL8723F_SUPPORT)
 	u32 rega40_value = 0, rega44_value = 0, rega48_value = 0;
 	u32 rega4c_value = 0, rega50_value = 0, rega54_value = 0;
+	u32 reg_2e08 = 0, reg_2e24 = 0, reg_2e28 = 0;
+	u32 reg_2e2c = 0, reg_2e30 = 0, reg_2e34 = 0;
+	u32 reg_2e0c = 0, reg_2e10 = 0, reg_2e20 = 0;
 	#endif
 	#if (RTL8721D_SUPPORT)
 	u32 reg908_value = 0, regdf4_value = 0;
@@ -855,7 +889,9 @@ phydm_radar_detect_dm_check(
 
 	/*@Get FA count during past 100ms, R_0xf48 for AC series*/
 	if (dm->support_ic_type & ODM_IC_JGR3_SERIES)
-		fa_count_cur = (u16)odm_get_bb_reg(dm, R_0x2d00, MASKLWORD);
+		/*fa_count_cur = (u16)odm_get_bb_reg(dm, R_0x2d00, MASKLWORD);*/
+		/*1-sec period*/
+		fa_count_cur = (u16)(fa_t->cnt_all * dfs->dfs_polling_time / 1000);
 	#if (RTL8721D_SUPPORT)
 	else if (dm->support_ic_type & (ODM_RTL8721D)) {
 		fa_count_cur = (u16)odm_get_bb_reg(dm,
@@ -881,15 +917,17 @@ phydm_radar_detect_dm_check(
 	else
 		fa_count_cur = (u16)odm_get_bb_reg(dm, R_0xf48, 0x0000ffff);
 
-	if (dfs->fa_count_pre == 0)
-		fa_count_inc = 0;
-	else if (fa_count_cur >= dfs->fa_count_pre)
-		fa_count_inc = fa_count_cur - dfs->fa_count_pre;
-	else
+	if (!(dm->support_ic_type & ODM_IC_JGR3_SERIES)) {
+		if (dfs->fa_count_pre == 0)
+			fa_count_inc = 0;
+		else if (fa_count_cur >= dfs->fa_count_pre)
+			fa_count_inc = fa_count_cur - dfs->fa_count_pre;
+		else
+			fa_count_inc = fa_count_cur;
+		dfs->fa_count_pre = fa_count_cur;
+	} else {
 		fa_count_inc = fa_count_cur;
-	dfs->fa_count_pre = fa_count_cur;
-
-	dfs->fa_inc_hist[dfs->mask_idx] = fa_count_inc;
+	}
 
 	for (i = 0; i < 5; i++)
 		total_fa_in_hist = total_fa_in_hist + dfs->fa_inc_hist[i];
@@ -921,7 +959,7 @@ phydm_radar_detect_dm_check(
 			odm_set_bb_reg(dm, R_0xf58, BIT(29), 1);
 		}
 	#endif
-	} else if (dm->support_ic_type & (ODM_RTL8814B)) {
+	} else if (dm->support_ic_type & (ODM_RTL8814B | ODM_RTL8814C)) {
 		if (dm->seg1_dfs_flag == 1)
 			radar_rpt_reg_value = odm_get_bb_reg(dm, R_0x2e20,
 							     0xffffffff);
@@ -1029,24 +1067,61 @@ phydm_radar_detect_dm_check(
 		tri_long_pulse = (regf98_value & BIT(19)) ? 1 : 0;
 	}
 
+	if (tri_long_pulse){
+		PHYDM_DBG(dm, DBG_DFS, "\n");
+		PHYDM_DBG(dm, DBG_DFS, "tri_long_pulse = %d\n", tri_long_pulse);
+		dfs->pulse_flag_hist[dfs->mask_idx] = 1;
+		dfs->pulse_type_hist[dfs->mask_idx] = 1;
+		}
+	
+	else if (tri_short_pulse){
+		PHYDM_DBG(dm, DBG_DFS, "\n");
+		PHYDM_DBG(dm, DBG_DFS, "tri_short_pulse = %d\n", tri_short_pulse);
+		dfs->pulse_flag_hist[dfs->mask_idx] = 1;
+		dfs->pulse_type_hist[dfs->mask_idx] = 0;
+		}
+	
+	else{
+		dfs->pulse_flag_hist[dfs->mask_idx] = 0;
+		dfs->pulse_type_hist[dfs->mask_idx] = 0;
+		}
+
+	
+	
 	if (tri_short_pulse) {
-		phydm_radar_detect_reset(dm);
+		if (!(dm->support_ic_type & ODM_IC_JGR3_SERIES))
+			phydm_radar_detect_reset(dm);
 	}
 	if (tri_long_pulse) {
-		phydm_radar_detect_reset(dm);
+		/*
+		if (!(dm->support_ic_type & ODM_IC_JGR3_SERIES))
+			phydm_radar_detect_reset(dm);
+		*/
 		if (region_domain == PHYDM_DFS_DOMAIN_MKK) {
 			if (c_channel >= 52 && c_channel <= 64) {
 				tri_long_pulse = 0;
 			}
 		}
 		if (region_domain == PHYDM_DFS_DOMAIN_ETSI) {
-			tri_long_pulse = 0;
+			tri_long_pulse = 0; 
 		}
 	}
 
 	st_l2h_new = dfs->st_l2h_cur;
-	dfs->pulse_flag_hist[dfs->mask_idx] = tri_short_pulse | tri_long_pulse;
-	dfs->pulse_type_hist[dfs->mask_idx] = (tri_long_pulse) ? 1 : 0;
+#if (RTL8723F_SUPPORT||RTL8822C_SUPPORT)
+	if (dm->support_ic_type & ODM_IC_JGR3_SERIES) {
+		if (dfs->pulse_type_hist[dfs->mask_idx])
+			dfs->radar_type = 1;
+		else
+			dfs->radar_type = 0;
+
+		if (dfs->pulse_flag_hist[dfs->mask_idx]) {
+			if (dfs->det_jar3_en)
+				phydm_dfs_rpt_distinguish(dm);
+			phydm_radar_detect_reset(dm);
+		}
+	}
+#endif
 
 	/* PSD(not ready) */
 
@@ -1099,17 +1174,26 @@ phydm_radar_detect_dm_check(
 	if (dfs->mask_hist_checked <= 5)
 		dfs->mask_hist_checked++;
 
-	if (dfs->mask_hist_checked >= 5 && dfs->pulse_flag_hist[index]) {
+	if (dfs->mask_hist_checked >= 5 && dfs->pulse_flag_hist[dfs->mask_idx]) {
 		if (sum <= 2) {
 			if (dfs->hist_cond_on) {
 				/*return the value from hist_radar_detected*/
 				radar_detected = phydm_dfs_hist_log(dm, index);
+			} else if (dfs->det_jar3_en) {
+				if (dfs->nhm_dfs_flag || dfs->b_flag) {
+					radar_detected = false;
+				} else if (dfs->pw_flag && dfs->pri_flag &&
+					   dfs->loct_flag) {
+					PHYDM_DBG(dm, DBG_DFS, "Detected type %d radar signal!\n",
+						  dfs->radar_type);
+					radar_detected = true;
+				}
 			} else {
-				if (dfs->pulse_type_hist[index] == 0)
+				if (dfs->pulse_type_hist[dfs->mask_idx] == 0)
 					dfs->radar_type = 0;
-				else if (dfs->pulse_type_hist[index] == 1)
+				else if (dfs->pulse_type_hist[dfs->mask_idx] == 1)
 					dfs->radar_type = 1;
-				radar_detected = 1;
+				radar_detected = true;
 				PHYDM_DBG(dm, DBG_DFS,
 					  "Detected type %d radar signal!\n",
 					  dfs->radar_type);
@@ -1181,6 +1265,541 @@ phydm_radar_detect_dm_check(
 
 	return radar_detected;
 }
+#if (RTL8723F_SUPPORT || RTL8822C_SUPPORT)
+void phydm_dfs_rpt_distinguish(void *dm_void)
+{
+	struct dm_struct *dm = (struct dm_struct *)dm_void;
+	struct _DFS_STATISTICS *dfs = &dm->dfs;
+	struct ccx_info *ccx = &dm->dm_ccx_info;
+	
+	u8 region_domain = dm->dfs_region_domain;
+	u8 c_channel = *dm->channel;
+	u8 band_width = *dm->band_width;
+	
+	u32 reg_2e08, reg_2e24, reg_2e28, reg_2e2c, reg_2e30, reg_2e34;
+	u32 reg_2e0c, reg_2e10, reg_2e20;
+	u16 pw_rpt_set[12] = {0}, pri_rpt_set[12] = {0};
+	s8 loct_rpt_set[12] = {0};
+	u8 pw_lth[10] = {255,255,255,255,255,255,255,255,255,255};
+       u16 pw_uth[10] = {255,255,255,255,255,255,255,255,255,255};
+       u8 pri_lth[10] = {255,255,255,255,255,255,255,255,255,255};
+       u8 pri_uth[10] = {255,255,255,255,255,255,255,255,255,255};
+	u8 pri_vd_max = 0, pri_vd_min = 255, rdr_tmp = 0;
+	u8 i, j, dc_cnt = 0, rdr_num = 0, rdr_cnt[10] = {0};
+	u8 short_cnt_th, long_cnt_th, loop_cnt, cnt_th, loct_diff = 0;
+	u8 pri_var_up, pri_var_low, pri_cnt_tmp, pri_cnt_fnl = 0;
+	u8 pri_cnt_th = dfs->pri_cnt_th;
+
+	/* PW : Wordlength : U(8,0) , unit: 400ns */
+	reg_2e08 = odm_get_bb_reg(dm, 0x2e08, 0xffffffff);
+	pw_rpt_set[0]=(unsigned int)(reg_2e08 & 0x000000ff);
+	pw_rpt_set[1]=(unsigned int)((reg_2e08 & 0x0000ff00)>>8);
+	pw_rpt_set[2]=(unsigned int)((reg_2e08 & 0x00ff0000)>>16);
+	pw_rpt_set[3]=(unsigned int)((reg_2e08 & 0xff000000)>>24);
+	reg_2e24 = odm_get_bb_reg(dm, 0x2e24, 0xffffffff);
+	pw_rpt_set[4]=(unsigned int)(reg_2e24 & 0x000000ff);
+	pw_rpt_set[5]=(unsigned int)((reg_2e24 & 0x0000ff00)>>8);
+	pw_rpt_set[6]=(unsigned int)((reg_2e24 & 0x00ff0000)>>16);
+	pw_rpt_set[7]=(unsigned int)((reg_2e24 & 0xff000000)>>24);
+	reg_2e28 = odm_get_bb_reg(dm, 0x2e28, 0xffffffff);
+	pw_rpt_set[8]=(unsigned int)(reg_2e28 & 0x000000ff);
+	pw_rpt_set[9]=(unsigned int)((reg_2e28 & 0x0000ff00)>>8);
+	pw_rpt_set[10]=(unsigned int)((reg_2e28 & 0x00ff0000)>>16);
+	pw_rpt_set[11]=(unsigned int)((reg_2e28 & 0xff000000)>>24);
+
+	/* PRI : Wordlength : U(8,0) , unit: 25.6us */
+	reg_2e2c = odm_get_bb_reg(dm, 0x2e2c, 0xffffffff);
+	pri_rpt_set[0]=(unsigned int)(reg_2e2c & 0x000000ff);
+	pri_rpt_set[1]=(unsigned int)((reg_2e2c & 0x0000ff00)>>8);
+	pri_rpt_set[2]=(unsigned int)((reg_2e2c & 0x00ff0000)>>16);
+	pri_rpt_set[3]=(unsigned int)((reg_2e2c & 0xff000000)>>24);
+	reg_2e30 = odm_get_bb_reg(dm, 0x2e30, 0xffffffff);
+	pri_rpt_set[4]=(unsigned int)(reg_2e30 & 0x000000ff);
+	pri_rpt_set[5]=(unsigned int)((reg_2e30 & 0x0000ff00)>>8);
+	pri_rpt_set[6]=(unsigned int)((reg_2e30 & 0x00ff0000)>>16);
+	pri_rpt_set[7]=(unsigned int)((reg_2e30 & 0xff000000)>>24);
+	reg_2e34 = odm_get_bb_reg(dm, 0x2e34, 0xffffffff);
+	pri_rpt_set[8]=(unsigned int)(reg_2e34 & 0x000000ff);
+	pri_rpt_set[9]=(unsigned int)((reg_2e34 & 0x0000ff00)>>8);
+	pri_rpt_set[10]=(unsigned int)((reg_2e34 & 0x00ff0000)>>16);
+	pri_rpt_set[11]=(unsigned int)((reg_2e34 & 0xff000000)>>24);
+	
+	/* Location : Wordlength : S(8,0) , unit: MHz */
+	reg_2e0c = odm_get_bb_reg(dm, 0x2e0c, 0xffffffff);
+	loct_rpt_set[0]=(signed char)(reg_2e0c & 0x000000ff);
+	loct_rpt_set[1]=(signed char)((reg_2e0c & 0x0000ff00)>>8);
+	loct_rpt_set[2]=(signed char)((reg_2e0c & 0x00ff0000)>>16);
+	loct_rpt_set[3]=(signed char)((reg_2e0c & 0xff000000)>>24);
+	reg_2e10 = odm_get_bb_reg(dm, 0x2e10, 0xffffffff);
+	loct_rpt_set[4]=(signed char)(reg_2e10 & 0x000000ff);
+	loct_rpt_set[5]=(signed char)((reg_2e10 & 0x0000ff00)>>8);
+	loct_rpt_set[6]=(signed char)((reg_2e10 & 0x00ff0000)>>16);
+	loct_rpt_set[7]=(signed char)((reg_2e10 & 0xff000000)>>24);
+	reg_2e20 = odm_get_bb_reg(dm, 0x2e20, 0xffffffff);
+	loct_rpt_set[8]=(signed char)(reg_2e20 & 0x000000ff);
+	loct_rpt_set[9]=(signed char)((reg_2e20 & 0x0000ff00)>>8);
+	loct_rpt_set[10]=(signed char)((reg_2e20 & 0x00ff0000)>>16);
+	loct_rpt_set[11]=(signed char)((reg_2e20 & 0xff000000)>>24);
+
+	dfs->pw_flag = false;
+	dfs->loct_flag = false;
+	dfs->pri_flag = false;
+	for (i = 0; i < 12; i++) {
+		dfs->pw_rslt[i] = 0;
+		dfs->loct_rslt[i] = 0;
+		dfs->pri_rslt[i] = 0;
+	}
+
+	// for NHMxDFS //
+	dfs->nhm_dfs_cnt = 0;
+	dfs->nhm_dfs_flag = false;
+	dfs->b_flag = false;
+
+	short_cnt_th = (u8)odm_get_bb_reg(dm, 0xa50, 0x00f00000);
+	long_cnt_th = (u8)odm_get_bb_reg(dm, 0xa4c, 0xf0000000);
+
+	if (dfs->radar_type) 
+		loop_cnt = long_cnt_th + 2;
+	else
+		loop_cnt = short_cnt_th  + 2;
+
+	if (region_domain == PHYDM_DFS_DOMAIN_ETSI)
+		loop_cnt = short_cnt_th  + 2;
+	
+	if (loop_cnt > 12)
+		loop_cnt = 12;
+
+	cnt_th = loop_cnt / 2;
+	
+	/* Calculate the difference between each element (1st Not calculated) */
+	for(i = 0; i < loop_cnt; i++)
+		dfs->loct_rslt[i] = loct_rpt_set[i];
+	for(i = 1; i < loop_cnt; i++)
+		loct_diff = loct_diff + abs(dfs->loct_rslt[i] - dfs->loct_rslt[i-1]);
+	
+	for (i = 0; i < loop_cnt; i++) {
+		if ((-2 < loct_rpt_set[i]) && (loct_rpt_set[i] < 2))
+			dc_cnt++;
+	}
+
+	if (region_domain == PHYDM_DFS_DOMAIN_FCC){
+		rdr_num = 7;
+		
+		pw_lth[0]=2;
+		pw_lth[1]=2;
+		pw_lth[2]=2;
+		pw_lth[3]=12;
+		pw_lth[4]=22;
+		pw_lth[5]=120;
+		pw_lth[6]=2;
+		
+		pw_uth[0]=3;
+		pw_uth[1]=3;
+		pw_uth[2]=15;
+		pw_uth[3]=30;
+		pw_uth[4]=60;
+		pw_uth[5]=253;
+		pw_uth[6]=3;
+		
+		pri_lth[0]=50;
+		pri_lth[1]=18;
+		pri_lth[2]=5;
+		pri_lth[3]=7;
+		pri_lth[4]=7;
+		pri_lth[5]=38;
+		pri_lth[6]=11;
+		
+		pri_uth[0]=62;
+		pri_uth[1]=130;
+		pri_uth[2]=10;
+		pri_uth[3]=21;
+		pri_uth[4]=21;
+		pri_uth[5]=80;
+		pri_uth[6]=15;
+		if (dc_cnt > dfs->dc_cnt_th){
+			pw_lth[0] = 0;
+			pw_lth[1] = 0;
+			pw_lth[2] = 0;
+			pw_lth[3] = 0;
+			pw_lth[4] = 0;
+			pw_lth[5] = 80;
+			pw_lth[6] = 0;
+			}
+		}
+	else if (region_domain == PHYDM_DFS_DOMAIN_MKK){
+		rdr_num = 8;
+		if (c_channel >= 52 && c_channel <= 64){
+			dfs->loct_diff_th = dfs->loct_diff_th + 15;
+			pw_lth[0]=1;
+			pw_lth[1]=1;
+			pw_lth[2]=1;
+			pw_lth[3]=1;
+			pw_lth[4]=1;
+			pw_lth[5]=1;
+			pw_lth[6]=1;
+			pw_lth[7]=1;
+
+			pw_uth[0]=14;
+			pw_uth[1]=40;
+			pw_uth[2]=14;
+			pw_uth[3]=40;
+			pw_uth[4]=5;
+			pw_uth[5]=5;
+			pw_uth[6]=5;
+			pw_uth[7]=5;
+
+			pri_lth[0]=35;
+			pri_lth[1]=20;
+			pri_lth[2]=35;
+			pri_lth[3]=18;
+			pri_lth[4]=32;
+			pri_lth[5]=38;
+			pri_lth[6]=40;
+			pri_lth[7]=48;
+
+			pri_uth[0]=200;
+			pri_uth[1]=200;
+			pri_uth[2]=200;
+			pri_uth[3]=200;
+			pri_uth[4]=38;
+			pri_uth[5]=44;
+			pri_uth[6]=48;
+			pri_uth[7]=55;	
+			if (dc_cnt > dfs->dc_cnt_th){
+				pw_lth[0] = 0;
+				pw_lth[1] = 0;
+				pw_lth[2] = 0;
+				pw_lth[3] = 0;
+				pw_lth[4] = 0;
+				pw_lth[5] = 0;
+				pw_lth[6] = 0;
+				pw_lth[7] = 0;
+				cnt_th--;
+				}
+			}
+		else{
+			pw_lth[0]=1;
+			pw_lth[1]=2;
+			pw_lth[2]=4;
+			pw_lth[3]=2;
+			pw_lth[4]=12;
+			pw_lth[5]=22;
+			pw_lth[6]=100;
+			pw_lth[7]=2;
+
+			pw_uth[0]=2;
+			pw_uth[1]=3;
+			pw_uth[2]=6;
+			pw_uth[3]=15;
+			pw_uth[4]=30;
+			pw_uth[5]=60;
+			pw_uth[6]=300;
+			pw_uth[7]=3;
+
+			pri_lth[0]=33;
+			pri_lth[1]=35;
+			pri_lth[2]=130;
+			pri_lth[3]=5;
+			pri_lth[4]=7;
+			pri_lth[5]=7;
+			pri_lth[6]=35;
+			pri_lth[7]=11;
+
+			pri_uth[0]=73;
+			pri_uth[1]=75;
+			pri_uth[2]=170;
+			pri_uth[3]=10;
+			pri_uth[4]=22;
+			pri_uth[5]=22;
+			pri_uth[6]=86;
+			pri_uth[7]=15;
+			if (dc_cnt > dfs->dc_cnt_th){
+				pw_lth[0] = 0;
+				pw_lth[1] = 0;
+				pw_lth[2] = 0;
+				pw_lth[3] = 0;
+				pw_lth[4] = 0;
+				pw_lth[5] = 0;
+				pw_lth[6] = 80;
+				pw_lth[7] = 0;
+				}
+			}
+		}
+	else if (region_domain == PHYDM_DFS_DOMAIN_ETSI){
+		rdr_num = 6;
+		pw_lth[0]=1;
+		pw_lth[1]=1;
+		pw_lth[2]=1;
+		pw_lth[3]=40;
+		pw_lth[4]=1;
+		pw_lth[5]=1;
+	
+		pw_uth[0]=15;
+		pw_uth[1]=45;
+		pw_uth[2]=45;
+		pw_uth[3]=90;
+		pw_uth[4]=6;
+		pw_uth[5]=6;
+
+		pri_lth[0]=35;
+		pri_lth[1]=21;
+		pri_lth[2]=8;
+		pri_lth[3]=8;
+		pri_lth[4]=87;
+		pri_lth[5]=29;
+
+		pri_uth[0]=215;
+		pri_uth[1]=215;
+		pri_uth[2]=19;
+		pri_uth[3]=22;
+		pri_uth[4]=144;
+		pri_uth[5]=108;
+		if (dc_cnt > dfs->dc_cnt_th){
+			pw_lth[0] = 0;
+			pw_lth[1] = 0;
+			pw_lth[2] = 0;
+			pw_lth[3] = 0;
+			pw_lth[4] = 0;
+			pw_lth[5] = 0;
+			}
+		}	
+
+	for (i = 0; i < loop_cnt; i++) {
+		dfs->pw_rslt[i] = (u8)pw_rpt_set[i];
+		dfs->pri_rslt[i] = (u8)pri_rpt_set[i];
+		for (j = 0; j < rdr_num; j++) {
+			if (dfs->radar_type) {
+				if ((pw_lth[j] <= dfs->pw_rslt[i]) && (dfs->pw_rslt[i] <= pw_uth[j]))
+					rdr_cnt[j]++;
+			} else {
+				if ((pw_lth[j] <= dfs->pw_rslt[i]) && (dfs->pw_rslt[i] <= pw_uth[j]) &&
+				    (pri_lth[j] <= dfs->pri_rslt[i]) && (dfs->pri_rslt[i] <= pri_uth[j])) {
+					rdr_cnt[j]++;
+					if (dfs->pri_rslt[i] > pri_vd_max)
+						pri_vd_max = dfs->pri_rslt[i];
+					if (dfs->pri_rslt[i] < pri_vd_min)
+						pri_vd_min = dfs->pri_rslt[i];
+				}
+			}
+		}
+	}
+
+	/* Pattern Judgement */
+	for (i = 0; i < rdr_num; i++){
+		if (rdr_cnt[i] >= cnt_th){
+			dfs->pw_flag = true;
+			rdr_tmp = i;
+			}
+		}	
+	
+	/* Add NHM to decide the validity of the three flags */
+	/* Use for chaotic open space */
+	if (dfs->nhm_dfs_en) {
+		for (i = 0; i <= (NHM_RPT_NUM - 1); i++) {
+			if (ccx->nhm_result[i] > 0)
+				break;
+		}
+		for (j = (i + 1); j <= (NHM_RPT_NUM - 1); j++) {
+			if (ccx->nhm_result[j] > 0)
+				dfs->nhm_dfs_cnt++;
+		}
+		if (dfs->nhm_dfs_cnt > dfs->nhm_cnt_th) {
+			dfs->nhm_dfs_flag = true;
+			cnt_th = loop_cnt;
+		}
+	}
+	if (dm->support_ability & ODM_BB_ENV_MONITOR) {
+		if ((100-((ccx->nhm_rpt_sum * 100) >> 8)) >= dfs->nhm_dty_th) {
+			dfs->b_flag = true;
+			cnt_th = loop_cnt;
+		}
+	}  
+
+	/* Relax */
+	if (!(dfs->idle_mode)) {
+		pri_cnt_th--;
+		if (!(region_domain == PHYDM_DFS_DOMAIN_ETSI)){
+			dfs->pri_var_offset = 15;
+			if (region_domain == PHYDM_DFS_DOMAIN_MKK)
+				dfs->pri_var_offset = 5 + 10*pri_vd_min/20;
+			}
+		else
+			dfs->pri_var_offset = dfs->pri_var_tp_offset;	
+	}
+	
+	// Mode approximation for PRI
+	for (i = 0; i < (loop_cnt - 1); i++) {
+		pri_cnt_tmp = 0;
+		for (j = 0; j < (loop_cnt - 1); j++) {
+			if ((i == j) || (dfs->pri_rslt[i] <= 4))
+				continue;
+			if (dfs->pri_rslt[j] > (255 - dfs->pri_var_offset))
+				pri_var_up = 255;
+			else
+				pri_var_up = dfs->pri_rslt[j] + dfs->pri_var_offset;
+			if (dfs->pri_var_offset >= dfs->pri_rslt[j])
+				pri_var_low = 0;
+			else
+				pri_var_low = dfs->pri_rslt[j] - dfs->pri_var_offset;
+			if ((dfs->pri_rslt[i] <= pri_var_up) && (dfs->pri_rslt[i] >= pri_var_low) &&
+			    (dfs->pri_rslt[i] <= pri_vd_max) && (dfs->pri_rslt[i] >= pri_vd_min))
+				pri_cnt_tmp++;
+		}
+		if (pri_cnt_tmp > pri_cnt_fnl)
+			pri_cnt_fnl = pri_cnt_tmp;
+	}
+
+	// Advanced PRI Judgement (Bypass for long pulse flag)
+	if (pri_cnt_fnl != 0)
+		pri_cnt_fnl++;
+
+	/* PRI */
+	if (dfs->radar_type)
+		dfs->pri_flag= true;
+	else if (pri_cnt_fnl >= pri_cnt_th)
+		dfs->pri_flag= true;
+	/* For the case of SRTC */
+	else if ((dfs->pri_rslt[0] == 0) && (dfs->pri_rslt[1] > 0) &&
+		 (dfs->pri_rslt[2] == 0) && (dfs->pri_rslt[3] > 0))
+		dfs->pri_flag= true;
+	else if ((dfs->pri_rslt[0] > 0) && (dfs->pri_rslt[1] == 0) &&
+		 (dfs->pri_rslt[2] > 0) && (dfs->pri_rslt[3] == 0))
+		dfs->pri_flag= true;
+	else if (!(dfs->pri_flag_en))
+		dfs->pri_flag= true;
+
+	if (region_domain == PHYDM_DFS_DOMAIN_MKK){
+		if (c_channel >= 52 && c_channel <= 64){
+			if (!(dfs->idle_mode))
+				dfs->pri_flag= true;     // MKK, 52<=ch<=64 , TP mode	
+			}
+		}
+
+	/* PW */
+	if (!(dfs->pw_flag_en))
+		dfs->pw_flag = true;
+
+	/* LOCT */
+	if (!(dfs->idle_mode))
+		dfs->loct_diff_th = dfs->loct_diff_th + 15;
+	if (loct_diff <= dfs->loct_diff_th)
+		dfs->loct_flag = true;
+	else if (dfs->radar_type)
+		dfs->loct_flag = true;
+	else if (!(dfs->loct_flag_en))
+		dfs->loct_flag = true;
+
+	if (dfs->det_print_jar3) {
+		if (dfs->nhm_dfs_flag || dfs->b_flag)
+			PHYDM_DBG(dm, DBG_DFS, "Anti-FRD Rdr Drop\n");
+		if (!(dfs->pw_flag_en) || !(dfs->loct_flag_en) || !(dfs->pri_flag_en))
+			PHYDM_DBG(dm, DBG_DFS, "Byps flag scenario\n");
+	       if (dc_cnt > dfs->dc_cnt_th)
+		   	PHYDM_DBG(dm, DBG_DFS, "Radar is near DC\n");
+		if (!(dfs->pw_flag))
+			PHYDM_DBG(dm, DBG_DFS, "- PW/PRI-J Failure\n");
+		if (!(dfs->loct_flag))
+			PHYDM_DBG(dm, DBG_DFS, "- Loct-J Failure\n");
+		if (!(dfs->pri_flag))
+			PHYDM_DBG(dm, DBG_DFS, "- Adv-PRI-J Failure\n");
+		if (!(dfs->pw_flag) || !(dfs->pri_flag) || !(dfs->loct_flag))
+			PHYDM_DBG(dm, DBG_DFS, "Suspected radar result is dropped by SW mechanism !!\n");
+
+		PHYDM_DBG(dm, DBG_DFS, "\n");
+		PHYDM_DBG(dm, DBG_DFS, "The current information: ([Lower bound / Upper bound])\n");
+		PHYDM_DBG(dm, DBG_DFS, "pw_th1 : [%d, %d], pw_th2 : [%d, %d], pw_th3 : [%d, %d]\n",
+			  pw_lth[0], pw_uth[0], pw_lth[1], pw_uth[1],
+			  pw_lth[2], pw_uth[2]);
+		PHYDM_DBG(dm, DBG_DFS, "pw_th4 : [%d, %d], pw_th5 : [%d, %d], pw_th6 : [%d, %d] \n",
+			  pw_lth[3], pw_uth[3], pw_lth[4],
+			  pw_uth[4], pw_lth[5], pw_uth[5]);
+		PHYDM_DBG(dm, DBG_DFS, "pw_th7 : [%d, %d], pw_th8 : [%d, %d]\n",
+			  pw_lth[6], pw_uth[6], pw_lth[7], pw_uth[7]);
+		PHYDM_DBG(dm, DBG_DFS, "pri_th1 : [%d, %d], pri_th2 : [%d, %d], pri_th3 : [%d, %d]\n",
+			  pri_lth[0], pri_uth[0], pri_lth[1], pri_uth[1],
+			  pri_lth[2], pri_uth[2]);
+		PHYDM_DBG(dm, DBG_DFS, "pri_th4 : [%d, %d], pri_th5 : [%d, %d], pri_th6 : [%d, %d]\n",
+			  pri_lth[3], pri_uth[3], pri_lth[4], pri_uth[4],
+			  pri_lth[5], pri_uth[5]);
+		PHYDM_DBG(dm, DBG_DFS, "pri_th7 : [%d, %d], pri_th8 : [%d, %d]\n",
+			  pri_lth[6], pri_uth[6], pri_lth[7], pri_uth[7]);
+
+		if (!(dfs->idle_mode))
+			PHYDM_DBG(dm, DBG_DFS, "loct_diff_th = [%d](Relax for TP mode)\n",
+				  dfs->loct_diff_th);
+		else
+			PHYDM_DBG(dm, DBG_DFS, "loct_diff_th = [%d](Idle mode)\n",
+				  dfs->loct_diff_th);
+
+		if (!(dfs->idle_mode)) {
+			PHYDM_DBG(dm, DBG_DFS, "pri_var_offset = [%d] (Relax for TP mode)\n",
+				  dfs->pri_var_offset);
+			PHYDM_DBG(dm, DBG_DFS, "pri_cnt_th = [%d] (Relax for TP mode)\n",
+				  pri_cnt_th);
+		} else {
+			PHYDM_DBG(dm, DBG_DFS, "pri_var_offset = [%d] (Idle mode)\n",
+				  dfs->pri_var_offset);
+			PHYDM_DBG(dm, DBG_DFS, "pri_cnt_th = [%d] (Idle mode)\n",
+				  pri_cnt_th);
+		}
+
+		PHYDM_DBG(dm, DBG_DFS, "\n");
+		PHYDM_DBG(dm, DBG_DFS, "loop_cnt = [%d]\n", loop_cnt);
+		if (dfs->nhm_dfs_flag) {
+			PHYDM_DBG(dm, DBG_DFS, "Nmode cnt = %d!\n",
+				  dfs->nhm_dfs_cnt);
+		} 
+		else if (dfs->b_flag) {
+			PHYDM_DBG(dm, DBG_DFS, "Bmode DTY = %d\n",
+				  (100-((ccx->nhm_rpt_sum * 100) >> 8)));
+		} 
+		else {
+			PHYDM_DBG(dm, DBG_DFS, "cnt_th = [%d] (Default : Half of loop cnt)\n",
+				  cnt_th);
+			PHYDM_DBG(dm, DBG_DFS, "Bmode DTY = %d\n",
+				  (100-((ccx->nhm_rpt_sum * 100) >> 8)));
+		} 
+
+		PHYDM_DBG(dm, DBG_DFS, "\n");
+		PHYDM_DBG(dm, DBG_DFS, "The current report:\n");
+		PHYDM_DBG(dm, DBG_DFS, "pw_rpt(1-12) = [%d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d]\n",
+			  pw_rpt_set[0], pw_rpt_set[1], pw_rpt_set[2],
+			  pw_rpt_set[3], pw_rpt_set[4], pw_rpt_set[5],
+			  pw_rpt_set[6], pw_rpt_set[7], pw_rpt_set[8],
+			  pw_rpt_set[9], pw_rpt_set[10], pw_rpt_set[11]);
+		PHYDM_DBG(dm, DBG_DFS, "loct_rpt(1-12) = [%d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d]\n",
+			  loct_rpt_set[0], loct_rpt_set[1],
+			  loct_rpt_set[2], loct_rpt_set[3],
+			  loct_rpt_set[4], loct_rpt_set[5],
+			  loct_rpt_set[6], loct_rpt_set[7],
+			  loct_rpt_set[8], loct_rpt_set[9],
+			  loct_rpt_set[10], loct_rpt_set[11]);
+		PHYDM_DBG(dm, DBG_DFS, "pri_rpt(1-12) = [%d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d]\n",
+			  pri_rpt_set[0], pri_rpt_set[1],
+			  pri_rpt_set[2], pri_rpt_set[3],
+			  pri_rpt_set[4], pri_rpt_set[5],
+			  pri_rpt_set[6], pri_rpt_set[7],
+			  pri_rpt_set[8], pri_rpt_set[9],
+			  pri_rpt_set[10], pri_rpt_set[11]);
+
+		PHYDM_DBG(dm, DBG_DFS, "\n");
+		PHYDM_DBG(dm, DBG_DFS, "dc_cnt = [%d]\n", dc_cnt);
+		PHYDM_DBG(dm, DBG_DFS, "loct_diff = [%d]\n", loct_diff);
+
+		if (pri_vd_max == 0 && pri_vd_min == 255)
+			PHYDM_DBG(dm, DBG_DFS, "No vaild pri_max and pri_min");
+		else
+			PHYDM_DBG(dm, DBG_DFS, "pri_vaild_max = %d, pri_vaild_min = %d\n",
+				  pri_vd_max, pri_vd_min);
+		PHYDM_DBG(dm, DBG_DFS, "advanced_pri_cnt = %d\n",
+			  pri_cnt_fnl);
+
+		PHYDM_DBG(dm, DBG_DFS, "radar_class_cnt[1-8] = [%d, %d, %d, %d, %d, %d, %d, %d]\n",
+			  rdr_cnt[0], rdr_cnt[1], rdr_cnt[2], rdr_cnt[3],
+			  rdr_cnt[4], rdr_cnt[5], rdr_cnt[6], rdr_cnt[7]);
+	}
+}
+#endif
 
 #if (RTL8814A_SUPPORT || RTL8822B_SUPPORT || RTL8821C_SUPPORT)
 void phydm_dfs_histogram_radar_distinguish(
@@ -1504,7 +2123,7 @@ void phydm_dfs_histogram_radar_distinguish(
 			dfs->pri_cond3 = 1;
 
 		/*@Cancel the condition that the abs between pri and pw*/
-		dfs->pri_cond4 = 1;
+			dfs->pri_cond4 = 1;
 
 		if (dfs->pri_hold_sum[5] <= dfs->pri_sum_g5_th)
 			dfs->pri_cond5 = 1;
@@ -1845,12 +2464,14 @@ boolean phydm_radar_detect(void *dm_void)
 	radar_detected = phydm_radar_detect_dm_check(dm);
 
 	if (radar_detected) {
+		/*
 		PHYDM_DBG(dm, DBG_DFS,
 			  "Radar detect: %d\n", radar_detected);
+		*/
 		phydm_radar_detect_reset(dm);
 		if (dfs->dbg_mode == 1) {
 			PHYDM_DBG(dm, DBG_DFS,
-				  "Radar is detected in DFS dbg mode.\n");
+				  "Radar is detected in DFS dbg mode!!!!!!!!!!!\n");
 			radar_detected = 0;
 		}
 	}
@@ -1947,6 +2568,39 @@ void phydm_dfs_hist_dbg(void *dm_void, char input[][16], u32 *_used,
 		PDM_SNPF(out_len, used, output + used, out_len - used,
 			 "{27} type4_safe_pri_sum_th = %d\n",
 			 dfs->type4_safe_pri_sum_th);
+		PDM_SNPF(out_len, used, output + used, out_len - used,
+			"{28} fa_mask_th = %d\n",
+			dfs->fa_mask_th);
+		PDM_SNPF(out_len, used, output + used, out_len - used,
+			"{29} nhm_cnt_th = %d\n",
+			dfs->nhm_cnt_th);
+		PDM_SNPF(out_len, used, output + used, out_len - used,
+			"{30} nhm_dty_th = %d\n",
+			dfs->nhm_dty_th);
+		PDM_SNPF(out_len, used, output + used, out_len - used,
+			"{31} pw_flag_en = %d\n",
+			dfs->pw_flag_en);
+		PDM_SNPF(out_len, used, output + used, out_len - used,
+			"{32} loct_flag_en = %d\n",
+			dfs->loct_flag_en);
+		PDM_SNPF(out_len, used, output + used, out_len - used,
+			"{33} pri_flag_en = %d\n",
+			dfs->pri_flag_en);
+		PDM_SNPF(out_len, used, output + used, out_len - used,
+			"{34} pri_var_offset = %d\n",
+			dfs->pri_var_offset);
+		PDM_SNPF(out_len, used, output + used, out_len - used,
+			"{35} pri_var_tp_offset = %d\n",
+			dfs->pri_var_tp_offset);
+		PDM_SNPF(out_len, used, output + used, out_len - used,
+			"{36} pri_cnt_th = %d\n",
+			dfs->pri_cnt_th);
+		PDM_SNPF(out_len, used, output + used, out_len - used,
+			"{37} loct_diff_th = %d\n",
+			dfs->loct_diff_th);
+		PDM_SNPF(out_len, used, output + used, out_len - used,
+			"{38} dc_cnt_th = %d\n",
+			dfs->dc_cnt_th);
 	} else {
 		PHYDM_SSCANF(input[1], DCMD_DECIMAL, &argv[0]);
 
@@ -2094,6 +2748,61 @@ void phydm_dfs_hist_dbg(void *dm_void, char input[][16], u32 *_used,
 			PDM_SNPF(out_len, used, output + used, out_len - used,
 				 "type4_safe_pri_sum_th = %d\n",
 				 dfs->type4_safe_pri_sum_th);
+		} else if (argv[0] == 28) {
+			dfs->fa_mask_th = (u8)argv[1];
+			PDM_SNPF(out_len, used, output + used, out_len - used,
+				"fa_mask_th = %d\n",
+				dfs->fa_mask_th);
+		} else if (argv[0] == 29) {
+			dfs->nhm_cnt_th = (u8)argv[1];
+			PDM_SNPF(out_len, used, output + used, out_len - used,
+				"nhm_cnt_th = %d\n",
+				dfs->nhm_cnt_th);
+		} else if (argv[0] == 30) {
+			dfs->nhm_dty_th = (u8)argv[1];
+			PDM_SNPF(out_len, used, output + used, out_len - used,
+				"nhm_dty_th = %d\n",
+				dfs->nhm_dty_th);
+		} else if (argv[0] == 31) {
+			dfs->pw_flag_en = (u8)argv[1];
+			PDM_SNPF(out_len, used, output + used, out_len - used,
+				"pw_flag_en = %d\n",
+				dfs->pw_flag_en);
+		} else if (argv[0] == 32) {
+			dfs->loct_flag_en = (u8)argv[1];
+			PDM_SNPF(out_len, used, output + used, out_len - used,
+				"loct_flag_en = %d\n",
+				dfs->loct_flag_en);
+		} else if (argv[0] == 33) {
+			dfs->pri_flag_en = (u8)argv[1];
+			PDM_SNPF(out_len, used, output + used, out_len - used,
+				"pri_flag_en = %d\n",
+				dfs->pri_flag_en);
+		} else if (argv[0] == 34) {
+			dfs->pri_var_offset = (u8)argv[1];
+			PDM_SNPF(out_len, used, output + used, out_len - used,
+				"pri_var_offset = %d\n",
+				dfs->pri_var_offset);
+		} else if (argv[0] == 35) {
+			dfs->pri_var_tp_offset = (u8)argv[1];
+			PDM_SNPF(out_len, used, output + used, out_len - used,
+				"pri_var_tp_offset = %d\n",
+				dfs->pri_var_tp_offset);
+		} else if (argv[0] == 36) {
+			dfs->pri_cnt_th = (u8)argv[1];
+			PDM_SNPF(out_len, used, output + used, out_len - used,
+				"pri_cnt_th = %d\n",
+				dfs->pri_cnt_th);
+		} else if (argv[0] == 37) {
+			dfs->loct_diff_th = (u8)argv[1];
+			PDM_SNPF(out_len, used, output + used, out_len - used,
+				"loct_diff_th = %d\n",
+				dfs->loct_diff_th);
+		} else if (argv[0] == 38) {
+			dfs->dc_cnt_th = (u8)argv[1];
+			PDM_SNPF(out_len, used, output + used, out_len - used,
+				"dc_cnt_th = %d\n",
+				dfs->dc_cnt_th);
 		}
 	}
 	*_used = used;
@@ -2110,7 +2819,7 @@ void phydm_dfs_debug(void *dm_void, char input[][16], u32 *_used,
 	u32 argv[10] = {0};
 	u8 i, input_idx = 0;
 
-	for (i = 0; i < 7; i++) {
+	for (i = 0; i < 10; i++) {
 		PHYDM_SSCANF(input[i + 1], DCMD_HEX, &argv[i]);
 		input_idx++;
 	}
@@ -2125,12 +2834,16 @@ void phydm_dfs_debug(void *dm_void, char input[][16], u32 *_used,
 	dfs->det_print2 = (boolean)argv[4];
 	dfs->print_hist_rpt = (boolean)argv[5];
 	dfs->hist_cond_on = (boolean)argv[6];
+	dfs->det_print_jar3 = (boolean)argv[7];
+	dfs->nhm_dfs_en = (boolean)argv[8];
+	dfs->det_jar3_en = (boolean)argv[9];
 
 	PDM_SNPF(out_len, used, output + used, out_len - used,
-		 "dbg_mode: %d, sw_trigger_mode: %d, force_TP_mode: %d, det_print: %d,det_print2: %d, print_hist_rpt: %d, hist_cond_on: %d\n",
+		  "dbg_mode: %d, sw_trigger_mode: %d, force_TP_mode: %d, det_print: %d, det_print2: %d, print_hist_rpt: %d, hist_cond_on: %d\n, det_print_jar3: %d, nhm_dfs_en: %d, dfs->det_jar3_en: %d\n",
 		 dfs->dbg_mode, dfs->sw_trigger_mode, dfs->force_TP_mode,
 		 dfs->det_print, dfs->det_print2, dfs->print_hist_rpt,
-		 dfs->hist_cond_on);
+		 dfs->hist_cond_on, dfs->det_print_jar3, dfs->nhm_dfs_en,
+		 dfs->det_jar3_en);
 }
 
 u8 phydm_dfs_polling_time(void *dm_void)
@@ -2138,7 +2851,7 @@ u8 phydm_dfs_polling_time(void *dm_void)
 	struct dm_struct *dm = (struct dm_struct *)dm_void;
 	struct _DFS_STATISTICS *dfs = &dm->dfs;
 
-	if (dm->support_ic_type & (ODM_RTL8814A | ODM_RTL8822B | ODM_RTL8821C))
+	if (dm->support_ic_type & (ODM_RTL8814A | ODM_RTL8822B | ODM_RTL8821C | ODM_RTL8822C | ODM_RTL8723F))
 		dfs->dfs_polling_time = 40;
 	else
 		dfs->dfs_polling_time = 100;
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm_dfs.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm_dfs.h
index 9badecfe33ab..c63f237a5025 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm_dfs.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm_dfs.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017  Realtek Corporation.
@@ -73,6 +72,8 @@ struct _DFS_STATISTICS {
 	boolean		sw_trigger_mode;
 	boolean		det_print;
 	boolean		det_print2;
+	boolean		det_print_jar3;
+	boolean		det_jar3_en;
 	boolean		radar_type;
 	boolean		print_hist_rpt;
 	boolean		hist_cond_on;
@@ -92,6 +93,7 @@ struct _DFS_STATISTICS {
 	boolean		pri_long_cond1;	/*@for long radar*/
 	boolean		pw_flag;
 	boolean		pri_flag;
+	boolean		loct_flag;
 	boolean		pri_type3_4_flag;	/*@for ETSI*/
 	boolean		long_radar_flag;
 	u8		pri_hold_sum[6];
@@ -133,6 +135,29 @@ struct _DFS_STATISTICS {
 	u8		pri_std_idle_th : 4;
 	u8		type4_pw_max_cnt : 4;
 	u8		type4_safe_pri_sum_th : 3;
+	u8		pw_rslt[12];
+	u8		pri_rslt[12];
+	s8		loct_rslt[12];
+	/*
+	u8		pw_lth[10];
+	u8		pri_lth[10];
+	u16		pw_uth[10];
+	u8		pri_uth[10];
+	*/
+	boolean		nhm_dfs_en;
+	boolean		nhm_dfs_flag;
+	u8		nhm_dfs_cnt;
+	u8		nhm_cnt_th;
+	u8		nhm_dty_th;
+	boolean		b_flag;
+	boolean 	pw_flag_en;
+	boolean 	loct_flag_en;
+	boolean 	pri_flag_en;
+	u8 		pri_var_offset;
+	u8 		pri_var_tp_offset;
+	u8 		pri_cnt_th;
+	u8 		loct_diff_th;
+	u8 		dc_cnt_th;
 };
 
 /*@
@@ -161,6 +186,7 @@ boolean phydm_radar_detect(void *dm_void);
 void phydm_dfs_histogram_radar_distinguish(void *dm_void);
 boolean phydm_dfs_hist_log(void *dm_void, u8 index);
 void phydm_dfs_parameter_init(void *dm_void);
+void phydm_dfs_rpt_distinguish(void *dm_void);
 void phydm_dfs_hist_dbg(void *dm_void, char input[][16], u32 *_used,
 			char *output, u32 *_out_len);
 void phydm_dfs_debug(void *dm_void, char input[][16], u32 *_used,
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm_dig.c b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm_dig.c
index e35ecbf849d1..3798f989d57b 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm_dig.c
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm_dig.c
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017  Realtek Corporation.
@@ -45,7 +44,7 @@ void phydm_dig_recorder_reset(void *dm_void)
 }
 
 void phydm_dig_recorder(void *dm_void, u8 igi_curr,
-			u32 fa_cnt)
+			u32 fa_metrics)
 {
 	struct dm_struct *dm = (struct dm_struct *)dm_void;
 	struct phydm_dig_struct *dig_t = &dm->dm_dig_table;
@@ -61,7 +60,7 @@ void phydm_dig_recorder(void *dm_void, u8 igi_curr,
 	if (dm->first_connect) {
 		phydm_dig_recorder_reset(dm);
 		dig_rc->igi_history[0] = igi_curr;
-		dig_rc->fa_history[0] = fa_cnt;
+		dig_rc->fa_history[0] = fa_metrics;
 		return;
 	}
 
@@ -80,7 +79,7 @@ void phydm_dig_recorder(void *dm_void, u8 igi_curr,
 	dig_rc->fa_history[3] = dig_rc->fa_history[2];
 	dig_rc->fa_history[2] = dig_rc->fa_history[1];
 	dig_rc->fa_history[1] = dig_rc->fa_history[0];
-	dig_rc->fa_history[0] = fa_cnt;
+	dig_rc->fa_history[0] = fa_metrics;
 
 	PHYDM_DBG(dm, DBG_DIG, "igi_history[3:0] = {0x%x, 0x%x, 0x%x, 0x%x}\n",
 		  dig_rc->igi_history[3], dig_rc->igi_history[2],
@@ -200,6 +199,9 @@ void phydm_fa_threshold_check(void *dm_void, boolean is_dfs_band)
 {
 	struct dm_struct *dm = (struct dm_struct *)dm_void;
 	struct phydm_dig_struct *dig_t = &dm->dm_dig_table;
+	u8 i = 0;
+
+	dig_t->dm_dig_fa_th1 = DM_DIG_FA_TH1;
 
 	if (dig_t->is_dbg_fa_th) {
 		PHYDM_DBG(dm, DBG_DIG, "Manual Fix FA_th\n");
@@ -231,6 +233,13 @@ void phydm_fa_threshold_check(void *dm_void, boolean is_dfs_band)
 		}
 	}
 
+	if ((dig_t->fa_source >= 1) && (dig_t->fa_source <= 3)) {
+		for (i = 0; i < 3; i++)
+			dig_t->fa_th[i] *= OFDM_FA_EXP_DURATION;
+
+		dig_t->dm_dig_fa_th1 *= OFDM_FA_EXP_DURATION;
+	}
+
 	PHYDM_DBG(dm, DBG_DIG, "FA_th={%d,%d,%d}\n", dig_t->fa_th[0],
 		  dig_t->fa_th[1], dig_t->fa_th[2]);
 }
@@ -333,6 +342,13 @@ void phydm_fa_cnt_statistics_jgr3(void *dm_void)
 	if (!(dm->support_ic_type & ODM_IC_JGR3_SERIES))
 		return;
 
+	ret_value = odm_get_bb_reg(dm, R_0x2de4, MASKDWORD);
+	fa_t->cnt_cck_txen = (ret_value & 0xffff);
+	fa_t->cnt_cck_txon = ((ret_value & 0xffff0000) >> 16);
+	ret_value = odm_get_bb_reg(dm, R_0x2de0, MASKDWORD);
+	fa_t->cnt_ofdm_txen = (ret_value & 0xffff);
+	fa_t->cnt_ofdm_txon = ((ret_value & 0xffff0000) >> 16);
+
 	ret_value = odm_get_bb_reg(dm, R_0x2d20, MASKDWORD);
 	fa_t->cnt_fast_fsync = ret_value & 0xffff;
 	fa_t->cnt_sb_search_fail = (ret_value & 0xffff0000) >> 16;
@@ -377,7 +393,7 @@ void phydm_fa_cnt_statistics_jgr3(void *dm_void)
 
 	/*for VHT part */
 	if (dm->support_ic_type & (ODM_RTL8822C | ODM_RTL8812F |
-	    ODM_RTL8814B)) {
+	    ODM_RTL8814B | ODM_RTL8814C)) {
 		/*read VHT CRC32 counter */
 		ret_value = odm_get_bb_reg(dm, R_0x2c0c, MASKDWORD);
 		fa_t->cnt_vht_crc32_ok = ret_value & 0xffff;
@@ -552,19 +568,23 @@ void odm_write_dig(void *dm_void, u8 new_igi)
 		#endif
 
 		/*@Add by YuChen for USB IO too slow issue*/
-		if (!(dm->support_ic_type & ODM_IC_PWDB_EDCCA)) {
-			if (*dm->edcca_mode == PHYDM_EDCCA_ADAPT_MODE &&
-			    new_igi < dig_t->cur_ig_value) {
-				dig_t->cur_ig_value = new_igi;
-				phydm_adaptivity(dm);
-			}
-		} else {
-			if (*dm->edcca_mode == PHYDM_EDCCA_ADAPT_MODE &&
-			    new_igi > dig_t->cur_ig_value) {
-				dig_t->cur_ig_value = new_igi;
-				phydm_adaptivity(dm);
+		if (*dm->edcca_mode == PHYDM_EDCCA_ADAPT_MODE) {
+			if (!(dm->support_ic_type & ODM_IC_PWDB_EDCCA)) {
+				if (new_igi < dig_t->cur_ig_value ||
+				    dm->is_pause_dig) {
+					dig_t->cur_ig_value = new_igi;
+					adaptivity->is_adapt_by_dig = true;
+					phydm_adaptivity(dm);
+				}
+			} else {
+				if (new_igi > dig_t->cur_ig_value) {
+					dig_t->cur_ig_value = new_igi;
+					adaptivity->is_adapt_by_dig = true;
+					phydm_adaptivity(dm);
+				}
 			}
 		}
+		adaptivity->is_adapt_by_dig = false;
 		phydm_write_dig_reg(dm, new_igi);
 	} else {
 		dig_t->igi_trend = DIG_STABLE;
@@ -651,12 +671,14 @@ void odm_pause_dig(void *dm_void, enum phydm_pause_type type,
 	switch (type) {
 	case PHYDM_PAUSE:
 	case PHYDM_PAUSE_NO_SET: {
+		dm->is_pause_dig = true;
 		rpt = phydm_pause_func(dm, F00_DIG, PHYDM_PAUSE, lv, 1, &igi);
 		break;
 	}
 
 	case PHYDM_RESUME: {
 		rpt = phydm_pause_func(dm, F00_DIG, PHYDM_RESUME, lv, 1, &igi);
+		dm->is_pause_dig = false;
 		break;
 	}
 	default:
@@ -835,7 +857,9 @@ void phydm_hwigi_init(void *dm_void)
 	t3 = 0x55; /*34 us*/
 
 	bb_ctrl->hwigi_watchdog_en = false;
-	phydm_set_hwigi_pre_setting(dm, igi_ofst, t1, t2, t3);
+
+	if (dm->support_ic_type & ODM_IC_JGR3_SERIES)
+		phydm_set_hwigi_pre_setting(dm, igi_ofst, t1, t2, t3);
 }
 
 void phydm_hwigi(void *dm_void)
@@ -855,6 +879,9 @@ void phydm_hwigi(void *dm_void)
 	u64 macid_diff = 0;
 	u64 macid_mask = 0;
 
+	if (!(dm->support_ic_type & ODM_IC_JGR3_SERIES))
+		return;
+
 	if (!(bb_ctrl->hwigi_watchdog_en)) {
 		return;
 	}
@@ -926,6 +953,9 @@ void phydm_hwigi_dbg(void *dm_void, char input[][16], u32 *_used,
 	u32 var1[7] = {0};
 	u8 i = 0;
 
+	if (!(dm->support_ic_type & ODM_IC_JGR3_SERIES))
+		return;
+
 	if ((strcmp(input[1], help) == 0)) {
 		PDM_SNPF(out_len, used, output + used, out_len - used,
 			 "Disable/Enable watchdog : {0/1}\n");
@@ -997,9 +1027,11 @@ void phydm_dig_init(void *dm_void)
 	dig_t->fa_th[0] = 250;
 	dig_t->fa_th[1] = 500;
 	dig_t->fa_th[2] = 750;
+	dig_t->dm_dig_fa_th1 = DM_DIG_FA_TH1;
 	dig_t->is_dbg_fa_th = false;
 	dig_t->igi_dyn_up_hit = false;
 	dig_t->fw_dig_enable = false;
+	dig_t->fa_source = 0;
 
 #if (DM_ODM_SUPPORT_TYPE & (ODM_AP))
 	/* @For RTL8881A */
@@ -1089,12 +1121,19 @@ void phydm_dig_abs_boundary_decision(struct dm_struct *dm, boolean is_dfs_band)
 			    dm->support_ic_type & (ODM_RTL8197F | ODM_RTL8192F))
 			/*dig_max shouldn't be too high because of adaptivity*/
 				dig_t->dm_dig_max =
-					MIN_2((adapt->th_l2h + 40),
+					MIN_2((adapt->th_l2h + 30),
 					      DIG_MAX_PERFORMANCE_MODE);
 			else
 				dig_t->dm_dig_max = DIG_MAX_PERFORMANCE_MODE;
 
+			#if (RTL8822B_SUPPORT == 1)
+			if (dm->is_dig_low_bond)
+				dig_t->dig_max_of_min = DIG_MAX_OF_MIN_PERFORMANCE_MODE_22B;
+			else
+				dig_t->dig_max_of_min = DIG_MAX_OF_MIN_PERFORMANCE_MODE;
+			#else
 			dig_t->dig_max_of_min = DIG_MAX_OF_MIN_PERFORMANCE_MODE;
+			#endif
 		}
 
 		if (dm->support_ic_type &
@@ -1120,6 +1159,14 @@ void phydm_dig_dym_boundary_decision(struct dm_struct *dm, boolean is_dfs_band)
 	u8 max_of_rssi_min = 0;
 
 	PHYDM_DBG(dm, DBG_DIG, "%s ======>\n", __func__);
+	#if (RTL8822B_SUPPORT == 1)
+	if (dm->is_dig_low_bond)
+		offset = 5;
+	else
+		offset = 15;
+	#else	
+	offset = 15;
+	#endif
 
 	if (!dm->is_linked) {
 		/*@if no link, always stay at lower bound*/
@@ -1203,21 +1250,22 @@ void phydm_dig_abnormal_case(struct dm_struct *dm)
 		  dig_t->rx_gain_range_max, dig_t->rx_gain_range_min);
 }
 
-u8 phydm_new_igi_by_fa(struct dm_struct *dm, u8 igi, u32 fa_cnt, u8 *step_size)
+u8 phydm_new_igi_by_fa(struct dm_struct *dm, u8 igi, u32 fa_metrics,
+		       u8 *step_size)
 {
 	struct phydm_dig_struct *dig_t = &dm->dm_dig_table;
 
-	if (fa_cnt > dig_t->fa_th[2])
+	if (fa_metrics > dig_t->fa_th[2])
 		igi = igi + step_size[0];
-	else if (fa_cnt > dig_t->fa_th[1])
+	else if (fa_metrics > dig_t->fa_th[1])
 		igi = igi + step_size[1];
-	else if (fa_cnt < dig_t->fa_th[0])
+	else if (fa_metrics < dig_t->fa_th[0])
 		igi = igi - step_size[2];
 
 	return igi;
 }
 
-u8 phydm_get_new_igi(struct dm_struct *dm, u8 igi, u32 fa_cnt,
+u8 phydm_get_new_igi(struct dm_struct *dm, u8 igi, u32 fa_metrics,
 		     boolean is_dfs_band)
 {
 	struct phydm_dig_struct *dig_t = &dm->dm_dig_table;
@@ -1268,18 +1316,19 @@ u8 phydm_get_new_igi(struct dm_struct *dm, u8 igi, u32 fa_cnt,
 		/* @4 Abnormal # beacon case */
 		#if (DM_ODM_SUPPORT_TYPE & (ODM_WIN | ODM_CE))
 		if (dm->phy_dbg_info.num_qry_beacon_pkt < 5 &&
-		    fa_cnt < DM_DIG_FA_TH1 && dm->bsta_state &&
+		    fa_metrics < dig_t->dm_dig_fa_th1 && dm->bsta_state &&
 		    dm->support_ic_type != ODM_RTL8723D &&
+			dm->support_ic_type != ODM_RTL8822B &&
 		    dm->support_ic_type != ODM_RTL8822C) {
 			dig_t->rx_gain_range_min = 0x1c;
 			igi = dig_t->rx_gain_range_min;
 			PHYDM_DBG(dm, DBG_DIG, "Beacon_num=%d,force igi=0x%x\n",
 				  dm->phy_dbg_info.num_qry_beacon_pkt, igi);
 		} else {
-			igi = phydm_new_igi_by_fa(dm, igi, fa_cnt, step);
+			igi = phydm_new_igi_by_fa(dm, igi, fa_metrics, step);
 		}
 		#else
-		igi = phydm_new_igi_by_fa(dm, igi, fa_cnt, step);
+		igi = phydm_new_igi_by_fa(dm, igi, fa_metrics, step);
 		#endif
 	} else {
 		/* @2 Before link */
@@ -1291,9 +1340,9 @@ u8 phydm_get_new_igi(struct dm_struct *dm, u8 igi, u32 fa_cnt,
 				  "First disconnect:foce IGI to lower bound\n");
 		} else {
 			PHYDM_DBG(dm, DBG_DIG, "Pre_IGI=((0x%x)), FA=((%d))\n",
-				  igi, fa_cnt);
+				  igi, fa_metrics);
 
-			igi = phydm_new_igi_by_fa(dm, igi, fa_cnt, step);
+			igi = phydm_new_igi_by_fa(dm, igi, fa_metrics, step);
 		}
 	}
 
@@ -1310,8 +1359,8 @@ u8 phydm_get_new_igi(struct dm_struct *dm, u8 igi, u32 fa_cnt,
 	PHYDM_DBG(dm, DBG_DIG, "igi_dyn_up_hit=%d\n",
 		  dig_t->igi_dyn_up_hit);
 
-	PHYDM_DBG(dm, DBG_DIG, "fa_cnt = %d, IGI: 0x%x -> 0x%x\n",
-		  fa_cnt, dig_t->cur_ig_value, igi);
+	PHYDM_DBG(dm, DBG_DIG, "fa_metrics = %d, IGI: 0x%x -> 0x%x\n",
+		  fa_metrics, dig_t->cur_ig_value, igi);
 
 	return igi;
 }
@@ -1334,6 +1383,44 @@ boolean phydm_dig_dfs_mode_en(void *dm_void)
 	return dfs_mode_en;
 }
 
+void phydm_dig_fa_source(void *dm_void, u8 fa_source, u32 *fa_metrics)
+{
+	struct dm_struct *dm = (struct dm_struct *)dm_void;
+	struct phydm_fa_struct *fa = &dm->false_alm_cnt;
+
+	switch (fa_source) {
+		case 1:
+			*fa_metrics = fa->time_fa_exp;
+			break;
+		#ifdef IFS_CLM_SUPPORT
+		case 2:
+			if (fa->time_fa_ifs_clm) {
+				*fa_metrics = fa->time_fa_ifs_clm;
+			} else {
+				fa_source = 1;
+				*fa_metrics = fa->time_fa_exp;
+			}
+			break;
+		#endif
+		#ifdef FAHM_SUPPORT
+		case 3:
+			if (fa->time_fa_fahm) {
+				*fa_metrics = fa->time_fa_fahm;
+			} else {
+				fa_source = 1;
+				*fa_metrics = fa->time_fa_exp;
+			}
+			break;
+		#endif
+		default:
+			break;
+	}
+
+	PHYDM_DBG(dm, DBG_DIG,
+		  "fa_source:%d, fa_cnt=%d ,time_fa_exp=%d, fa_metrics=%d\n",
+		  fa_source, fa->cnt_all, fa->time_fa_exp, *fa_metrics);
+}
+
 void phydm_dig(void *dm_void)
 {
 	struct dm_struct *dm = (struct dm_struct *)dm_void;
@@ -1344,30 +1431,37 @@ void phydm_dig(void *dm_void)
 #endif
 	u8 igi = dig_t->cur_ig_value;
 	u8 new_igi = 0x20;
-	u32 fa_cnt = fa->cnt_all;
+	u32 fa_metrics = fa->cnt_all;
 	boolean dfs_mode_en = false;
 
-#ifdef PHYDM_DCC_ENHANCE
-	if (dm->dm_dcc_info.dcc_en)
-		fa_cnt = fa->cnt_ofdm_fail; /*OFDM FA only*/
-#endif
+	PHYDM_DBG(dm, DBG_DIG, "%s Start===>\n", __func__);
 
-#ifdef PHYDM_TDMA_DIG_SUPPORT
+	#ifdef PHYDM_DCC_ENHANCE
+	if (dm->dm_dcc_info.dcc_en) {
+		fa_metrics = fa->cnt_ofdm_fail; /*OFDM FA only*/
+		dig_t->fa_source = 0;
+	}
+	#endif
+
+	#ifdef PHYDM_TDMA_DIG_SUPPORT
 	if (!(dm->original_dig_restore)) {
 		if (dig_t->cur_ig_value_tdma == 0)
 			dig_t->cur_ig_value_tdma = dig_t->cur_ig_value;
 
 		igi = dig_t->cur_ig_value_tdma;
-		fa_cnt = falm_cnt_acc->cnt_all_1sec;
+		fa_metrics = falm_cnt_acc->cnt_all_1sec;
+		dig_t->fa_source = 0;
 	}
-#endif
+	#endif
 
 	if (phydm_dig_abort(dm)) {
 		dig_t->cur_ig_value = phydm_get_igi(dm, BB_PATH_A);
 		return;
 	}
 
-	PHYDM_DBG(dm, DBG_DIG, "%s Start===>\n", __func__);
+	if (dig_t->fa_source)
+		phydm_dig_fa_source(dm, dig_t->fa_source, &fa_metrics);
+
 	PHYDM_DBG(dm, DBG_DIG,
 		  "is_linked=%d, RSSI=%d, 1stConnect=%d, 1stDisconnect=%d\n",
 		  dm->is_linked, dm->rssi_min,
@@ -1381,7 +1475,7 @@ void phydm_dig(void *dm_void)
 
 #ifdef CFG_DIG_DAMPING_CHK
 	/*Record IGI History*/
-	phydm_dig_recorder(dm, igi, fa_cnt);
+	phydm_dig_recorder(dm, igi, fa_metrics);
 
 	/*@DIG Damping Check*/
 	phydm_dig_damping_chk(dm);
@@ -1400,7 +1494,7 @@ void phydm_dig(void *dm_void)
 	phydm_fa_threshold_check(dm, dfs_mode_en);
 
 	/*Select new IGI by FA */
-	new_igi = phydm_get_new_igi(dm, igi, fa_cnt, dfs_mode_en);
+	new_igi = phydm_get_new_igi(dm, igi, fa_metrics, dfs_mode_en);
 
 	/* @1 Update status */
 	#ifdef PHYDM_TDMA_DIG_SUPPORT
@@ -1635,6 +1729,13 @@ void phydm_fa_cnt_statistics_n(void *dm_void)
 	/* @hold ofdm & cck counter */
 	phydm_false_alarm_counter_reg_hold(dm);
 
+	reg = odm_get_bb_reg(dm, R_0x9d0, MASKDWORD);
+	fa_t->cnt_cck_txon = (reg & 0xffff);
+	fa_t->cnt_cck_txen = ((reg & 0xffff0000) >> 16);
+	reg = odm_get_bb_reg(dm, R_0x9cc, MASKDWORD);
+	fa_t->cnt_ofdm_txon = (reg & 0xffff);
+	fa_t->cnt_ofdm_txen = ((reg & 0xffff0000) >> 16);
+
 	reg = odm_get_bb_reg(dm, ODM_REG_OFDM_FA_TYPE1_11N, MASKDWORD);
 	fa_t->cnt_fast_fsync = (reg & 0xffff);
 	fa_t->cnt_sb_search_fail = ((reg & 0xffff0000) >> 16);
@@ -1734,6 +1835,12 @@ void phydm_fa_cnt_statistics_ac(void *dm_void)
 	if (!(dm->support_ic_type & ODM_IC_11AC_SERIES))
 		return;
 
+	ret_value = odm_get_bb_reg(dm, R_0xf50, MASKDWORD);
+	fa_t->cnt_cck_txen = (ret_value & 0xffff);
+	fa_t->cnt_ofdm_txen = ((ret_value & 0xffff0000) >> 16);
+	fa_t->cnt_cck_txon = (u16)odm_get_bb_reg(dm, R_0xfcc, MASKLWORD);
+	fa_t->cnt_ofdm_txon = (u16)odm_get_bb_reg(dm, R_0xfc8, MASKHWORD);
+
 	ret_value = odm_get_bb_reg(dm, ODM_REG_OFDM_FA_TYPE1_11AC, MASKDWORD);
 	fa_t->cnt_fast_fsync = (ret_value & 0xffff0000) >> 16;
 
@@ -1938,6 +2045,57 @@ void phydm_set_crc32_cnt2_rate(void *dm_void, u8 rate_idx)
 	}
 }
 
+void phydm_fa_cnt_cal_fa_duration(void *dm_void)
+{
+	struct dm_struct *dm = (struct dm_struct *)dm_void;
+	struct ccx_info *ccx = &dm->dm_ccx_info;
+	struct phydm_fa_struct *fa_t = &dm->false_alm_cnt;
+	u8 norm = 0; /*normalization*/
+	boolean fahm_chk = false;
+
+	fa_t->time_fa_all = fa_t->cnt_fast_fsync * 12 +
+			    fa_t->cnt_sb_search_fail * 12 +
+			    fa_t->cnt_parity_fail * 28 +
+			    fa_t->cnt_rate_illegal * 28 +
+			    fa_t->cnt_crc8_fail * 20 +
+			    fa_t->cnt_crc8_fail_vhta * 28 +
+			    fa_t->cnt_mcs_fail_vht * 36 +
+			    fa_t->cnt_mcs_fail * 32 +
+			    fa_t->cnt_cck_fail * 80;
+
+	fa_t->time_fa_exp = fa_t->cnt_ofdm_fail * OFDM_FA_EXP_DURATION +
+			    fa_t->cnt_cck_fail * CCK_FA_EXP_DURATION;
+
+	fa_t->time_fa_ifs_clm = 0;
+	fa_t->time_fa_fahm = 0;
+
+	#ifdef IFS_CLM_SUPPORT
+	if (ccx->ccx_watchdog_result & IFS_CLM_SUCCESS) {
+		norm = (u8)PHYDM_DIV(PHYDM_WATCH_DOG_PERIOD * S_TO_US,
+				     ccx->ifs_clm_period);
+		fa_t->time_fa_ifs_clm = (ccx->ifs_clm_cckfa +
+					ccx->ifs_clm_ofdmfa) * norm;
+	}
+	#endif
+
+	#ifdef FAHM_SUPPORT
+	if (ccx->ccx_watchdog_result & FAHM_SUCCESS) {
+		if (fa_t->cnt_cck_fail) {
+			if (ccx->fahm_inclu_cck)
+				fahm_chk = true;
+		} else {
+			fahm_chk = true;
+		}
+	}
+
+	if (fahm_chk) {
+		norm = (u8)PHYDM_DIV(PHYDM_WATCH_DOG_PERIOD * S_TO_US,
+				     ccx->fahm_period);
+		fa_t->time_fa_fahm = ccx->fahm_result_sum * norm;
+	}
+	#endif
+}
+
 void phydm_false_alarm_counter_statistics(void *dm_void)
 {
 	struct dm_struct *dm = (struct dm_struct *)dm_void;
@@ -1967,15 +2125,7 @@ void phydm_false_alarm_counter_statistics(void *dm_void)
 	phydm_get_dbg_port_info(dm);
 	phydm_false_alarm_counter_reg_reset(dm_void);
 
-	fa_t->time_fa_all = fa_t->cnt_fast_fsync * 12 +
-			    fa_t->cnt_sb_search_fail * 12 +
-			    fa_t->cnt_parity_fail * 28 +
-			    fa_t->cnt_rate_illegal * 28 +
-			    fa_t->cnt_crc8_fail * 20 +
-			    fa_t->cnt_crc8_fail_vhta * 28 +
-			    fa_t->cnt_mcs_fail_vht * 36 +
-			    fa_t->cnt_mcs_fail * 32 +
-			    fa_t->cnt_cck_fail * 80;
+	phydm_fa_cnt_cal_fa_duration(dm);
 
 	fa_t->cnt_crc32_error_all = fa_t->cnt_vht_crc32_error +
 				    fa_t->cnt_ht_crc32_error +
@@ -1987,12 +2137,20 @@ void phydm_false_alarm_counter_statistics(void *dm_void)
 				 fa_t->cnt_ofdm_crc32_ok +
 				 fa_t->cnt_cck_crc32_ok;
 
+	PHYDM_DBG(dm, DBG_FA_CNT,
+		  "[Tx cnt] {CCK_TxEN, CCK_TxON, OFDM_TxEN, OFDM_TxON} = {%d, %d, %d, %d}\n",
+		  fa_t->cnt_cck_txen, fa_t->cnt_cck_txon, fa_t->cnt_ofdm_txen,
+		  fa_t->cnt_ofdm_txon);
 	PHYDM_DBG(dm, DBG_FA_CNT,
 		  "[CCA Cnt] {CCK, OFDM, Total} = {%d, %d, %d}\n",
 		  fa_t->cnt_cck_cca, fa_t->cnt_ofdm_cca, fa_t->cnt_cca_all);
 	PHYDM_DBG(dm, DBG_FA_CNT,
 		  "[FA Cnt] {CCK, OFDM, Total} = {%d, %d, %d}\n",
 		  fa_t->cnt_cck_fail, fa_t->cnt_ofdm_fail, fa_t->cnt_all);
+	PHYDM_DBG(dm, DBG_FA_CNT,
+		  "[FA duration(us)] {exp, ifs_clm, fahm} = {%d, %d, %d}\n",
+		  fa_t->time_fa_exp, fa_t->time_fa_ifs_clm,
+		  fa_t->time_fa_fahm);
 	PHYDM_DBG(dm, DBG_FA_CNT,
 		  "[OFDM FA] Parity=%d, Rate=%d, Fast_Fsync=%d, SBD=%d\n",
 		  fa_t->cnt_parity_fail, fa_t->cnt_rate_illegal,
@@ -2162,7 +2320,7 @@ void phydm_tdma_dig_timer_check(void *dm_void)
 			if (dm->support_ic_type & (ODM_RTL8198F | ODM_RTL8814B |
 			    ODM_RTL8812F | ODM_RTL8822B | ODM_RTL8192F |
 			    ODM_RTL8821C | ODM_RTL8197G | ODM_RTL8822C |
-			    ODM_RTL8723D| ODM_RTL8723F)) {
+			    ODM_RTL8723D | ODM_RTL8723F | ODM_RTL8814C)) {
 				PHYDM_DBG(dm, DBG_DIG,
 					  "Check fail, Restart timer\n\n");
 				phydm_false_alarm_counter_reset(dm);
@@ -2222,7 +2380,7 @@ void phydm_tdma_dig(void *dm_void)
 #ifdef IS_USE_NEW_TDMA
 	if (dm->support_ic_type &
 	    (ODM_RTL8198F | ODM_RTL8814B | ODM_RTL8812F | ODM_RTL8822B |
-	     ODM_RTL8192F | ODM_RTL8821C)) {
+	     ODM_RTL8192F | ODM_RTL8821C | ODM_RTL8814C)) {
 		PHYDM_DBG(dm, DBG_DIG, "98F/14B/12F/22B/92F/21C, new tdma\n");
 		return;
 	}
@@ -3066,6 +3224,7 @@ void phydm_tdma_high_dig(void *dm_void)
 	struct phydm_dig_struct *dig_t = &dm->dm_dig_table;
 	struct phydm_fa_struct *falm_cnt = &dm->false_alm_cnt;
 	struct phydm_fa_acc_struct *falm_cnt_acc = &dm->false_alm_cnt_acc;
+	struct phydm_adaptivity_struct *adapt = &dm->adaptivity;
 #ifdef CFG_DIG_DAMPING_CHK
 	struct phydm_dig_recorder_strcut *dig_rc = &dig_t->dig_recorder_t;
 #endif
@@ -3130,7 +3289,22 @@ void phydm_tdma_high_dig(void *dm_void)
 			#endif
 		} else if (*dm->bb_op_mode == PHYDM_PERFORMANCE_MODE) {
 		/*service 1 devices*/
-			dig_t->dm_dig_max = DIG_MAX_PERFORMANCE_MODE;
+			if (*dm->edcca_mode == PHYDM_EDCCA_ADAPT_MODE &&
+			   (dm->support_ic_type & ODM_RTL8192F)) {
+			/*dig_max shouldn't be too high becaus of adaptivity*/
+				dig_t->dm_dig_max = MIN_2((adapt->th_l2h + 30),
+						    DIG_MAX_PERFORMANCE_MODE);
+			} else {
+				dig_t->dm_dig_max = DIG_MAX_PERFORMANCE_MODE;
+				#if (RTL8822B_SUPPORT == 1)
+				if (dm->is_dig_low_bond)
+					dig_t->dig_max_of_min = DIG_MAX_OF_MIN_PERFORMANCE_MODE_22B;
+				else
+					dig_t->dig_max_of_min = DIG_MAX_OF_MIN_PERFORMANCE_MODE;
+				#else
+					dig_t->dig_max_of_min = DIG_MAX_OF_MIN_PERFORMANCE_MODE;
+				#endif
+			}
 			dig_t->dig_max_of_min = DIG_MAX_OF_MIN_PERFORMANCE_MODE;
 		}
 
@@ -3370,6 +3544,8 @@ void phydm_dig_debug(void *dm_void, char input[][16], u32 *_used, char *output,
 		#endif
 		PDM_SNPF(out_len, used, output + used, out_len - used,
 			 "{6} {fw_dig_en}\n");
+		PDM_SNPF(out_len, used, output + used, out_len - used,
+			 "{7} FA source:{0:original/1:Experimental duration/2:IFS_CLM/3:FAHM}\n");
 	} else {
 		PHYDM_SSCANF(input[1], DCMD_DECIMAL, &var1[0]);
 
@@ -3379,9 +3555,9 @@ void phydm_dig_debug(void *dm_void, char input[][16], u32 *_used, char *output,
 		if (var1[0] == 0) {
 			if (var1[1] == 1) {
 				dig_t->is_dbg_fa_th = true;
-				dig_t->fa_th[0] = (u16)var1[2];
-				dig_t->fa_th[1] = (u16)var1[3];
-				dig_t->fa_th[2] = (u16)var1[4];
+				dig_t->fa_th[0] = (u32)var1[2];
+				dig_t->fa_th[1] = (u32)var1[3];
+				dig_t->fa_th[2] = (u32)var1[4];
 
 				PDM_SNPF(out_len, used, output + used,
 					 out_len - used,
@@ -3439,6 +3615,10 @@ void phydm_dig_debug(void *dm_void, char input[][16], u32 *_used, char *output,
 			phydm_fw_dm_ctrl_en(dm, F00_DIG, (boolean)var1[1]);
 			PDM_SNPF(out_len, used, output + used, out_len - used,
 				 "fw_dig_enable = %2x\n", dig_t->fw_dig_enable);
+		} else if (var1[0] == 7) {
+			dig_t->fa_source = (u8)var1[1];
+			PDM_SNPF(out_len, used, output + used, out_len - used,
+				 "FA source = %d\n", dig_t->fa_source);
 		}
 	}
 	*_used = used;
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm_dig.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm_dig.h
index 205263c9a667..68b96ad52450 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm_dig.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm_dig.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017  Realtek Corporation.
@@ -27,8 +26,8 @@
 #ifndef __PHYDMDIG_H__
 #define __PHYDMDIG_H__
 
-/* 2019.10.25 remove redundant code*/
-#define DIG_VERSION "3.7"
+/* 2020.08.13 Add IFS-CLM/FAHM in dig fa source for more accurate fa info*/
+#define DIG_VERSION "3.9"
 
 #define	DIG_HW		0
 #define DIG_LIMIT_PERIOD 60 /*60 sec*/
@@ -53,6 +52,9 @@
 #define	DIG_MAX_PERFORMANCE_MODE	0x5a
 #define	DIG_MAX_OF_MIN_PERFORMANCE_MODE	0x40	/*@[WLANBB-871]*/
 #define	DIG_MIN_PERFORMANCE		0x20
+#if (RTL8822B_SUPPORT == 1)
+#define	DIG_MAX_OF_MIN_PERFORMANCE_MODE_22B		0x38
+#endif
 
 /*@DIG DFS function*/
 #define	DIG_MAX_DFS			0x28
@@ -82,6 +84,11 @@
 #define	RSSI_OFFSET_DIG_LPS		5
 #define DIG_RECORD_NUM			4
 
+/*==== [FA duration] =======================================*/
+/*[PHYDM-406]*/
+#define OFDM_FA_EXP_DURATION		12	/*us*/
+#define CCK_FA_EXP_DURATION		175	/*us*/
+
 /*@--------------------Enum-----------------------------------*/
 enum phydm_dig_mode {
 	PHYDM_DIG_PERFORAMNCE_MODE	= 0,
@@ -163,7 +170,9 @@ struct phydm_dig_struct {
 	u8		dig_max_of_min;		/*@Absolutly max of min*/
 	u32		ant_div_rssi_max;
 	u8		*is_p2p_in_process;
-	u16		fa_th[3];
+	u32		fa_th[3];
+	u32		dm_dig_fa_th1;
+	u8		fa_source;
 #if (RTL8822B_SUPPORT || RTL8197F_SUPPORT || RTL8821C_SUPPORT ||\
 	RTL8198F_SUPPORT || RTL8192F_SUPPORT || RTL8195B_SUPPORT ||\
 	RTL8822C_SUPPORT || RTL8814B_SUPPORT || RTL8721D_SUPPORT ||\
@@ -239,6 +248,9 @@ struct phydm_fa_struct {
 	u32		cnt_crc32_error_all;
 	u32		cnt_crc32_ok_all;
 	u32		time_fa_all;
+	u32		time_fa_exp; /*FA duration, [PHYDM-406]*/
+	u32		time_fa_ifs_clm; /*FA duration, [PHYDM-406]*/
+	u32		time_fa_fahm; /*FA duration, [PHYDM-406]*/
 	boolean		cck_block_enable;
 	boolean		ofdm_block_enable;
 	u32		dbg_port0;
@@ -255,7 +267,10 @@ struct phydm_fa_struct {
 	u32		cnt_vht2_crc32_error;
 	u32		cnt_vht2_crc32_ok;
 	u8		vht2_pcr;
-
+	u32		cnt_cck_txen;
+	u32		cnt_cck_txon;
+	u32		cnt_ofdm_txen;
+	u32		cnt_ofdm_txon;
 };
 
 #ifdef PHYDM_TDMA_DIG_SUPPORT
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm_direct_bf.c b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm_direct_bf.c
index 0e6bcaa5aece..55dd2f8dacca 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm_direct_bf.c
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm_direct_bf.c
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017  Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm_direct_bf.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm_direct_bf.h
index 9ae4454152b6..c9c4c4bed628 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm_direct_bf.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm_direct_bf.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017  Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm_dynamictxpower.c b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm_dynamictxpower.c
index d3708becd54e..b9d67821ed07 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm_dynamictxpower.c
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm_dynamictxpower.c
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017  Realtek Corporation.
@@ -244,7 +243,7 @@ phydm_check_rates(void *dm_void, u8 rate_idx)
 	u32 check_rate_bitmap0 = 0x08080808; /* @check CCK11M, OFDM54M, MCS7, MCS15*/
 	u32 check_rate_bitmap1 = 0x80200808; /* @check MCS23, MCS31, VHT1SS M9, VHT2SS M9*/
 	u32 check_rate_bitmap2 = 0x00080200; /* @check VHT3SS M9, VHT4SS M9*/
-	u32 bitmap_result;
+	u32 bitmap_result = 0;
 
 #if (RTL8822B_SUPPORT)
 	if (dm->support_ic_type & ODM_RTL8822B) {
@@ -292,7 +291,7 @@ phydm_check_rates(void *dm_void, u8 rate_idx)
 		bitmap_result = BIT(rate_idx - 64) & check_rate_bitmap2;
 	else if (rate_idx >= 32)
 		bitmap_result = BIT(rate_idx - 32) & check_rate_bitmap1;
-	else if (rate_idx <= 31)
+	else // if (rate_idx <= 31)
 		bitmap_result = BIT(rate_idx) & check_rate_bitmap0;
 
 	if (bitmap_result != 0)
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm_dynamictxpower.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm_dynamictxpower.h
index 75b460d43280..88be431f421b 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm_dynamictxpower.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm_dynamictxpower.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017  Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm_features.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm_features.h
index 9ea49d2fea17..bbbc9edabc8d 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm_features.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm_features.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017  Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm_features_ap.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm_features_ap.h
index 4a531a928fcc..ce422991e096 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm_features_ap.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm_features_ap.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017 Realtek Corporation.
@@ -42,6 +41,10 @@
 	#define NHM_SUPPORT
 	#define CLM_SUPPORT
 
+#if (RTL8197G_SUPPORT || RTL8812F_SUPPORT)
+	#define EDCCA_CLM_SUPPORT
+#endif
+
 #if (RTL8812F_SUPPORT)
 	/*#define PHYDM_PHYSTAUS_AUTO_SWITCH*/
 #endif
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm_features_ce.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm_features_ce.h
index 90637316c55f..9dc238aff2c1 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm_features_ce.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm_features_ce.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017  Realtek Corporation.
@@ -51,6 +50,10 @@
 	#define NHM_SUPPORT
 	#define CLM_SUPPORT
 
+#if (RTL8822C_SUPPORT || RTL8723F_SUPPORT)
+	#define EDCCA_CLM_SUPPORT
+#endif
+
 #if (RTL8822C_SUPPORT)
 	#define NHM_DYM_PW_TH_SUPPORT
 #endif
@@ -162,7 +165,7 @@
 
 		#if (RTL8723B_SUPPORT || RTL8821A_SUPPORT ||\
 		     RTL8188F_SUPPORT || RTL8821C_SUPPORT ||\
-		     RTL8723D_SUPPORT)
+		     RTL8723D_SUPPORT||RTL8723F_SUPPORT)
 			#define	CONFIG_S0S1_SW_ANTENNA_DIVERSITY
 		#endif
 
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm_features_ce2_kernel.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm_features_ce2_kernel.h
index b7ee91548183..c206ea605892 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm_features_ce2_kernel.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm_features_ce2_kernel.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017  Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm_features_iot.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm_features_iot.h
index 4b1e162d53ad..5d2231cd1dec 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm_features_iot.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm_features_iot.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017  Realtek Corporation.
@@ -46,6 +45,10 @@
 	#define NHM_SUPPORT
 	#define CLM_SUPPORT
 
+#if (RTL8197G_SUPPORT || RTL8812F_SUPPORT)
+	#define EDCCA_CLM_SUPPORT
+#endif
+
 /*#define PHYDM_TDMA_DIG_SUPPORT*/
 
 #if (RTL8197F_SUPPORT || RTL8822B_SUPPORT)
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm_features_win.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm_features_win.h
index 30a5f94e140a..061476821fc2 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm_features_win.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm_features_win.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017 Realtek Corporation.
@@ -41,6 +40,10 @@
 	#define NHM_SUPPORT
 	#define CLM_SUPPORT
 
+#if (RTL8822C_SUPPORT || RTL8723F_SUPPORT)
+	#define EDCCA_CLM_SUPPORT
+#endif
+
 #if (RTL8822C_SUPPORT)
 	#define NHM_DYM_PW_TH_SUPPORT
 #endif
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm_hwconfig.c b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm_hwconfig.c
index ea73396793cc..2d6893a84825 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm_hwconfig.c
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm_hwconfig.c
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017  Realtek Corporation.
@@ -406,21 +405,6 @@ odm_config_rf_with_header_file(struct dm_struct *dm,
 		}
 	}
 #endif
-/*#if (RTL8814B_SUPPORT == 1)
-	if (dm->support_ic_type == ODM_RTL8814B) {
-		if (config_type == CONFIG_RF_RADIO) {
-			if (e_rf_path == RF_PATH_A)
-				READ_AND_CONFIG_MP(8814b, _radioa);
-			else if (e_rf_path == RF_PATH_B)
-				READ_AND_CONFIG_MP(8814b, _radiob);
-			else if (e_rf_path == RF_PATH_C)
-				READ_AND_CONFIG_MP(8814b, _radioc);
-			else if (e_rf_path == RF_PATH_D)
-				READ_AND_CONFIG_MP(8814b, _radiod);
-		}
-	}
-#endif
-*/
 #if (RTL8822C_SUPPORT)
 	if (dm->support_ic_type == ODM_RTL8822C) {
 		if (config_type == CONFIG_RF_RADIO) {
@@ -441,7 +425,7 @@ odm_config_rf_with_header_file(struct dm_struct *dm,
 			if (config_type == CONFIG_RF_RADIO) {
 				if (e_rf_path == RF_PATH_A)
 					READ_AND_CONFIG_MP(8723f, _radioa);
-				if (e_rf_path == RF_PATH_B)
+				else if (e_rf_path == RF_PATH_B)
 					READ_AND_CONFIG_MP(8723f, _radiob);
 			} else if (config_type == CONFIG_RF_TXPWR_LMT) {
 				READ_AND_CONFIG_MP(8723f, _txpwr_lmt);
@@ -469,8 +453,8 @@ odm_config_rf_with_header_file(struct dm_struct *dm,
 	}
 #endif
 
- /*8814B need review, when phydm has related files*/
- #if (RTL8814B_SUPPORT)
+/*8814B need review, when phydm has related files*/
+#if (RTL8814B_SUPPORT)
 	if (dm->support_ic_type == ODM_RTL8814B) {
 		if (config_type == CONFIG_RF_RADIO) {
 			if (e_rf_path == RF_PATH_A)
@@ -491,7 +475,29 @@ odm_config_rf_with_header_file(struct dm_struct *dm,
 			READ_AND_CONFIG_MP(8814b, _txpwr_lmt);
 		}
 	}
-  #endif
+#endif
+#if (RTL8814C_SUPPORT)
+	if (dm->support_ic_type == ODM_RTL8814C) {
+		if (config_type == CONFIG_RF_RADIO) {
+			if (e_rf_path == RF_PATH_A)
+				READ_AND_CONFIG_MP(8814c, _radioa);
+			else if (e_rf_path == RF_PATH_B)
+				READ_AND_CONFIG_MP(8814c, _radiob);
+			else if (e_rf_path == RF_PATH_C)
+				READ_AND_CONFIG_MP(8814c, _radioc);
+			else if (e_rf_path == RF_PATH_D)
+				READ_AND_CONFIG_MP(8814c, _radiod);
+		}
+		if (config_type == CONFIG_RF_SYN_RADIO) {
+			if (e_rf_path == RF_SYN0)
+				READ_AND_CONFIG_MP(8814c, _radiosyn0);
+			else if (e_rf_path == RF_SYN1)
+				READ_AND_CONFIG_MP(8814c, _radiosyn1);
+		} else if (config_type == CONFIG_RF_TXPWR_LMT) {
+			READ_AND_CONFIG_MP(8814c, _txpwr_lmt);
+		}
+	}
+#endif
 
 	if (config_type == CONFIG_RF_RADIO) {
 		if (dm->fw_offload_ability & PHYDM_PHY_PARAM_OFFLOAD) {
@@ -843,8 +849,13 @@ odm_config_rf_with_tx_pwr_track_header_file(struct dm_struct *dm)
 #endif
 
 #if (RTL8723F_SUPPORT)
-		if (dm->support_ic_type == ODM_RTL8723F)
+	if (dm->support_ic_type == ODM_RTL8723F) {
+		if (dm->en_tssi_mode)
+			READ_AND_CONFIG_MP(8723f, _txpowertracktssi);
+		else
 			READ_AND_CONFIG_MP(8723f, _txpowertrack);
+		READ_AND_CONFIG_MP(8723f, _txxtaltrack);
+	}
 #endif
 #if (RTL8812F_SUPPORT)
 	if (dm->support_ic_type == ODM_RTL8812F) {
@@ -858,6 +869,8 @@ odm_config_rf_with_tx_pwr_track_header_file(struct dm_struct *dm)
 			READ_AND_CONFIG_MP(8812f, _txpowertrack_type3);
 		else if (dm->rfe_type == 4)
 			READ_AND_CONFIG_MP(8812f, _txpowertrack_type4);
+		else if (dm->rfe_type == 5)
+			READ_AND_CONFIG_MP(8812f, _txpowertrack_type5);
 		else
 			READ_AND_CONFIG_MP(8812f, _txpowertrack);
 	}
@@ -868,7 +881,7 @@ odm_config_rf_with_tx_pwr_track_header_file(struct dm_struct *dm)
 		READ_AND_CONFIG_MP(8197g, _txpowertrack);
 #endif
 
-#if RTL8814B_SUPPORT
+#if (RTL8814B_SUPPORT)
 	if (dm->support_ic_type == ODM_RTL8814B) {
 		if (dm->rfe_type == 0)
 			READ_AND_CONFIG_MP(8814b, _txpowertrack_type0);
@@ -884,7 +897,19 @@ odm_config_rf_with_tx_pwr_track_header_file(struct dm_struct *dm)
 #endif
 		else
 			READ_AND_CONFIG_MP(8814b, _txpowertrack);
-		}
+	}
+#endif
+#if (RTL8814C_SUPPORT)
+	if (dm->support_ic_type == ODM_RTL8814C) {
+		if (dm->rfe_type == 0)
+			READ_AND_CONFIG_MP(8814c, _txpowertrack_type0);
+		else if (dm->rfe_type == 1)
+			READ_AND_CONFIG_MP(8814c, _txpowertrack_type1);
+		else if (dm->rfe_type == 2)
+			READ_AND_CONFIG_MP(8814c, _txpowertrack_type2);
+		else
+			READ_AND_CONFIG_MP(8814c, _txpowertrack);
+	}
 #endif
 
 	return HAL_STATUS_SUCCESS;
@@ -1291,6 +1316,20 @@ odm_config_bb_with_header_file(struct dm_struct *dm,
 		}
 	}
 #endif
+#if (RTL8814C_SUPPORT == 1)
+	if (dm->support_ic_type == ODM_RTL8814C) {
+		if (config_type == CONFIG_BB_PHY_REG)
+			READ_AND_CONFIG_MP(8814c, _phy_reg);
+		else if (config_type == CONFIG_BB_AGC_TAB)
+			READ_AND_CONFIG_MP(8814c, _agc_tab);
+		else if (config_type == CONFIG_BB_PHY_REG_PG) {
+			if (dm->rfe_type == 1)
+				READ_AND_CONFIG(8814c, _phy_reg_pg_type1);
+			else
+				READ_AND_CONFIG(8814c, _phy_reg_pg);
+		}
+	}
+#endif
 #if (RTL8822C_SUPPORT)
 	if (dm->support_ic_type == ODM_RTL8822C) {
 		if (config_type == CONFIG_BB_PHY_REG)
@@ -1592,6 +1631,11 @@ u32 odm_get_hw_img_version(struct dm_struct *dm)
 	case ODM_RTL8814B:
 		version = odm_get_version_mp_8814b_phy_reg();
 		break;
+#endif
+#if (RTL8814C_SUPPORT)
+	case ODM_RTL8814C:
+		version = odm_get_version_mp_8814c_phy_reg();
+		break;
 #endif
 	}
 
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm_hwconfig.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm_hwconfig.h
index 229d7c0fd502..7c4d1e38cba4 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm_hwconfig.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm_hwconfig.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017  Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm_interface.c b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm_interface.c
index b867fdd7f73b..96f0c025d40c 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm_interface.c
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm_interface.c
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017  Realtek Corporation.
@@ -437,6 +436,44 @@ void odm_move_memory(struct dm_struct *dm, void *dest, void *src, u32 length)
 #endif
 }
 
+u16 odm_convert_to_le16(u16 value)
+{
+#if (DM_ODM_SUPPORT_TYPE & ODM_AP)
+	return cpu_to_le16(value);
+#elif (DM_ODM_SUPPORT_TYPE & ODM_CE) && defined(DM_ODM_CE_MAC80211)
+	return cpu_to_le16(value);
+#elif (DM_ODM_SUPPORT_TYPE & ODM_CE) && defined(DM_ODM_CE_MAC80211_V2)
+	return cpu_to_le16(value);
+#elif (DM_ODM_SUPPORT_TYPE & ODM_CE)
+	return cpu_to_le16(value);
+#elif (DM_ODM_SUPPORT_TYPE & ODM_WIN)
+	return value;
+#elif (DM_ODM_SUPPORT_TYPE & ODM_IOT)
+	return cpu_to_le16(value);
+#else
+	return value;
+#endif
+}
+
+u32 odm_convert_to_le32(u32 value)
+{
+#if (DM_ODM_SUPPORT_TYPE & ODM_AP)
+	return cpu_to_le32(value);
+#elif (DM_ODM_SUPPORT_TYPE & ODM_CE) && defined(DM_ODM_CE_MAC80211)
+	return cpu_to_le32(value);
+#elif (DM_ODM_SUPPORT_TYPE & ODM_CE) && defined(DM_ODM_CE_MAC80211_V2)
+	return cpu_to_le32(value);
+#elif (DM_ODM_SUPPORT_TYPE & ODM_CE)
+	return cpu_to_le32(value);
+#elif (DM_ODM_SUPPORT_TYPE & ODM_WIN)
+	return value;
+#elif (DM_ODM_SUPPORT_TYPE & ODM_IOT)
+	return cpu_to_le32(value);
+#else
+	return value;
+#endif
+}
+
 void odm_memory_set(struct dm_struct *dm, void *pbuf, s8 value, u32 length)
 {
 #if (DM_ODM_SUPPORT_TYPE & ODM_AP)
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm_interface.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm_interface.h
index 72a1c00a3bd6..50efa46bb063 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm_interface.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm_interface.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017  Realtek Corporation.
@@ -27,7 +26,7 @@
 #ifndef __ODM_INTERFACE_H__
 #define __ODM_INTERFACE_H__
 
-#define INTERFACE_VERSION "1.2"
+#define INTERFACE_VERSION "1.3"
 
 #define pdm_set_reg odm_set_bb_reg
 
@@ -182,6 +181,10 @@ void odm_set_rf_reg(struct dm_struct *dm, u8 e_rf_path, u32 reg_addr,
 u32 odm_get_rf_reg(struct dm_struct *dm, u8 e_rf_path, u32 reg_addr,
 		   u32 bit_mask);
 
+u16 odm_convert_to_le16(u16 value);
+
+u32 odm_convert_to_le32(u32 value);
+
 /*@
  * Memory Relative Function.
  */
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm_lna_sat.c b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm_lna_sat.c
index 12c3c802bdbb..204765ee9c73 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm_lna_sat.c
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm_lna_sat.c
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017  Realtek Corporation.
@@ -56,7 +55,7 @@ void phydm_lna_sat_chk_init(
 	lna_info->pre_timer_check_cnt = 0;
 
 	#if (RTL8198F_SUPPORT || RTL8814B_SUPPORT)
-	if (dm->support_ic_type & (ODM_RTL8198F | ODM_RTL8814B))
+	if (dm->support_ic_type & (ODM_RTL8198F | ODM_RTL8814B | ODM_RTL8814C))
 		phydm_lna_sat_chk_bb_init(dm);
 	#endif
 }
@@ -94,7 +93,8 @@ void phydm_set_ofdm_agc_tab_path(
 	struct dm_struct *dm = (struct dm_struct *)dm_void;
 
 	PHYDM_DBG(dm, DBG_LNA_SAT_CHK, "%s ==>\n", __func__);
-	if (dm->support_ic_type & (ODM_RTL8198F | ODM_RTL8814B)) {
+	if (dm->support_ic_type &
+	    (ODM_RTL8198F | ODM_RTL8814B | ODM_RTL8814C)) {
 		PHYDM_DBG(dm, DBG_LNA_SAT_CHK, "set AGC Tab%d\n", tab_sel);
 		PHYDM_DBG(dm, DBG_LNA_SAT_CHK, "r_6table_sel_anten = 0x%x\n",
 			  odm_get_bb_reg(dm, 0x18ac, BIT(8)));
@@ -118,7 +118,7 @@ void phydm_set_ofdm_agc_tab_path(
 			odm_set_bb_reg(dm, 0x52ac, BIT(4), 0);
 			odm_set_bb_reg(dm, 0x53ac, BIT(4), 0);
 		}
-	} else if (dm->support_ic_type & ODM_RTL8814B) {
+	} else if (dm->support_ic_type & (ODM_RTL8814B | ODM_RTL8814C)) {
 		if (tab_sel == OFDM_AGC_TAB_0) {
 			odm_set_bb_reg(dm, 0x18ac, 0xf0, 0);
 			odm_set_bb_reg(dm, 0x41ac, 0xf0, 0);
@@ -151,7 +151,7 @@ u8 phydm_get_ofdm_agc_tab_path(
 			tab_sel = OFDM_AGC_TAB_0;
 		else if (tab_sel == 1)
 			tab_sel = OFDM_AGC_TAB_2;
-	} else if (dm->support_ic_type & ODM_RTL8814B) {
+	} else if (dm->support_ic_type & (ODM_RTL8814B | ODM_RTL8814C)) {
 		tab_sel = (u8)odm_get_bb_reg(dm, R_0x18ac, 0xf0);
 		if (tab_sel == 0)
 			tab_sel = OFDM_AGC_TAB_0;
@@ -258,7 +258,7 @@ void phydm_lna_sat_chk(
 
 	/*@adapt agc table 0 check saturation status*/
 	#if (RTL8198F_SUPPORT || RTL8814B_SUPPORT)
-	if (dm->support_ic_type & (ODM_RTL8198F | ODM_RTL8814B))
+	if (dm->support_ic_type & (ODM_RTL8198F | ODM_RTL8814B | ODM_RTL8814C))
 		phydm_set_ofdm_agc_tab_path(dm, OFDM_AGC_TAB_0, RF_PATH_A);
 	else
 	#endif
@@ -282,7 +282,7 @@ void phydm_lna_sat_chk(
 		config_phydm_write_rf_reg_8198f(dm, RF_PATH_D, 0x86, 0x10, 1);
 	}
 #elif (RTL8814B_SUPPORT)
-	if (dm->support_ic_type & ODM_RTL8814B) {
+	if (dm->support_ic_type & (ODM_RTL8814B | ODM_RTL8814C)) {
 		/*@set rf detection range (threshold)*/
 		config_phydm_write_rf_reg_8814b(dm, RF_PATH_A, 0x8B, 0x3, 0x3);
 		config_phydm_write_rf_reg_8814b(dm, RF_PATH_B, 0x8B, 0x3, 0x3);
@@ -323,7 +323,7 @@ void phydm_lna_sat_chk(
 							      0xe0000);
 	}
 #elif (RTL8814B_SUPPORT)
-	if (dm->support_ic_type & ODM_RTL8814B) {
+	if (dm->support_ic_type & (ODM_RTL8814B | ODM_RTL8814C)) {
 	/*@read peak detector info from 8814B rf reg*/
 		sat_status_a = config_phydm_read_rf_reg_8814b(dm, RF_PATH_A,
 							      RF_0xae,
@@ -400,7 +400,8 @@ void phydm_lna_sat_chk(
 	if (lna_info->cur_sat_status) {
 		if (!lna_info->dis_agc_table_swh)
 			#if (RTL8198F_SUPPORT || RTL8814B_SUPPORT)
-			if (dm->support_ic_type & (ODM_RTL8198F | ODM_RTL8814B))
+			if (dm->support_ic_type &
+			    (ODM_RTL8198F | ODM_RTL8814B | ODM_RTL8814C))
 				phydm_set_ofdm_agc_tab_path(dm,
 							    OFDM_AGC_TAB_2,
 							    RF_PATH_A);
@@ -424,7 +425,8 @@ void phydm_lna_sat_chk(
 	} else if (lna_info->check_time <= (max_check_time - 1)) {
 		if (lna_info->pre_sat_status && !lna_info->dis_agc_table_swh)
 			#if (RTL8198F_SUPPORT || RTL8814B_SUPPORT)
-			if (dm->support_ic_type & (ODM_RTL8198F | ODM_RTL8814B))
+			if (dm->support_ic_type &
+			    (ODM_RTL8198F | ODM_RTL8814B | ODM_RTL8814C))
 				phydm_set_ofdm_agc_tab_path(dm,
 							    OFDM_AGC_TAB_2,
 							    RF_PATH_A);
@@ -441,7 +443,8 @@ void phydm_lna_sat_chk(
 	} else if (lna_info->check_time >= max_check_time) {
 		if (!lna_info->dis_agc_table_swh)
 			#if (RTL8198F_SUPPORT || RTL8814B_SUPPORT)
-			if (dm->support_ic_type & (ODM_RTL8198F | ODM_RTL8814B))
+			if (dm->support_ic_type &
+			    (ODM_RTL8198F | ODM_RTL8814B | ODM_RTL8814C))
 				phydm_set_ofdm_agc_tab_path(dm,
 							    OFDM_AGC_TAB_0,
 							    RF_PATH_A);
@@ -466,7 +469,7 @@ void phydm_lna_sat_chk(
 	}
 
 	#if (RTL8198F_SUPPORT || RTL8814B_SUPPORT)
-	if (dm->support_ic_type & (ODM_RTL8198F | ODM_RTL8814B))
+	if (dm->support_ic_type & (ODM_RTL8198F | ODM_RTL8814B | ODM_RTL8814C))
 		agc_tab = phydm_get_ofdm_agc_tab_path(dm, RF_PATH_A);
 	else
 	#endif
@@ -1158,7 +1161,7 @@ u32 phydm_get_lna_pd_reg(void *dm_void)
 	u32 rf_pd_reg = RF_0x8b;
 
 #if (RTL8814B_SUPPORT)
-		if (dm->support_ic_type & ODM_RTL8814B) {
+		if (dm->support_ic_type & (ODM_RTL8814B | ODM_RTL8814C)) {
 			if (*dm->channel <= 14)
 				rf_pd_reg = RF_0x87;
 			else
@@ -1174,7 +1177,7 @@ u32 phydm_get_lna_pd_en_mask(void *dm_void)
 	u32 rf_pd_en_msk = BIT(2);
 
 #if (RTL8814B_SUPPORT)
-		if (dm->support_ic_type & ODM_RTL8814B) {
+		if (dm->support_ic_type & (ODM_RTL8814B | ODM_RTL8814C)) {
 			if (*dm->channel <= 14)
 				rf_pd_en_msk = BIT(4);
 			else
@@ -1195,7 +1198,7 @@ boolean phydm_get_lna_pd_en(void *dm_void)
 	rf_pd_en_msk = phydm_get_lna_pd_en_mask(dm);
 
 #if (RTL8814B_SUPPORT)
-		if (dm->support_ic_type & ODM_RTL8814B)
+		if (dm->support_ic_type & (ODM_RTL8814B | ODM_RTL8814C))
 			pd_en = config_phydm_read_rf_reg_8814b(dm, RF_PATH_A,
 							       rf_pd_reg,
 							       rf_pd_en_msk);
@@ -1214,7 +1217,7 @@ void phydm_set_lna_pd_en(void *dm_void, boolean lna_pd_en)
 	rf_pd_en_msk = phydm_get_lna_pd_en_mask(dm);
 
 #if (RTL8814B_SUPPORT)
-		if (dm->support_ic_type & ODM_RTL8814B)
+		if (dm->support_ic_type & (ODM_RTL8814B | ODM_RTL8814C))
 			for (i = RF_PATH_A; i < MAX_PATH_NUM_8814B; i++)
 				config_phydm_write_rf_reg_8814b(dm, i,
 								rf_pd_reg,
@@ -1229,7 +1232,7 @@ u32 phydm_get_lna_pd_th_mask(void *dm_void)
 	u32 rf_pd_th_msk = 0x3;
 
 #if (RTL8814B_SUPPORT)
-		if (dm->support_ic_type & ODM_RTL8814B)
+		if (dm->support_ic_type & (ODM_RTL8814B | ODM_RTL8814C))
 			rf_pd_th_msk = 0x3;
 #endif
 	return rf_pd_th_msk;
@@ -1246,7 +1249,7 @@ enum lna_pd_th_level phydm_get_lna_pd_th_lv(void *dm_void)
 	rf_pd_th_msk = phydm_get_lna_pd_th_mask(dm);
 
 #if (RTL8814B_SUPPORT)
-	if (dm->support_ic_type & ODM_RTL8814B)
+	if (dm->support_ic_type & (ODM_RTL8814B | ODM_RTL8814C))
 		pd_th_lv = config_phydm_read_rf_reg_8814b(dm, RF_PATH_A,
 							  rf_pd_reg,
 							  rf_pd_th_msk);
@@ -1266,7 +1269,7 @@ void phydm_set_lna_pd_th_lv(void *dm_void,
 	rf_pd_th_msk = phydm_get_lna_pd_th_mask(dm);
 
 #if (RTL8814B_SUPPORT)
-		if (dm->support_ic_type & ODM_RTL8814B)
+		if (dm->support_ic_type & (ODM_RTL8814B | ODM_RTL8814C))
 			for (i = RF_PATH_A; i < MAX_PATH_NUM_8814B; i++)
 				config_phydm_write_rf_reg_8814b(dm, i,
 								rf_pd_reg,
@@ -1282,6 +1285,10 @@ u32 phydm_get_sat_agc_tab_version(void *dm_void)
 #if (RTL8814B_SUPPORT)
 	if (dm->support_ic_type & ODM_RTL8814B)
 		return odm_get_version_mp_8814b_extra_agc_tab();
+#endif
+#if (RTL8814C_SUPPORT)
+	if (dm->support_ic_type & ODM_RTL8814C)
+		return odm_get_version_mp_8814c_extra_agc_tab();
 #endif
 	return 0;
 }
@@ -1331,7 +1338,7 @@ void phydm_config_auto_agc(void *dm_void,
 	struct dm_struct *dm = (struct dm_struct *)dm_void;
 	u32 hwagc_opt = 0;
 #ifdef PHYDM_IC_JGR3_SERIES_SUPPORT
-	if (dm->support_ic_type & ~ODM_RTL8814B)
+	if (!(dm->support_ic_type & (ODM_RTL8814B | ODM_RTL8814C)))
 		return;
 
 	if (idle_en)
@@ -1377,20 +1384,23 @@ void phydm_auto_agc_tab_off(void *dm_void)
 	phydm_set_lna_pd_en(dm, false);
 }
 
-void phydm_switch_sat_agc_by_band(void *dm_void)
+void phydm_switch_sat_agc_by_band(void *dm_void, enum odm_rf_band band)
 {
 	struct dm_struct *dm = (struct dm_struct *)dm_void;
-	struct phydm_lna_sat_t	*lna_sat = &dm->dm_lna_sat_info;
 
 #if (RTL8814B_SUPPORT)
 	if (dm->support_ic_type & ODM_RTL8814B)
-		odm_config_mp_8814b_extra_agc_tab(dm, lna_sat->cur_rf_band);
+		odm_config_mp_8814b_extra_agc_tab(dm, band);
+#endif
+#if (RTL8814C_SUPPORT)
+	if (dm->support_ic_type & ODM_RTL8814C)
+		odm_config_mp_8814c_extra_agc_tab(dm, band);
 #endif
 #if (DM_ODM_SUPPORT_TYPE == ODM_AP)
-	pr_debug("%s ==> switch to band%d\n", __func__, lna_sat->cur_rf_band);
+	pr_debug("%s ==> switch to band%d\n", __func__, band);
 #else
 	PHYDM_DBG(dm, DBG_LNA_SAT_CHK, "%s ==> switch to band%d\n",
-		  __func__, lna_sat->cur_rf_band);
+		  __func__, band);
 #endif
 }
 
@@ -1401,7 +1411,7 @@ void phydm_auto_agc_tab_init(void *dm_void)
 	u8 channel = *dm->channel;
 
 	lna_sat->cur_rf_band = phydm_ch_to_rf_band(dm, channel);
-	phydm_switch_sat_agc_by_band(dm);
+	phydm_switch_sat_agc_by_band(dm, lna_sat->cur_rf_band);
 
 	if ((dm->support_ability & ODM_BB_LNA_SAT_CHK)) {
 		phydm_auto_agc_tab_reset(dm);
@@ -1537,7 +1547,8 @@ void phydm_lna_sat_debug(void *dm_void,	char input[][16], u32 *_used,
 	} else if ((strcmp(input[1], monitor) == 0)) {
 #ifdef PHYDM_LNA_SAT_CHK_TYPE1
 		#if (RTL8198F_SUPPORT || RTL8814B_SUPPORT)
-		if (dm->support_ic_type & (ODM_RTL8198F | ODM_RTL8814B))
+		if (dm->support_ic_type &
+		    (ODM_RTL8198F | ODM_RTL8814B | ODM_RTL8814C))
 			agc_tab = phydm_get_ofdm_agc_tab_path(dm, RF_PATH_A);
 		else
 		#endif
@@ -1611,14 +1622,14 @@ void phydm_lna_sat_chk_watchdog(void *dm_void)
 
 	if (lna_sat->lna_sat_type == LNA_SAT_WITH_PEAK_DET) {
 		#ifdef PHYDM_HW_SWITCH_AGC_TAB
-		if (dm->support_ic_type & ODM_RTL8814B) {
+		if (dm->support_ic_type & (ODM_RTL8814B | ODM_RTL8814C)) {
 			phydm_auto_agc_tab_watchdog(dm);
 			return;
 		}
 		#endif
 		#ifdef PHYDM_LNA_SAT_CHK_TYPE1
-		if (dm->support_ic_type &
-		    (ODM_RTL8197F | ODM_RTL8198F | ODM_RTL8814B)) {
+		if (dm->support_ic_type & (ODM_RTL8197F | ODM_RTL8198F |
+		    ODM_RTL8814B | ODM_RTL8814C)) {
 			phydm_lna_sat_chk_watchdog_type1(dm);
 			return;
 		}
@@ -1645,8 +1656,8 @@ void phydm_lna_sat_config(void *dm_void)
 
 	#if (RTL8197F_SUPPORT || RTL8192F_SUPPORT || \
 	     RTL8198F_SUPPORT || RTL8814B_SUPPORT)
-	if (dm->support_ic_type &
-	    (ODM_RTL8197F | ODM_RTL8192F | ODM_RTL8198F | ODM_RTL8814B))
+	if (dm->support_ic_type & (ODM_RTL8197F | ODM_RTL8192F |
+	    ODM_RTL8198F | ODM_RTL8814B | ODM_RTL8814C))
 		lna_sat->lna_sat_type = LNA_SAT_WITH_PEAK_DET;
 	#endif
 
@@ -1671,7 +1682,7 @@ void phydm_lna_sat_check_init(void *dm_void)
 
 	if (lna_sat->lna_sat_type == LNA_SAT_WITH_PEAK_DET) {
 		#ifdef PHYDM_HW_SWITCH_AGC_TAB
-		if (dm->support_ic_type & ODM_RTL8814B) {
+		if (dm->support_ic_type & (ODM_RTL8814B | ODM_RTL8814C)) {
 			phydm_auto_agc_tab_init(dm);
 			return;
 		}
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm_lna_sat.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm_lna_sat.h
index c2fbe79431fa..69a9349969c2 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm_lna_sat.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm_lna_sat.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017  Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm_math_lib.c b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm_math_lib.c
index 4e9f125d5d60..c6c1035af055 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm_math_lib.c
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm_math_lib.c
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017  Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm_math_lib.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm_math_lib.h
index 1c5625989dfe..a96ae5ee4826 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm_math_lib.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm_math_lib.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017  Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm_mp.c b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm_mp.c
index aeff71499b77..85989133bbae 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm_mp.c
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm_mp.c
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017  Realtek Corporation.
@@ -41,6 +40,7 @@ void phydm_mp_set_single_tone_jgr3(void *dm_void, boolean is_single_tone,
 	struct phydm_mp *mp = &dm->dm_mp_table;
 	u8 start = RF_PATH_A, end = RF_PATH_A;
 	u8 i = 0;
+	u8 max_rf_path = RF_PATH_A;
 	u8 central_ch = 0;
 	boolean is_2g_ch = false;
 
@@ -103,43 +103,55 @@ void phydm_mp_set_single_tone_jgr3(void *dm_void, boolean is_single_tone,
 	central_ch = (u8)odm_get_rf_reg(dm, RF_PATH_A, RF_0x18, 0xff);
 	is_2g_ch = (central_ch <= 14) ? true : false;
 
+	if (dm->support_ic_type & ODM_RTL8723F)
+		max_rf_path = RF_PATH_C;
+	else
+		max_rf_path = RF_PATH_MEM_SIZE;
+
 	if (is_single_tone) {
 		/*Disable CCA*/
 		if (is_2g_ch) { /*CCK RxIQ weighting = [0,0]*/
-			if(dm->support_ic_type & ODM_RTL8723F) {
-				odm_set_bb_reg(dm, R_0x2a24, BIT(13), 0x1); /*CCK*/
-			} else {
+			if(!(dm->support_ic_type & ODM_RTL8723F)) {
 				odm_set_bb_reg(dm, R_0x1a9c, BIT(20), 0x0);
 				odm_set_bb_reg(dm, R_0x1a14, 0x300, 0x3);
 			}
 		}
-		odm_set_bb_reg(dm, R_0x1d58, 0xff8, 0x1ff); /*OFDM*/
+		/*Disable CCK CCA*/
+		if(dm->support_ic_type & ODM_RTL8723F)
+			odm_set_bb_reg(dm, R_0x2a24, BIT(13), 0x1);
+		/*Disable OFDM CCA*/
+		odm_set_bb_reg(dm, R_0x1d58, 0xff8, 0x1ff);
+
 		if (dm->support_ic_type & ODM_RTL8723F) {
-			odm_set_rf_reg(dm, RF_PATH_A, RF_0x5, BIT(0), 0x0);
 			for (i = start; i <= end; i++) {
-				mp->rf0[i] = odm_get_rf_reg(dm, i, RF_0x0, RFREG_MASK);
-				/*Tx mode: RF0x00[19:16]=4'b0010 */
-				odm_set_rf_reg(dm, i, RF_0x0, 0xF0000, 0x2);
-				/*Lowest RF gain index: RF_0x1[5:0] TX power*/
-				mp->rf1[i] = odm_get_rf_reg(dm, i, RF_0x1, RFREG_MASK);
-				odm_set_rf_reg(dm, i, RF_0x1, 0x3f, 0x0);//TX power
-				/*RF LO enabled */
-				odm_set_rf_reg(dm, i, RF_0x58, BIT(1), 0x1);
+				if (i < max_rf_path) {
+					odm_set_rf_reg(dm, i, RF_0x5, BIT(0), 0x0);
+					mp->rf0[i] = odm_get_rf_reg(dm, i, RF_0x0, RFREG_MASK);
+					/*Tx mode: RF0x00[19:16]=4'b0010 */
+					odm_set_rf_reg(dm, i, RF_0x0, 0xF0000, 0x2);
+					/*Lowest RF gain index: RF_0x1[5:0] TX power*/
+					mp->rf1[i] = odm_get_rf_reg(dm, i, RF_0x1, RFREG_MASK);
+					odm_set_rf_reg(dm, i, RF_0x1, 0x3f, 0x0);//TX power
+					/*RF LO enabled */
+					odm_set_rf_reg(dm, i, RF_0x58, BIT(1), 0x1);
+				}
 			}
 		} else {
 			for (i = start; i <= end; i++) {
-				mp->rf0[i] = odm_get_rf_reg(dm, i, RF_0x0, RFREG_MASK);
-				/*Tx mode: RF0x00[19:16]=4'b0010 */
-				odm_set_rf_reg(dm, i, RF_0x0, 0xF0000, 0x2);
-				/*Lowest RF gain index: RF_0x0[4:0] = 0*/
-				odm_set_rf_reg(dm, i, RF_0x0, 0x1f, 0x0);
-				/*RF LO enabled */
-				odm_set_rf_reg(dm, i, RF_0x58, BIT(1), 0x1);
+				if (i < max_rf_path) {
+					mp->rf0[i] = odm_get_rf_reg(dm, i, RF_0x0, RFREG_MASK);
+					/*Tx mode: RF0x00[19:16]=4'b0010 */
+					odm_set_rf_reg(dm, i, RF_0x0, 0xF0000, 0x2);
+					/*Lowest RF gain index: RF_0x0[4:0] = 0*/
+					odm_set_rf_reg(dm, i, RF_0x0, 0x1f, 0x0);
+					/*RF LO enabled */
+					odm_set_rf_reg(dm, i, RF_0x58, BIT(1), 0x1);
+				}
 			}
 		}
 		
 		#if (RTL8814B_SUPPORT)
-		if (dm->support_ic_type & ODM_RTL8814B) {
+		if (dm->support_ic_type & (ODM_RTL8814B | ODM_RTL8814C)) {
 			mp->rf0_syn[RF_SYN0] = config_phydm_read_syn_reg_8814b(
 					       dm, RF_SYN0, RF_0x0, RFREG_MASK);
 			/*Lowest RF gain index: RF_0x0[4:0] = 0x0*/
@@ -165,32 +177,38 @@ void phydm_mp_set_single_tone_jgr3(void *dm_void, boolean is_single_tone,
 	} else {
 		/*Enable CCA*/
 		if (is_2g_ch) { /*CCK RxIQ weighting = [1,1]*/
-			if(dm->support_ic_type & ODM_RTL8723F) {
-				odm_set_bb_reg(dm, R_0x2a24, BIT(13), 0x0); /*CCK*/ 
-			} else {
+			if(!(dm->support_ic_type & ODM_RTL8723F)) {
 				odm_set_bb_reg(dm, R_0x1a9c, BIT(20), 0x1);
 				odm_set_bb_reg(dm, R_0x1a14, 0x300, 0x0);
 			}
 		}
-		odm_set_bb_reg(dm, R_0x1d58, 0xff8, 0x0); /*OFDM*/
+		/*Enable CCK CCA*/
+		if(dm->support_ic_type & ODM_RTL8723F)
+			odm_set_bb_reg(dm, R_0x2a24, BIT(13), 0x0);
+		/*Enable OFDM CCA*/
+		odm_set_bb_reg(dm, R_0x1d58, 0xff8, 0x0);
 
 		if(dm->support_ic_type & ODM_RTL8723F) {
 			for (i = start; i <= end; i++) {
-				odm_set_rf_reg(dm, i, RF_0x0, RFREG_MASK, mp->rf0[i]);
-				odm_set_rf_reg(dm, i, RF_0x1, RFREG_MASK, mp->rf1[i]);
-				/*RF LO disabled */
-				odm_set_rf_reg(dm, i, RF_0x58, BIT(1), 0x0);
+				if (i < max_rf_path) {
+					odm_set_rf_reg(dm, i, RF_0x0, RFREG_MASK, mp->rf0[i]);
+					odm_set_rf_reg(dm, i, RF_0x1, RFREG_MASK, mp->rf1[i]);
+					/*RF LO disabled */
+					odm_set_rf_reg(dm, i, RF_0x58, BIT(1), 0x0);
+					odm_set_rf_reg(dm, i, RF_0x5, BIT(0), 0x1);
+				}
 			}
-			odm_set_rf_reg(dm, RF_PATH_A, RF_0x5, BIT(0), 0x1);
 		} else {
 			for (i = start; i <= end; i++) {
-				odm_set_rf_reg(dm, i, RF_0x0, RFREG_MASK, mp->rf0[i]);
-				/*RF LO disabled */
-				odm_set_rf_reg(dm, i, RF_0x58, BIT(1), 0x0);
+				if (i < max_rf_path) {
+					odm_set_rf_reg(dm, i, RF_0x0, RFREG_MASK, mp->rf0[i]);
+					/*RF LO disabled */
+					odm_set_rf_reg(dm, i, RF_0x58, BIT(1), 0x0);
+				}
 			}
 		}
 		#if (RTL8814B_SUPPORT)
-		if (dm->support_ic_type & ODM_RTL8814B) {
+		if (dm->support_ic_type & (ODM_RTL8814B | ODM_RTL8814C)) {
 			config_phydm_write_rf_syn_8814b(dm, RF_SYN0, RF_0x0,
 							RFREG_MASK,
 							mp->rf0_syn[RF_SYN0]);
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm_mp.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm_mp.h
index b45c631c2512..5805a0378e4a 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm_mp.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm_mp.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017  Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm_noisemonitor.c b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm_noisemonitor.c
index da94aedaf56f..d2e95cfa0233 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm_noisemonitor.c
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm_noisemonitor.c
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017  Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm_noisemonitor.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm_noisemonitor.h
index b73b6e4b4781..507285adb5bb 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm_noisemonitor.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm_noisemonitor.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017  Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm_pathdiv.c b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm_pathdiv.c
index f8135e912877..a6b347cf75b2 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm_pathdiv.c
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm_pathdiv.c
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017  Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm_pathdiv.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm_pathdiv.h
index 179e464a0e09..ee3438252f64 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm_pathdiv.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm_pathdiv.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017  Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm_phystatus.c b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm_phystatus.c
index 429a1e5c8056..8d1ed66dfba6 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm_phystatus.c
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm_phystatus.c
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017  Realtek Corporation.
@@ -2056,6 +2055,7 @@ void phydm_get_physts_0_jgr3(struct dm_struct *dm, u8 *phy_status_inf,
 	dbg_i->is_stbc_pkt = false;
 
 	/*cck channel has hw bug, [WLANBB-1429]*/
+	phy_info->rx_count = (rx_cnt > 0) ? rx_cnt - 1 : 0; /*from 1~4 to 0~3 */
 	phy_info->channel = 0;
 	phy_info->rx_power = rx_pwr_db_max;
 	phy_info->recv_signal_power = rx_pwr_db_max;
@@ -2228,6 +2228,7 @@ void phydm_get_physts_6_jgr3(struct dm_struct *dm, u8 *phy_status_inf,
 	dbg_i->is_stbc_pkt = false;
 
 	/*cck channel has hw bug, [WLANBB-1429]*/
+	phy_info->rx_count = (rx_cnt > 0) ? rx_cnt - 1 : 0; /*from 1~4 to 0~3 */
 	phy_info->channel = 0;
 	phy_info->rx_power = rx_pwr_db_max;
 	phy_info->recv_signal_power = rx_pwr_db_max;
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm_phystatus.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm_phystatus.h
index 52c3cdfe582d..c65b6245f83e 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm_phystatus.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm_phystatus.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017  Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm_pmac_tx_setting.c b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm_pmac_tx_setting.c
index 4583eb068155..15a4e93762f9 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm_pmac_tx_setting.c
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm_pmac_tx_setting.c
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017  Realtek Corporation.
@@ -500,6 +499,7 @@ void phydm_pmac_tx_dbg(void *dm_void, char input[][16], u32 *_used,
 			}
 		}
 
+		odm_memory_set(dm, &tx_info, 0, sizeof(struct phydm_pmac_info));
 		tx_info.en_pmac_tx = true;
 		tx_info.mode = PKTS_TX;
 		tx_info.ndp_sound = false;
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm_pmac_tx_setting.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm_pmac_tx_setting.h
index 392d3a45b8da..532219ba66b1 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm_pmac_tx_setting.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm_pmac_tx_setting.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017  Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm_pow_train.c b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm_pow_train.c
index 2da2e4bae5b4..56bc2411d252 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm_pow_train.c
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm_pow_train.c
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017  Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm_pow_train.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm_pow_train.h
index 4458351703c7..f966607aa48e 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm_pow_train.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm_pow_train.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017  Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm_pre_define.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm_pre_define.h
index 8e29d5c467ae..a9c0e6a16123 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm_pre_define.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm_pre_define.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017  Realtek Corporation.
@@ -33,8 +32,8 @@
  * 1 ============================================================
  ***************************************************************/
 
-#define PHYDM_CODE_BASE			"PHYDM_V049"
-#define PHYDM_RELEASE_DATE		"20200720.0"
+#define PHYDM_CODE_BASE			"PHYDM_V051_GIT"
+#define PHYDM_RELEASE_DATE		"20210415.0"
 
 /*PHYDM API status*/
 #define	PHYDM_SET_FAIL			0
@@ -414,7 +413,8 @@ enum phydm_ic {
 	ODM_RTL8197G	=	BIT(21),
 	ODM_RTL8721D	=	BIT(22),
 	ODM_RTL8710C	=	BIT(23),
-	ODM_RTL8723F	=	BIT(24)
+	ODM_RTL8723F	=	BIT(24),
+	ODM_RTL8814C	=	BIT(25)
 };
 
 #define ODM_IC_N_1SS		(ODM_RTL8188E | ODM_RTL8188F | ODM_RTL8723B |\
@@ -433,7 +433,7 @@ enum phydm_ic {
 #define ODM_IC_JGR3_1SS		(ODM_RTL8723F)
 #define ODM_IC_JGR3_2SS		(ODM_RTL8822C | ODM_RTL8812F | ODM_RTL8197G)
 #define ODM_IC_JGR3_3SS		0
-#define ODM_IC_JGR3_4SS		(ODM_RTL8198F | ODM_RTL8814B)
+#define ODM_IC_JGR3_4SS		(ODM_RTL8198F | ODM_RTL8814B | ODM_RTL8814C)
 
 /*@====the following macro DO NOT need to update when adding a new IC======= */
 #define ODM_IC_1SS		(ODM_IC_N_1SS | ODM_IC_AC_1SS | ODM_IC_JGR3_1SS)
@@ -464,7 +464,8 @@ enum phydm_ic {
 				 ODM_RTL8821C | ODM_RTL8710B | ODM_RTL8195B |\
 				 ODM_RTL8192F | ODM_RTL8721D | ODM_RTL8710C)
 #define PHYSTS_3RD_TYPE_IC	(ODM_RTL8198F | ODM_RTL8814B | ODM_RTL8822C |\
-				 ODM_RTL8812F | ODM_RTL8197G | ODM_RTL8723F)
+				 ODM_RTL8812F | ODM_RTL8197G | ODM_RTL8723F |\
+				 ODM_RTL8814C)
 /*@[FW Type]*/
 #define PHYDM_IC_8051_SERIES	(ODM_RTL8881A | ODM_RTL8812 | ODM_RTL8821 |\
 				 ODM_RTL8192E | ODM_RTL8723B | ODM_RTL8703B |\
@@ -473,23 +474,24 @@ enum phydm_ic {
 #define PHYDM_IC_3081_SERIES	(ODM_RTL8814A | ODM_RTL8822B | ODM_RTL8197F |\
 				 ODM_RTL8821C | ODM_RTL8195B | ODM_RTL8198F |\
 				 ODM_RTL8822C | ODM_RTL8812F | ODM_RTL8814B |\
-				 ODM_RTL8197G | ODM_RTL8723F)
+				 ODM_RTL8197G | ODM_RTL8723F | ODM_RTL8814C)
 /*@[LA mode]*/
 #define PHYDM_IC_SUPPORT_LA_MODE (ODM_RTL8814A | ODM_RTL8822B | ODM_RTL8197F |\
 				  ODM_RTL8821C | ODM_RTL8195B | ODM_RTL8198F |\
 				  ODM_RTL8192F | ODM_RTL8822C | ODM_RTL8812F |\
-				  ODM_RTL8195B | ODM_RTL8814B | ODM_RTL8197G | ODM_RTL8723F)
+				  ODM_RTL8195B | ODM_RTL8814B | ODM_RTL8197G |\
+				  ODM_RTL8723F | ODM_RTL8814C)
 /*@[BF]*/
 #define ODM_IC_TXBF_SUPPORT	(ODM_RTL8192E | ODM_RTL8812 | ODM_RTL8821 |\
 				 ODM_RTL8814A | ODM_RTL8881A | ODM_RTL8822B |\
 				 ODM_RTL8197F | ODM_RTL8821C | ODM_RTL8195B |\
 				 ODM_RTL8198F | ODM_RTL8822C | ODM_RTL8812F |\
-				 ODM_RTL8814B | ODM_RTL8197G)
+				 ODM_RTL8814B | ODM_RTL8197G | ODM_RTL8814C)
 #define PHYDM_IC_SUPPORT_MU_BFEE (ODM_RTL8822B | ODM_RTL8821C | ODM_RTL8814B |\
 				  ODM_RTL8195B | ODM_RTL8198F | ODM_RTL8822C |\
-				  ODM_RTL8812F | ODM_RTL8723F)
+				  ODM_RTL8812F | ODM_RTL8723F | ODM_RTL8814C)
 #define PHYDM_IC_SUPPORT_MU_BFER (ODM_RTL8822B | ODM_RTL8814B | ODM_RTL8198F |\
-				  ODM_RTL8822C | ODM_RTL8812F)
+				  ODM_RTL8822C | ODM_RTL8812F | ODM_RTL8814C)
 
 #define PHYDM_IC_SUPPORT_MU (PHYDM_IC_SUPPORT_MU_BFEE |\
 				PHYDM_IC_SUPPORT_MU_BFER)
@@ -497,7 +499,8 @@ enum phydm_ic {
 #define CMN_API_SUPPORT_IC (ODM_RTL8822B | ODM_RTL8197F | ODM_RTL8192F |\
 			    ODM_RTL8821C | ODM_RTL8195B | ODM_RTL8822C |\
 			    ODM_RTL8198F | ODM_RTL8812F | ODM_RTL8814B |\
-			    ODM_RTL8197G | ODM_RTL8721D | ODM_RTL8710C | ODM_RTL8723F)
+			    ODM_RTL8197G | ODM_RTL8721D | ODM_RTL8710C |\
+			    ODM_RTL8723F | ODM_RTL8814C)
 
 /* fw offload ability*/
 #define PHYDM_IC_SUPPORT_FW_PARAM_OFFLOAD (ODM_RTL8814A | ODM_RTL8822B |\
@@ -505,13 +508,17 @@ enum phydm_ic {
 
 /* halmac offload ability*/
 #define PHYDM_IC_SUPPORT_HALMAC_PARAM_OFFLOAD (ODM_RTL8822C | ODM_RTL8812F |\
-					       ODM_RTL8814B | ODM_RTL8723F)
+					       ODM_RTL8814B | ODM_RTL8723F |\
+					       ODM_RTL8814C)
 
 /*[CCX]*/
 #define PHYDM_IC_SUPPORT_FAHM	(ODM_RTL8822B | ODM_RTL8821C | ODM_RTL8198F |\
 				 ODM_RTL8814B | ODM_RTL8822C | ODM_RTL8812F |\
-				 ODM_RTL8197G | ODM_RTL8723F)
-#define PHYDM_IC_SUPPORT_IFS_CLM (ODM_RTL8822C | ODM_RTL8812F | ODM_RTL8197G | ODM_RTL8723F)
+				 ODM_RTL8197G | ODM_RTL8723F | ODM_RTL8814C)
+#define PHYDM_IC_SUPPORT_IFS_CLM (ODM_RTL8822C | ODM_RTL8812F | ODM_RTL8197G |\
+				  ODM_RTL8723F)
+#define PHYDM_IC_SUPPORT_EDCCA_CLM (ODM_RTL8822C | ODM_RTL8812F |\
+				    ODM_RTL8197G | ODM_RTL8723F)
 
 /*[ARFR]*/
 /*for MAC HW control rate_id=0~12 and 2.4g vht mode(1ss/2ss) support*/
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm_precomp.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm_precomp.h
index 06c8badae056..bd9f6b010a26 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm_precomp.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm_precomp.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017  Realtek Corporation.
@@ -143,6 +142,9 @@
 #ifndef RTL8814B_SUPPORT
 	#define	RTL8814B_SUPPORT	0
 #endif
+#ifndef RTL8814C_SUPPORT
+	#define	RTL8814C_SUPPORT	0
+#endif
 #ifndef RTL8198F_SUPPORT
 	#define	RTL8198F_SUPPORT	0
 #endif
@@ -508,7 +510,7 @@ rtw_phydm_cfg_phy_para(
 #endif
 
 #if (RTL8721D_SUPPORT == 1)
-	#include "halrf/rtl8721d/halrf_btiqk_8721d.h"
+	//#include "halrf/rtl8721d/halrf_btiqk_8721d.h"
 	#include "halrf/rtl8721d/halrf_rfk_init_8721d.h"
 	#include "halrf/rtl8721d/halrf_dpk_8721d.h"
 	#include "halrf/rtl8721d/halrf_8721d.h"
@@ -602,6 +604,16 @@ rtw_phydm_cfg_phy_para(
 	#include "rtl8814b/phydm_hal_api8814b.h"
 	#include "rtl8814b/version_rtl8814b.h"
 	#include "rtl8814b/phydm_extraagc8814b.h"
+#if (RTL8814C_SUPPORT == 1)
+	#include "rtl8814c/halhwimg8814c_bb.h"
+	#include "rtl8814c/phydm_regconfig8814c.h"
+	#include "halrf/rtl8814c/halrf_8814c.h"
+	#include "halrf/rtl8814c/halhwimg8814c_rf.h"
+	#include "halrf/rtl8814c/version_rtl8814c_rf.h"
+	#include "rtl8814c/phydm_hal_api8814c.h"
+	#include "rtl8814c/version_rtl8814c.h"
+	#include "rtl8814c/phydm_extraagc8814c.h"
+#endif
 	#if (DM_ODM_SUPPORT_TYPE == ODM_CE)
 		#include <hal_data.h>		/* @struct HAL_DATA_TYPE */
 		#include <rtl8814b_hal.h>	/* @RX_SMOOTH_FACTOR, reg definition and etc.*/
@@ -637,6 +649,7 @@ rtw_phydm_cfg_phy_para(
 	#include "halrf/rtl8723f/version_rtl8723f_rf.h"
 	#include "halrf/rtl8723f/halrf_iqk_8723f.h"
 	#include "halrf/rtl8723f/halrf_dpk_8723f.h"
+	#include "halrf/rtl8723f/halrf_txgapk_8723f.h"
 	#include "halrf/rtl8723f/halrf_tssi_8723f.h"
 	#include "halrf/rtl8723f/halrf_rfk_init_8723f.h"
 	#include "rtl8723f/phydm_hal_api8723f.h"
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm_primary_cca.c b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm_primary_cca.c
index 341dfe2b50b4..dec6c5365f08 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm_primary_cca.c
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm_primary_cca.c
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017  Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm_primary_cca.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm_primary_cca.h
index e13741617a9f..1978586f293d 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm_primary_cca.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm_primary_cca.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017  Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm_psd.c b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm_psd.c
index 49c848b59b31..8a19160b9079 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm_psd.c
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm_psd.c
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017  Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm_psd.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm_psd.h
index 030feed9dc36..dec384ab2b99 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm_psd.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm_psd.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017  Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm_rainfo.c b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm_rainfo.c
index a1b9428f1165..97be65844b65 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm_rainfo.c
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm_rainfo.c
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017  Realtek Corporation.
@@ -177,7 +176,7 @@ void phydm_fw_fix_rate(void *dm_void, u8 en, u8 macid, u8 bw, u8 rate)
 			reg_u32_tmp = BYTE_2_DWORD(0x60, macid, bw, rate);
 		else
 			reg_u32_tmp = 0x40000000;
-		if (dm->support_ic_type & ODM_RTL8814B)
+		if (dm->support_ic_type & (ODM_RTL8814B | ODM_RTL8814C))
 			odm_set_mac_reg(dm, R_0x448, MASKDWORD, reg_u32_tmp);
 		else
 			odm_set_mac_reg(dm, R_0x450, MASKDWORD, reg_u32_tmp);
@@ -1169,6 +1168,8 @@ u8 phydm_get_rate_id(void *dm_void, u8 sta_idx)
 			rate_id_idx = PHYDM_GN_N2SS;
 		else if (tx_stream_num == 3)
 			rate_id_idx = PHYDM_ARFR5_N_3SS;
+		else if (tx_stream_num == 4)
+			rate_id_idx = PHYDM_ARFR7_N_4SS;
 	} else if (wrls_mode == (WIRELESS_CCK | WIRELESS_OFDM | WIRELESS_HT)) {
 	 /*@BGN mode*/
 		if (bw == CHANNEL_WIDTH_40) {
@@ -1288,6 +1289,7 @@ void phydm_ra_h2c(void *dm_void, u8 sta_idx, u8 dis_ra, u8 dis_pt,
 	PHYDM_DBG(dm, DBG_RA, "%s ======>\n", __func__);
 	PHYDM_DBG(dm, DBG_RA, "MACID=%d\n", sta->mac_id);
 	
+
 #ifdef PHYDM_POWER_TRAINING_SUPPORT
 	if ((dm->support_ability & ODM_BB_PWR_TRAIN) && !dm->is_disable_power_training)
 		dis_pt = false;
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm_rainfo.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm_rainfo.h
index 1359af7a7659..5cef3ce17c99 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm_rainfo.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm_rainfo.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017  Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm_reg.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm_reg.h
index 24119d3e3353..0835f34bd4d6 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm_reg.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm_reg.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017  Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm_regdefine11ac.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm_regdefine11ac.h
index 93fbe3c78a15..7824ac22ca21 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm_regdefine11ac.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm_regdefine11ac.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017  Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm_regdefine11n.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm_regdefine11n.h
index 721e448ddf34..aa162327a5a4 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm_regdefine11n.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm_regdefine11n.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017  Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm_regtable.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm_regtable.h
index 8376d4adb73d..9146c6b19236 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm_regtable.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm_regtable.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2019  Realtek Corporation.
@@ -33,12 +32,18 @@
 #define R_0x040 0x040
 #define R_0x10 0x10
 #define R_0x100 0x100
+#define R_0x1000 0x1000
 #define R_0x1008 0x1008
 #define R_0x1038 0x1038
 #define R_0x103c 0x103c
 #define R_0x1040 0x1040
 #define R_0x1048 0x1048
+#define R_0x1064 0x1064
 #define R_0x1080 0x1080
+#define R_0x10d8 0x10d8
+#define R_0x10dc 0x10dc
+#define R_0x1200 0x1200
+#define R_0x1204 0x1204
 #define R_0x1208 0x1208
 #define R_0x1210 0x1210
 #define R_0x1214 0x1214
@@ -103,6 +108,7 @@
 #define R_0x1950 0x1950
 #define R_0x1954 0x1954
 #define R_0x195c 0x195c
+#define R_0x1968 0x1968
 #define R_0x1970 0x1970
 #define R_0x1984 0x1984
 #define R_0x1988 0x1988
@@ -132,6 +138,7 @@
 #define R_0x1a30 0x1a30
 #define R_0x1a34 0x1a34
 #define R_0x1a38 0x1a38
+#define R_0x1a48 0x1a48
 #define R_0x1a5c 0x1a5c
 #define R_0x1a70 0x1a70
 #define R_0x1a74 0x1a74
@@ -208,6 +215,7 @@
 #define R_0x1bb8 0x1bb8
 #define R_0x1bbc 0x1bbc
 #define R_0x1bc0 0x1bc0
+#define R_0x1bc4 0x1bc4
 #define R_0x1bc8 0x1bc8
 #define R_0x1bca 0x1bca
 #define R_0x1bcb 0x1bcb
@@ -244,6 +252,8 @@
 #define R_0x1c78 0x1c78
 #define R_0x1c7c 0x1c7c
 #define R_0x1c80 0x1c80
+#define R_0x1c84 0x1c84
+#define R_0x1c8c 0x1c8c
 #define R_0x1c90 0x1c90
 #define R_0x1c94 0x1c94
 #define R_0x1c98 0x1c98
@@ -309,6 +319,7 @@
 #define R_0x1e88 0x1e88
 #define R_0x1e8c 0x1e8c
 #define R_0x1ea4 0x1ea4
+#define R_0x1ea8 0x1ea8
 #define R_0x1eb4 0x1eb4
 #define R_0x1eb8 0x1eb8
 #define R_0x1ed4 0x1ed4
@@ -339,6 +350,7 @@
 #define R_0x2ad0 0x2ad0
 #define R_0x2c 0x2c
 #define R_0x28a4 0x28a4
+#define R_0x28bc 0x28bc
 #define R_0x2c04 0x2c04
 #define R_0x2c08 0x2c08
 #define R_0x2c0c 0x2c0c
@@ -365,6 +377,7 @@
 #define R_0x2d6c 0x2d6c
 #define R_0x2d84 0x2d84
 #define R_0x2d88 0x2d88
+#define R_0x2d8c 0x2d8c
 #define R_0x2d90 0x2d90
 #define R_0x2d9c 0x2d9c
 #define R_0x2db4 0x2db4
@@ -471,8 +484,11 @@
 #define R_0x42 0x42
 #define R_0x430 0x430
 #define R_0x434 0x434
+#define R_0x42a4 0x42a4
 #define R_0x42b0 0x42b0
 #define R_0x42b4 0x42b4
+#define R_0x42e8 0x42e8
+#define R_0x42f0 0x42f0
 #define R_0x4300 0x4300
 #define R_0x4304 0x4304
 #define R_0x4308 0x4308
@@ -1053,6 +1069,7 @@
 #define RF_0x58 0x58
 #define RF_0x5c 0x5c
 #define RF_0x5d 0x5d
+#define RF_0x5e 0x5e
 #define RF_0x60 0x60
 #define RF_0x61 0x61
 #define RF_0x63 0x63
@@ -1076,11 +1093,13 @@
 #define RF_0x85 0x85
 #define RF_0x86 0x86
 #define RF_0x87 0x87
+#define RF_0x88 0x88
 #define RF_0x8a 0x8a
 #define RF_0x8b 0x8b
 #define RF_0x8c 0x8c
 #define RF_0x8d 0x8d
 #define RF_0x8f 0x8f
+#define RF_0x92 0x92
 #define RF_0x93 0x93
 #define RF_0x9e 0x9e
 #define RF_0x9f 0x9f
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm_rssi_monitor.c b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm_rssi_monitor.c
index da93ad84b0e3..1fde03691a1a 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm_rssi_monitor.c
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm_rssi_monitor.c
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017  Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm_rssi_monitor.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm_rssi_monitor.h
index 0d28c76a9f3c..b0f446ea292a 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm_rssi_monitor.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm_rssi_monitor.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017  Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm_smt_ant.c b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm_smt_ant.c
index 5ed1bb7c3157..8e805b3ce2d0 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm_smt_ant.c
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm_smt_ant.c
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017  Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm_smt_ant.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm_smt_ant.h
index 60db8c33af58..3a408c4c69e2 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm_smt_ant.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm_smt_ant.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017  Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm_soml.c b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm_soml.c
index d3d16b471ac2..cd4001afd0cf 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm_soml.c
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm_soml.c
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017  Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm_soml.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm_soml.h
index 74a3c46058c9..e2c6e17c2ec8 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm_soml.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm_soml.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017  Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm_types.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm_types.h
index a6ed8dacb338..6ee74c1bb972 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm_types.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/phydm_types.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017  Realtek Corporation.
@@ -346,7 +345,15 @@ enum rt_spinlock_type {
 		PW_LMT_REGU_FCC = 1,
 		PW_LMT_REGU_ETSI = 2,
 		PW_LMT_REGU_MKK = 3,
-		PW_LMT_REGU_WW13 = 4
+		PW_LMT_REGU_WW13 = 4,
+		PW_LMT_REGU_IC = 5,
+		PW_LMT_REGU_KCC = 6,
+		PW_LMT_REGU_ACMA = 7,
+		PW_LMT_REGU_CHILE = 8,
+		PW_LMT_REGU_UKRAINE = 9,
+		PW_LMT_REGU_MEXICO = 10,
+		PW_LMT_REGU_CN = 11,
+		PW_LMT_REGU_MAX_NUM = 12
 	};
 
 	enum odm_pw_lmt_band_type {
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/rtl8821c/halhwimg8821c_bb.c b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/rtl8821c/halhwimg8821c_bb.c
index c55b7ee8bc61..9c1592f89fe8 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/rtl8821c/halhwimg8821c_bb.c
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/rtl8821c/halhwimg8821c_bb.c
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017 Realtek Corporation.
@@ -1756,7 +1755,7 @@ odm_read_and_config_mp_8821c_agc_tab(struct dm_struct *dm)
 u32
 odm_get_version_mp_8821c_agc_tab(void)
 {
-		return 62;
+		return 64;
 }
 
 /******************************************************************************
@@ -2607,7 +2606,7 @@ odm_read_and_config_mp_8821c_agc_tab_diff(struct dm_struct *dm,
 u32
 odm_get_version_mp_8821c_agc_tab_diff(void)
 {
-		return 62;
+		return 64;
 }
 
 /******************************************************************************
@@ -2669,7 +2668,7 @@ const u32 array_mp_8821c_phy_reg[] = {
 	0x82000400,	0x00000000,	0x40000000,	0x00000000,
 		0x8CC, 0x08190492,
 	0xA0000000,	0x00000000,
-		0x8CC, 0x08188492,
+		0x8CC, 0x081A0492,
 	0xB0000000,	0x00000000,
 		0x8D0, 0x0000B800,
 		0x8D4, 0x860308A0,
@@ -4357,7 +4356,7 @@ odm_read_and_config_mp_8821c_phy_reg(struct dm_struct *dm)
 u32
 odm_get_version_mp_8821c_phy_reg(void)
 {
-		return 62;
+		return 64;
 }
 
 /******************************************************************************
@@ -4433,7 +4432,7 @@ odm_read_and_config_mp_8821c_phy_reg_mp(struct dm_struct *dm)
 u32
 odm_get_version_mp_8821c_phy_reg_mp(void)
 {
-		return 62;
+		return 64;
 }
 
 /******************************************************************************
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/rtl8821c/halhwimg8821c_bb.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/rtl8821c/halhwimg8821c_bb.h
index f3439f8cbf8e..a2331dc7a589 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/rtl8821c/halhwimg8821c_bb.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/rtl8821c/halhwimg8821c_bb.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/rtl8821c/halhwimg8821c_mac.c b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/rtl8821c/halhwimg8821c_mac.c
index 91fbc6798880..693667f61081 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/rtl8821c/halhwimg8821c_mac.c
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/rtl8821c/halhwimg8821c_mac.c
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017 Realtek Corporation.
@@ -315,7 +314,7 @@ odm_read_and_config_mp_8821c_mac_reg(struct dm_struct *dm)
 u32
 odm_get_version_mp_8821c_mac_reg(void)
 {
-		return 62;
+		return 64;
 }
 
 #endif /* end of HWIMG_SUPPORT*/
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/rtl8821c/halhwimg8821c_mac.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/rtl8821c/halhwimg8821c_mac.h
index 718a8813b676..978dd89aa02c 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/rtl8821c/halhwimg8821c_mac.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/rtl8821c/halhwimg8821c_mac.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/rtl8821c/mp_precomp.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/rtl8821c/mp_precomp.h
index 10e2ad2657c3..e938c5f71570 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/rtl8821c/mp_precomp.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/rtl8821c/mp_precomp.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2016 - 2017 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/rtl8821c/phydm_hal_api8821c.c b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/rtl8821c/phydm_hal_api8821c.c
index 197cffc7d116..cff79887a245 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/rtl8821c/phydm_hal_api8821c.c
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/rtl8821c/phydm_hal_api8821c.c
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2016 - 2017 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/rtl8821c/phydm_hal_api8821c.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/rtl8821c/phydm_hal_api8821c.h
index 33919cefcb42..a4333f391a29 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/rtl8821c/phydm_hal_api8821c.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/rtl8821c/phydm_hal_api8821c.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2016 - 2017 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/rtl8821c/phydm_regconfig8821c.c b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/rtl8821c/phydm_regconfig8821c.c
index 70f41f4f25fb..c8a2d3c56193 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/rtl8821c/phydm_regconfig8821c.c
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/rtl8821c/phydm_regconfig8821c.c
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2016 - 2017 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/rtl8821c/phydm_regconfig8821c.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/rtl8821c/phydm_regconfig8821c.h
index 0c403d9bb373..0132ab2f0714 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/rtl8821c/phydm_regconfig8821c.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/rtl8821c/phydm_regconfig8821c.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2016 - 2017 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/rtl8821c/phydm_rtl8821c.c b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/rtl8821c/phydm_rtl8821c.c
index 76359e37d4be..e5432c803556 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/rtl8821c/phydm_rtl8821c.c
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/rtl8821c/phydm_rtl8821c.c
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017  Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/rtl8821c/phydm_rtl8821c.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/rtl8821c/phydm_rtl8821c.h
index 373f88be5a91..3cb440fbc1c3 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/rtl8821c/phydm_rtl8821c.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/rtl8821c/phydm_rtl8821c.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017  Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/rtl8821c/version_rtl8821c.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/rtl8821c/version_rtl8821c.h
index 8c4a6258e2ec..855334251b0e 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/rtl8821c/version_rtl8821c.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/rtl8821c/version_rtl8821c.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017  Realtek Corporation.
@@ -30,6 +29,6 @@
   You do not need to fill up the version.h anymore,
   only the maintenance supervisor fills it before formal release.
 */
-#define	RELEASE_DATE_8821C		20200908
-#define	COMMIT_BY_8821C			"WeiChi"
-#define	RELEASE_VERSION_8821C	62
+#define	RELEASE_DATE_8821C		20210727
+#define	COMMIT_BY_8821C			"Kevin"
+#define	RELEASE_VERSION_8821C	64
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/txbf/halcomtxbf.c b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/txbf/halcomtxbf.c
index 41c6b9fb9fdc..ae45a5b1a61a 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/txbf/halcomtxbf.c
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/txbf/halcomtxbf.c
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2016 - 2017 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/txbf/halcomtxbf.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/txbf/halcomtxbf.h
index 8018f7b20bdc..5ad303394cba 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/txbf/halcomtxbf.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/txbf/halcomtxbf.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017  Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/txbf/haltxbf8192e.c b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/txbf/haltxbf8192e.c
index b6a63930bfa0..daac3e58aa3b 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/txbf/haltxbf8192e.c
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/txbf/haltxbf8192e.c
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2016 - 2017 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/txbf/haltxbf8192e.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/txbf/haltxbf8192e.h
index dc7a8c0e5398..9b0c8321f991 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/txbf/haltxbf8192e.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/txbf/haltxbf8192e.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017  Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/txbf/haltxbf8814a.c b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/txbf/haltxbf8814a.c
index 79cc536fc971..7ad6ca909b49 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/txbf/haltxbf8814a.c
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/txbf/haltxbf8814a.c
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2016 - 2017 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/txbf/haltxbf8814a.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/txbf/haltxbf8814a.h
index 9863d770db4f..61b33bbfbb9b 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/txbf/haltxbf8814a.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/txbf/haltxbf8814a.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017  Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/txbf/haltxbf8822b.c b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/txbf/haltxbf8822b.c
index 2a266a12ff76..a1d35c9b178d 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/txbf/haltxbf8822b.c
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/txbf/haltxbf8822b.c
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2016 - 2017 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/txbf/haltxbf8822b.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/txbf/haltxbf8822b.h
index e331ed8f7388..552fba2a7a27 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/txbf/haltxbf8822b.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/txbf/haltxbf8822b.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017  Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/txbf/haltxbfinterface.c b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/txbf/haltxbfinterface.c
index 482265408746..c125fecadc6a 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/txbf/haltxbfinterface.c
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/txbf/haltxbfinterface.c
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2016 - 2017 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/txbf/haltxbfinterface.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/txbf/haltxbfinterface.h
index 28ba104746fe..b97aa349e702 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/txbf/haltxbfinterface.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/txbf/haltxbfinterface.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017  Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/txbf/haltxbfjaguar.c b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/txbf/haltxbfjaguar.c
index 0f61447e4081..6f1892837ada 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/txbf/haltxbfjaguar.c
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/txbf/haltxbfjaguar.c
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2016 - 2017 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/txbf/haltxbfjaguar.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/txbf/haltxbfjaguar.h
index 9e5e09e1f345..2c9a623baf18 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/txbf/haltxbfjaguar.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/txbf/haltxbfjaguar.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017  Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/txbf/phydm_hal_txbf_api.c b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/txbf/phydm_hal_txbf_api.c
index a6cb1e1b7f29..ba0205ab4a02 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/txbf/phydm_hal_txbf_api.c
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/txbf/phydm_hal_txbf_api.c
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017 Realtek Corporation.
@@ -56,7 +55,8 @@ u8 phydm_get_beamforming_sounding_info(void *dm_void, u16 *throughput,
 			if ((tx_rate[idx] >= ODM_RATEVHTSS2MCS7 &&
 			     tx_rate[idx] <= ODM_RATEVHTSS2MCS9))
 				snddecision = snddecision & ~(1 << idx);
-		} else if (dm->support_ic_type & (ODM_RTL8814B)) {
+		} else if (dm->support_ic_type &
+			   (ODM_RTL8814B | ODM_RTL8814C)) {
 			if ((tx_rate[idx] >= ODM_RATEVHTSS4MCS7 &&
 			     tx_rate[idx] <= ODM_RATEVHTSS4MCS9))
 				snddecision = snddecision & ~(1 << idx);
@@ -304,7 +304,7 @@ void phydm_txbf_rfmode(void *dm_void, u8 su_bfee_cnt, u8 mu_bfee_cnt)
 	}
 #endif
 #if (RTL8814B_SUPPORT)
-	if (dm->support_ic_type == ODM_RTL8814B) {
+	if (dm->support_ic_type & (ODM_RTL8814B | ODM_RTL8814C)) {
 		if (su_bfee_cnt > 0 || mu_bfee_cnt > 0) {
 			for (i = RF_PATH_A; i <= RF_PATH_D; i++) {
 				/*RF mode table write enable*/
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/txbf/phydm_hal_txbf_api.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/txbf/phydm_hal_txbf_api.h
index 2f53bf028dc4..15659ccb3ab8 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/txbf/phydm_hal_txbf_api.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/phydm/txbf/phydm_hal_txbf_api.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017  Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/rtl8821c/hal8821c_fw.c b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/rtl8821c/hal8821c_fw.c
index 87b7eff313f2..75b3288c68bf 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/rtl8821c/hal8821c_fw.c
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/rtl8821c/hal8821c_fw.c
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
 *
 * Copyright(c) 2012 - 2017 Realtek Corporation.
@@ -23,13 +22,13 @@
 #if (defined(CONFIG_AP_WOWLAN) || (DM_ODM_SUPPORT_TYPE & (ODM_AP)))
 
 u8 array_mp_8821c_fw_ap[] = {
-0x21, 0x88, 0x00, 0x00, 0x18, 0x00, 0x08, 0x00,
-0x0C, 0xBC, 0x11, 0xA2, 0x00, 0x00, 0x00, 0x00,
-0x01, 0x0C, 0x12, 0x0D, 0xE4, 0x07, 0x00, 0x00,
+0x21, 0x88, 0x00, 0x00, 0x18, 0x00, 0x05, 0x00,
+0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00,
+0x09, 0x06, 0x0F, 0x13, 0xE3, 0x07, 0x00, 0x00,
 0x18, 0x00, 0x00, 0x00, 0x0C, 0x00, 0x00, 0x00,
 0x00, 0x00, 0x20, 0x80, 0x38, 0x7D, 0x00, 0x00,
 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00,
-0xA0, 0xBB, 0x00, 0x00, 0xA8, 0x89, 0x00, 0x00,
+0xE0, 0xBA, 0x00, 0x00, 0xA8, 0x89, 0x00, 0x00,
 0x00, 0x00, 0x10, 0x80, 0x00, 0x00, 0x03, 0x80,
 0x00, 0x00, 0x04, 0x04, 0x08, 0x08, 0x08, 0x08,
 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C,
@@ -4064,7 +4063,7 @@ u8 array_mp_8821c_fw_ap[] = {
 0xE3, 0xEC, 0xB8, 0x67, 0xFB, 0x2D, 0x10, 0xF0,
 0x23, 0x6C, 0xC0, 0xF0, 0x01, 0x4C, 0x00, 0xEC,
 0xFD, 0x63, 0x05, 0x62, 0x04, 0xD0, 0x10, 0xF0,
-0x24, 0x6B, 0x95, 0xF1, 0x6C, 0x9B, 0x10, 0xF0,
+0x24, 0x6B, 0xD5, 0xF0, 0x70, 0x9B, 0x10, 0xF0,
 0x23, 0x6A, 0xC0, 0xF0, 0x01, 0x4A, 0x40, 0xDB,
 0x00, 0x1C, 0x94, 0x00, 0x80, 0x18, 0xC8, 0x06,
 0x80, 0x18, 0xAF, 0x05, 0x80, 0x18, 0xD1, 0x05,
@@ -4084,8 +4083,8 @@ u8 array_mp_8821c_fw_ap[] = {
 0x15, 0xF4, 0x00, 0x4A, 0x43, 0xDC, 0xCE, 0xF7,
 0x40, 0x98, 0x00, 0x6D, 0x40, 0xEA, 0x30, 0xF0,
 0x21, 0x6B, 0xB0, 0xF4, 0x44, 0xDB, 0x00, 0x18,
-0x71, 0xDC, 0x10, 0xF0, 0x24, 0x6A, 0x95, 0xF3,
-0x7C, 0x9A, 0xFF, 0xF7, 0x1F, 0x6C, 0x10, 0xF0,
+0x49, 0xDC, 0x10, 0xF0, 0x24, 0x6A, 0xF5, 0xF2,
+0x60, 0x9A, 0xFF, 0xF7, 0x1F, 0x6C, 0x10, 0xF0,
 0x00, 0x6D, 0x40, 0xAB, 0xAB, 0xED, 0x8C, 0xEA,
 0xAD, 0xEA, 0x8C, 0xEA, 0x40, 0xCB, 0x30, 0xF0,
 0x20, 0x6A, 0xAE, 0xF7, 0x58, 0x9A, 0x40, 0xEA,
@@ -4226,323 +4225,323 @@ u8 array_mp_8821c_fw_ap[] = {
 0x00, 0xEF, 0x00, 0x65, 0xFD, 0x63, 0x05, 0x62,
 0x00, 0x18, 0x75, 0xC1, 0x05, 0x97, 0x03, 0x63,
 0x00, 0xEF, 0x00, 0x65, 0x10, 0xF0, 0x24, 0x6B,
-0x95, 0xF1, 0x6C, 0x9B, 0x10, 0xF0, 0x23, 0x6A,
+0xD5, 0xF0, 0x70, 0x9B, 0x10, 0xF0, 0x23, 0x6A,
 0xC0, 0xF5, 0x15, 0x4A, 0x40, 0xDB, 0x01, 0x4A,
 0x40, 0xDB, 0x20, 0xE8, 0x10, 0xF0, 0x24, 0x6B,
-0x95, 0xF1, 0x6C, 0x9B, 0x10, 0xF0, 0x23, 0x6A,
+0xD5, 0xF0, 0x70, 0x9B, 0x10, 0xF0, 0x23, 0x6A,
 0xE0, 0xF5, 0x0D, 0x4A, 0x40, 0xDB, 0x01, 0x4A,
 0x40, 0xDB, 0x20, 0xE8, 0x10, 0xF0, 0x24, 0x6B,
-0x95, 0xF1, 0x6C, 0x9B, 0x10, 0xF0, 0x23, 0x6A,
+0xD5, 0xF0, 0x70, 0x9B, 0x10, 0xF0, 0x23, 0x6A,
 0x00, 0xF6, 0x05, 0x4A, 0x40, 0xDB, 0x10, 0xF0,
-0x24, 0x6A, 0x75, 0xF7, 0x44, 0x9A, 0xC0, 0x9A,
-0x10, 0xF0, 0x24, 0x6A, 0x75, 0xF7, 0x48, 0x9A,
-0xA0, 0x9A, 0x10, 0xF0, 0x24, 0x6A, 0x75, 0xF7,
+0x24, 0x6A, 0xB5, 0xF6, 0x44, 0x9A, 0xC0, 0x9A,
+0x10, 0xF0, 0x24, 0x6A, 0xB5, 0xF6, 0x48, 0x9A,
+0xA0, 0x9A, 0x10, 0xF0, 0x24, 0x6A, 0xB5, 0xF6,
 0x4C, 0x9A, 0x80, 0x9A, 0x10, 0xF0, 0x24, 0x6A,
-0x75, 0xF7, 0x50, 0x9A, 0x40, 0x9A, 0x33, 0x22,
-0x10, 0xF0, 0x24, 0x6A, 0x15, 0xF2, 0x78, 0x9A,
-0x10, 0xF0, 0x24, 0x6F, 0x75, 0xF7, 0xF4, 0x9F,
+0xB5, 0xF6, 0x50, 0x9A, 0x40, 0x9A, 0x33, 0x22,
+0x10, 0xF0, 0x24, 0x6A, 0x55, 0xF1, 0x7C, 0x9A,
+0x10, 0xF0, 0x24, 0x6F, 0xB5, 0xF6, 0xF4, 0x9F,
 0x40, 0x9B, 0xED, 0xEA, 0x40, 0xDB, 0x10, 0xF0,
-0x24, 0x6A, 0x75, 0xF7, 0x58, 0x9A, 0xFF, 0x6B,
-0xC0, 0xDA, 0x10, 0xF0, 0x24, 0x6A, 0x75, 0xF7,
+0x24, 0x6A, 0xB5, 0xF6, 0x58, 0x9A, 0xFF, 0x6B,
+0xC0, 0xDA, 0x10, 0xF0, 0x24, 0x6A, 0xB5, 0xF6,
 0x5C, 0x9A, 0xA0, 0xDA, 0x10, 0xF0, 0x24, 0x6A,
-0x95, 0xF7, 0x40, 0x9A, 0x10, 0x6D, 0xAB, 0xED,
-0x80, 0xDA, 0x10, 0xF0, 0x24, 0x6A, 0x95, 0xF7,
+0xD5, 0xF6, 0x40, 0x9A, 0x10, 0x6D, 0xAB, 0xED,
+0x80, 0xDA, 0x10, 0xF0, 0x24, 0x6A, 0xD5, 0xF6,
 0x84, 0x9A, 0x40, 0xA4, 0x6C, 0xEA, 0xAC, 0xEA,
 0x02, 0x6D, 0xAD, 0xEA, 0x6C, 0xEA, 0x40, 0xC4,
-0x10, 0xF0, 0x24, 0x6A, 0x75, 0xF3, 0x80, 0x9A,
+0x10, 0xF0, 0x24, 0x6A, 0xB5, 0xF2, 0x84, 0x9A,
 0x80, 0x6D, 0xAB, 0xED, 0x40, 0xA4, 0x6C, 0xEA,
 0xAE, 0xEA, 0x6C, 0xEA, 0x40, 0xC4, 0x10, 0xF0,
-0x24, 0x6B, 0x95, 0xF1, 0x6C, 0x9B, 0x10, 0xF0,
+0x24, 0x6B, 0xD5, 0xF0, 0x70, 0x9B, 0x10, 0xF0,
 0x23, 0x6A, 0x00, 0xF6, 0x06, 0x4A, 0x40, 0xDB,
 0x20, 0xE8, 0x00, 0x65, 0xFD, 0x63, 0x05, 0x62,
-0x10, 0xF0, 0x24, 0x6B, 0x95, 0xF1, 0x6C, 0x9B,
+0x10, 0xF0, 0x24, 0x6B, 0xD5, 0xF0, 0x70, 0x9B,
 0x10, 0xF0, 0x23, 0x6A, 0xA0, 0xF6, 0x1D, 0x4A,
-0x40, 0xDB, 0x00, 0x18, 0xE3, 0xDE, 0x30, 0xF0,
+0x40, 0xDB, 0x00, 0x18, 0xBB, 0xDE, 0x30, 0xF0,
 0x20, 0x6A, 0x00, 0xF2, 0x6C, 0x9A, 0x6C, 0x23,
 0x01, 0x6A, 0x6C, 0xEA, 0x02, 0x22, 0x00, 0x18,
-0x1F, 0xDF, 0x30, 0xF0, 0x20, 0x6A, 0x00, 0xF2,
+0xF7, 0xDE, 0x30, 0xF0, 0x20, 0x6A, 0x00, 0xF2,
 0x4C, 0x9A, 0x02, 0x6B, 0x6C, 0xEA, 0x02, 0x22,
-0x00, 0x18, 0x9D, 0xE0, 0x30, 0xF0, 0x20, 0x6A,
+0x00, 0x18, 0x6E, 0xE0, 0x30, 0xF0, 0x20, 0x6A,
 0x00, 0xF2, 0x4C, 0x9A, 0x04, 0x6B, 0x6C, 0xEA,
-0x02, 0x22, 0x00, 0x18, 0x83, 0xE0, 0x30, 0xF0,
+0x02, 0x22, 0x00, 0x18, 0x54, 0xE0, 0x30, 0xF0,
 0x20, 0x6A, 0x00, 0xF2, 0x4C, 0x9A, 0x08, 0x6B,
-0x6C, 0xEA, 0x02, 0x22, 0x00, 0x18, 0x20, 0xDF,
+0x6C, 0xEA, 0x02, 0x22, 0x00, 0x18, 0xF8, 0xDE,
 0x30, 0xF0, 0x20, 0x6A, 0x00, 0xF2, 0x4C, 0x9A,
 0x10, 0x6B, 0x6C, 0xEA, 0x02, 0x22, 0x00, 0x18,
-0x21, 0xDF, 0x30, 0xF0, 0x20, 0x6A, 0x00, 0xF2,
+0xF9, 0xDE, 0x30, 0xF0, 0x20, 0x6A, 0x00, 0xF2,
 0x4C, 0x9A, 0x20, 0x6B, 0x6C, 0xEA, 0x02, 0x22,
-0x00, 0x18, 0x7F, 0xE0, 0x30, 0xF0, 0x20, 0x6A,
+0x00, 0x18, 0x50, 0xE0, 0x30, 0xF0, 0x20, 0x6A,
 0x00, 0xF2, 0x4C, 0x9A, 0x40, 0x6B, 0x6C, 0xEA,
-0x02, 0x22, 0x00, 0x18, 0x77, 0xE0, 0x30, 0xF0,
+0x02, 0x22, 0x00, 0x18, 0x48, 0xE0, 0x30, 0xF0,
 0x20, 0x6A, 0x00, 0xF2, 0x4C, 0x9A, 0x80, 0x6B,
-0x6C, 0xEA, 0x02, 0x22, 0x00, 0x18, 0x73, 0xE0,
+0x6C, 0xEA, 0x02, 0x22, 0x00, 0x18, 0x44, 0xE0,
 0x30, 0xF0, 0x20, 0x6B, 0x00, 0xF2, 0x6C, 0x9B,
 0xFF, 0x6A, 0x01, 0x4A, 0x6C, 0xEA, 0x02, 0x22,
-0x00, 0x18, 0x6C, 0xE0, 0x30, 0xF0, 0x20, 0x6B,
+0x00, 0x18, 0x3D, 0xE0, 0x30, 0xF0, 0x20, 0x6B,
 0x00, 0xF2, 0x6C, 0x9B, 0x04, 0xF0, 0x00, 0x6A,
-0x6C, 0xEA, 0x02, 0x22, 0x00, 0x18, 0x22, 0xDF,
+0x6C, 0xEA, 0x02, 0x22, 0x00, 0x18, 0xFA, 0xDE,
 0x30, 0xF0, 0x20, 0x6B, 0x00, 0xF2, 0x6C, 0x9B,
 0x08, 0xF0, 0x00, 0x6A, 0x6C, 0xEA, 0x02, 0x22,
-0x00, 0x18, 0x23, 0xDF, 0x30, 0xF0, 0x20, 0x6B,
+0x00, 0x18, 0xFB, 0xDE, 0x30, 0xF0, 0x20, 0x6B,
 0x00, 0xF2, 0x6C, 0x9B, 0x10, 0xF0, 0x00, 0x6A,
-0x6C, 0xEA, 0x02, 0x22, 0x00, 0x18, 0x24, 0xDF,
+0x6C, 0xEA, 0x02, 0x22, 0x00, 0x18, 0xFC, 0xDE,
 0x30, 0xF0, 0x20, 0x6A, 0x00, 0xF2, 0x70, 0x9A,
 0x70, 0x23, 0x01, 0x6A, 0x6C, 0xEA, 0x02, 0x22,
-0x00, 0x18, 0x4B, 0xE0, 0x30, 0xF0, 0x20, 0x6A,
+0x00, 0x18, 0x23, 0xE0, 0x30, 0xF0, 0x20, 0x6A,
 0x00, 0xF2, 0x50, 0x9A, 0x02, 0x6B, 0x6C, 0xEA,
-0x02, 0x22, 0x00, 0x18, 0x25, 0xDF, 0x30, 0xF0,
+0x02, 0x22, 0x00, 0x18, 0xFD, 0xDE, 0x30, 0xF0,
 0x20, 0x6B, 0x00, 0xF2, 0x70, 0x9B, 0x04, 0xF0,
 0x00, 0x6A, 0x6C, 0xEA, 0x03, 0x22, 0x00, 0x6C,
-0x00, 0x18, 0x33, 0xE0, 0x30, 0xF0, 0x20, 0x6B,
+0x00, 0x18, 0x0B, 0xE0, 0x30, 0xF0, 0x20, 0x6B,
 0x00, 0xF2, 0x70, 0x9B, 0x08, 0xF0, 0x00, 0x6A,
 0x6C, 0xEA, 0x03, 0x22, 0x00, 0x6C, 0x00, 0x18,
-0x18, 0xE0, 0x10, 0xF0, 0x24, 0x6A, 0x30, 0xF0,
-0x20, 0x6B, 0xB5, 0xF2, 0x5C, 0x9A, 0x00, 0xF2,
+0xF0, 0xDF, 0x10, 0xF0, 0x24, 0x6A, 0x30, 0xF0,
+0x20, 0x6B, 0x15, 0xF2, 0x40, 0x9A, 0x00, 0xF2,
 0x70, 0x9B, 0x6C, 0xEA, 0x02, 0x22, 0x00, 0x18,
-0x26, 0xDF, 0x10, 0xF0, 0x24, 0x6A, 0x30, 0xF0,
-0x20, 0x6B, 0x55, 0xF3, 0x5C, 0x9A, 0x00, 0xF2,
+0xFE, 0xDE, 0x10, 0xF0, 0x24, 0x6A, 0x30, 0xF0,
+0x20, 0x6B, 0xB5, 0xF2, 0x40, 0x9A, 0x00, 0xF2,
 0x70, 0x9B, 0x6C, 0xEA, 0x02, 0x22, 0x00, 0x18,
-0xC1, 0xDF, 0x10, 0xF0, 0x24, 0x6A, 0x30, 0xF0,
-0x20, 0x6B, 0x55, 0xF2, 0x44, 0x9A, 0x00, 0xF2,
+0x99, 0xDF, 0x10, 0xF0, 0x24, 0x6A, 0x30, 0xF0,
+0x20, 0x6B, 0x95, 0xF1, 0x48, 0x9A, 0x00, 0xF2,
 0x70, 0x9B, 0x6C, 0xEA, 0x03, 0x22, 0x00, 0x6C,
-0x00, 0x18, 0xC5, 0xDF, 0x10, 0xF0, 0x24, 0x6A,
-0x30, 0xF0, 0x20, 0x6B, 0x55, 0xF2, 0x48, 0x9A,
+0x00, 0x18, 0x9D, 0xDF, 0x10, 0xF0, 0x24, 0x6A,
+0x30, 0xF0, 0x20, 0x6B, 0x95, 0xF1, 0x4C, 0x9A,
 0x00, 0xF2, 0x70, 0x9B, 0x6C, 0xEA, 0x03, 0x22,
-0x01, 0x6C, 0x00, 0x18, 0xC5, 0xDF, 0x10, 0xF0,
-0x24, 0x6A, 0x30, 0xF0, 0x20, 0x6B, 0x75, 0xF7,
+0x01, 0x6C, 0x00, 0x18, 0x9D, 0xDF, 0x10, 0xF0,
+0x24, 0x6A, 0x30, 0xF0, 0x20, 0x6B, 0xB5, 0xF6,
 0x54, 0x9A, 0x00, 0xF2, 0x70, 0x9B, 0x6C, 0xEA,
-0x03, 0x22, 0x02, 0x6C, 0x00, 0x18, 0xC5, 0xDF,
+0x03, 0x22, 0x02, 0x6C, 0x00, 0x18, 0x9D, 0xDF,
 0x10, 0xF0, 0x24, 0x6A, 0x30, 0xF0, 0x20, 0x6B,
-0x95, 0xF7, 0x48, 0x9A, 0x00, 0xF2, 0x70, 0x9B,
+0xD5, 0xF6, 0x48, 0x9A, 0x00, 0xF2, 0x70, 0x9B,
 0x6C, 0xEA, 0x03, 0x22, 0x03, 0x6C, 0x00, 0x18,
-0xC5, 0xDF, 0x30, 0xF0, 0x20, 0x6A, 0x00, 0xF2,
+0x9D, 0xDF, 0x30, 0xF0, 0x20, 0x6A, 0x00, 0xF2,
 0x74, 0x9A, 0x55, 0x23, 0x01, 0x6A, 0x6C, 0xEA,
-0x03, 0x22, 0x01, 0x6C, 0x00, 0x18, 0x33, 0xE0,
+0x03, 0x22, 0x01, 0x6C, 0x00, 0x18, 0x0B, 0xE0,
 0x30, 0xF0, 0x20, 0x6A, 0x00, 0xF2, 0x54, 0x9A,
 0x02, 0x6B, 0x6C, 0xEA, 0x03, 0x22, 0x01, 0x6C,
-0x00, 0x18, 0x18, 0xE0, 0x30, 0xF0, 0x20, 0x6A,
+0x00, 0x18, 0xF0, 0xDF, 0x30, 0xF0, 0x20, 0x6A,
 0x00, 0xF2, 0x54, 0x9A, 0x04, 0x6B, 0x6C, 0xEA,
-0x03, 0x22, 0x02, 0x6C, 0x00, 0x18, 0x33, 0xE0,
+0x03, 0x22, 0x02, 0x6C, 0x00, 0x18, 0x0B, 0xE0,
 0x30, 0xF0, 0x20, 0x6A, 0x00, 0xF2, 0x54, 0x9A,
 0x08, 0x6B, 0x6C, 0xEA, 0x03, 0x22, 0x02, 0x6C,
-0x00, 0x18, 0x18, 0xE0, 0x30, 0xF0, 0x20, 0x6A,
+0x00, 0x18, 0xF0, 0xDF, 0x30, 0xF0, 0x20, 0x6A,
 0x00, 0xF2, 0x54, 0x9A, 0x10, 0x6B, 0x6C, 0xEA,
-0x03, 0x22, 0x03, 0x6C, 0x00, 0x18, 0x33, 0xE0,
+0x03, 0x22, 0x03, 0x6C, 0x00, 0x18, 0x0B, 0xE0,
 0x30, 0xF0, 0x20, 0x6A, 0x00, 0xF2, 0x54, 0x9A,
 0x20, 0x6B, 0x6C, 0xEA, 0x03, 0x22, 0x03, 0x6C,
-0x00, 0x18, 0x18, 0xE0, 0x30, 0xF0, 0x20, 0x6A,
+0x00, 0x18, 0xF0, 0xDF, 0x30, 0xF0, 0x20, 0x6A,
 0x00, 0xF2, 0x54, 0x9A, 0x40, 0x6B, 0x6C, 0xEA,
-0x03, 0x22, 0x04, 0x6C, 0x00, 0x18, 0x33, 0xE0,
+0x03, 0x22, 0x04, 0x6C, 0x00, 0x18, 0x0B, 0xE0,
 0x30, 0xF0, 0x20, 0x6A, 0x00, 0xF2, 0x54, 0x9A,
 0x80, 0x6B, 0x6C, 0xEA, 0x03, 0x22, 0x04, 0x6C,
-0x00, 0x18, 0x18, 0xE0, 0x10, 0xF0, 0x24, 0x6B,
-0x95, 0xF1, 0x6C, 0x9B, 0x10, 0xF0, 0x23, 0x6A,
+0x00, 0x18, 0xF0, 0xDF, 0x10, 0xF0, 0x24, 0x6B,
+0xD5, 0xF0, 0x70, 0x9B, 0x10, 0xF0, 0x23, 0x6A,
 0xA0, 0xF6, 0x1E, 0x4A, 0x40, 0xDB, 0x05, 0x97,
 0x03, 0x63, 0x00, 0xEF, 0xFD, 0x63, 0x05, 0x62,
-0x04, 0xD0, 0x10, 0xF0, 0x24, 0x6B, 0x95, 0xF1,
-0x6C, 0x9B, 0x10, 0xF0, 0x23, 0x6A, 0x41, 0xF1,
-0x1D, 0x4A, 0x40, 0xDB, 0x00, 0x18, 0xB3, 0xDE,
+0x04, 0xD0, 0x10, 0xF0, 0x24, 0x6B, 0xD5, 0xF0,
+0x70, 0x9B, 0x10, 0xF0, 0x23, 0x6A, 0x41, 0xF1,
+0x1D, 0x4A, 0x40, 0xDB, 0x00, 0x18, 0x8B, 0xDE,
 0x30, 0xF0, 0x20, 0x6A, 0xE0, 0xF1, 0x5C, 0x9A,
 0x22, 0x22, 0x00, 0x68, 0x30, 0xF0, 0x20, 0x6B,
 0xE0, 0xF1, 0x7C, 0x9B, 0x02, 0xF0, 0x00, 0x6A,
 0x44, 0xE8, 0x6C, 0xEA, 0x03, 0x22, 0x90, 0x67,
-0x00, 0x18, 0x1E, 0xDF, 0x01, 0x48, 0x10, 0x70,
+0x00, 0x18, 0xF6, 0xDE, 0x01, 0x48, 0x10, 0x70,
 0xF1, 0x61, 0x30, 0xF0, 0x20, 0x6A, 0xE0, 0xF1,
 0x5C, 0x9A, 0x80, 0x6B, 0x6C, 0xEA, 0x02, 0x22,
-0x00, 0x18, 0xCE, 0xE0, 0x10, 0xF0, 0x24, 0x6B,
-0x95, 0xF1, 0x6C, 0x9B, 0x10, 0xF0, 0x23, 0x6A,
+0x00, 0x18, 0x9F, 0xE0, 0x10, 0xF0, 0x24, 0x6B,
+0xD5, 0xF0, 0x70, 0x9B, 0x10, 0xF0, 0x23, 0x6A,
 0x41, 0xF1, 0x1E, 0x4A, 0x40, 0xDB, 0x05, 0x97,
 0x04, 0x90, 0x03, 0x63, 0x00, 0xEF, 0x00, 0x65,
 0xFD, 0x63, 0x05, 0x62, 0x10, 0xF0, 0x24, 0x6B,
-0x95, 0xF1, 0x6C, 0x9B, 0x10, 0xF0, 0x23, 0x6A,
+0xD5, 0xF0, 0x70, 0x9B, 0x10, 0xF0, 0x23, 0x6A,
 0xC1, 0xF1, 0x11, 0x4A, 0x40, 0xDB, 0x00, 0x18,
-0xBA, 0xDE, 0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1,
+0x92, 0xDE, 0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1,
 0x7C, 0x9A, 0x4A, 0x23, 0x08, 0x6A, 0x6C, 0xEA,
-0x03, 0x22, 0x00, 0x6C, 0x00, 0x18, 0x5B, 0xDF,
+0x03, 0x22, 0x00, 0x6C, 0x00, 0x18, 0x33, 0xDF,
 0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1, 0x5C, 0x9A,
 0x02, 0x6B, 0x6C, 0xEA, 0x02, 0x22, 0x00, 0x18,
-0xF7, 0xDE, 0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1,
+0xCF, 0xDE, 0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1,
 0x5C, 0x9A, 0x10, 0x6B, 0x6C, 0xEA, 0x02, 0x22,
-0x00, 0x18, 0xCA, 0xE0, 0x30, 0xF0, 0x20, 0x6A,
+0x00, 0x18, 0x9B, 0xE0, 0x30, 0xF0, 0x20, 0x6A,
 0xC0, 0xF1, 0x5C, 0x9A, 0x20, 0x6B, 0x6C, 0xEA,
-0x02, 0x22, 0x00, 0x18, 0xC6, 0xE0, 0x30, 0xF0,
+0x02, 0x22, 0x00, 0x18, 0x97, 0xE0, 0x30, 0xF0,
 0x20, 0x6A, 0xC0, 0xF1, 0x5C, 0x9A, 0x40, 0x6B,
-0x6C, 0xEA, 0x02, 0x22, 0x00, 0x18, 0xFC, 0xDE,
+0x6C, 0xEA, 0x02, 0x22, 0x00, 0x18, 0xD4, 0xDE,
 0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1, 0x5C, 0x9A,
 0x80, 0x6B, 0x6C, 0xEA, 0x05, 0x22, 0x30, 0xF0,
 0x20, 0x6A, 0x6E, 0xF2, 0x50, 0x9A, 0x40, 0xEA,
 0x30, 0xF0, 0x20, 0x6B, 0xC0, 0xF1, 0x7C, 0x9B,
 0xFF, 0x6A, 0x01, 0x4A, 0x6C, 0xEA, 0x02, 0x22,
-0x00, 0x18, 0xC2, 0xE0, 0x30, 0xF0, 0x20, 0x6B,
+0x00, 0x18, 0x93, 0xE0, 0x30, 0xF0, 0x20, 0x6B,
 0xC0, 0xF1, 0x7C, 0x9B, 0x00, 0xF2, 0x00, 0x6A,
-0x6C, 0xEA, 0x02, 0x22, 0x00, 0x18, 0xBE, 0xE0,
+0x6C, 0xEA, 0x02, 0x22, 0x00, 0x18, 0x8F, 0xE0,
 0x30, 0xF0, 0x20, 0x6A, 0xE0, 0xF1, 0x60, 0x9A,
-0x7D, 0x23, 0x10, 0xF0, 0x24, 0x6A, 0x95, 0xF7,
+0x7D, 0x23, 0x10, 0xF0, 0x24, 0x6A, 0xD5, 0xF6,
 0x48, 0x9A, 0x6C, 0xEA, 0x03, 0x22, 0x00, 0x6C,
-0x00, 0x18, 0xB6, 0xDF, 0x10, 0xF0, 0x24, 0x6A,
-0x30, 0xF0, 0x20, 0x6B, 0x15, 0xF2, 0x5C, 0x9A,
+0x00, 0x18, 0x8E, 0xDF, 0x10, 0xF0, 0x24, 0x6A,
+0x30, 0xF0, 0x20, 0x6B, 0x75, 0xF1, 0x40, 0x9A,
 0xE0, 0xF1, 0x60, 0x9B, 0x6C, 0xEA, 0x03, 0x22,
-0x01, 0x6C, 0x00, 0x18, 0xB6, 0xDF, 0x10, 0xF0,
-0x24, 0x6A, 0x30, 0xF0, 0x20, 0x6B, 0x55, 0xF7,
+0x01, 0x6C, 0x00, 0x18, 0x8E, 0xDF, 0x10, 0xF0,
+0x24, 0x6A, 0x30, 0xF0, 0x20, 0x6B, 0x95, 0xF6,
 0x54, 0x9A, 0xE0, 0xF1, 0x60, 0x9B, 0x6C, 0xEA,
-0x03, 0x22, 0x02, 0x6C, 0x00, 0x18, 0xB6, 0xDF,
+0x03, 0x22, 0x02, 0x6C, 0x00, 0x18, 0x8E, 0xDF,
 0x10, 0xF0, 0x24, 0x6A, 0x30, 0xF0, 0x20, 0x6B,
-0xB5, 0xF2, 0x5C, 0x9A, 0xE0, 0xF1, 0x60, 0x9B,
+0x15, 0xF2, 0x40, 0x9A, 0xE0, 0xF1, 0x60, 0x9B,
 0x6C, 0xEA, 0x03, 0x22, 0x03, 0x6C, 0x00, 0x18,
-0xB6, 0xDF, 0x10, 0xF0, 0x24, 0x6A, 0x30, 0xF0,
-0x20, 0x6B, 0x55, 0xF3, 0x5C, 0x9A, 0xE0, 0xF1,
+0x8E, 0xDF, 0x10, 0xF0, 0x24, 0x6A, 0x30, 0xF0,
+0x20, 0x6B, 0xB5, 0xF2, 0x40, 0x9A, 0xE0, 0xF1,
 0x60, 0x9B, 0x6C, 0xEA, 0x03, 0x22, 0x04, 0x6C,
-0x00, 0x18, 0xB6, 0xDF, 0x10, 0xF0, 0x24, 0x6A,
-0x30, 0xF0, 0x20, 0x6B, 0x55, 0xF2, 0x40, 0x9A,
+0x00, 0x18, 0x8E, 0xDF, 0x10, 0xF0, 0x24, 0x6A,
+0x30, 0xF0, 0x20, 0x6B, 0x95, 0xF1, 0x44, 0x9A,
 0xE0, 0xF1, 0x60, 0x9B, 0x6C, 0xEA, 0x03, 0x22,
-0x00, 0x6C, 0x00, 0x18, 0x3E, 0xDF, 0x10, 0xF0,
-0x24, 0x6A, 0x30, 0xF0, 0x20, 0x6B, 0x55, 0xF2,
-0x44, 0x9A, 0xE0, 0xF1, 0x60, 0x9B, 0x6C, 0xEA,
-0x03, 0x22, 0x00, 0x6C, 0x00, 0x18, 0x7C, 0xDF,
+0x00, 0x6C, 0x00, 0x18, 0x16, 0xDF, 0x10, 0xF0,
+0x24, 0x6A, 0x30, 0xF0, 0x20, 0x6B, 0x95, 0xF1,
+0x48, 0x9A, 0xE0, 0xF1, 0x60, 0x9B, 0x6C, 0xEA,
+0x03, 0x22, 0x00, 0x6C, 0x00, 0x18, 0x54, 0xDF,
 0x10, 0xF0, 0x24, 0x6A, 0x30, 0xF0, 0x20, 0x6B,
-0x55, 0xF2, 0x48, 0x9A, 0xE0, 0xF1, 0x60, 0x9B,
+0x95, 0xF1, 0x4C, 0x9A, 0xE0, 0xF1, 0x60, 0x9B,
 0x6C, 0xEA, 0x03, 0x22, 0x00, 0x6C, 0x00, 0x18,
-0x9D, 0xDF, 0x10, 0xF0, 0x24, 0x6A, 0x30, 0xF0,
-0x20, 0x6B, 0x75, 0xF7, 0x54, 0x9A, 0xE0, 0xF1,
+0x75, 0xDF, 0x10, 0xF0, 0x24, 0x6A, 0x30, 0xF0,
+0x20, 0x6B, 0xB5, 0xF6, 0x54, 0x9A, 0xE0, 0xF1,
 0x60, 0x9B, 0x6C, 0xEA, 0x03, 0x22, 0x00, 0x6C,
-0x00, 0x18, 0x64, 0xDF, 0x10, 0xF0, 0x24, 0x6A,
-0x30, 0xF0, 0x20, 0x6B, 0x35, 0xF2, 0x5C, 0x9A,
+0x00, 0x18, 0x3C, 0xDF, 0x10, 0xF0, 0x24, 0x6A,
+0x30, 0xF0, 0x20, 0x6B, 0x95, 0xF1, 0x40, 0x9A,
 0xE0, 0xF1, 0x60, 0x9B, 0x6C, 0xEA, 0x02, 0x22,
-0x00, 0x18, 0x14, 0xDF, 0x30, 0xF0, 0x20, 0x6A,
+0x00, 0x18, 0xEC, 0xDE, 0x30, 0xF0, 0x20, 0x6A,
 0xE0, 0xF1, 0x64, 0x9A, 0x78, 0x23, 0x01, 0x6A,
 0x6C, 0xEA, 0x03, 0x22, 0x00, 0x6C, 0x00, 0x18,
-0x15, 0xE1, 0x30, 0xF0, 0x20, 0x6A, 0xE0, 0xF1,
+0xE6, 0xE0, 0x30, 0xF0, 0x20, 0x6A, 0xE0, 0xF1,
 0x44, 0x9A, 0x02, 0x6B, 0x6C, 0xEA, 0x03, 0x22,
-0x10, 0x6C, 0x00, 0x18, 0xE3, 0xE0, 0x30, 0xF0,
+0x10, 0x6C, 0x00, 0x18, 0xB4, 0xE0, 0x30, 0xF0,
 0x20, 0x6A, 0xE0, 0xF1, 0x44, 0x9A, 0x04, 0x6B,
 0x6C, 0xEA, 0x03, 0x22, 0x20, 0x6C, 0x00, 0x18,
-0xE3, 0xE0, 0x30, 0xF0, 0x20, 0x6A, 0xE0, 0xF1,
+0xB4, 0xE0, 0x30, 0xF0, 0x20, 0x6A, 0xE0, 0xF1,
 0x44, 0x9A, 0x08, 0x6B, 0x6C, 0xEA, 0x03, 0x22,
-0x30, 0x6C, 0x00, 0x18, 0xE3, 0xE0, 0x30, 0xF0,
+0x30, 0x6C, 0x00, 0x18, 0xB4, 0xE0, 0x30, 0xF0,
 0x20, 0x6A, 0xE0, 0xF1, 0x44, 0x9A, 0x10, 0x6B,
 0x6C, 0xEA, 0x03, 0x22, 0x40, 0x6C, 0x00, 0x18,
-0xE3, 0xE0, 0x30, 0xF0, 0x20, 0x6A, 0xE0, 0xF1,
+0xB4, 0xE0, 0x30, 0xF0, 0x20, 0x6A, 0xE0, 0xF1,
 0x44, 0x9A, 0x20, 0x6B, 0x6C, 0xEA, 0x03, 0x22,
-0x50, 0x6C, 0x00, 0x18, 0xE3, 0xE0, 0x30, 0xF0,
+0x50, 0x6C, 0x00, 0x18, 0xB4, 0xE0, 0x30, 0xF0,
 0x20, 0x6A, 0xE0, 0xF1, 0x44, 0x9A, 0x40, 0x6B,
 0x6C, 0xEA, 0x03, 0x22, 0x60, 0x6C, 0x00, 0x18,
-0xE3, 0xE0, 0x30, 0xF0, 0x20, 0x6A, 0xE0, 0xF1,
+0xB4, 0xE0, 0x30, 0xF0, 0x20, 0x6A, 0xE0, 0xF1,
 0x44, 0x9A, 0x80, 0x6B, 0x6C, 0xEA, 0x03, 0x22,
-0x70, 0x6C, 0x00, 0x18, 0xE3, 0xE0, 0x30, 0xF0,
+0x70, 0x6C, 0x00, 0x18, 0xB4, 0xE0, 0x30, 0xF0,
 0x20, 0x6B, 0xE0, 0xF1, 0x64, 0x9B, 0xFF, 0x6A,
 0x01, 0x4A, 0x6C, 0xEA, 0x03, 0x22, 0x01, 0x6C,
-0x00, 0x18, 0x15, 0xE1, 0x30, 0xF0, 0x20, 0x6B,
+0x00, 0x18, 0xE6, 0xE0, 0x30, 0xF0, 0x20, 0x6B,
 0xE0, 0xF1, 0x64, 0x9B, 0x00, 0xF2, 0x00, 0x6A,
 0x6C, 0xEA, 0x03, 0x22, 0x02, 0x6C, 0x00, 0x18,
-0x15, 0xE1, 0x30, 0xF0, 0x20, 0x6B, 0xE0, 0xF1,
+0xE6, 0xE0, 0x30, 0xF0, 0x20, 0x6B, 0xE0, 0xF1,
 0x64, 0x9B, 0x00, 0xF4, 0x00, 0x6A, 0x6C, 0xEA,
-0x03, 0x22, 0x03, 0x6C, 0x00, 0x18, 0x15, 0xE1,
+0x03, 0x22, 0x03, 0x6C, 0x00, 0x18, 0xE6, 0xE0,
 0x30, 0xF0, 0x20, 0x6B, 0xE0, 0xF1, 0x64, 0x9B,
 0x01, 0xF0, 0x00, 0x6A, 0x6C, 0xEA, 0x03, 0x22,
-0x04, 0x6C, 0x00, 0x18, 0x15, 0xE1, 0x30, 0xF0,
+0x04, 0x6C, 0x00, 0x18, 0xE6, 0xE0, 0x30, 0xF0,
 0x20, 0x6A, 0xE0, 0xF1, 0x68, 0x9A, 0xA0, 0xF0,
 0x13, 0x23, 0x01, 0x6A, 0x6C, 0xEA, 0x03, 0x22,
-0x00, 0x6C, 0x00, 0x18, 0xB1, 0xE0, 0x30, 0xF0,
+0x00, 0x6C, 0x00, 0x18, 0x82, 0xE0, 0x30, 0xF0,
 0x20, 0x6A, 0xE0, 0xF1, 0x48, 0x9A, 0x02, 0x6B,
 0x6C, 0xEA, 0x03, 0x22, 0x10, 0x6C, 0x00, 0x18,
-0xA9, 0xE0, 0x30, 0xF0, 0x20, 0x6A, 0xE0, 0xF1,
+0x7A, 0xE0, 0x30, 0xF0, 0x20, 0x6A, 0xE0, 0xF1,
 0x48, 0x9A, 0x04, 0x6B, 0x6C, 0xEA, 0x03, 0x22,
-0x20, 0x6C, 0x00, 0x18, 0xA9, 0xE0, 0x30, 0xF0,
+0x20, 0x6C, 0x00, 0x18, 0x7A, 0xE0, 0x30, 0xF0,
 0x20, 0x6A, 0xE0, 0xF1, 0x48, 0x9A, 0x08, 0x6B,
 0x6C, 0xEA, 0x03, 0x22, 0x30, 0x6C, 0x00, 0x18,
-0xA9, 0xE0, 0x30, 0xF0, 0x20, 0x6A, 0xE0, 0xF1,
+0x7A, 0xE0, 0x30, 0xF0, 0x20, 0x6A, 0xE0, 0xF1,
 0x48, 0x9A, 0x10, 0x6B, 0x6C, 0xEA, 0x03, 0x22,
-0x40, 0x6C, 0x00, 0x18, 0xA9, 0xE0, 0x30, 0xF0,
+0x40, 0x6C, 0x00, 0x18, 0x7A, 0xE0, 0x30, 0xF0,
 0x20, 0x6A, 0xE0, 0xF1, 0x48, 0x9A, 0x20, 0x6B,
 0x6C, 0xEA, 0x03, 0x22, 0x50, 0x6C, 0x00, 0x18,
-0xA9, 0xE0, 0x30, 0xF0, 0x20, 0x6A, 0xE0, 0xF1,
+0x7A, 0xE0, 0x30, 0xF0, 0x20, 0x6A, 0xE0, 0xF1,
 0x48, 0x9A, 0x40, 0x6B, 0x6C, 0xEA, 0x03, 0x22,
-0x60, 0x6C, 0x00, 0x18, 0xA9, 0xE0, 0x30, 0xF0,
+0x60, 0x6C, 0x00, 0x18, 0x7A, 0xE0, 0x30, 0xF0,
 0x20, 0x6A, 0xE0, 0xF1, 0x48, 0x9A, 0x80, 0x6B,
 0x6C, 0xEA, 0x03, 0x22, 0x70, 0x6C, 0x00, 0x18,
-0xA9, 0xE0, 0x30, 0xF0, 0x20, 0x6B, 0xE0, 0xF1,
+0x7A, 0xE0, 0x30, 0xF0, 0x20, 0x6B, 0xE0, 0xF1,
 0x68, 0x9B, 0xFF, 0x6A, 0x01, 0x4A, 0x6C, 0xEA,
-0x03, 0x22, 0x01, 0x6C, 0x00, 0x18, 0xB1, 0xE0,
+0x03, 0x22, 0x01, 0x6C, 0x00, 0x18, 0x82, 0xE0,
 0x30, 0xF0, 0x20, 0x6B, 0xE0, 0xF1, 0x68, 0x9B,
 0x00, 0xF2, 0x00, 0x6A, 0x6C, 0xEA, 0x03, 0x22,
-0x02, 0x6C, 0x00, 0x18, 0xB1, 0xE0, 0x30, 0xF0,
+0x02, 0x6C, 0x00, 0x18, 0x82, 0xE0, 0x30, 0xF0,
 0x20, 0x6B, 0xE0, 0xF1, 0x68, 0x9B, 0x00, 0xF4,
 0x00, 0x6A, 0x6C, 0xEA, 0x03, 0x22, 0x03, 0x6C,
-0x00, 0x18, 0xB1, 0xE0, 0x30, 0xF0, 0x20, 0x6B,
+0x00, 0x18, 0x82, 0xE0, 0x30, 0xF0, 0x20, 0x6B,
 0xE0, 0xF1, 0x68, 0x9B, 0x01, 0xF0, 0x00, 0x6A,
 0x6C, 0xEA, 0x03, 0x22, 0x04, 0x6C, 0x00, 0x18,
-0xB1, 0xE0, 0x30, 0xF0, 0x20, 0x6B, 0xE0, 0xF1,
+0x82, 0xE0, 0x30, 0xF0, 0x20, 0x6B, 0xE0, 0xF1,
 0x68, 0x9B, 0x10, 0xF0, 0x00, 0x6A, 0x6C, 0xEA,
 0x03, 0x22, 0x00, 0x6C, 0x00, 0x18, 0x06, 0xC8,
 0x10, 0xF0, 0x24, 0x6A, 0x30, 0xF0, 0x20, 0x6B,
-0xF5, 0xF1, 0x48, 0x9A, 0xE0, 0xF1, 0x68, 0x9B,
+0x35, 0xF1, 0x4C, 0x9A, 0xE0, 0xF1, 0x68, 0x9B,
 0x6C, 0xEA, 0x03, 0x22, 0x01, 0x6C, 0x00, 0x18,
 0x06, 0xC8, 0x10, 0xF0, 0x24, 0x6A, 0x30, 0xF0,
-0x20, 0x6B, 0xF5, 0xF1, 0x4C, 0x9A, 0xE0, 0xF1,
+0x20, 0x6B, 0x35, 0xF1, 0x50, 0x9A, 0xE0, 0xF1,
 0x68, 0x9B, 0x6C, 0xEA, 0x03, 0x22, 0x02, 0x6C,
 0x00, 0x18, 0x06, 0xC8, 0x10, 0xF0, 0x24, 0x6A,
-0x30, 0xF0, 0x20, 0x6B, 0xF5, 0xF1, 0x54, 0x9A,
+0x30, 0xF0, 0x20, 0x6B, 0x35, 0xF1, 0x58, 0x9A,
 0xE0, 0xF1, 0x68, 0x9B, 0x6C, 0xEA, 0x03, 0x22,
 0x03, 0x6C, 0x00, 0x18, 0x06, 0xC8, 0x30, 0xF0,
 0x20, 0x6A, 0xE0, 0xF1, 0x48, 0x9A, 0x00, 0x52,
 0x03, 0x60, 0x04, 0x6C, 0x00, 0x18, 0x06, 0xC8,
 0x30, 0xF0, 0x20, 0x6A, 0xE0, 0xF1, 0x6C, 0x9A,
 0xC0, 0xF0, 0x18, 0x23, 0x01, 0x6A, 0x6C, 0xEA,
-0x03, 0x22, 0x01, 0x6C, 0x00, 0x18, 0x3E, 0xDF,
+0x03, 0x22, 0x01, 0x6C, 0x00, 0x18, 0x16, 0xDF,
 0x30, 0xF0, 0x20, 0x6A, 0xE0, 0xF1, 0x4C, 0x9A,
 0x02, 0x6B, 0x6C, 0xEA, 0x03, 0x22, 0x01, 0x6C,
-0x00, 0x18, 0x7C, 0xDF, 0x30, 0xF0, 0x20, 0x6A,
+0x00, 0x18, 0x54, 0xDF, 0x30, 0xF0, 0x20, 0x6A,
 0xE0, 0xF1, 0x4C, 0x9A, 0x04, 0x6B, 0x6C, 0xEA,
-0x03, 0x22, 0x01, 0x6C, 0x00, 0x18, 0x9D, 0xDF,
+0x03, 0x22, 0x01, 0x6C, 0x00, 0x18, 0x75, 0xDF,
 0x30, 0xF0, 0x20, 0x6A, 0xE0, 0xF1, 0x4C, 0x9A,
 0x08, 0x6B, 0x6C, 0xEA, 0x03, 0x22, 0x01, 0x6C,
-0x00, 0x18, 0x64, 0xDF, 0x30, 0xF0, 0x20, 0x6A,
+0x00, 0x18, 0x3C, 0xDF, 0x30, 0xF0, 0x20, 0x6A,
 0xE0, 0xF1, 0x4C, 0x9A, 0x10, 0x6B, 0x6C, 0xEA,
-0x03, 0x22, 0x02, 0x6C, 0x00, 0x18, 0x3E, 0xDF,
+0x03, 0x22, 0x02, 0x6C, 0x00, 0x18, 0x16, 0xDF,
 0x30, 0xF0, 0x20, 0x6A, 0xE0, 0xF1, 0x4C, 0x9A,
 0x20, 0x6B, 0x6C, 0xEA, 0x03, 0x22, 0x02, 0x6C,
-0x00, 0x18, 0x7C, 0xDF, 0x30, 0xF0, 0x20, 0x6A,
+0x00, 0x18, 0x54, 0xDF, 0x30, 0xF0, 0x20, 0x6A,
 0xE0, 0xF1, 0x4C, 0x9A, 0x40, 0x6B, 0x6C, 0xEA,
-0x03, 0x22, 0x02, 0x6C, 0x00, 0x18, 0x9D, 0xDF,
+0x03, 0x22, 0x02, 0x6C, 0x00, 0x18, 0x75, 0xDF,
 0x30, 0xF0, 0x20, 0x6A, 0xE0, 0xF1, 0x4C, 0x9A,
 0x80, 0x6B, 0x6C, 0xEA, 0x03, 0x22, 0x02, 0x6C,
-0x00, 0x18, 0x64, 0xDF, 0x30, 0xF0, 0x20, 0x6B,
+0x00, 0x18, 0x3C, 0xDF, 0x30, 0xF0, 0x20, 0x6B,
 0xE0, 0xF1, 0x6C, 0x9B, 0xFF, 0x6A, 0x01, 0x4A,
 0x6C, 0xEA, 0x03, 0x22, 0x03, 0x6C, 0x00, 0x18,
-0x3E, 0xDF, 0x30, 0xF0, 0x20, 0x6B, 0xE0, 0xF1,
+0x16, 0xDF, 0x30, 0xF0, 0x20, 0x6B, 0xE0, 0xF1,
 0x6C, 0x9B, 0x00, 0xF2, 0x00, 0x6A, 0x6C, 0xEA,
-0x03, 0x22, 0x03, 0x6C, 0x00, 0x18, 0x7C, 0xDF,
+0x03, 0x22, 0x03, 0x6C, 0x00, 0x18, 0x54, 0xDF,
 0x30, 0xF0, 0x20, 0x6B, 0xE0, 0xF1, 0x6C, 0x9B,
 0x00, 0xF4, 0x00, 0x6A, 0x6C, 0xEA, 0x03, 0x22,
-0x03, 0x6C, 0x00, 0x18, 0x9D, 0xDF, 0x30, 0xF0,
+0x03, 0x6C, 0x00, 0x18, 0x75, 0xDF, 0x30, 0xF0,
 0x20, 0x6B, 0xE0, 0xF1, 0x6C, 0x9B, 0x01, 0xF0,
 0x00, 0x6A, 0x6C, 0xEA, 0x03, 0x22, 0x03, 0x6C,
-0x00, 0x18, 0x64, 0xDF, 0x30, 0xF0, 0x20, 0x6B,
+0x00, 0x18, 0x3C, 0xDF, 0x30, 0xF0, 0x20, 0x6B,
 0xE0, 0xF1, 0x6C, 0x9B, 0x02, 0xF0, 0x00, 0x6A,
 0x6C, 0xEA, 0x03, 0x22, 0x04, 0x6C, 0x00, 0x18,
-0x3E, 0xDF, 0x30, 0xF0, 0x20, 0x6B, 0xE0, 0xF1,
+0x16, 0xDF, 0x30, 0xF0, 0x20, 0x6B, 0xE0, 0xF1,
 0x6C, 0x9B, 0x04, 0xF0, 0x00, 0x6A, 0x6C, 0xEA,
-0x03, 0x22, 0x04, 0x6C, 0x00, 0x18, 0x7C, 0xDF,
+0x03, 0x22, 0x04, 0x6C, 0x00, 0x18, 0x54, 0xDF,
 0x30, 0xF0, 0x20, 0x6B, 0xE0, 0xF1, 0x6C, 0x9B,
 0x08, 0xF0, 0x00, 0x6A, 0x6C, 0xEA, 0x03, 0x22,
-0x04, 0x6C, 0x00, 0x18, 0x9D, 0xDF, 0x30, 0xF0,
+0x04, 0x6C, 0x00, 0x18, 0x75, 0xDF, 0x30, 0xF0,
 0x20, 0x6B, 0xE0, 0xF1, 0x6C, 0x9B, 0x10, 0xF0,
 0x00, 0x6A, 0x6C, 0xEA, 0x03, 0x22, 0x04, 0x6C,
-0x00, 0x18, 0x64, 0xDF, 0x10, 0xF0, 0x24, 0x6A,
-0x30, 0xF0, 0x20, 0x6B, 0x35, 0xF2, 0x5C, 0x9A,
+0x00, 0x18, 0x3C, 0xDF, 0x10, 0xF0, 0x24, 0x6A,
+0x30, 0xF0, 0x20, 0x6B, 0x95, 0xF1, 0x40, 0x9A,
 0xE0, 0xF1, 0x6C, 0x9B, 0x6C, 0xEA, 0x03, 0x22,
-0x01, 0x6C, 0x00, 0x18, 0x5B, 0xDF, 0x10, 0xF0,
-0x24, 0x6A, 0x30, 0xF0, 0x20, 0x6B, 0x55, 0xF2,
-0x40, 0x9A, 0xE0, 0xF1, 0x6C, 0x9B, 0x6C, 0xEA,
-0x03, 0x22, 0x02, 0x6C, 0x00, 0x18, 0x5B, 0xDF,
+0x01, 0x6C, 0x00, 0x18, 0x33, 0xDF, 0x10, 0xF0,
+0x24, 0x6A, 0x30, 0xF0, 0x20, 0x6B, 0x95, 0xF1,
+0x44, 0x9A, 0xE0, 0xF1, 0x6C, 0x9B, 0x6C, 0xEA,
+0x03, 0x22, 0x02, 0x6C, 0x00, 0x18, 0x33, 0xDF,
 0x10, 0xF0, 0x24, 0x6A, 0x30, 0xF0, 0x20, 0x6B,
-0x55, 0xF2, 0x44, 0x9A, 0xE0, 0xF1, 0x6C, 0x9B,
+0x95, 0xF1, 0x48, 0x9A, 0xE0, 0xF1, 0x6C, 0x9B,
 0x6C, 0xEA, 0x03, 0x22, 0x03, 0x6C, 0x00, 0x18,
-0x5B, 0xDF, 0x10, 0xF0, 0x24, 0x6A, 0x30, 0xF0,
-0x20, 0x6B, 0x55, 0xF2, 0x48, 0x9A, 0xE0, 0xF1,
+0x33, 0xDF, 0x10, 0xF0, 0x24, 0x6A, 0x30, 0xF0,
+0x20, 0x6B, 0x95, 0xF1, 0x4C, 0x9A, 0xE0, 0xF1,
 0x6C, 0x9B, 0x6C, 0xEA, 0x03, 0x22, 0x04, 0x6C,
-0x00, 0x18, 0x5B, 0xDF, 0x10, 0xF0, 0x24, 0x6B,
-0x95, 0xF1, 0x6C, 0x9B, 0x10, 0xF0, 0x23, 0x6A,
+0x00, 0x18, 0x33, 0xDF, 0x10, 0xF0, 0x24, 0x6B,
+0xD5, 0xF0, 0x70, 0x9B, 0x10, 0xF0, 0x23, 0x6A,
 0xC1, 0xF1, 0x12, 0x4A, 0x40, 0xDB, 0x05, 0x97,
 0x03, 0x63, 0x00, 0xEF, 0xFD, 0x63, 0x05, 0x62,
 0x30, 0xF0, 0x20, 0x6A, 0x4E, 0xF2, 0x50, 0x9A,
@@ -4561,23 +4560,23 @@ u8 array_mp_8821c_fw_ap[] = {
 0x00, 0x6B, 0xC0, 0xF1, 0x6E, 0xCA, 0xC0, 0xF1,
 0x70, 0xC2, 0xE0, 0xF1, 0x6A, 0xC2, 0xE0, 0xF1,
 0x6B, 0xC2, 0xE0, 0xF1, 0x6C, 0xC2, 0x20, 0xE8,
-0x10, 0xF0, 0x24, 0x6B, 0xF5, 0xF2, 0x64, 0x9B,
+0x10, 0xF0, 0x24, 0x6B, 0x35, 0xF2, 0x68, 0x9B,
 0xE1, 0xF7, 0x1F, 0x6D, 0xFF, 0x6A, 0x60, 0xAB,
 0x4C, 0xEC, 0x6C, 0xED, 0x30, 0xF0, 0x20, 0x6B,
 0xE8, 0xF2, 0x7C, 0xA3, 0x02, 0x73, 0x28, 0x61,
 0x30, 0xF0, 0x20, 0x6B, 0x0F, 0xF7, 0x6C, 0xAB,
 0x01, 0x6E, 0xCC, 0xEB, 0x0D, 0x23, 0x10, 0xF0,
-0x24, 0x6B, 0xF5, 0xF2, 0xC8, 0x9B, 0x0C, 0x6F,
+0x24, 0x6B, 0x35, 0xF2, 0xCC, 0x9B, 0x0C, 0x6F,
 0xB5, 0xE4, 0x60, 0xA6, 0x4C, 0xED, 0x4C, 0xEB,
 0xED, 0xEB, 0x4C, 0xEB, 0x60, 0xC6, 0x1B, 0x10,
-0x10, 0xF0, 0x24, 0x6B, 0xF5, 0xF2, 0xC8, 0x9B,
+0x10, 0xF0, 0x24, 0x6B, 0x35, 0xF2, 0xCC, 0x9B,
 0x0D, 0x6F, 0xEB, 0xEF, 0x60, 0xA6, 0xB5, 0xE4,
 0x4C, 0xED, 0x4C, 0xEB, 0xEC, 0xEB, 0x04, 0x6F,
 0xED, 0xEB, 0x4C, 0xEB, 0x10, 0xF0, 0x24, 0x6A,
-0x60, 0xC6, 0xD5, 0xF2, 0x58, 0x9A, 0x0B, 0x10,
+0x60, 0xC6, 0x15, 0xF2, 0x5C, 0x9A, 0x0B, 0x10,
 0xB5, 0xE4, 0x4C, 0xED, 0x10, 0xF0, 0x24, 0x6A,
-0xD5, 0xF2, 0x58, 0x9A, 0xA0, 0xC2, 0x10, 0xF0,
-0x24, 0x6A, 0xF5, 0xF2, 0x4C, 0x9A, 0xA0, 0xC2,
+0x15, 0xF2, 0x5C, 0x9A, 0xA0, 0xC2, 0x10, 0xF0,
+0x24, 0x6A, 0x35, 0xF2, 0x50, 0x9A, 0xA0, 0xC2,
 0x20, 0xE8, 0x00, 0x65, 0xFD, 0x63, 0x05, 0x62,
 0x04, 0xD0, 0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1,
 0x08, 0x4A, 0x28, 0xF1, 0x74, 0xA2, 0x02, 0x6C,
@@ -4619,15 +4618,15 @@ u8 array_mp_8821c_fw_ap[] = {
 0x20, 0x68, 0x2F, 0xF5, 0x18, 0x48, 0xC0, 0xF1,
 0x64, 0xA0, 0x02, 0x6A, 0x4B, 0xEA, 0x6C, 0xEA,
 0xC0, 0xF1, 0x44, 0xC0, 0x10, 0xF0, 0x24, 0x6A,
-0x35, 0xF2, 0xBC, 0x9A, 0x01, 0x6C, 0x00, 0x18,
-0xC9, 0xDC, 0x10, 0xF0, 0x24, 0x6A, 0xF5, 0xF2,
-0x44, 0x9A, 0x10, 0xF0, 0x24, 0x6D, 0xD5, 0xF2,
-0xB8, 0x9D, 0x80, 0x9A, 0xE1, 0xF7, 0x1F, 0x6B,
+0x95, 0xF1, 0xA0, 0x9A, 0x01, 0x6C, 0x00, 0x18,
+0xA1, 0xDC, 0x10, 0xF0, 0x24, 0x6A, 0x35, 0xF2,
+0x48, 0x9A, 0x10, 0xF0, 0x24, 0x6D, 0x15, 0xF2,
+0xBC, 0x9D, 0x80, 0x9A, 0xE1, 0xF7, 0x1F, 0x6B,
 0x6C, 0xEC, 0x80, 0xCD, 0x80, 0x9A, 0x10, 0xF0,
-0x24, 0x6D, 0xD5, 0xF2, 0xB4, 0x9D, 0x6C, 0xEC,
+0x24, 0x6D, 0x15, 0xF2, 0xB8, 0x9D, 0x6C, 0xEC,
 0x80, 0xCD, 0x40, 0x9A, 0x42, 0x32, 0x42, 0x32,
-0x6C, 0xEA, 0x10, 0xF0, 0x24, 0x6B, 0xF5, 0xF2,
-0x6C, 0x9B, 0x40, 0xCB, 0x00, 0x6A, 0xC0, 0xF1,
+0x6C, 0xEA, 0x10, 0xF0, 0x24, 0x6B, 0x35, 0xF2,
+0x70, 0x9B, 0x40, 0xCB, 0x00, 0x6A, 0xC0, 0xF1,
 0x54, 0xC8, 0x05, 0x97, 0x04, 0x90, 0x03, 0x63,
 0x00, 0xEF, 0x00, 0x65, 0xE5, 0x63, 0x35, 0x62,
 0x34, 0xD1, 0x33, 0xD0, 0x30, 0xF0, 0x20, 0x6A,
@@ -4651,20 +4650,20 @@ u8 array_mp_8821c_fw_ap[] = {
 0x52, 0xA2, 0x20, 0xF0, 0x74, 0xC4, 0x0C, 0x03,
 0x69, 0xE2, 0x03, 0x10, 0x01, 0x6C, 0x80, 0xC3,
 0x01, 0x4B, 0x4A, 0xEB, 0xFB, 0x61, 0x10, 0xF0,
-0x24, 0x6A, 0xF5, 0xF2, 0x44, 0x9A, 0xE1, 0xF7,
+0x24, 0x6A, 0x35, 0xF2, 0x48, 0x9A, 0xE1, 0xF7,
 0x1F, 0x6E, 0xFF, 0xF7, 0x1F, 0x68, 0x40, 0xAA,
 0x1A, 0x05, 0x10, 0x04, 0x4C, 0xEE, 0x10, 0xF0,
-0x24, 0x6A, 0xF5, 0xF2, 0x5C, 0x9A, 0x15, 0x03,
+0x24, 0x6A, 0x55, 0xF2, 0x40, 0x9A, 0x15, 0x03,
 0x40, 0xAA, 0x2E, 0xD6, 0x4C, 0xE8, 0x30, 0xF0,
 0x20, 0x6A, 0x0F, 0xF7, 0x4A, 0xA2, 0x2C, 0xD2,
 0x00, 0x6A, 0x1F, 0x10, 0xDD, 0x67, 0x5D, 0xE6,
 0x2E, 0x91, 0xF8, 0xA7, 0x59, 0xE6, 0x01, 0x4A,
-0xFD, 0xE1, 0x10, 0xF0, 0x24, 0x69, 0x15, 0xF3,
-0x20, 0x99, 0xFC, 0x37, 0xE0, 0xDD, 0xE5, 0xE1,
+0xFD, 0xE1, 0x10, 0xF0, 0x24, 0x69, 0x55, 0xF2,
+0x24, 0x99, 0xFC, 0x37, 0xE0, 0xDD, 0xE5, 0xE1,
 0x20, 0xA1, 0x04, 0x4D, 0x30, 0xC6, 0x10, 0xF0,
-0x24, 0x69, 0x15, 0xF3, 0x24, 0x99, 0x25, 0xE7,
-0x20, 0xDC, 0x10, 0xF0, 0x24, 0x69, 0x15, 0xF3,
-0x28, 0x99, 0x04, 0x4C, 0x3D, 0xE7, 0xE0, 0xDB,
+0x24, 0x69, 0x55, 0xF2, 0x28, 0x99, 0x25, 0xE7,
+0x20, 0xDC, 0x10, 0xF0, 0x24, 0x69, 0x55, 0xF2,
+0x2C, 0x99, 0x04, 0x4C, 0x3D, 0xE7, 0xE0, 0xDB,
 0x04, 0x4B, 0x2C, 0x96, 0xFF, 0x6F, 0x4C, 0xEF,
 0xC3, 0xEF, 0xDC, 0x61, 0x00, 0x69, 0x2F, 0xD1,
 0x4F, 0x12, 0x7D, 0x67, 0x00, 0x6A, 0x30, 0xF0,
@@ -4738,41 +4737,41 @@ u8 array_mp_8821c_fw_ap[] = {
 0x53, 0x22, 0x08, 0x10, 0xE0, 0xF3, 0x09, 0x72,
 0x0F, 0x60, 0x01, 0x4A, 0xFF, 0xF7, 0x1F, 0x6B,
 0x6C, 0xEA, 0x01, 0x10, 0x00, 0x6A, 0x10, 0xF0,
-0x24, 0x6B, 0x15, 0xF3, 0x6C, 0x9B, 0x02, 0xF0,
+0x24, 0x6B, 0x55, 0xF2, 0x70, 0x9B, 0x02, 0xF0,
 0x00, 0x6C, 0x60, 0x9B, 0x8C, 0xEB, 0xEE, 0x2B,
-0x10, 0xF0, 0x24, 0x6A, 0x15, 0xF3, 0x4C, 0x9A,
+0x10, 0xF0, 0x24, 0x6A, 0x55, 0xF2, 0x50, 0x9A,
 0x02, 0xF0, 0x00, 0x6B, 0x40, 0x9A, 0x6C, 0xEA,
 0x37, 0x2A, 0xBD, 0x67, 0x2D, 0xE5, 0x30, 0xF0,
 0x20, 0x6A, 0x98, 0xA3, 0x6E, 0xF2, 0x5C, 0x9A,
 0x01, 0x6D, 0x08, 0x6E, 0x00, 0x6F, 0x40, 0xEA,
 0xFF, 0xF7, 0x1F, 0x6C, 0x4C, 0xEC, 0x10, 0xF0,
-0x24, 0x6A, 0xF5, 0xF2, 0x58, 0x9A, 0x10, 0xF0,
-0x24, 0x6B, 0xF5, 0xF2, 0x74, 0x9B, 0x51, 0xE4,
-0x10, 0xF0, 0x24, 0x6A, 0x30, 0x95, 0x15, 0xF3,
-0x50, 0x9A, 0x6D, 0xE0, 0x18, 0x4D, 0x49, 0xE0,
+0x24, 0x6A, 0x35, 0xF2, 0x5C, 0x9A, 0x10, 0xF0,
+0x24, 0x6B, 0x35, 0xF2, 0x78, 0x9B, 0x51, 0xE4,
+0x10, 0xF0, 0x24, 0x6A, 0x30, 0x95, 0x55, 0xF2,
+0x54, 0x9A, 0x6D, 0xE0, 0x18, 0x4D, 0x49, 0xE0,
 0xAD, 0xE3, 0xB5, 0xE2, 0x40, 0xA3, 0xFF, 0x6E,
 0x01, 0x4B, 0xCC, 0xEA, 0xAA, 0xEB, 0x40, 0xC4,
 0x01, 0x4C, 0xF8, 0x61, 0x30, 0xF0, 0x20, 0x6A,
 0x8E, 0xF2, 0x5C, 0x9A, 0x40, 0xEA, 0x20, 0x6B,
 0x4D, 0xEB, 0xFF, 0x6A, 0x4C, 0xEB, 0x10, 0xF0,
-0x24, 0x6A, 0x15, 0xF3, 0x54, 0x9A, 0x60, 0xC2,
+0x24, 0x6A, 0x55, 0xF2, 0x58, 0x9A, 0x60, 0xC2,
 0x01, 0x49, 0xFF, 0x6A, 0x4C, 0xE9, 0x30, 0xF0,
 0x20, 0x6A, 0x2F, 0xF5, 0x18, 0x4A, 0xC0, 0xF1,
 0x72, 0xA2, 0x63, 0xE9, 0x92, 0x61, 0x30, 0xF0,
 0x20, 0x6A, 0x0E, 0xF5, 0x40, 0x9A, 0x2C, 0x94,
-0x40, 0xEA, 0x10, 0xF0, 0x24, 0x6A, 0x15, 0xF3,
-0x58, 0x9A, 0x23, 0x6B, 0x6B, 0xEB, 0x60, 0xC2,
+0x40, 0xEA, 0x10, 0xF0, 0x24, 0x6A, 0x55, 0xF2,
+0x5C, 0x9A, 0x23, 0x6B, 0x6B, 0xEB, 0x60, 0xC2,
 0xD2, 0x10, 0x31, 0x94, 0x40, 0x6A, 0x4B, 0xEA,
 0x8C, 0xEA, 0x6C, 0xEA, 0x07, 0x22, 0x30, 0xF0,
 0x20, 0x6A, 0x0E, 0xF5, 0x40, 0x9A, 0x2C, 0x94,
 0x40, 0xEA, 0xC5, 0x10, 0x10, 0xF0, 0x24, 0x6A,
-0x15, 0xF3, 0x5C, 0x9A, 0x2D, 0x95, 0x49, 0xE0,
+0x75, 0xF2, 0x40, 0x9A, 0x2D, 0x95, 0x49, 0xE0,
 0xA9, 0xE2, 0x80, 0xA2, 0x10, 0xF0, 0x24, 0x6A,
-0x35, 0xF3, 0x40, 0x9A, 0x6C, 0xEC, 0x80, 0xC2,
-0x10, 0xF0, 0x24, 0x6A, 0x35, 0xF3, 0x44, 0x9A,
+0x75, 0xF2, 0x44, 0x9A, 0x6C, 0xEC, 0x80, 0xC2,
+0x10, 0xF0, 0x24, 0x6A, 0x75, 0xF2, 0x48, 0x9A,
 0x15, 0x04, 0x49, 0xE0, 0xA9, 0xE2, 0x40, 0xA2,
-0x4C, 0xEB, 0x10, 0xF0, 0x24, 0x6A, 0x35, 0xF3,
-0x48, 0x9A, 0x60, 0xC2, 0x30, 0xF0, 0x20, 0x6B,
+0x4C, 0xEB, 0x10, 0xF0, 0x24, 0x6A, 0x75, 0xF2,
+0x4C, 0x9A, 0x60, 0xC2, 0x30, 0xF0, 0x20, 0x6B,
 0x0F, 0xF7, 0x6A, 0xA3, 0x0C, 0x02, 0x4D, 0xE3,
 0x1B, 0x65, 0x12, 0x10, 0xC0, 0xA3, 0xFE, 0x65,
 0x3F, 0x67, 0xFF, 0x6E, 0x2C, 0xEE, 0x20, 0xA5,
@@ -4786,13 +4785,13 @@ u8 array_mp_8821c_fw_ap[] = {
 0x0A, 0x60, 0x20, 0xF0, 0x53, 0xA4, 0x01, 0x72,
 0x06, 0x60, 0x20, 0xF0, 0x54, 0xA4, 0x01, 0x72,
 0x02, 0x60, 0x2F, 0x95, 0x55, 0x25, 0x00, 0x18,
-0x80, 0xC4, 0x10, 0xF0, 0x24, 0x6A, 0x35, 0xF3,
-0x4C, 0x9A, 0x66, 0x68, 0x00, 0x6C, 0x00, 0xC2,
+0x80, 0xC4, 0x10, 0xF0, 0x24, 0x6A, 0x75, 0xF2,
+0x50, 0x9A, 0x66, 0x68, 0x00, 0x6C, 0x00, 0xC2,
 0x80, 0x18, 0x55, 0x07, 0x10, 0xF0, 0x24, 0x6A,
-0x35, 0xF3, 0x50, 0x9A, 0x01, 0x6E, 0x00, 0xC2,
+0x75, 0xF2, 0x54, 0x9A, 0x01, 0x6E, 0x00, 0xC2,
 0x30, 0xF0, 0x20, 0x6A, 0x2F, 0xF7, 0x42, 0xA2,
 0x2F, 0xD6, 0x5D, 0x22, 0x10, 0xF0, 0x24, 0x6A,
-0x35, 0xF2, 0x74, 0x9A, 0xFF, 0x6C, 0x01, 0x4C,
+0x75, 0xF1, 0x78, 0x9A, 0xFF, 0x6C, 0x01, 0x4C,
 0x40, 0x9B, 0x8C, 0xEA, 0x01, 0x22, 0x80, 0xDB,
 0x30, 0xF0, 0x20, 0x6A, 0x4E, 0xF2, 0x54, 0x9A,
 0xFF, 0x68, 0x01, 0x48, 0x00, 0x6C, 0xB0, 0x67,
@@ -4803,7 +4802,7 @@ u8 array_mp_8821c_fw_ap[] = {
 0x01, 0x69, 0x40, 0xEA, 0x2F, 0xD1, 0x37, 0x10,
 0xE0, 0xF1, 0xCC, 0xA2, 0x09, 0x26, 0x42, 0xF1,
 0x1C, 0x6C, 0x01, 0x6D, 0xC4, 0x36, 0x00, 0x18,
-0x40, 0xDC, 0x01, 0x6A, 0x2F, 0xD2, 0x2B, 0x10,
+0x18, 0xDC, 0x01, 0x6A, 0x2F, 0xD2, 0x2B, 0x10,
 0x30, 0xF0, 0x20, 0x6A, 0xAE, 0xF2, 0x50, 0x9A,
 0x42, 0xF1, 0x1C, 0x6C, 0x01, 0x6D, 0xD0, 0x67,
 0x40, 0xEA, 0x01, 0x6B, 0x2F, 0xD3, 0x1F, 0x10,
@@ -4815,45 +4814,45 @@ u8 array_mp_8821c_fw_ap[] = {
 0x01, 0x4A, 0x6A, 0xEA, 0xFB, 0x61, 0x30, 0xF0,
 0x20, 0x6A, 0x0E, 0xF5, 0x40, 0x9A, 0x2C, 0x94,
 0x40, 0xEA, 0x00, 0x6D, 0x2F, 0xD5, 0x2C, 0x90,
-0x10, 0xF0, 0x24, 0x6A, 0x15, 0xF2, 0x4C, 0x9A,
+0x10, 0xF0, 0x24, 0x6A, 0x55, 0xF1, 0x50, 0x9A,
 0x40, 0xA2, 0x1B, 0x22, 0x30, 0xF0, 0x20, 0x6A,
 0xEF, 0xF6, 0x7C, 0xA2, 0x01, 0x6A, 0xFF, 0x6E,
 0x6C, 0xEA, 0xCC, 0xEA, 0xBF, 0xF5, 0x01, 0x2A,
 0x10, 0x10, 0x10, 0xF0, 0x24, 0x6B, 0x10, 0xF0,
-0x24, 0x6F, 0xF5, 0xF2, 0x70, 0x9B, 0x30, 0x96,
-0xF5, 0xF2, 0xF4, 0x9F, 0x6D, 0xE0, 0x18, 0x4E,
+0x24, 0x6F, 0x35, 0xF2, 0x74, 0x9B, 0x30, 0x96,
+0x35, 0xF2, 0xF8, 0x9F, 0x6D, 0xE0, 0x18, 0x4E,
 0xFD, 0xE0, 0xCD, 0xE3, 0xA0, 0x9C, 0xDD, 0xE7,
 0x3D, 0x17, 0x35, 0x97, 0x34, 0x91, 0x33, 0x90,
 0x1B, 0x63, 0x00, 0xEF, 0xFD, 0x63, 0x05, 0x62,
-0x04, 0xD0, 0x10, 0xF0, 0x24, 0x6A, 0x35, 0xF3,
-0x54, 0x9A, 0x10, 0xF0, 0x24, 0x6B, 0x35, 0xF3,
-0x78, 0x9B, 0x40, 0x9A, 0x10, 0xF0, 0x24, 0x6C,
-0x55, 0xF2, 0x84, 0x9C, 0x6C, 0xEA, 0x30, 0xF0,
+0x04, 0xD0, 0x10, 0xF0, 0x24, 0x6A, 0x75, 0xF2,
+0x58, 0x9A, 0x10, 0xF0, 0x24, 0x6B, 0x75, 0xF2,
+0x7C, 0x9B, 0x40, 0x9A, 0x10, 0xF0, 0x24, 0x6C,
+0x95, 0xF1, 0x88, 0x9C, 0x6C, 0xEA, 0x30, 0xF0,
 0x20, 0x6B, 0xA8, 0xF4, 0x4C, 0xDB, 0x10, 0xF0,
-0x24, 0x6A, 0x35, 0xF3, 0x7C, 0x9A, 0x30, 0xF0,
+0x24, 0x6A, 0x95, 0xF2, 0x60, 0x9A, 0x30, 0xF0,
 0x20, 0x68, 0x2F, 0xF5, 0x18, 0x48, 0x40, 0x9B,
 0x8D, 0xEA, 0x40, 0xDB, 0xC0, 0xF1, 0x64, 0xA0,
 0x01, 0x6A, 0x01, 0x6C, 0x6D, 0xEA, 0xC0, 0xF1,
-0x44, 0xC0, 0x10, 0xF0, 0x24, 0x6A, 0x35, 0xF2,
-0xBC, 0x9A, 0x00, 0x18, 0x98, 0xDC, 0x10, 0xF0,
-0x24, 0x6A, 0x55, 0xF3, 0x40, 0x9A, 0x10, 0xF0,
-0x24, 0x6C, 0x55, 0xF3, 0x88, 0x9C, 0x60, 0xA2,
+0x44, 0xC0, 0x10, 0xF0, 0x24, 0x6A, 0x95, 0xF1,
+0xA0, 0x9A, 0x00, 0x18, 0x70, 0xDC, 0x10, 0xF0,
+0x24, 0x6A, 0x95, 0xF2, 0x44, 0x9A, 0x10, 0xF0,
+0x24, 0x6C, 0x95, 0xF2, 0x8C, 0x9C, 0x60, 0xA2,
 0x07, 0x6A, 0x6C, 0xEA, 0x01, 0x4A, 0xC0, 0xF1,
 0x52, 0xC0, 0x00, 0x6A, 0xC0, 0xF1, 0x54, 0xC8,
-0x10, 0xF0, 0x24, 0x6A, 0x55, 0xF3, 0x64, 0x9A,
+0x10, 0xF0, 0x24, 0x6A, 0x95, 0xF2, 0x68, 0x9A,
 0x40, 0x9B, 0x8C, 0xEA, 0x40, 0xDB, 0x05, 0x97,
 0x04, 0x90, 0x03, 0x63, 0x00, 0xEF, 0x00, 0x65,
 0xFC, 0x63, 0x07, 0x62, 0x06, 0xD1, 0x05, 0xD0,
 0x60, 0xA4, 0x01, 0x6A, 0x04, 0x67, 0x6C, 0xEA,
 0x0B, 0x22, 0x00, 0x18, 0x23, 0xC6, 0x10, 0xF0,
-0x24, 0x6A, 0x35, 0xF3, 0x4C, 0x9A, 0x00, 0x6B,
-0x60, 0xC2, 0x00, 0x18, 0xE3, 0xE8, 0x1B, 0x10,
+0x24, 0x6A, 0x75, 0xF2, 0x50, 0x9A, 0x00, 0x6B,
+0x60, 0xC2, 0x00, 0x18, 0xB4, 0xE8, 0x1B, 0x10,
 0x30, 0xF0, 0x20, 0x6A, 0x2F, 0xF7, 0x42, 0xA2,
 0x14, 0x22, 0xFF, 0x69, 0x01, 0x49, 0x00, 0x6C,
-0xB1, 0x67, 0x00, 0x18, 0x19, 0xDD, 0x10, 0xF0,
-0x24, 0x6A, 0x35, 0xF2, 0x74, 0x9A, 0x40, 0x9B,
+0xB1, 0x67, 0x00, 0x18, 0xF1, 0xDC, 0x10, 0xF0,
+0x24, 0x6A, 0x75, 0xF1, 0x78, 0x9A, 0x40, 0x9B,
 0x2C, 0xEA, 0x01, 0x22, 0x20, 0xDB, 0x10, 0xF0,
-0x24, 0x6A, 0x55, 0xF3, 0x4C, 0x9A, 0x00, 0x6B,
+0x24, 0x6A, 0x95, 0xF2, 0x50, 0x9A, 0x00, 0x6B,
 0x60, 0xC2, 0x00, 0x18, 0x80, 0xC4, 0x81, 0xA0,
 0x30, 0xF0, 0x20, 0x6A, 0x2F, 0xF5, 0x18, 0x4A,
 0x01, 0x69, 0xA4, 0x67, 0xC0, 0xF1, 0x85, 0xC2,
@@ -4870,22 +4869,22 @@ u8 array_mp_8821c_fw_ap[] = {
 0x07, 0x97, 0x06, 0x91, 0x05, 0x90, 0x04, 0x63,
 0x00, 0xEF, 0x00, 0x65, 0xFC, 0x63, 0x07, 0x62,
 0x06, 0xD1, 0x05, 0xD0, 0x10, 0xF0, 0x24, 0x6B,
-0x35, 0xF2, 0x1C, 0x4B, 0x30, 0xF0, 0x20, 0x69,
+0x95, 0xF1, 0x00, 0x4B, 0x30, 0xF0, 0x20, 0x69,
 0xFF, 0x68, 0xAC, 0xE8, 0xCE, 0xF4, 0x50, 0x99,
 0xA0, 0x9B, 0x82, 0xF0, 0x00, 0x6C, 0x01, 0x6E,
-0x40, 0xEA, 0x10, 0xF0, 0x24, 0x6B, 0x75, 0xF3,
-0xB8, 0x9B, 0xCE, 0xF4, 0x50, 0x99, 0x00, 0x6C,
+0x40, 0xEA, 0x10, 0xF0, 0x24, 0x6B, 0xB5, 0xF2,
+0xBC, 0x9B, 0xCE, 0xF4, 0x50, 0x99, 0x00, 0x6C,
 0x01, 0x6E, 0x40, 0xEA, 0x01, 0x6D, 0xA1, 0xF4,
-0x18, 0x6C, 0xAB, 0xED, 0x00, 0x18, 0x34, 0xE1,
+0x18, 0x6C, 0xAB, 0xED, 0x00, 0x18, 0x05, 0xE1,
 0x01, 0x70, 0x0F, 0x60, 0x03, 0x20, 0x02, 0x70,
 0x16, 0x60, 0x1F, 0x10, 0x10, 0xF0, 0x24, 0x6B,
-0x35, 0xF2, 0x1C, 0x4B, 0x60, 0x9B, 0x6D, 0xEA,
-0x10, 0xF0, 0x24, 0x6B, 0x55, 0xF5, 0x60, 0x9B,
-0x13, 0x10, 0x10, 0xF0, 0x24, 0x6B, 0x55, 0xF5,
-0x64, 0x9B, 0x6D, 0xEA, 0x10, 0xF0, 0x24, 0x6B,
-0x55, 0xF5, 0x68, 0x9B, 0x09, 0x10, 0x10, 0xF0,
-0x24, 0x6B, 0x55, 0xF5, 0x6C, 0x9B, 0x6D, 0xEA,
-0x10, 0xF0, 0x24, 0x6B, 0x55, 0xF5, 0x70, 0x9B,
+0x95, 0xF1, 0x00, 0x4B, 0x60, 0x9B, 0x6D, 0xEA,
+0x10, 0xF0, 0x24, 0x6B, 0x95, 0xF4, 0x64, 0x9B,
+0x13, 0x10, 0x10, 0xF0, 0x24, 0x6B, 0x95, 0xF4,
+0x68, 0x9B, 0x6D, 0xEA, 0x10, 0xF0, 0x24, 0x6B,
+0x95, 0xF4, 0x6C, 0x9B, 0x09, 0x10, 0x10, 0xF0,
+0x24, 0x6B, 0x95, 0xF4, 0x70, 0x9B, 0x6D, 0xEA,
+0x10, 0xF0, 0x24, 0x6B, 0x95, 0xF4, 0x74, 0x9B,
 0x6C, 0xEA, 0x30, 0xF0, 0x20, 0x6B, 0xCE, 0xF4,
 0x70, 0x9B, 0x01, 0x6D, 0xA1, 0xF4, 0x18, 0x6C,
 0xAB, 0xED, 0xC2, 0x67, 0x40, 0xEB, 0x07, 0x97,
@@ -4915,24 +4914,24 @@ u8 array_mp_8821c_fw_ap[] = {
 0x40, 0xEA, 0xCE, 0xF2, 0x44, 0x99, 0x0A, 0x94,
 0x09, 0x95, 0x0B, 0x96, 0x02, 0x6F, 0x40, 0xEA,
 0x0F, 0x58, 0x08, 0x60, 0x10, 0xF0, 0x24, 0x6A,
-0x08, 0x33, 0x35, 0xF0, 0x08, 0x4A, 0x69, 0xE2,
+0x08, 0x33, 0x74, 0xF7, 0x0C, 0x4A, 0x69, 0xE2,
 0x40, 0x9A, 0x00, 0xEA, 0x00, 0x6A, 0x44, 0x10,
 0xD0, 0xF4, 0x44, 0x40, 0x1F, 0xF7, 0x00, 0x6B,
 0x6C, 0xEA, 0x05, 0x2A, 0x10, 0xF0, 0x24, 0x6A,
-0x15, 0xF6, 0x50, 0x9A, 0x34, 0x10, 0x10, 0xF0,
-0x24, 0x6A, 0x15, 0xF6, 0x54, 0x9A, 0x2F, 0x10,
+0x55, 0xF5, 0x54, 0x9A, 0x34, 0x10, 0x10, 0xF0,
+0x24, 0x6A, 0x55, 0xF5, 0x58, 0x9A, 0x2F, 0x10,
 0x80, 0xF4, 0x44, 0x40, 0x1F, 0xF7, 0x00, 0x6B,
 0x6C, 0xEA, 0x05, 0x2A, 0x10, 0xF0, 0x24, 0x6A,
-0x15, 0xF6, 0x58, 0x9A, 0x24, 0x10, 0x10, 0xF0,
-0x24, 0x6A, 0x15, 0xF6, 0x5C, 0x9A, 0x1F, 0x10,
+0x55, 0xF5, 0x5C, 0x9A, 0x24, 0x10, 0x10, 0xF0,
+0x24, 0x6A, 0x75, 0xF5, 0x40, 0x9A, 0x1F, 0x10,
 0xC0, 0xF4, 0x48, 0x40, 0x1F, 0xF7, 0x00, 0x6B,
 0x6C, 0xEA, 0x05, 0x2A, 0x10, 0xF0, 0x24, 0x6A,
-0x35, 0xF6, 0x40, 0x9A, 0x14, 0x10, 0x10, 0xF0,
-0x24, 0x6A, 0x35, 0xF6, 0x44, 0x9A, 0x0F, 0x10,
+0x75, 0xF5, 0x44, 0x9A, 0x14, 0x10, 0x10, 0xF0,
+0x24, 0x6A, 0x75, 0xF5, 0x48, 0x9A, 0x0F, 0x10,
 0x70, 0xF4, 0x48, 0x40, 0x1F, 0xF7, 0x00, 0x6B,
 0x6C, 0xEA, 0x05, 0x2A, 0x10, 0xF0, 0x24, 0x6A,
-0x35, 0xF6, 0x48, 0x9A, 0x04, 0x10, 0x10, 0xF0,
-0x24, 0x6A, 0x35, 0xF6, 0x4C, 0x9A, 0x49, 0xE0,
+0x75, 0xF5, 0x4C, 0x9A, 0x04, 0x10, 0x10, 0xF0,
+0x24, 0x6A, 0x75, 0xF5, 0x50, 0x9A, 0x49, 0xE0,
 0x60, 0xAA, 0xFF, 0xF7, 0x1F, 0x6A, 0x6C, 0xEA,
 0x7D, 0x67, 0x53, 0xC3, 0x42, 0x32, 0x54, 0xC3,
 0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A,
@@ -4957,7 +4956,7 @@ u8 array_mp_8821c_fw_ap[] = {
 0x58, 0x9A, 0x90, 0x67, 0xB1, 0x67, 0x53, 0x6E,
 0x40, 0xEA, 0x7D, 0x67, 0x20, 0x6A, 0x50, 0xC3,
 0x03, 0x6A, 0x4F, 0xCB, 0x10, 0xF0, 0x24, 0x6A,
-0x35, 0xF2, 0x58, 0x9A, 0x9D, 0x67, 0x40, 0xA2,
+0x75, 0xF1, 0x5C, 0x9A, 0x9D, 0x67, 0x40, 0xA2,
 0x52, 0xC3, 0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1,
 0x08, 0x4A, 0x2C, 0xF7, 0x7E, 0xA2, 0x2C, 0xF7,
 0x5F, 0xA2, 0x73, 0xC4, 0x54, 0xC4, 0x30, 0xF0,
@@ -4987,17 +4986,17 @@ u8 array_mp_8821c_fw_ap[] = {
 0xB8, 0xA3, 0x4C, 0xEC, 0x84, 0x34, 0xBA, 0x35,
 0x8D, 0xEF, 0x4E, 0xED, 0x86, 0x67, 0x0C, 0xEC,
 0x4C, 0xED, 0x0C, 0xF5, 0xF9, 0xC3, 0x00, 0x18,
-0xA7, 0xDB, 0x07, 0x97, 0x06, 0x91, 0x05, 0x90,
+0x7F, 0xDB, 0x07, 0x97, 0x06, 0x91, 0x05, 0x90,
 0x04, 0x63, 0x00, 0xEF, 0xFC, 0x63, 0x07, 0x62,
 0x30, 0xF0, 0x20, 0x6A, 0x4E, 0xF2, 0x50, 0x9A,
 0xA4, 0x67, 0x30, 0xF0, 0x20, 0x6C, 0x2F, 0xF7,
 0x13, 0x4C, 0x07, 0x6E, 0x40, 0xEA, 0x30, 0xF0,
 0x20, 0x6A, 0x2F, 0xF7, 0x53, 0xA2, 0x05, 0x5A,
 0x13, 0x60, 0x10, 0xF0, 0x24, 0x6B, 0x48, 0x32,
-0x95, 0xF0, 0x14, 0x4B, 0x4D, 0xE3, 0x40, 0x9B,
+0xD4, 0xF7, 0x18, 0x4B, 0x4D, 0xE3, 0x40, 0x9B,
 0x00, 0xEA, 0x00, 0x6C, 0x07, 0x10, 0x01, 0x6C,
 0x05, 0x10, 0x02, 0x6C, 0x03, 0x10, 0x03, 0x6C,
-0x01, 0x10, 0x04, 0x6C, 0x00, 0x18, 0xA1, 0xDD,
+0x01, 0x10, 0x04, 0x6C, 0x00, 0x18, 0x79, 0xDD,
 0x30, 0xF0, 0x20, 0x6B, 0xC0, 0xF1, 0x08, 0x4B,
 0x69, 0xF3, 0x48, 0xA3, 0x1F, 0x6C, 0x01, 0x6D,
 0x4A, 0x32, 0x8C, 0xEA, 0x30, 0xF0, 0x20, 0x6C,
@@ -5007,10 +5006,10 @@ u8 array_mp_8821c_fw_ap[] = {
 0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A,
 0x69, 0xF3, 0x88, 0xA2, 0x02, 0x6B, 0x8C, 0xEB,
 0x1C, 0x23, 0x03, 0x6B, 0x6B, 0xEB, 0x8C, 0xEB,
-0x69, 0xF3, 0x68, 0xC2, 0x00, 0x18, 0x1C, 0xE3,
+0x69, 0xF3, 0x68, 0xC2, 0x00, 0x18, 0xED, 0xE2,
 0x04, 0xD2, 0x30, 0xF0, 0x20, 0x6A, 0x04, 0x93,
 0xEF, 0xF5, 0x5C, 0x9A, 0x6E, 0xEA, 0x03, 0x22,
-0x04, 0x94, 0x00, 0x18, 0x3D, 0xE3, 0x30, 0xF0,
+0x04, 0x94, 0x00, 0x18, 0x0E, 0xE3, 0x30, 0xF0,
 0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A, 0x69, 0xF3,
 0x88, 0xA2, 0x02, 0x6B, 0x8D, 0xEB, 0x69, 0xF3,
 0x68, 0xC2, 0x07, 0x97, 0x04, 0x63, 0x00, 0xEF,
@@ -5026,22 +5025,22 @@ u8 array_mp_8821c_fw_ap[] = {
 0xED, 0xEB, 0xE0, 0xF1, 0x6E, 0xC2, 0xA0, 0xA4,
 0xAE, 0x35, 0xCC, 0xED, 0xAC, 0x36, 0x09, 0x6D,
 0xAB, 0xED, 0x6C, 0xED, 0x10, 0xF0, 0x24, 0x6B,
-0x55, 0xF3, 0x60, 0x9B, 0xCD, 0xED, 0xE0, 0xF1,
+0x95, 0xF2, 0x64, 0x9B, 0xCD, 0xED, 0xE0, 0xF1,
 0xAE, 0xC2, 0xA0, 0xA3, 0x07, 0x6B, 0xFF, 0x6E,
 0xAC, 0xEB, 0x0C, 0x23, 0x10, 0xF0, 0x24, 0x6B,
-0x55, 0xF6, 0x64, 0x9B, 0xA0, 0xA3, 0x61, 0xA4,
+0x95, 0xF5, 0x68, 0x9B, 0xA0, 0xA3, 0x61, 0xA4,
 0xAC, 0xEE, 0x7B, 0xE6, 0xE0, 0xF1, 0xD6, 0xC2,
 0x61, 0xA4, 0x14, 0x10, 0x10, 0xF0, 0x24, 0x6B,
-0xD5, 0xF1, 0x64, 0x9B, 0xA0, 0xA3, 0x61, 0xA4,
+0x15, 0xF1, 0x68, 0x9B, 0xA0, 0xA3, 0x61, 0xA4,
 0xAC, 0xEE, 0x77, 0xE6, 0x05, 0x6B, 0x7A, 0xED,
 0x01, 0x2B, 0xE5, 0xE8, 0x12, 0xED, 0xE0, 0xF1,
 0xB6, 0xC2, 0xA1, 0xA4, 0x7B, 0xED, 0x01, 0x2B,
 0xE5, 0xE8, 0x12, 0xEB, 0xE0, 0xF1, 0x77, 0xC2,
 0x00, 0xA4, 0x01, 0x69, 0x2C, 0xE8, 0x10, 0x28,
-0x00, 0x18, 0x4D, 0xE7, 0x30, 0xF0, 0x20, 0x6A,
+0x00, 0x18, 0x1E, 0xE7, 0x30, 0xF0, 0x20, 0x6A,
 0x6E, 0xF2, 0x58, 0x9A, 0x00, 0x6D, 0xFF, 0x6C,
 0xC5, 0x67, 0x40, 0xEA, 0x10, 0xF0, 0x24, 0x6A,
-0x35, 0xF2, 0x50, 0x9A, 0x00, 0xC2, 0x0D, 0x10,
+0x75, 0xF1, 0x54, 0x9A, 0x00, 0xC2, 0x0D, 0x10,
 0x01, 0x6C, 0x0C, 0x6D, 0x00, 0x18, 0x73, 0xC9,
 0x30, 0xF0, 0x20, 0x6A, 0x2F, 0xF5, 0x18, 0x4A,
 0xE0, 0xF1, 0x75, 0xA2, 0x6D, 0xE9, 0xE0, 0xF1,
@@ -5068,76 +5067,76 @@ u8 array_mp_8821c_fw_ap[] = {
 0x06, 0x91, 0x05, 0x90, 0x04, 0x63, 0x00, 0xEF,
 0xFD, 0x63, 0x05, 0x62, 0x04, 0xD0, 0xFF, 0x68,
 0x8C, 0xE8, 0x90, 0x67, 0x00, 0x18, 0xA8, 0xCB,
-0x90, 0x67, 0x00, 0x18, 0x50, 0xE6, 0x01, 0x6C,
+0x90, 0x67, 0x00, 0x18, 0x21, 0xE6, 0x01, 0x6C,
 0x00, 0x18, 0xBA, 0xCA, 0x05, 0x97, 0x04, 0x90,
 0x03, 0x63, 0x00, 0xEF, 0xFC, 0x63, 0x07, 0x62,
 0x06, 0xD1, 0x05, 0xD0, 0xFF, 0x6A, 0x27, 0x67,
 0x4C, 0xE9, 0x6F, 0x41, 0x4C, 0xEB, 0x04, 0x67,
 0x02, 0x5B, 0x4C, 0xE8, 0x4C, 0xED, 0x4C, 0xEE,
-0x03, 0x61, 0x90, 0x67, 0x00, 0x18, 0x81, 0xE2,
+0x03, 0x61, 0x90, 0x67, 0x00, 0x18, 0x52, 0xE2,
 0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A,
 0x49, 0xE0, 0x0C, 0xF7, 0x7E, 0xA2, 0x2C, 0xF7,
 0x4E, 0xA2, 0x10, 0x58, 0x6D, 0xEA, 0xFF, 0x6B,
 0x6C, 0xEA, 0x49, 0x60, 0x10, 0xF0, 0x24, 0x6B,
-0x08, 0x34, 0x15, 0xF1, 0x1C, 0x4B, 0x8D, 0xE3,
+0x08, 0x34, 0x75, 0xF0, 0x00, 0x4B, 0x8D, 0xE3,
 0x60, 0x9B, 0x00, 0xEB, 0xD0, 0xF4, 0x64, 0x40,
 0x1F, 0xF7, 0x00, 0x6C, 0x8C, 0xEB, 0x05, 0x2B,
-0x10, 0xF0, 0x24, 0x6B, 0x15, 0xF6, 0x70, 0x9B,
-0x34, 0x10, 0x10, 0xF0, 0x24, 0x6B, 0x15, 0xF6,
-0x74, 0x9B, 0x2F, 0x10, 0x80, 0xF4, 0x64, 0x40,
+0x10, 0xF0, 0x24, 0x6B, 0x55, 0xF5, 0x74, 0x9B,
+0x34, 0x10, 0x10, 0xF0, 0x24, 0x6B, 0x55, 0xF5,
+0x78, 0x9B, 0x2F, 0x10, 0x80, 0xF4, 0x64, 0x40,
 0x1F, 0xF7, 0x00, 0x6C, 0x8C, 0xEB, 0x05, 0x2B,
-0x10, 0xF0, 0x24, 0x6B, 0x15, 0xF6, 0x78, 0x9B,
-0x24, 0x10, 0x10, 0xF0, 0x24, 0x6B, 0x15, 0xF6,
-0x7C, 0x9B, 0x1F, 0x10, 0xC0, 0xF4, 0x68, 0x40,
+0x10, 0xF0, 0x24, 0x6B, 0x55, 0xF5, 0x7C, 0x9B,
+0x24, 0x10, 0x10, 0xF0, 0x24, 0x6B, 0x75, 0xF5,
+0x60, 0x9B, 0x1F, 0x10, 0xC0, 0xF4, 0x68, 0x40,
 0x1F, 0xF7, 0x00, 0x6C, 0x8C, 0xEB, 0x05, 0x2B,
-0x10, 0xF0, 0x24, 0x6B, 0x35, 0xF6, 0x60, 0x9B,
-0x14, 0x10, 0x10, 0xF0, 0x24, 0x6B, 0x35, 0xF6,
-0x64, 0x9B, 0x0F, 0x10, 0x70, 0xF4, 0x68, 0x40,
+0x10, 0xF0, 0x24, 0x6B, 0x75, 0xF5, 0x64, 0x9B,
+0x14, 0x10, 0x10, 0xF0, 0x24, 0x6B, 0x75, 0xF5,
+0x68, 0x9B, 0x0F, 0x10, 0x70, 0xF4, 0x68, 0x40,
 0x1F, 0xF7, 0x00, 0x6C, 0x8C, 0xEB, 0x05, 0x2B,
-0x10, 0xF0, 0x24, 0x6B, 0x35, 0xF6, 0x68, 0x9B,
-0x04, 0x10, 0x10, 0xF0, 0x24, 0x6B, 0x35, 0xF6,
-0x6C, 0x9B, 0x61, 0xE0, 0x40, 0xC0, 0x30, 0xF0,
+0x10, 0xF0, 0x24, 0x6B, 0x75, 0xF5, 0x6C, 0x9B,
+0x04, 0x10, 0x10, 0xF0, 0x24, 0x6B, 0x75, 0xF5,
+0x70, 0x9B, 0x61, 0xE0, 0x40, 0xC0, 0x30, 0xF0,
 0x20, 0x6A, 0xE8, 0xF2, 0x3B, 0xC2, 0x07, 0x97,
 0x06, 0x91, 0x05, 0x90, 0x04, 0x63, 0x00, 0xEF,
 0xFD, 0x63, 0x05, 0x62, 0x30, 0xF0, 0x20, 0x6A,
 0xAE, 0xF2, 0x4C, 0x9A, 0x42, 0xF1, 0x18, 0x6C,
 0x01, 0x6D, 0x02, 0x6E, 0x40, 0xEA, 0x05, 0x97,
 0x05, 0x6A, 0x03, 0x63, 0x00, 0xEF, 0x00, 0x65,
-0x10, 0xF0, 0x24, 0x6B, 0x95, 0xF1, 0x6C, 0x9B,
+0x10, 0xF0, 0x24, 0x6B, 0xD5, 0xF0, 0x70, 0x9B,
 0x10, 0xF0, 0x23, 0x6A, 0x44, 0xF1, 0x01, 0x4A,
 0x40, 0xDB, 0x01, 0x4A, 0x40, 0xDB, 0xF4, 0x17,
 0xFB, 0x63, 0x09, 0x62, 0x08, 0xD1, 0x07, 0xD0,
-0x10, 0xF0, 0x24, 0x6A, 0x95, 0xF1, 0x70, 0x9A,
-0x10, 0xF0, 0x24, 0x6A, 0x95, 0xF1, 0x4C, 0x9A,
+0x10, 0xF0, 0x24, 0x6A, 0xD5, 0xF0, 0x74, 0x9A,
+0x10, 0xF0, 0x24, 0x6A, 0xD5, 0xF0, 0x50, 0x9A,
 0x01, 0x6C, 0xA4, 0x67, 0x60, 0xDA, 0x00, 0x18,
 0xC7, 0xD0, 0x30, 0xF0, 0x20, 0x6A, 0x00, 0xF1,
 0x00, 0x4A, 0x10, 0xF0, 0x24, 0x6B, 0xEF, 0x9A,
-0x95, 0xF1, 0x74, 0x9B, 0x8C, 0x9A, 0xCE, 0x9A,
+0xD5, 0xF0, 0x78, 0x9B, 0x8C, 0x9A, 0xCE, 0x9A,
 0xAD, 0x9A, 0xE0, 0xDB, 0x10, 0xF0, 0x24, 0x6B,
-0x95, 0xF1, 0x78, 0x9B, 0x00, 0x68, 0xC0, 0xDB,
-0x10, 0xF0, 0x24, 0x6B, 0x95, 0xF1, 0x7C, 0x9B,
-0xA0, 0xDB, 0x10, 0xF0, 0x24, 0x6B, 0xB5, 0xF1,
-0x60, 0x9B, 0x80, 0xDB, 0x10, 0xF0, 0x24, 0x6B,
-0x89, 0x9A, 0xB5, 0xF1, 0x64, 0x9B, 0x80, 0xDB,
-0x68, 0x9A, 0x10, 0xF0, 0x24, 0x6A, 0xB5, 0xF1,
-0x48, 0x9A, 0x60, 0xDA, 0x30, 0xF0, 0x20, 0x6A,
+0xD5, 0xF0, 0x7C, 0x9B, 0x00, 0x68, 0xC0, 0xDB,
+0x10, 0xF0, 0x24, 0x6B, 0xF5, 0xF0, 0x60, 0x9B,
+0xA0, 0xDB, 0x10, 0xF0, 0x24, 0x6B, 0xF5, 0xF0,
+0x64, 0x9B, 0x80, 0xDB, 0x10, 0xF0, 0x24, 0x6B,
+0x89, 0x9A, 0xF5, 0xF0, 0x68, 0x9B, 0x80, 0xDB,
+0x68, 0x9A, 0x10, 0xF0, 0x24, 0x6A, 0xF5, 0xF0,
+0x4C, 0x9A, 0x60, 0xDA, 0x30, 0xF0, 0x20, 0x6A,
 0x60, 0xF1, 0x48, 0xAA, 0x0B, 0x10, 0x30, 0xF0,
 0x20, 0x6B, 0x08, 0x34, 0x2E, 0xF2, 0x0C, 0x4B,
 0x6D, 0xE4, 0x60, 0x9B, 0x05, 0x23, 0x01, 0x48,
 0xFF, 0x6B, 0x6C, 0xE8, 0x43, 0xE8, 0xF3, 0x61,
-0x10, 0xF0, 0x24, 0x6A, 0xB5, 0xF1, 0x6C, 0x9A,
+0x10, 0xF0, 0x24, 0x6A, 0xF5, 0xF0, 0x70, 0x9A,
 0x7F, 0x6A, 0x00, 0x69, 0x80, 0xA3, 0x20, 0xF0,
 0x20, 0x6D, 0x00, 0xF1, 0x00, 0x4D, 0x8C, 0xEA,
 0x40, 0xC3, 0x30, 0xF0, 0x20, 0x6B, 0xAE, 0xF2,
-0x40, 0x9B, 0x10, 0xF0, 0x24, 0x6B, 0xB5, 0xF1,
-0xD0, 0x9B, 0x91, 0x67, 0x48, 0x6F, 0x04, 0xD1,
+0x40, 0x9B, 0x10, 0xF0, 0x24, 0x6B, 0xF5, 0xF0,
+0xD4, 0x9B, 0x91, 0x67, 0x48, 0x6F, 0x04, 0xD1,
 0x05, 0xD1, 0x40, 0xEA, 0x30, 0xF0, 0x20, 0x6B,
 0xAE, 0xF2, 0x40, 0x9B, 0x10, 0xF0, 0x24, 0x6B,
-0xB5, 0xF1, 0xD4, 0x9B, 0x20, 0xF0, 0x20, 0x6D,
+0xF5, 0xF0, 0xD8, 0x9B, 0x20, 0xF0, 0x20, 0x6D,
 0x91, 0x67, 0xAD, 0xF1, 0x08, 0x4D, 0x00, 0xF4,
 0x00, 0x6F, 0x04, 0xD1, 0x05, 0xD1, 0x40, 0xEA,
 0x30, 0xF0, 0x20, 0x6B, 0xAE, 0xF2, 0x40, 0x9B,
-0x10, 0xF0, 0x24, 0x6B, 0xB5, 0xF1, 0xD8, 0x9B,
+0x10, 0xF0, 0x24, 0x6B, 0xF5, 0xF0, 0xDC, 0x9B,
 0x20, 0xF0, 0x21, 0x6D, 0x00, 0x37, 0x91, 0x67,
 0x15, 0xF0, 0x00, 0x4D, 0xE8, 0x37, 0x04, 0xD1,
 0x05, 0xD1, 0x40, 0xEA, 0x00, 0x1C, 0x96, 0x45,
@@ -5161,20 +5160,20 @@ u8 array_mp_8821c_fw_ap[] = {
 0x00, 0x6D, 0x6C, 0xED, 0x02, 0xF0, 0x00, 0x75,
 0x01, 0x60, 0x25, 0x2D, 0x1F, 0xF7, 0x00, 0x6A,
 0x6C, 0xEA, 0x02, 0xF0, 0x00, 0x72, 0x01, 0x60,
-0x07, 0x2A, 0x10, 0xF0, 0x24, 0x6A, 0xB5, 0xF1,
-0xBC, 0x9A, 0xB5, 0xE3, 0x60, 0xA5, 0x0B, 0x10,
-0x10, 0xF0, 0x24, 0x6A, 0xB5, 0xF1, 0xBC, 0x9A,
-0x10, 0xF0, 0x24, 0x6A, 0xD5, 0xF1, 0x40, 0x9A,
+0x07, 0x2A, 0x10, 0xF0, 0x24, 0x6A, 0x15, 0xF1,
+0xA0, 0x9A, 0xB5, 0xE3, 0x60, 0xA5, 0x0B, 0x10,
+0x10, 0xF0, 0x24, 0x6A, 0x15, 0xF1, 0xA0, 0x9A,
+0x10, 0xF0, 0x24, 0x6A, 0x15, 0xF1, 0x44, 0x9A,
 0xB5, 0xE3, 0x4D, 0xE3, 0x60, 0xA3, 0x01, 0x6A,
 0x00, 0xF6, 0x60, 0x33, 0x44, 0xEE, 0x00, 0xF6,
 0x63, 0x33, 0x4F, 0xEA, 0x6C, 0xEA, 0xFF, 0x6B,
 0x6C, 0xEA, 0x40, 0xC5, 0x0E, 0x10, 0x10, 0xF0,
-0x24, 0x6D, 0xD5, 0xF1, 0xA0, 0x9D, 0x0F, 0xE8,
+0x24, 0x6D, 0x15, 0xF1, 0xA4, 0x9D, 0x0F, 0xE8,
 0xAD, 0xE3, 0xA0, 0xA3, 0x00, 0xF6, 0xA0, 0x35,
 0x00, 0xF6, 0xA3, 0x35, 0x0C, 0xED, 0x4C, 0xED,
 0xA0, 0xC3, 0x30, 0xF0, 0x20, 0x6A, 0x2F, 0xF7,
 0x54, 0xA2, 0x4E, 0xEC, 0x52, 0x2C, 0x10, 0xF0,
-0x24, 0x6A, 0xD5, 0xF1, 0x44, 0x9A, 0x60, 0x9A,
+0x24, 0x6A, 0x15, 0xF1, 0x48, 0x9A, 0x60, 0x9A,
 0x30, 0xF0, 0x20, 0x6A, 0x70, 0x33, 0x00, 0xF5,
 0x62, 0x33, 0x48, 0xF5, 0x68, 0xCA, 0x45, 0x10,
 0x30, 0xF0, 0x20, 0x6C, 0xC0, 0xF1, 0x08, 0x4C,
@@ -5184,70 +5183,70 @@ u8 array_mp_8821c_fw_ap[] = {
 0x02, 0xF0, 0x00, 0x74, 0x01, 0x60, 0x24, 0x2C,
 0x1F, 0xF7, 0x00, 0x6A, 0x6C, 0xEA, 0x02, 0xF0,
 0x00, 0x72, 0x01, 0x60, 0x07, 0x2A, 0x10, 0xF0,
-0x24, 0x6A, 0xB5, 0xF1, 0x9C, 0x9A, 0x91, 0xE3,
+0x24, 0x6A, 0x15, 0xF1, 0x80, 0x9A, 0x91, 0xE3,
 0x60, 0xA4, 0x0B, 0x10, 0x10, 0xF0, 0x24, 0x6A,
-0xB5, 0xF1, 0x9C, 0x9A, 0x10, 0xF0, 0x24, 0x6A,
-0xD5, 0xF1, 0x40, 0x9A, 0x91, 0xE3, 0x4D, 0xE3,
+0x15, 0xF1, 0x80, 0x9A, 0x10, 0xF0, 0x24, 0x6A,
+0x15, 0xF1, 0x44, 0x9A, 0x91, 0xE3, 0x4D, 0xE3,
 0x60, 0xA3, 0x00, 0xF6, 0x60, 0x33, 0x01, 0x6A,
 0x00, 0xF6, 0x63, 0x33, 0x44, 0xEE, 0x6D, 0xEA,
 0xFF, 0x6B, 0x6C, 0xEA, 0x40, 0xC4, 0x0D, 0x10,
-0x10, 0xF0, 0x24, 0x6C, 0xD5, 0xF1, 0x80, 0x9C,
+0x10, 0xF0, 0x24, 0x6C, 0x15, 0xF1, 0x84, 0x9C,
 0x8D, 0xE3, 0x80, 0xA3, 0x00, 0xF6, 0x80, 0x34,
 0x00, 0xF6, 0x83, 0x34, 0xAD, 0xEC, 0x4C, 0xEC,
 0x80, 0xC3, 0x01, 0x90, 0x01, 0x63, 0x20, 0xE8,
 0xFF, 0x6A, 0x4C, 0xEC, 0x05, 0x5C, 0xAC, 0xEA,
 0x4B, 0x60, 0x10, 0xF0, 0x24, 0x6B, 0x88, 0x34,
-0xD4, 0xF4, 0x14, 0x4B, 0x8D, 0xE3, 0x60, 0x9B,
+0x14, 0xF4, 0x18, 0x4B, 0x8D, 0xE3, 0x60, 0x9B,
 0x00, 0xEB, 0x05, 0x22, 0x10, 0xF0, 0x24, 0x6A,
-0xD5, 0xF1, 0x68, 0x9A, 0x2D, 0x10, 0x10, 0xF0,
-0x24, 0x6A, 0xD5, 0xF1, 0x68, 0x9A, 0x20, 0x10,
-0x05, 0x22, 0x10, 0xF0, 0x24, 0x6A, 0xD5, 0xF1,
-0x6C, 0x9A, 0x22, 0x10, 0x10, 0xF0, 0x24, 0x6A,
-0xD5, 0xF1, 0x6C, 0x9A, 0x15, 0x10, 0x05, 0x22,
-0x10, 0xF0, 0x24, 0x6A, 0xD5, 0xF1, 0x70, 0x9A,
-0x17, 0x10, 0x10, 0xF0, 0x24, 0x6A, 0xD5, 0xF1,
-0x70, 0x9A, 0x0A, 0x10, 0x05, 0x22, 0x10, 0xF0,
-0x24, 0x6A, 0xD5, 0xF1, 0x74, 0x9A, 0x0C, 0x10,
-0x10, 0xF0, 0x24, 0x6A, 0xD5, 0xF1, 0x74, 0x9A,
+0x15, 0xF1, 0x6C, 0x9A, 0x2D, 0x10, 0x10, 0xF0,
+0x24, 0x6A, 0x15, 0xF1, 0x6C, 0x9A, 0x20, 0x10,
+0x05, 0x22, 0x10, 0xF0, 0x24, 0x6A, 0x15, 0xF1,
+0x70, 0x9A, 0x22, 0x10, 0x10, 0xF0, 0x24, 0x6A,
+0x15, 0xF1, 0x70, 0x9A, 0x15, 0x10, 0x05, 0x22,
+0x10, 0xF0, 0x24, 0x6A, 0x15, 0xF1, 0x74, 0x9A,
+0x17, 0x10, 0x10, 0xF0, 0x24, 0x6A, 0x15, 0xF1,
+0x74, 0x9A, 0x0A, 0x10, 0x05, 0x22, 0x10, 0xF0,
+0x24, 0x6A, 0x15, 0xF1, 0x78, 0x9A, 0x0C, 0x10,
+0x10, 0xF0, 0x24, 0x6A, 0x15, 0xF1, 0x78, 0x9A,
 0x80, 0xA3, 0xF7, 0x6A, 0x0A, 0x10, 0x0C, 0x22,
-0x10, 0xF0, 0x24, 0x6A, 0xD5, 0xF1, 0x78, 0x9A,
+0x10, 0xF0, 0x24, 0x6A, 0x15, 0xF1, 0x7C, 0x9A,
 0x40, 0xA3, 0xFF, 0x6C, 0x08, 0x6D, 0x8C, 0xEA,
 0xAD, 0xEA, 0x8C, 0xEA, 0x40, 0xC3, 0x20, 0xE8,
-0x10, 0xF0, 0x24, 0x6A, 0xD5, 0xF1, 0x78, 0x9A,
+0x10, 0xF0, 0x24, 0x6A, 0x15, 0xF1, 0x7C, 0x9A,
 0xF7, 0x6A, 0x80, 0xA3, 0x8C, 0xEA, 0x40, 0xC3,
 0x20, 0xE8, 0x00, 0x65, 0xFF, 0x6A, 0x4C, 0xEC,
 0x01, 0x6B, 0xAC, 0xEA, 0x6E, 0xEA, 0x01, 0x5A,
 0x58, 0x67, 0x05, 0x5C, 0x48, 0x32, 0x08, 0x60,
-0x10, 0xF0, 0x24, 0x6B, 0x88, 0x34, 0xF4, 0xF4,
-0x08, 0x4B, 0x8D, 0xE3, 0x60, 0x9B, 0x00, 0xEB,
+0x10, 0xF0, 0x24, 0x6B, 0x88, 0x34, 0x34, 0xF4,
+0x0C, 0x4B, 0x8D, 0xE3, 0x60, 0x9B, 0x00, 0xEB,
 0x01, 0x6A, 0x4B, 0xEA, 0x20, 0xE8, 0x10, 0xF0,
-0x24, 0x6B, 0xD5, 0xF1, 0x84, 0x9B, 0x10, 0xF0,
-0x24, 0x6D, 0xD5, 0xF1, 0xBC, 0x9D, 0x60, 0x9C,
+0x24, 0x6B, 0x15, 0xF1, 0x88, 0x9B, 0x10, 0xF0,
+0x24, 0x6D, 0x35, 0xF1, 0xA0, 0x9D, 0x60, 0x9C,
 0xAC, 0xEB, 0x1E, 0x10, 0x10, 0xF0, 0x24, 0x6B,
-0xD5, 0xF1, 0x84, 0x9B, 0x10, 0xF0, 0x24, 0x6D,
-0xD5, 0xF1, 0xBC, 0x9D, 0x60, 0x9C, 0xAC, 0xEB,
-0x10, 0xF0, 0x24, 0x6D, 0xF5, 0xF1, 0xA8, 0x9D,
-0x0E, 0x10, 0x10, 0xF0, 0x24, 0x6B, 0xD5, 0xF1,
-0x84, 0x9B, 0x10, 0xF0, 0x24, 0x6D, 0xD5, 0xF1,
-0xBC, 0x9D, 0x60, 0x9C, 0xAC, 0xEB, 0x10, 0xF0,
-0x24, 0x6D, 0xF5, 0xF1, 0xAC, 0x9D, 0xAD, 0xEB,
+0x15, 0xF1, 0x88, 0x9B, 0x10, 0xF0, 0x24, 0x6D,
+0x35, 0xF1, 0xA0, 0x9D, 0x60, 0x9C, 0xAC, 0xEB,
+0x10, 0xF0, 0x24, 0x6D, 0x35, 0xF1, 0xAC, 0x9D,
+0x0E, 0x10, 0x10, 0xF0, 0x24, 0x6B, 0x15, 0xF1,
+0x88, 0x9B, 0x10, 0xF0, 0x24, 0x6D, 0x35, 0xF1,
+0xA0, 0x9D, 0x60, 0x9C, 0xAC, 0xEB, 0x10, 0xF0,
+0x24, 0x6D, 0x35, 0xF1, 0xB0, 0x9D, 0xAD, 0xEB,
 0x60, 0xDC, 0x60, 0xF5, 0x60, 0x42, 0x1F, 0xF7,
 0x00, 0x6C, 0x8C, 0xEB, 0x02, 0xF0, 0x00, 0x73,
 0x10, 0x61, 0x2E, 0x10, 0x10, 0xF0, 0x24, 0x6B,
-0xD5, 0xF1, 0x84, 0x9B, 0x10, 0xF0, 0x24, 0x6D,
-0xD5, 0xF1, 0xBC, 0x9D, 0x60, 0x9C, 0xAC, 0xEB,
-0x10, 0xF0, 0x24, 0x6D, 0xF5, 0xF1, 0xB0, 0x9D,
+0x15, 0xF1, 0x88, 0x9B, 0x10, 0xF0, 0x24, 0x6D,
+0x35, 0xF1, 0xA0, 0x9D, 0x60, 0x9C, 0xAC, 0xEB,
+0x10, 0xF0, 0x24, 0x6D, 0x35, 0xF1, 0xB4, 0x9D,
 0xE6, 0x17, 0x1E, 0x23, 0x10, 0xF0, 0x24, 0x6B,
-0xF5, 0xF1, 0x64, 0x9B, 0x1D, 0x10, 0x10, 0xF0,
-0x24, 0x6B, 0xD5, 0xF1, 0x84, 0x9B, 0x10, 0xF0,
-0x24, 0x6D, 0xD5, 0xF1, 0xBC, 0x9D, 0x60, 0x9C,
-0xAC, 0xEB, 0x10, 0xF0, 0x24, 0x6D, 0xF5, 0xF1,
-0xB4, 0x9D, 0xAD, 0xEB, 0x60, 0xDC, 0x60, 0xF5,
+0x35, 0xF1, 0x68, 0x9B, 0x1D, 0x10, 0x10, 0xF0,
+0x24, 0x6B, 0x15, 0xF1, 0x88, 0x9B, 0x10, 0xF0,
+0x24, 0x6D, 0x35, 0xF1, 0xA0, 0x9D, 0x60, 0x9C,
+0xAC, 0xEB, 0x10, 0xF0, 0x24, 0x6D, 0x35, 0xF1,
+0xB8, 0x9D, 0xAD, 0xEB, 0x60, 0xDC, 0x60, 0xF5,
 0x60, 0x42, 0x1F, 0xF7, 0x00, 0x6C, 0x8C, 0xEB,
 0x02, 0xF0, 0x00, 0x73, 0x01, 0x60, 0x07, 0x2B,
-0x10, 0xF0, 0x24, 0x6B, 0xF5, 0xF1, 0x60, 0x9B,
+0x10, 0xF0, 0x24, 0x6B, 0x35, 0xF1, 0x64, 0x9B,
 0x69, 0xE2, 0x40, 0x9A, 0x20, 0xE8, 0x10, 0xF0,
-0x24, 0x6B, 0xF5, 0xF1, 0x64, 0x9B, 0x69, 0xE2,
+0x24, 0x6B, 0x35, 0xF1, 0x68, 0x9B, 0x69, 0xE2,
 0x40, 0x9A, 0x20, 0xE8, 0xFF, 0x6A, 0x4C, 0xEC,
 0x01, 0x74, 0xAC, 0xEA, 0x13, 0x60, 0x03, 0x24,
 0x02, 0x74, 0x15, 0x60, 0x18, 0x10, 0x30, 0xF0,
@@ -5257,21 +5256,21 @@ u8 array_mp_8821c_fw_ap[] = {
 0x59, 0xC3, 0x09, 0x10, 0x30, 0xF0, 0x20, 0x6B,
 0x48, 0xF5, 0x44, 0xC3, 0x04, 0x10, 0x30, 0xF0,
 0x20, 0x6B, 0x48, 0xF5, 0x40, 0xC3, 0x10, 0xF0,
-0x24, 0x6A, 0xF5, 0xF1, 0x58, 0x9A, 0x60, 0xA2,
+0x24, 0x6A, 0x35, 0xF1, 0x5C, 0x9A, 0x60, 0xA2,
 0x10, 0x6A, 0x6C, 0xEA, 0x24, 0x22, 0x02, 0x5C,
 0x03, 0x61, 0x02, 0x74, 0x17, 0x60, 0x20, 0xE8,
 0x30, 0xF0, 0x20, 0x6B, 0xC0, 0xF1, 0x08, 0x4B,
 0x68, 0xF3, 0x99, 0xA3, 0x01, 0x6A, 0x8C, 0xEA,
 0x68, 0xF3, 0x9C, 0xA3, 0x7F, 0x6B, 0x5C, 0x32,
 0x8C, 0xEB, 0x6D, 0xEA, 0xFF, 0x6B, 0x6C, 0xEA,
-0x10, 0xF0, 0x24, 0x6B, 0xF5, 0xF1, 0x7C, 0x9B,
+0x10, 0xF0, 0x24, 0x6B, 0x55, 0xF1, 0x60, 0x9B,
 0x40, 0xC3, 0x20, 0xE8, 0x30, 0xF0, 0x20, 0x6A,
 0x48, 0xF5, 0x60, 0xA2, 0x10, 0xF0, 0x24, 0x6A,
-0x15, 0xF2, 0x40, 0x9A, 0x60, 0xC2, 0x20, 0xE8,
-0x10, 0xF0, 0x24, 0x6A, 0x15, 0xF2, 0x44, 0x9A,
+0x55, 0xF1, 0x44, 0x9A, 0x60, 0xC2, 0x20, 0xE8,
+0x10, 0xF0, 0x24, 0x6A, 0x55, 0xF1, 0x48, 0x9A,
 0x60, 0xA2, 0xFF, 0x6A, 0x6C, 0xEA, 0xFF, 0x72,
 0x00, 0x6A, 0x0B, 0x61, 0x10, 0xF0, 0x24, 0x6A,
-0x15, 0xF2, 0x48, 0x9A, 0x60, 0xA2, 0x07, 0x6A,
+0x55, 0xF1, 0x4C, 0x9A, 0x60, 0xA2, 0x07, 0x6A,
 0x6C, 0xEA, 0x07, 0x6B, 0x6E, 0xEA, 0x01, 0x5A,
 0x58, 0x67, 0x20, 0xE8, 0xFF, 0x6A, 0x4C, 0xEC,
 0x01, 0x74, 0xAC, 0xEA, 0x03, 0x60, 0x02, 0x74,
@@ -5303,15 +5302,15 @@ u8 array_mp_8821c_fw_ap[] = {
 0x05, 0x23, 0xE8, 0xF3, 0x52, 0xA2, 0x01, 0x5A,
 0x58, 0x67, 0x01, 0x10, 0x00, 0x6A, 0x05, 0x97,
 0x03, 0x63, 0x00, 0xEF, 0xFD, 0x63, 0x05, 0x62,
-0x10, 0xF0, 0x24, 0x6A, 0x15, 0xF2, 0x4C, 0x9A,
+0x10, 0xF0, 0x24, 0x6A, 0x55, 0xF1, 0x50, 0x9A,
 0x40, 0xA2, 0x1E, 0x2A, 0x10, 0xF0, 0x24, 0x6A,
-0x15, 0xF2, 0x50, 0x9A, 0x40, 0xA2, 0x18, 0x2A,
-0x10, 0xF0, 0x24, 0x6A, 0x15, 0xF2, 0x54, 0x9A,
+0x55, 0xF1, 0x54, 0x9A, 0x40, 0xA2, 0x18, 0x2A,
+0x10, 0xF0, 0x24, 0x6A, 0x55, 0xF1, 0x58, 0x9A,
 0x60, 0xA2, 0x02, 0x6A, 0x6C, 0xEA, 0x10, 0x22,
 0x00, 0x18, 0x9A, 0xC9, 0x01, 0x72, 0x01, 0x6A,
-0x0C, 0x60, 0x10, 0xF0, 0x24, 0x6A, 0x15, 0xF2,
-0x78, 0x9A, 0x10, 0xF0, 0x24, 0x6C, 0x15, 0xF2,
-0x9C, 0x9C, 0x40, 0x9B, 0x8D, 0xEA, 0x40, 0xDB,
+0x0C, 0x60, 0x10, 0xF0, 0x24, 0x6A, 0x55, 0xF1,
+0x7C, 0x9A, 0x10, 0xF0, 0x24, 0x6C, 0x75, 0xF1,
+0x80, 0x9C, 0x40, 0x9B, 0x8D, 0xEA, 0x40, 0xDB,
 0x00, 0x6A, 0x05, 0x97, 0x03, 0x63, 0x00, 0xEF,
 0xFC, 0x63, 0x07, 0x62, 0x06, 0xD1, 0x05, 0xD0,
 0x30, 0xF0, 0x20, 0x6B, 0xFF, 0x69, 0x30, 0xF0,
@@ -5400,11 +5399,11 @@ u8 array_mp_8821c_fw_ap[] = {
 0x88, 0xF3, 0x6A, 0xCA, 0x18, 0x6B, 0x8C, 0xEB,
 0x10, 0x73, 0x07, 0x61, 0xC8, 0xF3, 0x79, 0xA2,
 0x03, 0x6C, 0x76, 0x33, 0x8C, 0xEB, 0x88, 0xF3,
-0x64, 0xC2, 0x10, 0xF0, 0x24, 0x6A, 0x35, 0xF2,
-0x40, 0x9A, 0x60, 0xA2, 0x07, 0x23, 0x60, 0xA2,
+0x64, 0xC2, 0x10, 0xF0, 0x24, 0x6A, 0x75, 0xF1,
+0x44, 0x9A, 0x60, 0xA2, 0x07, 0x23, 0x60, 0xA2,
 0xFF, 0x6A, 0x4C, 0xEB, 0x30, 0xF0, 0x20, 0x6A,
 0x48, 0xF5, 0x72, 0xCA, 0x10, 0xF0, 0x24, 0x6A,
-0x35, 0xF2, 0x44, 0x9A, 0x30, 0xF0, 0x20, 0x6C,
+0x75, 0xF1, 0x48, 0x9A, 0x30, 0xF0, 0x20, 0x6C,
 0x48, 0xF5, 0x92, 0xAC, 0xA0, 0xA2, 0xFF, 0x6B,
 0x6C, 0xED, 0x8E, 0xED, 0x02, 0x25, 0x8C, 0xEB,
 0x60, 0xC2, 0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1,
@@ -5429,12 +5428,12 @@ u8 array_mp_8821c_fw_ap[] = {
 0x68, 0xF3, 0x75, 0xA3, 0x0F, 0x6A, 0x6C, 0xEA,
 0x01, 0x72, 0x25, 0x61, 0x05, 0x59, 0x03, 0x61,
 0xA0, 0xF6, 0x08, 0x6A, 0x07, 0x10, 0x10, 0xF0,
-0x24, 0x6A, 0x24, 0x31, 0x94, 0xF5, 0x14, 0x4A,
+0x24, 0x6A, 0x24, 0x31, 0xD4, 0xF4, 0x18, 0x4A,
 0x49, 0xE1, 0x40, 0xAA, 0x61, 0x42, 0x1F, 0xF7,
 0x00, 0x6C, 0x8C, 0xEB, 0x02, 0xF0, 0x00, 0x73,
 0x01, 0x60, 0x05, 0x2B, 0x10, 0xF0, 0x24, 0x6B,
-0x35, 0xF2, 0x68, 0x9B, 0x04, 0x10, 0x10, 0xF0,
-0x24, 0x6B, 0x35, 0xF2, 0x6C, 0x9B, 0x69, 0xE2,
+0x75, 0xF1, 0x6C, 0x9B, 0x04, 0x10, 0x10, 0xF0,
+0x24, 0x6B, 0x75, 0xF1, 0x70, 0x9B, 0x69, 0xE2,
 0x60, 0xA2, 0x20, 0x6A, 0x6C, 0xEA, 0x4B, 0xEA,
 0xC0, 0xF7, 0x42, 0x32, 0x01, 0x10, 0x01, 0x6A,
 0x07, 0x97, 0x06, 0x91, 0x05, 0x90, 0x04, 0x63,
@@ -5476,10 +5475,10 @@ u8 array_mp_8821c_fw_ap[] = {
 0x00, 0xEF, 0x00, 0x65, 0xFD, 0x63, 0x05, 0x62,
 0x30, 0xF0, 0x20, 0x6A, 0x2F, 0xF7, 0x66, 0xA2,
 0x01, 0x6A, 0x6C, 0xEA, 0x2E, 0x22, 0x10, 0xF0,
-0x24, 0x6A, 0x35, 0xF2, 0x50, 0x9A, 0x00, 0x6B,
+0x24, 0x6A, 0x75, 0xF1, 0x54, 0x9A, 0x00, 0x6B,
 0x02, 0x6C, 0x60, 0xC2, 0x10, 0xF0, 0x24, 0x6A,
-0x35, 0xF2, 0x74, 0x9A, 0x40, 0x9B, 0x8C, 0xEA,
-0x01, 0x22, 0x80, 0xDB, 0x00, 0x18, 0x4D, 0xE7,
+0x75, 0xF1, 0x78, 0x9A, 0x40, 0x9B, 0x8C, 0xEA,
+0x01, 0x22, 0x80, 0xDB, 0x00, 0x18, 0x1E, 0xE7,
 0x30, 0xF0, 0x20, 0x6A, 0x6E, 0xF2, 0x58, 0x9A,
 0x00, 0x6D, 0xFF, 0x6C, 0xC5, 0x67, 0x40, 0xEA,
 0x30, 0xF0, 0x20, 0x6A, 0x2F, 0xF7, 0x66, 0xA2,
@@ -5488,13 +5487,13 @@ u8 array_mp_8821c_fw_ap[] = {
 0x20, 0x6A, 0x2F, 0xF5, 0x18, 0x4A, 0xE0, 0xF1,
 0x95, 0xA2, 0x01, 0x6B, 0x8D, 0xEB, 0xE0, 0xF1,
 0x75, 0xC2, 0x05, 0x97, 0x03, 0x63, 0x00, 0xEF,
-0xFD, 0x63, 0x05, 0x62, 0x00, 0x18, 0x4D, 0xE7,
+0xFD, 0x63, 0x05, 0x62, 0x00, 0x18, 0x1E, 0xE7,
 0x30, 0xF0, 0x20, 0x6A, 0x6E, 0xF2, 0x58, 0x9A,
 0x00, 0x6D, 0xC5, 0x67, 0xFF, 0x6C, 0x40, 0xEA,
 0x01, 0x6C, 0x0C, 0x6D, 0x00, 0x18, 0x73, 0xC9,
 0x05, 0x97, 0x03, 0x63, 0x00, 0xEF, 0x00, 0x65,
 0xFD, 0x63, 0x05, 0x62, 0x04, 0xD0, 0xFF, 0x68,
-0x8C, 0xE8, 0x00, 0x18, 0x4D, 0xE7, 0x08, 0x20,
+0x8C, 0xE8, 0x00, 0x18, 0x1E, 0xE7, 0x08, 0x20,
 0x30, 0xF0, 0x20, 0x6A, 0x6E, 0xF2, 0x58, 0x9A,
 0x00, 0x6D, 0xFF, 0x6C, 0xC5, 0x67, 0x40, 0xEA,
 0x01, 0x6C, 0x04, 0x6D, 0x00, 0x18, 0x73, 0xC9,
@@ -5506,7 +5505,7 @@ u8 array_mp_8821c_fw_ap[] = {
 0x6C, 0xEA, 0x2C, 0xEA, 0x29, 0x2A, 0x30, 0xF0,
 0x20, 0x6A, 0xAE, 0xF2, 0x50, 0x9A, 0xE0, 0xF1,
 0xD6, 0xA0, 0xFF, 0x6C, 0x55, 0x4C, 0x00, 0x6D,
-0x40, 0xEA, 0x00, 0x18, 0x4D, 0xE7, 0x30, 0xF0,
+0x40, 0xEA, 0x00, 0x18, 0x1E, 0xE7, 0x30, 0xF0,
 0x20, 0x6A, 0x6E, 0xF2, 0x58, 0x9A, 0x00, 0x6D,
 0x91, 0x67, 0xC5, 0x67, 0x40, 0xEA, 0xE0, 0xF1,
 0x6E, 0xA0, 0x02, 0x6A, 0x6C, 0xEA, 0x2C, 0xEA,
@@ -5523,13 +5522,13 @@ u8 array_mp_8821c_fw_ap[] = {
 0x04, 0x6D, 0x00, 0x18, 0x73, 0xC9, 0x0A, 0x10,
 0x30, 0xF0, 0x20, 0x6A, 0x6E, 0xF2, 0x58, 0x9A,
 0xFF, 0x6C, 0xA4, 0x67, 0x31, 0x6E, 0x40, 0xEA,
-0x00, 0x18, 0x20, 0xE7, 0x07, 0x97, 0x06, 0x91,
+0x00, 0x18, 0xF1, 0xE6, 0x07, 0x97, 0x06, 0x91,
 0x05, 0x90, 0x04, 0x63, 0x00, 0xEF, 0x00, 0x65,
 0xFD, 0x63, 0x05, 0x62, 0x30, 0xF0, 0x20, 0x6A,
 0x6E, 0xF2, 0x58, 0x9A, 0xFF, 0x6C, 0xA4, 0x67,
 0x2F, 0x6E, 0x40, 0xEA, 0x30, 0xF0, 0x20, 0x6A,
 0xCE, 0xF2, 0x40, 0x9A, 0x40, 0xEA, 0x00, 0x18,
-0x20, 0xE7, 0x01, 0x6C, 0x08, 0x6D, 0x00, 0x18,
+0xF1, 0xE6, 0x01, 0x6C, 0x08, 0x6D, 0x00, 0x18,
 0x73, 0xC9, 0x05, 0x97, 0x03, 0x63, 0x00, 0xEF,
 0xFB, 0x63, 0x09, 0x62, 0x08, 0xD1, 0x07, 0xD0,
 0xFF, 0x6A, 0x4C, 0xEC, 0x30, 0xF0, 0x20, 0x69,
@@ -5540,7 +5539,7 @@ u8 array_mp_8821c_fw_ap[] = {
 0x6E, 0xF5, 0x58, 0x9A, 0x2F, 0xF7, 0x94, 0xA3,
 0x01, 0x68, 0x40, 0xEA, 0x4E, 0xE8, 0x0A, 0x28,
 0x04, 0x94, 0x88, 0xF3, 0xA2, 0xA1, 0x00, 0x18,
-0x15, 0xE7, 0x04, 0x94, 0x88, 0xF3, 0x03, 0xC1,
+0xE6, 0xE6, 0x04, 0x94, 0x88, 0xF3, 0x03, 0xC1,
 0x00, 0x18, 0x26, 0xCA, 0x09, 0x97, 0x08, 0x91,
 0x07, 0x90, 0x05, 0x63, 0x00, 0xEF, 0x00, 0x65,
 0xFD, 0x63, 0x05, 0x62, 0x04, 0xD0, 0x30, 0xF0,
@@ -5551,14 +5550,14 @@ u8 array_mp_8821c_fw_ap[] = {
 0x79, 0xC2, 0x11, 0x6B, 0x00, 0x6C, 0x6B, 0xEB,
 0x88, 0xF3, 0x85, 0xC2, 0x68, 0xF3, 0x9D, 0xC2,
 0xAC, 0xEB, 0x88, 0xF3, 0x86, 0xC2, 0x90, 0x67,
-0x68, 0xF3, 0x7A, 0xC2, 0x00, 0x18, 0x57, 0xE6,
-0x90, 0x67, 0x00, 0x18, 0x50, 0xE6, 0x90, 0x67,
-0x00, 0x18, 0x6C, 0xE6, 0x05, 0x97, 0x04, 0x90,
+0x68, 0xF3, 0x7A, 0xC2, 0x00, 0x18, 0x28, 0xE6,
+0x90, 0x67, 0x00, 0x18, 0x21, 0xE6, 0x90, 0x67,
+0x00, 0x18, 0x3D, 0xE6, 0x05, 0x97, 0x04, 0x90,
 0x03, 0x63, 0x00, 0xEF, 0xFD, 0x63, 0x05, 0x62,
 0xF0, 0x6D, 0x01, 0x6C, 0x00, 0x18, 0x73, 0xC9,
-0x00, 0x6C, 0x00, 0x18, 0x9D, 0xE8, 0x00, 0x18,
-0x2D, 0xE2, 0x00, 0x18, 0x64, 0xE2, 0x01, 0x6C,
-0x00, 0x18, 0x9D, 0xE8, 0x01, 0x6C, 0x00, 0x6D,
+0x00, 0x6C, 0x00, 0x18, 0x6E, 0xE8, 0x00, 0x18,
+0xFE, 0xE1, 0x00, 0x18, 0x35, 0xE2, 0x01, 0x6C,
+0x00, 0x18, 0x6E, 0xE8, 0x01, 0x6C, 0x00, 0x6D,
 0x00, 0x18, 0x73, 0xC9, 0x05, 0x97, 0x03, 0x63,
 0x00, 0xEF, 0x00, 0x65, 0xFD, 0x63, 0x05, 0x62,
 0x30, 0xF0, 0x20, 0x6A, 0x48, 0xF5, 0x44, 0xA2,
@@ -5570,7 +5569,7 @@ u8 array_mp_8821c_fw_ap[] = {
 0x02, 0x22, 0x00, 0x18, 0xE3, 0xCB, 0x05, 0x97,
 0x03, 0x63, 0x00, 0xEF, 0xFB, 0x63, 0x09, 0x62,
 0x08, 0xD1, 0x07, 0xD0, 0x10, 0xF0, 0x24, 0x6B,
-0x35, 0xF2, 0x78, 0x9B, 0xFF, 0x6A, 0x24, 0x67,
+0x75, 0xF1, 0x7C, 0x9B, 0xFF, 0x6A, 0x24, 0x67,
 0x60, 0xA3, 0x4C, 0xE9, 0x30, 0xF0, 0x20, 0x68,
 0x6C, 0xEA, 0x04, 0xD2, 0x6E, 0xF2, 0x58, 0x98,
 0xFF, 0x6C, 0xA4, 0x67, 0x2D, 0x6E, 0x40, 0xEA,
@@ -5578,16 +5577,16 @@ u8 array_mp_8821c_fw_ap[] = {
 0x40, 0xEA, 0x07, 0x2A, 0x6E, 0xF2, 0x58, 0x98,
 0x04, 0x95, 0xFF, 0x6C, 0x2D, 0x6E, 0x40, 0xEA,
 0x2C, 0x10, 0x05, 0x59, 0x24, 0x60, 0x10, 0xF0,
-0x24, 0x6A, 0x28, 0x31, 0xF4, 0xF4, 0x1C, 0x4A,
+0x24, 0x6A, 0x28, 0x31, 0x54, 0xF4, 0x00, 0x4A,
 0x29, 0xE2, 0x40, 0x9A, 0x00, 0xEA, 0x00, 0x6C,
 0x08, 0x6D, 0x17, 0x10, 0x10, 0xF0, 0x24, 0x6A,
-0x04, 0x6C, 0x35, 0xF2, 0xBC, 0x9A, 0x11, 0x10,
-0x10, 0xF0, 0x24, 0x6A, 0x04, 0x6C, 0x55, 0xF2,
-0xA0, 0x9A, 0x0B, 0x10, 0x10, 0xF0, 0x24, 0x6A,
-0x04, 0x6C, 0x55, 0xF2, 0xA4, 0x9A, 0x05, 0x10,
-0x10, 0xF0, 0x24, 0x6A, 0x55, 0xF2, 0xA8, 0x9A,
-0x04, 0x6C, 0x00, 0x18, 0x98, 0xDC, 0x00, 0x18,
-0x20, 0xE7, 0x01, 0x6C, 0x00, 0x6D, 0x00, 0x18,
+0x04, 0x6C, 0x95, 0xF1, 0xA0, 0x9A, 0x11, 0x10,
+0x10, 0xF0, 0x24, 0x6A, 0x04, 0x6C, 0x95, 0xF1,
+0xA4, 0x9A, 0x0B, 0x10, 0x10, 0xF0, 0x24, 0x6A,
+0x04, 0x6C, 0x95, 0xF1, 0xA8, 0x9A, 0x05, 0x10,
+0x10, 0xF0, 0x24, 0x6A, 0x95, 0xF1, 0xAC, 0x9A,
+0x04, 0x6C, 0x00, 0x18, 0x70, 0xDC, 0x00, 0x18,
+0xF1, 0xE6, 0x01, 0x6C, 0x00, 0x6D, 0x00, 0x18,
 0x73, 0xC9, 0x09, 0x97, 0x08, 0x91, 0x07, 0x90,
 0x05, 0x63, 0x00, 0xEF, 0xFD, 0x63, 0x05, 0x62,
 0x30, 0xF0, 0x20, 0x6B, 0x48, 0xF5, 0xA2, 0xA3,
@@ -5638,7 +5637,7 @@ u8 array_mp_8821c_fw_ap[] = {
 0x03, 0x2B, 0x68, 0xF3, 0x5C, 0xA5, 0x8E, 0xEA,
 0xC0, 0xF0, 0x1E, 0x22, 0x0D, 0x5C, 0xC0, 0xF0,
 0x1B, 0x60, 0x10, 0xF0, 0x24, 0x6A, 0x88, 0x34,
-0x14, 0xF5, 0x10, 0x4A, 0x89, 0xE2, 0x40, 0x9A,
+0x54, 0xF4, 0x14, 0x4A, 0x89, 0xE2, 0x40, 0x9A,
 0x00, 0xEA, 0x30, 0xF0, 0x20, 0x6A, 0x48, 0xF5,
 0x44, 0xA2, 0x0E, 0x72, 0x03, 0x61, 0x90, 0x67,
 0x00, 0x18, 0x1D, 0xCC, 0x30, 0xF0, 0x20, 0x6A,
@@ -5697,10 +5696,10 @@ u8 array_mp_8821c_fw_ap[] = {
 0x06, 0xD1, 0x05, 0xD0, 0x30, 0xF0, 0x20, 0x6B,
 0x48, 0xF5, 0xA1, 0xA3, 0x04, 0x6B, 0xFF, 0x6A,
 0xAC, 0xEB, 0x4C, 0xEB, 0x4C, 0xEC, 0x06, 0x23,
-0x10, 0xF0, 0x24, 0x6A, 0x55, 0xF2, 0x50, 0x9A,
+0x10, 0xF0, 0x24, 0x6A, 0x95, 0xF1, 0x54, 0x9A,
 0x00, 0x6B, 0x60, 0xC2, 0x02, 0x6D, 0x00, 0x18,
-0x75, 0xE2, 0x10, 0xF0, 0x24, 0x6A, 0x35, 0xF2,
-0x54, 0x9A, 0x04, 0x69, 0x30, 0xF0, 0x20, 0x68,
+0x46, 0xE2, 0x10, 0xF0, 0x24, 0x6A, 0x75, 0xF1,
+0x58, 0x9A, 0x04, 0x69, 0x30, 0xF0, 0x20, 0x68,
 0x20, 0xDA, 0xC0, 0xF1, 0x08, 0x48, 0xE8, 0xF3,
 0xC6, 0xA0, 0x30, 0xF0, 0x20, 0x6A, 0xAE, 0xF2,
 0x50, 0x9A, 0xFF, 0x6C, 0x59, 0x4C, 0x00, 0x6D,
@@ -5743,15 +5742,15 @@ u8 array_mp_8821c_fw_ap[] = {
 0xB9, 0xA4, 0x40, 0x6B, 0xFF, 0x6A, 0xAC, 0xEB,
 0x4C, 0xEB, 0x4C, 0xE9, 0x09, 0x23, 0x68, 0xF3,
 0x9A, 0xA4, 0x10, 0x6B, 0x8C, 0xEB, 0x4C, 0xEB,
-0x03, 0x23, 0x91, 0x67, 0x00, 0x18, 0x76, 0xE6,
+0x03, 0x23, 0x91, 0x67, 0x00, 0x18, 0x47, 0xE6,
 0x30, 0xF0, 0x20, 0x68, 0xC0, 0xF1, 0x08, 0x48,
 0x68, 0xF3, 0x79, 0xA0, 0x02, 0x6A, 0x6C, 0xEA,
 0x10, 0x22, 0x03, 0x6A, 0x4B, 0xEA, 0x4C, 0xEB,
 0x68, 0xF3, 0x79, 0xC0, 0x68, 0xF3, 0x7D, 0xA0,
 0x6C, 0xEA, 0x68, 0xF3, 0x5D, 0xC0, 0x68, 0xF3,
 0x5D, 0xA0, 0x07, 0x6B, 0x6C, 0xEA, 0x59, 0x2A,
-0x55, 0x10, 0x10, 0xF0, 0x24, 0x6A, 0x55, 0xF2,
-0x74, 0x9A, 0xFF, 0xF7, 0x1F, 0x6C, 0x40, 0xAB,
+0x55, 0x10, 0x10, 0xF0, 0x24, 0x6A, 0x95, 0xF1,
+0x78, 0x9A, 0xFF, 0xF7, 0x1F, 0x6C, 0x40, 0xAB,
 0x8C, 0xEA, 0x01, 0x4A, 0x8C, 0xEA, 0x40, 0xCB,
 0x88, 0xF3, 0x45, 0xA0, 0x68, 0xF3, 0x7D, 0xA0,
 0x01, 0x4A, 0x88, 0xF3, 0x45, 0xC0, 0x11, 0x6A,
@@ -5776,14 +5775,14 @@ u8 array_mp_8821c_fw_ap[] = {
 0x04, 0x63, 0x00, 0xEF, 0xFC, 0x63, 0x07, 0x62,
 0x06, 0xD1, 0x05, 0xD0, 0xFF, 0x6A, 0x8C, 0xEA,
 0x05, 0x5A, 0x00, 0x68, 0x24, 0x60, 0x10, 0xF0,
-0x24, 0x6B, 0x48, 0x34, 0x54, 0xF5, 0x04, 0x4B,
+0x24, 0x6B, 0x48, 0x34, 0x94, 0xF4, 0x08, 0x4B,
 0x8D, 0xE3, 0x60, 0x9B, 0x00, 0xEB, 0x10, 0xF0,
-0x24, 0x6B, 0x55, 0xF2, 0x78, 0x9B, 0x13, 0x10,
-0x10, 0xF0, 0x24, 0x6B, 0x55, 0xF2, 0x7C, 0x9B,
-0x0E, 0x10, 0x10, 0xF0, 0x24, 0x6B, 0x75, 0xF2,
-0x60, 0x9B, 0x09, 0x10, 0x10, 0xF0, 0x24, 0x6B,
-0x75, 0xF2, 0x64, 0x9B, 0x04, 0x10, 0x10, 0xF0,
-0x24, 0x6B, 0x75, 0xF2, 0x68, 0x9B, 0x60, 0xAB,
+0x24, 0x6B, 0x95, 0xF1, 0x7C, 0x9B, 0x13, 0x10,
+0x10, 0xF0, 0x24, 0x6B, 0xB5, 0xF1, 0x60, 0x9B,
+0x0E, 0x10, 0x10, 0xF0, 0x24, 0x6B, 0xB5, 0xF1,
+0x64, 0x9B, 0x09, 0x10, 0x10, 0xF0, 0x24, 0x6B,
+0xB5, 0xF1, 0x68, 0x9B, 0x04, 0x10, 0x10, 0xF0,
+0x24, 0x6B, 0xB5, 0xF1, 0x6C, 0x9B, 0x60, 0xAB,
 0xFF, 0xF7, 0x1F, 0x68, 0x6C, 0xE8, 0x18, 0xF0,
 0x00, 0x6B, 0x0C, 0xEB, 0x13, 0x2B, 0x30, 0xF0,
 0x20, 0x6C, 0xC0, 0xF1, 0x08, 0x4C, 0x68, 0xF3,
@@ -5825,41 +5824,41 @@ u8 array_mp_8821c_fw_ap[] = {
 0x00, 0xF1, 0x02, 0x22, 0x68, 0xF3, 0x75, 0xA3,
 0x0F, 0x6A, 0x6C, 0xEA, 0x01, 0x72, 0x69, 0x61,
 0x05, 0x59, 0x5A, 0x60, 0x10, 0xF0, 0x24, 0x6A,
-0x28, 0x33, 0x54, 0xF5, 0x18, 0x4A, 0x69, 0xE2,
+0x28, 0x33, 0x94, 0xF4, 0x1C, 0x4A, 0x69, 0xE2,
 0x40, 0x9A, 0x00, 0xEA, 0x10, 0xF0, 0x24, 0x6A,
-0x75, 0xF2, 0x4C, 0x9A, 0x60, 0xA2, 0x30, 0xF0,
+0xB5, 0xF1, 0x50, 0x9A, 0x60, 0xA2, 0x30, 0xF0,
 0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A, 0x88, 0xF3,
-0x63, 0xC2, 0x10, 0xF0, 0x24, 0x6B, 0x75, 0xF2,
-0x70, 0x9B, 0x3F, 0x10, 0x10, 0xF0, 0x24, 0x6A,
-0x75, 0xF2, 0x54, 0x9A, 0x60, 0xA2, 0x30, 0xF0,
+0x63, 0xC2, 0x10, 0xF0, 0x24, 0x6B, 0xB5, 0xF1,
+0x74, 0x9B, 0x3F, 0x10, 0x10, 0xF0, 0x24, 0x6A,
+0xB5, 0xF1, 0x58, 0x9A, 0x60, 0xA2, 0x30, 0xF0,
 0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A, 0x88, 0xF3,
-0x63, 0xC2, 0x10, 0xF0, 0x24, 0x6B, 0x75, 0xF2,
-0x78, 0x9B, 0x2F, 0x10, 0x10, 0xF0, 0x24, 0x6A,
-0x75, 0xF2, 0x5C, 0x9A, 0x60, 0xA2, 0x30, 0xF0,
+0x63, 0xC2, 0x10, 0xF0, 0x24, 0x6B, 0xB5, 0xF1,
+0x7C, 0x9B, 0x2F, 0x10, 0x10, 0xF0, 0x24, 0x6A,
+0xD5, 0xF1, 0x40, 0x9A, 0x60, 0xA2, 0x30, 0xF0,
 0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A, 0x88, 0xF3,
-0x63, 0xC2, 0x10, 0xF0, 0x24, 0x6B, 0x95, 0xF2,
-0x60, 0x9B, 0x1F, 0x10, 0x10, 0xF0, 0x24, 0x6A,
-0x95, 0xF2, 0x44, 0x9A, 0x60, 0xA2, 0x30, 0xF0,
+0x63, 0xC2, 0x10, 0xF0, 0x24, 0x6B, 0xD5, 0xF1,
+0x64, 0x9B, 0x1F, 0x10, 0x10, 0xF0, 0x24, 0x6A,
+0xD5, 0xF1, 0x48, 0x9A, 0x60, 0xA2, 0x30, 0xF0,
 0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A, 0x88, 0xF3,
-0x63, 0xC2, 0x10, 0xF0, 0x24, 0x6B, 0x95, 0xF2,
-0x68, 0x9B, 0x0F, 0x10, 0x10, 0xF0, 0x24, 0x6A,
-0x95, 0xF2, 0x4C, 0x9A, 0x60, 0xA2, 0x30, 0xF0,
+0x63, 0xC2, 0x10, 0xF0, 0x24, 0x6B, 0xD5, 0xF1,
+0x6C, 0x9B, 0x0F, 0x10, 0x10, 0xF0, 0x24, 0x6A,
+0xD5, 0xF1, 0x50, 0x9A, 0x60, 0xA2, 0x30, 0xF0,
 0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A, 0x88, 0xF3,
-0x63, 0xC2, 0x10, 0xF0, 0x24, 0x6B, 0x95, 0xF2,
-0x70, 0x9B, 0x60, 0xA3, 0x88, 0xF3, 0x62, 0xC2,
+0x63, 0xC2, 0x10, 0xF0, 0x24, 0x6B, 0xD5, 0xF1,
+0x74, 0x9B, 0x60, 0xA3, 0x88, 0xF3, 0x62, 0xC2,
 0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A,
 0x88, 0xF3, 0x63, 0xA2, 0x02, 0x2B, 0x88, 0xF3,
 0x62, 0xA2, 0x30, 0xF0, 0x20, 0x6A, 0x48, 0xF5,
-0x6B, 0xC2, 0x10, 0xF0, 0x24, 0x6B, 0x95, 0xF2,
-0x94, 0x9B, 0x30, 0xF0, 0x20, 0x68, 0xC0, 0xF1,
+0x6B, 0xC2, 0x10, 0xF0, 0x24, 0x6B, 0xD5, 0xF1,
+0x98, 0x9B, 0x30, 0xF0, 0x20, 0x68, 0xC0, 0xF1,
 0x08, 0x48, 0x00, 0x6A, 0x88, 0xF3, 0x45, 0xC0,
 0x88, 0xF3, 0x46, 0xC0, 0x60, 0xAC, 0xFF, 0xF7,
 0x1F, 0x6D, 0xAC, 0xEB, 0x01, 0x4B, 0xAC, 0xEB,
 0x60, 0xCC, 0x10, 0xF0, 0x24, 0x6B, 0x88, 0xF3,
-0x8A, 0xA0, 0x35, 0xF2, 0x64, 0x9B, 0x80, 0xC3,
-0x10, 0xF0, 0x24, 0x6B, 0x35, 0xF2, 0x70, 0x9B,
+0x8A, 0xA0, 0x75, 0xF1, 0x68, 0x9B, 0x80, 0xC3,
+0x10, 0xF0, 0x24, 0x6B, 0x75, 0xF1, 0x74, 0x9B,
 0x91, 0x67, 0x40, 0xC3, 0x10, 0xF0, 0x24, 0x6A,
-0x35, 0xF2, 0x54, 0x9A, 0x02, 0x6B, 0x60, 0xC2,
+0x75, 0xF1, 0x58, 0x9A, 0x02, 0x6B, 0x60, 0xC2,
 0x68, 0xF3, 0x7D, 0xA0, 0x03, 0x6A, 0x4B, 0xEA,
 0x6C, 0xEA, 0x11, 0x6B, 0x6B, 0xEB, 0x6C, 0xEA,
 0x68, 0xF3, 0x5D, 0xC0, 0x00, 0x18, 0x8D, 0xCD,
@@ -5869,21 +5868,21 @@ u8 array_mp_8821c_fw_ap[] = {
 0x1B, 0x2A, 0x88, 0xF3, 0x43, 0xA0, 0x88, 0xF3,
 0xA2, 0xA0, 0xAE, 0xEA, 0x40, 0x2A, 0x8D, 0xEB,
 0x68, 0xF3, 0x7A, 0xC0, 0x91, 0x67, 0x00, 0x18,
-0x15, 0xE7, 0x91, 0x67, 0x00, 0x18, 0x46, 0xE6,
-0x91, 0x67, 0x00, 0x18, 0x7D, 0xE6, 0x91, 0x67,
-0x00, 0x18, 0x76, 0xE6, 0x88, 0xF3, 0x43, 0xA0,
+0xE6, 0xE6, 0x91, 0x67, 0x00, 0x18, 0x17, 0xE6,
+0x91, 0x67, 0x00, 0x18, 0x4E, 0xE6, 0x91, 0x67,
+0x00, 0x18, 0x47, 0xE6, 0x88, 0xF3, 0x43, 0xA0,
 0xFF, 0x4A, 0x88, 0xF3, 0x43, 0xC0, 0x2B, 0x10,
 0x68, 0xF3, 0x75, 0xA0, 0x0F, 0x6A, 0x6C, 0xEA,
 0x01, 0x72, 0x25, 0x61, 0x88, 0xF3, 0x43, 0xA0,
 0x04, 0xD2, 0x04, 0x93, 0x88, 0xF3, 0x42, 0xA0,
 0x6E, 0xEA, 0x1D, 0x22, 0x91, 0x67, 0x00, 0x18,
-0x0A, 0xE7, 0x04, 0x95, 0xAE, 0xEA, 0x17, 0x22,
+0xDB, 0xE6, 0x04, 0x95, 0xAE, 0xEA, 0x17, 0x22,
 0x68, 0xF3, 0x79, 0xA0, 0x20, 0x6A, 0x6C, 0xEA,
 0xFF, 0x6B, 0x6C, 0xEA, 0x10, 0x22, 0x68, 0xF3,
 0x7A, 0xA0, 0x11, 0x6A, 0x4B, 0xEA, 0x6C, 0xEA,
 0x68, 0xF3, 0x5A, 0xC0, 0x91, 0x67, 0x00, 0x18,
-0x6C, 0xE6, 0x91, 0x67, 0x00, 0x18, 0x57, 0xE6,
-0x91, 0x67, 0x00, 0x18, 0x50, 0xE6, 0x30, 0xF0,
+0x3D, 0xE6, 0x91, 0x67, 0x00, 0x18, 0x28, 0xE6,
+0x91, 0x67, 0x00, 0x18, 0x21, 0xE6, 0x30, 0xF0,
 0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A, 0x68, 0xF3,
 0x99, 0xA2, 0x01, 0x6B, 0xE8, 0xF3, 0x62, 0xC2,
 0x20, 0x6B, 0x8D, 0xEB, 0x68, 0xF3, 0x79, 0xC2,
@@ -5892,77 +5891,77 @@ u8 array_mp_8821c_fw_ap[] = {
 0xFF, 0x6A, 0x4C, 0xED, 0x4C, 0xEC, 0xCC, 0xEA,
 0xA0, 0xF0, 0x1D, 0x25, 0x05, 0x5C, 0xA0, 0xF0,
 0x10, 0x60, 0x10, 0xF0, 0x24, 0x6B, 0x88, 0x34,
-0x74, 0xF5, 0x0C, 0x4B, 0x8D, 0xE3, 0x60, 0x9B,
+0xB4, 0xF4, 0x10, 0x4B, 0x8D, 0xE3, 0x60, 0x9B,
 0x00, 0xEB, 0x02, 0x72, 0x0A, 0x60, 0x10, 0xF0,
-0x24, 0x6A, 0x95, 0xF2, 0xB8, 0x9A, 0x01, 0x6C,
-0x00, 0x18, 0x98, 0xDC, 0x00, 0x6C, 0x08, 0x6D,
-0x1D, 0x10, 0x10, 0xF0, 0x24, 0x6A, 0x95, 0xF2,
-0xBC, 0x9A, 0x01, 0x6C, 0x00, 0x18, 0x98, 0xDC,
-0x00, 0x6C, 0x08, 0x6D, 0x00, 0x18, 0x98, 0xDC,
+0x24, 0x6A, 0xD5, 0xF1, 0xBC, 0x9A, 0x01, 0x6C,
+0x00, 0x18, 0x70, 0xDC, 0x00, 0x6C, 0x08, 0x6D,
+0x1D, 0x10, 0x10, 0xF0, 0x24, 0x6A, 0xF5, 0xF1,
+0xA0, 0x9A, 0x01, 0x6C, 0x00, 0x18, 0x70, 0xDC,
+0x00, 0x6C, 0x08, 0x6D, 0x00, 0x18, 0x70, 0xDC,
 0x30, 0xF0, 0x20, 0x6A, 0x4E, 0xF2, 0x54, 0x9A,
 0x01, 0x6C, 0x0C, 0x6D, 0x89, 0x10, 0x02, 0x72,
 0x0C, 0x60, 0x04, 0x6C, 0x0F, 0x6D, 0x00, 0x18,
-0x98, 0xDC, 0x10, 0xF0, 0x24, 0x6A, 0x35, 0xF2,
-0xBC, 0x9A, 0x04, 0x6C, 0x00, 0x18, 0x98, 0xDC,
+0x70, 0xDC, 0x10, 0xF0, 0x24, 0x6A, 0x95, 0xF1,
+0xA0, 0x9A, 0x04, 0x6C, 0x00, 0x18, 0x70, 0xDC,
 0x7C, 0x10, 0x04, 0x6C, 0x03, 0x6D, 0x00, 0x18,
-0x98, 0xDC, 0x10, 0xF0, 0x24, 0x6A, 0x35, 0xF2,
-0xBC, 0x9A, 0x04, 0x6C, 0x00, 0x18, 0x98, 0xDC,
+0x70, 0xDC, 0x10, 0xF0, 0x24, 0x6A, 0x95, 0xF1,
+0xA0, 0x9A, 0x04, 0x6C, 0x00, 0x18, 0x70, 0xDC,
 0x30, 0xF0, 0x20, 0x6A, 0x10, 0xF0, 0x24, 0x6B,
-0x4E, 0xF2, 0x54, 0x9A, 0x02, 0x6C, 0xB5, 0xF2,
-0xA0, 0x9B, 0x66, 0x10, 0x02, 0x72, 0x0A, 0x60,
-0x04, 0x6C, 0xF0, 0x6D, 0x00, 0x18, 0x98, 0xDC,
-0x10, 0xF0, 0x24, 0x6A, 0x04, 0x6C, 0x55, 0xF2,
-0xA0, 0x9A, 0xDC, 0x17, 0x04, 0x6C, 0x30, 0x6D,
-0x00, 0x18, 0x98, 0xDC, 0x10, 0xF0, 0x24, 0x6A,
-0x55, 0xF2, 0xA0, 0x9A, 0x04, 0x6C, 0x00, 0x18,
-0x98, 0xDC, 0x30, 0xF0, 0x20, 0x6A, 0x10, 0xF0,
+0x4E, 0xF2, 0x54, 0x9A, 0x02, 0x6C, 0xF5, 0xF1,
+0xA4, 0x9B, 0x66, 0x10, 0x02, 0x72, 0x0A, 0x60,
+0x04, 0x6C, 0xF0, 0x6D, 0x00, 0x18, 0x70, 0xDC,
+0x10, 0xF0, 0x24, 0x6A, 0x04, 0x6C, 0x95, 0xF1,
+0xA4, 0x9A, 0xDC, 0x17, 0x04, 0x6C, 0x30, 0x6D,
+0x00, 0x18, 0x70, 0xDC, 0x10, 0xF0, 0x24, 0x6A,
+0x95, 0xF1, 0xA4, 0x9A, 0x04, 0x6C, 0x00, 0x18,
+0x70, 0xDC, 0x30, 0xF0, 0x20, 0x6A, 0x10, 0xF0,
 0x24, 0x6B, 0x4E, 0xF2, 0x54, 0x9A, 0x02, 0x6C,
-0xB5, 0xF2, 0xA4, 0x9B, 0x45, 0x10, 0x02, 0x72,
+0xF5, 0xF1, 0xA8, 0x9B, 0x45, 0x10, 0x02, 0x72,
 0x0B, 0x60, 0x04, 0x6C, 0x01, 0xF7, 0x00, 0x6D,
-0x00, 0x18, 0x98, 0xDC, 0x10, 0xF0, 0x24, 0x6A,
-0x04, 0x6C, 0x55, 0xF2, 0xA4, 0x9A, 0xBA, 0x17,
+0x00, 0x18, 0x70, 0xDC, 0x10, 0xF0, 0x24, 0x6A,
+0x04, 0x6C, 0x95, 0xF1, 0xA8, 0x9A, 0xBA, 0x17,
 0x04, 0x6C, 0x00, 0xF3, 0x00, 0x6D, 0x00, 0x18,
-0x98, 0xDC, 0x10, 0xF0, 0x24, 0x6A, 0x55, 0xF2,
-0xA4, 0x9A, 0x04, 0x6C, 0x00, 0x18, 0x98, 0xDC,
+0x70, 0xDC, 0x10, 0xF0, 0x24, 0x6A, 0x95, 0xF1,
+0xA8, 0x9A, 0x04, 0x6C, 0x00, 0x18, 0x70, 0xDC,
 0x30, 0xF0, 0x20, 0x6A, 0x10, 0xF0, 0x24, 0x6B,
-0x4E, 0xF2, 0x54, 0x9A, 0x02, 0x6C, 0xB5, 0xF2,
-0xA8, 0x9B, 0x22, 0x10, 0x02, 0x72, 0x0B, 0x60,
+0x4E, 0xF2, 0x54, 0x9A, 0x02, 0x6C, 0xF5, 0xF1,
+0xAC, 0x9B, 0x22, 0x10, 0x02, 0x72, 0x0B, 0x60,
 0x04, 0x6C, 0x1E, 0xF0, 0x00, 0x6D, 0x00, 0x18,
-0x98, 0xDC, 0x10, 0xF0, 0x24, 0x6A, 0x04, 0x6C,
-0x55, 0xF2, 0xA8, 0x9A, 0x97, 0x17, 0x04, 0x6C,
-0x06, 0xF0, 0x00, 0x6D, 0x00, 0x18, 0x98, 0xDC,
-0x10, 0xF0, 0x24, 0x6A, 0x55, 0xF2, 0xA8, 0x9A,
-0x04, 0x6C, 0x00, 0x18, 0x98, 0xDC, 0x30, 0xF0,
+0x70, 0xDC, 0x10, 0xF0, 0x24, 0x6A, 0x04, 0x6C,
+0x95, 0xF1, 0xAC, 0x9A, 0x97, 0x17, 0x04, 0x6C,
+0x06, 0xF0, 0x00, 0x6D, 0x00, 0x18, 0x70, 0xDC,
+0x10, 0xF0, 0x24, 0x6A, 0x95, 0xF1, 0xAC, 0x9A,
+0x04, 0x6C, 0x00, 0x18, 0x70, 0xDC, 0x30, 0xF0,
 0x20, 0x6A, 0x10, 0xF0, 0x24, 0x6B, 0x4E, 0xF2,
-0x54, 0x9A, 0xF5, 0xF1, 0xB0, 0x9B, 0x02, 0x6C,
-0x40, 0xEA, 0x10, 0xF0, 0x24, 0x6A, 0x55, 0xF2,
-0x6C, 0x9A, 0xFF, 0x6C, 0x07, 0x6D, 0x40, 0xA3,
+0x54, 0x9A, 0x35, 0xF1, 0xB4, 0x9B, 0x02, 0x6C,
+0x40, 0xEA, 0x10, 0xF0, 0x24, 0x6A, 0x95, 0xF1,
+0x70, 0x9A, 0xFF, 0x6C, 0x07, 0x6D, 0x40, 0xA3,
 0x8C, 0xEA, 0xAD, 0xEA, 0x65, 0x10, 0x05, 0x5C,
 0x5D, 0x60, 0x10, 0xF0, 0x24, 0x6A, 0x88, 0x34,
-0x94, 0xF5, 0x00, 0x4A, 0x89, 0xE2, 0x40, 0x9A,
-0x00, 0xEA, 0x10, 0xF0, 0x24, 0x6A, 0x95, 0xF2,
-0xB8, 0x9A, 0x01, 0x6C, 0x00, 0x18, 0xC9, 0xDC,
-0x00, 0x6C, 0x08, 0x6D, 0x00, 0x18, 0xC9, 0xDC,
+0xD4, 0xF4, 0x04, 0x4A, 0x89, 0xE2, 0x40, 0x9A,
+0x00, 0xEA, 0x10, 0xF0, 0x24, 0x6A, 0xD5, 0xF1,
+0xBC, 0x9A, 0x01, 0x6C, 0x00, 0x18, 0xA1, 0xDC,
+0x00, 0x6C, 0x08, 0x6D, 0x00, 0x18, 0xA1, 0xDC,
 0x01, 0x6C, 0x0C, 0x6D, 0x45, 0x10, 0x04, 0x6C,
-0x0F, 0x6D, 0x00, 0x18, 0xC9, 0xDC, 0x10, 0xF0,
-0x24, 0x6A, 0x35, 0xF2, 0xBC, 0x9A, 0x04, 0x6C,
-0x00, 0x18, 0xC9, 0xDC, 0x10, 0xF0, 0x24, 0x6A,
-0x02, 0x6C, 0xB5, 0xF2, 0xA0, 0x9A, 0x34, 0x10,
-0x04, 0x6C, 0xF0, 0x6D, 0x00, 0x18, 0xC9, 0xDC,
-0x10, 0xF0, 0x24, 0x6A, 0x55, 0xF2, 0xA0, 0x9A,
-0x04, 0x6C, 0x00, 0x18, 0xC9, 0xDC, 0x10, 0xF0,
-0x24, 0x6A, 0x02, 0x6C, 0xB5, 0xF2, 0xA4, 0x9A,
+0x0F, 0x6D, 0x00, 0x18, 0xA1, 0xDC, 0x10, 0xF0,
+0x24, 0x6A, 0x95, 0xF1, 0xA0, 0x9A, 0x04, 0x6C,
+0x00, 0x18, 0xA1, 0xDC, 0x10, 0xF0, 0x24, 0x6A,
+0x02, 0x6C, 0xF5, 0xF1, 0xA4, 0x9A, 0x34, 0x10,
+0x04, 0x6C, 0xF0, 0x6D, 0x00, 0x18, 0xA1, 0xDC,
+0x10, 0xF0, 0x24, 0x6A, 0x95, 0xF1, 0xA4, 0x9A,
+0x04, 0x6C, 0x00, 0x18, 0xA1, 0xDC, 0x10, 0xF0,
+0x24, 0x6A, 0x02, 0x6C, 0xF5, 0xF1, 0xA8, 0x9A,
 0x23, 0x10, 0x04, 0x6C, 0x01, 0xF7, 0x00, 0x6D,
-0x00, 0x18, 0xC9, 0xDC, 0x10, 0xF0, 0x24, 0x6A,
-0x55, 0xF2, 0xA4, 0x9A, 0x04, 0x6C, 0x00, 0x18,
-0xC9, 0xDC, 0x10, 0xF0, 0x24, 0x6A, 0x02, 0x6C,
-0xB5, 0xF2, 0xA8, 0x9A, 0x11, 0x10, 0x04, 0x6C,
-0x1E, 0xF0, 0x00, 0x6D, 0x00, 0x18, 0xC9, 0xDC,
-0x10, 0xF0, 0x24, 0x6A, 0x55, 0xF2, 0xA8, 0x9A,
-0x04, 0x6C, 0x00, 0x18, 0xC9, 0xDC, 0x10, 0xF0,
-0x24, 0x6A, 0xF5, 0xF1, 0xB0, 0x9A, 0x02, 0x6C,
-0x00, 0x18, 0x19, 0xDD, 0x10, 0xF0, 0x24, 0x6A,
-0x55, 0xF2, 0x6C, 0x9A, 0xF8, 0x6A, 0x80, 0xA3,
+0x00, 0x18, 0xA1, 0xDC, 0x10, 0xF0, 0x24, 0x6A,
+0x95, 0xF1, 0xA8, 0x9A, 0x04, 0x6C, 0x00, 0x18,
+0xA1, 0xDC, 0x10, 0xF0, 0x24, 0x6A, 0x02, 0x6C,
+0xF5, 0xF1, 0xAC, 0x9A, 0x11, 0x10, 0x04, 0x6C,
+0x1E, 0xF0, 0x00, 0x6D, 0x00, 0x18, 0xA1, 0xDC,
+0x10, 0xF0, 0x24, 0x6A, 0x95, 0xF1, 0xAC, 0x9A,
+0x04, 0x6C, 0x00, 0x18, 0xA1, 0xDC, 0x10, 0xF0,
+0x24, 0x6A, 0x35, 0xF1, 0xB4, 0x9A, 0x02, 0x6C,
+0x00, 0x18, 0xF1, 0xDC, 0x10, 0xF0, 0x24, 0x6A,
+0x95, 0xF1, 0x70, 0x9A, 0xF8, 0x6A, 0x80, 0xA3,
 0x8C, 0xEA, 0x40, 0xC3, 0x05, 0x97, 0x03, 0x63,
 0x00, 0xEF, 0x00, 0x65, 0xFB, 0x63, 0x09, 0x62,
 0x08, 0xD1, 0x07, 0xD0, 0x30, 0xF0, 0x20, 0x68,
@@ -5970,7 +5969,7 @@ u8 array_mp_8821c_fw_ap[] = {
 0x7F, 0x6E, 0xFF, 0x69, 0x4C, 0xEE, 0x2C, 0xEC,
 0x01, 0x6D, 0x2C, 0xEE, 0x04, 0xD4, 0x00, 0x18,
 0x73, 0xCE, 0x88, 0xF3, 0x6A, 0xA8, 0x10, 0xF0,
-0x24, 0x6A, 0x35, 0xF2, 0x44, 0x9A, 0x2C, 0xEB,
+0x24, 0x6A, 0x75, 0xF1, 0x48, 0x9A, 0x2C, 0xEB,
 0x60, 0xC2, 0xC8, 0xF3, 0x99, 0xA0, 0x80, 0x6A,
 0x4B, 0xEA, 0x1F, 0x6B, 0x8C, 0xEA, 0x8C, 0xEB,
 0x2C, 0xEA, 0x2C, 0xEB, 0x11, 0x22, 0x6F, 0x32,
@@ -5980,7 +5979,7 @@ u8 array_mp_8821c_fw_ap[] = {
 0x6C, 0x33, 0x6D, 0xEA, 0x2C, 0xEA, 0x06, 0x10,
 0x04, 0x6B, 0xC8, 0xF3, 0x7C, 0xC0, 0x03, 0x6B,
 0xC8, 0xF3, 0x7D, 0xC0, 0x10, 0xF0, 0x24, 0x6B,
-0xB5, 0xF2, 0x6C, 0x9B, 0x40, 0xC3, 0x30, 0xF0,
+0xF5, 0xF1, 0x70, 0x9B, 0x40, 0xC3, 0x30, 0xF0,
 0x20, 0x6B, 0x30, 0xF0, 0x20, 0x6A, 0x6E, 0xF5,
 0x58, 0x9A, 0x2F, 0xF7, 0x94, 0xA3, 0x40, 0xEA,
 0x01, 0x72, 0x19, 0x61, 0x30, 0xF0, 0x20, 0x6A,
@@ -6000,12 +5999,12 @@ u8 array_mp_8821c_fw_ap[] = {
 0x68, 0xF3, 0x74, 0xA0, 0x7F, 0x6E, 0x91, 0x67,
 0x6C, 0xEE, 0x4C, 0xEE, 0x00, 0x6D, 0x00, 0x18,
 0x73, 0xCE, 0x7D, 0x67, 0x87, 0x43, 0x09, 0x4C,
-0x10, 0xF0, 0x24, 0x6A, 0x60, 0xA4, 0x35, 0xF2,
-0x50, 0x9A, 0x60, 0xC2, 0x10, 0xF0, 0x24, 0x6A,
-0x35, 0xF2, 0x54, 0x9A, 0x02, 0x6B, 0x60, 0xDA,
+0x10, 0xF0, 0x24, 0x6A, 0x60, 0xA4, 0x75, 0xF1,
+0x54, 0x9A, 0x60, 0xC2, 0x10, 0xF0, 0x24, 0x6A,
+0x75, 0xF1, 0x58, 0x9A, 0x02, 0x6B, 0x60, 0xDA,
 0x30, 0xF0, 0x20, 0x6A, 0x30, 0xF0, 0x20, 0x6B,
 0x6E, 0xF5, 0x58, 0x9A, 0x2F, 0xF7, 0x94, 0xA3,
-0x40, 0xEA, 0x10, 0x2A, 0x00, 0x18, 0x4D, 0xE7,
+0x40, 0xEA, 0x10, 0x2A, 0x00, 0x18, 0x1E, 0xE7,
 0x91, 0x67, 0x00, 0x18, 0x40, 0xCC, 0x68, 0xF3,
 0x7A, 0xA0, 0x02, 0x6A, 0x4B, 0xEA, 0x6C, 0xEA,
 0x03, 0x6B, 0x6B, 0xEB, 0x6C, 0xEA, 0x68, 0xF3,
@@ -6028,125 +6027,125 @@ u8 array_mp_8821c_fw_ap[] = {
 0x18, 0x22, 0x0A, 0x93, 0x0F, 0x6C, 0x41, 0xA3,
 0xA2, 0xA3, 0x4C, 0xEC, 0x2C, 0xEC, 0x00, 0x18,
 0xA5, 0xC9, 0x28, 0xF1, 0x54, 0xA0, 0x03, 0x72,
-0x0C, 0x61, 0x10, 0xF0, 0x24, 0x6A, 0xB5, 0xF2,
-0x70, 0x9A, 0x40, 0xA3, 0x4C, 0xE9, 0x02, 0x6A,
+0x0C, 0x61, 0x10, 0xF0, 0x24, 0x6A, 0xF5, 0xF1,
+0x74, 0x9A, 0x40, 0xA3, 0x4C, 0xE9, 0x02, 0x6A,
 0x2C, 0xEA, 0x03, 0x22, 0xFD, 0x6A, 0x2C, 0xEA,
 0x40, 0xC3, 0x09, 0x97, 0x08, 0x91, 0x07, 0x90,
 0x05, 0x63, 0x00, 0xEF, 0xFF, 0x6A, 0x4C, 0xEC,
 0xAC, 0xEA, 0x0B, 0x2A, 0x10, 0xF0, 0x24, 0x6B,
-0xB5, 0xF2, 0xB4, 0x9B, 0x10, 0xF0, 0x24, 0x6E,
-0xB5, 0xF2, 0xD8, 0x9E, 0x60, 0x9D, 0xCC, 0xEB,
+0xF5, 0xF1, 0xB8, 0x9B, 0x10, 0xF0, 0x24, 0x6E,
+0xF5, 0xF1, 0xDC, 0x9E, 0x60, 0x9D, 0xCC, 0xEB,
 0x0C, 0x10, 0x01, 0x72, 0x0B, 0x61, 0x10, 0xF0,
-0x24, 0x6B, 0xB5, 0xF2, 0xB4, 0x9B, 0x10, 0xF0,
-0x24, 0x6E, 0xB5, 0xF2, 0xDC, 0x9E, 0x60, 0x9D,
+0x24, 0x6B, 0xF5, 0xF1, 0xB8, 0x9B, 0x10, 0xF0,
+0x24, 0x6E, 0x15, 0xF2, 0xC0, 0x9E, 0x60, 0x9D,
 0xCD, 0xEB, 0x60, 0xDD, 0x05, 0x5C, 0x60, 0xF1,
 0x06, 0x60, 0x10, 0xF0, 0x24, 0x6B, 0x88, 0x34,
-0xB4, 0xF5, 0x00, 0x4B, 0x8D, 0xE3, 0x60, 0x9B,
+0xF4, 0xF4, 0x04, 0x4B, 0x8D, 0xE3, 0x60, 0x9B,
 0x00, 0xEB, 0x05, 0x2A, 0x10, 0xF0, 0x24, 0x6A,
-0xB5, 0xF2, 0x74, 0x9A, 0x0D, 0x11, 0x01, 0x72,
-0x10, 0x61, 0x10, 0xF0, 0x24, 0x6A, 0xB5, 0xF2,
-0x74, 0x9A, 0xFF, 0x6C, 0x40, 0x6D, 0x40, 0xA3,
+0xF5, 0xF1, 0x78, 0x9A, 0x0D, 0x11, 0x01, 0x72,
+0x10, 0x61, 0x10, 0xF0, 0x24, 0x6A, 0xF5, 0xF1,
+0x78, 0x9A, 0xFF, 0x6C, 0x40, 0x6D, 0x40, 0xA3,
 0x8C, 0xEA, 0xAD, 0xEA, 0x8C, 0xEA, 0x40, 0xC3,
 0x40, 0xA3, 0x80, 0x4D, 0xC0, 0x4D, 0x8C, 0xEA,
 0x14, 0x10, 0x02, 0x72, 0x07, 0x61, 0x10, 0xF0,
-0x24, 0x6A, 0xB5, 0xF2, 0x74, 0x9A, 0xBF, 0x6A,
+0x24, 0x6A, 0xF5, 0xF1, 0x78, 0x9A, 0xBF, 0x6A,
 0x80, 0xA3, 0xF4, 0x10, 0x03, 0x72, 0x20, 0xF1,
-0x1A, 0x61, 0x10, 0xF0, 0x24, 0x6A, 0xB5, 0xF2,
-0x74, 0x9A, 0xFF, 0x6C, 0x40, 0x6D, 0x40, 0xA3,
+0x1A, 0x61, 0x10, 0xF0, 0x24, 0x6A, 0xF5, 0xF1,
+0x78, 0x9A, 0xFF, 0x6C, 0x40, 0x6D, 0x40, 0xA3,
 0x8C, 0xEA, 0xAD, 0xEA, 0xE7, 0x10, 0x07, 0x2A,
-0x10, 0xF0, 0x24, 0x6A, 0xD5, 0xF2, 0x60, 0x9A,
+0x10, 0xF0, 0x24, 0x6A, 0x15, 0xF2, 0x64, 0x9A,
 0xFD, 0x6A, 0x80, 0xA3, 0xDF, 0x10, 0x01, 0x72,
-0x19, 0x61, 0x10, 0xF0, 0x24, 0x6A, 0xB5, 0xF2,
-0x94, 0x9A, 0xFF, 0x6A, 0x40, 0x6D, 0x60, 0xA4,
+0x19, 0x61, 0x10, 0xF0, 0x24, 0x6A, 0xF5, 0xF1,
+0x98, 0x9A, 0xFF, 0x6A, 0x40, 0x6D, 0x60, 0xA4,
 0x4C, 0xEB, 0xAD, 0xEB, 0x4C, 0xEB, 0x60, 0xC4,
-0x10, 0xF0, 0x24, 0x6B, 0xD5, 0xF2, 0x80, 0x9B,
+0x10, 0xF0, 0x24, 0x6B, 0x15, 0xF2, 0x84, 0x9B,
 0x01, 0x6D, 0x60, 0xA4, 0x4C, 0xEB, 0xAD, 0xEB,
 0x4C, 0xEB, 0x60, 0xC4, 0x60, 0xA4, 0x02, 0x6D,
 0x4C, 0xEB, 0xE1, 0x10, 0x02, 0x72, 0x0F, 0x61,
-0x10, 0xF0, 0x24, 0x6A, 0xB5, 0xF2, 0x74, 0x9A,
+0x10, 0xF0, 0x24, 0x6A, 0xF5, 0xF1, 0x78, 0x9A,
 0xBF, 0x6A, 0x80, 0xA3, 0x8C, 0xEA, 0x40, 0xC3,
-0x10, 0xF0, 0x24, 0x6A, 0xD5, 0xF2, 0x60, 0x9A,
+0x10, 0xF0, 0x24, 0x6A, 0x15, 0xF2, 0x64, 0x9A,
 0xFE, 0x6A, 0x80, 0xA3, 0xB3, 0x10, 0x03, 0x72,
 0xE0, 0xF0, 0x19, 0x61, 0x10, 0xF0, 0x24, 0x6A,
-0xB5, 0xF2, 0x94, 0x9A, 0xFF, 0x6B, 0x40, 0x6D,
+0xF5, 0xF1, 0x98, 0x9A, 0xFF, 0x6B, 0x40, 0x6D,
 0x40, 0xA4, 0x6C, 0xEA, 0xAD, 0xEA, 0x6C, 0xEA,
-0x40, 0xC4, 0x10, 0xF0, 0x24, 0x6A, 0xD5, 0xF2,
-0x80, 0x9A, 0x01, 0x6D, 0x40, 0xA4, 0x6C, 0xEA,
+0x40, 0xC4, 0x10, 0xF0, 0x24, 0x6A, 0x15, 0xF2,
+0x84, 0x9A, 0x01, 0x6D, 0x40, 0xA4, 0x6C, 0xEA,
 0x92, 0x10, 0x07, 0x2A, 0x10, 0xF0, 0x24, 0x6A,
-0xD5, 0xF2, 0x60, 0x9A, 0xF7, 0x6A, 0x80, 0xA3,
+0x15, 0xF2, 0x64, 0x9A, 0xF7, 0x6A, 0x80, 0xA3,
 0x95, 0x10, 0x01, 0x72, 0x19, 0x61, 0x10, 0xF0,
-0x24, 0x6A, 0xB5, 0xF2, 0x94, 0x9A, 0xFF, 0x6A,
+0x24, 0x6A, 0xF5, 0xF1, 0x98, 0x9A, 0xFF, 0x6A,
 0x40, 0x6D, 0x60, 0xA4, 0x4C, 0xEB, 0xAD, 0xEB,
 0x4C, 0xEB, 0x60, 0xC4, 0x10, 0xF0, 0x24, 0x6B,
-0xD5, 0xF2, 0x80, 0x9B, 0x04, 0x6D, 0x60, 0xA4,
+0x15, 0xF2, 0x84, 0x9B, 0x04, 0x6D, 0x60, 0xA4,
 0x4C, 0xEB, 0xAD, 0xEB, 0x4C, 0xEB, 0x60, 0xC4,
 0x60, 0xA4, 0x08, 0x6D, 0x4C, 0xEB, 0x97, 0x10,
 0x02, 0x72, 0x0F, 0x61, 0x10, 0xF0, 0x24, 0x6A,
-0xB5, 0xF2, 0x74, 0x9A, 0xBF, 0x6A, 0x80, 0xA3,
+0xF5, 0xF1, 0x78, 0x9A, 0xBF, 0x6A, 0x80, 0xA3,
 0x8C, 0xEA, 0x40, 0xC3, 0x10, 0xF0, 0x24, 0x6A,
-0xD5, 0xF2, 0x60, 0x9A, 0xFB, 0x6A, 0x80, 0xA3,
+0x15, 0xF2, 0x64, 0x9A, 0xFB, 0x6A, 0x80, 0xA3,
 0x69, 0x10, 0x03, 0x72, 0xA0, 0xF0, 0x0F, 0x61,
-0x10, 0xF0, 0x24, 0x6A, 0xB5, 0xF2, 0x94, 0x9A,
+0x10, 0xF0, 0x24, 0x6A, 0xF5, 0xF1, 0x98, 0x9A,
 0xFF, 0x6B, 0x40, 0x6D, 0x40, 0xA4, 0x6C, 0xEA,
 0xAD, 0xEA, 0x6C, 0xEA, 0x40, 0xC4, 0x10, 0xF0,
-0x24, 0x6A, 0xD5, 0xF2, 0x80, 0x9A, 0x04, 0x6D,
+0x24, 0x6A, 0x15, 0xF2, 0x84, 0x9A, 0x04, 0x6D,
 0x40, 0xA4, 0x6C, 0xEA, 0x48, 0x10, 0x07, 0x2A,
-0x10, 0xF0, 0x24, 0x6A, 0xD5, 0xF2, 0x60, 0x9A,
+0x10, 0xF0, 0x24, 0x6A, 0x15, 0xF2, 0x64, 0x9A,
 0xDF, 0x6A, 0x80, 0xA3, 0x4B, 0x10, 0x01, 0x72,
-0x19, 0x61, 0x10, 0xF0, 0x24, 0x6A, 0xB5, 0xF2,
-0x94, 0x9A, 0xFF, 0x6A, 0x40, 0x6D, 0x60, 0xA4,
+0x19, 0x61, 0x10, 0xF0, 0x24, 0x6A, 0xF5, 0xF1,
+0x98, 0x9A, 0xFF, 0x6A, 0x40, 0x6D, 0x60, 0xA4,
 0x4C, 0xEB, 0xAD, 0xEB, 0x4C, 0xEB, 0x60, 0xC4,
-0x10, 0xF0, 0x24, 0x6B, 0xD5, 0xF2, 0x80, 0x9B,
+0x10, 0xF0, 0x24, 0x6B, 0x15, 0xF2, 0x84, 0x9B,
 0x10, 0x6D, 0x60, 0xA4, 0x4C, 0xEB, 0xAD, 0xEB,
 0x4C, 0xEB, 0x60, 0xC4, 0x60, 0xA4, 0x20, 0x6D,
 0x4C, 0xEB, 0x4D, 0x10, 0x02, 0x72, 0x0F, 0x61,
-0x10, 0xF0, 0x24, 0x6A, 0xB5, 0xF2, 0x74, 0x9A,
+0x10, 0xF0, 0x24, 0x6A, 0xF5, 0xF1, 0x78, 0x9A,
 0xBF, 0x6A, 0x80, 0xA3, 0x8C, 0xEA, 0x40, 0xC3,
-0x10, 0xF0, 0x24, 0x6A, 0xD5, 0xF2, 0x60, 0x9A,
+0x10, 0xF0, 0x24, 0x6A, 0x15, 0xF2, 0x64, 0x9A,
 0xEF, 0x6A, 0x80, 0xA3, 0x1F, 0x10, 0x03, 0x72,
-0x66, 0x61, 0x10, 0xF0, 0x24, 0x6A, 0xB5, 0xF2,
-0x94, 0x9A, 0xFF, 0x6B, 0x40, 0x6D, 0x40, 0xA4,
+0x66, 0x61, 0x10, 0xF0, 0x24, 0x6A, 0xF5, 0xF1,
+0x98, 0x9A, 0xFF, 0x6B, 0x40, 0x6D, 0x40, 0xA4,
 0x6C, 0xEA, 0xAD, 0xEA, 0x6C, 0xEA, 0x40, 0xC4,
-0x10, 0xF0, 0x24, 0x6A, 0xD5, 0xF2, 0x80, 0x9A,
+0x10, 0xF0, 0x24, 0x6A, 0x15, 0xF2, 0x84, 0x9A,
 0x10, 0x6D, 0x40, 0xA4, 0x6C, 0xEA, 0xAD, 0xEA,
 0x6C, 0xEA, 0x40, 0xC4, 0x20, 0xE8, 0x09, 0x2A,
-0x10, 0xF0, 0x24, 0x6A, 0xD5, 0xF2, 0x60, 0x9A,
+0x10, 0xF0, 0x24, 0x6A, 0x15, 0xF2, 0x64, 0x9A,
 0x80, 0xA3, 0x7F, 0x6A, 0x8C, 0xEA, 0x40, 0xC3,
 0x20, 0xE8, 0x01, 0x72, 0x1C, 0x61, 0x10, 0xF0,
-0x24, 0x6A, 0xB5, 0xF2, 0x94, 0x9A, 0xFF, 0x6A,
+0x24, 0x6A, 0xF5, 0xF1, 0x98, 0x9A, 0xFF, 0x6A,
 0x40, 0x6D, 0x60, 0xA4, 0x4C, 0xEB, 0xAD, 0xEB,
 0x4C, 0xEB, 0x60, 0xC4, 0x10, 0xF0, 0x24, 0x6B,
-0xD5, 0xF2, 0x80, 0x9B, 0x60, 0xA4, 0x4C, 0xEB,
+0x15, 0xF2, 0x84, 0x9B, 0x60, 0xA4, 0x4C, 0xEB,
 0xAD, 0xEB, 0x4C, 0xEB, 0x60, 0xC4, 0x60, 0xA4,
 0x80, 0x4D, 0xC0, 0x4D, 0x4C, 0xEB, 0xAD, 0xEB,
 0x4C, 0xEB, 0x60, 0xC4, 0x20, 0xE8, 0x02, 0x72,
-0x10, 0x61, 0x10, 0xF0, 0x24, 0x6A, 0xB5, 0xF2,
-0x54, 0x9A, 0xBF, 0x6B, 0x80, 0xA2, 0x6C, 0xEC,
-0x80, 0xC2, 0x10, 0xF0, 0x24, 0x6A, 0xD5, 0xF2,
-0x40, 0x9A, 0x80, 0xA2, 0x8C, 0xEB, 0x60, 0xC2,
+0x10, 0x61, 0x10, 0xF0, 0x24, 0x6A, 0xF5, 0xF1,
+0x58, 0x9A, 0xBF, 0x6B, 0x80, 0xA2, 0x6C, 0xEC,
+0x80, 0xC2, 0x10, 0xF0, 0x24, 0x6A, 0x15, 0xF2,
+0x44, 0x9A, 0x80, 0xA2, 0x8C, 0xEB, 0x60, 0xC2,
 0x20, 0xE8, 0x03, 0x72, 0x14, 0x61, 0x10, 0xF0,
-0x24, 0x6A, 0xB5, 0xF2, 0x94, 0x9A, 0xFF, 0x6B,
+0x24, 0x6A, 0xF5, 0xF1, 0x98, 0x9A, 0xFF, 0x6B,
 0x40, 0x6D, 0x40, 0xA4, 0x6C, 0xEA, 0xAD, 0xEA,
 0x6C, 0xEA, 0x40, 0xC4, 0x10, 0xF0, 0x24, 0x6A,
-0xD5, 0xF2, 0x80, 0x9A, 0x40, 0xA4, 0x6C, 0xEA,
+0x15, 0xF2, 0x84, 0x9A, 0x40, 0xA4, 0x6C, 0xEA,
 0xAD, 0xEA, 0x6C, 0xEA, 0x40, 0xC4, 0x20, 0xE8,
 0xFF, 0x63, 0x01, 0xD0, 0x10, 0xF0, 0x24, 0x6B,
-0xD5, 0xF2, 0x64, 0x9B, 0xFF, 0x6A, 0x4C, 0xEC,
+0x15, 0xF2, 0x68, 0x9B, 0xFF, 0x6A, 0x4C, 0xEC,
 0x6D, 0xE5, 0x00, 0xA3, 0x3F, 0x6F, 0x01, 0x74,
 0x0C, 0xEF, 0x4C, 0xEE, 0xE0, 0xC3, 0x10, 0x61,
-0x10, 0xF0, 0x24, 0x6C, 0xD5, 0xF2, 0xE8, 0x9C,
+0x10, 0xF0, 0x24, 0x6C, 0x15, 0xF2, 0xEC, 0x9C,
 0x10, 0x68, 0xFD, 0xE5, 0x80, 0xA7, 0x4C, 0xEC,
 0x0D, 0xEC, 0x4C, 0xEC, 0x80, 0xC7, 0x80, 0xA3,
 0x80, 0x6F, 0xEB, 0xEF, 0x4C, 0xEC, 0x0D, 0x10,
-0x0F, 0x2C, 0x10, 0xF0, 0x24, 0x6C, 0xD5, 0xF2,
-0xE8, 0x9C, 0xEF, 0x6C, 0xFD, 0xE5, 0x00, 0xA7,
+0x0F, 0x2C, 0x10, 0xF0, 0x24, 0x6C, 0x15, 0xF2,
+0xEC, 0x9C, 0xEF, 0x6C, 0xFD, 0xE5, 0x00, 0xA7,
 0x0C, 0xEC, 0x80, 0xC7, 0x80, 0xA3, 0x40, 0x6F,
 0x4C, 0xEC, 0xED, 0xEC, 0x4C, 0xEC, 0x80, 0xC3,
-0x10, 0xF0, 0x24, 0x6A, 0xD5, 0xF2, 0x4C, 0x9A,
+0x10, 0xF0, 0x24, 0x6A, 0x15, 0xF2, 0x50, 0x9A,
 0x80, 0xF4, 0xC0, 0x36, 0x55, 0xE5, 0x40, 0x9D,
 0x4D, 0xEE, 0xC0, 0xDD, 0x01, 0x90, 0x01, 0x63,
 0x20, 0xE8, 0x00, 0x65, 0xFD, 0x63, 0x05, 0x62,
-0x10, 0xF0, 0x24, 0x6A, 0xD5, 0xF2, 0x50, 0x9A,
+0x10, 0xF0, 0x24, 0x6A, 0x15, 0xF2, 0x54, 0x9A,
 0xFF, 0x6B, 0x40, 0xA2, 0x6C, 0xEA, 0x52, 0x32,
 0x6C, 0xEA, 0x11, 0x2A, 0x30, 0xF0, 0x20, 0x6B,
 0x30, 0xF0, 0x20, 0x6A, 0x6E, 0xF2, 0x5C, 0x9A,
@@ -6156,10 +6155,10 @@ u8 array_mp_8821c_fw_ap[] = {
 0x03, 0x63, 0x00, 0xEF, 0xFD, 0x63, 0x05, 0x62,
 0x04, 0xD0, 0xFF, 0x6A, 0x64, 0x67, 0x4C, 0xEB,
 0x85, 0x67, 0x02, 0x5B, 0x4C, 0xEC, 0x43, 0x60,
-0x10, 0xF0, 0x24, 0x6D, 0xD5, 0xF2, 0xB4, 0x9D,
+0x10, 0xF0, 0x24, 0x6D, 0x15, 0xF2, 0xB8, 0x9D,
 0xFF, 0xF7, 0x1F, 0x6E, 0x30, 0xF0, 0x20, 0x68,
-0xE0, 0xAD, 0x10, 0xF0, 0x24, 0x6D, 0xD5, 0xF2,
-0xB8, 0x9D, 0xCC, 0xEF, 0xC0, 0xF1, 0x08, 0x48,
+0xE0, 0xAD, 0x10, 0xF0, 0x24, 0x6D, 0x15, 0xF2,
+0xBC, 0x9D, 0xCC, 0xEF, 0xC0, 0xF1, 0x08, 0x48,
 0xA0, 0xAD, 0xAC, 0xEE, 0xD7, 0xE7, 0xC8, 0xF2,
 0xDF, 0xA0, 0x4C, 0xED, 0xCE, 0xED, 0x2B, 0x2D,
 0x68, 0xF3, 0x5C, 0xA0, 0x0E, 0x72, 0x0F, 0x61,
@@ -6174,26 +6173,26 @@ u8 array_mp_8821c_fw_ap[] = {
 0x20, 0x6A, 0x6E, 0xF2, 0x58, 0x9A, 0x00, 0x6D,
 0xFF, 0x6C, 0xC5, 0x67, 0x40, 0xEA, 0x05, 0x97,
 0x04, 0x90, 0x03, 0x63, 0x00, 0xEF, 0x00, 0x65,
-0x10, 0xF0, 0x24, 0x6A, 0x55, 0xF3, 0x50, 0x9A,
+0x10, 0xF0, 0x24, 0x6A, 0x95, 0xF2, 0x54, 0x9A,
 0xFF, 0x6B, 0x80, 0xA2, 0x00, 0xF6, 0x80, 0x34,
 0x00, 0xF6, 0x83, 0x34, 0x00, 0x54, 0x24, 0x60,
 0xA0, 0xA2, 0x7F, 0x6C, 0xAC, 0xEC, 0x80, 0xC2,
 0x80, 0xA2, 0x40, 0x6D, 0x6C, 0xEC, 0xAD, 0xEC,
 0x6C, 0xEC, 0x80, 0xC2, 0x80, 0xA2, 0x10, 0xF0,
-0x24, 0x6C, 0xF5, 0xF1, 0x9C, 0x9C, 0x3F, 0x6D,
-0x80, 0xA4, 0x10, 0xF0, 0x24, 0x6C, 0x15, 0xF2,
-0x80, 0x9C, 0x80, 0xA4, 0x10, 0xF0, 0x24, 0x6C,
-0x55, 0xF3, 0x94, 0x9C, 0x80, 0xA4, 0x80, 0xA2,
+0x24, 0x6C, 0x55, 0xF1, 0x80, 0x9C, 0x3F, 0x6D,
+0x80, 0xA4, 0x10, 0xF0, 0x24, 0x6C, 0x55, 0xF1,
+0x84, 0x9C, 0x80, 0xA4, 0x10, 0xF0, 0x24, 0x6C,
+0x95, 0xF2, 0x98, 0x9C, 0x80, 0xA4, 0x80, 0xA2,
 0x6C, 0xEC, 0xAD, 0xEC, 0x6C, 0xEC, 0x80, 0xC2,
 0x80, 0xA2, 0xBF, 0x6B, 0x8C, 0xEB, 0x60, 0xC2,
 0x20, 0xE8, 0x00, 0x65, 0x10, 0xF0, 0x24, 0x6B,
-0x55, 0xF3, 0x78, 0x9B, 0xFF, 0x6A, 0x4C, 0xEC,
+0x95, 0xF2, 0x7C, 0x9B, 0xFF, 0x6A, 0x4C, 0xEC,
 0xC0, 0xA3, 0x4C, 0xED, 0x0C, 0x26, 0x10, 0xF0,
-0x24, 0x6A, 0x15, 0xF2, 0x78, 0x9A, 0x10, 0xF0,
-0x24, 0x6C, 0x55, 0xF3, 0x9C, 0x9C, 0x40, 0x9B,
+0x24, 0x6A, 0x55, 0xF1, 0x7C, 0x9A, 0x10, 0xF0,
+0x24, 0x6C, 0xB5, 0xF2, 0x80, 0x9C, 0x40, 0x9B,
 0x8D, 0xEA, 0x40, 0xDB, 0x20, 0xE8, 0x80, 0xC3,
-0x0B, 0x25, 0x10, 0xF0, 0x24, 0x6B, 0x75, 0xF3,
-0x80, 0x9B, 0x80, 0x6D, 0xAB, 0xED, 0x60, 0xA4,
+0x0B, 0x25, 0x10, 0xF0, 0x24, 0x6B, 0xB5, 0xF2,
+0x84, 0x9B, 0x80, 0x6D, 0xAB, 0xED, 0x60, 0xA4,
 0x4C, 0xEB, 0xAE, 0xEB, 0x4C, 0xEB, 0x60, 0xC4,
 0x20, 0xE8, 0x00, 0x65, 0xFB, 0x63, 0x09, 0x62,
 0x08, 0xD1, 0x07, 0xD0, 0xFF, 0xF7, 0x1F, 0x6A,
@@ -6205,34 +6204,34 @@ u8 array_mp_8821c_fw_ap[] = {
 0x40, 0xA8, 0x01, 0x4A, 0x40, 0xC8, 0x1F, 0xF7,
 0x00, 0x6A, 0x2C, 0xEA, 0x02, 0xF0, 0x00, 0x72,
 0x01, 0x60, 0x05, 0x2A, 0x10, 0xF0, 0x24, 0x6A,
-0xB5, 0xF1, 0x5C, 0x9A, 0x04, 0x10, 0x10, 0xF0,
-0x24, 0x6A, 0xD5, 0xF1, 0x40, 0x9A, 0x49, 0xE1,
+0x15, 0xF1, 0x40, 0x9A, 0x04, 0x10, 0x10, 0xF0,
+0x24, 0x6A, 0x15, 0xF1, 0x44, 0x9A, 0x49, 0xE1,
 0x0B, 0x93, 0x40, 0x9A, 0x6C, 0xEA, 0x0C, 0x93,
 0x6E, 0xEA, 0x04, 0x22, 0x40, 0xA8, 0x04, 0x93,
 0x63, 0xEA, 0xDC, 0x61, 0x40, 0xA8, 0x04, 0x93,
 0x63, 0xEA, 0x58, 0x67, 0x09, 0x97, 0x08, 0x91,
 0x07, 0x90, 0x05, 0x63, 0x00, 0xEF, 0x00, 0x65,
-0x10, 0xF0, 0x24, 0x6B, 0x75, 0xF3, 0x64, 0x9B,
+0x10, 0xF0, 0x24, 0x6B, 0xB5, 0xF2, 0x68, 0x9B,
 0xFF, 0x6A, 0xCC, 0xEA, 0x6D, 0xEA, 0xE0, 0xF1,
 0x1F, 0x6B, 0xAC, 0xEB, 0x10, 0xF0, 0x24, 0x6C,
-0x75, 0xF3, 0x88, 0x9C, 0x60, 0x33, 0x60, 0x33,
+0xB5, 0xF2, 0x8C, 0x9C, 0x60, 0x33, 0x60, 0x33,
 0x6D, 0xEA, 0x40, 0xDC, 0x10, 0xF0, 0x24, 0x6A,
-0xF5, 0xF1, 0x4C, 0x9A, 0x6D, 0xEA, 0x40, 0xDC,
+0x35, 0xF1, 0x50, 0x9A, 0x6D, 0xEA, 0x40, 0xDC,
 0x20, 0xE8, 0x00, 0x65, 0xE0, 0xF1, 0x1F, 0x6A,
-0x10, 0xF0, 0x24, 0x6B, 0xF5, 0xF1, 0x6C, 0x9B,
+0x10, 0xF0, 0x24, 0x6B, 0x35, 0xF1, 0x70, 0x9B,
 0xAC, 0xEA, 0x40, 0x32, 0x40, 0x32, 0x6D, 0xEA,
-0x10, 0xF0, 0x24, 0x6B, 0x75, 0xF3, 0x68, 0x9B,
-0x40, 0xDB, 0x10, 0xF0, 0x24, 0x6A, 0x75, 0xF3,
-0x4C, 0x9A, 0xFF, 0x6B, 0x40, 0xA2, 0x6C, 0xEA,
+0x10, 0xF0, 0x24, 0x6B, 0xB5, 0xF2, 0x6C, 0x9B,
+0x40, 0xDB, 0x10, 0xF0, 0x24, 0x6A, 0xB5, 0xF2,
+0x50, 0x9A, 0xFF, 0x6B, 0x40, 0xA2, 0x6C, 0xEA,
 0x20, 0xE8, 0x00, 0x65, 0xFC, 0x63, 0x07, 0x62,
 0x06, 0xD1, 0x05, 0xD0, 0x01, 0x68, 0x04, 0xEC,
 0x04, 0xF7, 0x10, 0x69, 0x13, 0x10, 0x30, 0xF0,
 0x20, 0x6A, 0xCE, 0xF4, 0x5C, 0x9A, 0x01, 0x6C,
 0xFF, 0x49, 0x40, 0xEA, 0x0B, 0x29, 0x10, 0xF0,
-0x24, 0x6A, 0x15, 0xF2, 0x78, 0x9A, 0x08, 0xF0,
+0x24, 0x6A, 0x55, 0xF1, 0x7C, 0x9A, 0x08, 0xF0,
 0x00, 0x6C, 0x40, 0x9B, 0x8D, 0xEA, 0x40, 0xDB,
 0x00, 0x6A, 0x0B, 0x10, 0x10, 0xF0, 0x24, 0x6A,
-0x75, 0xF3, 0x50, 0x9A, 0x60, 0xAA, 0xFF, 0xF7,
+0xB5, 0xF2, 0x54, 0x9A, 0x60, 0xAA, 0xFF, 0xF7,
 0x1F, 0x6A, 0x6C, 0xEA, 0x0C, 0xEA, 0xE3, 0x2A,
 0x01, 0x6A, 0x07, 0x97, 0x06, 0x91, 0x05, 0x90,
 0x04, 0x63, 0x00, 0xEF, 0xFB, 0x63, 0x09, 0x62,
@@ -6242,80 +6241,80 @@ u8 array_mp_8821c_fw_ap[] = {
 0x0C, 0xD6, 0x0D, 0xD7, 0x04, 0xD3, 0x4C, 0xE9,
 0x00, 0x18, 0x13, 0xD1, 0x80, 0xF0, 0x07, 0x22,
 0x06, 0x58, 0x80, 0xF0, 0x04, 0x60, 0x10, 0xF0,
-0x24, 0x6A, 0x08, 0x30, 0xB4, 0xF5, 0x14, 0x4A,
+0x24, 0x6A, 0x08, 0x30, 0xF4, 0xF4, 0x18, 0x4A,
 0x09, 0xE2, 0x40, 0x9A, 0x00, 0xEA, 0x02, 0xF2,
 0x10, 0x6A, 0x0E, 0x10, 0x02, 0xF2, 0x00, 0x6A,
 0x0B, 0x10, 0x22, 0xF2, 0x00, 0x6A, 0x08, 0x10,
 0x22, 0xF2, 0x10, 0x6A, 0x05, 0x10, 0x42, 0xF2,
 0x00, 0x6A, 0x02, 0x10, 0x42, 0xF2, 0x10, 0x6A,
-0x10, 0xF0, 0x24, 0x6B, 0x0D, 0x94, 0x35, 0xF3,
-0x78, 0x9B, 0x8C, 0xEB, 0x10, 0xF0, 0x24, 0x6C,
-0x75, 0xF3, 0x94, 0x9C, 0x8D, 0xEB, 0x06, 0x21,
-0x10, 0xF0, 0x24, 0x6C, 0x75, 0xF3, 0x98, 0x9C,
+0x10, 0xF0, 0x24, 0x6B, 0x0D, 0x94, 0x75, 0xF2,
+0x7C, 0x9B, 0x8C, 0xEB, 0x10, 0xF0, 0x24, 0x6C,
+0xB5, 0xF2, 0x98, 0x9C, 0x8D, 0xEB, 0x06, 0x21,
+0x10, 0xF0, 0x24, 0x6C, 0xB5, 0xF2, 0x9C, 0x9C,
 0x6D, 0xEC, 0x05, 0x10, 0x10, 0xF0, 0x24, 0x6C,
-0x75, 0xF3, 0x9C, 0x9C, 0x6C, 0xEC, 0x04, 0x96,
-0x06, 0x26, 0x10, 0xF0, 0x24, 0x6B, 0xF5, 0xF1,
-0x6C, 0x9B, 0x8D, 0xEB, 0x05, 0x10, 0x10, 0xF0,
-0x24, 0x6B, 0x95, 0xF3, 0x60, 0x9B, 0x8C, 0xEB,
+0xD5, 0xF2, 0x80, 0x9C, 0x6C, 0xEC, 0x04, 0x96,
+0x06, 0x26, 0x10, 0xF0, 0x24, 0x6B, 0x35, 0xF1,
+0x70, 0x9B, 0x8D, 0xEB, 0x05, 0x10, 0x10, 0xF0,
+0x24, 0x6B, 0xD5, 0xF2, 0x64, 0x9B, 0x8C, 0xEB,
 0x1F, 0xF7, 0x00, 0x6C, 0x4C, 0xEC, 0x02, 0xF0,
 0x00, 0x74, 0x01, 0x60, 0x05, 0x2C, 0x10, 0xF0,
-0x24, 0x6C, 0xB5, 0xF1, 0xBC, 0x9C, 0x04, 0x10,
-0x10, 0xF0, 0x24, 0x6C, 0xD5, 0xF1, 0xA0, 0x9C,
-0x10, 0xF0, 0x24, 0x6C, 0x0B, 0x96, 0x95, 0xF3,
-0x84, 0x9C, 0xB5, 0xE2, 0xCC, 0xEC, 0x80, 0xDD,
+0x24, 0x6C, 0x15, 0xF1, 0xA0, 0x9C, 0x04, 0x10,
+0x10, 0xF0, 0x24, 0x6C, 0x15, 0xF1, 0xA4, 0x9C,
+0x10, 0xF0, 0x24, 0x6C, 0x0B, 0x96, 0xD5, 0xF2,
+0x88, 0x9C, 0xB5, 0xE2, 0xCC, 0xEC, 0x80, 0xDD,
 0x84, 0x42, 0x1F, 0xF7, 0x00, 0x6D, 0xAC, 0xEC,
 0x02, 0xF0, 0x00, 0x74, 0x01, 0x60, 0x05, 0x2C,
-0x10, 0xF0, 0x24, 0x6C, 0x95, 0xF3, 0xA8, 0x9C,
-0x04, 0x10, 0x10, 0xF0, 0x24, 0x6C, 0x95, 0xF3,
-0xAC, 0x9C, 0x10, 0xF0, 0x24, 0x6C, 0x0C, 0x96,
-0x95, 0xF3, 0x84, 0x9C, 0xB5, 0xE2, 0xCC, 0xEC,
+0x10, 0xF0, 0x24, 0x6C, 0xD5, 0xF2, 0xAC, 0x9C,
+0x04, 0x10, 0x10, 0xF0, 0x24, 0x6C, 0xD5, 0xF2,
+0xB0, 0x9C, 0x10, 0xF0, 0x24, 0x6C, 0x0C, 0x96,
+0xD5, 0xF2, 0x88, 0x9C, 0xB5, 0xE2, 0xCC, 0xEC,
 0x80, 0xDD, 0x87, 0x42, 0x01, 0x4C, 0x1F, 0xF7,
 0x00, 0x6D, 0xAC, 0xEC, 0x02, 0xF0, 0x00, 0x74,
 0x01, 0x60, 0x05, 0x2C, 0x10, 0xF0, 0x24, 0x6C,
-0x95, 0xF3, 0x90, 0x9C, 0x04, 0x10, 0x10, 0xF0,
-0x24, 0x6C, 0x95, 0xF3, 0x94, 0x9C, 0x89, 0xE2,
+0xD5, 0xF2, 0x94, 0x9C, 0x04, 0x10, 0x10, 0xF0,
+0x24, 0x6C, 0xD5, 0xF2, 0x98, 0x9C, 0x89, 0xE2,
 0x60, 0xDA, 0x01, 0x6A, 0x01, 0x10, 0x00, 0x6A,
 0x09, 0x97, 0x08, 0x91, 0x07, 0x90, 0x05, 0x63,
 0x00, 0xEF, 0x00, 0x65, 0xFD, 0x63, 0x05, 0x62,
 0x04, 0xD0, 0x04, 0xF7, 0x10, 0x68, 0x13, 0x10,
 0x30, 0xF0, 0x20, 0x6A, 0xCE, 0xF4, 0x5C, 0x9A,
 0x05, 0x6C, 0xFF, 0x48, 0x40, 0xEA, 0x0B, 0x28,
-0x10, 0xF0, 0x24, 0x6A, 0x15, 0xF2, 0x78, 0x9A,
+0x10, 0xF0, 0x24, 0x6A, 0x55, 0xF1, 0x7C, 0x9A,
 0x08, 0xF0, 0x00, 0x6C, 0x40, 0x9B, 0x8D, 0xEA,
 0x40, 0xDB, 0x00, 0x6A, 0x09, 0x10, 0x10, 0xF0,
-0x24, 0x6A, 0x75, 0xF3, 0x50, 0x9A, 0x60, 0xAA,
+0x24, 0x6A, 0xB5, 0xF2, 0x54, 0x9A, 0x60, 0xAA,
 0x3F, 0x6A, 0x6C, 0xEA, 0xE5, 0x2A, 0x01, 0x6A,
 0x05, 0x97, 0x04, 0x90, 0x03, 0x63, 0x00, 0xEF,
-0x10, 0xF0, 0x24, 0x6A, 0x75, 0xF3, 0x50, 0x9A,
+0x10, 0xF0, 0x24, 0x6A, 0xB5, 0xF2, 0x54, 0x9A,
 0x40, 0xAA, 0x20, 0xE8, 0x10, 0xF0, 0x24, 0x6A,
-0x75, 0xF3, 0x50, 0x9A, 0x40, 0xAA, 0x20, 0xE8,
+0xB5, 0xF2, 0x54, 0x9A, 0x40, 0xAA, 0x20, 0xE8,
 0xFD, 0x63, 0x05, 0x62, 0x00, 0x6A, 0x10, 0xF0,
-0x24, 0x6C, 0x95, 0xF1, 0x8C, 0x9C, 0x10, 0xF0,
+0x24, 0x6C, 0xD5, 0xF0, 0x90, 0x9C, 0x10, 0xF0,
 0x23, 0x6B, 0x48, 0xF6, 0x11, 0x4B, 0x0A, 0x72,
 0x60, 0xDC, 0x0C, 0x61, 0x30, 0xF0, 0x21, 0x6B,
 0x30, 0xF0, 0x20, 0x6A, 0xEE, 0xF7, 0x54, 0x9A,
 0xB0, 0xF4, 0x8C, 0x9B, 0x01, 0x6D, 0xAB, 0xED,
 0x40, 0xEA, 0x00, 0x6A, 0x10, 0xF0, 0x24, 0x6C,
-0xFF, 0x6B, 0x01, 0x4A, 0x95, 0xF1, 0x8C, 0x9C,
+0xFF, 0x6B, 0x01, 0x4A, 0xD5, 0xF0, 0x90, 0x9C,
 0x6C, 0xEA, 0x10, 0xF0, 0x23, 0x6B, 0x48, 0xF6,
 0x12, 0x4B, 0x60, 0xDC, 0xDC, 0x17, 0x00, 0x65,
 0xFB, 0x63, 0x09, 0x62, 0x08, 0xD1, 0x07, 0xD0,
 0x00, 0x6A, 0x04, 0xD2, 0x04, 0x92, 0x01, 0x72,
 0x58, 0x67, 0x04, 0xD2, 0x10, 0xF0, 0x23, 0x6A,
 0x78, 0x67, 0xA8, 0xF6, 0x01, 0x4A, 0x69, 0xE2,
-0x10, 0xF0, 0x24, 0x6B, 0x95, 0xF1, 0x6C, 0x9B,
+0x10, 0xF0, 0x24, 0x6B, 0xD5, 0xF0, 0x70, 0x9B,
 0x40, 0xDB, 0x00, 0x1C, 0x96, 0x45, 0x00, 0x18,
 0xAE, 0xD0, 0x00, 0x1C, 0x95, 0x45, 0x00, 0x1C,
 0x96, 0x45, 0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1,
 0x08, 0x4A, 0x80, 0xF0, 0x8C, 0x9A, 0x02, 0x6B,
 0x8C, 0xEB, 0x09, 0x23, 0x03, 0x6B, 0x6B, 0xEB,
 0x8C, 0xEB, 0x80, 0xF0, 0x6C, 0xDA, 0x00, 0x18,
-0x36, 0xDA, 0x00, 0x18, 0x98, 0xDA, 0x00, 0x1C,
+0x0E, 0xDA, 0x00, 0x18, 0x70, 0xDA, 0x00, 0x1C,
 0x95, 0x45, 0x00, 0x1C, 0x96, 0x45, 0x30, 0xF0,
 0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A, 0x80, 0xF0,
 0x8C, 0x9A, 0x04, 0x6B, 0x8C, 0xEB, 0x09, 0x23,
 0x05, 0x6B, 0x6B, 0xEB, 0x8C, 0xEB, 0x80, 0xF0,
-0x6C, 0xDA, 0x00, 0x18, 0xD8, 0xD6, 0x00, 0x18,
+0x6C, 0xDA, 0x00, 0x18, 0xB0, 0xD6, 0x00, 0x18,
 0x1E, 0xD6, 0x00, 0x1C, 0x95, 0x45, 0x00, 0x1C,
 0x96, 0x45, 0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1,
 0x08, 0x4A, 0x68, 0xF3, 0x94, 0xA2, 0x7F, 0x6B,
@@ -6341,40 +6340,40 @@ u8 array_mp_8821c_fw_ap[] = {
 0x08, 0x4A, 0x80, 0xF0, 0x8C, 0x9A, 0x02, 0xF0,
 0x00, 0x6B, 0x8C, 0xEB, 0x08, 0x23, 0x02, 0xF0,
 0x01, 0x6B, 0x6B, 0xEB, 0x8C, 0xEB, 0x80, 0xF0,
-0x6C, 0xDA, 0x00, 0x18, 0x8B, 0xE4, 0x00, 0x1C,
+0x6C, 0xDA, 0x00, 0x18, 0x5C, 0xE4, 0x00, 0x1C,
 0x95, 0x45, 0x00, 0x1C, 0x96, 0x45, 0x30, 0xF0,
 0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A, 0x10, 0xF0,
-0x24, 0x6B, 0x55, 0xF2, 0x60, 0x9B, 0x80, 0xF0,
+0x24, 0x6B, 0x95, 0xF1, 0x64, 0x9B, 0x80, 0xF0,
 0x8C, 0x9A, 0x8C, 0xEB, 0x20, 0x23, 0x10, 0xF0,
-0x24, 0x6B, 0xB5, 0xF3, 0x60, 0x9B, 0x8C, 0xEB,
+0x24, 0x6B, 0xF5, 0xF2, 0x64, 0x9B, 0x8C, 0xEB,
 0x68, 0xF3, 0x94, 0xA2, 0x80, 0xF0, 0x6C, 0xDA,
 0x7F, 0x6B, 0x8C, 0xEB, 0x07, 0x2B, 0x68, 0xF3,
 0x5C, 0xA2, 0x0C, 0x72, 0x03, 0x61, 0x00, 0x18,
-0x54, 0xD8, 0x0D, 0x10, 0x30, 0xF0, 0x20, 0x6A,
+0x2C, 0xD8, 0x0D, 0x10, 0x30, 0xF0, 0x20, 0x6A,
 0xC0, 0xF1, 0x08, 0x4A, 0x10, 0xF0, 0x24, 0x6C,
-0x80, 0xF0, 0x6C, 0x9A, 0x55, 0xF2, 0x80, 0x9C,
+0x80, 0xF0, 0x6C, 0x9A, 0x95, 0xF1, 0x84, 0x9C,
 0x8D, 0xEB, 0x80, 0xF0, 0x6C, 0xDA, 0x00, 0x1C,
 0x95, 0x45, 0x30, 0xF0, 0x20, 0x6A, 0xCC, 0xF1,
 0x53, 0xA2, 0x0F, 0x2A, 0x10, 0xF0, 0x24, 0x6A,
-0xB5, 0xF3, 0x44, 0x9A, 0x01, 0x6B, 0x80, 0xA2,
+0xF5, 0xF2, 0x48, 0x9A, 0x01, 0x6B, 0x80, 0xA2,
 0x8C, 0xEB, 0x07, 0x23, 0x80, 0xA2, 0xFE, 0x6B,
 0x8C, 0xEB, 0x60, 0xC2, 0x03, 0x6C, 0x00, 0x18,
-0x6F, 0xDB, 0x30, 0xF0, 0x20, 0x69, 0x2F, 0xF5,
+0x47, 0xDB, 0x30, 0xF0, 0x20, 0x69, 0x2F, 0xF5,
 0x18, 0x49, 0x00, 0xF2, 0x03, 0xA1, 0x01, 0x6A,
 0x4E, 0xE8, 0x05, 0x28, 0x0B, 0x6C, 0x00, 0x18,
-0x6F, 0xDB, 0x00, 0xF2, 0x03, 0xC1, 0x30, 0xF0,
+0x47, 0xDB, 0x00, 0xF2, 0x03, 0xC1, 0x30, 0xF0,
 0x21, 0x6B, 0x30, 0xF0, 0x20, 0x6A, 0xB0, 0xF4,
 0x8C, 0x9B, 0xEE, 0xF7, 0x58, 0x9A, 0x40, 0xEA,
 0xFD, 0x16, 0x00, 0x65, 0x10, 0xF0, 0x24, 0x6A,
-0xB5, 0xF3, 0x68, 0x9A, 0xDF, 0x6A, 0x80, 0xA3,
+0xF5, 0xF2, 0x6C, 0x9A, 0xDF, 0x6A, 0x80, 0xA3,
 0x8C, 0xEA, 0x40, 0xC3, 0x20, 0xE8, 0x00, 0x65,
-0x10, 0xF0, 0x24, 0x6B, 0xB5, 0xF3, 0xA8, 0x9B,
+0x10, 0xF0, 0x24, 0x6B, 0xF5, 0xF2, 0xAC, 0x9B,
 0xFF, 0x6A, 0x20, 0x6E, 0x60, 0xA5, 0x4C, 0xEC,
 0x4C, 0xEB, 0xCD, 0xEB, 0x4C, 0xEB, 0x07, 0xF7,
 0x01, 0x4A, 0x4D, 0xEC, 0x10, 0xF0, 0x24, 0x6A,
-0xB5, 0xF3, 0x4C, 0x9A, 0x60, 0xC5, 0x80, 0xCA,
+0xF5, 0xF2, 0x50, 0x9A, 0x60, 0xC5, 0x80, 0xCA,
 0x20, 0xE8, 0x00, 0x65, 0x10, 0xF0, 0x24, 0x6A,
-0xB5, 0xF3, 0x4C, 0x9A, 0x68, 0xF0, 0x04, 0x6B,
+0xF5, 0xF2, 0x50, 0x9A, 0x68, 0xF0, 0x04, 0x6B,
 0x60, 0xCA, 0x20, 0xE8, 0x03, 0x6F, 0x8C, 0xEF,
 0x64, 0x67, 0x46, 0x67, 0x04, 0x27, 0x07, 0x10,
 0xA0, 0xDB, 0xFC, 0x4A, 0x04, 0x4B, 0x04, 0x5A,
@@ -6414,8 +6413,8 @@ u8 array_mp_8821c_fw_ap[] = {
 0x22, 0x6B, 0x30, 0xF0, 0x21, 0x6A, 0x90, 0xF3,
 0x60, 0xDA, 0x11, 0xF0, 0x00, 0x6B, 0x09, 0x10,
 0x43, 0x6B, 0x30, 0xF0, 0x21, 0x6A, 0x90, 0xF3,
-0x60, 0xDA, 0x10, 0xF0, 0x24, 0x6A, 0xB5, 0xF3,
-0x70, 0x9A, 0x30, 0xF0, 0x21, 0x6A, 0x90, 0xF3,
+0x60, 0xDA, 0x10, 0xF0, 0x24, 0x6A, 0xF5, 0xF2,
+0x74, 0x9A, 0x30, 0xF0, 0x21, 0x6A, 0x90, 0xF3,
 0x64, 0xDA, 0x20, 0xE8, 0x30, 0xF0, 0x21, 0x6A,
 0x70, 0xF3, 0x5C, 0x9A, 0x20, 0xE8, 0x00, 0x65,
 0xFF, 0x63, 0x0C, 0x24, 0x30, 0xF0, 0x21, 0x6A,
@@ -6445,8 +6444,8 @@ u8 array_mp_8821c_fw_ap[] = {
 0xD0, 0x36, 0x07, 0xD6, 0x20, 0xF6, 0xC4, 0xA2,
 0x03, 0x6A, 0x05, 0xD3, 0x4C, 0xEE, 0x30, 0xF0,
 0x20, 0x6A, 0xCE, 0xF4, 0x70, 0x9A, 0xC0, 0x36,
-0x10, 0xF0, 0x24, 0x6A, 0x06, 0xD6, 0xB5, 0xF3,
-0xD4, 0x9A, 0x01, 0x6D, 0xE3, 0xF2, 0x1F, 0x4C,
+0x10, 0xF0, 0x24, 0x6A, 0x06, 0xD6, 0xF5, 0xF2,
+0xD8, 0x9A, 0x01, 0x6D, 0xE3, 0xF2, 0x1F, 0x4C,
 0xAB, 0xED, 0x40, 0xEB, 0x06, 0x93, 0x07, 0x96,
 0x30, 0xF0, 0x20, 0x6C, 0xCE, 0xF4, 0x50, 0x9C,
 0x6D, 0xEE, 0x04, 0x93, 0xE3, 0xF3, 0x10, 0x6C,
@@ -6464,15 +6463,15 @@ u8 array_mp_8821c_fw_ap[] = {
 0xF9, 0x63, 0x0D, 0x62, 0x0C, 0xD1, 0x0B, 0xD0,
 0xFF, 0x6A, 0x8C, 0xEA, 0x04, 0xD2, 0x00, 0x69,
 0x30, 0xF0, 0x20, 0x68, 0x10, 0xF0, 0x24, 0x6B,
-0xB5, 0xF3, 0xD4, 0x9B, 0xCE, 0xF4, 0x50, 0x98,
+0xF5, 0xF2, 0xD8, 0x9B, 0xCE, 0xF4, 0x50, 0x98,
 0x01, 0x6D, 0x03, 0xF3, 0x00, 0x6C, 0xAB, 0xED,
 0x40, 0xEA, 0xCE, 0xF4, 0x50, 0x98, 0x01, 0x6D,
 0x23, 0xF3, 0x0C, 0x6C, 0xAB, 0xED, 0x07, 0x6E,
-0x40, 0xEA, 0x10, 0xF0, 0x24, 0x6B, 0xF5, 0xF1,
-0x0C, 0x4B, 0xC0, 0x9B, 0xCE, 0xF4, 0x50, 0x98,
+0x40, 0xEA, 0x10, 0xF0, 0x24, 0x6B, 0x35, 0xF1,
+0x10, 0x4B, 0xC0, 0x9B, 0xCE, 0xF4, 0x50, 0x98,
 0x01, 0x6D, 0x23, 0xF3, 0x18, 0x6C, 0xAB, 0xED,
-0x40, 0xEA, 0x10, 0xF0, 0x24, 0x6B, 0xF5, 0xF1,
-0x0C, 0x4B, 0xC0, 0x9B, 0xCE, 0xF4, 0x50, 0x98,
+0x40, 0xEA, 0x10, 0xF0, 0x24, 0x6B, 0x35, 0xF1,
+0x10, 0x4B, 0xC0, 0x9B, 0xCE, 0xF4, 0x50, 0x98,
 0x01, 0x6D, 0x23, 0xF3, 0x1C, 0x6C, 0xAB, 0xED,
 0x40, 0xEA, 0xCE, 0xF4, 0x50, 0x98, 0x01, 0x6D,
 0xC3, 0xF3, 0x0C, 0x6C, 0xAB, 0xED, 0x00, 0x6E,
@@ -6482,10 +6481,10 @@ u8 array_mp_8821c_fw_ap[] = {
 0xCE, 0xF4, 0x50, 0x98, 0x03, 0xF3, 0x0C, 0x6C,
 0x06, 0xF0, 0x00, 0x6D, 0x01, 0x6E, 0x40, 0xEA,
 0x10, 0xF0, 0x24, 0x6B, 0x30, 0xF0, 0x20, 0x6A,
-0xD5, 0xF3, 0xA0, 0x9B, 0xCE, 0xF4, 0x50, 0x9A,
+0x15, 0xF3, 0xA4, 0x9B, 0xCE, 0xF4, 0x50, 0x9A,
 0xC3, 0xF3, 0x14, 0x6C, 0x10, 0x6E, 0x40, 0xEA,
-0x04, 0x95, 0x10, 0xF0, 0x24, 0x6A, 0xD5, 0xF3,
-0x44, 0x9A, 0xAC, 0x34, 0x91, 0xE1, 0x30, 0xF0,
+0x04, 0x95, 0x10, 0xF0, 0x24, 0x6A, 0x15, 0xF3,
+0x48, 0x9A, 0xAC, 0x34, 0x91, 0xE1, 0x30, 0xF0,
 0x20, 0x6B, 0x90, 0x35, 0xC0, 0xF1, 0x08, 0x4B,
 0x90, 0x34, 0xB5, 0xE3, 0x8D, 0xE3, 0x46, 0xE9,
 0xE7, 0xF6, 0x0C, 0x4D, 0xE7, 0xF7, 0x0C, 0x4B,
@@ -6520,7 +6519,7 @@ u8 array_mp_8821c_fw_ap[] = {
 0x07, 0x63, 0x00, 0xEF, 0xFB, 0x63, 0x09, 0x62,
 0x08, 0xD1, 0x07, 0xD0, 0xFF, 0x6A, 0x30, 0xF0,
 0x20, 0x68, 0x10, 0xF0, 0x24, 0x6B, 0x4C, 0xEC,
-0x4C, 0xED, 0x35, 0xF2, 0x1C, 0x4B, 0x00, 0x6A,
+0x4C, 0xED, 0x95, 0xF1, 0x00, 0x4B, 0x00, 0x6A,
 0xC0, 0xF1, 0x08, 0x48, 0x30, 0xF0, 0x20, 0x69,
 0x05, 0xD5, 0x28, 0xF1, 0x4D, 0xC0, 0xA0, 0x9B,
 0xCE, 0xF4, 0x50, 0x99, 0x04, 0xD4, 0x00, 0x6E,
@@ -6531,7 +6530,7 @@ u8 array_mp_8821c_fw_ap[] = {
 0xE7, 0xF6, 0x44, 0x98, 0x4E, 0xEB, 0x04, 0xD3,
 0x1F, 0x2B, 0x05, 0x95, 0x00, 0x6C, 0x00, 0x18,
 0xEC, 0xD2, 0x00, 0x6C, 0x00, 0x18, 0xB7, 0xD2,
-0x10, 0xF0, 0x24, 0x6B, 0x35, 0xF2, 0x1C, 0x4B,
+0x10, 0xF0, 0x24, 0x6B, 0x95, 0xF1, 0x00, 0x4B,
 0xCE, 0xF4, 0x50, 0x99, 0xA0, 0x9B, 0xE3, 0xF3,
 0x10, 0x6C, 0x01, 0x6E, 0x40, 0xEA, 0x30, 0xF0,
 0x21, 0x6A, 0x50, 0xF3, 0x5F, 0xA2, 0x05, 0x22,
@@ -6542,8 +6541,8 @@ u8 array_mp_8821c_fw_ap[] = {
 0x4E, 0xE9, 0x1E, 0x29, 0x05, 0x95, 0x01, 0x6C,
 0x00, 0x18, 0xEC, 0xD2, 0x01, 0x6C, 0x00, 0x18,
 0xB7, 0xD2, 0x10, 0xF0, 0x24, 0x6B, 0x30, 0xF0,
-0x20, 0x6A, 0xCE, 0xF4, 0x50, 0x9A, 0x35, 0xF2,
-0xBC, 0x9B, 0xE3, 0xF3, 0x10, 0x6C, 0x01, 0x6E,
+0x20, 0x6A, 0xCE, 0xF4, 0x50, 0x9A, 0x95, 0xF1,
+0xA0, 0x9B, 0xE3, 0xF3, 0x10, 0x6C, 0x01, 0x6E,
 0x40, 0xEA, 0x30, 0xF0, 0x21, 0x6A, 0x50, 0xF3,
 0x5F, 0xA2, 0x04, 0x2A, 0x01, 0x6A, 0x28, 0xF1,
 0x4D, 0xC0, 0x02, 0x10, 0x28, 0xF1, 0x2D, 0xC0,
@@ -6556,23 +6555,23 @@ u8 array_mp_8821c_fw_ap[] = {
 0x00, 0x18, 0xEC, 0xD2, 0x05, 0x97, 0x03, 0x63,
 0x00, 0xEF, 0x00, 0x65, 0xFC, 0x63, 0x07, 0x62,
 0x06, 0xD1, 0x05, 0xD0, 0x10, 0xF0, 0x24, 0x6A,
-0x25, 0x67, 0x35, 0xF2, 0xBC, 0x9A, 0xFF, 0x68,
+0x25, 0x67, 0x95, 0xF1, 0xA0, 0x9A, 0xFF, 0x68,
 0x8C, 0xE8, 0xA1, 0xF4, 0x18, 0x6C, 0x00, 0x18,
-0x34, 0xE1, 0x28, 0x22, 0x27, 0x20, 0x03, 0x21,
+0x05, 0xE1, 0x28, 0x22, 0x27, 0x20, 0x03, 0x21,
 0x01, 0x71, 0x12, 0x60, 0x34, 0x10, 0x10, 0xF0,
-0x24, 0x6A, 0xF5, 0xF3, 0x18, 0x9A, 0x00, 0x6C,
-0x01, 0x6D, 0xD0, 0x67, 0x00, 0x18, 0x7F, 0xE1,
+0x24, 0x6A, 0x35, 0xF3, 0x1C, 0x9A, 0x00, 0x6C,
+0x01, 0x6D, 0xD0, 0x67, 0x00, 0x18, 0x50, 0xE1,
 0x0E, 0x6B, 0x6B, 0xEB, 0x4C, 0xEB, 0x00, 0x6C,
 0x01, 0x6D, 0xD0, 0x67, 0x09, 0x6F, 0x10, 0x10,
-0x10, 0xF0, 0x24, 0x6A, 0xF5, 0xF3, 0x18, 0x9A,
+0x10, 0xF0, 0x24, 0x6A, 0x35, 0xF3, 0x1C, 0x9A,
 0x00, 0x6C, 0x01, 0x6D, 0xD0, 0x67, 0x00, 0x18,
-0x7F, 0xE1, 0x0E, 0x6B, 0x6B, 0xEB, 0x4C, 0xEB,
+0x50, 0xE1, 0x0E, 0x6B, 0x6B, 0xEB, 0x4C, 0xEB,
 0x00, 0x6C, 0x01, 0x6D, 0xD0, 0x67, 0x05, 0x6F,
 0x6D, 0xEF, 0x0F, 0x10, 0x10, 0xF0, 0x24, 0x6A,
-0xF5, 0xF3, 0x18, 0x9A, 0x00, 0x6C, 0x01, 0x6D,
-0xD0, 0x67, 0x00, 0x18, 0x7F, 0xE1, 0x02, 0x6F,
+0x35, 0xF3, 0x1C, 0x9A, 0x00, 0x6C, 0x01, 0x6D,
+0xD0, 0x67, 0x00, 0x18, 0x50, 0xE1, 0x02, 0x6F,
 0xEB, 0xEF, 0x00, 0x6C, 0x01, 0x6D, 0xD0, 0x67,
-0x4C, 0xEF, 0x00, 0x18, 0x92, 0xE1, 0x07, 0x97,
+0x4C, 0xEF, 0x00, 0x18, 0x63, 0xE1, 0x07, 0x97,
 0x06, 0x91, 0x05, 0x90, 0x04, 0x63, 0x00, 0xEF,
 0xFD, 0x63, 0x05, 0x62, 0xFF, 0x6A, 0x4C, 0xED,
 0x01, 0x6B, 0x64, 0xED, 0xE6, 0x67, 0x00, 0xF6,
@@ -6612,7 +6611,7 @@ u8 array_mp_8821c_fw_ap[] = {
 0x20, 0x6B, 0xC0, 0xF1, 0x08, 0x4B, 0x88, 0x34,
 0x91, 0xE3, 0xA2, 0x9C, 0x01, 0x6A, 0x44, 0xE8,
 0xAD, 0xEA, 0x42, 0xDC, 0x10, 0xF0, 0x24, 0x6A,
-0xB5, 0xF5, 0x40, 0x9A, 0x34, 0x31, 0x01, 0xE1,
+0xF5, 0xF4, 0x44, 0x9A, 0x34, 0x31, 0x01, 0xE1,
 0x40, 0x9A, 0x42, 0xF2, 0x10, 0x48, 0x08, 0x30,
 0x0D, 0xE3, 0x42, 0xDB, 0x07, 0x97, 0x06, 0x91,
 0x05, 0x90, 0x04, 0x63, 0x00, 0xEF, 0x00, 0x65,
@@ -6626,7 +6625,7 @@ u8 array_mp_8821c_fw_ap[] = {
 0x01, 0x6B, 0x64, 0xE8, 0xAD, 0xEB, 0x62, 0xDC,
 0x29, 0xF1, 0x84, 0xA2, 0x02, 0x6B, 0x8C, 0xEB,
 0xFF, 0x6C, 0x8C, 0xEB, 0x29, 0x2B, 0x10, 0xF0,
-0x24, 0x6B, 0xB5, 0xF5, 0x60, 0x9B, 0x34, 0x31,
+0x24, 0x6B, 0xF5, 0xF4, 0x64, 0x9B, 0x34, 0x31,
 0x01, 0xE1, 0x60, 0x9B, 0x42, 0xF2, 0x10, 0x48,
 0x08, 0x30, 0x09, 0xE2, 0x62, 0xDA, 0x1C, 0x10,
 0x30, 0xF0, 0x20, 0x6B, 0x42, 0xF2, 0x8C, 0x41,
@@ -6650,10 +6649,10 @@ u8 array_mp_8821c_fw_ap[] = {
 0x49, 0xF1, 0x08, 0x4A, 0x44, 0xD2, 0x49, 0xD2,
 0x46, 0xD3, 0x45, 0x95, 0x60, 0x98, 0x01, 0x6A,
 0x44, 0xED, 0x6C, 0xEA, 0x31, 0x22, 0x10, 0xF0,
-0x24, 0x6A, 0xB5, 0xF5, 0x40, 0x9A, 0x49, 0x94,
+0x24, 0x6A, 0xF5, 0xF4, 0x44, 0x9A, 0x49, 0x94,
 0x60, 0x9A, 0x40, 0x9C, 0x30, 0xF0, 0x20, 0x6C,
 0xE9, 0xF2, 0xAC, 0xA4, 0x10, 0xF0, 0x24, 0x6C,
-0xB5, 0xF5, 0x84, 0x9C, 0xBA, 0x35, 0x4F, 0xE3,
+0xF5, 0xF4, 0x88, 0x9C, 0xBA, 0x35, 0x4F, 0xE3,
 0x98, 0xED, 0x12, 0xEC, 0x63, 0xEC, 0x10, 0x60,
 0x47, 0x94, 0x45, 0x95, 0x00, 0x6E, 0x00, 0x18,
 0xCE, 0xD3, 0x45, 0x92, 0x01, 0x6B, 0x64, 0xEA,
@@ -6672,46 +6671,46 @@ u8 array_mp_8821c_fw_ap[] = {
 0x9B, 0x61, 0x9D, 0x67, 0x80, 0xF0, 0x90, 0xA4,
 0x47, 0xD4, 0x15, 0x11, 0xBD, 0x67, 0x4D, 0xE5,
 0x90, 0xA3, 0xFF, 0x74, 0xA0, 0xF0, 0x0D, 0x60,
-0x10, 0xF0, 0x24, 0x6B, 0xB5, 0xF5, 0xA8, 0x9B,
-0x10, 0xF0, 0x24, 0x6E, 0x15, 0xF2, 0xDC, 0x9E,
+0x10, 0xF0, 0x24, 0x6B, 0xF5, 0xF4, 0xAC, 0x9B,
+0x10, 0xF0, 0x24, 0x6E, 0x75, 0xF1, 0xC0, 0x9E,
 0x60, 0x9D, 0xCC, 0xEB, 0x08, 0x2B, 0x60, 0x9D,
 0x40, 0xF6, 0x62, 0x33, 0x6E, 0xEC, 0x03, 0x2C,
 0x01, 0x48, 0xFF, 0x6B, 0x6C, 0xE8, 0x10, 0xF0,
-0x24, 0x6B, 0xB5, 0xF5, 0x8C, 0x9B, 0x10, 0xF0,
-0x24, 0x6D, 0x15, 0xF2, 0xBC, 0x9D, 0x60, 0x9C,
+0x24, 0x6B, 0xF5, 0xF4, 0x90, 0x9B, 0x10, 0xF0,
+0x24, 0x6D, 0x75, 0xF1, 0xA0, 0x9D, 0x60, 0x9C,
 0xAC, 0xEB, 0x0B, 0x2B, 0xBD, 0x67, 0x60, 0x9C,
 0x51, 0xE5, 0x90, 0xA4, 0x40, 0xF6, 0x62, 0x33,
 0x8E, 0xEB, 0x03, 0x2B, 0x01, 0x48, 0xFF, 0x6B,
-0x6C, 0xE8, 0x10, 0xF0, 0x24, 0x6B, 0xB5, 0xF5,
-0x90, 0x9B, 0x10, 0xF0, 0x24, 0x6D, 0x15, 0xF2,
-0xBC, 0x9D, 0x60, 0x9C, 0xAC, 0xEB, 0x0B, 0x2B,
+0x6C, 0xE8, 0x10, 0xF0, 0x24, 0x6B, 0xF5, 0xF4,
+0x94, 0x9B, 0x10, 0xF0, 0x24, 0x6D, 0x75, 0xF1,
+0xA0, 0x9D, 0x60, 0x9C, 0xAC, 0xEB, 0x0B, 0x2B,
 0xBD, 0x67, 0x60, 0x9C, 0x51, 0xE5, 0x90, 0xA4,
 0x40, 0xF6, 0x62, 0x33, 0x8E, 0xEB, 0x03, 0x2B,
 0x01, 0x48, 0xFF, 0x6B, 0x6C, 0xE8, 0x10, 0xF0,
-0x24, 0x6B, 0xB5, 0xF5, 0x94, 0x9B, 0x10, 0xF0,
-0x24, 0x6D, 0x15, 0xF2, 0xBC, 0x9D, 0x60, 0x9C,
+0x24, 0x6B, 0xF5, 0xF4, 0x98, 0x9B, 0x10, 0xF0,
+0x24, 0x6D, 0x75, 0xF1, 0xA0, 0x9D, 0x60, 0x9C,
 0xAC, 0xEB, 0x0B, 0x2B, 0xBD, 0x67, 0x60, 0x9C,
 0x51, 0xE5, 0x90, 0xA4, 0x40, 0xF6, 0x62, 0x33,
 0x8E, 0xEB, 0x03, 0x2B, 0x01, 0x48, 0xFF, 0x6B,
-0x6C, 0xE8, 0x10, 0xF0, 0x24, 0x6B, 0xB5, 0xF5,
-0x98, 0x9B, 0x10, 0xF0, 0x24, 0x6D, 0x15, 0xF2,
-0xBC, 0x9D, 0x60, 0x9C, 0xAC, 0xEB, 0x0B, 0x2B,
+0x6C, 0xE8, 0x10, 0xF0, 0x24, 0x6B, 0xF5, 0xF4,
+0x9C, 0x9B, 0x10, 0xF0, 0x24, 0x6D, 0x75, 0xF1,
+0xA0, 0x9D, 0x60, 0x9C, 0xAC, 0xEB, 0x0B, 0x2B,
 0xBD, 0x67, 0x60, 0x9C, 0x51, 0xE5, 0x90, 0xA4,
 0x40, 0xF6, 0x62, 0x33, 0x8E, 0xEB, 0x03, 0x2B,
 0x01, 0x48, 0xFF, 0x6B, 0x6C, 0xE8, 0x10, 0xF0,
-0x24, 0x6B, 0xB5, 0xF5, 0x9C, 0x9B, 0x10, 0xF0,
-0x24, 0x6D, 0x15, 0xF2, 0xBC, 0x9D, 0x60, 0x9C,
+0x24, 0x6B, 0x15, 0xF5, 0x80, 0x9B, 0x10, 0xF0,
+0x24, 0x6D, 0x75, 0xF1, 0xA0, 0x9D, 0x60, 0x9C,
 0xAC, 0xEB, 0x0B, 0x2B, 0xBD, 0x67, 0x60, 0x9C,
 0x51, 0xE5, 0x90, 0xA4, 0x40, 0xF6, 0x62, 0x33,
 0x8E, 0xEB, 0x03, 0x2B, 0x01, 0x48, 0xFF, 0x6B,
-0x6C, 0xE8, 0x10, 0xF0, 0x24, 0x6B, 0xD5, 0xF5,
-0x80, 0x9B, 0x10, 0xF0, 0x24, 0x6D, 0x15, 0xF2,
-0xBC, 0x9D, 0x60, 0x9C, 0xAC, 0xEB, 0x0B, 0x2B,
+0x6C, 0xE8, 0x10, 0xF0, 0x24, 0x6B, 0x15, 0xF5,
+0x84, 0x9B, 0x10, 0xF0, 0x24, 0x6D, 0x75, 0xF1,
+0xA0, 0x9D, 0x60, 0x9C, 0xAC, 0xEB, 0x0B, 0x2B,
 0xBD, 0x67, 0x60, 0x9C, 0x51, 0xE5, 0x90, 0xA4,
 0x40, 0xF6, 0x62, 0x33, 0x8E, 0xEB, 0x03, 0x2B,
 0x01, 0x48, 0xFF, 0x6B, 0x6C, 0xE8, 0x10, 0xF0,
-0x24, 0x6B, 0xD5, 0xF5, 0x84, 0x9B, 0x10, 0xF0,
-0x24, 0x6D, 0x15, 0xF2, 0xBC, 0x9D, 0x60, 0x9C,
+0x24, 0x6B, 0x15, 0xF5, 0x88, 0x9B, 0x10, 0xF0,
+0x24, 0x6D, 0x75, 0xF1, 0xA0, 0x9D, 0x60, 0x9C,
 0xAC, 0xEB, 0x0B, 0x2B, 0xBD, 0x67, 0x60, 0x9C,
 0x51, 0xE5, 0x90, 0xA4, 0x40, 0xF6, 0x62, 0x33,
 0x8E, 0xEB, 0x03, 0x2B, 0x01, 0x48, 0xFF, 0x6B,
@@ -6765,65 +6764,65 @@ u8 array_mp_8821c_fw_ap[] = {
 0x20, 0x68, 0x4E, 0xF2, 0x54, 0x98, 0x00, 0x6C,
 0x20, 0x6D, 0x40, 0xEA, 0x29, 0xF1, 0xC4, 0xA1,
 0xFF, 0x6A, 0xFF, 0x6C, 0xDA, 0x36, 0x4C, 0xEE,
-0x69, 0x4C, 0x01, 0x6D, 0x00, 0x18, 0x40, 0xDC,
+0x69, 0x4C, 0x01, 0x6D, 0x00, 0x18, 0x18, 0xDC,
 0x4E, 0xF2, 0x54, 0x98, 0x11, 0x10, 0x0A, 0x28,
-0x00, 0x6C, 0x20, 0x6D, 0x00, 0x18, 0x19, 0xDD,
-0x10, 0xF0, 0x24, 0x6A, 0xD5, 0xF5, 0x4C, 0x9A,
+0x00, 0x6C, 0x20, 0x6D, 0x00, 0x18, 0xF1, 0xDC,
+0x10, 0xF0, 0x24, 0x6A, 0x15, 0xF5, 0x50, 0x9A,
 0x00, 0xC2, 0x0F, 0x10, 0x03, 0x70, 0x0B, 0x61,
 0x30, 0xF0, 0x20, 0x6A, 0x4E, 0xF2, 0x54, 0x9A,
-0x10, 0xF0, 0x24, 0x6B, 0xD5, 0xF5, 0xA8, 0x9B,
+0x10, 0xF0, 0x24, 0x6B, 0x15, 0xF5, 0xAC, 0x9B,
 0x01, 0x6C, 0x40, 0xEA, 0x09, 0x10, 0x02, 0x70,
-0x07, 0x61, 0x10, 0xF0, 0x24, 0x6A, 0xD5, 0xF5,
-0xA8, 0x9A, 0x01, 0x6C, 0x00, 0x18, 0x19, 0xDD,
+0x07, 0x61, 0x10, 0xF0, 0x24, 0x6A, 0x15, 0xF5,
+0xAC, 0x9A, 0x01, 0x6C, 0x00, 0x18, 0xF1, 0xDC,
 0x07, 0x97, 0x06, 0x91, 0x05, 0x90, 0x04, 0x63,
 0x00, 0xEF, 0x00, 0x65, 0xFD, 0x63, 0x05, 0x62,
 0x04, 0xD0, 0x00, 0x68, 0x17, 0x10, 0xE0, 0xF3,
 0x08, 0x70, 0x0A, 0x61, 0x10, 0xF0, 0x24, 0x6A,
-0x15, 0xF2, 0x78, 0x9A, 0x80, 0x6C, 0x40, 0x9B,
+0x55, 0xF1, 0x7C, 0x9A, 0x80, 0x6C, 0x40, 0x9B,
 0x8D, 0xEA, 0x40, 0xDB, 0x00, 0x6A, 0x13, 0x10,
 0xFF, 0xF7, 0x1F, 0x6A, 0x01, 0x48, 0x4C, 0xE8,
 0x30, 0xF0, 0x20, 0x6A, 0xCE, 0xF4, 0x5C, 0x9A,
 0x0A, 0x6C, 0x40, 0xEA, 0x10, 0xF0, 0x24, 0x6A,
-0x15, 0xF2, 0x50, 0x9A, 0x60, 0xA2, 0x01, 0x6A,
+0x55, 0xF1, 0x54, 0x9A, 0x60, 0xA2, 0x01, 0x6A,
 0x6C, 0xEA, 0xE1, 0x2A, 0x01, 0x6A, 0x05, 0x97,
 0x04, 0x90, 0x03, 0x63, 0x00, 0xEF, 0x00, 0x65,
 0xFF, 0xF7, 0x1F, 0x6A, 0x8C, 0xEA, 0x10, 0xF0,
-0x24, 0x6B, 0x10, 0xF0, 0x24, 0x6C, 0xD5, 0xF5,
-0x70, 0x9B, 0xD5, 0xF5, 0x94, 0x9C, 0x6D, 0xE5,
+0x24, 0x6B, 0x10, 0xF0, 0x24, 0x6C, 0x15, 0xF5,
+0x74, 0x9B, 0x15, 0xF5, 0x98, 0x9C, 0x6D, 0xE5,
 0x91, 0xE5, 0x00, 0x6E, 0xC0, 0xDB, 0x04, 0x4B,
 0x8A, 0xEB, 0xFB, 0x61, 0xE7, 0xF7, 0x1F, 0x6B,
-0x4C, 0xEB, 0x10, 0xF0, 0x24, 0x6A, 0x75, 0xF3,
-0x54, 0x9A, 0x10, 0x6C, 0x4D, 0xEB, 0x10, 0xF0,
-0x24, 0x6A, 0xD5, 0xF5, 0x50, 0x9A, 0x49, 0xE5,
-0x60, 0xDA, 0x10, 0xF0, 0x24, 0x6A, 0xD5, 0xF5,
-0x58, 0x9A, 0xFF, 0x6B, 0x55, 0xE5, 0x40, 0xA5,
+0x4C, 0xEB, 0x10, 0xF0, 0x24, 0x6A, 0xB5, 0xF2,
+0x58, 0x9A, 0x10, 0x6C, 0x4D, 0xEB, 0x10, 0xF0,
+0x24, 0x6A, 0x15, 0xF5, 0x54, 0x9A, 0x49, 0xE5,
+0x60, 0xDA, 0x10, 0xF0, 0x24, 0x6A, 0x15, 0xF5,
+0x5C, 0x9A, 0xFF, 0x6B, 0x55, 0xE5, 0x40, 0xA5,
 0x6C, 0xEA, 0x8D, 0xEA, 0x6C, 0xEA, 0x40, 0xC5,
 0x20, 0xE8, 0x00, 0x65, 0xFC, 0x63, 0x07, 0x62,
 0x06, 0xD1, 0x05, 0xD0, 0x30, 0xF0, 0x21, 0x6A,
 0x90, 0xF4, 0x7D, 0xA2, 0x08, 0xD4, 0x30, 0xF0,
 0x20, 0x69, 0x61, 0xC5, 0x01, 0x4B, 0x90, 0xF4,
-0x7D, 0xC2, 0x10, 0xF0, 0x24, 0x6B, 0xD5, 0xF5,
-0x90, 0x9B, 0x08, 0x93, 0x4E, 0xF2, 0x50, 0x99,
+0x7D, 0xC2, 0x10, 0xF0, 0x24, 0x6B, 0x15, 0xF5,
+0x94, 0x9B, 0x08, 0x93, 0x4E, 0xF2, 0x50, 0x99,
 0x02, 0x6E, 0x91, 0xE3, 0x05, 0x67, 0x40, 0xEA,
-0x10, 0xF0, 0x24, 0x6B, 0xD5, 0xF5, 0x9C, 0x9B,
+0x10, 0xF0, 0x24, 0x6B, 0x35, 0xF5, 0x80, 0x9B,
 0x08, 0x93, 0xCE, 0xA0, 0x4E, 0xF2, 0x50, 0x99,
 0xA2, 0x40, 0x91, 0xE3, 0x40, 0xEA, 0x07, 0x97,
 0x06, 0x91, 0x05, 0x90, 0x04, 0x63, 0x00, 0xEF,
 0xFC, 0x63, 0x07, 0x62, 0x06, 0xD1, 0x05, 0xD0,
 0x24, 0x67, 0x00, 0x18, 0x63, 0xD5, 0x00, 0x6B,
-0x36, 0x22, 0x10, 0xF0, 0x24, 0x6A, 0x35, 0xF3,
-0x54, 0x9A, 0xFF, 0xF7, 0x1F, 0x6E, 0xFF, 0x6F,
-0x00, 0x9A, 0x10, 0xF0, 0x24, 0x6A, 0x35, 0xF3,
-0x58, 0x9A, 0x10, 0x6C, 0x8B, 0xEC, 0x4C, 0xE8,
-0x10, 0xF0, 0x24, 0x6A, 0xA1, 0x40, 0xF5, 0xF5,
-0x40, 0x9A, 0x65, 0x67, 0xCC, 0xEB, 0x60, 0xCA,
-0x10, 0xF0, 0x24, 0x6A, 0xF5, 0xF5, 0x44, 0x9A,
+0x36, 0x22, 0x10, 0xF0, 0x24, 0x6A, 0x75, 0xF2,
+0x58, 0x9A, 0xFF, 0xF7, 0x1F, 0x6E, 0xFF, 0x6F,
+0x00, 0x9A, 0x10, 0xF0, 0x24, 0x6A, 0x75, 0xF2,
+0x5C, 0x9A, 0x10, 0x6C, 0x8B, 0xEC, 0x4C, 0xE8,
+0x10, 0xF0, 0x24, 0x6A, 0xA1, 0x40, 0x35, 0xF5,
+0x44, 0x9A, 0x65, 0x67, 0xCC, 0xEB, 0x60, 0xCA,
+0x10, 0xF0, 0x24, 0x6A, 0x35, 0xF5, 0x48, 0x9A,
 0x60, 0xA2, 0xFA, 0x65, 0xA2, 0x32, 0xEC, 0xEB,
 0x8C, 0xEB, 0x42, 0x32, 0x6D, 0xEA, 0xEC, 0xEA,
 0x7F, 0x67, 0x40, 0xC3, 0x87, 0xA9, 0x02, 0x4C,
 0xCC, 0xEC, 0x00, 0x18, 0x78, 0xD5, 0x87, 0x40,
 0x12, 0x4C, 0xB1, 0x67, 0x00, 0x18, 0x8F, 0xD5,
-0x10, 0xF0, 0x24, 0x6A, 0x15, 0xF2, 0x50, 0x9A,
+0x10, 0xF0, 0x24, 0x6A, 0x55, 0xF1, 0x54, 0x9A,
 0x01, 0x6B, 0x60, 0xC2, 0x01, 0x6B, 0x07, 0x97,
 0x06, 0x91, 0x05, 0x90, 0x43, 0x67, 0x04, 0x63,
 0x00, 0xEF, 0x00, 0x65, 0xFD, 0x63, 0x05, 0x62,
@@ -6834,7 +6833,7 @@ u8 array_mp_8821c_fw_ap[] = {
 0xA0, 0xF0, 0x44, 0xA8, 0x01, 0xF1, 0x00, 0x72,
 0x07, 0x60, 0xA0, 0xF0, 0x64, 0xA0, 0xA0, 0xF0,
 0x45, 0xA0, 0xFF, 0x4B, 0x4E, 0xEB, 0x0A, 0x2B,
-0x10, 0xF0, 0x24, 0x6A, 0x15, 0xF2, 0x78, 0x9A,
+0x10, 0xF0, 0x24, 0x6A, 0x55, 0xF1, 0x7C, 0x9A,
 0x00, 0xF2, 0x00, 0x6C, 0x40, 0x9B, 0x8D, 0xEA,
 0x40, 0xDB, 0x12, 0x10, 0x50, 0x32, 0x11, 0xE2,
 0x04, 0x4C, 0x10, 0x6E, 0x00, 0x18, 0x50, 0xD2,
@@ -6851,33 +6850,33 @@ u8 array_mp_8821c_fw_ap[] = {
 0xE9, 0xE2, 0x0C, 0xEA, 0xEF, 0x46, 0xE2, 0xEA,
 0xF4, 0x61, 0x30, 0xF0, 0x21, 0x6A, 0x90, 0xF4,
 0x7C, 0xA2, 0x01, 0x4B, 0x90, 0xF4, 0x7C, 0xC2,
-0x10, 0xF0, 0x24, 0x6B, 0xD5, 0xF5, 0x70, 0x9B,
+0x10, 0xF0, 0x24, 0x6B, 0x15, 0xF5, 0x74, 0x9B,
 0x30, 0xF0, 0x20, 0x6A, 0x4E, 0xF2, 0x50, 0x9A,
 0x71, 0xE4, 0x40, 0xEA, 0x05, 0x97, 0x04, 0x90,
 0x03, 0x63, 0x00, 0xEF, 0xFC, 0x63, 0x07, 0x62,
 0x06, 0xD1, 0x05, 0xD0, 0x24, 0x67, 0x00, 0x18,
 0x63, 0xD5, 0x00, 0x6B, 0x2E, 0x22, 0x10, 0xF0,
-0x24, 0x6A, 0x35, 0xF3, 0x54, 0x9A, 0x0F, 0x6C,
+0x24, 0x6A, 0x75, 0xF2, 0x58, 0x9A, 0x0F, 0x6C,
 0xFF, 0xF7, 0x1F, 0x6B, 0x00, 0x9A, 0x10, 0xF0,
-0x24, 0x6A, 0x35, 0xF3, 0x58, 0x9A, 0x4C, 0xE8,
+0x24, 0x6A, 0x75, 0xF2, 0x5C, 0x9A, 0x4C, 0xE8,
 0xA1, 0x40, 0xA2, 0x32, 0x42, 0x32, 0x8C, 0xEA,
-0x10, 0xF0, 0x24, 0x6C, 0xF5, 0xF5, 0x80, 0x9C,
+0x10, 0xF0, 0x24, 0x6C, 0x35, 0xF5, 0x84, 0x9C,
 0xC5, 0x67, 0x6C, 0xEE, 0xC0, 0xCC, 0x10, 0xF0,
-0x24, 0x6C, 0xF5, 0xF5, 0x84, 0x9C, 0x40, 0xC4,
+0x24, 0x6C, 0x35, 0xF5, 0x88, 0x9C, 0x40, 0xC4,
 0xE0, 0xF0, 0x87, 0xA1, 0x6C, 0xEC, 0x00, 0x18,
 0x78, 0xD5, 0x87, 0x40, 0x12, 0x4C, 0xB1, 0x67,
 0x00, 0x18, 0xE6, 0xD5, 0x10, 0xF0, 0x24, 0x6A,
-0x15, 0xF2, 0x50, 0x9A, 0x01, 0x6B, 0x60, 0xC2,
+0x55, 0xF1, 0x54, 0x9A, 0x01, 0x6B, 0x60, 0xC2,
 0x01, 0x6B, 0x07, 0x97, 0x06, 0x91, 0x05, 0x90,
 0x43, 0x67, 0x04, 0x63, 0x00, 0xEF, 0x00, 0x65,
 0xFD, 0x63, 0x05, 0x62, 0x04, 0xD0, 0x10, 0xF0,
-0x24, 0x6B, 0x95, 0xF1, 0x6C, 0x9B, 0x10, 0xF0,
+0x24, 0x6B, 0xD5, 0xF0, 0x70, 0x9B, 0x10, 0xF0,
 0x23, 0x6A, 0x6B, 0xF0, 0x19, 0x4A, 0x10, 0xF0,
 0x30, 0x68, 0x40, 0xDB, 0x00, 0xF0, 0x00, 0x48,
 0xC1, 0xF6, 0x62, 0xA0, 0xC1, 0xF6, 0x43, 0xA0,
 0x6E, 0xEA, 0x39, 0x22, 0x10, 0xF0, 0x24, 0x6A,
-0x35, 0xF3, 0x5C, 0x9A, 0x10, 0xF0, 0x24, 0x6C,
-0x55, 0xF2, 0x84, 0x9C, 0x40, 0x9A, 0x8C, 0xEA,
+0x95, 0xF2, 0x40, 0x9A, 0x10, 0xF0, 0x24, 0x6C,
+0x95, 0xF1, 0x88, 0x9C, 0x40, 0x9A, 0x8C, 0xEA,
 0x2E, 0x2A, 0xE8, 0x6A, 0x58, 0xEB, 0x87, 0x40,
 0x3B, 0x4C, 0x12, 0xEB, 0x71, 0xE4, 0x00, 0x18,
 0xFF, 0xD5, 0x16, 0x22, 0xC1, 0xF6, 0x42, 0xA0,
@@ -6898,7 +6897,7 @@ u8 array_mp_8821c_fw_ap[] = {
 0x10, 0xF0, 0x30, 0x68, 0x00, 0xF0, 0x00, 0x48,
 0xC1, 0xF6, 0x42, 0xA0, 0xC1, 0xF6, 0x83, 0xA0,
 0xFF, 0x4A, 0x8E, 0xEA, 0x09, 0x2A, 0x10, 0xF0,
-0x24, 0x6A, 0x15, 0xF2, 0x78, 0x9A, 0xFF, 0x6A,
+0x24, 0x6A, 0x55, 0xF1, 0x7C, 0x9A, 0xFF, 0x6A,
 0x80, 0xA3, 0x8C, 0xEA, 0x40, 0xC3, 0xA7, 0x10,
 0x23, 0xA5, 0xC1, 0xF6, 0x45, 0xA0, 0xFF, 0x6B,
 0x04, 0x49, 0x6C, 0xE9, 0x1F, 0x2A, 0xE8, 0x6A,
@@ -6943,34 +6942,14 @@ u8 array_mp_8821c_fw_ap[] = {
 0xC0, 0xF1, 0x08, 0x4A, 0x80, 0xF0, 0x6C, 0x9A,
 0x8D, 0xEB, 0x80, 0xF0, 0x6C, 0xDA, 0x07, 0x97,
 0x06, 0x91, 0x05, 0x90, 0x04, 0x63, 0x00, 0xEF,
-0xFC, 0x63, 0x07, 0x62, 0x06, 0xD1, 0x05, 0xD0,
-0xFF, 0xF7, 0x1F, 0x68, 0x0C, 0xED, 0x08, 0xD4,
-0xA0, 0xCC, 0x08, 0x92, 0xCC, 0xE8, 0x22, 0x67,
-0x01, 0xCA, 0x04, 0x49, 0x0B, 0x27, 0x0A, 0x20,
-0x30, 0xF0, 0x20, 0x6A, 0x4E, 0xF2, 0x50, 0x9A,
-0xFF, 0x6E, 0x91, 0x67, 0xA7, 0x67, 0x0C, 0xEE,
-0x40, 0xEA, 0x05, 0xE1, 0x08, 0x92, 0x07, 0x97,
-0x05, 0x90, 0x47, 0xE1, 0xFF, 0xF7, 0x1F, 0x6A,
-0x2C, 0xEA, 0x06, 0x91, 0x04, 0x63, 0x00, 0xEF,
-0xDF, 0x63, 0x41, 0x62, 0x40, 0xD1, 0x3F, 0xD0,
-0x30, 0xF0, 0x20, 0x6A, 0x4E, 0xF2, 0x4C, 0x9A,
-0xFF, 0x68, 0xCC, 0xE8, 0x24, 0x67, 0x43, 0xD5,
-0x04, 0x04, 0x00, 0x6D, 0xE8, 0x6E, 0x40, 0xEA,
-0x01, 0x6A, 0x7D, 0x67, 0x4B, 0xEA, 0x50, 0xC3,
-0x1B, 0x6A, 0x52, 0xC3, 0x44, 0x40, 0x53, 0xC3,
-0x30, 0xF0, 0x20, 0x6A, 0x43, 0x95, 0x4E, 0xF2,
-0x50, 0x9A, 0xD0, 0x67, 0x05, 0xD1, 0x06, 0x04,
-0x40, 0xEA, 0x30, 0xF0, 0x20, 0x6A, 0xAE, 0xF2,
-0x5C, 0x9A, 0x04, 0x04, 0x40, 0xEA, 0x41, 0x97,
-0x40, 0x91, 0x3F, 0x90, 0x21, 0x63, 0x00, 0xEF,
 0xFD, 0x63, 0x05, 0x62, 0x04, 0xD0, 0x10, 0xF0,
-0x24, 0x6B, 0x95, 0xF1, 0x6C, 0x9B, 0x10, 0xF0,
-0x23, 0x6A, 0x6B, 0xF3, 0x01, 0x4A, 0x30, 0xF0,
+0x24, 0x6B, 0xD5, 0xF0, 0x70, 0x9B, 0x10, 0xF0,
+0x23, 0x6A, 0xCB, 0xF2, 0x01, 0x4A, 0x30, 0xF0,
 0x20, 0x68, 0x40, 0xDB, 0x2F, 0xF5, 0x18, 0x48,
 0xA0, 0xF0, 0x84, 0xA0, 0xA0, 0xF0, 0x45, 0xA0,
 0x8E, 0xEA, 0x3C, 0x22, 0x10, 0xF0, 0x24, 0x6A,
-0x35, 0xF3, 0x5C, 0x9A, 0x10, 0xF0, 0x24, 0x6B,
-0x55, 0xF2, 0x64, 0x9B, 0x40, 0x9A, 0x6C, 0xEA,
+0x95, 0xF2, 0x40, 0x9A, 0x10, 0xF0, 0x24, 0x6B,
+0x95, 0xF1, 0x68, 0x9B, 0x40, 0x9A, 0x6C, 0xEA,
 0x31, 0x2A, 0x90, 0x34, 0x44, 0x40, 0x91, 0xE2,
 0x00, 0x18, 0xA4, 0xD5, 0x0B, 0x2A, 0x30, 0xF0,
 0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A, 0x80, 0xF0,
@@ -6983,16 +6962,16 @@ u8 array_mp_8821c_fw_ap[] = {
 0x8D, 0xEB, 0x80, 0xF0, 0x6C, 0xDA, 0x30, 0xF0,
 0x20, 0x6A, 0x2F, 0xF5, 0x18, 0x4A, 0xA0, 0xF0,
 0x64, 0xA2, 0x0A, 0x6C, 0x8E, 0xEB, 0x02, 0x2B,
-0xA0, 0xF0, 0x64, 0xC2, 0x00, 0x18, 0x25, 0xD7,
+0xA0, 0xF0, 0x64, 0xC2, 0x00, 0x18, 0xFD, 0xD6,
 0x05, 0x97, 0x04, 0x90, 0x03, 0x63, 0x00, 0xEF,
 0xFB, 0x63, 0x09, 0x62, 0x08, 0xD0, 0x10, 0xF0,
-0x24, 0x6A, 0x15, 0xF3, 0x6C, 0x9A, 0x10, 0xF0,
-0x24, 0x6C, 0xF5, 0xF1, 0x0C, 0x9C, 0x40, 0x9B,
+0x24, 0x6A, 0x55, 0xF2, 0x70, 0x9A, 0x10, 0xF0,
+0x24, 0x6C, 0x35, 0xF1, 0x10, 0x9C, 0x40, 0x9B,
 0x00, 0xF4, 0x1D, 0x6C, 0x10, 0x6D, 0x0D, 0xEA,
 0x40, 0xDB, 0x06, 0x02, 0x04, 0xD2, 0x30, 0xF0,
 0x20, 0x6A, 0xAE, 0xF4, 0x54, 0x9A, 0x00, 0x6E,
 0x82, 0xF3, 0x08, 0x6F, 0x40, 0xEA, 0x07, 0x2A,
-0x10, 0xF0, 0x24, 0x6B, 0x15, 0xF2, 0x98, 0x9B,
+0x10, 0xF0, 0x24, 0x6B, 0x55, 0xF1, 0x9C, 0x9B,
 0x60, 0x9C, 0x0D, 0xEB, 0x60, 0xDC, 0x09, 0x97,
 0x08, 0x90, 0x05, 0x63, 0x00, 0xEF, 0x00, 0x65,
 0x60, 0xA4, 0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1,
@@ -7003,11 +6982,11 @@ u8 array_mp_8821c_fw_ap[] = {
 0xE8, 0xF2, 0x62, 0xC2, 0x66, 0xA4, 0xE8, 0xF2,
 0x63, 0xC2, 0x20, 0xE8, 0xFB, 0x63, 0x09, 0x62,
 0x08, 0xD1, 0x07, 0xD0, 0x10, 0xF0, 0x24, 0x6A,
-0xF5, 0xF5, 0x48, 0x9A, 0x60, 0xA2, 0x03, 0x6A,
+0x35, 0xF5, 0x4C, 0x9A, 0x60, 0xA2, 0x03, 0x6A,
 0x6C, 0xEA, 0x10, 0x6B, 0x64, 0xEA, 0xFF, 0x6A,
-0x4C, 0xEB, 0x10, 0xF0, 0x24, 0x6A, 0xF5, 0xF5,
-0x4C, 0x9A, 0x04, 0xD3, 0x40, 0x9A, 0x05, 0xD2,
-0x10, 0xF0, 0x24, 0x6A, 0xF5, 0xF5, 0x50, 0x9A,
+0x4C, 0xEB, 0x10, 0xF0, 0x24, 0x6A, 0x35, 0xF5,
+0x50, 0x9A, 0x04, 0xD3, 0x40, 0x9A, 0x05, 0xD2,
+0x10, 0xF0, 0x24, 0x6A, 0x35, 0xF5, 0x54, 0x9A,
 0x00, 0x9A, 0x05, 0x92, 0x0A, 0xEA, 0x00, 0xF1,
 0x05, 0x60, 0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1,
 0x08, 0x4A, 0x80, 0xF0, 0x6C, 0x9A, 0x02, 0x6C,
@@ -7017,10 +6996,10 @@ u8 array_mp_8821c_fw_ap[] = {
 0x07, 0x72, 0x0B, 0x60, 0x10, 0xF0, 0x30, 0x69,
 0x00, 0xF0, 0x00, 0x49, 0xC1, 0xF7, 0x86, 0xA1,
 0xC1, 0xF7, 0x47, 0xA1, 0x6F, 0x44, 0x4E, 0xEB,
-0x0A, 0x2B, 0x10, 0xF0, 0x24, 0x6A, 0x15, 0xF2,
-0x78, 0x9A, 0xFF, 0x6C, 0x01, 0x4C, 0x40, 0x9B,
+0x0A, 0x2B, 0x10, 0xF0, 0x24, 0x6A, 0x55, 0xF1,
+0x7C, 0x9A, 0xFF, 0x6C, 0x01, 0x4C, 0x40, 0x9B,
 0x8D, 0xEA, 0x40, 0xDB, 0xDB, 0x10, 0x10, 0xF0,
-0x24, 0x6B, 0xF5, 0xF5, 0xB4, 0x9B, 0x7F, 0x6B,
+0x24, 0x6B, 0x35, 0xF5, 0xB8, 0x9B, 0x7F, 0x6B,
 0xB5, 0xE0, 0xC0, 0xA5, 0x6C, 0xEE, 0x80, 0xF0,
 0x0C, 0x2E, 0x03, 0x2C, 0x04, 0x72, 0xC0, 0xF0,
 0x0D, 0x60, 0x10, 0xF0, 0x30, 0x6A, 0x00, 0xF0,
@@ -7052,32 +7031,32 @@ u8 array_mp_8821c_fw_ap[] = {
 0x8E, 0x42, 0x6E, 0xEC, 0x63, 0x24, 0x01, 0x72,
 0x02, 0x61, 0x07, 0x73, 0x5F, 0x60, 0x10, 0xF0,
 0x30, 0x69, 0x00, 0xF0, 0x00, 0x49, 0x10, 0xF0,
-0x24, 0x6A, 0xC1, 0xF7, 0x87, 0xA1, 0xF5, 0xF5,
-0x58, 0x9A, 0x10, 0xF0, 0x24, 0x6D, 0x76, 0x4C,
-0xF5, 0xF5, 0xB4, 0x9D, 0x49, 0xE0, 0x94, 0x34,
+0x24, 0x6A, 0xC1, 0xF7, 0x87, 0xA1, 0x35, 0xF5,
+0x5C, 0x9A, 0x10, 0xF0, 0x24, 0x6D, 0x76, 0x4C,
+0x35, 0xF5, 0xB8, 0x9D, 0x49, 0xE0, 0x94, 0x34,
 0x60, 0xAA, 0x91, 0xE1, 0x30, 0xF0, 0x20, 0x6A,
 0x4E, 0xF2, 0x50, 0x9A, 0x06, 0x4C, 0xB5, 0xE0,
 0x13, 0x10, 0x80, 0xA5, 0x8C, 0xEB, 0x01, 0x73,
-0x1F, 0x61, 0x10, 0xF0, 0x24, 0x6B, 0xF5, 0xF5,
-0x78, 0x9B, 0x87, 0x42, 0x6F, 0x4C, 0x6D, 0xE0,
+0x1F, 0x61, 0x10, 0xF0, 0x24, 0x6B, 0x35, 0xF5,
+0x7C, 0x9B, 0x87, 0x42, 0x6F, 0x4C, 0x6D, 0xE0,
 0x30, 0xF0, 0x20, 0x6A, 0x94, 0x34, 0x60, 0xAB,
 0x4E, 0xF2, 0x50, 0x9A, 0x91, 0xE1, 0x06, 0x4C,
 0xFF, 0x6E, 0x6C, 0xEE, 0x40, 0xEA, 0xC1, 0xF7,
 0x47, 0xA1, 0x08, 0x6B, 0x01, 0x4A, 0xC1, 0xF7,
 0x47, 0xC1, 0xC1, 0xF7, 0x47, 0xA1, 0x6E, 0xEA,
 0x0E, 0x2A, 0xC1, 0xF7, 0x47, 0xC1, 0x0B, 0x10,
-0x10, 0xF0, 0x24, 0x6A, 0x15, 0xF2, 0x78, 0x9A,
-0x10, 0xF0, 0x24, 0x6C, 0xB5, 0xF2, 0x9C, 0x9C,
+0x10, 0xF0, 0x24, 0x6A, 0x55, 0xF1, 0x7C, 0x9A,
+0x10, 0xF0, 0x24, 0x6C, 0x15, 0xF2, 0x80, 0x9C,
 0x40, 0x9B, 0x8D, 0xEA, 0x40, 0xDB, 0x10, 0xF0,
-0x24, 0x6A, 0xF5, 0xF5, 0x5C, 0x9A, 0x04, 0x93,
+0x24, 0x6A, 0x55, 0xF5, 0x40, 0x9A, 0x04, 0x93,
 0x40, 0x9A, 0x0E, 0xEA, 0x61, 0xE0, 0x05, 0x2A,
-0x10, 0xF0, 0x24, 0x6A, 0x15, 0xF6, 0x40, 0x9A,
-0x00, 0x9A, 0x10, 0xF0, 0x24, 0x6A, 0xF5, 0xF5,
-0x50, 0x9A, 0x00, 0xDA, 0x05, 0x92, 0x4A, 0xE8,
+0x10, 0xF0, 0x24, 0x6A, 0x55, 0xF5, 0x44, 0x9A,
+0x00, 0x9A, 0x10, 0xF0, 0x24, 0x6A, 0x35, 0xF5,
+0x54, 0x9A, 0x00, 0xDA, 0x05, 0x92, 0x4A, 0xE8,
 0x1F, 0xF7, 0x05, 0x61, 0x09, 0x97, 0x08, 0x91,
 0x07, 0x90, 0x05, 0x63, 0x00, 0xEF, 0x00, 0x65,
 0xFE, 0x63, 0x03, 0xD1, 0x02, 0xD0, 0x10, 0xF0,
-0x24, 0x6A, 0x15, 0xF6, 0x44, 0x9A, 0x0F, 0x6B,
+0x24, 0x6A, 0x55, 0xF5, 0x48, 0x9A, 0x0F, 0x6B,
 0x40, 0xA2, 0x4C, 0xEB, 0x0A, 0x23, 0x30, 0xF0,
 0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A, 0x80, 0xF0,
 0x8C, 0x9A, 0x02, 0x6D, 0xAD, 0xEC, 0x80, 0xF0,
@@ -7088,7 +7067,7 @@ u8 array_mp_8821c_fw_ap[] = {
 0x09, 0x60, 0x10, 0xF0, 0x30, 0x6A, 0x00, 0xF0,
 0x00, 0x4A, 0x40, 0xF0, 0x01, 0xA2, 0x01, 0x94,
 0x8A, 0xE8, 0x0A, 0x61, 0x10, 0xF0, 0x24, 0x6A,
-0x15, 0xF2, 0x78, 0x9A, 0xFF, 0x6C, 0x01, 0x4C,
+0x55, 0xF1, 0x7C, 0x9A, 0xFF, 0x6C, 0x01, 0x4C,
 0x40, 0x9B, 0x8D, 0xEA, 0x40, 0xDB, 0xCC, 0x10,
 0x30, 0xF0, 0x21, 0x6D, 0x90, 0xF4, 0x9E, 0xA5,
 0xC3, 0x67, 0xC7, 0xEC, 0x86, 0x67, 0x01, 0x6E,
@@ -7102,9 +7081,9 @@ u8 array_mp_8821c_fw_ap[] = {
 0x2C, 0xEF, 0x0F, 0x2F, 0x30, 0xF0, 0x21, 0x6C,
 0x90, 0xF4, 0x3E, 0xA4, 0xFF, 0x6C, 0x10, 0xF0,
 0x24, 0x6E, 0x8C, 0xE9, 0x74, 0x49, 0x28, 0x31,
-0xE2, 0x67, 0x25, 0xE2, 0xB5, 0xF1, 0xDC, 0x9E,
+0xE2, 0x67, 0x25, 0xE2, 0x15, 0xF1, 0xC0, 0x9E,
 0x0B, 0x10, 0x90, 0xF4, 0x3E, 0xA6, 0x10, 0xF0,
-0x24, 0x6E, 0xD5, 0xF1, 0xC0, 0x9E, 0x8C, 0xE9,
+0x24, 0x6E, 0x15, 0xF1, 0xC4, 0x9E, 0x8C, 0xE9,
 0x74, 0x49, 0x28, 0x31, 0xE2, 0x67, 0x25, 0xE2,
 0xD9, 0xE1, 0xC0, 0xA6, 0x0C, 0x31, 0xFD, 0xE1,
 0xCC, 0xEC, 0x10, 0xF0, 0x30, 0x6E, 0x00, 0xF0,
@@ -7117,16 +7096,16 @@ u8 array_mp_8821c_fw_ap[] = {
 0x2C, 0xEF, 0x0E, 0x2F, 0x30, 0xF0, 0x21, 0x6C,
 0x90, 0xF4, 0xFE, 0xA4, 0xFF, 0x6C, 0x10, 0xF0,
 0x24, 0x6E, 0x8C, 0xEF, 0x7C, 0x4F, 0xE8, 0x37,
-0xFD, 0xE2, 0xB5, 0xF1, 0xDC, 0x9E, 0x0A, 0x10,
+0xFD, 0xE2, 0x15, 0xF1, 0xC0, 0x9E, 0x0A, 0x10,
 0x90, 0xF4, 0xFE, 0xA6, 0x10, 0xF0, 0x24, 0x6E,
-0xD5, 0xF1, 0xC0, 0x9E, 0x8C, 0xEF, 0x7C, 0x4F,
+0x15, 0xF1, 0xC4, 0x9E, 0x8C, 0xEF, 0x7C, 0x4F,
 0xE8, 0x37, 0xFD, 0xE2, 0xD9, 0xE7, 0xC0, 0xA6,
 0x01, 0x4A, 0x04, 0x72, 0xCC, 0xEC, 0x80, 0xC5,
 0x01, 0x4D, 0x8D, 0x61, 0x30, 0xF0, 0x21, 0x6A,
 0x90, 0xF4, 0xBE, 0xA2, 0x01, 0x6C, 0xC4, 0x67,
 0xC4, 0xED, 0xCF, 0xED, 0x90, 0xF4, 0xDE, 0xA2,
 0xAC, 0xEB, 0xFF, 0x6D, 0x84, 0xEE, 0x10, 0xF0,
-0x24, 0x6E, 0x15, 0xF6, 0xC4, 0x9E, 0xAC, 0xEC,
+0x24, 0x6E, 0x55, 0xF5, 0xC8, 0x9E, 0xAC, 0xEC,
 0x80, 0xC6, 0x90, 0xF4, 0x9E, 0xA2, 0xAC, 0xEC,
 0x01, 0x4C, 0xAC, 0xEC, 0x90, 0xF4, 0x9E, 0xC2,
 0x90, 0xF4, 0xBE, 0xA2, 0x03, 0x6C, 0xAC, 0xEC,
@@ -7135,26 +7114,26 @@ u8 array_mp_8821c_fw_ap[] = {
 0x08, 0x6D, 0x01, 0x4C, 0x40, 0xF0, 0x81, 0xC2,
 0x40, 0xF0, 0x81, 0xA2, 0xAE, 0xEC, 0x1A, 0x2C,
 0x40, 0xF0, 0x81, 0xC2, 0x17, 0x10, 0x10, 0xF0,
-0x24, 0x6A, 0x15, 0xF2, 0x98, 0x9A, 0x02, 0x6E,
+0x24, 0x6A, 0x55, 0xF1, 0x9C, 0x9A, 0x02, 0x6E,
 0x40, 0x9C, 0xCD, 0xEA, 0x40, 0xDC, 0x10, 0xF0,
-0x24, 0x6A, 0x15, 0xF6, 0x48, 0x9A, 0x60, 0xC2,
+0x24, 0x6A, 0x55, 0xF5, 0x4C, 0x9A, 0x60, 0xC2,
 0x90, 0xF4, 0x7E, 0xA5, 0xFF, 0x6A, 0x4C, 0xEB,
-0x10, 0xF0, 0x24, 0x6A, 0x15, 0xF6, 0x4C, 0x9A,
+0x10, 0xF0, 0x24, 0x6A, 0x55, 0xF5, 0x50, 0x9A,
 0x60, 0xC2, 0x02, 0x10, 0x1F, 0xF7, 0x19, 0x2B,
 0x03, 0x91, 0x02, 0x90, 0x02, 0x63, 0x20, 0xE8,
 0xFD, 0x63, 0x05, 0x62, 0x04, 0xD0, 0x10, 0xF0,
-0x24, 0x6A, 0x35, 0xF6, 0x50, 0x9A, 0xFF, 0x68,
+0x24, 0x6A, 0x75, 0xF5, 0x54, 0x9A, 0xFF, 0x68,
 0x60, 0xA2, 0x6C, 0xE8, 0x1D, 0x20, 0x00, 0x6B,
 0x60, 0xC2, 0x30, 0xF0, 0x20, 0x6A, 0xCE, 0xF4,
 0x5C, 0x9A, 0x01, 0x6C, 0x40, 0xEA, 0x10, 0xF0,
-0x24, 0x6A, 0x35, 0xF6, 0x54, 0x9A, 0x20, 0x6B,
+0x24, 0x6A, 0x75, 0xF5, 0x58, 0x9A, 0x20, 0x6B,
 0x20, 0x70, 0x60, 0xC2, 0x0D, 0x61, 0x30, 0xF0,
 0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A, 0x10, 0xF0,
-0x24, 0x6C, 0x80, 0xF0, 0x6C, 0x9A, 0x55, 0xF2,
-0x80, 0x9C, 0x8D, 0xEB, 0x80, 0xF0, 0x6C, 0xDA,
+0x24, 0x6C, 0x80, 0xF0, 0x6C, 0x9A, 0x95, 0xF1,
+0x84, 0x9C, 0x8D, 0xEB, 0x80, 0xF0, 0x6C, 0xDA,
 0x05, 0x97, 0x04, 0x90, 0x03, 0x63, 0x00, 0xEF,
 0xFD, 0x63, 0x05, 0x62, 0x00, 0x1C, 0x96, 0x45,
-0x00, 0x18, 0x38, 0xDD, 0x05, 0x6C, 0x01, 0x6D,
+0x00, 0x18, 0x10, 0xDD, 0x05, 0x6C, 0x01, 0x6D,
 0x00, 0x18, 0xC7, 0xD0, 0x00, 0x65, 0x00, 0x65,
 0x00, 0x65, 0x00, 0x65, 0x00, 0x65, 0x00, 0x65,
 0x00, 0x65, 0x00, 0x65, 0x00, 0x65, 0x00, 0x65,
@@ -7205,15 +7184,15 @@ u8 array_mp_8821c_fw_ap[] = {
 0xEE, 0xF4, 0x50, 0x9A, 0x40, 0xEA, 0xEB, 0xF6,
 0x60, 0xA0, 0x04, 0x6A, 0x6C, 0xEA, 0xFF, 0x6B,
 0x6C, 0xEA, 0x18, 0x22, 0x10, 0xF0, 0x24, 0x6A,
-0x35, 0xF6, 0x58, 0x9A, 0xEB, 0xF6, 0xCC, 0x98,
+0x75, 0xF5, 0x5C, 0x9A, 0xEB, 0xF6, 0xCC, 0x98,
 0x00, 0x6B, 0x40, 0x9A, 0x10, 0xF0, 0x24, 0x6A,
-0xF5, 0xF1, 0x44, 0x9A, 0x10, 0xF0, 0x24, 0x6C,
-0x12, 0xF4, 0x19, 0x4C, 0x40, 0x9A, 0xA3, 0x67,
+0x35, 0xF1, 0x48, 0x9A, 0x10, 0xF0, 0x24, 0x6C,
+0x52, 0xF3, 0x1D, 0x4C, 0x40, 0x9A, 0xA3, 0x67,
 0x01, 0x6F, 0x5B, 0xE6, 0x04, 0xD3, 0x00, 0x18,
-0xDA, 0xE3, 0x29, 0x10, 0x00, 0x18, 0x06, 0xE5,
+0xAB, 0xE3, 0x29, 0x10, 0x00, 0x18, 0xD7, 0xE4,
 0x26, 0x10, 0x30, 0xF0, 0x20, 0x6A, 0xEE, 0xF4,
 0x54, 0x9A, 0x40, 0xEA, 0xEB, 0xF6, 0xB2, 0xA8,
-0x00, 0x6C, 0x00, 0x18, 0xB3, 0xE4, 0x1B, 0x10,
+0x00, 0x6C, 0x00, 0x18, 0x84, 0xE4, 0x1B, 0x10,
 0x1A, 0x20, 0x30, 0xF0, 0x20, 0x6A, 0xAE, 0xF2,
 0x5C, 0x9A, 0x13, 0x10, 0x14, 0x2A, 0x69, 0xA4,
 0xBD, 0x67, 0x7C, 0xC5, 0x68, 0xA4, 0x5E, 0xC5,
@@ -7226,10 +7205,10 @@ u8 array_mp_8821c_fw_ap[] = {
 0x68, 0x44, 0xFA, 0x4B, 0x4C, 0xEB, 0x04, 0x5B,
 0x03, 0x60, 0x80, 0x18, 0xA9, 0x11, 0x3D, 0x10,
 0xFE, 0x4C, 0x4C, 0xEC, 0x0C, 0x5C, 0x2D, 0x60,
-0x10, 0xF0, 0x24, 0x6A, 0x88, 0x34, 0x75, 0xF0,
-0x04, 0x4A, 0x89, 0xE2, 0x40, 0x9A, 0x00, 0xEA,
+0x10, 0xF0, 0x24, 0x6A, 0x88, 0x34, 0xB4, 0xF7,
+0x08, 0x4A, 0x89, 0xE2, 0x40, 0x9A, 0x00, 0xEA,
 0x30, 0xF0, 0x20, 0x6A, 0xCE, 0xF5, 0x48, 0x9A,
-0x08, 0x10, 0x85, 0x67, 0x00, 0x18, 0xC9, 0xE4,
+0x08, 0x10, 0x85, 0x67, 0x00, 0x18, 0x9A, 0xE4,
 0x28, 0x10, 0x30, 0xF0, 0x20, 0x6A, 0xEE, 0xF5,
 0x44, 0x9A, 0x85, 0x67, 0x40, 0xEA, 0x21, 0x10,
 0x30, 0xF0, 0x20, 0x6A, 0xCE, 0xF5, 0x54, 0x9A,
@@ -7237,9 +7216,9 @@ u8 array_mp_8821c_fw_ap[] = {
 0xCE, 0xF5, 0x58, 0x9A, 0xF2, 0x17, 0x30, 0xF0,
 0x20, 0x6A, 0xCE, 0xF5, 0x5C, 0x9A, 0xED, 0x17,
 0x30, 0xF0, 0x20, 0x6A, 0xEE, 0xF5, 0x40, 0x9A,
-0xE8, 0x17, 0x10, 0xF0, 0x24, 0x6A, 0x15, 0xF2,
-0x78, 0x9A, 0x10, 0xF0, 0x24, 0x6C, 0x55, 0xF2,
-0x80, 0x9C, 0x40, 0x9B, 0x8D, 0xEA, 0x40, 0xDB,
+0xE8, 0x17, 0x10, 0xF0, 0x24, 0x6A, 0x55, 0xF1,
+0x7C, 0x9A, 0x10, 0xF0, 0x24, 0x6C, 0x95, 0xF1,
+0x84, 0x9C, 0x40, 0x9B, 0x8D, 0xEA, 0x40, 0xDB,
 0xFF, 0x6A, 0x05, 0x97, 0x03, 0x63, 0x00, 0xEF,
 0xFA, 0x63, 0x0B, 0x62, 0x0A, 0xD1, 0x09, 0xD0,
 0x30, 0xF0, 0x20, 0x6B, 0xA0, 0xA4, 0x2F, 0xF5,
@@ -7249,33 +7228,33 @@ u8 array_mp_8821c_fw_ap[] = {
 0x0C, 0xEA, 0xA1, 0xC3, 0x82, 0xA4, 0x82, 0xC3,
 0x62, 0xA3, 0x06, 0xD3, 0x20, 0x22, 0x01, 0x69,
 0x2B, 0xE9, 0xD1, 0x67, 0x00, 0x6C, 0x42, 0x6D,
-0x00, 0x18, 0x7F, 0xE1, 0x10, 0xF0, 0x24, 0x6B,
-0xB5, 0xF2, 0xE0, 0x9B, 0xD1, 0x67, 0x00, 0x6C,
-0x4D, 0xEF, 0x42, 0x6D, 0x00, 0x18, 0x92, 0xE1,
+0x00, 0x18, 0x50, 0xE1, 0x10, 0xF0, 0x24, 0x6B,
+0xF5, 0xF1, 0xE4, 0x9B, 0xD1, 0x67, 0x00, 0x6C,
+0x4D, 0xEF, 0x42, 0x6D, 0x00, 0x18, 0x63, 0xE1,
 0x06, 0x96, 0x64, 0x6A, 0x10, 0xF0, 0x24, 0x6C,
-0x01, 0x4E, 0x58, 0xEE, 0x34, 0xF4, 0x1D, 0x4C,
+0x01, 0x4E, 0x58, 0xEE, 0x94, 0xF3, 0x01, 0x4C,
 0x00, 0x6D, 0xF1, 0x67, 0x04, 0xD0, 0x12, 0xEE,
-0x00, 0x18, 0xDA, 0xE3, 0x06, 0x10, 0x10, 0xF0,
-0x24, 0x6C, 0x34, 0xF4, 0x1D, 0x4C, 0x00, 0x18,
-0xC7, 0xE3, 0x0B, 0x97, 0x0A, 0x91, 0x09, 0x90,
+0x00, 0x18, 0xAB, 0xE3, 0x06, 0x10, 0x10, 0xF0,
+0x24, 0x6C, 0x94, 0xF3, 0x01, 0x4C, 0x00, 0x18,
+0x98, 0xE3, 0x0B, 0x97, 0x0A, 0x91, 0x09, 0x90,
 0x06, 0x63, 0x00, 0xEF, 0xFA, 0x63, 0x0B, 0x62,
 0x0A, 0xD1, 0x09, 0xD0, 0x60, 0xA4, 0x01, 0x6A,
 0x04, 0x67, 0x4C, 0xEB, 0x68, 0x23, 0x61, 0xA4,
 0x08, 0x5B, 0x17, 0x60, 0x10, 0xF0, 0x24, 0x6C,
-0x35, 0xF6, 0xBC, 0x9C, 0xC7, 0x43, 0x22, 0x67,
+0x95, 0xF5, 0xA0, 0x9C, 0xC7, 0x43, 0x22, 0x67,
 0xE0, 0x9D, 0x10, 0x4B, 0x01, 0x4E, 0x82, 0x67,
 0x24, 0xEB, 0x84, 0xEE, 0x71, 0x67, 0xED, 0xEB,
 0x8F, 0xEC, 0x6C, 0xEC, 0x60, 0xA0, 0x66, 0x33,
 0x4C, 0xEB, 0x64, 0xEE, 0x6D, 0xEC, 0x80, 0xDD,
-0x15, 0x10, 0x10, 0xF0, 0x24, 0x6C, 0x55, 0xF6,
-0xC0, 0x9C, 0x87, 0x43, 0x01, 0x4C, 0xA0, 0x9E,
+0x15, 0x10, 0x10, 0xF0, 0x24, 0x6C, 0x95, 0xF5,
+0xC4, 0x9C, 0x87, 0x43, 0x01, 0x4C, 0xA0, 0x9E,
 0xE2, 0x67, 0xE4, 0xEC, 0x87, 0x67, 0xAD, 0xEC,
 0xA2, 0x67, 0xA4, 0xEB, 0xAF, 0xED, 0xAC, 0xEC,
 0xA0, 0xA0, 0xA6, 0x35, 0x4C, 0xED, 0xA4, 0xEB,
 0xAD, 0xEC, 0x80, 0xDE, 0x41, 0xA0, 0x08, 0x5A,
-0x07, 0x60, 0x10, 0xF0, 0x24, 0x6B, 0x35, 0xF6,
-0x9C, 0x9B, 0x08, 0x4A, 0xA0, 0x9C, 0x05, 0x10,
-0x10, 0xF0, 0x24, 0x6B, 0x55, 0xF6, 0x80, 0x9B,
+0x07, 0x60, 0x10, 0xF0, 0x24, 0x6B, 0x95, 0xF5,
+0x80, 0x9B, 0x08, 0x4A, 0xA0, 0x9C, 0x05, 0x10,
+0x10, 0xF0, 0x24, 0x6B, 0x95, 0xF5, 0x84, 0x9B,
 0xA0, 0x9C, 0x01, 0x6B, 0x64, 0xEA, 0xAE, 0xEB,
 0x60, 0xDC, 0x80, 0xA0, 0x00, 0x6D, 0x92, 0x34,
 0x00, 0x18, 0x31, 0xC9, 0x80, 0xA0, 0x01, 0x6D,
@@ -7307,8 +7286,8 @@ u8 array_mp_8821c_fw_ap[] = {
 0x07, 0x97, 0x06, 0x91, 0x05, 0x90, 0x04, 0x63,
 0x00, 0xEF, 0x00, 0x65, 0xF9, 0x63, 0x0D, 0x62,
 0x0C, 0xD1, 0x0B, 0xD0, 0x10, 0xF0, 0x24, 0x6B,
-0x95, 0xF1, 0x6C, 0x9B, 0x10, 0xF0, 0x23, 0x6A,
-0x0C, 0xF6, 0x15, 0x4A, 0x08, 0xD4, 0x40, 0xDB,
+0xD5, 0xF0, 0x70, 0x9B, 0x10, 0xF0, 0x23, 0x6A,
+0x6C, 0xF5, 0x15, 0x4A, 0x08, 0xD4, 0x40, 0xDB,
 0x41, 0xA4, 0x24, 0x67, 0x06, 0xD2, 0x60, 0xA4,
 0x02, 0x6A, 0x6C, 0xEA, 0x06, 0x93, 0x07, 0xD3,
 0x02, 0x22, 0x42, 0xA4, 0x07, 0xD2, 0x06, 0x90,
@@ -7324,7 +7303,7 @@ u8 array_mp_8821c_fw_ap[] = {
 0x06, 0x92, 0x8E, 0xEA, 0x22, 0x2A, 0x30, 0xF0,
 0x20, 0x6A, 0x6E, 0xF5, 0x58, 0x9A, 0x40, 0xEA,
 0x1C, 0x2A, 0x30, 0xF0, 0x20, 0x68, 0xC0, 0xF1,
-0x08, 0x48, 0x00, 0x18, 0x4D, 0xE7, 0x68, 0xF3,
+0x08, 0x48, 0x00, 0x18, 0x1E, 0xE7, 0x68, 0xF3,
 0x97, 0xA0, 0x96, 0x34, 0x00, 0x18, 0x40, 0xCC,
 0x68, 0xF3, 0x79, 0xA0, 0x05, 0x6A, 0x4B, 0xEA,
 0x6C, 0xEA, 0x68, 0xF3, 0x7A, 0xA0, 0x68, 0xF3,
@@ -7333,23 +7312,23 @@ u8 array_mp_8821c_fw_ap[] = {
 0x5A, 0xC0, 0x30, 0xF0, 0x20, 0x6A, 0x60, 0xA1,
 0xCC, 0xF1, 0x50, 0xA2, 0x72, 0x34, 0x15, 0x2A,
 0x04, 0x6A, 0x6C, 0xEA, 0xFF, 0x6B, 0x6C, 0xEA,
-0x10, 0x22, 0x10, 0xF0, 0x24, 0x6A, 0xD5, 0xF4,
-0x48, 0x9A, 0x00, 0x6B, 0x60, 0xC2, 0x10, 0xF0,
-0x24, 0x6A, 0x55, 0xF6, 0x68, 0x9A, 0x10, 0xF0,
-0x24, 0x6A, 0x95, 0xF1, 0x4C, 0x9A, 0x60, 0xDA,
+0x10, 0x22, 0x10, 0xF0, 0x24, 0x6A, 0x15, 0xF4,
+0x4C, 0x9A, 0x00, 0x6B, 0x60, 0xC2, 0x10, 0xF0,
+0x24, 0x6A, 0x95, 0xF5, 0x6C, 0x9A, 0x10, 0xF0,
+0x24, 0x6A, 0xD5, 0xF0, 0x50, 0x9A, 0x60, 0xDA,
 0xF0, 0x17, 0x05, 0x74, 0x15, 0x61, 0x30, 0xF0,
 0x20, 0x6A, 0xCC, 0xF1, 0x52, 0xA2, 0x10, 0x2A,
-0x10, 0xF0, 0x24, 0x6A, 0xD5, 0xF4, 0x48, 0x9A,
+0x10, 0xF0, 0x24, 0x6A, 0x15, 0xF4, 0x4C, 0x9A,
 0x00, 0x6B, 0x60, 0xC2, 0x10, 0xF0, 0x24, 0x6A,
-0x55, 0xF6, 0x6C, 0x9A, 0x10, 0xF0, 0x24, 0x6A,
-0x95, 0xF1, 0x4C, 0x9A, 0x60, 0xDA, 0xF0, 0x17,
+0x95, 0xF5, 0x70, 0x9A, 0x10, 0xF0, 0x24, 0x6A,
+0xD5, 0xF0, 0x50, 0x9A, 0x60, 0xDA, 0xF0, 0x17,
 0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A,
 0x69, 0xF3, 0x88, 0xA2, 0x02, 0x6B, 0x8C, 0xEB,
 0x1C, 0x23, 0x03, 0x6B, 0x6B, 0xEB, 0x8C, 0xEB,
-0x69, 0xF3, 0x68, 0xC2, 0x00, 0x18, 0x1C, 0xE3,
+0x69, 0xF3, 0x68, 0xC2, 0x00, 0x18, 0xED, 0xE2,
 0x04, 0xD2, 0x30, 0xF0, 0x20, 0x6A, 0x04, 0x93,
 0xEF, 0xF5, 0x5C, 0x9A, 0x6E, 0xEA, 0x03, 0x22,
-0x04, 0x94, 0x00, 0x18, 0x3D, 0xE3, 0x30, 0xF0,
+0x04, 0x94, 0x00, 0x18, 0x0E, 0xE3, 0x30, 0xF0,
 0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A, 0x69, 0xF3,
 0x88, 0xA2, 0x02, 0x6B, 0x8D, 0xEB, 0x69, 0xF3,
 0x68, 0xC2, 0x0D, 0x97, 0x0C, 0x91, 0x0B, 0x90,
@@ -7372,8 +7351,8 @@ u8 array_mp_8821c_fw_ap[] = {
 0x4A, 0x60, 0xC4, 0x5C, 0x03, 0x60, 0xC2, 0x74,
 0x42, 0x60, 0x49, 0x10, 0xC9, 0x74, 0x37, 0x60,
 0xCB, 0x74, 0x39, 0x60, 0x44, 0x10, 0x85, 0x67,
-0x00, 0x18, 0x18, 0xD7, 0x4F, 0x10, 0x85, 0x67,
-0x00, 0x18, 0x85, 0xD9, 0x4B, 0x10, 0x85, 0x67,
+0x00, 0x18, 0xF0, 0xD6, 0x4F, 0x10, 0x85, 0x67,
+0x00, 0x18, 0x5D, 0xD9, 0x4B, 0x10, 0x85, 0x67,
 0x00, 0x18, 0x48, 0xC6, 0x47, 0x10, 0x85, 0x67,
 0x00, 0x18, 0xF3, 0xC3, 0x43, 0x10, 0x85, 0x67,
 0x00, 0x18, 0x78, 0xC4, 0x3F, 0x10, 0x85, 0x67,
@@ -7382,26 +7361,26 @@ u8 array_mp_8821c_fw_ap[] = {
 0x00, 0x18, 0x22, 0xD4, 0x33, 0x10, 0x85, 0x67,
 0x00, 0x18, 0xB6, 0xC6, 0x2F, 0x10, 0x85, 0x67,
 0x00, 0x18, 0x1F, 0xC7, 0x2B, 0x10, 0x85, 0x67,
-0x00, 0x18, 0x62, 0xD9, 0x27, 0x10, 0x85, 0x67,
+0x00, 0x18, 0x3A, 0xD9, 0x27, 0x10, 0x85, 0x67,
 0x00, 0x18, 0x9E, 0xC7, 0x23, 0x10, 0x85, 0x67,
 0x00, 0x18, 0x6B, 0xC7, 0x1F, 0x10, 0x85, 0x67,
-0x00, 0x18, 0x27, 0xD9, 0x1B, 0x10, 0x85, 0x67,
-0x00, 0x18, 0x04, 0xD9, 0x17, 0x10, 0x85, 0x67,
+0x00, 0x18, 0xFF, 0xD8, 0x1B, 0x10, 0x85, 0x67,
+0x00, 0x18, 0xDC, 0xD8, 0x17, 0x10, 0x85, 0x67,
 0x00, 0x18, 0xA6, 0xC6, 0x13, 0x10, 0x85, 0x67,
-0x00, 0x18, 0x8C, 0xDB, 0x0F, 0x10, 0x10, 0xF0,
-0x24, 0x6A, 0x15, 0xF2, 0x78, 0x9A, 0x01, 0x6D,
+0x00, 0x18, 0x64, 0xDB, 0x0F, 0x10, 0x10, 0xF0,
+0x24, 0x6A, 0x55, 0xF1, 0x7C, 0x9A, 0x01, 0x6D,
 0x40, 0x9B, 0xAD, 0xEA, 0x40, 0xDB, 0x10, 0xF0,
-0x24, 0x6A, 0x95, 0xF1, 0x54, 0x9A, 0x80, 0xC2,
+0x24, 0x6A, 0xD5, 0xF0, 0x58, 0x9A, 0x80, 0xC2,
 0x0E, 0x6A, 0x01, 0x10, 0x00, 0x6A, 0x40, 0xC0,
 0x05, 0x97, 0x04, 0x90, 0x03, 0x63, 0x00, 0xEF,
 0xFD, 0x63, 0x05, 0x62, 0x04, 0xD0, 0x10, 0xF0,
-0x24, 0x6B, 0x95, 0xF1, 0x6C, 0x9B, 0x10, 0xF0,
-0x23, 0x6A, 0xCD, 0xF0, 0x19, 0x4A, 0x10, 0xF0,
+0x24, 0x6B, 0xD5, 0xF0, 0x70, 0x9B, 0x10, 0xF0,
+0x23, 0x6A, 0x2D, 0xF0, 0x19, 0x4A, 0x10, 0xF0,
 0x30, 0x68, 0x40, 0xDB, 0x00, 0xF0, 0x00, 0x48,
 0x40, 0xF0, 0x40, 0xA0, 0x40, 0xF0, 0x61, 0xA0,
 0x4E, 0xEB, 0x29, 0x23, 0x4C, 0x32, 0x0D, 0xE2,
 0x80, 0xA3, 0xA1, 0x42, 0xB5, 0xE0, 0x00, 0x18,
-0xE5, 0xD9, 0x40, 0xF0, 0x40, 0xA0, 0x01, 0x4A,
+0xBD, 0xD9, 0x40, 0xF0, 0x40, 0xA0, 0x01, 0x4A,
 0x40, 0xF0, 0x40, 0xC0, 0x40, 0xF0, 0x60, 0xA0,
 0x40, 0xF0, 0x41, 0xA0, 0x6E, 0xEA, 0x0A, 0x22,
 0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A,
@@ -7409,7 +7388,7 @@ u8 array_mp_8821c_fw_ap[] = {
 0x80, 0xF0, 0x6C, 0xDA, 0x10, 0xF0, 0x30, 0x6A,
 0x00, 0xF0, 0x00, 0x4A, 0x40, 0xF0, 0x60, 0xA2,
 0x08, 0x6C, 0x8E, 0xEB, 0x02, 0x2B, 0x40, 0xF0,
-0x60, 0xC2, 0x00, 0x18, 0xBA, 0xD7, 0x05, 0x97,
+0x60, 0xC2, 0x00, 0x18, 0x92, 0xD7, 0x05, 0x97,
 0x04, 0x90, 0x03, 0x63, 0x00, 0xEF, 0x00, 0x65,
 0xFD, 0x63, 0x05, 0x62, 0x04, 0xD0, 0x10, 0xF0,
 0x30, 0x68, 0x00, 0xF0, 0x00, 0x48, 0xC1, 0xF7,
@@ -7417,35 +7396,35 @@ u8 array_mp_8821c_fw_ap[] = {
 0xB4, 0x35, 0xB5, 0xE0, 0x46, 0xA5, 0x8C, 0xEA,
 0x20, 0x2A, 0x74, 0x33, 0x69, 0xE0, 0xC1, 0xF6,
 0x8E, 0xA2, 0xA2, 0x67, 0xC1, 0xF6, 0x0F, 0x4D,
-0x00, 0x18, 0xE5, 0xD9, 0xC1, 0xF7, 0x46, 0xA0,
-0x10, 0xF0, 0x24, 0x6C, 0x55, 0xF6, 0x90, 0x9C,
+0x00, 0x18, 0xBD, 0xD9, 0xC1, 0xF7, 0x46, 0xA0,
+0x10, 0xF0, 0x24, 0x6C, 0x95, 0xF5, 0x94, 0x9C,
 0x54, 0x33, 0x6D, 0xE0, 0xC1, 0xF6, 0xAC, 0xA3,
 0x76, 0x4A, 0x54, 0x32, 0xA0, 0xC4, 0xC1, 0xF6,
-0x8D, 0xA3, 0x10, 0xF0, 0x24, 0x6B, 0x55, 0xF6,
-0x74, 0x9B, 0x41, 0xE0, 0x80, 0xC3, 0x86, 0x40,
+0x8D, 0xA3, 0x10, 0xF0, 0x24, 0x6B, 0x95, 0xF5,
+0x78, 0x9B, 0x41, 0xE0, 0x80, 0xC3, 0x86, 0x40,
 0x49, 0x10, 0x01, 0x72, 0x49, 0x61, 0x74, 0x33,
 0x6D, 0xE0, 0xC1, 0xF6, 0x47, 0xA3, 0xFF, 0x72,
 0x0C, 0x61, 0xC1, 0xF6, 0x88, 0xA3, 0x06, 0x4D,
-0x00, 0x18, 0xDE, 0xD8, 0xC1, 0xF7, 0x66, 0xA0,
+0x00, 0x18, 0xB6, 0xD8, 0xC1, 0xF7, 0x66, 0xA0,
 0x74, 0x33, 0x61, 0xE0, 0xC1, 0xF6, 0x4E, 0xC0,
 0x04, 0x10, 0x01, 0x6A, 0x4B, 0xEA, 0xC1, 0xF6,
 0x4E, 0xC3, 0x10, 0xF0, 0x30, 0x6A, 0x00, 0xF0,
 0x00, 0x4A, 0xC1, 0xF7, 0x66, 0xA2, 0x10, 0xF0,
-0x24, 0x6D, 0x55, 0xF6, 0xB0, 0x9D, 0x74, 0x34,
+0x24, 0x6D, 0x95, 0xF5, 0xB4, 0x9D, 0x74, 0x34,
 0x91, 0xE2, 0xC1, 0xF6, 0xCC, 0xA4, 0x76, 0x4B,
 0x74, 0x33, 0xC0, 0xC5, 0xC1, 0xF6, 0xAD, 0xA4,
-0x10, 0xF0, 0x24, 0x6C, 0x55, 0xF6, 0x94, 0x9C,
+0x10, 0xF0, 0x24, 0x6C, 0x95, 0xF5, 0x98, 0x9C,
 0x69, 0xE2, 0xA0, 0xC4, 0x46, 0x82, 0x00, 0x52,
-0x0B, 0x60, 0x10, 0xF0, 0x24, 0x6A, 0x15, 0xF2,
-0x78, 0x9A, 0x10, 0xF0, 0x24, 0x6C, 0xF5, 0xF1,
-0x88, 0x9C, 0x40, 0x9B, 0x8D, 0xEA, 0x40, 0xDB,
+0x0B, 0x60, 0x10, 0xF0, 0x24, 0x6A, 0x55, 0xF1,
+0x7C, 0x9A, 0x10, 0xF0, 0x24, 0x6C, 0x35, 0xF1,
+0x8C, 0x9C, 0x40, 0x9B, 0x8D, 0xEA, 0x40, 0xDB,
 0x10, 0xF0, 0x30, 0x6A, 0x00, 0xF0, 0x00, 0x4A,
 0xC1, 0xF7, 0x66, 0xA2, 0x76, 0x4B, 0x74, 0x33,
-0x69, 0xE2, 0x86, 0x42, 0x00, 0x18, 0x75, 0xD8,
+0x69, 0xE2, 0x86, 0x42, 0x00, 0x18, 0x4D, 0xD8,
 0x05, 0x97, 0x04, 0x90, 0x03, 0x63, 0x00, 0xEF,
 0xFD, 0x63, 0x05, 0x62, 0x04, 0xD0, 0x10, 0xF0,
-0x24, 0x6B, 0x95, 0xF1, 0x6C, 0x9B, 0x10, 0xF0,
-0x23, 0x6A, 0x6D, 0xF2, 0x01, 0x4A, 0x10, 0xF0,
+0x24, 0x6B, 0xD5, 0xF0, 0x70, 0x9B, 0x10, 0xF0,
+0x23, 0x6A, 0xCD, 0xF1, 0x01, 0x4A, 0x10, 0xF0,
 0x30, 0x68, 0x40, 0xDB, 0x00, 0xF0, 0x00, 0x48,
 0xC1, 0xF7, 0x66, 0xA0, 0xC1, 0xF7, 0x47, 0xA0,
 0x6E, 0xEA, 0x4A, 0x22, 0x30, 0xF0, 0x20, 0x6A,
@@ -7458,7 +7437,7 @@ u8 array_mp_8821c_fw_ap[] = {
 0x20, 0x6B, 0xC0, 0xF1, 0x08, 0x4B, 0x80, 0xF0,
 0x4C, 0x9B, 0x04, 0x6C, 0x8D, 0xEA, 0x02, 0x6C,
 0x8D, 0xEA, 0x80, 0xF0, 0x4C, 0xDB, 0x24, 0x10,
-0x00, 0x18, 0x58, 0xDA, 0xC1, 0xF7, 0x46, 0xA0,
+0x00, 0x18, 0x30, 0xDA, 0xC1, 0xF7, 0x46, 0xA0,
 0x01, 0x4A, 0xC1, 0xF7, 0x46, 0xC0, 0xC1, 0xF7,
 0x66, 0xA0, 0xC1, 0xF7, 0x47, 0xA0, 0x6E, 0xEA,
 0x0A, 0x22, 0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1,
@@ -7466,7 +7445,7 @@ u8 array_mp_8821c_fw_ap[] = {
 0x8D, 0xEB, 0x80, 0xF0, 0x6C, 0xDA, 0x10, 0xF0,
 0x30, 0x6A, 0x00, 0xF0, 0x00, 0x4A, 0xC1, 0xF7,
 0x66, 0xA2, 0x08, 0x6C, 0x8E, 0xEB, 0x02, 0x2B,
-0xC1, 0xF7, 0x66, 0xC2, 0x00, 0x18, 0x25, 0xD7,
+0xC1, 0xF7, 0x66, 0xC2, 0x00, 0x18, 0xFD, 0xD6,
 0x05, 0x97, 0x04, 0x90, 0x03, 0x63, 0x00, 0xEF,
 0xFD, 0x63, 0x05, 0x62, 0x30, 0xF0, 0x20, 0x6A,
 0xEE, 0xF4, 0x44, 0x9A, 0xFF, 0xF7, 0x1F, 0x6B,
@@ -7475,7 +7454,7 @@ u8 array_mp_8821c_fw_ap[] = {
 0x05, 0x97, 0x03, 0x63, 0x00, 0xEF, 0x00, 0x65,
 0xFB, 0x63, 0x09, 0x62, 0x08, 0xD1, 0x07, 0xD0,
 0xE0, 0xF1, 0x14, 0x68, 0x0A, 0xD4, 0x24, 0x67,
-0x90, 0x67, 0x04, 0x05, 0x00, 0x18, 0xCA, 0xDA,
+0x90, 0x67, 0x04, 0x05, 0x00, 0x18, 0xA2, 0xDA,
 0x7D, 0x67, 0x50, 0xA3, 0x01, 0x48, 0xE0, 0xF1,
 0x1A, 0x70, 0x40, 0xC1, 0x01, 0x49, 0xF4, 0x61,
 0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A,
@@ -7488,48 +7467,48 @@ u8 array_mp_8821c_fw_ap[] = {
 0x07, 0x90, 0x05, 0x63, 0x00, 0xEF, 0x00, 0x65,
 0xFB, 0x63, 0x09, 0x62, 0x08, 0xD1, 0x07, 0xD0,
 0xE0, 0xF1, 0x10, 0x68, 0x0A, 0xD4, 0x24, 0x67,
-0x90, 0x67, 0x04, 0x05, 0x00, 0x18, 0xCA, 0xDA,
+0x90, 0x67, 0x04, 0x05, 0x00, 0x18, 0xA2, 0xDA,
 0x7D, 0x67, 0x50, 0xA3, 0x01, 0x48, 0xE0, 0xF1,
 0x14, 0x70, 0x40, 0xC1, 0x01, 0x49, 0xF4, 0x61,
 0xE0, 0xF1, 0x1C, 0x6C, 0x04, 0x05, 0x00, 0x18,
-0xCA, 0xDA, 0x7D, 0x67, 0x50, 0xA3, 0x0A, 0x93,
+0xA2, 0xDA, 0x7D, 0x67, 0x50, 0xA3, 0x0A, 0x93,
 0x44, 0xC3, 0x09, 0x97, 0x08, 0x91, 0x07, 0x90,
 0x05, 0x63, 0x00, 0xEF, 0xFB, 0x63, 0x09, 0x62,
 0x08, 0xD0, 0x04, 0x00, 0x90, 0x67, 0x00, 0x18,
-0xD4, 0xDA, 0xA0, 0xF1, 0x02, 0x6A, 0x1F, 0xF7,
+0xAC, 0xDA, 0xA0, 0xF1, 0x02, 0x6A, 0x1F, 0xF7,
 0x00, 0x6B, 0x4C, 0xEB, 0x02, 0xF0, 0x00, 0x73,
 0x01, 0x60, 0x05, 0x2B, 0x10, 0xF0, 0x24, 0x6B,
-0xB5, 0xF1, 0x7C, 0x9B, 0x04, 0x10, 0x10, 0xF0,
-0x24, 0x6B, 0xD5, 0xF1, 0x60, 0x9B, 0x80, 0xA0,
+0x15, 0xF1, 0x60, 0x9B, 0x04, 0x10, 0x10, 0xF0,
+0x24, 0x6B, 0x15, 0xF1, 0x64, 0x9B, 0x80, 0xA0,
 0x6D, 0xE2, 0x01, 0x4A, 0xA0, 0xF1, 0x0A, 0x72,
 0x80, 0xC3, 0x01, 0x48, 0xE8, 0x61, 0x04, 0x00,
-0x90, 0x67, 0x00, 0x18, 0xEE, 0xDA, 0xA0, 0xF1,
+0x90, 0x67, 0x00, 0x18, 0xC6, 0xDA, 0xA0, 0xF1,
 0x0A, 0x6A, 0x1F, 0xF7, 0x00, 0x6B, 0x4C, 0xEB,
 0x02, 0xF0, 0x00, 0x73, 0x01, 0x60, 0x05, 0x2B,
-0x10, 0xF0, 0x24, 0x6B, 0xB5, 0xF1, 0x7C, 0x9B,
-0x04, 0x10, 0x10, 0xF0, 0x24, 0x6B, 0xD5, 0xF1,
-0x60, 0x9B, 0x80, 0xA0, 0x6D, 0xE2, 0x01, 0x4A,
+0x10, 0xF0, 0x24, 0x6B, 0x15, 0xF1, 0x60, 0x9B,
+0x04, 0x10, 0x10, 0xF0, 0x24, 0x6B, 0x15, 0xF1,
+0x64, 0x9B, 0x80, 0xA0, 0x6D, 0xE2, 0x01, 0x4A,
 0xA0, 0xF1, 0x0F, 0x72, 0x80, 0xC3, 0x01, 0x48,
-0xE8, 0x61, 0x10, 0xF0, 0x24, 0x6A, 0x55, 0xF6,
-0x58, 0x9A, 0x19, 0x6B, 0x60, 0xC2, 0x09, 0x97,
+0xE8, 0x61, 0x10, 0xF0, 0x24, 0x6A, 0x95, 0xF5,
+0x5C, 0x9A, 0x19, 0x6B, 0x60, 0xC2, 0x09, 0x97,
 0x08, 0x90, 0x05, 0x63, 0x00, 0xEF, 0x00, 0x65,
 0xFC, 0x63, 0x07, 0x62, 0x06, 0xD0, 0x30, 0xF0,
 0x20, 0x68, 0xC0, 0xF1, 0x08, 0x48, 0x0C, 0xF0,
 0x4C, 0xA0, 0x0B, 0x2A, 0xE0, 0xF1, 0x1A, 0x6C,
-0x04, 0x05, 0x00, 0x18, 0xCA, 0xDA, 0x9D, 0x67,
+0x04, 0x05, 0x00, 0x18, 0xA2, 0xDA, 0x9D, 0x67,
 0x70, 0xA4, 0x07, 0x6A, 0x6C, 0xEA, 0x0C, 0xF0,
 0x4C, 0xC0, 0x30, 0xF0, 0x20, 0x68, 0xC0, 0xF1,
 0x08, 0x48, 0x0C, 0xF0, 0x4E, 0xA0, 0x0A, 0x2A,
 0xE0, 0xF1, 0x1A, 0x6C, 0x04, 0x05, 0x00, 0x18,
-0xCA, 0xDA, 0x7D, 0x67, 0x50, 0xA3, 0x56, 0x32,
+0xA2, 0xDA, 0x7D, 0x67, 0x50, 0xA3, 0x56, 0x32,
 0x0C, 0xF0, 0x4E, 0xC0, 0x30, 0xF0, 0x20, 0x68,
 0xC0, 0xF1, 0x08, 0x48, 0x0C, 0xF0, 0x4F, 0xA0,
 0x0B, 0x2A, 0xE0, 0xF1, 0x1D, 0x6C, 0x04, 0x05,
-0x00, 0x18, 0xCA, 0xDA, 0x9D, 0x67, 0x70, 0xA4,
+0x00, 0x18, 0xA2, 0xDA, 0x9D, 0x67, 0x70, 0xA4,
 0x03, 0x6A, 0x6C, 0xEA, 0x0C, 0xF0, 0x4F, 0xC0,
 0x30, 0xF0, 0x20, 0x68, 0xC0, 0xF1, 0x08, 0x48,
 0x0C, 0xF0, 0x50, 0xA0, 0x0C, 0x2A, 0xE0, 0xF1,
-0x1D, 0x6C, 0x04, 0x05, 0x00, 0x18, 0xCA, 0xDA,
+0x1D, 0x6C, 0x04, 0x05, 0x00, 0x18, 0xA2, 0xDA,
 0x7D, 0x67, 0x50, 0xA3, 0x30, 0x6B, 0x6C, 0xEA,
 0x53, 0x32, 0x0C, 0xF0, 0x50, 0xC0, 0x07, 0x97,
 0x06, 0x90, 0x04, 0x63, 0x00, 0xEF, 0x00, 0x65,
@@ -7538,18 +7517,18 @@ u8 array_mp_8821c_fw_ap[] = {
 0x08, 0x48, 0x01, 0x6A, 0xE0, 0xF1, 0x1B, 0x6C,
 0xB1, 0x67, 0x0C, 0xF0, 0x48, 0xC0, 0x0C, 0xF0,
 0x49, 0xC0, 0x0C, 0xF0, 0x4A, 0xC0, 0x0C, 0xF0,
-0x4B, 0xC0, 0x00, 0x18, 0xCA, 0xDA, 0x9D, 0x67,
+0x4B, 0xC0, 0x00, 0x18, 0xA2, 0xDA, 0x9D, 0x67,
 0x70, 0xA4, 0x07, 0x6A, 0xE0, 0xF1, 0x1D, 0x6C,
 0x6C, 0xEA, 0x0C, 0xF0, 0x4C, 0xC0, 0x18, 0x6A,
 0x6C, 0xEA, 0x4F, 0x32, 0x76, 0x33, 0xB1, 0x67,
 0x0C, 0xF0, 0x4D, 0xC0, 0x0C, 0xF0, 0x6E, 0xC0,
-0x00, 0x18, 0xCA, 0xDA, 0x5D, 0x67, 0x70, 0xA2,
+0x00, 0x18, 0xA2, 0xDA, 0x5D, 0x67, 0x70, 0xA2,
 0x0C, 0x6A, 0x6C, 0xEA, 0x4B, 0x32, 0x7A, 0x33,
 0x0C, 0xF0, 0x4F, 0xC0, 0x0C, 0xF0, 0x70, 0xC0,
-0x00, 0x18, 0x24, 0xDB, 0x10, 0xF0, 0x24, 0x6A,
-0x55, 0xF6, 0x58, 0x9A, 0x60, 0xA2, 0xFF, 0x6A,
+0x00, 0x18, 0xFC, 0xDA, 0x10, 0xF0, 0x24, 0x6A,
+0x95, 0xF5, 0x5C, 0x9A, 0x60, 0xA2, 0xFF, 0x6A,
 0x6C, 0xEA, 0xFD, 0x72, 0x02, 0x61, 0x00, 0x18,
-0xFF, 0xDA, 0x09, 0x97, 0x08, 0x91, 0x07, 0x90,
+0xD7, 0xDA, 0x09, 0x97, 0x08, 0x91, 0x07, 0x90,
 0x05, 0x63, 0x00, 0xEF, 0xFB, 0x63, 0x09, 0x62,
 0x22, 0x6A, 0x7D, 0x67, 0x50, 0xC3, 0x01, 0x6A,
 0x4F, 0xCB, 0x30, 0xF0, 0x20, 0x6A, 0xAE, 0xF2,
@@ -7557,31 +7536,31 @@ u8 array_mp_8821c_fw_ap[] = {
 0x09, 0x97, 0x05, 0x63, 0x00, 0xEF, 0x00, 0x65,
 0xFB, 0x63, 0x09, 0x62, 0x1A, 0x6A, 0x7D, 0x67,
 0x50, 0xC3, 0x00, 0xF0, 0x12, 0x04, 0x05, 0x6A,
-0x4F, 0xCB, 0x00, 0x18, 0xEE, 0xDA, 0x30, 0xF0,
+0x4F, 0xCB, 0x00, 0x18, 0xC6, 0xDA, 0x30, 0xF0,
 0x20, 0x6A, 0xAE, 0xF2, 0x58, 0x9A, 0x04, 0x04,
 0x40, 0xEA, 0x09, 0x97, 0x05, 0x63, 0x00, 0xEF,
 0xFB, 0x63, 0x09, 0x62, 0x19, 0x6A, 0x7D, 0x67,
 0x50, 0xC3, 0x00, 0xF0, 0x12, 0x04, 0x08, 0x6A,
-0x4F, 0xCB, 0x00, 0x18, 0xD4, 0xDA, 0x30, 0xF0,
+0x4F, 0xCB, 0x00, 0x18, 0xAC, 0xDA, 0x30, 0xF0,
 0x20, 0x6A, 0xAE, 0xF2, 0x58, 0x9A, 0x04, 0x04,
 0x40, 0xEA, 0x09, 0x97, 0x05, 0x63, 0x00, 0xEF,
 0xFD, 0x63, 0x05, 0x62, 0x40, 0xA4, 0x01, 0x72,
-0x04, 0x61, 0x00, 0x18, 0x82, 0xDB, 0x00, 0x18,
-0x78, 0xDB, 0x05, 0x97, 0x03, 0x63, 0x00, 0xEF,
+0x04, 0x61, 0x00, 0x18, 0x5A, 0xDB, 0x00, 0x18,
+0x50, 0xDB, 0x05, 0x97, 0x03, 0x63, 0x00, 0xEF,
 0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A,
 0x00, 0x6B, 0x0C, 0xF5, 0x7A, 0xC2, 0x00, 0x6B,
 0x0C, 0xF5, 0x78, 0xC2, 0x20, 0xE8, 0x00, 0x65,
 0xFF, 0x6A, 0x8C, 0xEA, 0x08, 0x5A, 0x05, 0x60,
-0x10, 0xF0, 0x24, 0x6B, 0x35, 0xF6, 0x7C, 0x9B,
-0x05, 0x10, 0x10, 0xF0, 0x24, 0x6B, 0x55, 0xF6,
-0x60, 0x9B, 0xF8, 0x4A, 0x01, 0x6C, 0xA0, 0x9B,
+0x10, 0xF0, 0x24, 0x6B, 0x95, 0xF5, 0x60, 0x9B,
+0x05, 0x10, 0x10, 0xF0, 0x24, 0x6B, 0x95, 0xF5,
+0x64, 0x9B, 0xF8, 0x4A, 0x01, 0x6C, 0xA0, 0x9B,
 0x84, 0xEA, 0x00, 0xF6, 0x80, 0x32, 0x4F, 0xEA,
 0xAC, 0xEA, 0x40, 0xDB, 0x40, 0x9B, 0x80, 0x34,
 0x80, 0x34, 0x8F, 0xEC, 0x4C, 0xEC, 0x80, 0xDB,
 0x20, 0xE8, 0x00, 0x65, 0xFF, 0x6A, 0x4C, 0xEC,
 0x08, 0x5C, 0xAC, 0xEA, 0x05, 0x60, 0x10, 0xF0,
-0x24, 0x6B, 0x35, 0xF6, 0x7C, 0x9B, 0x05, 0x10,
-0x10, 0xF0, 0x24, 0x6B, 0x55, 0xF6, 0x60, 0x9B,
+0x24, 0x6B, 0x95, 0xF5, 0x60, 0x9B, 0x05, 0x10,
+0x10, 0xF0, 0x24, 0x6B, 0x95, 0xF5, 0x64, 0x9B,
 0xF8, 0x4C, 0x01, 0x6D, 0xC0, 0x9B, 0xA4, 0xEC,
 0x00, 0xF6, 0xA0, 0x34, 0x8F, 0xEC, 0xCC, 0xEC,
 0x80, 0xDB, 0xC0, 0x9B, 0xA0, 0x35, 0xA0, 0x34,
@@ -7596,11 +7575,11 @@ u8 array_mp_8821c_fw_ap[] = {
 0x80, 0x6A, 0x4B, 0xEA, 0x8C, 0xEA, 0x2C, 0xEA,
 0x53, 0x22, 0x0C, 0xF5, 0xB8, 0xA0, 0x01, 0x6B,
 0x0F, 0x6A, 0xBA, 0x35, 0x4C, 0xEC, 0x6E, 0xED,
-0x6C, 0xED, 0x2C, 0xEC, 0x00, 0x18, 0xA7, 0xDB,
+0x6C, 0xED, 0x2C, 0xEC, 0x00, 0x18, 0x7F, 0xDB,
 0x0C, 0xF5, 0xB8, 0xA0, 0x0C, 0xF5, 0x98, 0xA0,
 0x0F, 0x6A, 0x01, 0x6B, 0xBA, 0x35, 0x4C, 0xEC,
 0x6C, 0xED, 0x2C, 0xEC, 0x2C, 0xED, 0x00, 0x18,
-0xA7, 0xDB, 0x0C, 0xF5, 0x78, 0xA0, 0x20, 0x6A,
+0x7F, 0xDB, 0x0C, 0xF5, 0x78, 0xA0, 0x20, 0x6A,
 0x6C, 0xEA, 0x2C, 0xEA, 0x24, 0x22, 0x05, 0x92,
 0x01, 0x6B, 0x54, 0x36, 0x0C, 0xF5, 0x59, 0xA0,
 0x6C, 0xEA, 0x2C, 0xEA, 0x09, 0x22, 0x30, 0xF0,
@@ -7610,7 +7589,7 @@ u8 array_mp_8821c_fw_ap[] = {
 0x86, 0x67, 0x40, 0xEA, 0x0C, 0xF5, 0xB8, 0xA0,
 0x0C, 0xF5, 0x98, 0xA0, 0x01, 0x6B, 0x0F, 0x6A,
 0xBA, 0x35, 0x4C, 0xEC, 0x6E, 0xED, 0x2C, 0xEC,
-0x6C, 0xED, 0x00, 0x18, 0xA7, 0xDB, 0x30, 0xF0,
+0x6C, 0xED, 0x00, 0x18, 0x7F, 0xDB, 0x30, 0xF0,
 0x20, 0x6A, 0xEC, 0xF6, 0x60, 0xA2, 0x10, 0x6A,
 0x6C, 0xEA, 0x0A, 0x22, 0x30, 0xF0, 0x20, 0x6A,
 0x04, 0x93, 0xAE, 0xF2, 0x50, 0x9A, 0xFF, 0x6C,
@@ -7625,244 +7604,244 @@ u8 array_mp_8821c_fw_ap[] = {
 0xEC, 0xF6, 0x80, 0xA2, 0x80, 0x6A, 0x4B, 0xEA,
 0x8C, 0xEA, 0xFF, 0x6B, 0x6C, 0xEA, 0x1A, 0x22,
 0x10, 0x6A, 0x8C, 0xEA, 0x6C, 0xEA, 0x02, 0x22,
-0x00, 0x18, 0xF3, 0xDB, 0x30, 0xF0, 0x20, 0x6B,
+0x00, 0x18, 0xCB, 0xDB, 0x30, 0xF0, 0x20, 0x6B,
 0xC0, 0xF1, 0x08, 0x4B, 0x0C, 0xF5, 0x99, 0xA3,
 0x01, 0x6A, 0x4C, 0xEC, 0x0B, 0x24, 0x0C, 0xF5,
 0xB8, 0xA3, 0x0F, 0x6C, 0xFF, 0x6B, 0xAC, 0xEC,
 0xBA, 0x35, 0x4E, 0xED, 0x6C, 0xEC, 0x4C, 0xED,
-0x00, 0x18, 0xA7, 0xDB, 0x05, 0x97, 0x03, 0x63,
+0x00, 0x18, 0x7F, 0xDB, 0x05, 0x97, 0x03, 0x63,
 0x00, 0xEF, 0x00, 0x65, 0xFF, 0xF7, 0x1F, 0x6A,
-0x10, 0xF0, 0x24, 0x6B, 0x8C, 0xEA, 0x55, 0xF6,
-0x7C, 0x9B, 0x10, 0xF0, 0x24, 0x6C, 0x75, 0xF6,
-0x80, 0x9C, 0xCC, 0xEB, 0x40, 0xF6, 0xA0, 0x35,
+0x10, 0xF0, 0x24, 0x6B, 0x8C, 0xEA, 0xB5, 0xF5,
+0x60, 0x9B, 0x10, 0xF0, 0x24, 0x6C, 0xB5, 0xF5,
+0x84, 0x9C, 0xCC, 0xEB, 0x40, 0xF6, 0xA0, 0x35,
 0x8D, 0xEB, 0x1F, 0xF7, 0x00, 0x6C, 0x4C, 0xEC,
 0x02, 0xF0, 0x00, 0x74, 0xAD, 0xEB, 0x01, 0x60,
-0x05, 0x2C, 0x10, 0xF0, 0x24, 0x6C, 0xB5, 0xF1,
-0x9C, 0x9C, 0x04, 0x10, 0x10, 0xF0, 0x24, 0x6C,
-0xD5, 0xF1, 0x80, 0x9C, 0x89, 0xE2, 0x60, 0xDA,
+0x05, 0x2C, 0x10, 0xF0, 0x24, 0x6C, 0x15, 0xF1,
+0x80, 0x9C, 0x04, 0x10, 0x10, 0xF0, 0x24, 0x6C,
+0x15, 0xF1, 0x84, 0x9C, 0x89, 0xE2, 0x60, 0xDA,
 0x20, 0xE8, 0x00, 0x65, 0xFF, 0xF7, 0x1F, 0x6A,
 0x8C, 0xEA, 0x1F, 0xF7, 0x00, 0x6C, 0x4C, 0xEC,
 0xFF, 0x6B, 0x02, 0xF0, 0x00, 0x74, 0xAC, 0xEB,
 0x01, 0x60, 0x05, 0x2C, 0x10, 0xF0, 0x24, 0x6C,
-0xB5, 0xF1, 0x9C, 0x9C, 0x04, 0x10, 0x10, 0xF0,
-0x24, 0x6C, 0xD5, 0xF1, 0x80, 0x9C, 0x91, 0xE2,
+0x15, 0xF1, 0x80, 0x9C, 0x04, 0x10, 0x10, 0xF0,
+0x24, 0x6C, 0x15, 0xF1, 0x84, 0x9C, 0x91, 0xE2,
 0x00, 0x6D, 0xA0, 0xDC, 0x10, 0xF0, 0x24, 0x6C,
-0x55, 0xF6, 0x9C, 0x9C, 0xD4, 0x36, 0x40, 0xF6,
+0xB5, 0xF5, 0x80, 0x9C, 0xD4, 0x36, 0x40, 0xF6,
 0x60, 0x33, 0x8C, 0xEE, 0x6D, 0xEE, 0x10, 0xF0,
-0x24, 0x6B, 0x75, 0xF6, 0x60, 0x9B, 0x6D, 0xEE,
+0x24, 0x6B, 0xB5, 0xF5, 0x64, 0x9B, 0x6D, 0xEE,
 0x1F, 0xF7, 0x00, 0x6B, 0x4C, 0xEB, 0x02, 0xF0,
 0x00, 0x73, 0x01, 0x60, 0x05, 0x2B, 0x10, 0xF0,
-0x24, 0x6B, 0xB5, 0xF1, 0x7C, 0x9B, 0x04, 0x10,
-0x10, 0xF0, 0x24, 0x6B, 0xD5, 0xF1, 0x60, 0x9B,
+0x24, 0x6B, 0x15, 0xF1, 0x60, 0x9B, 0x04, 0x10,
+0x10, 0xF0, 0x24, 0x6B, 0x15, 0xF1, 0x64, 0x9B,
 0x69, 0xE2, 0xC0, 0xDA, 0x20, 0xE8, 0x00, 0x65,
 0x0F, 0xF5, 0x00, 0x6B, 0x78, 0xEE, 0xFF, 0xF7,
 0x1F, 0x6A, 0x8C, 0xEA, 0x10, 0xF0, 0x24, 0x6C,
-0x55, 0xF6, 0x9C, 0x9C, 0x40, 0xF6, 0xA0, 0x35,
+0xB5, 0xF5, 0x80, 0x9C, 0x40, 0xF6, 0xA0, 0x35,
 0x12, 0xEB, 0x8C, 0xEB, 0x10, 0xF0, 0x24, 0x6C,
-0x75, 0xF6, 0x80, 0x9C, 0xAD, 0xEB, 0x8D, 0xEB,
+0xB5, 0xF5, 0x84, 0x9C, 0xAD, 0xEB, 0x8D, 0xEB,
 0x1F, 0xF7, 0x00, 0x6C, 0x4C, 0xEC, 0x02, 0xF0,
 0x00, 0x74, 0x01, 0x60, 0x05, 0x2C, 0x10, 0xF0,
-0x24, 0x6C, 0xB5, 0xF1, 0x9C, 0x9C, 0x04, 0x10,
-0x10, 0xF0, 0x24, 0x6C, 0xD5, 0xF1, 0x80, 0x9C,
+0x24, 0x6C, 0x15, 0xF1, 0x80, 0x9C, 0x04, 0x10,
+0x10, 0xF0, 0x24, 0x6C, 0x15, 0xF1, 0x84, 0x9C,
 0x89, 0xE2, 0x60, 0xDA, 0x20, 0xE8, 0x00, 0x65,
-0x10, 0xF0, 0x24, 0x6A, 0xB5, 0xF5, 0x40, 0x9A,
+0x10, 0xF0, 0x24, 0x6A, 0xF5, 0xF4, 0x44, 0x9A,
 0x40, 0x9A, 0x20, 0xE8, 0x30, 0xF0, 0x20, 0x6B,
 0xC0, 0xF1, 0x08, 0x4B, 0x4C, 0x9B, 0x8D, 0xEA,
-0x4C, 0xDB, 0x10, 0xF0, 0x24, 0x6B, 0x75, 0xF6,
-0x78, 0x9B, 0x80, 0xDB, 0x10, 0xF0, 0x24, 0x6B,
-0x75, 0xF6, 0x7C, 0x9B, 0x40, 0xDB, 0x20, 0xE8,
+0x4C, 0xDB, 0x10, 0xF0, 0x24, 0x6B, 0xB5, 0xF5,
+0x7C, 0x9B, 0x80, 0xDB, 0x10, 0xF0, 0x24, 0x6B,
+0xD5, 0xF5, 0x60, 0x9B, 0x40, 0xDB, 0x20, 0xE8,
 0xFD, 0x63, 0x05, 0x62, 0x04, 0xD0, 0x10, 0xF0,
-0x24, 0x6A, 0x95, 0xF6, 0x60, 0x9A, 0xC0, 0x6A,
+0x24, 0x6A, 0xD5, 0xF5, 0x64, 0x9A, 0xC0, 0x6A,
 0xFF, 0x68, 0x80, 0xA3, 0x8C, 0xEA, 0x40, 0xC3,
 0x30, 0xF0, 0x20, 0x6A, 0xCE, 0xF4, 0x5C, 0x9A,
 0x0A, 0x6C, 0x40, 0xEA, 0x10, 0xF0, 0x24, 0x6A,
-0x95, 0xF6, 0x44, 0x9A, 0x01, 0x6B, 0x05, 0x97,
+0xD5, 0xF5, 0x48, 0x9A, 0x01, 0x6B, 0x05, 0x97,
 0x40, 0xA2, 0x0C, 0xEA, 0x5E, 0x32, 0x6E, 0xEA,
 0x6C, 0xEA, 0x0C, 0xEA, 0x04, 0x90, 0x03, 0x63,
 0x00, 0xEF, 0x00, 0x65, 0xFD, 0x63, 0x05, 0x62,
-0x04, 0xD0, 0x10, 0xF0, 0x24, 0x6B, 0x95, 0xF1,
-0x6C, 0x9B, 0x10, 0xF0, 0x23, 0x6A, 0xCE, 0xF1,
+0x04, 0xD0, 0x10, 0xF0, 0x24, 0x6B, 0xD5, 0xF0,
+0x70, 0x9B, 0x10, 0xF0, 0x23, 0x6A, 0x2E, 0xF1,
 0x05, 0x4A, 0x40, 0xDB, 0x00, 0x68, 0x28, 0x10,
 0x82, 0xF3, 0x08, 0x70, 0x11, 0x61, 0x10, 0xF0,
-0x24, 0x6A, 0x15, 0xF2, 0x78, 0x9A, 0x02, 0xF0,
+0x24, 0x6A, 0x55, 0xF1, 0x7C, 0x9A, 0x02, 0xF0,
 0x00, 0x6C, 0x40, 0x9B, 0x8D, 0xEA, 0x40, 0xDB,
-0x10, 0xF0, 0x24, 0x6A, 0x35, 0xF3, 0x4C, 0x9A,
+0x10, 0xF0, 0x24, 0x6A, 0x75, 0xF2, 0x50, 0x9A,
 0x03, 0x6B, 0x6B, 0xEB, 0x60, 0xC2, 0x18, 0x10,
 0xFF, 0xF7, 0x1F, 0x6A, 0x01, 0x48, 0x4C, 0xE8,
 0x30, 0xF0, 0x20, 0x6A, 0xCE, 0xF4, 0x5C, 0x9A,
 0x14, 0x6C, 0x40, 0xEA, 0x33, 0x58, 0x08, 0x61,
-0x10, 0xF0, 0x24, 0x6A, 0x95, 0xF6, 0x48, 0x9A,
+0x10, 0xF0, 0x24, 0x6A, 0xD5, 0xF5, 0x4C, 0x9A,
 0x60, 0xA2, 0x08, 0x6A, 0x6C, 0xEA, 0x04, 0x2A,
-0x00, 0x18, 0x60, 0xDC, 0x01, 0x72, 0xD4, 0x61,
-0x10, 0xF0, 0x24, 0x6A, 0x35, 0xF3, 0x4C, 0x9A,
+0x00, 0x18, 0x38, 0xDC, 0x01, 0x72, 0xD4, 0x61,
+0x10, 0xF0, 0x24, 0x6A, 0x75, 0xF2, 0x50, 0x9A,
 0x02, 0x6B, 0x6B, 0xEB, 0x60, 0xC2, 0x10, 0xF0,
-0x24, 0x6B, 0x95, 0xF1, 0x6C, 0x9B, 0x10, 0xF0,
-0x23, 0x6A, 0xCE, 0xF1, 0x06, 0x4A, 0x40, 0xDB,
+0x24, 0x6B, 0xD5, 0xF0, 0x70, 0x9B, 0x10, 0xF0,
+0x23, 0x6A, 0x2E, 0xF1, 0x06, 0x4A, 0x40, 0xDB,
 0x05, 0x97, 0x04, 0x90, 0x03, 0x63, 0x00, 0xEF,
 0x05, 0x5C, 0x5E, 0x60, 0x10, 0xF0, 0x24, 0x6A,
-0x88, 0x34, 0xB5, 0xF0, 0x08, 0x4A, 0x89, 0xE2,
+0x88, 0x34, 0xF4, 0xF7, 0x0C, 0x4A, 0x89, 0xE2,
 0x40, 0x9A, 0x00, 0xEA, 0x30, 0xF0, 0x20, 0x6B,
 0xC0, 0xF1, 0x48, 0x9B, 0xAD, 0xEA, 0xC0, 0xF1,
-0x48, 0xDB, 0x10, 0xF0, 0x24, 0x6B, 0x35, 0xF6,
-0x74, 0x9B, 0xA0, 0xDB, 0x10, 0xF0, 0x24, 0x6B,
-0x95, 0xF6, 0x6C, 0x9B, 0x32, 0x10, 0x30, 0xF0,
+0x48, 0xDB, 0x10, 0xF0, 0x24, 0x6B, 0x75, 0xF5,
+0x78, 0x9B, 0xA0, 0xDB, 0x10, 0xF0, 0x24, 0x6B,
+0xD5, 0xF5, 0x70, 0x9B, 0x32, 0x10, 0x30, 0xF0,
 0x20, 0x6B, 0xC0, 0xF1, 0x08, 0x4B, 0x41, 0x9B,
 0xAD, 0xEA, 0x41, 0xDB, 0x10, 0xF0, 0x24, 0x6B,
-0x95, 0xF6, 0x70, 0x9B, 0xA0, 0xDB, 0x10, 0xF0,
-0x24, 0x6B, 0x95, 0xF6, 0x74, 0x9B, 0x21, 0x10,
+0xD5, 0xF5, 0x74, 0x9B, 0xA0, 0xDB, 0x10, 0xF0,
+0x24, 0x6B, 0xD5, 0xF5, 0x78, 0x9B, 0x21, 0x10,
 0x30, 0xF0, 0x20, 0x6B, 0xC0, 0xF1, 0x08, 0x4B,
 0x42, 0x9B, 0xAD, 0xEA, 0x42, 0xDB, 0x10, 0xF0,
-0x24, 0x6B, 0x95, 0xF6, 0x78, 0x9B, 0xA0, 0xDB,
-0x10, 0xF0, 0x24, 0x6B, 0x95, 0xF6, 0x7C, 0x9B,
+0x24, 0x6B, 0xD5, 0xF5, 0x7C, 0x9B, 0xA0, 0xDB,
+0x10, 0xF0, 0x24, 0x6B, 0xF5, 0xF5, 0x60, 0x9B,
 0x10, 0x10, 0x30, 0xF0, 0x20, 0x6B, 0xC0, 0xF1,
 0x08, 0x4B, 0x43, 0x9B, 0xAD, 0xEA, 0x43, 0xDB,
-0x10, 0xF0, 0x24, 0x6B, 0xB5, 0xF6, 0x60, 0x9B,
-0xA0, 0xDB, 0x10, 0xF0, 0x24, 0x6B, 0xB5, 0xF6,
-0x64, 0x9B, 0x40, 0xDB, 0x20, 0xE8, 0x30, 0xF0,
+0x10, 0xF0, 0x24, 0x6B, 0xF5, 0xF5, 0x64, 0x9B,
+0xA0, 0xDB, 0x10, 0xF0, 0x24, 0x6B, 0xF5, 0xF5,
+0x68, 0x9B, 0x40, 0xDB, 0x20, 0xE8, 0x30, 0xF0,
 0x20, 0x6B, 0xC0, 0xF1, 0x08, 0x4B, 0x44, 0x9B,
 0xAD, 0xEA, 0x44, 0xDB, 0x10, 0xF0, 0x24, 0x6B,
-0xB5, 0xF6, 0x68, 0x9B, 0xA0, 0xDB, 0x10, 0xF0,
-0x24, 0x6B, 0xB5, 0xF6, 0x6C, 0x9B, 0x40, 0xDB,
+0xF5, 0xF5, 0x6C, 0x9B, 0xA0, 0xDB, 0x10, 0xF0,
+0x24, 0x6B, 0xF5, 0xF5, 0x70, 0x9B, 0x40, 0xDB,
 0x20, 0xE8, 0x00, 0x65, 0x05, 0x5C, 0x63, 0x60,
-0x10, 0xF0, 0x24, 0x6A, 0x88, 0x34, 0xB5, 0xF0,
-0x1C, 0x4A, 0x89, 0xE2, 0x40, 0x9A, 0x00, 0xEA,
+0x10, 0xF0, 0x24, 0x6A, 0x88, 0x34, 0x15, 0xF0,
+0x00, 0x4A, 0x89, 0xE2, 0x40, 0x9A, 0x00, 0xEA,
 0x30, 0xF0, 0x20, 0x6B, 0xC0, 0xF1, 0x88, 0x9B,
 0xAF, 0xEA, 0x8C, 0xEA, 0xC0, 0xF1, 0x48, 0xDB,
-0x10, 0xF0, 0x24, 0x6B, 0x95, 0xF6, 0x6C, 0x9B,
-0x40, 0xDB, 0x10, 0xF0, 0x24, 0x6A, 0x35, 0xF6,
-0x54, 0x9A, 0x35, 0x10, 0x30, 0xF0, 0x20, 0x6B,
+0x10, 0xF0, 0x24, 0x6B, 0xD5, 0xF5, 0x70, 0x9B,
+0x40, 0xDB, 0x10, 0xF0, 0x24, 0x6A, 0x75, 0xF5,
+0x58, 0x9A, 0x35, 0x10, 0x30, 0xF0, 0x20, 0x6B,
 0xC0, 0xF1, 0x08, 0x4B, 0x81, 0x9B, 0xAF, 0xEA,
 0x8C, 0xEA, 0x41, 0xDB, 0x10, 0xF0, 0x24, 0x6B,
-0x95, 0xF6, 0x74, 0x9B, 0x40, 0xDB, 0x10, 0xF0,
-0x24, 0x6A, 0x95, 0xF6, 0x50, 0x9A, 0x23, 0x10,
+0xD5, 0xF5, 0x78, 0x9B, 0x40, 0xDB, 0x10, 0xF0,
+0x24, 0x6A, 0xD5, 0xF5, 0x54, 0x9A, 0x23, 0x10,
 0x30, 0xF0, 0x20, 0x6B, 0xC0, 0xF1, 0x08, 0x4B,
 0x82, 0x9B, 0xAF, 0xEA, 0x8C, 0xEA, 0x42, 0xDB,
-0x10, 0xF0, 0x24, 0x6B, 0x95, 0xF6, 0x7C, 0x9B,
-0x40, 0xDB, 0x10, 0xF0, 0x24, 0x6A, 0x95, 0xF6,
-0x58, 0x9A, 0x11, 0x10, 0x30, 0xF0, 0x20, 0x6B,
+0x10, 0xF0, 0x24, 0x6B, 0xF5, 0xF5, 0x60, 0x9B,
+0x40, 0xDB, 0x10, 0xF0, 0x24, 0x6A, 0xD5, 0xF5,
+0x5C, 0x9A, 0x11, 0x10, 0x30, 0xF0, 0x20, 0x6B,
 0xC0, 0xF1, 0x08, 0x4B, 0x83, 0x9B, 0xAF, 0xEA,
 0x8C, 0xEA, 0x43, 0xDB, 0x10, 0xF0, 0x24, 0x6B,
-0xB5, 0xF6, 0x64, 0x9B, 0x40, 0xDB, 0x10, 0xF0,
-0x24, 0x6A, 0xB5, 0xF6, 0x40, 0x9A, 0xA0, 0xDA,
+0xF5, 0xF5, 0x68, 0x9B, 0x40, 0xDB, 0x10, 0xF0,
+0x24, 0x6A, 0xF5, 0xF5, 0x44, 0x9A, 0xA0, 0xDA,
 0x20, 0xE8, 0x30, 0xF0, 0x20, 0x6B, 0xC0, 0xF1,
 0x08, 0x4B, 0x84, 0x9B, 0xAF, 0xEA, 0x8C, 0xEA,
-0x44, 0xDB, 0x10, 0xF0, 0x24, 0x6B, 0xB5, 0xF6,
-0x6C, 0x9B, 0x40, 0xDB, 0x10, 0xF0, 0x24, 0x6A,
-0xB5, 0xF6, 0x48, 0x9A, 0xA0, 0xDA, 0x20, 0xE8,
+0x44, 0xDB, 0x10, 0xF0, 0x24, 0x6B, 0xF5, 0xF5,
+0x70, 0x9B, 0x40, 0xDB, 0x10, 0xF0, 0x24, 0x6A,
+0xF5, 0xF5, 0x4C, 0x9A, 0xA0, 0xDA, 0x20, 0xE8,
 0x01, 0x74, 0x15, 0x60, 0x03, 0x24, 0x02, 0x74,
 0x23, 0x60, 0x20, 0xE8, 0x30, 0xF0, 0x20, 0x6B,
 0xC0, 0xF1, 0x08, 0x4B, 0x4E, 0x9B, 0xAD, 0xEA,
-0x4E, 0xDB, 0x10, 0xF0, 0x24, 0x6B, 0x35, 0xF2,
-0x74, 0x9B, 0xA0, 0xDB, 0x10, 0xF0, 0x24, 0x6B,
-0xB5, 0xF6, 0x70, 0x9B, 0x21, 0x10, 0x30, 0xF0,
+0x4E, 0xDB, 0x10, 0xF0, 0x24, 0x6B, 0x75, 0xF1,
+0x78, 0x9B, 0xA0, 0xDB, 0x10, 0xF0, 0x24, 0x6B,
+0xF5, 0xF5, 0x74, 0x9B, 0x21, 0x10, 0x30, 0xF0,
 0x20, 0x6B, 0xC0, 0xF1, 0x08, 0x4B, 0x4F, 0x9B,
 0xAD, 0xEA, 0x4F, 0xDB, 0x10, 0xF0, 0x24, 0x6B,
-0xB5, 0xF6, 0x74, 0x9B, 0xA0, 0xDB, 0x10, 0xF0,
-0x24, 0x6B, 0xB5, 0xF6, 0x78, 0x9B, 0x10, 0x10,
+0xF5, 0xF5, 0x78, 0x9B, 0xA0, 0xDB, 0x10, 0xF0,
+0x24, 0x6B, 0xF5, 0xF5, 0x7C, 0x9B, 0x10, 0x10,
 0x30, 0xF0, 0x20, 0x6B, 0xC0, 0xF1, 0x08, 0x4B,
 0x50, 0x9B, 0xAD, 0xEA, 0x50, 0xDB, 0x10, 0xF0,
-0x24, 0x6B, 0xB5, 0xF6, 0x7C, 0x9B, 0xA0, 0xDB,
-0x10, 0xF0, 0x24, 0x6B, 0xD5, 0xF6, 0x60, 0x9B,
+0x24, 0x6B, 0x15, 0xF6, 0x60, 0x9B, 0xA0, 0xDB,
+0x10, 0xF0, 0x24, 0x6B, 0x15, 0xF6, 0x64, 0x9B,
 0x40, 0xDB, 0x20, 0xE8, 0x01, 0x74, 0x16, 0x60,
 0x03, 0x24, 0x02, 0x74, 0x25, 0x60, 0x20, 0xE8,
 0x30, 0xF0, 0x20, 0x6B, 0xC0, 0xF1, 0x08, 0x4B,
 0x8E, 0x9B, 0xAF, 0xEA, 0x8C, 0xEA, 0x4E, 0xDB,
-0x10, 0xF0, 0x24, 0x6B, 0xB5, 0xF6, 0x70, 0x9B,
-0x40, 0xDB, 0x10, 0xF0, 0x24, 0x6A, 0x35, 0xF2,
-0x54, 0x9A, 0x23, 0x10, 0x30, 0xF0, 0x20, 0x6B,
+0x10, 0xF0, 0x24, 0x6B, 0xF5, 0xF5, 0x74, 0x9B,
+0x40, 0xDB, 0x10, 0xF0, 0x24, 0x6A, 0x75, 0xF1,
+0x58, 0x9A, 0x23, 0x10, 0x30, 0xF0, 0x20, 0x6B,
 0xC0, 0xF1, 0x08, 0x4B, 0x8F, 0x9B, 0xAF, 0xEA,
 0x8C, 0xEA, 0x4F, 0xDB, 0x10, 0xF0, 0x24, 0x6B,
-0xB5, 0xF6, 0x78, 0x9B, 0x40, 0xDB, 0x10, 0xF0,
-0x24, 0x6A, 0xB5, 0xF6, 0x54, 0x9A, 0x11, 0x10,
+0xF5, 0xF5, 0x7C, 0x9B, 0x40, 0xDB, 0x10, 0xF0,
+0x24, 0x6A, 0xF5, 0xF5, 0x58, 0x9A, 0x11, 0x10,
 0x30, 0xF0, 0x20, 0x6B, 0xC0, 0xF1, 0x08, 0x4B,
 0x90, 0x9B, 0xAF, 0xEA, 0x8C, 0xEA, 0x50, 0xDB,
-0x10, 0xF0, 0x24, 0x6B, 0xD5, 0xF6, 0x60, 0x9B,
-0x40, 0xDB, 0x10, 0xF0, 0x24, 0x6A, 0xB5, 0xF6,
-0x5C, 0x9A, 0xA0, 0xDA, 0x20, 0xE8, 0x00, 0x65,
-0x10, 0xF0, 0x24, 0x6C, 0x95, 0xF6, 0x8C, 0x9C,
+0x10, 0xF0, 0x24, 0x6B, 0x15, 0xF6, 0x64, 0x9B,
+0x40, 0xDB, 0x10, 0xF0, 0x24, 0x6A, 0x15, 0xF6,
+0x40, 0x9A, 0xA0, 0xDA, 0x20, 0xE8, 0x00, 0x65,
+0x10, 0xF0, 0x24, 0x6C, 0xD5, 0xF5, 0x90, 0x9C,
 0x00, 0x6A, 0x30, 0xF0, 0x20, 0x6B, 0xC0, 0xF1,
 0x48, 0xDB, 0xC0, 0xF1, 0x08, 0x4B, 0x41, 0xDB,
 0x42, 0xDB, 0x43, 0xDB, 0x44, 0xDB, 0x40, 0xDC,
-0x10, 0xF0, 0x24, 0x6C, 0x95, 0xF6, 0x94, 0x9C,
-0x40, 0xDC, 0x10, 0xF0, 0x24, 0x6C, 0x95, 0xF6,
-0x9C, 0x9C, 0x40, 0xDC, 0x10, 0xF0, 0x24, 0x6C,
-0xB5, 0xF6, 0x84, 0x9C, 0x40, 0xDC, 0x10, 0xF0,
-0x24, 0x6C, 0xB5, 0xF6, 0x8C, 0x9C, 0x40, 0xDC,
-0x10, 0xF0, 0x24, 0x6C, 0xB5, 0xF6, 0x90, 0x9C,
+0x10, 0xF0, 0x24, 0x6C, 0xD5, 0xF5, 0x98, 0x9C,
+0x40, 0xDC, 0x10, 0xF0, 0x24, 0x6C, 0xF5, 0xF5,
+0x80, 0x9C, 0x40, 0xDC, 0x10, 0xF0, 0x24, 0x6C,
+0xF5, 0xF5, 0x88, 0x9C, 0x40, 0xDC, 0x10, 0xF0,
+0x24, 0x6C, 0xF5, 0xF5, 0x90, 0x9C, 0x40, 0xDC,
+0x10, 0xF0, 0x24, 0x6C, 0xF5, 0xF5, 0x94, 0x9C,
 0x4E, 0xDB, 0x4F, 0xDB, 0x40, 0xDC, 0x10, 0xF0,
-0x24, 0x6C, 0xB5, 0xF6, 0x98, 0x9C, 0x40, 0xDC,
-0x10, 0xF0, 0x24, 0x6C, 0xD5, 0xF6, 0x80, 0x9C,
+0x24, 0x6C, 0xF5, 0xF5, 0x9C, 0x9C, 0x40, 0xDC,
+0x10, 0xF0, 0x24, 0x6C, 0x15, 0xF6, 0x84, 0x9C,
 0x50, 0xDB, 0x40, 0xDC, 0x4C, 0xDB, 0x10, 0xF0,
-0x24, 0x6B, 0x75, 0xF6, 0x7C, 0x9B, 0x40, 0xDB,
+0x24, 0x6B, 0xD5, 0xF5, 0x60, 0x9B, 0x40, 0xDB,
 0x20, 0xE8, 0x00, 0x65, 0x10, 0xF0, 0x24, 0x6B,
-0x35, 0xF6, 0x74, 0x9B, 0x01, 0x6A, 0x4B, 0xEA,
-0x40, 0xDB, 0x10, 0xF0, 0x24, 0x6B, 0x95, 0xF6,
-0x70, 0x9B, 0x40, 0xDB, 0x10, 0xF0, 0x24, 0x6B,
-0x95, 0xF6, 0x78, 0x9B, 0x40, 0xDB, 0x10, 0xF0,
-0x24, 0x6B, 0xB5, 0xF6, 0x60, 0x9B, 0x40, 0xDB,
-0x10, 0xF0, 0x24, 0x6B, 0x35, 0xF2, 0x74, 0x9B,
-0x40, 0xDB, 0x10, 0xF0, 0x24, 0x6B, 0xB5, 0xF6,
+0x75, 0xF5, 0x78, 0x9B, 0x01, 0x6A, 0x4B, 0xEA,
+0x40, 0xDB, 0x10, 0xF0, 0x24, 0x6B, 0xD5, 0xF5,
 0x74, 0x9B, 0x40, 0xDB, 0x10, 0xF0, 0x24, 0x6B,
-0xD5, 0xF6, 0x60, 0x9B, 0x40, 0xDB, 0x10, 0xF0,
-0x24, 0x6B, 0x75, 0xF6, 0x78, 0x9B, 0x40, 0xDB,
+0xD5, 0xF5, 0x7C, 0x9B, 0x40, 0xDB, 0x10, 0xF0,
+0x24, 0x6B, 0xF5, 0xF5, 0x64, 0x9B, 0x40, 0xDB,
+0x10, 0xF0, 0x24, 0x6B, 0x75, 0xF1, 0x78, 0x9B,
+0x40, 0xDB, 0x10, 0xF0, 0x24, 0x6B, 0xF5, 0xF5,
+0x78, 0x9B, 0x40, 0xDB, 0x10, 0xF0, 0x24, 0x6B,
+0x15, 0xF6, 0x64, 0x9B, 0x40, 0xDB, 0x10, 0xF0,
+0x24, 0x6B, 0xB5, 0xF5, 0x7C, 0x9B, 0x40, 0xDB,
 0x20, 0xE8, 0x00, 0x65, 0xFF, 0x6A, 0x4C, 0xEC,
 0x05, 0x5C, 0x4C, 0xED, 0x00, 0x6A, 0x61, 0x60,
-0x10, 0xF0, 0x24, 0x6A, 0x88, 0x34, 0xD5, 0xF0,
-0x10, 0x4A, 0x89, 0xE2, 0x40, 0x9A, 0x00, 0xEA,
-0x05, 0x2D, 0x10, 0xF0, 0x24, 0x6A, 0xD5, 0xF6,
-0x4C, 0x9A, 0x0A, 0x10, 0x10, 0xF0, 0x24, 0x6A,
-0xD5, 0xF6, 0x4C, 0x9A, 0x0C, 0x10, 0x07, 0x2D,
-0x10, 0xF0, 0x24, 0x6A, 0xD5, 0xF6, 0x50, 0x9A,
+0x10, 0xF0, 0x24, 0x6A, 0x88, 0x34, 0x15, 0xF0,
+0x14, 0x4A, 0x89, 0xE2, 0x40, 0x9A, 0x00, 0xEA,
+0x05, 0x2D, 0x10, 0xF0, 0x24, 0x6A, 0x15, 0xF6,
+0x50, 0x9A, 0x0A, 0x10, 0x10, 0xF0, 0x24, 0x6A,
+0x15, 0xF6, 0x50, 0x9A, 0x0C, 0x10, 0x07, 0x2D,
+0x10, 0xF0, 0x24, 0x6A, 0x15, 0xF6, 0x54, 0x9A,
 0x60, 0xA2, 0x01, 0x6A, 0x39, 0x10, 0x10, 0xF0,
-0x24, 0x6A, 0xD5, 0xF6, 0x50, 0x9A, 0x60, 0xA2,
+0x24, 0x6A, 0x15, 0xF6, 0x54, 0x9A, 0x60, 0xA2,
 0xFF, 0x6A, 0x6C, 0xEA, 0x46, 0x32, 0x2F, 0x10,
-0x09, 0x2D, 0x10, 0xF0, 0x24, 0x6A, 0xD5, 0xF6,
-0x50, 0x9A, 0x60, 0xA2, 0xFF, 0x6A, 0x6C, 0xEA,
+0x09, 0x2D, 0x10, 0xF0, 0x24, 0x6A, 0x15, 0xF6,
+0x54, 0x9A, 0x60, 0xA2, 0xFF, 0x6A, 0x6C, 0xEA,
 0x4A, 0x32, 0x25, 0x10, 0x10, 0xF0, 0x24, 0x6A,
-0xD5, 0xF6, 0x50, 0x9A, 0x60, 0xA2, 0xFF, 0x6A,
+0x15, 0xF6, 0x54, 0x9A, 0x60, 0xA2, 0xFF, 0x6A,
 0x6C, 0xEA, 0x4E, 0x32, 0x1C, 0x10, 0x09, 0x2D,
-0x10, 0xF0, 0x24, 0x6A, 0xD5, 0xF6, 0x50, 0x9A,
+0x10, 0xF0, 0x24, 0x6A, 0x15, 0xF6, 0x54, 0x9A,
 0x60, 0xA2, 0xFF, 0x6A, 0x6C, 0xEA, 0x52, 0x32,
-0x12, 0x10, 0x10, 0xF0, 0x24, 0x6A, 0xD5, 0xF6,
-0x50, 0x9A, 0x60, 0xA2, 0xFF, 0x6A, 0x6C, 0xEA,
+0x12, 0x10, 0x10, 0xF0, 0x24, 0x6A, 0x15, 0xF6,
+0x54, 0x9A, 0x60, 0xA2, 0xFF, 0x6A, 0x6C, 0xEA,
 0x56, 0x32, 0x09, 0x10, 0x0B, 0x2D, 0x10, 0xF0,
-0x24, 0x6A, 0xD5, 0xF6, 0x50, 0x9A, 0x60, 0xA2,
+0x24, 0x6A, 0x15, 0xF6, 0x54, 0x9A, 0x60, 0xA2,
 0xFF, 0x6A, 0x6C, 0xEA, 0x5A, 0x32, 0x01, 0x6B,
 0x6C, 0xEA, 0x20, 0xE8, 0x10, 0xF0, 0x24, 0x6A,
-0xD5, 0xF6, 0x50, 0x9A, 0x40, 0xA2, 0x00, 0xF6,
+0x15, 0xF6, 0x54, 0x9A, 0x40, 0xA2, 0x00, 0xF6,
 0x40, 0x32, 0x00, 0xF6, 0x43, 0x32, 0xC0, 0xF7,
 0x42, 0x32, 0x20, 0xE8, 0xFC, 0x63, 0x07, 0x62,
 0x06, 0xD1, 0x05, 0xD0, 0xFF, 0x69, 0x8C, 0xE9,
 0x00, 0x68, 0xFF, 0x6A, 0x0C, 0xEA, 0x2E, 0xEA,
-0x10, 0x2A, 0x91, 0x67, 0x00, 0x18, 0x50, 0xE6,
-0x91, 0x67, 0x00, 0x18, 0x3F, 0xE6, 0x91, 0x67,
-0x00, 0x18, 0x57, 0xE6, 0x91, 0x67, 0x00, 0x18,
-0x11, 0xE6, 0x91, 0x67, 0x00, 0x18, 0x1E, 0xE6,
-0x0F, 0x10, 0x90, 0x67, 0x00, 0x18, 0x76, 0xE6,
-0x90, 0x67, 0x00, 0x18, 0x65, 0xE6, 0x90, 0x67,
-0x00, 0x18, 0x7D, 0xE6, 0x90, 0x67, 0x00, 0x18,
-0x35, 0xE6, 0x90, 0x67, 0x00, 0x18, 0x2B, 0xE6,
+0x10, 0x2A, 0x91, 0x67, 0x00, 0x18, 0x21, 0xE6,
+0x91, 0x67, 0x00, 0x18, 0x10, 0xE6, 0x91, 0x67,
+0x00, 0x18, 0x28, 0xE6, 0x91, 0x67, 0x00, 0x18,
+0xE2, 0xE5, 0x91, 0x67, 0x00, 0x18, 0xEF, 0xE5,
+0x0F, 0x10, 0x90, 0x67, 0x00, 0x18, 0x47, 0xE6,
+0x90, 0x67, 0x00, 0x18, 0x36, 0xE6, 0x90, 0x67,
+0x00, 0x18, 0x4E, 0xE6, 0x90, 0x67, 0x00, 0x18,
+0x06, 0xE6, 0x90, 0x67, 0x00, 0x18, 0xFC, 0xE5,
 0x01, 0x48, 0x05, 0x70, 0xDA, 0x61, 0x07, 0x97,
 0x06, 0x91, 0x05, 0x90, 0x04, 0x63, 0x00, 0xEF,
 0xFC, 0x63, 0x07, 0x62, 0x06, 0xD1, 0x05, 0xD0,
 0x10, 0xF0, 0x24, 0x6A, 0xFF, 0xF7, 0x1F, 0x69,
-0x8C, 0xE9, 0xF5, 0xF2, 0x80, 0x9A, 0xFF, 0x6B,
+0x8C, 0xE9, 0x35, 0xF2, 0x84, 0x9A, 0xFF, 0x6B,
 0x8E, 0x6A, 0xA0, 0xA4, 0x00, 0x68, 0x6C, 0xED,
 0xAC, 0xEA, 0x40, 0xC4, 0x71, 0x6A, 0xAD, 0xEA,
 0x6C, 0xEA, 0x40, 0xC4, 0x10, 0xF0, 0x24, 0x6A,
-0xF5, 0xF2, 0x88, 0x9A, 0x01, 0x6D, 0x40, 0xA4,
+0x35, 0xF2, 0x8C, 0x9A, 0x01, 0x6D, 0x40, 0xA4,
 0x6C, 0xEA, 0xAD, 0xEA, 0x6C, 0xEA, 0x40, 0xC4,
 0x19, 0x10, 0x64, 0x70, 0x0D, 0x61, 0x10, 0xF0,
-0x24, 0x6A, 0x15, 0xF2, 0x78, 0x9A, 0x10, 0xF0,
-0x24, 0x6C, 0x55, 0xF2, 0x84, 0x9C, 0x40, 0x9B,
+0x24, 0x6A, 0x55, 0xF1, 0x7C, 0x9A, 0x10, 0xF0,
+0x24, 0x6C, 0x95, 0xF1, 0x88, 0x9C, 0x40, 0x9B,
 0x8D, 0xEA, 0x40, 0xDB, 0x00, 0x6A, 0x1C, 0x10,
 0xFF, 0xF7, 0x1F, 0x6A, 0x01, 0x48, 0x4C, 0xE8,
 0x30, 0xF0, 0x20, 0x6A, 0xCE, 0xF4, 0x5C, 0x9A,
 0x0A, 0x6C, 0x40, 0xEA, 0x10, 0xF0, 0x24, 0x6A,
-0xF5, 0xF2, 0x48, 0x9A, 0x60, 0xA2, 0x01, 0x6A,
+0x35, 0xF2, 0x4C, 0x9A, 0x60, 0xA2, 0x01, 0x6A,
 0x6C, 0xEA, 0xDF, 0x2A, 0xFF, 0xF7, 0x1F, 0x6A,
 0x01, 0x49, 0x4C, 0xE9, 0x10, 0xF0, 0x24, 0x6A,
-0xD5, 0xF2, 0x58, 0x9A, 0x20, 0xCA, 0x01, 0x6A,
+0x15, 0xF2, 0x5C, 0x9A, 0x20, 0xCA, 0x01, 0x6A,
 0x07, 0x97, 0x06, 0x91, 0x05, 0x90, 0x04, 0x63,
 0x00, 0xEF, 0x00, 0x65, 0xF9, 0x63, 0x0D, 0x62,
 0x0C, 0xD1, 0x0B, 0xD0, 0x30, 0xF0, 0x20, 0x6B,
@@ -7879,17 +7858,17 @@ u8 array_mp_8821c_fw_ap[] = {
 0x08, 0x61, 0x0E, 0xF0, 0x40, 0x40, 0xFF, 0xF7,
 0x1F, 0x6B, 0x6C, 0xEA, 0x00, 0xF1, 0x00, 0x5A,
 0x39, 0x60, 0x08, 0x92, 0x04, 0x72, 0x11, 0x61,
-0x10, 0xF0, 0x24, 0x6A, 0xB5, 0xF1, 0x5C, 0x9A,
+0x10, 0xF0, 0x24, 0x6A, 0x15, 0xF1, 0x40, 0x9A,
 0xFF, 0x6B, 0x49, 0xE0, 0x40, 0xA2, 0x4C, 0xEB,
 0x5F, 0x21, 0x06, 0x94, 0x8F, 0xEA, 0x6C, 0xEA,
 0x04, 0x93, 0x8C, 0xEB, 0x6D, 0xEA, 0x04, 0xD2,
 0x57, 0x10, 0x08, 0x92, 0x05, 0x72, 0x12, 0x61,
-0x10, 0xF0, 0x24, 0x6A, 0xB5, 0xF1, 0x5C, 0x9A,
+0x10, 0xF0, 0x24, 0x6A, 0x15, 0xF1, 0x40, 0x9A,
 0xFF, 0xF7, 0x1F, 0x6B, 0x49, 0xE0, 0x40, 0xAA,
 0x4C, 0xEB, 0x7F, 0x21, 0x06, 0x94, 0x8F, 0xEA,
 0x6C, 0xEA, 0x04, 0x93, 0x8C, 0xEB, 0x6D, 0xEA,
 0x04, 0xD2, 0x77, 0x10, 0x10, 0xF0, 0x24, 0x6A,
-0xB5, 0xF1, 0x5C, 0x9A, 0x49, 0xE0, 0x60, 0x9A,
+0x15, 0xF1, 0x40, 0x9A, 0x49, 0xE0, 0x60, 0x9A,
 0x80, 0xF0, 0x1E, 0x21, 0x06, 0x94, 0x8F, 0xEA,
 0x6C, 0xEA, 0x04, 0x93, 0x8C, 0xEB, 0x6D, 0xEA,
 0x04, 0xD2, 0x96, 0x10, 0x01, 0xF0, 0x00, 0x58,
@@ -7898,44 +7877,44 @@ u8 array_mp_8821c_fw_ap[] = {
 0x80, 0xF0, 0x17, 0x60, 0x08, 0x92, 0x04, 0x72,
 0x31, 0x61, 0x1F, 0xF7, 0x00, 0x6A, 0x0C, 0xEA,
 0x02, 0xF0, 0x00, 0x72, 0x01, 0x60, 0x05, 0x2A,
-0x10, 0xF0, 0x24, 0x6A, 0xB5, 0xF1, 0x5C, 0x9A,
-0x04, 0x10, 0x10, 0xF0, 0x24, 0x6A, 0xD5, 0xF1,
-0x40, 0x9A, 0x49, 0xE0, 0x60, 0xA2, 0xFF, 0x6A,
+0x10, 0xF0, 0x24, 0x6A, 0x15, 0xF1, 0x40, 0x9A,
+0x04, 0x10, 0x10, 0xF0, 0x24, 0x6A, 0x15, 0xF1,
+0x44, 0x9A, 0x49, 0xE0, 0x60, 0xA2, 0xFF, 0x6A,
 0x6C, 0xEA, 0x07, 0x21, 0x06, 0x94, 0x8F, 0xEB,
 0x4C, 0xEB, 0x04, 0x92, 0x8C, 0xEA, 0x4D, 0xEB,
 0x04, 0xD3, 0x1F, 0xF7, 0x00, 0x6A, 0x0C, 0xEA,
 0x02, 0xF0, 0x00, 0x72, 0x01, 0x60, 0x05, 0x2A,
-0x10, 0xF0, 0x24, 0x6A, 0xB5, 0xF1, 0x5C, 0x9A,
-0x04, 0x10, 0x10, 0xF0, 0x24, 0x6A, 0xD5, 0xF1,
-0x40, 0x9A, 0x7D, 0x67, 0x41, 0xE0, 0x50, 0xA3,
+0x10, 0xF0, 0x24, 0x6A, 0x15, 0xF1, 0x40, 0x9A,
+0x04, 0x10, 0x10, 0xF0, 0x24, 0x6A, 0x15, 0xF1,
+0x44, 0x9A, 0x7D, 0x67, 0x41, 0xE0, 0x50, 0xA3,
 0x40, 0xC0, 0x7E, 0x10, 0x08, 0x92, 0x05, 0x72,
 0x32, 0x61, 0x1F, 0xF7, 0x00, 0x6A, 0x0C, 0xEA,
 0x02, 0xF0, 0x00, 0x72, 0x01, 0x60, 0x05, 0x2A,
-0x10, 0xF0, 0x24, 0x6A, 0xB5, 0xF1, 0x5C, 0x9A,
-0x04, 0x10, 0x10, 0xF0, 0x24, 0x6A, 0xD5, 0xF1,
-0x40, 0x9A, 0x49, 0xE0, 0x60, 0xAA, 0xFF, 0xF7,
+0x10, 0xF0, 0x24, 0x6A, 0x15, 0xF1, 0x40, 0x9A,
+0x04, 0x10, 0x10, 0xF0, 0x24, 0x6A, 0x15, 0xF1,
+0x44, 0x9A, 0x49, 0xE0, 0x60, 0xAA, 0xFF, 0xF7,
 0x1F, 0x6A, 0x6C, 0xEA, 0x07, 0x21, 0x06, 0x94,
 0x8F, 0xEB, 0x4C, 0xEB, 0x04, 0x92, 0x8C, 0xEA,
 0x4D, 0xEB, 0x04, 0xD3, 0x1F, 0xF7, 0x00, 0x6A,
 0x0C, 0xEA, 0x02, 0xF0, 0x00, 0x72, 0x01, 0x60,
-0x05, 0x2A, 0x10, 0xF0, 0x24, 0x6A, 0xB5, 0xF1,
-0x5C, 0x9A, 0x04, 0x10, 0x10, 0xF0, 0x24, 0x6A,
-0xD5, 0xF1, 0x40, 0x9A, 0x7D, 0x67, 0x41, 0xE0,
+0x05, 0x2A, 0x10, 0xF0, 0x24, 0x6A, 0x15, 0xF1,
+0x40, 0x9A, 0x04, 0x10, 0x10, 0xF0, 0x24, 0x6A,
+0x15, 0xF1, 0x44, 0x9A, 0x7D, 0x67, 0x41, 0xE0,
 0x48, 0xAB, 0x40, 0xC8, 0x49, 0x10, 0x1F, 0xF7,
 0x00, 0x6A, 0x0C, 0xEA, 0x02, 0xF0, 0x00, 0x72,
 0x01, 0x60, 0x05, 0x2A, 0x10, 0xF0, 0x24, 0x6A,
-0xB5, 0xF1, 0x5C, 0x9A, 0x04, 0x10, 0x10, 0xF0,
-0x24, 0x6A, 0xD5, 0xF1, 0x40, 0x9A, 0x49, 0xE0,
+0x15, 0xF1, 0x40, 0x9A, 0x04, 0x10, 0x10, 0xF0,
+0x24, 0x6A, 0x15, 0xF1, 0x44, 0x9A, 0x49, 0xE0,
 0x60, 0x9A, 0x07, 0x21, 0x06, 0x94, 0x8F, 0xEA,
 0x6C, 0xEA, 0x04, 0x93, 0x8C, 0xEB, 0x6D, 0xEA,
 0x04, 0xD2, 0x1F, 0xF7, 0x00, 0x6A, 0x0C, 0xEA,
 0x02, 0xF0, 0x00, 0x72, 0x01, 0x60, 0x05, 0x2A,
-0x10, 0xF0, 0x24, 0x6A, 0xB5, 0xF1, 0x5C, 0x9A,
-0x04, 0x10, 0x10, 0xF0, 0x24, 0x6A, 0xD5, 0xF1,
-0x40, 0x9A, 0x41, 0xE0, 0x04, 0x92, 0x40, 0xD8,
+0x10, 0xF0, 0x24, 0x6A, 0x15, 0xF1, 0x40, 0x9A,
+0x04, 0x10, 0x10, 0xF0, 0x24, 0x6A, 0x15, 0xF1,
+0x44, 0x9A, 0x41, 0xE0, 0x04, 0x92, 0x40, 0xD8,
 0x1B, 0x10, 0xFF, 0xF7, 0x1C, 0x6A, 0x0C, 0xEA,
 0x01, 0x6D, 0x82, 0x67, 0xAB, 0xED, 0x08, 0xD2,
-0x00, 0x18, 0x34, 0xE1, 0x05, 0xD2, 0x07, 0x21,
+0x00, 0x18, 0x05, 0xE1, 0x05, 0xD2, 0x07, 0x21,
 0x06, 0x94, 0x8F, 0xEB, 0x4C, 0xEB, 0x04, 0x92,
 0x8C, 0xEA, 0x4D, 0xEB, 0x04, 0xD3, 0x30, 0xF0,
 0x20, 0x6A, 0xCE, 0xF4, 0x50, 0x9A, 0x08, 0x94,
@@ -7947,19 +7926,19 @@ u8 array_mp_8821c_fw_ap[] = {
 0x07, 0xD2, 0x00, 0x6A, 0x59, 0x60, 0x7F, 0x6D,
 0x6C, 0xED, 0x4C, 0x45, 0xFF, 0x6B, 0x6C, 0xEA,
 0x0E, 0x5A, 0x08, 0x60, 0x10, 0xF0, 0x24, 0x6B,
-0x48, 0x32, 0xF5, 0xF0, 0x04, 0x4B, 0x4D, 0xE3,
+0x48, 0x32, 0x35, 0xF0, 0x08, 0x4B, 0x4D, 0xE3,
 0x40, 0x9B, 0x00, 0xEA, 0x03, 0x6A, 0x48, 0x10,
 0x61, 0xA4, 0x80, 0x6A, 0x4B, 0xEA, 0x6C, 0xEA,
 0xFF, 0x6E, 0x07, 0x03, 0x90, 0x67, 0x4C, 0xEE,
-0x06, 0x07, 0x04, 0xD3, 0x00, 0x18, 0xE3, 0xDD,
+0x06, 0x07, 0x04, 0xD3, 0x00, 0x18, 0xBB, 0xDD,
 0x1F, 0x10, 0x81, 0xA4, 0x80, 0x6A, 0xFF, 0x69,
 0x64, 0x67, 0x4C, 0xEB, 0x0C, 0xE9, 0x02, 0x32,
 0x01, 0x6E, 0x82, 0x67, 0xB1, 0x67, 0xCB, 0xEE,
-0x08, 0xD3, 0x09, 0xD2, 0x00, 0x18, 0x7F, 0xE1,
+0x08, 0xD3, 0x09, 0xD2, 0x00, 0x18, 0x50, 0xE1,
 0x08, 0x93, 0x07, 0x23, 0x07, 0x94, 0x8F, 0xEB,
 0x4C, 0xEB, 0x06, 0x92, 0x8C, 0xEA, 0x4D, 0xEB,
 0x06, 0xD3, 0x09, 0x94, 0x06, 0x97, 0x01, 0x6E,
-0xB1, 0x67, 0xCB, 0xEE, 0x00, 0x18, 0x92, 0xE1,
+0xB1, 0x67, 0xCB, 0xEE, 0x00, 0x18, 0x63, 0xE1,
 0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A,
 0x29, 0xF4, 0x7C, 0x9A, 0x06, 0x94, 0x61, 0xE0,
 0x49, 0xF4, 0x60, 0x9A, 0x29, 0xF4, 0x1C, 0xDA,
@@ -7969,34 +7948,34 @@ u8 array_mp_8821c_fw_ap[] = {
 0x58, 0x9A, 0x90, 0x67, 0x40, 0xEA, 0x01, 0x6A,
 0x0D, 0x97, 0x0C, 0x91, 0x0B, 0x90, 0x07, 0x63,
 0x00, 0xEF, 0x00, 0x65, 0x10, 0xF0, 0x24, 0x6A,
-0x75, 0xF6, 0x98, 0x9A, 0x30, 0xF0, 0x20, 0x6B,
+0xB5, 0xF5, 0x9C, 0x9A, 0x30, 0xF0, 0x20, 0x6B,
 0xC0, 0xF1, 0x08, 0x4B, 0xA0, 0x9C, 0x4C, 0x9B,
 0xAC, 0xEA, 0x4D, 0xDB, 0x40, 0xDC, 0x20, 0xE8,
 0xFD, 0x63, 0x05, 0xD1, 0x04, 0xD0, 0x10, 0xF0,
-0x24, 0x6A, 0x35, 0xF6, 0x34, 0x9A, 0x10, 0xF0,
-0x24, 0x6A, 0x95, 0xF6, 0x10, 0x4A, 0x40, 0x9A,
+0x24, 0x6A, 0x75, 0xF5, 0x38, 0x9A, 0x10, 0xF0,
+0x24, 0x6A, 0xD5, 0xF5, 0x14, 0x4A, 0x40, 0x9A,
 0x60, 0x99, 0x10, 0xF0, 0x24, 0x6C, 0xA0, 0x9A,
-0x10, 0xF0, 0x24, 0x6A, 0x95, 0xF6, 0x58, 0x9A,
-0xB5, 0xF6, 0x00, 0x4C, 0x80, 0x9C, 0x00, 0x9A,
+0x10, 0xF0, 0x24, 0x6A, 0xD5, 0xF5, 0x5C, 0x9A,
+0xF5, 0xF5, 0x04, 0x4C, 0x80, 0x9C, 0x00, 0x9A,
 0x1A, 0x65, 0x10, 0xF0, 0x24, 0x6A, 0x80, 0x9C,
-0xB5, 0xF6, 0x08, 0x4A, 0x40, 0x9A, 0x01, 0xD4,
+0xF5, 0xF5, 0x0C, 0x4A, 0x40, 0x9A, 0x01, 0xD4,
 0x30, 0xF0, 0x20, 0x6C, 0x40, 0x9A, 0xC0, 0xF1,
 0xE8, 0x9C, 0x00, 0xD2, 0x44, 0x67, 0xC0, 0xF1,
 0x08, 0x4A, 0xC1, 0x9A, 0x83, 0x9A, 0x6C, 0xEF,
 0xAC, 0xEE, 0x01, 0x93, 0xA2, 0x9A, 0xE5, 0xDA,
 0x6C, 0xEC, 0x0C, 0xED, 0x64, 0x9A, 0x00, 0x90,
 0x88, 0xDA, 0xC6, 0xDA, 0x0C, 0xEB, 0xA7, 0xDA,
-0x69, 0xDA, 0x10, 0xF0, 0x24, 0x6A, 0x95, 0xF6,
-0x10, 0x4A, 0x40, 0x9A, 0xE0, 0xD9, 0x18, 0x67,
-0xC0, 0xDA, 0x10, 0xF0, 0x24, 0x6A, 0xB5, 0xF6,
-0x00, 0x4A, 0x40, 0x9A, 0xA0, 0xD8, 0x80, 0xDA,
-0x10, 0xF0, 0x24, 0x6C, 0xB5, 0xF6, 0x08, 0x4C,
+0x69, 0xDA, 0x10, 0xF0, 0x24, 0x6A, 0xD5, 0xF5,
+0x14, 0x4A, 0x40, 0x9A, 0xE0, 0xD9, 0x18, 0x67,
+0xC0, 0xDA, 0x10, 0xF0, 0x24, 0x6A, 0xF5, 0xF5,
+0x04, 0x4A, 0x40, 0x9A, 0xA0, 0xD8, 0x80, 0xDA,
+0x10, 0xF0, 0x24, 0x6C, 0xF5, 0xF5, 0x0C, 0x4C,
 0x80, 0x9C, 0x60, 0xDC, 0x05, 0x91, 0x04, 0x90,
 0x03, 0x63, 0x20, 0xE8, 0xFF, 0x63, 0x01, 0xD1,
-0x00, 0xD0, 0x10, 0xF0, 0x24, 0x6A, 0x35, 0xF2,
-0x14, 0x9A, 0x10, 0xF0, 0x24, 0x6A, 0xB5, 0xF6,
-0xF4, 0x9A, 0x10, 0xF0, 0x24, 0x6A, 0xB5, 0xF6,
-0xDC, 0x9A, 0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1,
+0x00, 0xD0, 0x10, 0xF0, 0x24, 0x6A, 0x75, 0xF1,
+0x18, 0x9A, 0x10, 0xF0, 0x24, 0x6A, 0xF5, 0xF5,
+0xF8, 0x9A, 0x10, 0xF0, 0x24, 0x6A, 0x15, 0xF6,
+0xC0, 0x9A, 0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1,
 0x08, 0x4A, 0x80, 0x98, 0xAE, 0x9A, 0x60, 0x9F,
 0x20, 0x9E, 0x8C, 0xED, 0x8F, 0x9A, 0xB1, 0xDA,
 0x6C, 0xEC, 0x70, 0x9A, 0x92, 0xDA, 0x2C, 0xEB,
@@ -8011,7 +7990,7 @@ u8 array_mp_8821c_fw_ap[] = {
 0x71, 0xE4, 0xE9, 0xF0, 0xA5, 0xA4, 0xCC, 0xED,
 0x1D, 0x25, 0xE9, 0xF0, 0xA6, 0xA4, 0x29, 0xF1,
 0x60, 0x9B, 0xE9, 0xF0, 0x85, 0xA4, 0x75, 0xE5,
-0x10, 0xF0, 0x24, 0x6B, 0xF5, 0xF5, 0x74, 0x9B,
+0x10, 0xF0, 0x24, 0x6B, 0x35, 0xF5, 0x78, 0x9B,
 0xBC, 0x35, 0x21, 0x4D, 0x75, 0xE5, 0xE0, 0xA5,
 0x9E, 0x33, 0x9A, 0x34, 0xCC, 0xEC, 0x78, 0x33,
 0x9C, 0x34, 0x4C, 0xEF, 0x8D, 0xEB, 0xED, 0xEB,
@@ -8026,17 +8005,17 @@ u8 array_mp_8821c_fw_ap[] = {
 0x20, 0xE8, 0x00, 0x65, 0x20, 0xE8, 0x00, 0x65,
 0x20, 0xE8, 0x00, 0x65, 0x20, 0xE8, 0x00, 0x65,
 0x20, 0xE8, 0x00, 0x65, 0x20, 0xE8, 0x00, 0x65,
-0x10, 0xF0, 0x24, 0x6A, 0x15, 0xF2, 0x78, 0x9A,
-0x10, 0xF0, 0x24, 0x6C, 0x35, 0xF2, 0x9C, 0x9C,
+0x10, 0xF0, 0x24, 0x6A, 0x55, 0xF1, 0x7C, 0x9A,
+0x10, 0xF0, 0x24, 0x6C, 0x95, 0xF1, 0x80, 0x9C,
 0x40, 0x9B, 0x8D, 0xEA, 0x40, 0xDB, 0x20, 0xE8,
-0x10, 0xF0, 0x24, 0x6A, 0xD5, 0xF6, 0x58, 0x9A,
+0x10, 0xF0, 0x24, 0x6A, 0x15, 0xF6, 0x5C, 0x9A,
 0x60, 0xA2, 0x03, 0x6A, 0x6C, 0xEA, 0x03, 0x72,
-0x08, 0x61, 0x10, 0xF0, 0x24, 0x6A, 0xD5, 0xF6,
-0x7C, 0x9A, 0x7F, 0x6A, 0x80, 0xA3, 0x8C, 0xEA,
+0x08, 0x61, 0x10, 0xF0, 0x24, 0x6A, 0x35, 0xF6,
+0x60, 0x9A, 0x7F, 0x6A, 0x80, 0xA3, 0x8C, 0xEA,
 0x40, 0xC3, 0x20, 0xE8, 0x10, 0xF0, 0x24, 0x6A,
-0xD5, 0xF6, 0x58, 0x9A, 0x60, 0xA2, 0x03, 0x6A,
+0x15, 0xF6, 0x5C, 0x9A, 0x60, 0xA2, 0x03, 0x6A,
 0x6C, 0xEA, 0x03, 0x72, 0x08, 0x61, 0x10, 0xF0,
-0x24, 0x6A, 0xD5, 0xF6, 0x7C, 0x9A, 0x7F, 0x6A,
+0x24, 0x6A, 0x35, 0xF6, 0x60, 0x9A, 0x7F, 0x6A,
 0x80, 0xA3, 0x8C, 0xEA, 0x40, 0xC3, 0x20, 0xE8,
 0xFD, 0x63, 0x05, 0x62, 0x30, 0xF0, 0x20, 0x6B,
 0x30, 0xF0, 0x20, 0x6A, 0x2F, 0xF7, 0x94, 0xA3,
@@ -8044,9 +8023,9 @@ u8 array_mp_8821c_fw_ap[] = {
 0x6E, 0xEA, 0x1E, 0x2A, 0x30, 0xF0, 0x20, 0x6B,
 0xC0, 0xF1, 0x08, 0x4B, 0x68, 0xF3, 0xB4, 0xA3,
 0x7F, 0x6C, 0xAC, 0xEC, 0x15, 0x24, 0x10, 0xF0,
-0x24, 0x6C, 0x35, 0xF2, 0x90, 0x9C, 0x00, 0x6D,
-0x40, 0xC4, 0x10, 0xF0, 0x24, 0x6A, 0x35, 0xF2,
-0x54, 0x9A, 0x02, 0x6C, 0x80, 0xC2, 0x30, 0xF0,
+0x24, 0x6C, 0x75, 0xF1, 0x94, 0x9C, 0x00, 0x6D,
+0x40, 0xC4, 0x10, 0xF0, 0x24, 0x6A, 0x75, 0xF1,
+0x58, 0x9A, 0x02, 0x6C, 0x80, 0xC2, 0x30, 0xF0,
 0x20, 0x6A, 0xAE, 0xF2, 0x50, 0x9A, 0xE8, 0xF3,
 0xC5, 0xA3, 0xFF, 0x6C, 0x55, 0x4C, 0x40, 0xEA,
 0x05, 0x97, 0x03, 0x63, 0x00, 0xEF, 0x00, 0x65,
@@ -8076,9 +8055,9 @@ u8 array_mp_8821c_fw_ap[] = {
 0x01, 0x6B, 0x6E, 0xEA, 0x29, 0x2A, 0x30, 0xF0,
 0x20, 0x6B, 0xC0, 0xF1, 0x08, 0x4B, 0x68, 0xF3,
 0xB4, 0xA3, 0x7F, 0x6C, 0xAC, 0xEC, 0x0C, 0xEC,
-0x1F, 0x24, 0x10, 0xF0, 0x24, 0x6C, 0x35, 0xF2,
-0x90, 0x9C, 0x40, 0xC4, 0x10, 0xF0, 0x24, 0x6A,
-0x35, 0xF2, 0x54, 0x9A, 0x02, 0x6C, 0x80, 0xC2,
+0x1F, 0x24, 0x10, 0xF0, 0x24, 0x6C, 0x75, 0xF1,
+0x94, 0x9C, 0x40, 0xC4, 0x10, 0xF0, 0x24, 0x6A,
+0x75, 0xF1, 0x58, 0x9A, 0x02, 0x6C, 0x80, 0xC2,
 0x68, 0xF3, 0x99, 0xA3, 0x03, 0x6A, 0x4B, 0xEA,
 0x4C, 0xEC, 0x68, 0xF3, 0x99, 0xC3, 0x68, 0xF3,
 0x9D, 0xA3, 0x8C, 0xEA, 0x68, 0xF3, 0x5D, 0xC3,
@@ -8104,7 +8083,7 @@ u8 array_mp_8821c_fw_ap[] = {
 0x44, 0xA2, 0x02, 0x72, 0x03, 0x60, 0x90, 0x67,
 0x00, 0x18, 0xE0, 0xCD, 0x05, 0x97, 0x04, 0x90,
 0x03, 0x63, 0x00, 0xEF, 0xFD, 0x63, 0x05, 0x62,
-0x00, 0x18, 0x25, 0xD7, 0x05, 0x97, 0x03, 0x63,
+0x00, 0x18, 0xFD, 0xD6, 0x05, 0x97, 0x03, 0x63,
 0x00, 0xEF, 0x00, 0x65, 0xF9, 0x63, 0x0D, 0x62,
 0x0C, 0xD1, 0x0B, 0xD0, 0x30, 0xF0, 0x20, 0x6B,
 0x04, 0x67, 0xE9, 0xF2, 0x8C, 0xA3, 0x01, 0x6B,
@@ -8112,11 +8091,11 @@ u8 array_mp_8821c_fw_ap[] = {
 0x80, 0xF0, 0x11, 0x23, 0x01, 0x70, 0x0D, 0x60,
 0x07, 0x20, 0x02, 0x70, 0x0F, 0x60, 0x00, 0x6A,
 0x03, 0x70, 0x06, 0xD2, 0x16, 0x61, 0x0F, 0x10,
-0x10, 0xF0, 0x24, 0x6A, 0xF5, 0xF6, 0x40, 0x9A,
-0x0E, 0x10, 0x10, 0xF0, 0x24, 0x6A, 0xF5, 0xF6,
-0x44, 0x9A, 0x09, 0x10, 0x10, 0xF0, 0x24, 0x6A,
-0xF5, 0xF6, 0x48, 0x9A, 0x04, 0x10, 0x10, 0xF0,
-0x24, 0x6A, 0xF5, 0xF6, 0x4C, 0x9A, 0x40, 0x9A,
+0x10, 0xF0, 0x24, 0x6A, 0x35, 0xF6, 0x44, 0x9A,
+0x0E, 0x10, 0x10, 0xF0, 0x24, 0x6A, 0x35, 0xF6,
+0x48, 0x9A, 0x09, 0x10, 0x10, 0xF0, 0x24, 0x6A,
+0x35, 0xF6, 0x4C, 0x9A, 0x04, 0x10, 0x10, 0xF0,
+0x24, 0x6A, 0x35, 0xF6, 0x50, 0x9A, 0x40, 0x9A,
 0x06, 0xD2, 0x30, 0xF0, 0x20, 0x6A, 0x1C, 0x33,
 0xC0, 0xF1, 0x08, 0x4A, 0x69, 0xE2, 0x49, 0xF1,
 0x08, 0x4A, 0x00, 0x6B, 0x05, 0xD2, 0x09, 0xD2,
@@ -8133,7 +8112,7 @@ u8 array_mp_8821c_fw_ap[] = {
 0x07, 0x94, 0x8D, 0xEA, 0x42, 0xDB, 0x29, 0xF1,
 0x64, 0xA1, 0x02, 0x6A, 0x6C, 0xEA, 0xFF, 0x6B,
 0x6C, 0xEA, 0x20, 0x2A, 0x10, 0xF0, 0x24, 0x6A,
-0xB5, 0xF5, 0x40, 0x9A, 0x05, 0x94, 0x40, 0x9A,
+0xF5, 0xF4, 0x44, 0x9A, 0x05, 0x94, 0x40, 0x9A,
 0x18, 0x10, 0x29, 0xF1, 0x44, 0xA1, 0x02, 0x6B,
 0xFF, 0x6C, 0x4C, 0xEB, 0x8C, 0xEB, 0x08, 0xD3,
 0x11, 0x2B, 0x04, 0x95, 0x90, 0x67, 0x00, 0x6E,
@@ -8153,7 +8132,7 @@ u8 array_mp_8821c_fw_ap[] = {
 0x6C, 0xEA, 0x2C, 0xEC, 0x2C, 0xEA, 0x04, 0xD4,
 0x20, 0x22, 0x03, 0x6A, 0x4B, 0xEA, 0x6C, 0xEA,
 0x01, 0x6D, 0x68, 0xF3, 0x5A, 0xC0, 0x00, 0x18,
-0x6D, 0xDD, 0x68, 0xF3, 0x9A, 0xA0, 0x01, 0x6B,
+0x45, 0xDD, 0x68, 0xF3, 0x9A, 0xA0, 0x01, 0x6B,
 0x4C, 0xEB, 0x09, 0x6A, 0x4B, 0xEA, 0x8C, 0xEA,
 0x68, 0xF3, 0x94, 0xA0, 0x6C, 0x33, 0x6D, 0xEA,
 0x7F, 0x6B, 0x8C, 0xEB, 0x2C, 0xEB, 0x68, 0xF3,
@@ -8166,267 +8145,263 @@ u8 array_mp_8821c_fw_ap[] = {
 0x01, 0x6A, 0xFF, 0x69, 0x6C, 0xEA, 0x2C, 0xEC,
 0x2C, 0xEA, 0x04, 0xD4, 0x19, 0x22, 0x02, 0x6A,
 0x4B, 0xEA, 0x6C, 0xEA, 0x00, 0x6D, 0x68, 0xF3,
-0x5A, 0xC0, 0x00, 0x18, 0x6D, 0xDD, 0x68, 0xF3,
+0x5A, 0xC0, 0x00, 0x18, 0x45, 0xDD, 0x68, 0xF3,
 0x9A, 0xA0, 0x01, 0x6B, 0x6C, 0xEA, 0xFA, 0x4B,
 0x48, 0x32, 0x8C, 0xEB, 0x4D, 0xEB, 0x04, 0x6A,
 0x6C, 0xEA, 0x2C, 0xEA, 0x68, 0xF3, 0x7A, 0xC0,
 0x03, 0x22, 0x04, 0x94, 0x00, 0x18, 0x1D, 0xCA,
 0x09, 0x97, 0x08, 0x91, 0x07, 0x90, 0x05, 0x63,
 0x00, 0xEF, 0x00, 0x65, 0xFD, 0x63, 0x05, 0x62,
-0x04, 0xD0, 0x00, 0x18, 0xE7, 0xE1, 0x02, 0x67,
-0x01, 0x6A, 0x0C, 0xEA, 0x11, 0x22, 0x00, 0x6C,
-0x01, 0x6D, 0x00, 0x18, 0x73, 0xC9, 0x10, 0xF0,
-0x24, 0x6A, 0xF5, 0xF6, 0x50, 0x9A, 0xFF, 0x6C,
-0x01, 0x4C, 0x60, 0x9A, 0x8C, 0xEB, 0x08, 0x23,
-0x60, 0x9A, 0x8D, 0xEB, 0x60, 0xDA, 0x04, 0x10,
-0x00, 0x6C, 0xA4, 0x67, 0x00, 0x18, 0x73, 0xC9,
-0x40, 0x6A, 0x0C, 0xEA, 0x0F, 0x22, 0x10, 0xF0,
-0x24, 0x6A, 0xF5, 0xF6, 0x54, 0x9A, 0x60, 0xA2,
-0x00, 0xF6, 0x60, 0x33, 0x00, 0xF6, 0x63, 0x33,
-0x00, 0x53, 0x00, 0x6B, 0x02, 0x61, 0x80, 0x6B,
-0x6B, 0xEB, 0x60, 0xC2, 0x30, 0xF0, 0x20, 0x6A,
-0xC0, 0xF1, 0x08, 0x4A, 0x88, 0xF3, 0x90, 0xA2,
-0x88, 0xF3, 0xB1, 0xA2, 0x88, 0xF3, 0xD7, 0xA2,
-0x02, 0x6F, 0x00, 0x18, 0x69, 0xCA, 0x05, 0x97,
-0x04, 0x90, 0x03, 0x63, 0x00, 0xEF, 0x00, 0x65,
-0xFD, 0x63, 0x05, 0x62, 0x10, 0xF0, 0x24, 0x6A,
-0x35, 0xF3, 0x4C, 0x9A, 0x66, 0x6B, 0x00, 0x6C,
-0x60, 0xC2, 0x80, 0x18, 0x55, 0x07, 0x05, 0x97,
-0x03, 0x63, 0x00, 0xEF, 0xFD, 0x63, 0x05, 0x62,
-0x00, 0x18, 0x4C, 0xC1, 0x05, 0x97, 0x03, 0x63,
-0x00, 0xEF, 0x00, 0x65, 0xFD, 0x63, 0x05, 0x62,
-0x30, 0xF0, 0x20, 0x6A, 0x29, 0xF5, 0x70, 0xA2,
-0x02, 0x6A, 0x6C, 0xEA, 0x03, 0x22, 0x01, 0x6C,
-0x00, 0x18, 0x2F, 0xE4, 0x05, 0x97, 0x03, 0x63,
-0x00, 0xEF, 0x00, 0x65, 0xFD, 0x63, 0x05, 0x62,
-0x00, 0x18, 0x4D, 0xD4, 0x05, 0x97, 0x03, 0x63,
-0x00, 0xEF, 0x00, 0x65, 0xFC, 0x63, 0x07, 0x62,
-0x06, 0xD1, 0x05, 0xD0, 0x30, 0xF0, 0x20, 0x68,
-0xC0, 0xF1, 0x08, 0x48, 0x68, 0xF3, 0x74, 0xA0,
-0x7F, 0x6A, 0xFF, 0x69, 0x6C, 0xEA, 0x1E, 0x22,
-0x68, 0xF3, 0x97, 0xA0, 0x96, 0x34, 0x2C, 0xEC,
-0x00, 0x18, 0x7B, 0xE2, 0x02, 0x6B, 0x4C, 0xEB,
-0x2C, 0xEB, 0x07, 0x23, 0x68, 0xF3, 0x97, 0xA0,
-0x96, 0x34, 0x2C, 0xEC, 0x00, 0x18, 0xED, 0xCC,
-0x0D, 0x10, 0x68, 0xF3, 0x97, 0xA0, 0x68, 0xF3,
-0x79, 0xA0, 0x05, 0x6A, 0x4B, 0xEA, 0x96, 0x34,
-0x6C, 0xEA, 0x2C, 0xEC, 0x68, 0xF3, 0x59, 0xC0,
-0x00, 0x18, 0x1D, 0xCA, 0x00, 0x18, 0xFC, 0xDB,
-0x07, 0x97, 0x06, 0x91, 0x05, 0x90, 0x04, 0x63,
-0x00, 0xEF, 0x00, 0x65, 0xFD, 0x63, 0x05, 0x62,
+0x04, 0xD0, 0x00, 0x18, 0xB8, 0xE1, 0x02, 0x67,
+0x01, 0x6A, 0x0C, 0xEA, 0x03, 0x22, 0x00, 0x6C,
+0x01, 0x6D, 0x02, 0x10, 0x00, 0x6C, 0xA4, 0x67,
+0x00, 0x18, 0x73, 0xC9, 0x40, 0x6A, 0x0C, 0xEA,
+0x0F, 0x22, 0x10, 0xF0, 0x24, 0x6A, 0x35, 0xF6,
+0x54, 0x9A, 0x60, 0xA2, 0x00, 0xF6, 0x60, 0x33,
+0x00, 0xF6, 0x63, 0x33, 0x00, 0x53, 0x00, 0x6B,
+0x02, 0x61, 0x80, 0x6B, 0x6B, 0xEB, 0x60, 0xC2,
 0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A,
-0x68, 0xF3, 0x94, 0xA2, 0x7F, 0x6B, 0x8C, 0xEB,
-0x07, 0x23, 0x68, 0xF3, 0x97, 0xA2, 0xFF, 0x6A,
-0x96, 0x34, 0x4C, 0xEC, 0x00, 0x18, 0x45, 0xCD,
-0x00, 0x18, 0x68, 0xCB, 0x05, 0x97, 0x03, 0x63,
+0x88, 0xF3, 0x90, 0xA2, 0x88, 0xF3, 0xB1, 0xA2,
+0x88, 0xF3, 0xD7, 0xA2, 0x02, 0x6F, 0x00, 0x18,
+0x69, 0xCA, 0x05, 0x97, 0x04, 0x90, 0x03, 0x63,
 0x00, 0xEF, 0x00, 0x65, 0xFD, 0x63, 0x05, 0x62,
-0x30, 0xF0, 0x20, 0x6A, 0xEF, 0xF6, 0x7C, 0xA2,
-0x01, 0x6A, 0x6C, 0xEA, 0x02, 0x22, 0x00, 0x18,
-0x37, 0xC4, 0x00, 0x18, 0x35, 0xCB, 0x05, 0x97,
-0x03, 0x63, 0x00, 0xEF, 0xFD, 0x63, 0x05, 0x62,
-0x04, 0xD0, 0xFF, 0x68, 0x0C, 0xEC, 0x00, 0x18,
-0x4F, 0xCA, 0x00, 0x6C, 0x00, 0x18, 0xBA, 0xCA,
-0x30, 0xF0, 0x20, 0x6A, 0xEF, 0xF6, 0x7C, 0xA2,
-0x01, 0x6A, 0x6C, 0xEA, 0x0C, 0xEA, 0x02, 0x22,
-0x00, 0x18, 0x37, 0xC4, 0x00, 0x18, 0x35, 0xCB,
-0x05, 0x97, 0x04, 0x90, 0x03, 0x63, 0x00, 0xEF,
-0xFD, 0x63, 0x05, 0x62, 0x00, 0x18, 0x91, 0xD1,
-0x05, 0x97, 0x03, 0x63, 0x00, 0xEF, 0x00, 0x65,
-0xFD, 0x63, 0x05, 0x62, 0x00, 0x18, 0x8E, 0xD1,
+0x10, 0xF0, 0x24, 0x6A, 0x75, 0xF2, 0x50, 0x9A,
+0x66, 0x6B, 0x00, 0x6C, 0x60, 0xC2, 0x80, 0x18,
+0x55, 0x07, 0x05, 0x97, 0x03, 0x63, 0x00, 0xEF,
+0xFD, 0x63, 0x05, 0x62, 0x00, 0x18, 0x4C, 0xC1,
 0x05, 0x97, 0x03, 0x63, 0x00, 0xEF, 0x00, 0x65,
-0xFD, 0x63, 0x05, 0x62, 0x00, 0x18, 0x3E, 0xD8,
+0xFD, 0x63, 0x05, 0x62, 0x30, 0xF0, 0x20, 0x6A,
+0x29, 0xF5, 0x70, 0xA2, 0x02, 0x6A, 0x6C, 0xEA,
+0x03, 0x22, 0x01, 0x6C, 0x00, 0x18, 0x00, 0xE4,
 0x05, 0x97, 0x03, 0x63, 0x00, 0xEF, 0x00, 0x65,
-0xFD, 0x63, 0x05, 0x62, 0x00, 0x18, 0xBA, 0xD7,
+0xFD, 0x63, 0x05, 0x62, 0x00, 0x18, 0x4D, 0xD4,
 0x05, 0x97, 0x03, 0x63, 0x00, 0xEF, 0x00, 0x65,
-0xFD, 0x63, 0x05, 0x62, 0x00, 0x18, 0xB2, 0xE7,
+0xFC, 0x63, 0x07, 0x62, 0x06, 0xD1, 0x05, 0xD0,
+0x30, 0xF0, 0x20, 0x68, 0xC0, 0xF1, 0x08, 0x48,
+0x68, 0xF3, 0x74, 0xA0, 0x7F, 0x6A, 0xFF, 0x69,
+0x6C, 0xEA, 0x1E, 0x22, 0x68, 0xF3, 0x97, 0xA0,
+0x96, 0x34, 0x2C, 0xEC, 0x00, 0x18, 0x4C, 0xE2,
+0x02, 0x6B, 0x4C, 0xEB, 0x2C, 0xEB, 0x07, 0x23,
+0x68, 0xF3, 0x97, 0xA0, 0x96, 0x34, 0x2C, 0xEC,
+0x00, 0x18, 0xED, 0xCC, 0x0D, 0x10, 0x68, 0xF3,
+0x97, 0xA0, 0x68, 0xF3, 0x79, 0xA0, 0x05, 0x6A,
+0x4B, 0xEA, 0x96, 0x34, 0x6C, 0xEA, 0x2C, 0xEC,
+0x68, 0xF3, 0x59, 0xC0, 0x00, 0x18, 0x1D, 0xCA,
+0x00, 0x18, 0xD4, 0xDB, 0x07, 0x97, 0x06, 0x91,
+0x05, 0x90, 0x04, 0x63, 0x00, 0xEF, 0x00, 0x65,
+0xFD, 0x63, 0x05, 0x62, 0x30, 0xF0, 0x20, 0x6A,
+0xC0, 0xF1, 0x08, 0x4A, 0x68, 0xF3, 0x94, 0xA2,
+0x7F, 0x6B, 0x8C, 0xEB, 0x07, 0x23, 0x68, 0xF3,
+0x97, 0xA2, 0xFF, 0x6A, 0x96, 0x34, 0x4C, 0xEC,
+0x00, 0x18, 0x45, 0xCD, 0x00, 0x18, 0x68, 0xCB,
 0x05, 0x97, 0x03, 0x63, 0x00, 0xEF, 0x00, 0x65,
-0xFD, 0x63, 0x05, 0x62, 0x10, 0xF0, 0x24, 0x6A,
-0xD5, 0xF6, 0x58, 0x9A, 0xFF, 0x6C, 0x60, 0xA2,
-0x03, 0x6A, 0x6C, 0xEA, 0x03, 0x72, 0x11, 0x61,
-0x30, 0xF0, 0x20, 0x6A, 0xA9, 0xF2, 0x4C, 0xA2,
-0x01, 0x72, 0x0B, 0x61, 0x10, 0xF0, 0x24, 0x6A,
-0xD5, 0xF6, 0x7C, 0x9A, 0x80, 0x6D, 0xAB, 0xED,
-0x40, 0xA3, 0x8C, 0xEA, 0xAD, 0xEA, 0x8C, 0xEA,
-0x40, 0xC3, 0x00, 0x18, 0x18, 0xCB, 0x05, 0x97,
+0xFD, 0x63, 0x05, 0x62, 0x30, 0xF0, 0x20, 0x6A,
+0xEF, 0xF6, 0x7C, 0xA2, 0x01, 0x6A, 0x6C, 0xEA,
+0x02, 0x22, 0x00, 0x18, 0x37, 0xC4, 0x00, 0x18,
+0x35, 0xCB, 0x05, 0x97, 0x03, 0x63, 0x00, 0xEF,
+0xFD, 0x63, 0x05, 0x62, 0x04, 0xD0, 0xFF, 0x68,
+0x0C, 0xEC, 0x00, 0x18, 0x4F, 0xCA, 0x00, 0x6C,
+0x00, 0x18, 0xBA, 0xCA, 0x30, 0xF0, 0x20, 0x6A,
+0xEF, 0xF6, 0x7C, 0xA2, 0x01, 0x6A, 0x6C, 0xEA,
+0x0C, 0xEA, 0x02, 0x22, 0x00, 0x18, 0x37, 0xC4,
+0x00, 0x18, 0x35, 0xCB, 0x05, 0x97, 0x04, 0x90,
 0x03, 0x63, 0x00, 0xEF, 0xFD, 0x63, 0x05, 0x62,
-0xFF, 0x6A, 0x4C, 0xEC, 0x00, 0x18, 0xD2, 0xE0,
-0x05, 0x97, 0x03, 0x63, 0x00, 0xEF, 0x00, 0x65,
-0xFD, 0x63, 0x05, 0x62, 0x04, 0xD0, 0x30, 0xF0,
-0x20, 0x6B, 0xC0, 0xF1, 0x08, 0x4B, 0x68, 0xF3,
-0xB4, 0xA3, 0x04, 0x67, 0x7F, 0x6C, 0xFF, 0x6A,
-0xAC, 0xEC, 0x4C, 0xEC, 0x4C, 0xE8, 0x0F, 0x24,
-0x68, 0xF3, 0xB9, 0xA3, 0x40, 0x6C, 0xAC, 0xEC,
-0x4C, 0xEC, 0x09, 0x24, 0x68, 0xF3, 0x9A, 0xA3,
-0x10, 0x6B, 0x8C, 0xEB, 0x4C, 0xEB, 0x03, 0x23,
-0x90, 0x67, 0x00, 0x18, 0x76, 0xE6, 0x10, 0xF0,
-0x24, 0x6A, 0xD5, 0xF6, 0x58, 0x9A, 0xFF, 0x6C,
-0x60, 0xA2, 0x03, 0x6A, 0x6C, 0xEA, 0x03, 0x72,
-0x11, 0x61, 0x30, 0xF0, 0x20, 0x6A, 0xA9, 0xF2,
-0x4C, 0xA2, 0x01, 0x72, 0x0B, 0x61, 0x10, 0xF0,
-0x24, 0x6A, 0xD5, 0xF6, 0x7C, 0x9A, 0x80, 0x6D,
-0xAB, 0xED, 0x40, 0xA3, 0x8C, 0xEA, 0xAD, 0xEA,
-0x8C, 0xEA, 0x40, 0xC3, 0x30, 0xF0, 0x20, 0x6A,
-0xC0, 0xF1, 0x08, 0x4A, 0x69, 0xF3, 0x69, 0xA2,
-0x0E, 0xEB, 0x11, 0x2B, 0x69, 0xF3, 0x68, 0xA2,
-0x1F, 0x6C, 0x6A, 0x32, 0x8C, 0xEA, 0x47, 0xE8,
-0x01, 0x6C, 0x8C, 0xEA, 0x08, 0x22, 0x02, 0x6A,
-0x6C, 0xEA, 0xFF, 0x6B, 0x6C, 0xEA, 0x03, 0x22,
-0x00, 0x6C, 0x00, 0x18, 0x2F, 0xE4, 0x00, 0x18,
-0x18, 0xCB, 0x05, 0x97, 0x04, 0x90, 0x03, 0x63,
+0x00, 0x18, 0x91, 0xD1, 0x05, 0x97, 0x03, 0x63,
 0x00, 0xEF, 0x00, 0x65, 0xFD, 0x63, 0x05, 0x62,
-0xFF, 0x6A, 0x4C, 0xEC, 0x00, 0x18, 0xE8, 0xE0,
-0x05, 0x97, 0x03, 0x63, 0x00, 0xEF, 0x00, 0x65,
-0xFF, 0x63, 0x01, 0xD0, 0x10, 0xF0, 0x24, 0x6B,
-0xF5, 0xF5, 0x74, 0x9B, 0xFF, 0x6A, 0x4C, 0xEE,
-0x6D, 0xE4, 0x08, 0x68, 0x80, 0xA3, 0xDB, 0xE0,
-0x02, 0x67, 0x4C, 0xED, 0x07, 0xEE, 0xD0, 0x67,
-0x4C, 0xEF, 0x04, 0xED, 0x4C, 0xEC, 0xCC, 0xEF,
-0x0F, 0xE8, 0x8C, 0xE8, 0xE4, 0xED, 0xED, 0xE8,
-0x4C, 0xE8, 0x00, 0xC3, 0x01, 0x90, 0x01, 0x63,
-0x20, 0xE8, 0x00, 0x65, 0x10, 0xF0, 0x24, 0x6A,
-0xF5, 0xF5, 0x54, 0x9A, 0xFF, 0xF7, 0x1F, 0x6B,
-0x8C, 0xEB, 0x4D, 0xE3, 0x40, 0xA3, 0xFF, 0x6C,
-0x8C, 0xEE, 0x08, 0x6B, 0xDB, 0xE3, 0x8C, 0xED,
-0x8C, 0xEA, 0x64, 0x67, 0x47, 0xED, 0x67, 0xEE,
-0x6C, 0xEA, 0x8C, 0xEA, 0x20, 0xE8, 0x00, 0x65,
-0xFC, 0x63, 0x07, 0x62, 0x06, 0xD1, 0x05, 0xD0,
-0x10, 0xF0, 0x24, 0x6B, 0xD5, 0xF1, 0x60, 0x9B,
-0xFF, 0xF7, 0x1F, 0x6A, 0x8C, 0xEA, 0x69, 0xE2,
-0x00, 0x9A, 0x41, 0x45, 0x25, 0x67, 0x08, 0x22,
-0x30, 0xF0, 0x20, 0x6A, 0xAE, 0xF4, 0x50, 0x9A,
-0x85, 0x67, 0x2C, 0xE8, 0x40, 0xEA, 0x06, 0xEA,
-0x50, 0x67, 0x07, 0x97, 0x06, 0x91, 0x05, 0x90,
-0x04, 0x63, 0x00, 0xEF, 0xFB, 0x63, 0x09, 0x62,
-0x08, 0xD1, 0x07, 0xD0, 0xFF, 0xF7, 0x1F, 0x68,
-0x41, 0x45, 0x25, 0x67, 0x0C, 0xD6, 0x8C, 0xE8,
-0x07, 0x2A, 0x10, 0xF0, 0x24, 0x6A, 0xD5, 0xF1,
-0x40, 0x9A, 0x41, 0xE0, 0xC0, 0xD8, 0x1A, 0x10,
-0x01, 0x6D, 0x90, 0x67, 0xAB, 0xED, 0x00, 0x18,
-0x34, 0xE1, 0x04, 0xD2, 0x30, 0xF0, 0x20, 0x6A,
-0xAE, 0xF4, 0x50, 0x9A, 0x91, 0x67, 0x40, 0xEA,
-0x0C, 0x93, 0x64, 0xEA, 0x43, 0x67, 0x04, 0x93,
-0x2C, 0xEA, 0x2F, 0xE9, 0x6C, 0xE9, 0x10, 0xF0,
-0x24, 0x6B, 0xD5, 0xF1, 0x60, 0x9B, 0x2D, 0xEA,
-0x61, 0xE0, 0x40, 0xD8, 0x09, 0x97, 0x08, 0x91,
-0x07, 0x90, 0x05, 0x63, 0x00, 0xEF, 0x00, 0x65,
-0x01, 0x74, 0x0D, 0x60, 0x06, 0x24, 0x02, 0x74,
-0x10, 0x60, 0x03, 0x74, 0x00, 0x6A, 0x1C, 0x61,
-0x14, 0x10, 0x10, 0xF0, 0x24, 0x6A, 0xA8, 0x35,
-0xF5, 0xF6, 0x58, 0x9A, 0x0B, 0x10, 0x10, 0xF0,
-0x24, 0x6A, 0xA8, 0x35, 0xF5, 0xF6, 0x5C, 0x9A,
-0x05, 0x10, 0x10, 0xF0, 0x24, 0x6A, 0x15, 0xF7,
-0x40, 0x9A, 0xA8, 0x35, 0x55, 0xE5, 0x40, 0x9D,
-0x20, 0xE8, 0x10, 0xF0, 0x24, 0x6A, 0x15, 0xF7,
-0x44, 0x9A, 0xA8, 0x35, 0x55, 0xE5, 0x40, 0x9D,
-0x20, 0xE8, 0x00, 0x65, 0xFD, 0x63, 0x05, 0x62,
-0x30, 0xF0, 0x20, 0x6A, 0x08, 0xF3, 0x00, 0x4A,
-0x88, 0x34, 0x91, 0xE2, 0x10, 0xF0, 0x24, 0x6A,
-0xF5, 0xF3, 0x78, 0x9A, 0x30, 0xF0, 0x20, 0x6A,
-0x00, 0xF5, 0xA0, 0x35, 0xCC, 0xEB, 0x10, 0xF0,
-0x24, 0x6E, 0x55, 0xF5, 0xD4, 0x9E, 0xCE, 0xF4,
-0x50, 0x9A, 0x80, 0xAC, 0xAD, 0xEB, 0x01, 0x6D,
-0xAB, 0xED, 0x6C, 0xEE, 0x40, 0xEA, 0x05, 0x97,
-0x03, 0x63, 0x00, 0xEF, 0xFC, 0x63, 0x07, 0x62,
-0x06, 0xD1, 0x05, 0xD0, 0xFF, 0x6B, 0x8C, 0xEB,
-0xFF, 0xF7, 0x1F, 0x6A, 0x81, 0x46, 0x06, 0x67,
-0xAC, 0xEA, 0x06, 0x2C, 0x83, 0x67, 0xA2, 0x67,
-0x00, 0x18, 0x5C, 0xE1, 0x02, 0x67, 0x0D, 0x10,
-0x83, 0x67, 0xA2, 0x67, 0x00, 0x18, 0x5C, 0xE1,
-0x22, 0x67, 0x30, 0xF0, 0x20, 0x6A, 0xAE, 0xF4,
-0x50, 0x9A, 0x90, 0x67, 0x2C, 0xE8, 0x40, 0xEA,
-0x06, 0xEA, 0x50, 0x67, 0x07, 0x97, 0x06, 0x91,
-0x05, 0x90, 0x04, 0x63, 0x00, 0xEF, 0x00, 0x65,
-0xFB, 0x63, 0x09, 0x62, 0x08, 0xD1, 0x07, 0xD0,
-0x46, 0x67, 0xFF, 0x68, 0xFF, 0xF7, 0x1F, 0x69,
-0x01, 0x4A, 0x0C, 0xD6, 0x0D, 0xD7, 0x8C, 0xE8,
-0xAC, 0xE9, 0x04, 0x2A, 0x90, 0x67, 0xB1, 0x67,
-0xC7, 0x67, 0x15, 0x10, 0xB1, 0x67, 0x90, 0x67,
-0x00, 0x18, 0x5C, 0xE1, 0x04, 0xD2, 0x30, 0xF0,
-0x20, 0x6A, 0x0C, 0x94, 0xAE, 0xF4, 0x50, 0x9A,
-0x40, 0xEA, 0x0D, 0x96, 0x90, 0x67, 0xB1, 0x67,
-0xC4, 0xEA, 0x0C, 0x92, 0x4C, 0xEE, 0x4F, 0xEB,
-0x04, 0x92, 0x4C, 0xEB, 0x6D, 0xEE, 0x00, 0x18,
-0x6F, 0xE1, 0x30, 0xF0, 0x20, 0x6A, 0xCE, 0xF4,
-0x5C, 0x9A, 0x0A, 0x6C, 0x40, 0xEA, 0x09, 0x97,
-0x08, 0x91, 0x07, 0x90, 0x05, 0x63, 0x00, 0xEF,
+0x00, 0x18, 0x8E, 0xD1, 0x05, 0x97, 0x03, 0x63,
+0x00, 0xEF, 0x00, 0x65, 0xFD, 0x63, 0x05, 0x62,
+0x00, 0x18, 0x16, 0xD8, 0x05, 0x97, 0x03, 0x63,
+0x00, 0xEF, 0x00, 0x65, 0xFD, 0x63, 0x05, 0x62,
+0x00, 0x18, 0x92, 0xD7, 0x05, 0x97, 0x03, 0x63,
+0x00, 0xEF, 0x00, 0x65, 0xFD, 0x63, 0x05, 0x62,
+0x00, 0x18, 0x83, 0xE7, 0x05, 0x97, 0x03, 0x63,
+0x00, 0xEF, 0x00, 0x65, 0xFD, 0x63, 0x05, 0x62,
+0x10, 0xF0, 0x24, 0x6A, 0x15, 0xF6, 0x5C, 0x9A,
+0xFF, 0x6C, 0x60, 0xA2, 0x03, 0x6A, 0x6C, 0xEA,
+0x03, 0x72, 0x11, 0x61, 0x30, 0xF0, 0x20, 0x6A,
+0xA9, 0xF2, 0x4C, 0xA2, 0x01, 0x72, 0x0B, 0x61,
+0x10, 0xF0, 0x24, 0x6A, 0x35, 0xF6, 0x60, 0x9A,
+0x80, 0x6D, 0xAB, 0xED, 0x40, 0xA3, 0x8C, 0xEA,
+0xAD, 0xEA, 0x8C, 0xEA, 0x40, 0xC3, 0x00, 0x18,
+0x18, 0xCB, 0x05, 0x97, 0x03, 0x63, 0x00, 0xEF,
+0xFD, 0x63, 0x05, 0x62, 0xFF, 0x6A, 0x4C, 0xEC,
+0x00, 0x18, 0xA3, 0xE0, 0x05, 0x97, 0x03, 0x63,
+0x00, 0xEF, 0x00, 0x65, 0xFD, 0x63, 0x05, 0x62,
+0x04, 0xD0, 0x30, 0xF0, 0x20, 0x6B, 0xC0, 0xF1,
+0x08, 0x4B, 0x68, 0xF3, 0xB4, 0xA3, 0x04, 0x67,
+0x7F, 0x6C, 0xFF, 0x6A, 0xAC, 0xEC, 0x4C, 0xEC,
+0x4C, 0xE8, 0x0F, 0x24, 0x68, 0xF3, 0xB9, 0xA3,
+0x40, 0x6C, 0xAC, 0xEC, 0x4C, 0xEC, 0x09, 0x24,
+0x68, 0xF3, 0x9A, 0xA3, 0x10, 0x6B, 0x8C, 0xEB,
+0x4C, 0xEB, 0x03, 0x23, 0x90, 0x67, 0x00, 0x18,
+0x47, 0xE6, 0x10, 0xF0, 0x24, 0x6A, 0x15, 0xF6,
+0x5C, 0x9A, 0xFF, 0x6C, 0x60, 0xA2, 0x03, 0x6A,
+0x6C, 0xEA, 0x03, 0x72, 0x11, 0x61, 0x30, 0xF0,
+0x20, 0x6A, 0xA9, 0xF2, 0x4C, 0xA2, 0x01, 0x72,
+0x0B, 0x61, 0x10, 0xF0, 0x24, 0x6A, 0x35, 0xF6,
+0x60, 0x9A, 0x80, 0x6D, 0xAB, 0xED, 0x40, 0xA3,
+0x8C, 0xEA, 0xAD, 0xEA, 0x8C, 0xEA, 0x40, 0xC3,
+0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A,
+0x69, 0xF3, 0x69, 0xA2, 0x0E, 0xEB, 0x11, 0x2B,
+0x69, 0xF3, 0x68, 0xA2, 0x1F, 0x6C, 0x6A, 0x32,
+0x8C, 0xEA, 0x47, 0xE8, 0x01, 0x6C, 0x8C, 0xEA,
+0x08, 0x22, 0x02, 0x6A, 0x6C, 0xEA, 0xFF, 0x6B,
+0x6C, 0xEA, 0x03, 0x22, 0x00, 0x6C, 0x00, 0x18,
+0x00, 0xE4, 0x00, 0x18, 0x18, 0xCB, 0x05, 0x97,
+0x04, 0x90, 0x03, 0x63, 0x00, 0xEF, 0x00, 0x65,
+0xFD, 0x63, 0x05, 0x62, 0xFF, 0x6A, 0x4C, 0xEC,
+0x00, 0x18, 0xB9, 0xE0, 0x05, 0x97, 0x03, 0x63,
+0x00, 0xEF, 0x00, 0x65, 0xFF, 0x63, 0x01, 0xD0,
+0x10, 0xF0, 0x24, 0x6B, 0x35, 0xF5, 0x78, 0x9B,
+0xFF, 0x6A, 0x4C, 0xEE, 0x6D, 0xE4, 0x08, 0x68,
+0x80, 0xA3, 0xDB, 0xE0, 0x02, 0x67, 0x4C, 0xED,
+0x07, 0xEE, 0xD0, 0x67, 0x4C, 0xEF, 0x04, 0xED,
+0x4C, 0xEC, 0xCC, 0xEF, 0x0F, 0xE8, 0x8C, 0xE8,
+0xE4, 0xED, 0xED, 0xE8, 0x4C, 0xE8, 0x00, 0xC3,
+0x01, 0x90, 0x01, 0x63, 0x20, 0xE8, 0x00, 0x65,
+0x10, 0xF0, 0x24, 0x6A, 0x35, 0xF5, 0x58, 0x9A,
+0xFF, 0xF7, 0x1F, 0x6B, 0x8C, 0xEB, 0x4D, 0xE3,
+0x40, 0xA3, 0xFF, 0x6C, 0x8C, 0xEE, 0x08, 0x6B,
+0xDB, 0xE3, 0x8C, 0xED, 0x8C, 0xEA, 0x64, 0x67,
+0x47, 0xED, 0x67, 0xEE, 0x6C, 0xEA, 0x8C, 0xEA,
+0x20, 0xE8, 0x00, 0x65, 0xFC, 0x63, 0x07, 0x62,
+0x06, 0xD1, 0x05, 0xD0, 0x10, 0xF0, 0x24, 0x6B,
+0x15, 0xF1, 0x64, 0x9B, 0xFF, 0xF7, 0x1F, 0x6A,
+0x8C, 0xEA, 0x69, 0xE2, 0x00, 0x9A, 0x41, 0x45,
+0x25, 0x67, 0x08, 0x22, 0x30, 0xF0, 0x20, 0x6A,
+0xAE, 0xF4, 0x50, 0x9A, 0x85, 0x67, 0x2C, 0xE8,
+0x40, 0xEA, 0x06, 0xEA, 0x50, 0x67, 0x07, 0x97,
+0x06, 0x91, 0x05, 0x90, 0x04, 0x63, 0x00, 0xEF,
 0xFB, 0x63, 0x09, 0x62, 0x08, 0xD1, 0x07, 0xD0,
-0xFF, 0x6A, 0x8C, 0xEA, 0x0E, 0x91, 0x04, 0xD2,
-0xFF, 0xF7, 0x1F, 0x6A, 0x4C, 0xED, 0x4C, 0xE9,
-0x0C, 0xD6, 0x0D, 0xD7, 0x0F, 0x90, 0x05, 0xD5,
-0x00, 0x6A, 0x08, 0x10, 0x30, 0xF0, 0x20, 0x6A,
-0xCE, 0xF4, 0x5C, 0x9A, 0x0A, 0x6C, 0x40, 0xEA,
-0x40, 0xA8, 0x01, 0x4A, 0x40, 0xC8, 0x10, 0xF0,
-0x24, 0x6A, 0x04, 0x94, 0x05, 0x95, 0xF5, 0xF3,
-0xD8, 0x9A, 0x00, 0x18, 0x7F, 0xE1, 0x0C, 0x93,
-0x6C, 0xEA, 0x0D, 0x93, 0x6E, 0xEA, 0x03, 0x22,
-0x40, 0xA8, 0x23, 0xEA, 0xE7, 0x61, 0x40, 0xA8,
-0x09, 0x97, 0x07, 0x90, 0x23, 0xEA, 0x08, 0x91,
-0x58, 0x67, 0x05, 0x63, 0x00, 0xEF, 0x00, 0x65,
-0xFD, 0x63, 0x05, 0x62, 0x04, 0xD0, 0x10, 0xF0,
-0x24, 0x6B, 0x95, 0xF1, 0x6C, 0x9B, 0x10, 0xF0,
-0x24, 0x6A, 0x10, 0xF7, 0x19, 0x4A, 0x40, 0xDB,
-0x00, 0x68, 0x10, 0xF0, 0x24, 0x6A, 0x15, 0xF7,
-0x48, 0x9A, 0x40, 0xA2, 0x12, 0x2A, 0x10, 0xF0,
-0x24, 0x6A, 0x15, 0xF7, 0x4C, 0x9A, 0x40, 0xA2,
-0x0C, 0x2A, 0x10, 0xF0, 0x24, 0x6A, 0x15, 0xF7,
-0x50, 0x9A, 0x40, 0xA2, 0x06, 0x2A, 0x10, 0xF0,
-0x24, 0x6A, 0x15, 0xF7, 0x54, 0x9A, 0x40, 0xA2,
-0x18, 0x22, 0xE0, 0xF3, 0x09, 0x70, 0x0A, 0x61,
-0x10, 0xF0, 0x24, 0x6A, 0x15, 0xF2, 0x78, 0x9A,
-0x20, 0x6C, 0x40, 0x9B, 0x8D, 0xEA, 0x40, 0xDB,
-0x00, 0x6A, 0x0C, 0x10, 0x30, 0xF0, 0x20, 0x6A,
-0xCE, 0xF4, 0x5C, 0x9A, 0x32, 0x6C, 0x01, 0x48,
-0x40, 0xEA, 0xFF, 0xF7, 0x1F, 0x6A, 0x4C, 0xE8,
-0xD0, 0x17, 0x01, 0x6A, 0x05, 0x97, 0x04, 0x90,
-0x03, 0x63, 0x00, 0xEF, 0x10, 0xF0, 0x24, 0x6B,
-0x95, 0xF1, 0x6C, 0x9B, 0x10, 0xF0, 0x24, 0x6A,
-0x90, 0xF7, 0x1D, 0x4A, 0x40, 0xDB, 0x00, 0x6B,
-0x10, 0xF0, 0x24, 0x6A, 0x15, 0xF7, 0xB8, 0x9A,
-0xFF, 0x6C, 0x40, 0xA5, 0xA0, 0xA5, 0x8C, 0xEA,
-0xAC, 0xEC, 0x4E, 0xEC, 0x10, 0x24, 0x64, 0x73,
-0x09, 0x61, 0x10, 0xF0, 0x24, 0x6B, 0x15, 0xF2,
-0x98, 0x9B, 0x40, 0x6D, 0x60, 0x9C, 0xAD, 0xEB,
-0x60, 0xDC, 0x20, 0xE8, 0x01, 0x4B, 0xFF, 0xF7,
-0x1F, 0x6A, 0x4C, 0xEB, 0xE5, 0x17, 0x20, 0xE8,
+0xFF, 0xF7, 0x1F, 0x68, 0x41, 0x45, 0x25, 0x67,
+0x0C, 0xD6, 0x8C, 0xE8, 0x07, 0x2A, 0x10, 0xF0,
+0x24, 0x6A, 0x15, 0xF1, 0x44, 0x9A, 0x41, 0xE0,
+0xC0, 0xD8, 0x1A, 0x10, 0x01, 0x6D, 0x90, 0x67,
+0xAB, 0xED, 0x00, 0x18, 0x05, 0xE1, 0x04, 0xD2,
+0x30, 0xF0, 0x20, 0x6A, 0xAE, 0xF4, 0x50, 0x9A,
+0x91, 0x67, 0x40, 0xEA, 0x0C, 0x93, 0x64, 0xEA,
+0x43, 0x67, 0x04, 0x93, 0x2C, 0xEA, 0x2F, 0xE9,
+0x6C, 0xE9, 0x10, 0xF0, 0x24, 0x6B, 0x15, 0xF1,
+0x64, 0x9B, 0x2D, 0xEA, 0x61, 0xE0, 0x40, 0xD8,
+0x09, 0x97, 0x08, 0x91, 0x07, 0x90, 0x05, 0x63,
+0x00, 0xEF, 0x00, 0x65, 0x01, 0x74, 0x0D, 0x60,
+0x06, 0x24, 0x02, 0x74, 0x10, 0x60, 0x03, 0x74,
+0x00, 0x6A, 0x1C, 0x61, 0x14, 0x10, 0x10, 0xF0,
+0x24, 0x6A, 0xA8, 0x35, 0x35, 0xF6, 0x58, 0x9A,
+0x0B, 0x10, 0x10, 0xF0, 0x24, 0x6A, 0xA8, 0x35,
+0x35, 0xF6, 0x5C, 0x9A, 0x05, 0x10, 0x10, 0xF0,
+0x24, 0x6A, 0x55, 0xF6, 0x40, 0x9A, 0xA8, 0x35,
+0x55, 0xE5, 0x40, 0x9D, 0x20, 0xE8, 0x10, 0xF0,
+0x24, 0x6A, 0x55, 0xF6, 0x44, 0x9A, 0xA8, 0x35,
+0x55, 0xE5, 0x40, 0x9D, 0x20, 0xE8, 0x00, 0x65,
+0xFD, 0x63, 0x05, 0x62, 0x30, 0xF0, 0x20, 0x6A,
+0x08, 0xF3, 0x00, 0x4A, 0x88, 0x34, 0x91, 0xE2,
+0x10, 0xF0, 0x24, 0x6A, 0x35, 0xF3, 0x7C, 0x9A,
+0x30, 0xF0, 0x20, 0x6A, 0x00, 0xF5, 0xA0, 0x35,
+0xCC, 0xEB, 0x10, 0xF0, 0x24, 0x6E, 0x95, 0xF4,
+0xD8, 0x9E, 0xCE, 0xF4, 0x50, 0x9A, 0x80, 0xAC,
+0xAD, 0xEB, 0x01, 0x6D, 0xAB, 0xED, 0x6C, 0xEE,
+0x40, 0xEA, 0x05, 0x97, 0x03, 0x63, 0x00, 0xEF,
 0xFC, 0x63, 0x07, 0x62, 0x06, 0xD1, 0x05, 0xD0,
-0x10, 0xF0, 0x24, 0x6B, 0x95, 0xF1, 0x6C, 0x9B,
-0x10, 0xF0, 0x24, 0x6A, 0xFF, 0x69, 0xF0, 0xF7,
-0x09, 0x4A, 0x8C, 0xE9, 0x40, 0xDB, 0x00, 0x68,
-0x20, 0x10, 0x82, 0xF3, 0x08, 0x70, 0x09, 0x61,
-0x10, 0xF0, 0x24, 0x6A, 0x15, 0xF2, 0x78, 0x9A,
-0x10, 0x6C, 0x40, 0x9B, 0x8D, 0xEA, 0x40, 0xDB,
-0x1F, 0x10, 0xFF, 0xF7, 0x1F, 0x6A, 0x01, 0x48,
-0x4C, 0xE8, 0x30, 0xF0, 0x20, 0x6A, 0xCE, 0xF4,
-0x5C, 0x9A, 0x14, 0x6C, 0x40, 0xEA, 0x33, 0x58,
-0x08, 0x61, 0x10, 0xF0, 0x24, 0x6A, 0x95, 0xF6,
-0x48, 0x9A, 0x01, 0x6B, 0x40, 0xA2, 0x6C, 0xEA,
-0x0B, 0x2A, 0x10, 0xF0, 0x24, 0x6A, 0x15, 0xF7,
-0x5C, 0x9A, 0x01, 0x6B, 0x40, 0x9A, 0x42, 0x32,
-0x5E, 0x32, 0x6C, 0xEA, 0x2E, 0xEA, 0xD5, 0x2A,
-0x10, 0xF0, 0x24, 0x6B, 0x95, 0xF1, 0x6C, 0x9B,
-0x10, 0xF0, 0x24, 0x6A, 0xF0, 0xF7, 0x0A, 0x4A,
-0x40, 0xDB, 0x07, 0x97, 0x06, 0x91, 0x05, 0x90,
-0x04, 0x63, 0x00, 0xEF, 0x10, 0xF0, 0x24, 0x6B,
-0x95, 0xF1, 0x6C, 0x9B, 0x10, 0xF0, 0x24, 0x6A,
-0x71, 0xF0, 0x1D, 0x4A, 0x40, 0xDB, 0x10, 0xF0,
-0x24, 0x6A, 0x35, 0xF7, 0x40, 0x9A, 0x60, 0xA2,
-0x01, 0x6A, 0x6C, 0xEA, 0xF8, 0x2A, 0x10, 0xF0,
-0x24, 0x6B, 0x95, 0xF1, 0x6C, 0x9B, 0x10, 0xF0,
-0x24, 0x6A, 0x71, 0xF0, 0x1E, 0x4A, 0x40, 0xDB,
-0x20, 0xE8, 0x00, 0x65, 0xFD, 0x63, 0x05, 0x62,
-0x04, 0xD0, 0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1,
-0x08, 0x4A, 0x68, 0xF3, 0x99, 0xA2, 0x80, 0x6B,
-0x6B, 0xEB, 0x8D, 0xEB, 0x68, 0xF3, 0x79, 0xC2,
-0x88, 0xF3, 0x68, 0xAA, 0x10, 0xF0, 0x24, 0x6A,
-0x35, 0xF7, 0x44, 0x9A, 0xFF, 0x68, 0x10, 0x6C,
-0x60, 0xCA, 0x10, 0xF0, 0x24, 0x6A, 0x95, 0xF3,
-0x70, 0x9A, 0x40, 0xA3, 0x0C, 0xEA, 0x8D, 0xEA,
-0x0C, 0xEA, 0x40, 0xC3, 0x01, 0x6C, 0x00, 0x18,
-0xFA, 0xE1, 0x10, 0xF0, 0x24, 0x6A, 0xB5, 0xF6,
-0x50, 0x9A, 0x02, 0x6B, 0x01, 0x6C, 0x60, 0xDA,
-0x10, 0xF0, 0x24, 0x6A, 0x35, 0xF7, 0x60, 0x9A,
-0x40, 0xA3, 0x0C, 0xEA, 0x8D, 0xEA, 0x0C, 0xEA,
-0x40, 0xC3, 0x00, 0x65, 0x00, 0x65, 0x00, 0x65,
+0xFF, 0x6B, 0x8C, 0xEB, 0xFF, 0xF7, 0x1F, 0x6A,
+0x81, 0x46, 0x06, 0x67, 0xAC, 0xEA, 0x06, 0x2C,
+0x83, 0x67, 0xA2, 0x67, 0x00, 0x18, 0x2D, 0xE1,
+0x02, 0x67, 0x0D, 0x10, 0x83, 0x67, 0xA2, 0x67,
+0x00, 0x18, 0x2D, 0xE1, 0x22, 0x67, 0x30, 0xF0,
+0x20, 0x6A, 0xAE, 0xF4, 0x50, 0x9A, 0x90, 0x67,
+0x2C, 0xE8, 0x40, 0xEA, 0x06, 0xEA, 0x50, 0x67,
+0x07, 0x97, 0x06, 0x91, 0x05, 0x90, 0x04, 0x63,
+0x00, 0xEF, 0x00, 0x65, 0xFB, 0x63, 0x09, 0x62,
+0x08, 0xD1, 0x07, 0xD0, 0x46, 0x67, 0xFF, 0x68,
+0xFF, 0xF7, 0x1F, 0x69, 0x01, 0x4A, 0x0C, 0xD6,
+0x0D, 0xD7, 0x8C, 0xE8, 0xAC, 0xE9, 0x04, 0x2A,
+0x90, 0x67, 0xB1, 0x67, 0xC7, 0x67, 0x15, 0x10,
+0xB1, 0x67, 0x90, 0x67, 0x00, 0x18, 0x2D, 0xE1,
+0x04, 0xD2, 0x30, 0xF0, 0x20, 0x6A, 0x0C, 0x94,
+0xAE, 0xF4, 0x50, 0x9A, 0x40, 0xEA, 0x0D, 0x96,
+0x90, 0x67, 0xB1, 0x67, 0xC4, 0xEA, 0x0C, 0x92,
+0x4C, 0xEE, 0x4F, 0xEB, 0x04, 0x92, 0x4C, 0xEB,
+0x6D, 0xEE, 0x00, 0x18, 0x40, 0xE1, 0x30, 0xF0,
+0x20, 0x6A, 0xCE, 0xF4, 0x5C, 0x9A, 0x0A, 0x6C,
+0x40, 0xEA, 0x09, 0x97, 0x08, 0x91, 0x07, 0x90,
+0x05, 0x63, 0x00, 0xEF, 0xFB, 0x63, 0x09, 0x62,
+0x08, 0xD1, 0x07, 0xD0, 0xFF, 0x6A, 0x8C, 0xEA,
+0x0E, 0x91, 0x04, 0xD2, 0xFF, 0xF7, 0x1F, 0x6A,
+0x4C, 0xED, 0x4C, 0xE9, 0x0C, 0xD6, 0x0D, 0xD7,
+0x0F, 0x90, 0x05, 0xD5, 0x00, 0x6A, 0x08, 0x10,
+0x30, 0xF0, 0x20, 0x6A, 0xCE, 0xF4, 0x5C, 0x9A,
+0x0A, 0x6C, 0x40, 0xEA, 0x40, 0xA8, 0x01, 0x4A,
+0x40, 0xC8, 0x10, 0xF0, 0x24, 0x6A, 0x04, 0x94,
+0x05, 0x95, 0x35, 0xF3, 0xDC, 0x9A, 0x00, 0x18,
+0x50, 0xE1, 0x0C, 0x93, 0x6C, 0xEA, 0x0D, 0x93,
+0x6E, 0xEA, 0x03, 0x22, 0x40, 0xA8, 0x23, 0xEA,
+0xE7, 0x61, 0x40, 0xA8, 0x09, 0x97, 0x07, 0x90,
+0x23, 0xEA, 0x08, 0x91, 0x58, 0x67, 0x05, 0x63,
+0x00, 0xEF, 0x00, 0x65, 0xFD, 0x63, 0x05, 0x62,
+0x04, 0xD0, 0x10, 0xF0, 0x24, 0x6B, 0xD5, 0xF0,
+0x70, 0x9B, 0x10, 0xF0, 0x24, 0x6A, 0x50, 0xF6,
+0x1D, 0x4A, 0x40, 0xDB, 0x00, 0x68, 0x10, 0xF0,
+0x24, 0x6A, 0x55, 0xF6, 0x48, 0x9A, 0x40, 0xA2,
+0x12, 0x2A, 0x10, 0xF0, 0x24, 0x6A, 0x55, 0xF6,
+0x4C, 0x9A, 0x40, 0xA2, 0x0C, 0x2A, 0x10, 0xF0,
+0x24, 0x6A, 0x55, 0xF6, 0x50, 0x9A, 0x40, 0xA2,
+0x06, 0x2A, 0x10, 0xF0, 0x24, 0x6A, 0x55, 0xF6,
+0x54, 0x9A, 0x40, 0xA2, 0x18, 0x22, 0xE0, 0xF3,
+0x09, 0x70, 0x0A, 0x61, 0x10, 0xF0, 0x24, 0x6A,
+0x55, 0xF1, 0x7C, 0x9A, 0x20, 0x6C, 0x40, 0x9B,
+0x8D, 0xEA, 0x40, 0xDB, 0x00, 0x6A, 0x0C, 0x10,
+0x30, 0xF0, 0x20, 0x6A, 0xCE, 0xF4, 0x5C, 0x9A,
+0x32, 0x6C, 0x01, 0x48, 0x40, 0xEA, 0xFF, 0xF7,
+0x1F, 0x6A, 0x4C, 0xE8, 0xD0, 0x17, 0x01, 0x6A,
+0x05, 0x97, 0x04, 0x90, 0x03, 0x63, 0x00, 0xEF,
+0x10, 0xF0, 0x24, 0x6B, 0xD5, 0xF0, 0x70, 0x9B,
+0x10, 0xF0, 0x24, 0x6A, 0xF0, 0xF6, 0x01, 0x4A,
+0x40, 0xDB, 0x00, 0x6B, 0x10, 0xF0, 0x24, 0x6A,
+0x55, 0xF6, 0xB8, 0x9A, 0xFF, 0x6C, 0x40, 0xA5,
+0xA0, 0xA5, 0x8C, 0xEA, 0xAC, 0xEC, 0x4E, 0xEC,
+0x10, 0x24, 0x64, 0x73, 0x09, 0x61, 0x10, 0xF0,
+0x24, 0x6B, 0x55, 0xF1, 0x9C, 0x9B, 0x40, 0x6D,
+0x60, 0x9C, 0xAD, 0xEB, 0x60, 0xDC, 0x20, 0xE8,
+0x01, 0x4B, 0xFF, 0xF7, 0x1F, 0x6A, 0x4C, 0xEB,
+0xE5, 0x17, 0x20, 0xE8, 0xFC, 0x63, 0x07, 0x62,
+0x06, 0xD1, 0x05, 0xD0, 0x10, 0xF0, 0x24, 0x6B,
+0xD5, 0xF0, 0x70, 0x9B, 0x10, 0xF0, 0x24, 0x6A,
+0xFF, 0x69, 0x30, 0xF7, 0x0D, 0x4A, 0x8C, 0xE9,
+0x40, 0xDB, 0x00, 0x68, 0x20, 0x10, 0x82, 0xF3,
+0x08, 0x70, 0x09, 0x61, 0x10, 0xF0, 0x24, 0x6A,
+0x55, 0xF1, 0x7C, 0x9A, 0x10, 0x6C, 0x40, 0x9B,
+0x8D, 0xEA, 0x40, 0xDB, 0x1F, 0x10, 0xFF, 0xF7,
+0x1F, 0x6A, 0x01, 0x48, 0x4C, 0xE8, 0x30, 0xF0,
+0x20, 0x6A, 0xCE, 0xF4, 0x5C, 0x9A, 0x14, 0x6C,
+0x40, 0xEA, 0x33, 0x58, 0x08, 0x61, 0x10, 0xF0,
+0x24, 0x6A, 0xD5, 0xF5, 0x4C, 0x9A, 0x01, 0x6B,
+0x40, 0xA2, 0x6C, 0xEA, 0x0B, 0x2A, 0x10, 0xF0,
+0x24, 0x6A, 0x55, 0xF6, 0x5C, 0x9A, 0x01, 0x6B,
+0x40, 0x9A, 0x42, 0x32, 0x5E, 0x32, 0x6C, 0xEA,
+0x2E, 0xEA, 0xD5, 0x2A, 0x10, 0xF0, 0x24, 0x6B,
+0xD5, 0xF0, 0x70, 0x9B, 0x10, 0xF0, 0x24, 0x6A,
+0x30, 0xF7, 0x0E, 0x4A, 0x40, 0xDB, 0x07, 0x97,
+0x06, 0x91, 0x05, 0x90, 0x04, 0x63, 0x00, 0xEF,
+0x10, 0xF0, 0x24, 0x6B, 0xD5, 0xF0, 0x70, 0x9B,
+0x10, 0xF0, 0x24, 0x6A, 0xD0, 0xF7, 0x01, 0x4A,
+0x40, 0xDB, 0x10, 0xF0, 0x24, 0x6A, 0x75, 0xF6,
+0x40, 0x9A, 0x60, 0xA2, 0x01, 0x6A, 0x6C, 0xEA,
+0xF8, 0x2A, 0x10, 0xF0, 0x24, 0x6B, 0xD5, 0xF0,
+0x70, 0x9B, 0x10, 0xF0, 0x24, 0x6A, 0xD0, 0xF7,
+0x02, 0x4A, 0x40, 0xDB, 0x20, 0xE8, 0x00, 0x65,
+0xFD, 0x63, 0x05, 0x62, 0x04, 0xD0, 0x30, 0xF0,
+0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A, 0x68, 0xF3,
+0x99, 0xA2, 0x80, 0x6B, 0x6B, 0xEB, 0x8D, 0xEB,
+0x68, 0xF3, 0x79, 0xC2, 0x88, 0xF3, 0x68, 0xAA,
+0x10, 0xF0, 0x24, 0x6A, 0x75, 0xF6, 0x44, 0x9A,
+0xFF, 0x68, 0x10, 0x6C, 0x60, 0xCA, 0x10, 0xF0,
+0x24, 0x6A, 0xD5, 0xF2, 0x74, 0x9A, 0x40, 0xA3,
+0x0C, 0xEA, 0x8D, 0xEA, 0x0C, 0xEA, 0x40, 0xC3,
+0x01, 0x6C, 0x00, 0x18, 0xCB, 0xE1, 0x10, 0xF0,
+0x24, 0x6A, 0xF5, 0xF5, 0x54, 0x9A, 0x02, 0x6B,
+0x01, 0x6C, 0x60, 0xDA, 0x10, 0xF0, 0x24, 0x6A,
+0x75, 0xF6, 0x60, 0x9A, 0x40, 0xA3, 0x0C, 0xEA,
+0x8D, 0xEA, 0x0C, 0xEA, 0x40, 0xC3, 0x00, 0x65,
 0x00, 0x65, 0x00, 0x65, 0x00, 0x65, 0x00, 0x65,
 0x00, 0x65, 0x00, 0x65, 0x00, 0x65, 0x00, 0x65,
 0x00, 0x65, 0x00, 0x65, 0x00, 0x65, 0x00, 0x65,
@@ -8440,1204 +8415,1204 @@ u8 array_mp_8821c_fw_ap[] = {
 0x00, 0x65, 0x00, 0x65, 0x00, 0x65, 0x00, 0x65,
 0x00, 0x65, 0x00, 0x65, 0x00, 0x65, 0x00, 0x65,
 0x00, 0x65, 0x00, 0x65, 0x00, 0x65, 0x00, 0x65,
-0x05, 0x97, 0x04, 0x90, 0x03, 0x63, 0x00, 0xEF,
-0xFD, 0x63, 0x05, 0x62, 0x00, 0x18, 0x1F, 0xE2,
-0x10, 0xF0, 0x24, 0x6A, 0x95, 0xF3, 0x70, 0x9A,
-0xEF, 0x6A, 0x80, 0xA3, 0x8C, 0xEA, 0x40, 0xC3,
-0x00, 0x6C, 0x00, 0x18, 0xFA, 0xE1, 0x30, 0xF0,
-0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A, 0x10, 0xF0,
-0x24, 0x6B, 0x8E, 0x9A, 0xB5, 0xF6, 0x70, 0x9B,
-0x80, 0xDB, 0x68, 0xF3, 0x99, 0xA2, 0x7F, 0x6B,
-0x8C, 0xEB, 0x68, 0xF3, 0x79, 0xC2, 0x05, 0x97,
-0x03, 0x63, 0x00, 0xEF, 0xFF, 0x6A, 0x4C, 0xEC,
-0x94, 0x34, 0x4C, 0xED, 0x4C, 0xEC, 0x10, 0xF0,
-0x24, 0x6A, 0x35, 0xF7, 0x48, 0x9A, 0x80, 0xC2,
-0xA0, 0xC2, 0x20, 0xE8, 0xFF, 0x6A, 0x10, 0xF0,
-0x24, 0x6B, 0x35, 0xF7, 0x68, 0x9B, 0x4C, 0xEC,
-0x94, 0x34, 0x4C, 0xEC, 0x80, 0xC3, 0x60, 0xA3,
-0x6C, 0xEA, 0x20, 0xE8, 0xFF, 0x6A, 0x4C, 0xED,
-0xFF, 0x75, 0x4C, 0xEC, 0xCC, 0xEA, 0x06, 0x61,
-0x30, 0xF0, 0x20, 0x6B, 0xC0, 0xF1, 0x08, 0x4B,
-0x71, 0xE4, 0x0B, 0x10, 0x30, 0xF0, 0x20, 0x6B,
-0xC0, 0xF1, 0x08, 0x4B, 0x71, 0xE4, 0x2C, 0xF7,
-0x6E, 0xA4, 0xAC, 0xEA, 0xAF, 0xED, 0x6C, 0xED,
-0xAD, 0xEA, 0x2C, 0xF7, 0x4E, 0xC4, 0x20, 0xE8,
-0xFD, 0x63, 0x05, 0x62, 0x04, 0xD0, 0xFF, 0x6B,
-0x6C, 0xEC, 0x07, 0x6A, 0x6C, 0xED, 0x8C, 0xEA,
-0x01, 0x68, 0xE6, 0x67, 0x04, 0xEA, 0xAB, 0xEE,
-0x30, 0xF0, 0x20, 0x6A, 0xAD, 0xEE, 0xCE, 0xF2,
-0x44, 0x9A, 0x6C, 0xE8, 0xC0, 0xF7, 0xC3, 0x36,
-0x8E, 0x34, 0x6C, 0xEF, 0xB0, 0x67, 0x0C, 0xEE,
-0x6C, 0xEC, 0x40, 0xEA, 0x05, 0x97, 0x04, 0x90,
-0x03, 0x63, 0x00, 0xEF, 0xFF, 0x6A, 0x4C, 0xEC,
-0xFF, 0x74, 0xAC, 0xEA, 0x05, 0x61, 0x30, 0xF0,
-0x20, 0x6B, 0x0D, 0xF1, 0x47, 0xC3, 0x20, 0xE8,
-0x30, 0xF0, 0x20, 0x6B, 0xC0, 0xF1, 0x08, 0x4B,
-0x2C, 0xF7, 0xBF, 0xA3, 0x8C, 0xEA, 0x8F, 0xEC,
-0xAC, 0xEC, 0x8D, 0xEA, 0x2C, 0xF7, 0x5F, 0xC3,
-0x20, 0xE8, 0x00, 0x65, 0xFD, 0x63, 0x05, 0x62,
-0x04, 0xD0, 0xFF, 0x6A, 0x06, 0x67, 0x4C, 0xE8,
-0x53, 0x70, 0x4C, 0xEC, 0x4C, 0xED, 0x0A, 0x61,
+0x00, 0x65, 0x00, 0x65, 0x05, 0x97, 0x04, 0x90,
+0x03, 0x63, 0x00, 0xEF, 0xFD, 0x63, 0x05, 0x62,
+0x00, 0x18, 0xF0, 0xE1, 0x10, 0xF0, 0x24, 0x6A,
+0xD5, 0xF2, 0x74, 0x9A, 0xEF, 0x6A, 0x80, 0xA3,
+0x8C, 0xEA, 0x40, 0xC3, 0x00, 0x6C, 0x00, 0x18,
+0xCB, 0xE1, 0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1,
+0x08, 0x4A, 0x10, 0xF0, 0x24, 0x6B, 0x8E, 0x9A,
+0xF5, 0xF5, 0x74, 0x9B, 0x80, 0xDB, 0x68, 0xF3,
+0x99, 0xA2, 0x7F, 0x6B, 0x8C, 0xEB, 0x68, 0xF3,
+0x79, 0xC2, 0x05, 0x97, 0x03, 0x63, 0x00, 0xEF,
+0xFF, 0x6A, 0x4C, 0xEC, 0x94, 0x34, 0x4C, 0xED,
+0x4C, 0xEC, 0x10, 0xF0, 0x24, 0x6A, 0x75, 0xF6,
+0x48, 0x9A, 0x80, 0xC2, 0xA0, 0xC2, 0x20, 0xE8,
+0xFF, 0x6A, 0x10, 0xF0, 0x24, 0x6B, 0x75, 0xF6,
+0x68, 0x9B, 0x4C, 0xEC, 0x94, 0x34, 0x4C, 0xEC,
+0x80, 0xC3, 0x60, 0xA3, 0x6C, 0xEA, 0x20, 0xE8,
+0xFF, 0x6A, 0x4C, 0xED, 0xFF, 0x75, 0x4C, 0xEC,
+0xCC, 0xEA, 0x06, 0x61, 0x30, 0xF0, 0x20, 0x6B,
+0xC0, 0xF1, 0x08, 0x4B, 0x71, 0xE4, 0x0B, 0x10,
 0x30, 0xF0, 0x20, 0x6B, 0xC0, 0xF1, 0x08, 0x4B,
-0x2C, 0xF7, 0x9F, 0xA3, 0x2C, 0xF7, 0x7E, 0xA3,
-0x8D, 0xEB, 0x06, 0x10, 0x0C, 0x2C, 0x30, 0xF0,
-0x20, 0x6B, 0x0D, 0xF1, 0x66, 0xA3, 0xAD, 0xEB,
-0x4C, 0xEB, 0x10, 0xF0, 0x24, 0x6A, 0x35, 0xF2,
-0x58, 0x9A, 0x60, 0xC2, 0x2C, 0x10, 0x47, 0x70,
-0x12, 0x60, 0x48, 0x58, 0x06, 0x60, 0x17, 0x70,
-0x0E, 0x60, 0x44, 0x70, 0x0C, 0x60, 0x01, 0x70,
-0x09, 0x10, 0x4C, 0x70, 0x08, 0x60, 0x4D, 0x58,
-0x02, 0x60, 0x49, 0x70, 0x03, 0x10, 0x4E, 0x70,
-0x02, 0x60, 0x51, 0x70, 0x06, 0x61, 0x30, 0xF0,
-0x20, 0x6A, 0x0D, 0xF1, 0x46, 0xA2, 0xAD, 0xEA,
-0x0D, 0x10, 0x00, 0x18, 0x9D, 0xE2, 0x30, 0xF0,
-0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A, 0x2C, 0xF7,
-0x7F, 0xA2, 0x2C, 0xF7, 0x5E, 0xA2, 0x6D, 0xEA,
-0xFF, 0x6B, 0x6C, 0xEA, 0x10, 0xF0, 0x24, 0x6B,
-0x35, 0xF2, 0x78, 0x9B, 0x40, 0xC3, 0x30, 0xF0,
-0x20, 0x6A, 0xE8, 0xF2, 0x1A, 0xC2, 0x10, 0xF0,
-0x24, 0x6A, 0x35, 0xF7, 0x4C, 0x9A, 0x00, 0xC2,
+0x71, 0xE4, 0x2C, 0xF7, 0x6E, 0xA4, 0xAC, 0xEA,
+0xAF, 0xED, 0x6C, 0xED, 0xAD, 0xEA, 0x2C, 0xF7,
+0x4E, 0xC4, 0x20, 0xE8, 0xFD, 0x63, 0x05, 0x62,
+0x04, 0xD0, 0xFF, 0x6B, 0x6C, 0xEC, 0x07, 0x6A,
+0x6C, 0xED, 0x8C, 0xEA, 0x01, 0x68, 0xE6, 0x67,
+0x04, 0xEA, 0xAB, 0xEE, 0x30, 0xF0, 0x20, 0x6A,
+0xAD, 0xEE, 0xCE, 0xF2, 0x44, 0x9A, 0x6C, 0xE8,
+0xC0, 0xF7, 0xC3, 0x36, 0x8E, 0x34, 0x6C, 0xEF,
+0xB0, 0x67, 0x0C, 0xEE, 0x6C, 0xEC, 0x40, 0xEA,
 0x05, 0x97, 0x04, 0x90, 0x03, 0x63, 0x00, 0xEF,
-0xFF, 0x63, 0x01, 0xD0, 0xFF, 0x6A, 0x4C, 0xED,
-0x4C, 0xEE, 0x4C, 0xEF, 0x10, 0xF0, 0x24, 0x6A,
-0xD5, 0xF2, 0x58, 0x9A, 0xFF, 0xF7, 0x1F, 0x6B,
-0x6C, 0xEC, 0x00, 0xAA, 0xE1, 0xF7, 0x1F, 0x6A,
-0x0C, 0xEA, 0x10, 0xF0, 0x24, 0x68, 0xD5, 0xF2,
-0x14, 0x98, 0x51, 0xE4, 0x6C, 0xEC, 0x80, 0xC8,
-0x9C, 0x32, 0x10, 0xF0, 0x24, 0x6C, 0x35, 0xF7,
-0x90, 0x9C, 0x10, 0xF0, 0x24, 0x68, 0x35, 0xF7,
-0x14, 0x98, 0x91, 0xE2, 0x80, 0xAC, 0x01, 0xE2,
-0x00, 0x98, 0x6C, 0xEC, 0x05, 0x25, 0x10, 0xF0,
-0x00, 0x6D, 0xAB, 0xED, 0xAD, 0xEC, 0x6C, 0xEC,
-0xD8, 0xF0, 0x00, 0x6B, 0x8C, 0xEB, 0x10, 0xF0,
-0x24, 0x6C, 0x35, 0xF7, 0x90, 0x9C, 0x91, 0xE2,
-0x60, 0xCC, 0x10, 0xF0, 0x24, 0x6B, 0x35, 0xF7,
-0x78, 0x9B, 0x6D, 0xE2, 0x80, 0xA3, 0x01, 0x6B,
-0x8C, 0xEB, 0x05, 0x23, 0x03, 0xF7, 0x01, 0x6B,
-0x6B, 0xEB, 0x0C, 0xEB, 0x06, 0x10, 0x1F, 0xF7,
-0x01, 0x6B, 0x6B, 0xEB, 0x0C, 0xEB, 0xE0, 0x37,
-0xED, 0xEB, 0xFF, 0x76, 0x13, 0x60, 0x10, 0xF0,
-0x24, 0x6C, 0x35, 0xF7, 0x9C, 0x9C, 0x80, 0xF4,
-0xC0, 0x36, 0x6C, 0xEC, 0x10, 0xF0, 0x24, 0x6B,
-0x55, 0xF2, 0x60, 0x9B, 0x6D, 0xEE, 0x10, 0xF0,
-0x24, 0x6B, 0x35, 0xF7, 0x74, 0x9B, 0x8D, 0xEE,
-0x6D, 0xE2, 0xC0, 0xDB, 0x10, 0xF0, 0x24, 0x6B,
-0x55, 0xF7, 0x80, 0x9B, 0x7F, 0x6B, 0x91, 0xE2,
-0xA0, 0xA4, 0xAC, 0xEB, 0x60, 0xC4, 0x10, 0xF0,
-0x24, 0x6B, 0x55, 0xF7, 0x64, 0x9B, 0x1C, 0x6C,
-0x80, 0xC3, 0x10, 0xF0, 0x24, 0x6B, 0x55, 0xF7,
-0x68, 0x9B, 0x08, 0xF4, 0x13, 0x6C, 0x80, 0xCB,
-0x10, 0xF0, 0x24, 0x6B, 0xD5, 0xF2, 0x88, 0x9B,
-0xF7, 0x6B, 0x91, 0xE2, 0xA0, 0xA4, 0xAC, 0xEB,
-0x60, 0xC4, 0x01, 0x90, 0x01, 0x63, 0x20, 0xE8,
-0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A,
-0x80, 0xF0, 0x6C, 0x9A, 0x10, 0x6C, 0x8D, 0xEB,
-0x80, 0xF0, 0x6C, 0xDA, 0x20, 0xE8, 0x00, 0x65,
-0x30, 0xF0, 0x20, 0x6A, 0x29, 0xF5, 0x51, 0xA2,
-0xFF, 0x63, 0x05, 0x5A, 0x36, 0x60, 0x10, 0xF0,
-0x24, 0x6B, 0x48, 0x32, 0x55, 0xF1, 0x1C, 0x4B,
-0x4D, 0xE3, 0x40, 0x9B, 0x00, 0xEA, 0x10, 0xF0,
-0x24, 0x6A, 0xD5, 0xF1, 0x44, 0x9A, 0xFF, 0xF7,
-0x1F, 0x6B, 0x40, 0x9A, 0x1A, 0x10, 0x10, 0xF0,
-0x24, 0x6A, 0xD5, 0xF1, 0x44, 0x9A, 0x09, 0x10,
-0x10, 0xF0, 0x24, 0x6A, 0x55, 0xF7, 0x4C, 0x9A,
-0x0D, 0x10, 0x10, 0xF0, 0x24, 0x6A, 0x55, 0xF7,
-0x4C, 0x9A, 0x40, 0x9A, 0x50, 0x32, 0x00, 0xF5,
-0x42, 0x32, 0x08, 0x10, 0x10, 0xF0, 0x24, 0x6A,
-0x55, 0xF7, 0x50, 0x9A, 0x40, 0x9A, 0xE1, 0xF7,
-0x1F, 0x6B, 0x6C, 0xEA, 0x00, 0xD2, 0x00, 0x93,
-0xE0, 0xF3, 0x08, 0x6A, 0x60, 0x33, 0x68, 0x33,
-0x5B, 0xEB, 0x01, 0x2A, 0xE5, 0xE8, 0x12, 0xEA,
-0x01, 0x10, 0x66, 0x6A, 0x00, 0xD2, 0x00, 0x92,
-0x01, 0x63, 0x20, 0xE8, 0xFF, 0x63, 0x01, 0xD0,
-0x0C, 0x2C, 0x10, 0xF0, 0x24, 0x6A, 0x15, 0xF2,
-0x78, 0x9A, 0x10, 0xF0, 0x24, 0x6C, 0x55, 0xF7,
-0x94, 0x9C, 0x40, 0x9B, 0x8D, 0xEA, 0x40, 0xDB,
-0x58, 0x10, 0x30, 0xF0, 0x20, 0x6A, 0xEF, 0xF5,
-0xDC, 0x9A, 0x30, 0xF0, 0x20, 0x6A, 0x0F, 0xF6,
-0x18, 0x4A, 0x00, 0x6D, 0x18, 0x6F, 0xF8, 0xED,
-0x30, 0xF0, 0x20, 0x6B, 0x2F, 0xF5, 0x18, 0x4B,
-0x12, 0xEF, 0x6D, 0xE7, 0xC0, 0xF0, 0x14, 0xA3,
-0x01, 0x6F, 0xEC, 0xE8, 0x23, 0x20, 0xC0, 0xF0,
-0x74, 0xA3, 0x66, 0x33, 0xEC, 0xEB, 0xFF, 0x6F,
-0xEC, 0xEB, 0x1C, 0x23, 0xFF, 0xF7, 0x78, 0x9A,
+0xFF, 0x6A, 0x4C, 0xEC, 0xFF, 0x74, 0xAC, 0xEA,
+0x05, 0x61, 0x30, 0xF0, 0x20, 0x6B, 0x0D, 0xF1,
+0x47, 0xC3, 0x20, 0xE8, 0x30, 0xF0, 0x20, 0x6B,
+0xC0, 0xF1, 0x08, 0x4B, 0x2C, 0xF7, 0xBF, 0xA3,
+0x8C, 0xEA, 0x8F, 0xEC, 0xAC, 0xEC, 0x8D, 0xEA,
+0x2C, 0xF7, 0x5F, 0xC3, 0x20, 0xE8, 0x00, 0x65,
+0xFD, 0x63, 0x05, 0x62, 0x04, 0xD0, 0xFF, 0x6A,
+0x06, 0x67, 0x4C, 0xE8, 0x53, 0x70, 0x4C, 0xEC,
+0x4C, 0xED, 0x0A, 0x61, 0x30, 0xF0, 0x20, 0x6B,
+0xC0, 0xF1, 0x08, 0x4B, 0x2C, 0xF7, 0x9F, 0xA3,
+0x2C, 0xF7, 0x7E, 0xA3, 0x8D, 0xEB, 0x06, 0x10,
+0x0C, 0x2C, 0x30, 0xF0, 0x20, 0x6B, 0x0D, 0xF1,
+0x66, 0xA3, 0xAD, 0xEB, 0x4C, 0xEB, 0x10, 0xF0,
+0x24, 0x6A, 0x75, 0xF1, 0x5C, 0x9A, 0x60, 0xC2,
+0x2C, 0x10, 0x47, 0x70, 0x12, 0x60, 0x48, 0x58,
+0x06, 0x60, 0x17, 0x70, 0x0E, 0x60, 0x44, 0x70,
+0x0C, 0x60, 0x01, 0x70, 0x09, 0x10, 0x4C, 0x70,
+0x08, 0x60, 0x4D, 0x58, 0x02, 0x60, 0x49, 0x70,
+0x03, 0x10, 0x4E, 0x70, 0x02, 0x60, 0x51, 0x70,
+0x06, 0x61, 0x30, 0xF0, 0x20, 0x6A, 0x0D, 0xF1,
+0x46, 0xA2, 0xAD, 0xEA, 0x0D, 0x10, 0x00, 0x18,
+0x6E, 0xE2, 0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1,
+0x08, 0x4A, 0x2C, 0xF7, 0x7F, 0xA2, 0x2C, 0xF7,
+0x5E, 0xA2, 0x6D, 0xEA, 0xFF, 0x6B, 0x6C, 0xEA,
+0x10, 0xF0, 0x24, 0x6B, 0x75, 0xF1, 0x7C, 0x9B,
+0x40, 0xC3, 0x30, 0xF0, 0x20, 0x6A, 0xE8, 0xF2,
+0x1A, 0xC2, 0x10, 0xF0, 0x24, 0x6A, 0x75, 0xF6,
+0x4C, 0x9A, 0x00, 0xC2, 0x05, 0x97, 0x04, 0x90,
+0x03, 0x63, 0x00, 0xEF, 0xFF, 0x63, 0x01, 0xD0,
+0xFF, 0x6A, 0x4C, 0xED, 0x4C, 0xEE, 0x4C, 0xEF,
+0x10, 0xF0, 0x24, 0x6A, 0x15, 0xF2, 0x5C, 0x9A,
+0xFF, 0xF7, 0x1F, 0x6B, 0x6C, 0xEC, 0x00, 0xAA,
+0xE1, 0xF7, 0x1F, 0x6A, 0x0C, 0xEA, 0x10, 0xF0,
+0x24, 0x68, 0x15, 0xF2, 0x18, 0x98, 0x51, 0xE4,
+0x6C, 0xEC, 0x80, 0xC8, 0x9C, 0x32, 0x10, 0xF0,
+0x24, 0x6C, 0x75, 0xF6, 0x90, 0x9C, 0x10, 0xF0,
+0x24, 0x68, 0x75, 0xF6, 0x14, 0x98, 0x91, 0xE2,
+0x80, 0xAC, 0x01, 0xE2, 0x00, 0x98, 0x6C, 0xEC,
+0x05, 0x25, 0x10, 0xF0, 0x00, 0x6D, 0xAB, 0xED,
+0xAD, 0xEC, 0x6C, 0xEC, 0xD8, 0xF0, 0x00, 0x6B,
+0x8C, 0xEB, 0x10, 0xF0, 0x24, 0x6C, 0x75, 0xF6,
+0x90, 0x9C, 0x91, 0xE2, 0x60, 0xCC, 0x10, 0xF0,
+0x24, 0x6B, 0x75, 0xF6, 0x78, 0x9B, 0x6D, 0xE2,
+0x80, 0xA3, 0x01, 0x6B, 0x8C, 0xEB, 0x05, 0x23,
+0x03, 0xF7, 0x01, 0x6B, 0x6B, 0xEB, 0x0C, 0xEB,
+0x06, 0x10, 0x1F, 0xF7, 0x01, 0x6B, 0x6B, 0xEB,
+0x0C, 0xEB, 0xE0, 0x37, 0xED, 0xEB, 0xFF, 0x76,
+0x13, 0x60, 0x10, 0xF0, 0x24, 0x6C, 0x75, 0xF6,
+0x9C, 0x9C, 0x80, 0xF4, 0xC0, 0x36, 0x6C, 0xEC,
+0x10, 0xF0, 0x24, 0x6B, 0x95, 0xF1, 0x64, 0x9B,
+0x6D, 0xEE, 0x10, 0xF0, 0x24, 0x6B, 0x75, 0xF6,
+0x74, 0x9B, 0x8D, 0xEE, 0x6D, 0xE2, 0xC0, 0xDB,
+0x10, 0xF0, 0x24, 0x6B, 0x95, 0xF6, 0x80, 0x9B,
+0x7F, 0x6B, 0x91, 0xE2, 0xA0, 0xA4, 0xAC, 0xEB,
+0x60, 0xC4, 0x10, 0xF0, 0x24, 0x6B, 0x95, 0xF6,
+0x64, 0x9B, 0x1C, 0x6C, 0x80, 0xC3, 0x10, 0xF0,
+0x24, 0x6B, 0x95, 0xF6, 0x68, 0x9B, 0x08, 0xF4,
+0x13, 0x6C, 0x80, 0xCB, 0x10, 0xF0, 0x24, 0x6B,
+0x15, 0xF2, 0x8C, 0x9B, 0xF7, 0x6B, 0x91, 0xE2,
+0xA0, 0xA4, 0xAC, 0xEB, 0x60, 0xC4, 0x01, 0x90,
+0x01, 0x63, 0x20, 0xE8, 0x30, 0xF0, 0x20, 0x6A,
+0xC0, 0xF1, 0x08, 0x4A, 0x80, 0xF0, 0x6C, 0x9A,
+0x10, 0x6C, 0x8D, 0xEB, 0x80, 0xF0, 0x6C, 0xDA,
+0x20, 0xE8, 0x00, 0x65, 0x30, 0xF0, 0x20, 0x6A,
+0x29, 0xF5, 0x51, 0xA2, 0xFF, 0x63, 0x05, 0x5A,
+0x36, 0x60, 0x10, 0xF0, 0x24, 0x6B, 0x48, 0x32,
+0xB5, 0xF0, 0x00, 0x4B, 0x4D, 0xE3, 0x40, 0x9B,
+0x00, 0xEA, 0x10, 0xF0, 0x24, 0x6A, 0x15, 0xF1,
+0x48, 0x9A, 0xFF, 0xF7, 0x1F, 0x6B, 0x40, 0x9A,
+0x1A, 0x10, 0x10, 0xF0, 0x24, 0x6A, 0x15, 0xF1,
+0x48, 0x9A, 0x09, 0x10, 0x10, 0xF0, 0x24, 0x6A,
+0x95, 0xF6, 0x4C, 0x9A, 0x0D, 0x10, 0x10, 0xF0,
+0x24, 0x6A, 0x95, 0xF6, 0x4C, 0x9A, 0x40, 0x9A,
+0x50, 0x32, 0x00, 0xF5, 0x42, 0x32, 0x08, 0x10,
+0x10, 0xF0, 0x24, 0x6A, 0x95, 0xF6, 0x50, 0x9A,
+0x40, 0x9A, 0xE1, 0xF7, 0x1F, 0x6B, 0x6C, 0xEA,
+0x00, 0xD2, 0x00, 0x93, 0xE0, 0xF3, 0x08, 0x6A,
+0x60, 0x33, 0x68, 0x33, 0x5B, 0xEB, 0x01, 0x2A,
+0xE5, 0xE8, 0x12, 0xEA, 0x01, 0x10, 0x66, 0x6A,
+0x00, 0xD2, 0x00, 0x92, 0x01, 0x63, 0x20, 0xE8,
+0xFF, 0x63, 0x01, 0xD0, 0x0C, 0x2C, 0x10, 0xF0,
+0x24, 0x6A, 0x55, 0xF1, 0x7C, 0x9A, 0x10, 0xF0,
+0x24, 0x6C, 0x95, 0xF6, 0x94, 0x9C, 0x40, 0x9B,
+0x8D, 0xEA, 0x40, 0xDB, 0x58, 0x10, 0x30, 0xF0,
+0x20, 0x6A, 0xEF, 0xF5, 0xDC, 0x9A, 0x30, 0xF0,
+0x20, 0x6A, 0x0F, 0xF6, 0x18, 0x4A, 0x00, 0x6D,
+0x18, 0x6F, 0xF8, 0xED, 0x30, 0xF0, 0x20, 0x6B,
+0x2F, 0xF5, 0x18, 0x4B, 0x12, 0xEF, 0x6D, 0xE7,
+0xC0, 0xF0, 0x14, 0xA3, 0x01, 0x6F, 0xEC, 0xE8,
+0x23, 0x20, 0xC0, 0xF0, 0x74, 0xA3, 0x66, 0x33,
+0xEC, 0xEB, 0xFF, 0x6F, 0xEC, 0xEB, 0x1C, 0x23,
+0xFF, 0xF7, 0x78, 0x9A, 0x9B, 0xEB, 0x01, 0x2C,
+0xE5, 0xE8, 0x12, 0xEB, 0xFF, 0xF7, 0x7C, 0xDA,
+0x10, 0xEF, 0x03, 0x27, 0x01, 0x4B, 0xFF, 0xF7,
+0x7C, 0xDA, 0x60, 0x9A, 0x78, 0xEE, 0x12, 0xEB,
 0x9B, 0xEB, 0x01, 0x2C, 0xE5, 0xE8, 0x12, 0xEB,
-0xFF, 0xF7, 0x7C, 0xDA, 0x10, 0xEF, 0x03, 0x27,
-0x01, 0x4B, 0xFF, 0xF7, 0x7C, 0xDA, 0x60, 0x9A,
-0x78, 0xEE, 0x12, 0xEB, 0x9B, 0xEB, 0x01, 0x2C,
-0xE5, 0xE8, 0x12, 0xEB, 0x60, 0xDA, 0xFF, 0xF7,
-0x7C, 0x9A, 0x04, 0x2B, 0x01, 0x6F, 0xFF, 0xF7,
-0xFC, 0xDA, 0x60, 0xDA, 0x01, 0x4D, 0x0A, 0x75,
-0x18, 0x4A, 0xCC, 0x61, 0x30, 0xF0, 0x20, 0x6A,
-0x2F, 0xF5, 0x18, 0x4A, 0xC0, 0xF0, 0x68, 0x9A,
-0xC0, 0xF0, 0x84, 0xDA, 0x7B, 0xEC, 0x01, 0x2B,
-0xE5, 0xE8, 0x12, 0xEB, 0xC0, 0xF0, 0x6C, 0xDA,
-0x78, 0x67, 0xC0, 0xF0, 0x70, 0xDA, 0x30, 0xF0,
-0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A, 0x69, 0xF3,
-0x88, 0xA2, 0x02, 0x6B, 0x8D, 0xEB, 0x69, 0xF3,
-0x68, 0xC2, 0x01, 0x90, 0x01, 0x63, 0x20, 0xE8,
-0xFC, 0x63, 0x07, 0x62, 0x06, 0xD1, 0x05, 0xD0,
-0x30, 0xF0, 0x20, 0x68, 0xC0, 0xF1, 0x08, 0x48,
-0x69, 0xF3, 0x48, 0xA0, 0x03, 0x69, 0x4C, 0xE9,
-0x00, 0x6A, 0x35, 0x29, 0x10, 0xF0, 0x24, 0x6A,
-0x55, 0xF7, 0x58, 0x9A, 0x30, 0xF0, 0x20, 0x6B,
-0x30, 0xF0, 0x20, 0x6C, 0x20, 0xC2, 0x4E, 0xF2,
-0x4C, 0x9B, 0x29, 0xF5, 0x10, 0x4C, 0x00, 0x6D,
-0xD4, 0x6E, 0x40, 0xEA, 0x30, 0xF0, 0x20, 0x6B,
-0x4E, 0xF2, 0x4C, 0x9B, 0x30, 0xF0, 0x20, 0x6C,
-0xFF, 0x6E, 0xEF, 0xF5, 0x1C, 0x4C, 0x00, 0x6D,
-0x01, 0x4E, 0x40, 0xEA, 0x30, 0xF0, 0x20, 0x6A,
-0x2F, 0xF5, 0x18, 0x4A, 0x01, 0x6B, 0x66, 0x6C,
-0xC0, 0xF0, 0x68, 0xDA, 0xC0, 0xF0, 0x84, 0xDA,
-0xC0, 0xF0, 0x8C, 0xDA, 0x69, 0xF3, 0x88, 0xA0,
-0x7D, 0x6A, 0x4B, 0xEA, 0x8C, 0xEA, 0x04, 0x6C,
-0x8D, 0xEA, 0x6D, 0xEA, 0x69, 0xF3, 0x48, 0xC0,
-0x69, 0xF3, 0x29, 0xC0, 0x43, 0x67, 0x07, 0x97,
-0x06, 0x91, 0x05, 0x90, 0x04, 0x63, 0x00, 0xEF,
-0xFC, 0x63, 0x07, 0x62, 0x06, 0xD0, 0x30, 0xF0,
-0x20, 0x68, 0xC0, 0xF1, 0x08, 0x48, 0x69, 0xF3,
-0x88, 0xA0, 0x01, 0x6B, 0x00, 0x6A, 0x8C, 0xEB,
-0x24, 0x23, 0x10, 0xF0, 0x24, 0x6A, 0x55, 0xF7,
-0x58, 0x9A, 0x00, 0x6B, 0x60, 0xC2, 0x03, 0x6A,
-0x4B, 0xEA, 0x8C, 0xEA, 0x69, 0xF3, 0x48, 0xC0,
-0x00, 0x18, 0x1C, 0xE3, 0x04, 0xD2, 0x04, 0x94,
-0x00, 0x18, 0x3D, 0xE3, 0x69, 0xF3, 0x68, 0xA0,
-0x02, 0x6A, 0xFF, 0x6C, 0x6D, 0xEA, 0x69, 0xF3,
-0x48, 0xC0, 0x30, 0xF0, 0x20, 0x6B, 0x30, 0xF0,
-0x20, 0x6A, 0xAE, 0xF2, 0x50, 0x9A, 0x0F, 0xF6,
-0xC0, 0x9B, 0x6D, 0x4C, 0x01, 0x6D, 0x40, 0xEA,
-0x01, 0x6A, 0x07, 0x97, 0x06, 0x90, 0x04, 0x63,
-0x00, 0xEF, 0x00, 0x65, 0x30, 0xF0, 0x20, 0x6B,
-0xC0, 0xF1, 0x08, 0x4B, 0x69, 0xF3, 0xA8, 0xA3,
-0x02, 0x6C, 0x00, 0x6A, 0xAC, 0xEC, 0x0C, 0x24,
-0x10, 0xF0, 0x24, 0x6A, 0x55, 0xF7, 0x58, 0x9A,
-0x00, 0x6C, 0x80, 0xC2, 0x03, 0x6A, 0x4B, 0xEA,
-0xAC, 0xEA, 0x69, 0xF3, 0x48, 0xC3, 0x01, 0x6A,
-0x20, 0xE8, 0x00, 0x65, 0x00, 0x6A, 0x18, 0x6C,
-0x98, 0xEA, 0x30, 0xF0, 0x20, 0x6B, 0x2F, 0xF5,
-0x18, 0x4B, 0x01, 0x4A, 0x0A, 0x72, 0x12, 0xEC,
-0x71, 0xE4, 0xC0, 0xF0, 0xB4, 0xA4, 0x02, 0x6B,
-0x6B, 0xEB, 0xAC, 0xEB, 0xC0, 0xF0, 0x74, 0xC4,
-0xEE, 0x61, 0x20, 0xE8, 0x30, 0xF0, 0x20, 0x6A,
-0x29, 0xF5, 0x50, 0xA2, 0x01, 0x6B, 0x4C, 0xEB,
-0x00, 0x6A, 0x1C, 0x23, 0x30, 0xF0, 0x20, 0x6A,
-0x0F, 0xF6, 0x1C, 0x4A, 0x00, 0x6B, 0xA0, 0x9A,
-0x8E, 0xED, 0x0F, 0x2D, 0x18, 0x6E, 0xD8, 0xEB,
-0x30, 0xF0, 0x20, 0x6D, 0x2F, 0xF5, 0x18, 0x4D,
-0x12, 0xEE, 0xB9, 0xE6, 0xC0, 0xF0, 0xF4, 0xA6,
-0x02, 0x6D, 0xAB, 0xED, 0xEC, 0xED, 0xC0, 0xF0,
-0xB4, 0xC6, 0x01, 0x4B, 0x0A, 0x73, 0x18, 0x4A,
-0xEA, 0x61, 0x01, 0x6A, 0x20, 0xE8, 0x00, 0x65,
-0xFB, 0x63, 0x09, 0x62, 0x08, 0xD1, 0x07, 0xD0,
-0x5D, 0x67, 0x20, 0xF0, 0x78, 0xA2, 0x30, 0xF0,
-0x20, 0x6A, 0x0A, 0xD4, 0x29, 0xF5, 0x90, 0xA2,
-0x01, 0x6A, 0x00, 0xF6, 0xE0, 0x31, 0x8C, 0xEA,
-0x0B, 0xD5, 0x0C, 0xD6, 0x00, 0xF6, 0x23, 0x31,
-0x80, 0xF0, 0x0E, 0x22, 0x24, 0x23, 0x01, 0x73,
-0x80, 0xF0, 0x0A, 0x61, 0x0A, 0x93, 0x80, 0xF0,
-0x07, 0x23, 0x10, 0xF0, 0x24, 0x6A, 0x55, 0xF7,
-0x5C, 0x9A, 0xC3, 0xEA, 0x80, 0xF0, 0x00, 0x61,
-0x7F, 0x71, 0x7E, 0x60, 0xFF, 0xF7, 0x1F, 0x51,
-0x7B, 0x61, 0x30, 0xF0, 0x20, 0x6A, 0xEF, 0xF5,
-0x1C, 0x9A, 0x1B, 0xEE, 0x01, 0x28, 0xE5, 0xE8,
-0x10, 0xEA, 0x12, 0xE8, 0x02, 0x22, 0x01, 0x48,
-0x04, 0x10, 0x03, 0x28, 0x01, 0x68, 0x50, 0x67,
-0x1F, 0x10, 0x01, 0x6B, 0x20, 0x10, 0x0A, 0x95,
-0x67, 0x25, 0x10, 0xF0, 0x24, 0x6A, 0x55, 0xF7,
-0x5C, 0x9A, 0x0C, 0x96, 0xC3, 0xEA, 0x60, 0x61,
-0x7F, 0x71, 0x5E, 0x60, 0xFF, 0xF7, 0x1F, 0x51,
-0x5B, 0x61, 0x30, 0xF0, 0x20, 0x6A, 0x0F, 0xF6,
-0x00, 0x9A, 0x1B, 0xEE, 0x01, 0x28, 0xE5, 0xE8,
-0x10, 0xEA, 0x12, 0xE8, 0x02, 0x22, 0x01, 0x48,
-0x05, 0x10, 0x04, 0x28, 0x01, 0x68, 0x00, 0x6A,
-0x04, 0xD2, 0x02, 0x10, 0x00, 0x6B, 0x04, 0xD3,
-0x0A, 0x94, 0x00, 0x18, 0xC7, 0xE3, 0x00, 0x6C,
-0xFF, 0x6E, 0xA4, 0x67, 0xCC, 0xED, 0x1D, 0x65,
-0x18, 0x6D, 0xB8, 0xEC, 0x30, 0xF0, 0x20, 0x6B,
-0x2F, 0xF5, 0x18, 0x4B, 0x01, 0x6D, 0x12, 0xEA,
-0x69, 0xE2, 0xC0, 0xF0, 0x54, 0xA2, 0xAC, 0xEA,
-0xCC, 0xEA, 0x2F, 0x2A, 0xD8, 0x67, 0x18, 0x6F,
-0xF8, 0xEE, 0x04, 0x96, 0xC4, 0x36, 0x04, 0xD6,
-0x03, 0x6E, 0xCB, 0xEE, 0x12, 0xEC, 0x71, 0xE4,
-0xC0, 0xF0, 0xF4, 0xA4, 0xEC, 0xEE, 0x04, 0x97,
-0xED, 0xEE, 0xC0, 0xF0, 0xD4, 0xC4, 0x0A, 0x96,
-0xE0, 0xF0, 0xC4, 0xDC, 0x0B, 0x97, 0xE0, 0xF0,
-0xE8, 0xDC, 0x0C, 0x96, 0x18, 0x6F, 0xC0, 0xF0,
-0xD8, 0xDC, 0xD8, 0x67, 0x01, 0x4E, 0xF8, 0xEE,
-0x12, 0xEE, 0xCD, 0xE3, 0xC0, 0xF0, 0x48, 0xDB,
-0xC0, 0xF0, 0x04, 0xDB, 0xC0, 0xF0, 0x56, 0xC4,
-0xC0, 0xF0, 0x54, 0xA4, 0xC0, 0xF0, 0x37, 0xC4,
-0x4D, 0xED, 0xC0, 0xF0, 0xB4, 0xC4, 0x01, 0x6A,
-0x04, 0x10, 0x01, 0x4C, 0x0A, 0x74, 0xBC, 0x61,
-0x00, 0x6A, 0x09, 0x97, 0x08, 0x91, 0x07, 0x90,
-0x05, 0x63, 0x00, 0xEF, 0xFC, 0x63, 0x07, 0x62,
-0xFF, 0x6A, 0x8C, 0xEA, 0x06, 0x22, 0x30, 0xF0,
-0x20, 0x6A, 0x0F, 0xF6, 0x18, 0x4A, 0x00, 0x6C,
-0x4F, 0x10, 0x30, 0xF0, 0x20, 0x6A, 0x0F, 0xF6,
-0x18, 0x4A, 0x00, 0x6B, 0x18, 0x6D, 0xB8, 0xEB,
-0x30, 0xF0, 0x20, 0x6C, 0x2F, 0xF5, 0x18, 0x4C,
-0x12, 0xED, 0x91, 0xE5, 0xC0, 0xF0, 0xD4, 0xA4,
-0x01, 0x6D, 0xAC, 0xEE, 0x08, 0x26, 0xC0, 0xF0,
-0x94, 0xA4, 0x86, 0x34, 0xAC, 0xEC, 0x03, 0x24,
-0x80, 0x9A, 0x01, 0x4C, 0x80, 0xDA, 0x01, 0x4B,
-0x0A, 0x73, 0x18, 0x4A, 0xE7, 0x61, 0x00, 0x18,
-0x1C, 0xE3, 0x04, 0xD2, 0x30, 0xF0, 0x20, 0x6A,
-0xC0, 0xF1, 0x08, 0x4A, 0x68, 0xF3, 0x94, 0xA2,
-0x7F, 0x6B, 0x8C, 0xEB, 0x1A, 0x23, 0x68, 0xF3,
-0x77, 0xA2, 0x69, 0xF3, 0x89, 0xA2, 0x76, 0x33,
-0x8E, 0xEB, 0x13, 0x2B, 0x68, 0xF3, 0x95, 0xA2,
-0x0F, 0x6B, 0x8C, 0xEB, 0xFF, 0x6C, 0x8C, 0xEB,
-0x0C, 0x23, 0x88, 0xF3, 0x82, 0xA2, 0x04, 0x93,
-0x30, 0xF0, 0x20, 0x6A, 0xEF, 0xF5, 0x5C, 0x9A,
-0x78, 0xEC, 0x12, 0xEC, 0x8E, 0xEA, 0x09, 0x2A,
-0x5B, 0x10, 0x30, 0xF0, 0x20, 0x6A, 0x04, 0x93,
-0xEF, 0xF5, 0x5C, 0x9A, 0x6E, 0xEA, 0x54, 0x22,
-0x04, 0x94, 0x00, 0x18, 0x3D, 0xE3, 0x50, 0x10,
-0x18, 0x6D, 0xB8, 0xEC, 0x30, 0xF0, 0x20, 0x6B,
-0x2F, 0xF5, 0x18, 0x4B, 0x12, 0xED, 0x6D, 0xE5,
-0xC0, 0xF0, 0xD4, 0xA3, 0x01, 0x6D, 0xAC, 0xEE,
-0x0A, 0x26, 0xC0, 0xF0, 0x74, 0xA3, 0x66, 0x33,
-0xAC, 0xEB, 0xFF, 0x6D, 0xAC, 0xEB, 0x03, 0x2B,
-0x60, 0x9A, 0x01, 0x4B, 0x60, 0xDA, 0x01, 0x4C,
-0x0A, 0x74, 0x18, 0x4A, 0xE5, 0x61, 0x30, 0xF0,
-0x20, 0x6A, 0x29, 0xF5, 0x51, 0xA2, 0xFF, 0x72,
-0x2F, 0x61, 0x30, 0xF0, 0x20, 0x6A, 0x2F, 0xF5,
-0x18, 0x4A, 0xC0, 0xF0, 0x70, 0x9A, 0x01, 0x4B,
-0xC0, 0xF0, 0x70, 0xDA, 0x7C, 0x4A, 0x54, 0x9A,
-0x4E, 0xEB, 0x22, 0x2B, 0x30, 0xF0, 0x20, 0x6A,
-0x0F, 0xF6, 0x18, 0x4A, 0x18, 0x6D, 0xB8, 0xEB,
-0x30, 0xF0, 0x20, 0x6C, 0x2F, 0xF5, 0x18, 0x4C,
-0x12, 0xED, 0x91, 0xE5, 0xC0, 0xF0, 0xD4, 0xA4,
-0x01, 0x6D, 0xAC, 0xEE, 0x08, 0x26, 0xC0, 0xF0,
-0x94, 0xA4, 0x86, 0x34, 0xAC, 0xEC, 0x03, 0x24,
-0x80, 0x9A, 0x01, 0x4C, 0x80, 0xDA, 0x01, 0x4B,
-0x0A, 0x73, 0x18, 0x4A, 0xE7, 0x61, 0x30, 0xF0,
-0x20, 0x6A, 0x78, 0x67, 0x0F, 0xF6, 0x68, 0xDA,
+0x60, 0xDA, 0xFF, 0xF7, 0x7C, 0x9A, 0x04, 0x2B,
+0x01, 0x6F, 0xFF, 0xF7, 0xFC, 0xDA, 0x60, 0xDA,
+0x01, 0x4D, 0x0A, 0x75, 0x18, 0x4A, 0xCC, 0x61,
+0x30, 0xF0, 0x20, 0x6A, 0x2F, 0xF5, 0x18, 0x4A,
+0xC0, 0xF0, 0x68, 0x9A, 0xC0, 0xF0, 0x84, 0xDA,
+0x7B, 0xEC, 0x01, 0x2B, 0xE5, 0xE8, 0x12, 0xEB,
+0xC0, 0xF0, 0x6C, 0xDA, 0x78, 0x67, 0xC0, 0xF0,
+0x70, 0xDA, 0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1,
+0x08, 0x4A, 0x69, 0xF3, 0x88, 0xA2, 0x02, 0x6B,
+0x8D, 0xEB, 0x69, 0xF3, 0x68, 0xC2, 0x01, 0x90,
+0x01, 0x63, 0x20, 0xE8, 0xFC, 0x63, 0x07, 0x62,
+0x06, 0xD1, 0x05, 0xD0, 0x30, 0xF0, 0x20, 0x68,
+0xC0, 0xF1, 0x08, 0x48, 0x69, 0xF3, 0x48, 0xA0,
+0x03, 0x69, 0x4C, 0xE9, 0x00, 0x6A, 0x35, 0x29,
+0x10, 0xF0, 0x24, 0x6A, 0x95, 0xF6, 0x58, 0x9A,
+0x30, 0xF0, 0x20, 0x6B, 0x30, 0xF0, 0x20, 0x6C,
+0x20, 0xC2, 0x4E, 0xF2, 0x4C, 0x9B, 0x29, 0xF5,
+0x10, 0x4C, 0x00, 0x6D, 0xD4, 0x6E, 0x40, 0xEA,
+0x30, 0xF0, 0x20, 0x6B, 0x4E, 0xF2, 0x4C, 0x9B,
+0x30, 0xF0, 0x20, 0x6C, 0xFF, 0x6E, 0xEF, 0xF5,
+0x1C, 0x4C, 0x00, 0x6D, 0x01, 0x4E, 0x40, 0xEA,
+0x30, 0xF0, 0x20, 0x6A, 0x2F, 0xF5, 0x18, 0x4A,
+0x01, 0x6B, 0x66, 0x6C, 0xC0, 0xF0, 0x68, 0xDA,
+0xC0, 0xF0, 0x84, 0xDA, 0xC0, 0xF0, 0x8C, 0xDA,
+0x69, 0xF3, 0x88, 0xA0, 0x7D, 0x6A, 0x4B, 0xEA,
+0x8C, 0xEA, 0x04, 0x6C, 0x8D, 0xEA, 0x6D, 0xEA,
+0x69, 0xF3, 0x48, 0xC0, 0x69, 0xF3, 0x29, 0xC0,
+0x43, 0x67, 0x07, 0x97, 0x06, 0x91, 0x05, 0x90,
+0x04, 0x63, 0x00, 0xEF, 0xFC, 0x63, 0x07, 0x62,
+0x06, 0xD0, 0x30, 0xF0, 0x20, 0x68, 0xC0, 0xF1,
+0x08, 0x48, 0x69, 0xF3, 0x88, 0xA0, 0x01, 0x6B,
+0x00, 0x6A, 0x8C, 0xEB, 0x24, 0x23, 0x10, 0xF0,
+0x24, 0x6A, 0x95, 0xF6, 0x58, 0x9A, 0x00, 0x6B,
+0x60, 0xC2, 0x03, 0x6A, 0x4B, 0xEA, 0x8C, 0xEA,
+0x69, 0xF3, 0x48, 0xC0, 0x00, 0x18, 0xED, 0xE2,
+0x04, 0xD2, 0x04, 0x94, 0x00, 0x18, 0x0E, 0xE3,
+0x69, 0xF3, 0x68, 0xA0, 0x02, 0x6A, 0xFF, 0x6C,
+0x6D, 0xEA, 0x69, 0xF3, 0x48, 0xC0, 0x30, 0xF0,
+0x20, 0x6B, 0x30, 0xF0, 0x20, 0x6A, 0xAE, 0xF2,
+0x50, 0x9A, 0x0F, 0xF6, 0xC0, 0x9B, 0x6D, 0x4C,
+0x01, 0x6D, 0x40, 0xEA, 0x01, 0x6A, 0x07, 0x97,
+0x06, 0x90, 0x04, 0x63, 0x00, 0xEF, 0x00, 0x65,
+0x30, 0xF0, 0x20, 0x6B, 0xC0, 0xF1, 0x08, 0x4B,
+0x69, 0xF3, 0xA8, 0xA3, 0x02, 0x6C, 0x00, 0x6A,
+0xAC, 0xEC, 0x0C, 0x24, 0x10, 0xF0, 0x24, 0x6A,
+0x95, 0xF6, 0x58, 0x9A, 0x00, 0x6C, 0x80, 0xC2,
+0x03, 0x6A, 0x4B, 0xEA, 0xAC, 0xEA, 0x69, 0xF3,
+0x48, 0xC3, 0x01, 0x6A, 0x20, 0xE8, 0x00, 0x65,
+0x00, 0x6A, 0x18, 0x6C, 0x98, 0xEA, 0x30, 0xF0,
+0x20, 0x6B, 0x2F, 0xF5, 0x18, 0x4B, 0x01, 0x4A,
+0x0A, 0x72, 0x12, 0xEC, 0x71, 0xE4, 0xC0, 0xF0,
+0xB4, 0xA4, 0x02, 0x6B, 0x6B, 0xEB, 0xAC, 0xEB,
+0xC0, 0xF0, 0x74, 0xC4, 0xEE, 0x61, 0x20, 0xE8,
+0x30, 0xF0, 0x20, 0x6A, 0x29, 0xF5, 0x50, 0xA2,
+0x01, 0x6B, 0x4C, 0xEB, 0x00, 0x6A, 0x1C, 0x23,
+0x30, 0xF0, 0x20, 0x6A, 0x0F, 0xF6, 0x1C, 0x4A,
+0x00, 0x6B, 0xA0, 0x9A, 0x8E, 0xED, 0x0F, 0x2D,
+0x18, 0x6E, 0xD8, 0xEB, 0x30, 0xF0, 0x20, 0x6D,
+0x2F, 0xF5, 0x18, 0x4D, 0x12, 0xEE, 0xB9, 0xE6,
+0xC0, 0xF0, 0xF4, 0xA6, 0x02, 0x6D, 0xAB, 0xED,
+0xEC, 0xED, 0xC0, 0xF0, 0xB4, 0xC6, 0x01, 0x4B,
+0x0A, 0x73, 0x18, 0x4A, 0xEA, 0x61, 0x01, 0x6A,
+0x20, 0xE8, 0x00, 0x65, 0xFB, 0x63, 0x09, 0x62,
+0x08, 0xD1, 0x07, 0xD0, 0x5D, 0x67, 0x20, 0xF0,
+0x78, 0xA2, 0x30, 0xF0, 0x20, 0x6A, 0x0A, 0xD4,
+0x29, 0xF5, 0x90, 0xA2, 0x01, 0x6A, 0x00, 0xF6,
+0xE0, 0x31, 0x8C, 0xEA, 0x0B, 0xD5, 0x0C, 0xD6,
+0x00, 0xF6, 0x23, 0x31, 0x80, 0xF0, 0x0E, 0x22,
+0x24, 0x23, 0x01, 0x73, 0x80, 0xF0, 0x0A, 0x61,
+0x0A, 0x93, 0x80, 0xF0, 0x07, 0x23, 0x10, 0xF0,
+0x24, 0x6A, 0x95, 0xF6, 0x5C, 0x9A, 0xC3, 0xEA,
+0x80, 0xF0, 0x00, 0x61, 0x7F, 0x71, 0x7E, 0x60,
+0xFF, 0xF7, 0x1F, 0x51, 0x7B, 0x61, 0x30, 0xF0,
+0x20, 0x6A, 0xEF, 0xF5, 0x1C, 0x9A, 0x1B, 0xEE,
+0x01, 0x28, 0xE5, 0xE8, 0x10, 0xEA, 0x12, 0xE8,
+0x02, 0x22, 0x01, 0x48, 0x04, 0x10, 0x03, 0x28,
+0x01, 0x68, 0x50, 0x67, 0x1F, 0x10, 0x01, 0x6B,
+0x20, 0x10, 0x0A, 0x95, 0x67, 0x25, 0x10, 0xF0,
+0x24, 0x6A, 0x95, 0xF6, 0x5C, 0x9A, 0x0C, 0x96,
+0xC3, 0xEA, 0x60, 0x61, 0x7F, 0x71, 0x5E, 0x60,
+0xFF, 0xF7, 0x1F, 0x51, 0x5B, 0x61, 0x30, 0xF0,
+0x20, 0x6A, 0x0F, 0xF6, 0x00, 0x9A, 0x1B, 0xEE,
+0x01, 0x28, 0xE5, 0xE8, 0x10, 0xEA, 0x12, 0xE8,
+0x02, 0x22, 0x01, 0x48, 0x05, 0x10, 0x04, 0x28,
+0x01, 0x68, 0x00, 0x6A, 0x04, 0xD2, 0x02, 0x10,
+0x00, 0x6B, 0x04, 0xD3, 0x0A, 0x94, 0x00, 0x18,
+0x98, 0xE3, 0x00, 0x6C, 0xFF, 0x6E, 0xA4, 0x67,
+0xCC, 0xED, 0x1D, 0x65, 0x18, 0x6D, 0xB8, 0xEC,
+0x30, 0xF0, 0x20, 0x6B, 0x2F, 0xF5, 0x18, 0x4B,
+0x01, 0x6D, 0x12, 0xEA, 0x69, 0xE2, 0xC0, 0xF0,
+0x54, 0xA2, 0xAC, 0xEA, 0xCC, 0xEA, 0x2F, 0x2A,
+0xD8, 0x67, 0x18, 0x6F, 0xF8, 0xEE, 0x04, 0x96,
+0xC4, 0x36, 0x04, 0xD6, 0x03, 0x6E, 0xCB, 0xEE,
+0x12, 0xEC, 0x71, 0xE4, 0xC0, 0xF0, 0xF4, 0xA4,
+0xEC, 0xEE, 0x04, 0x97, 0xED, 0xEE, 0xC0, 0xF0,
+0xD4, 0xC4, 0x0A, 0x96, 0xE0, 0xF0, 0xC4, 0xDC,
+0x0B, 0x97, 0xE0, 0xF0, 0xE8, 0xDC, 0x0C, 0x96,
+0x18, 0x6F, 0xC0, 0xF0, 0xD8, 0xDC, 0xD8, 0x67,
+0x01, 0x4E, 0xF8, 0xEE, 0x12, 0xEE, 0xCD, 0xE3,
+0xC0, 0xF0, 0x48, 0xDB, 0xC0, 0xF0, 0x04, 0xDB,
+0xC0, 0xF0, 0x56, 0xC4, 0xC0, 0xF0, 0x54, 0xA4,
+0xC0, 0xF0, 0x37, 0xC4, 0x4D, 0xED, 0xC0, 0xF0,
+0xB4, 0xC4, 0x01, 0x6A, 0x04, 0x10, 0x01, 0x4C,
+0x0A, 0x74, 0xBC, 0x61, 0x00, 0x6A, 0x09, 0x97,
+0x08, 0x91, 0x07, 0x90, 0x05, 0x63, 0x00, 0xEF,
+0xFC, 0x63, 0x07, 0x62, 0xFF, 0x6A, 0x8C, 0xEA,
+0x06, 0x22, 0x30, 0xF0, 0x20, 0x6A, 0x0F, 0xF6,
+0x18, 0x4A, 0x00, 0x6C, 0x4F, 0x10, 0x30, 0xF0,
+0x20, 0x6A, 0x0F, 0xF6, 0x18, 0x4A, 0x00, 0x6B,
+0x18, 0x6D, 0xB8, 0xEB, 0x30, 0xF0, 0x20, 0x6C,
+0x2F, 0xF5, 0x18, 0x4C, 0x12, 0xED, 0x91, 0xE5,
+0xC0, 0xF0, 0xD4, 0xA4, 0x01, 0x6D, 0xAC, 0xEE,
+0x08, 0x26, 0xC0, 0xF0, 0x94, 0xA4, 0x86, 0x34,
+0xAC, 0xEC, 0x03, 0x24, 0x80, 0x9A, 0x01, 0x4C,
+0x80, 0xDA, 0x01, 0x4B, 0x0A, 0x73, 0x18, 0x4A,
+0xE7, 0x61, 0x00, 0x18, 0xED, 0xE2, 0x04, 0xD2,
 0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A,
-0x80, 0xF0, 0x6C, 0x9A, 0x02, 0xF0, 0x00, 0x6C,
-0x8D, 0xEB, 0x80, 0xF0, 0x6C, 0xDA, 0x07, 0x97,
-0x04, 0x63, 0x00, 0xEF, 0xFB, 0x63, 0x09, 0x62,
-0x08, 0xD1, 0x07, 0xD0, 0x10, 0xF0, 0x24, 0x6B,
-0x95, 0xF1, 0x6C, 0x9B, 0x10, 0xF0, 0x24, 0x6A,
-0x32, 0xF2, 0x0D, 0x4A, 0x30, 0xF0, 0x20, 0x68,
-0x40, 0xDB, 0x0F, 0xF6, 0x0E, 0x48, 0x00, 0x69,
-0x18, 0x6A, 0x58, 0xE9, 0x30, 0xF0, 0x20, 0x6B,
-0x2F, 0xF5, 0x18, 0x4B, 0x12, 0xEA, 0x69, 0xE2,
-0xC0, 0xF0, 0x94, 0xA2, 0x01, 0x6B, 0x8C, 0xEB,
-0x27, 0x23, 0x00, 0xF0, 0x8A, 0x98, 0x00, 0xF0,
-0x66, 0x98, 0x63, 0xEC, 0x21, 0x61, 0x61, 0x80,
-0x81, 0x43, 0x04, 0xD4, 0x07, 0x2C, 0x00, 0xF0,
-0x4E, 0x98, 0x00, 0xF0, 0x92, 0x98, 0x40, 0xEA,
-0x04, 0x92, 0x14, 0x10, 0x80, 0xA0, 0x01, 0x4C,
-0x80, 0xC0, 0x80, 0xA0, 0x82, 0xEB, 0x08, 0x60,
-0xC0, 0xF0, 0x94, 0xA2, 0x02, 0x6B, 0x6B, 0xEB,
-0x8C, 0xEB, 0xC0, 0xF0, 0x74, 0xC2, 0x08, 0x10,
-0x00, 0xF0, 0x4E, 0x98, 0x00, 0xF0, 0x92, 0x98,
-0x40, 0xEA, 0x00, 0x6A, 0x00, 0xF0, 0x4A, 0xD8,
-0x01, 0x49, 0x0A, 0x71, 0x18, 0x48, 0xC8, 0x61,
-0x09, 0x97, 0x08, 0x91, 0x07, 0x90, 0x05, 0x63,
-0x00, 0xEF, 0x00, 0x65, 0xE0, 0x63, 0x3F, 0x62,
-0xFF, 0xF7, 0x1F, 0x6A, 0xAC, 0xEA, 0xBD, 0x67,
-0x56, 0xC5, 0x01, 0x6B, 0x42, 0x32, 0x57, 0xC5,
-0x6B, 0xEB, 0x30, 0xF0, 0x20, 0x6A, 0x70, 0xC5,
-0xAE, 0xF2, 0x5C, 0x9A, 0x03, 0x6B, 0x72, 0xC5,
-0x04, 0x6B, 0x94, 0xC5, 0x73, 0xC5, 0x04, 0x04,
-0x40, 0xEA, 0x3F, 0x97, 0x20, 0x63, 0x00, 0xEF,
-0xFD, 0x63, 0x05, 0x62, 0x30, 0xF0, 0x20, 0x6A,
-0x4E, 0xF2, 0x50, 0x9A, 0xA7, 0x44, 0x30, 0xF0,
-0x20, 0x6C, 0x01, 0x4D, 0xAC, 0xF0, 0x08, 0x4C,
-0x14, 0x6E, 0x40, 0xEA, 0x05, 0x97, 0x03, 0x63,
-0x00, 0xEF, 0x00, 0x65, 0xFB, 0x63, 0x09, 0x62,
-0x08, 0xD1, 0x07, 0xD0, 0x24, 0x67, 0x00, 0x18,
-0xC0, 0xE4, 0x47, 0xA1, 0x66, 0xA1, 0x30, 0xF0,
-0x20, 0x68, 0xC0, 0xF1, 0x08, 0x48, 0x40, 0x32,
-0xEB, 0xF6, 0x80, 0xA0, 0x69, 0xE2, 0x01, 0x69,
-0xEB, 0xF6, 0x52, 0xC8, 0x51, 0x67, 0x8C, 0xEA,
-0xFF, 0x6B, 0x1C, 0x2A, 0xEB, 0xF6, 0xB4, 0xA0,
-0xFE, 0x4A, 0xAC, 0xEA, 0xEB, 0xF6, 0x54, 0xC0,
-0x02, 0x6A, 0x8C, 0xEA, 0x6C, 0xEA, 0x51, 0x22,
-0xEB, 0xF6, 0x43, 0xA0, 0x0F, 0x6D, 0xEB, 0xF6,
-0x84, 0xA0, 0x4C, 0xED, 0x52, 0x36, 0x30, 0xF0,
-0x20, 0x6A, 0xAE, 0xF2, 0x54, 0x9A, 0x6C, 0xED,
-0x6C, 0xEE, 0x40, 0xEA, 0x01, 0x72, 0x0D, 0x6A,
-0x41, 0x61, 0x3F, 0x10, 0xEB, 0xF6, 0x74, 0xA0,
-0xEB, 0xF6, 0xF0, 0xA8, 0x02, 0x6A, 0x4B, 0xEA,
-0x6C, 0xEA, 0x00, 0xF1, 0x01, 0x5F, 0xEB, 0xF6,
-0x54, 0xC0, 0x0C, 0x6A, 0x33, 0x60, 0x00, 0x6A,
-0xEB, 0xF6, 0x55, 0xC0, 0xEB, 0xF6, 0x56, 0xC0,
-0x00, 0x6A, 0xEB, 0xF6, 0x58, 0xC8, 0xEB, 0xF6,
-0x5A, 0xC8, 0x10, 0xF0, 0x24, 0x6A, 0xD5, 0xF2,
-0x58, 0x9A, 0xEB, 0xF6, 0xC1, 0xA0, 0x10, 0xF0,
-0x24, 0x6D, 0x60, 0xAA, 0xFF, 0xF7, 0x1F, 0x6A,
-0x75, 0xF7, 0xA0, 0x9D, 0x6C, 0xEA, 0xD9, 0xE2,
-0xDC, 0x36, 0x00, 0x6A, 0xB5, 0xE6, 0x10, 0xF0,
-0x24, 0x6E, 0x04, 0xD2, 0x05, 0xD2, 0x75, 0xF3,
-0xD4, 0x9E, 0x30, 0xF0, 0x20, 0x6A, 0x30, 0xF0,
-0x20, 0x6B, 0xAE, 0xF2, 0x40, 0x9A, 0xCC, 0xF0,
-0x0E, 0x4B, 0x00, 0x6C, 0xD9, 0xE3, 0x40, 0xEA,
-0xEB, 0xF6, 0x54, 0xA0, 0x4D, 0xE9, 0xEB, 0xF6,
-0x34, 0xC0, 0x00, 0x6A, 0x09, 0x97, 0x08, 0x91,
+0x68, 0xF3, 0x94, 0xA2, 0x7F, 0x6B, 0x8C, 0xEB,
+0x1A, 0x23, 0x68, 0xF3, 0x77, 0xA2, 0x69, 0xF3,
+0x89, 0xA2, 0x76, 0x33, 0x8E, 0xEB, 0x13, 0x2B,
+0x68, 0xF3, 0x95, 0xA2, 0x0F, 0x6B, 0x8C, 0xEB,
+0xFF, 0x6C, 0x8C, 0xEB, 0x0C, 0x23, 0x88, 0xF3,
+0x82, 0xA2, 0x04, 0x93, 0x30, 0xF0, 0x20, 0x6A,
+0xEF, 0xF5, 0x5C, 0x9A, 0x78, 0xEC, 0x12, 0xEC,
+0x8E, 0xEA, 0x09, 0x2A, 0x5B, 0x10, 0x30, 0xF0,
+0x20, 0x6A, 0x04, 0x93, 0xEF, 0xF5, 0x5C, 0x9A,
+0x6E, 0xEA, 0x54, 0x22, 0x04, 0x94, 0x00, 0x18,
+0x0E, 0xE3, 0x50, 0x10, 0x18, 0x6D, 0xB8, 0xEC,
+0x30, 0xF0, 0x20, 0x6B, 0x2F, 0xF5, 0x18, 0x4B,
+0x12, 0xED, 0x6D, 0xE5, 0xC0, 0xF0, 0xD4, 0xA3,
+0x01, 0x6D, 0xAC, 0xEE, 0x0A, 0x26, 0xC0, 0xF0,
+0x74, 0xA3, 0x66, 0x33, 0xAC, 0xEB, 0xFF, 0x6D,
+0xAC, 0xEB, 0x03, 0x2B, 0x60, 0x9A, 0x01, 0x4B,
+0x60, 0xDA, 0x01, 0x4C, 0x0A, 0x74, 0x18, 0x4A,
+0xE5, 0x61, 0x30, 0xF0, 0x20, 0x6A, 0x29, 0xF5,
+0x51, 0xA2, 0xFF, 0x72, 0x2F, 0x61, 0x30, 0xF0,
+0x20, 0x6A, 0x2F, 0xF5, 0x18, 0x4A, 0xC0, 0xF0,
+0x70, 0x9A, 0x01, 0x4B, 0xC0, 0xF0, 0x70, 0xDA,
+0x7C, 0x4A, 0x54, 0x9A, 0x4E, 0xEB, 0x22, 0x2B,
+0x30, 0xF0, 0x20, 0x6A, 0x0F, 0xF6, 0x18, 0x4A,
+0x18, 0x6D, 0xB8, 0xEB, 0x30, 0xF0, 0x20, 0x6C,
+0x2F, 0xF5, 0x18, 0x4C, 0x12, 0xED, 0x91, 0xE5,
+0xC0, 0xF0, 0xD4, 0xA4, 0x01, 0x6D, 0xAC, 0xEE,
+0x08, 0x26, 0xC0, 0xF0, 0x94, 0xA4, 0x86, 0x34,
+0xAC, 0xEC, 0x03, 0x24, 0x80, 0x9A, 0x01, 0x4C,
+0x80, 0xDA, 0x01, 0x4B, 0x0A, 0x73, 0x18, 0x4A,
+0xE7, 0x61, 0x30, 0xF0, 0x20, 0x6A, 0x78, 0x67,
+0x0F, 0xF6, 0x68, 0xDA, 0x30, 0xF0, 0x20, 0x6A,
+0xC0, 0xF1, 0x08, 0x4A, 0x80, 0xF0, 0x6C, 0x9A,
+0x02, 0xF0, 0x00, 0x6C, 0x8D, 0xEB, 0x80, 0xF0,
+0x6C, 0xDA, 0x07, 0x97, 0x04, 0x63, 0x00, 0xEF,
+0xFB, 0x63, 0x09, 0x62, 0x08, 0xD1, 0x07, 0xD0,
+0x10, 0xF0, 0x24, 0x6B, 0xD5, 0xF0, 0x70, 0x9B,
+0x10, 0xF0, 0x24, 0x6A, 0x72, 0xF1, 0x11, 0x4A,
+0x30, 0xF0, 0x20, 0x68, 0x40, 0xDB, 0x0F, 0xF6,
+0x0E, 0x48, 0x00, 0x69, 0x18, 0x6A, 0x58, 0xE9,
+0x30, 0xF0, 0x20, 0x6B, 0x2F, 0xF5, 0x18, 0x4B,
+0x12, 0xEA, 0x69, 0xE2, 0xC0, 0xF0, 0x94, 0xA2,
+0x01, 0x6B, 0x8C, 0xEB, 0x27, 0x23, 0x00, 0xF0,
+0x8A, 0x98, 0x00, 0xF0, 0x66, 0x98, 0x63, 0xEC,
+0x21, 0x61, 0x61, 0x80, 0x81, 0x43, 0x04, 0xD4,
+0x07, 0x2C, 0x00, 0xF0, 0x4E, 0x98, 0x00, 0xF0,
+0x92, 0x98, 0x40, 0xEA, 0x04, 0x92, 0x14, 0x10,
+0x80, 0xA0, 0x01, 0x4C, 0x80, 0xC0, 0x80, 0xA0,
+0x82, 0xEB, 0x08, 0x60, 0xC0, 0xF0, 0x94, 0xA2,
+0x02, 0x6B, 0x6B, 0xEB, 0x8C, 0xEB, 0xC0, 0xF0,
+0x74, 0xC2, 0x08, 0x10, 0x00, 0xF0, 0x4E, 0x98,
+0x00, 0xF0, 0x92, 0x98, 0x40, 0xEA, 0x00, 0x6A,
+0x00, 0xF0, 0x4A, 0xD8, 0x01, 0x49, 0x0A, 0x71,
+0x18, 0x48, 0xC8, 0x61, 0x09, 0x97, 0x08, 0x91,
 0x07, 0x90, 0x05, 0x63, 0x00, 0xEF, 0x00, 0x65,
-0xFC, 0x63, 0x07, 0x62, 0x06, 0xD0, 0x30, 0xF0,
-0x20, 0x68, 0xC0, 0xF1, 0x08, 0x48, 0xEB, 0xF6,
-0xB8, 0xA8, 0x30, 0xF0, 0x20, 0x6A, 0x30, 0xF0,
-0x20, 0x6B, 0x4E, 0xF2, 0x50, 0x9A, 0xCC, 0xF0,
-0x0E, 0x4B, 0x30, 0xF0, 0x20, 0x6C, 0xB5, 0xE3,
-0xCC, 0xF0, 0x08, 0x4C, 0x04, 0x6E, 0x40, 0xEA,
-0x0B, 0xF7, 0x63, 0xA0, 0x80, 0x6A, 0x4B, 0xEA,
-0x6C, 0xEA, 0xFF, 0x6B, 0x6C, 0xEA, 0x05, 0x2A,
-0xEB, 0xF6, 0x58, 0xA8, 0x04, 0x4A, 0xEB, 0xF6,
-0x58, 0xC8, 0x30, 0xF0, 0x20, 0x68, 0xC0, 0xF1,
-0x08, 0x48, 0x0B, 0xF7, 0x61, 0xA0, 0x30, 0xF0,
-0x20, 0x6A, 0xAE, 0xF2, 0x54, 0x9A, 0x0B, 0xF7,
-0x80, 0xA0, 0x0F, 0x6D, 0x6C, 0xED, 0x72, 0x36,
-0x40, 0xEA, 0x0E, 0x2A, 0x30, 0xF0, 0x20, 0x6A,
-0xEE, 0xF4, 0x54, 0x9A, 0x40, 0xEA, 0xEB, 0xF6,
-0x74, 0xA0, 0x02, 0x6A, 0x4B, 0xEA, 0x6C, 0xEA,
-0xEB, 0xF6, 0x54, 0xC0, 0x01, 0x6C, 0x56, 0x10,
-0x0B, 0xF7, 0x63, 0xA0, 0x7F, 0x6A, 0x6C, 0xEA,
-0xFF, 0x6B, 0x6C, 0xEA, 0x18, 0x22, 0x01, 0x72,
-0x45, 0x61, 0x30, 0xF0, 0x20, 0x6A, 0xCE, 0xF5,
-0x4C, 0x9A, 0x00, 0x6C, 0x40, 0xEA, 0x49, 0x22,
-0x30, 0xF0, 0x20, 0x6A, 0x4E, 0xF3, 0x50, 0x9A,
-0xCB, 0xF6, 0x9D, 0xA0, 0x00, 0x6D, 0x40, 0xEA,
-0x06, 0x2A, 0x30, 0xF0, 0x20, 0x6A, 0xEE, 0xF4,
-0x54, 0x9A, 0x40, 0xEA, 0x3A, 0x10, 0x30, 0xF0,
-0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A, 0xEB, 0xF6,
-0x75, 0xA2, 0x0B, 0xF7, 0x82, 0xA2, 0x01, 0x4B,
-0xEB, 0xF6, 0x75, 0xC2, 0xEB, 0xF6, 0x7A, 0xAA,
-0x6D, 0xE4, 0xEB, 0xF6, 0x7A, 0xCA, 0xEB, 0xF6,
-0x95, 0xA2, 0xEB, 0xF6, 0x62, 0xA2, 0x8E, 0xEB,
-0x09, 0x2B, 0x10, 0xF0, 0x24, 0x6C, 0x0B, 0xF7,
-0xC2, 0xA2, 0x92, 0xF5, 0x19, 0x4C, 0x04, 0xD3,
-0x00, 0x6D, 0x09, 0x10, 0x0B, 0xF7, 0xC2, 0xA2,
-0x10, 0xF0, 0x24, 0x6C, 0x00, 0x6A, 0x04, 0xD2,
-0x72, 0xF5, 0x1D, 0x4C, 0xA2, 0x67, 0x64, 0x6A,
-0x58, 0xEE, 0x01, 0x6F, 0x12, 0xEE, 0x00, 0x18,
-0xDA, 0xE3, 0x1B, 0x10, 0xEB, 0xF6, 0x74, 0xA0,
-0x02, 0x6A, 0x4B, 0xEA, 0x6C, 0xEA, 0xEB, 0xF6,
-0x54, 0xC0, 0x02, 0x6C, 0xEB, 0xF6, 0xB2, 0xA8,
-0x0E, 0x10, 0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1,
-0x08, 0x4A, 0xEB, 0xF6, 0x94, 0xA2, 0x02, 0x6B,
-0x6B, 0xEB, 0xEB, 0xF6, 0xB2, 0xAA, 0x8C, 0xEB,
-0xEB, 0xF6, 0x74, 0xC2, 0x03, 0x6C, 0x00, 0x18,
-0xB3, 0xE4, 0x07, 0x97, 0x06, 0x90, 0x04, 0x63,
-0x00, 0xEF, 0x00, 0x65, 0xFD, 0x63, 0x05, 0x62,
-0x30, 0xF0, 0x20, 0x6A, 0xAC, 0xF0, 0x7C, 0xA2,
-0x01, 0x6A, 0x6C, 0xEA, 0x02, 0x22, 0x00, 0x18,
-0x06, 0xE5, 0x05, 0x97, 0x03, 0x63, 0x00, 0xEF,
+0xE0, 0x63, 0x3F, 0x62, 0xFF, 0xF7, 0x1F, 0x6A,
+0xAC, 0xEA, 0xBD, 0x67, 0x56, 0xC5, 0x01, 0x6B,
+0x42, 0x32, 0x57, 0xC5, 0x6B, 0xEB, 0x30, 0xF0,
+0x20, 0x6A, 0x70, 0xC5, 0xAE, 0xF2, 0x5C, 0x9A,
+0x03, 0x6B, 0x72, 0xC5, 0x04, 0x6B, 0x94, 0xC5,
+0x73, 0xC5, 0x04, 0x04, 0x40, 0xEA, 0x3F, 0x97,
+0x20, 0x63, 0x00, 0xEF, 0xFD, 0x63, 0x05, 0x62,
+0x30, 0xF0, 0x20, 0x6A, 0x4E, 0xF2, 0x50, 0x9A,
+0xA7, 0x44, 0x30, 0xF0, 0x20, 0x6C, 0x01, 0x4D,
+0xAC, 0xF0, 0x08, 0x4C, 0x14, 0x6E, 0x40, 0xEA,
+0x05, 0x97, 0x03, 0x63, 0x00, 0xEF, 0x00, 0x65,
 0xFB, 0x63, 0x09, 0x62, 0x08, 0xD1, 0x07, 0xD0,
-0x30, 0xF0, 0x20, 0x69, 0xC0, 0xF1, 0x08, 0x49,
-0xEB, 0xF6, 0x94, 0xA1, 0x01, 0x6A, 0xFF, 0x6B,
-0x8C, 0xEA, 0x00, 0xF1, 0x0C, 0x22, 0xEB, 0xF6,
-0xA0, 0xA1, 0x03, 0x6E, 0xAE, 0x32, 0xCC, 0xEA,
-0x6C, 0xEA, 0x02, 0x72, 0x7E, 0x60, 0x06, 0x67,
-0x4E, 0xE8, 0xE0, 0xF0, 0x02, 0x20, 0x01, 0x72,
-0x25, 0x60, 0x02, 0x6A, 0x4B, 0xEA, 0x8C, 0xEA,
-0xEB, 0xF6, 0x54, 0xC1, 0x02, 0x6A, 0xAC, 0xEA,
-0x6C, 0xEA, 0x11, 0x22, 0xEB, 0xF6, 0x43, 0xA1,
-0x0F, 0x6D, 0xEB, 0xF6, 0x84, 0xA1, 0x4C, 0xED,
+0x24, 0x67, 0x00, 0x18, 0x91, 0xE4, 0x47, 0xA1,
+0x66, 0xA1, 0x30, 0xF0, 0x20, 0x68, 0xC0, 0xF1,
+0x08, 0x48, 0x40, 0x32, 0xEB, 0xF6, 0x80, 0xA0,
+0x69, 0xE2, 0x01, 0x69, 0xEB, 0xF6, 0x52, 0xC8,
+0x51, 0x67, 0x8C, 0xEA, 0xFF, 0x6B, 0x1C, 0x2A,
+0xEB, 0xF6, 0xB4, 0xA0, 0xFE, 0x4A, 0xAC, 0xEA,
+0xEB, 0xF6, 0x54, 0xC0, 0x02, 0x6A, 0x8C, 0xEA,
+0x6C, 0xEA, 0x51, 0x22, 0xEB, 0xF6, 0x43, 0xA0,
+0x0F, 0x6D, 0xEB, 0xF6, 0x84, 0xA0, 0x4C, 0xED,
 0x52, 0x36, 0x30, 0xF0, 0x20, 0x6A, 0xAE, 0xF2,
 0x54, 0x9A, 0x6C, 0xED, 0x6C, 0xEE, 0x40, 0xEA,
-0x01, 0x72, 0x01, 0x6C, 0x01, 0x61, 0x00, 0x6C,
-0xEB, 0xF6, 0xB2, 0xA9, 0x00, 0x18, 0xB3, 0xE4,
+0x01, 0x72, 0x0D, 0x6A, 0x41, 0x61, 0x3F, 0x10,
+0xEB, 0xF6, 0x74, 0xA0, 0xEB, 0xF6, 0xF0, 0xA8,
+0x02, 0x6A, 0x4B, 0xEA, 0x6C, 0xEA, 0x00, 0xF1,
+0x01, 0x5F, 0xEB, 0xF6, 0x54, 0xC0, 0x0C, 0x6A,
+0x33, 0x60, 0x00, 0x6A, 0xEB, 0xF6, 0x55, 0xC0,
+0xEB, 0xF6, 0x56, 0xC0, 0x00, 0x6A, 0xEB, 0xF6,
+0x58, 0xC8, 0xEB, 0xF6, 0x5A, 0xC8, 0x10, 0xF0,
+0x24, 0x6A, 0x15, 0xF2, 0x5C, 0x9A, 0xEB, 0xF6,
+0xC1, 0xA0, 0x10, 0xF0, 0x24, 0x6D, 0x60, 0xAA,
+0xFF, 0xF7, 0x1F, 0x6A, 0xB5, 0xF6, 0xA0, 0x9D,
+0x6C, 0xEA, 0xD9, 0xE2, 0xDC, 0x36, 0x00, 0x6A,
+0xB5, 0xE6, 0x10, 0xF0, 0x24, 0x6E, 0x04, 0xD2,
+0x05, 0xD2, 0xB5, 0xF2, 0xD8, 0x9E, 0x30, 0xF0,
+0x20, 0x6A, 0x30, 0xF0, 0x20, 0x6B, 0xAE, 0xF2,
+0x40, 0x9A, 0xCC, 0xF0, 0x0E, 0x4B, 0x00, 0x6C,
+0xD9, 0xE3, 0x40, 0xEA, 0xEB, 0xF6, 0x54, 0xA0,
+0x4D, 0xE9, 0xEB, 0xF6, 0x34, 0xC0, 0x00, 0x6A,
+0x09, 0x97, 0x08, 0x91, 0x07, 0x90, 0x05, 0x63,
+0x00, 0xEF, 0x00, 0x65, 0xFC, 0x63, 0x07, 0x62,
+0x06, 0xD0, 0x30, 0xF0, 0x20, 0x68, 0xC0, 0xF1,
+0x08, 0x48, 0xEB, 0xF6, 0xB8, 0xA8, 0x30, 0xF0,
+0x20, 0x6A, 0x30, 0xF0, 0x20, 0x6B, 0x4E, 0xF2,
+0x50, 0x9A, 0xCC, 0xF0, 0x0E, 0x4B, 0x30, 0xF0,
+0x20, 0x6C, 0xB5, 0xE3, 0xCC, 0xF0, 0x08, 0x4C,
+0x04, 0x6E, 0x40, 0xEA, 0x0B, 0xF7, 0x63, 0xA0,
+0x80, 0x6A, 0x4B, 0xEA, 0x6C, 0xEA, 0xFF, 0x6B,
+0x6C, 0xEA, 0x05, 0x2A, 0xEB, 0xF6, 0x58, 0xA8,
+0x04, 0x4A, 0xEB, 0xF6, 0x58, 0xC8, 0x30, 0xF0,
+0x20, 0x68, 0xC0, 0xF1, 0x08, 0x48, 0x0B, 0xF7,
+0x61, 0xA0, 0x30, 0xF0, 0x20, 0x6A, 0xAE, 0xF2,
+0x54, 0x9A, 0x0B, 0xF7, 0x80, 0xA0, 0x0F, 0x6D,
+0x6C, 0xED, 0x72, 0x36, 0x40, 0xEA, 0x0E, 0x2A,
 0x30, 0xF0, 0x20, 0x6A, 0xEE, 0xF4, 0x54, 0x9A,
-0x40, 0xEA, 0xD9, 0x10, 0x02, 0x6A, 0xAC, 0xEA,
-0x6C, 0xEA, 0x11, 0x22, 0xEB, 0xF6, 0x43, 0xA1,
-0x0F, 0x6D, 0xEB, 0xF6, 0x84, 0xA1, 0x4C, 0xED,
-0x52, 0x36, 0x30, 0xF0, 0x20, 0x6A, 0xAE, 0xF2,
-0x54, 0x9A, 0x6C, 0xED, 0x6C, 0xEE, 0x40, 0xEA,
-0x01, 0x72, 0xA0, 0xF0, 0x14, 0x61, 0xEB, 0xF6,
-0xB2, 0xA9, 0x00, 0x6C, 0x00, 0x18, 0xB3, 0xE4,
-0x30, 0xF0, 0x20, 0x6A, 0xAC, 0xF0, 0x4D, 0xA2,
-0x5A, 0x33, 0x02, 0x73, 0x0D, 0x60, 0x03, 0x73,
-0x0F, 0x60, 0x01, 0x73, 0x05, 0x60, 0x3F, 0x6E,
-0x4C, 0xEE, 0xFF, 0x6A, 0x4C, 0xEE, 0x0E, 0x10,
-0x3F, 0x6B, 0x4C, 0xEB, 0x0A, 0x6E, 0x08, 0x10,
-0x3F, 0x6B, 0x4C, 0xEB, 0x64, 0x6E, 0x04, 0x10,
-0x3F, 0x6B, 0x4C, 0xEB, 0xE0, 0xF3, 0x08, 0x6E,
-0xD8, 0xEB, 0x12, 0xEE, 0x0A, 0x6A, 0x58, 0xEE,
-0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A,
-0xEB, 0xF6, 0x7A, 0xAA, 0x10, 0xF0, 0x24, 0x6C,
-0x72, 0xF5, 0x1D, 0x4C, 0x12, 0xEE, 0x7B, 0xE6,
-0x00, 0x6B, 0xEB, 0xF6, 0x75, 0xC2, 0x00, 0x6B,
-0xEB, 0xF6, 0x7A, 0xCA, 0xEB, 0xF6, 0x78, 0xCA,
-0x00, 0x6A, 0x04, 0xD2, 0xA2, 0x67, 0x64, 0x6A,
-0x62, 0x10, 0x02, 0x6A, 0xAC, 0xEA, 0x6C, 0xEA,
-0x10, 0x22, 0xEB, 0xF6, 0x43, 0xA1, 0x0F, 0x6D,
-0xEB, 0xF6, 0x84, 0xA1, 0x4C, 0xED, 0x52, 0x36,
-0x30, 0xF0, 0x20, 0x6A, 0xAE, 0xF2, 0x54, 0x9A,
-0x6C, 0xED, 0x6C, 0xEE, 0x40, 0xEA, 0x01, 0x72,
-0x62, 0x61, 0xEB, 0xF6, 0xB2, 0xA9, 0x00, 0x6C,
-0x00, 0x18, 0xB3, 0xE4, 0x30, 0xF0, 0x20, 0x6A,
-0xC0, 0xF1, 0x08, 0x4A, 0xEB, 0xF6, 0x87, 0xA2,
-0xEB, 0xF6, 0x76, 0xA2, 0xFF, 0x4C, 0x6E, 0xEC,
-0x03, 0x2C, 0xEB, 0xF6, 0x66, 0xA2, 0x05, 0x10,
-0x01, 0x4B, 0xEB, 0xF6, 0x76, 0xC2, 0xEB, 0xF6,
-0x65, 0xA2, 0x7A, 0x32, 0x02, 0x72, 0x0D, 0x60,
-0x03, 0x72, 0x0F, 0x60, 0x01, 0x72, 0x05, 0x60,
-0x3F, 0x6A, 0x6C, 0xEA, 0xFF, 0x6B, 0x6C, 0xEA,
-0x0E, 0x10, 0x3F, 0x6A, 0x6C, 0xEA, 0x0A, 0x6B,
-0x08, 0x10, 0x3F, 0x6A, 0x6C, 0xEA, 0x64, 0x6B,
-0x04, 0x10, 0x3F, 0x6A, 0x6C, 0xEA, 0xE0, 0xF3,
-0x08, 0x6B, 0x78, 0xEA, 0x12, 0xEA, 0x0A, 0x6B,
-0x78, 0xEA, 0x30, 0xF0, 0x20, 0x6B, 0xCC, 0xF0,
-0x62, 0xAB, 0x00, 0x6C, 0x64, 0x6E, 0x12, 0xEA,
-0x6B, 0xE2, 0x30, 0xF0, 0x20, 0x6B, 0xC0, 0xF1,
-0x08, 0x4B, 0xEB, 0xF6, 0x95, 0xC3, 0x00, 0x6C,
-0xEB, 0xF6, 0x9A, 0xCB, 0xEB, 0xF6, 0x98, 0xCB,
-0x00, 0x6B, 0x10, 0xF0, 0x24, 0x6C, 0x04, 0xD3,
-0x72, 0xF5, 0x1D, 0x4C, 0xA3, 0x67, 0xD8, 0xEA,
-0x01, 0x6F, 0x12, 0xEE, 0x00, 0x18, 0xDA, 0xE3,
-0x1E, 0x10, 0xEB, 0xF6, 0xB2, 0xA9, 0x00, 0x6C,
-0x00, 0x18, 0xB3, 0xE4, 0xEB, 0xF6, 0x15, 0xC1,
-0xEB, 0xF6, 0x1A, 0xC9, 0xEB, 0xF6, 0x18, 0xC9,
-0x00, 0x18, 0x5F, 0xE5, 0x10, 0x10, 0x30, 0xF0,
+0x40, 0xEA, 0xEB, 0xF6, 0x74, 0xA0, 0x02, 0x6A,
+0x4B, 0xEA, 0x6C, 0xEA, 0xEB, 0xF6, 0x54, 0xC0,
+0x01, 0x6C, 0x56, 0x10, 0x0B, 0xF7, 0x63, 0xA0,
+0x7F, 0x6A, 0x6C, 0xEA, 0xFF, 0x6B, 0x6C, 0xEA,
+0x18, 0x22, 0x01, 0x72, 0x45, 0x61, 0x30, 0xF0,
+0x20, 0x6A, 0xCE, 0xF5, 0x4C, 0x9A, 0x00, 0x6C,
+0x40, 0xEA, 0x49, 0x22, 0x30, 0xF0, 0x20, 0x6A,
+0x4E, 0xF3, 0x50, 0x9A, 0xCB, 0xF6, 0x9D, 0xA0,
+0x00, 0x6D, 0x40, 0xEA, 0x06, 0x2A, 0x30, 0xF0,
+0x20, 0x6A, 0xEE, 0xF4, 0x54, 0x9A, 0x40, 0xEA,
+0x3A, 0x10, 0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1,
+0x08, 0x4A, 0xEB, 0xF6, 0x75, 0xA2, 0x0B, 0xF7,
+0x82, 0xA2, 0x01, 0x4B, 0xEB, 0xF6, 0x75, 0xC2,
+0xEB, 0xF6, 0x7A, 0xAA, 0x6D, 0xE4, 0xEB, 0xF6,
+0x7A, 0xCA, 0xEB, 0xF6, 0x95, 0xA2, 0xEB, 0xF6,
+0x62, 0xA2, 0x8E, 0xEB, 0x09, 0x2B, 0x10, 0xF0,
+0x24, 0x6C, 0x0B, 0xF7, 0xC2, 0xA2, 0xD2, 0xF4,
+0x1D, 0x4C, 0x04, 0xD3, 0x00, 0x6D, 0x09, 0x10,
+0x0B, 0xF7, 0xC2, 0xA2, 0x10, 0xF0, 0x24, 0x6C,
+0x00, 0x6A, 0x04, 0xD2, 0xD2, 0xF4, 0x01, 0x4C,
+0xA2, 0x67, 0x64, 0x6A, 0x58, 0xEE, 0x01, 0x6F,
+0x12, 0xEE, 0x00, 0x18, 0xAB, 0xE3, 0x1B, 0x10,
+0xEB, 0xF6, 0x74, 0xA0, 0x02, 0x6A, 0x4B, 0xEA,
+0x6C, 0xEA, 0xEB, 0xF6, 0x54, 0xC0, 0x02, 0x6C,
+0xEB, 0xF6, 0xB2, 0xA8, 0x0E, 0x10, 0x30, 0xF0,
 0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A, 0xEB, 0xF6,
 0x94, 0xA2, 0x02, 0x6B, 0x6B, 0xEB, 0xEB, 0xF6,
 0xB2, 0xAA, 0x8C, 0xEB, 0xEB, 0xF6, 0x74, 0xC2,
-0x01, 0x6C, 0x00, 0x18, 0xB3, 0xE4, 0x09, 0x97,
-0x08, 0x91, 0x07, 0x90, 0x05, 0x63, 0x00, 0xEF,
-0xFB, 0x63, 0x09, 0x62, 0x08, 0xD1, 0x07, 0xD0,
-0xFF, 0x6A, 0x04, 0x67, 0x25, 0x67, 0x4C, 0xEE,
-0x4C, 0xE8, 0x4C, 0xE9, 0x30, 0xF0, 0x20, 0x6A,
-0xEE, 0xF4, 0x4C, 0x9A, 0x04, 0xD6, 0x90, 0x67,
-0xB1, 0x67, 0x40, 0xEA, 0x90, 0x67, 0x80, 0x18,
-0x20, 0x22, 0x30, 0xF0, 0x20, 0x6A, 0x2F, 0xF7,
-0x7A, 0xA2, 0x00, 0x6A, 0x09, 0x2B, 0x04, 0x97,
-0x30, 0xF0, 0x20, 0x6C, 0x25, 0xF6, 0x08, 0x4C,
-0xB0, 0x67, 0xD1, 0x67, 0x80, 0x18, 0xA9, 0x21,
-0x09, 0x97, 0x08, 0x91, 0x07, 0x90, 0x05, 0x63,
-0x00, 0xEF, 0x00, 0x65, 0xFF, 0x6B, 0x6C, 0xEC,
-0x0F, 0x6A, 0x8C, 0xEA, 0x03, 0x2A, 0x92, 0x32,
-0x6C, 0xEA, 0x20, 0xE8, 0x07, 0x4A, 0x6C, 0xEA,
-0x20, 0xE8, 0x00, 0x65, 0xFD, 0x63, 0x05, 0x62,
+0x03, 0x6C, 0x00, 0x18, 0x84, 0xE4, 0x07, 0x97,
+0x06, 0x90, 0x04, 0x63, 0x00, 0xEF, 0x00, 0x65,
+0xFD, 0x63, 0x05, 0x62, 0x30, 0xF0, 0x20, 0x6A,
+0xAC, 0xF0, 0x7C, 0xA2, 0x01, 0x6A, 0x6C, 0xEA,
+0x02, 0x22, 0x00, 0x18, 0xD7, 0xE4, 0x05, 0x97,
+0x03, 0x63, 0x00, 0xEF, 0xFB, 0x63, 0x09, 0x62,
+0x08, 0xD1, 0x07, 0xD0, 0x30, 0xF0, 0x20, 0x69,
+0xC0, 0xF1, 0x08, 0x49, 0xEB, 0xF6, 0x94, 0xA1,
+0x01, 0x6A, 0xFF, 0x6B, 0x8C, 0xEA, 0x00, 0xF1,
+0x0C, 0x22, 0xEB, 0xF6, 0xA0, 0xA1, 0x03, 0x6E,
+0xAE, 0x32, 0xCC, 0xEA, 0x6C, 0xEA, 0x02, 0x72,
+0x7E, 0x60, 0x06, 0x67, 0x4E, 0xE8, 0xE0, 0xF0,
+0x02, 0x20, 0x01, 0x72, 0x25, 0x60, 0x02, 0x6A,
+0x4B, 0xEA, 0x8C, 0xEA, 0xEB, 0xF6, 0x54, 0xC1,
+0x02, 0x6A, 0xAC, 0xEA, 0x6C, 0xEA, 0x11, 0x22,
+0xEB, 0xF6, 0x43, 0xA1, 0x0F, 0x6D, 0xEB, 0xF6,
+0x84, 0xA1, 0x4C, 0xED, 0x52, 0x36, 0x30, 0xF0,
+0x20, 0x6A, 0xAE, 0xF2, 0x54, 0x9A, 0x6C, 0xED,
+0x6C, 0xEE, 0x40, 0xEA, 0x01, 0x72, 0x01, 0x6C,
+0x01, 0x61, 0x00, 0x6C, 0xEB, 0xF6, 0xB2, 0xA9,
+0x00, 0x18, 0x84, 0xE4, 0x30, 0xF0, 0x20, 0x6A,
+0xEE, 0xF4, 0x54, 0x9A, 0x40, 0xEA, 0xD9, 0x10,
+0x02, 0x6A, 0xAC, 0xEA, 0x6C, 0xEA, 0x11, 0x22,
+0xEB, 0xF6, 0x43, 0xA1, 0x0F, 0x6D, 0xEB, 0xF6,
+0x84, 0xA1, 0x4C, 0xED, 0x52, 0x36, 0x30, 0xF0,
+0x20, 0x6A, 0xAE, 0xF2, 0x54, 0x9A, 0x6C, 0xED,
+0x6C, 0xEE, 0x40, 0xEA, 0x01, 0x72, 0xA0, 0xF0,
+0x14, 0x61, 0xEB, 0xF6, 0xB2, 0xA9, 0x00, 0x6C,
+0x00, 0x18, 0x84, 0xE4, 0x30, 0xF0, 0x20, 0x6A,
+0xAC, 0xF0, 0x4D, 0xA2, 0x5A, 0x33, 0x02, 0x73,
+0x0D, 0x60, 0x03, 0x73, 0x0F, 0x60, 0x01, 0x73,
+0x05, 0x60, 0x3F, 0x6E, 0x4C, 0xEE, 0xFF, 0x6A,
+0x4C, 0xEE, 0x0E, 0x10, 0x3F, 0x6B, 0x4C, 0xEB,
+0x0A, 0x6E, 0x08, 0x10, 0x3F, 0x6B, 0x4C, 0xEB,
+0x64, 0x6E, 0x04, 0x10, 0x3F, 0x6B, 0x4C, 0xEB,
+0xE0, 0xF3, 0x08, 0x6E, 0xD8, 0xEB, 0x12, 0xEE,
+0x0A, 0x6A, 0x58, 0xEE, 0x30, 0xF0, 0x20, 0x6A,
+0xC0, 0xF1, 0x08, 0x4A, 0xEB, 0xF6, 0x7A, 0xAA,
+0x10, 0xF0, 0x24, 0x6C, 0xD2, 0xF4, 0x01, 0x4C,
+0x12, 0xEE, 0x7B, 0xE6, 0x00, 0x6B, 0xEB, 0xF6,
+0x75, 0xC2, 0x00, 0x6B, 0xEB, 0xF6, 0x7A, 0xCA,
+0xEB, 0xF6, 0x78, 0xCA, 0x00, 0x6A, 0x04, 0xD2,
+0xA2, 0x67, 0x64, 0x6A, 0x62, 0x10, 0x02, 0x6A,
+0xAC, 0xEA, 0x6C, 0xEA, 0x10, 0x22, 0xEB, 0xF6,
+0x43, 0xA1, 0x0F, 0x6D, 0xEB, 0xF6, 0x84, 0xA1,
+0x4C, 0xED, 0x52, 0x36, 0x30, 0xF0, 0x20, 0x6A,
+0xAE, 0xF2, 0x54, 0x9A, 0x6C, 0xED, 0x6C, 0xEE,
+0x40, 0xEA, 0x01, 0x72, 0x62, 0x61, 0xEB, 0xF6,
+0xB2, 0xA9, 0x00, 0x6C, 0x00, 0x18, 0x84, 0xE4,
+0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A,
+0xEB, 0xF6, 0x87, 0xA2, 0xEB, 0xF6, 0x76, 0xA2,
+0xFF, 0x4C, 0x6E, 0xEC, 0x03, 0x2C, 0xEB, 0xF6,
+0x66, 0xA2, 0x05, 0x10, 0x01, 0x4B, 0xEB, 0xF6,
+0x76, 0xC2, 0xEB, 0xF6, 0x65, 0xA2, 0x7A, 0x32,
+0x02, 0x72, 0x0D, 0x60, 0x03, 0x72, 0x0F, 0x60,
+0x01, 0x72, 0x05, 0x60, 0x3F, 0x6A, 0x6C, 0xEA,
+0xFF, 0x6B, 0x6C, 0xEA, 0x0E, 0x10, 0x3F, 0x6A,
+0x6C, 0xEA, 0x0A, 0x6B, 0x08, 0x10, 0x3F, 0x6A,
+0x6C, 0xEA, 0x64, 0x6B, 0x04, 0x10, 0x3F, 0x6A,
+0x6C, 0xEA, 0xE0, 0xF3, 0x08, 0x6B, 0x78, 0xEA,
+0x12, 0xEA, 0x0A, 0x6B, 0x78, 0xEA, 0x30, 0xF0,
+0x20, 0x6B, 0xCC, 0xF0, 0x62, 0xAB, 0x00, 0x6C,
+0x64, 0x6E, 0x12, 0xEA, 0x6B, 0xE2, 0x30, 0xF0,
+0x20, 0x6B, 0xC0, 0xF1, 0x08, 0x4B, 0xEB, 0xF6,
+0x95, 0xC3, 0x00, 0x6C, 0xEB, 0xF6, 0x9A, 0xCB,
+0xEB, 0xF6, 0x98, 0xCB, 0x00, 0x6B, 0x10, 0xF0,
+0x24, 0x6C, 0x04, 0xD3, 0xD2, 0xF4, 0x01, 0x4C,
+0xA3, 0x67, 0xD8, 0xEA, 0x01, 0x6F, 0x12, 0xEE,
+0x00, 0x18, 0xAB, 0xE3, 0x1E, 0x10, 0xEB, 0xF6,
+0xB2, 0xA9, 0x00, 0x6C, 0x00, 0x18, 0x84, 0xE4,
+0xEB, 0xF6, 0x15, 0xC1, 0xEB, 0xF6, 0x1A, 0xC9,
+0xEB, 0xF6, 0x18, 0xC9, 0x00, 0x18, 0x30, 0xE5,
+0x10, 0x10, 0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1,
+0x08, 0x4A, 0xEB, 0xF6, 0x94, 0xA2, 0x02, 0x6B,
+0x6B, 0xEB, 0xEB, 0xF6, 0xB2, 0xAA, 0x8C, 0xEB,
+0xEB, 0xF6, 0x74, 0xC2, 0x01, 0x6C, 0x00, 0x18,
+0x84, 0xE4, 0x09, 0x97, 0x08, 0x91, 0x07, 0x90,
+0x05, 0x63, 0x00, 0xEF, 0xFB, 0x63, 0x09, 0x62,
+0x08, 0xD1, 0x07, 0xD0, 0xFF, 0x6A, 0x04, 0x67,
+0x25, 0x67, 0x4C, 0xEE, 0x4C, 0xE8, 0x4C, 0xE9,
+0x30, 0xF0, 0x20, 0x6A, 0xEE, 0xF4, 0x4C, 0x9A,
+0x04, 0xD6, 0x90, 0x67, 0xB1, 0x67, 0x40, 0xEA,
+0x90, 0x67, 0x80, 0x18, 0x20, 0x22, 0x30, 0xF0,
+0x20, 0x6A, 0x2F, 0xF7, 0x7A, 0xA2, 0x00, 0x6A,
+0x09, 0x2B, 0x04, 0x97, 0x30, 0xF0, 0x20, 0x6C,
+0x25, 0xF6, 0x08, 0x4C, 0xB0, 0x67, 0xD1, 0x67,
+0x80, 0x18, 0xA9, 0x21, 0x09, 0x97, 0x08, 0x91,
+0x07, 0x90, 0x05, 0x63, 0x00, 0xEF, 0x00, 0x65,
+0xFF, 0x6B, 0x6C, 0xEC, 0x0F, 0x6A, 0x8C, 0xEA,
+0x03, 0x2A, 0x92, 0x32, 0x6C, 0xEA, 0x20, 0xE8,
+0x07, 0x4A, 0x6C, 0xEA, 0x20, 0xE8, 0x00, 0x65,
+0xFD, 0x63, 0x05, 0x62, 0xFF, 0x6A, 0x8C, 0xEA,
+0x08, 0x2A, 0x30, 0xF0, 0x20, 0x6A, 0x4E, 0xF2,
+0x54, 0x9A, 0x01, 0x6C, 0x04, 0xF0, 0x00, 0x6D,
+0x09, 0x10, 0xFF, 0x4A, 0x44, 0x33, 0x30, 0xF0,
+0x20, 0x6A, 0x4E, 0xF2, 0x54, 0x9A, 0x01, 0x6D,
+0x02, 0x6C, 0xA4, 0xEB, 0x40, 0xEA, 0x05, 0x97,
+0x03, 0x63, 0x00, 0xEF, 0xFD, 0x63, 0x05, 0x62,
 0xFF, 0x6A, 0x8C, 0xEA, 0x08, 0x2A, 0x30, 0xF0,
 0x20, 0x6A, 0x4E, 0xF2, 0x54, 0x9A, 0x01, 0x6C,
-0x04, 0xF0, 0x00, 0x6D, 0x09, 0x10, 0xFF, 0x4A,
-0x44, 0x33, 0x30, 0xF0, 0x20, 0x6A, 0x4E, 0xF2,
+0x08, 0xF0, 0x00, 0x6D, 0x09, 0x10, 0x44, 0x32,
+0x6F, 0x42, 0x30, 0xF0, 0x20, 0x6A, 0x4E, 0xF2,
 0x54, 0x9A, 0x01, 0x6D, 0x02, 0x6C, 0xA4, 0xEB,
 0x40, 0xEA, 0x05, 0x97, 0x03, 0x63, 0x00, 0xEF,
 0xFD, 0x63, 0x05, 0x62, 0xFF, 0x6A, 0x8C, 0xEA,
-0x08, 0x2A, 0x30, 0xF0, 0x20, 0x6A, 0x4E, 0xF2,
-0x54, 0x9A, 0x01, 0x6C, 0x08, 0xF0, 0x00, 0x6D,
-0x09, 0x10, 0x44, 0x32, 0x6F, 0x42, 0x30, 0xF0,
-0x20, 0x6A, 0x4E, 0xF2, 0x54, 0x9A, 0x01, 0x6D,
-0x02, 0x6C, 0xA4, 0xEB, 0x40, 0xEA, 0x05, 0x97,
+0x04, 0x2A, 0x01, 0x6C, 0x08, 0xF0, 0x00, 0x6D,
+0x05, 0x10, 0x44, 0x32, 0xFF, 0x4A, 0x01, 0x6D,
+0x02, 0x6C, 0xA4, 0xEA, 0x00, 0x18, 0xF1, 0xDC,
+0x05, 0x97, 0x03, 0x63, 0x00, 0xEF, 0x00, 0x65,
+0xFD, 0x63, 0x05, 0x62, 0xFF, 0x6A, 0x8C, 0xEA,
+0x04, 0x2A, 0x01, 0x6C, 0x04, 0xF0, 0x00, 0x6D,
+0x05, 0x10, 0xFF, 0x4A, 0x44, 0x32, 0x01, 0x6D,
+0x02, 0x6C, 0xA4, 0xEA, 0x00, 0x18, 0xF1, 0xDC,
+0x05, 0x97, 0x03, 0x63, 0x00, 0xEF, 0x00, 0x65,
+0xFD, 0x63, 0x05, 0x62, 0xFF, 0x6D, 0x8C, 0xED,
+0x01, 0x6C, 0x44, 0x67, 0x15, 0x4D, 0x44, 0xED,
+0xA2, 0x67, 0x00, 0x18, 0x70, 0xDC, 0x05, 0x97,
 0x03, 0x63, 0x00, 0xEF, 0xFD, 0x63, 0x05, 0x62,
-0xFF, 0x6A, 0x8C, 0xEA, 0x04, 0x2A, 0x01, 0x6C,
-0x08, 0xF0, 0x00, 0x6D, 0x05, 0x10, 0x44, 0x32,
-0xFF, 0x4A, 0x01, 0x6D, 0x02, 0x6C, 0xA4, 0xEA,
-0x00, 0x18, 0x19, 0xDD, 0x05, 0x97, 0x03, 0x63,
-0x00, 0xEF, 0x00, 0x65, 0xFD, 0x63, 0x05, 0x62,
-0xFF, 0x6A, 0x8C, 0xEA, 0x04, 0x2A, 0x01, 0x6C,
-0x04, 0xF0, 0x00, 0x6D, 0x05, 0x10, 0xFF, 0x4A,
-0x44, 0x32, 0x01, 0x6D, 0x02, 0x6C, 0xA4, 0xEA,
-0x00, 0x18, 0x19, 0xDD, 0x05, 0x97, 0x03, 0x63,
+0xFF, 0x6D, 0x8C, 0xED, 0x04, 0x2D, 0x03, 0x6C,
+0x10, 0xF0, 0x00, 0x6D, 0x05, 0x10, 0x1B, 0x4D,
+0x01, 0x6A, 0x44, 0xED, 0x03, 0x6C, 0xA2, 0x67,
+0x00, 0x18, 0x70, 0xDC, 0x05, 0x97, 0x03, 0x63,
 0x00, 0xEF, 0x00, 0x65, 0xFD, 0x63, 0x05, 0x62,
-0xFF, 0x6D, 0x8C, 0xED, 0x01, 0x6C, 0x44, 0x67,
-0x15, 0x4D, 0x44, 0xED, 0xA2, 0x67, 0x00, 0x18,
-0x98, 0xDC, 0x05, 0x97, 0x03, 0x63, 0x00, 0xEF,
-0xFD, 0x63, 0x05, 0x62, 0xFF, 0x6D, 0x8C, 0xED,
-0x04, 0x2D, 0x03, 0x6C, 0x10, 0xF0, 0x00, 0x6D,
-0x05, 0x10, 0x1B, 0x4D, 0x01, 0x6A, 0x44, 0xED,
-0x03, 0x6C, 0xA2, 0x67, 0x00, 0x18, 0x98, 0xDC,
-0x05, 0x97, 0x03, 0x63, 0x00, 0xEF, 0x00, 0x65,
+0xFF, 0x6A, 0x4C, 0xEC, 0x00, 0x18, 0xDC, 0xE5,
+0x01, 0x6D, 0x02, 0x6C, 0xA4, 0xEA, 0x00, 0x18,
+0x70, 0xDC, 0x05, 0x97, 0x03, 0x63, 0x00, 0xEF,
 0xFD, 0x63, 0x05, 0x62, 0xFF, 0x6A, 0x4C, 0xEC,
-0x00, 0x18, 0x0B, 0xE6, 0x01, 0x6D, 0x02, 0x6C,
-0xA4, 0xEA, 0x00, 0x18, 0x98, 0xDC, 0x05, 0x97,
+0x00, 0x18, 0xDC, 0xE5, 0x01, 0x6D, 0x03, 0x6C,
+0xA4, 0xEA, 0x00, 0x18, 0x70, 0xDC, 0x05, 0x97,
 0x03, 0x63, 0x00, 0xEF, 0xFD, 0x63, 0x05, 0x62,
-0xFF, 0x6A, 0x4C, 0xEC, 0x00, 0x18, 0x0B, 0xE6,
-0x01, 0x6D, 0x03, 0x6C, 0xA4, 0xEA, 0x00, 0x18,
-0x98, 0xDC, 0x05, 0x97, 0x03, 0x63, 0x00, 0xEF,
+0xFF, 0x6D, 0x8C, 0xED, 0x18, 0x4D, 0x01, 0x6A,
+0x44, 0xED, 0x00, 0x6C, 0xA2, 0x67, 0x00, 0x18,
+0x70, 0xDC, 0x05, 0x97, 0x03, 0x63, 0x00, 0xEF,
 0xFD, 0x63, 0x05, 0x62, 0xFF, 0x6D, 0x8C, 0xED,
-0x18, 0x4D, 0x01, 0x6A, 0x44, 0xED, 0x00, 0x6C,
-0xA2, 0x67, 0x00, 0x18, 0x98, 0xDC, 0x05, 0x97,
+0x01, 0x6C, 0x44, 0x67, 0x15, 0x4D, 0x44, 0xED,
+0xA2, 0x67, 0x00, 0x18, 0xA1, 0xDC, 0x05, 0x97,
 0x03, 0x63, 0x00, 0xEF, 0xFD, 0x63, 0x05, 0x62,
-0xFF, 0x6D, 0x8C, 0xED, 0x01, 0x6C, 0x44, 0x67,
-0x15, 0x4D, 0x44, 0xED, 0xA2, 0x67, 0x00, 0x18,
-0xC9, 0xDC, 0x05, 0x97, 0x03, 0x63, 0x00, 0xEF,
-0xFD, 0x63, 0x05, 0x62, 0xFF, 0x6D, 0x8C, 0xED,
-0x04, 0x2D, 0x03, 0x6C, 0x10, 0xF0, 0x00, 0x6D,
-0x05, 0x10, 0x1B, 0x4D, 0x01, 0x6A, 0x44, 0xED,
-0x03, 0x6C, 0xA2, 0x67, 0x00, 0x18, 0xC9, 0xDC,
-0x05, 0x97, 0x03, 0x63, 0x00, 0xEF, 0x00, 0x65,
+0xFF, 0x6D, 0x8C, 0xED, 0x04, 0x2D, 0x03, 0x6C,
+0x10, 0xF0, 0x00, 0x6D, 0x05, 0x10, 0x1B, 0x4D,
+0x01, 0x6A, 0x44, 0xED, 0x03, 0x6C, 0xA2, 0x67,
+0x00, 0x18, 0xA1, 0xDC, 0x05, 0x97, 0x03, 0x63,
+0x00, 0xEF, 0x00, 0x65, 0xFD, 0x63, 0x05, 0x62,
+0xFF, 0x6A, 0x4C, 0xEC, 0x00, 0x18, 0xDC, 0xE5,
+0x01, 0x6D, 0x02, 0x6C, 0xA4, 0xEA, 0x00, 0x18,
+0xA1, 0xDC, 0x05, 0x97, 0x03, 0x63, 0x00, 0xEF,
 0xFD, 0x63, 0x05, 0x62, 0xFF, 0x6A, 0x4C, 0xEC,
-0x00, 0x18, 0x0B, 0xE6, 0x01, 0x6D, 0x02, 0x6C,
-0xA4, 0xEA, 0x00, 0x18, 0xC9, 0xDC, 0x05, 0x97,
-0x03, 0x63, 0x00, 0xEF, 0xFD, 0x63, 0x05, 0x62,
-0xFF, 0x6A, 0x4C, 0xEC, 0x00, 0x18, 0x0B, 0xE6,
-0x01, 0x6D, 0x03, 0x6C, 0xA4, 0xEA, 0x00, 0x18,
-0xC9, 0xDC, 0x05, 0x97, 0x03, 0x63, 0x00, 0xEF,
-0xDE, 0x63, 0x43, 0x62, 0x42, 0xD1, 0x41, 0xD0,
-0x01, 0x6A, 0x7D, 0x67, 0x4B, 0xEA, 0x54, 0xC3,
-0x0F, 0x6A, 0x56, 0xC3, 0x10, 0x6A, 0x57, 0xC3,
-0x10, 0xF0, 0x24, 0x6A, 0x75, 0xF6, 0x54, 0x9A,
-0xFF, 0x69, 0x8C, 0xE9, 0x30, 0x31, 0x49, 0xE1,
-0x40, 0x9A, 0x30, 0xF0, 0x20, 0x68, 0x06, 0x04,
-0x04, 0xD2, 0x4E, 0xF2, 0x50, 0x98, 0x04, 0x05,
-0x04, 0x6E, 0x40, 0xEA, 0x10, 0xF0, 0x24, 0x6A,
-0x35, 0xF5, 0x4C, 0x9A, 0x07, 0x04, 0x04, 0x05,
-0x49, 0xE1, 0x40, 0x9A, 0x04, 0x6E, 0x04, 0xD2,
-0x4E, 0xF2, 0x50, 0x98, 0x40, 0xEA, 0x10, 0xF0,
-0x24, 0x6A, 0x35, 0xF5, 0x40, 0x9A, 0x08, 0x04,
-0x04, 0x05, 0x49, 0xE1, 0x40, 0x9A, 0x04, 0x6E,
-0x04, 0xD2, 0x4E, 0xF2, 0x50, 0x98, 0x40, 0xEA,
-0x10, 0xF0, 0x24, 0x6A, 0x35, 0xF5, 0x54, 0x9A,
-0x09, 0x04, 0x04, 0x05, 0x45, 0xE1, 0x40, 0x99,
+0x00, 0x18, 0xDC, 0xE5, 0x01, 0x6D, 0x03, 0x6C,
+0xA4, 0xEA, 0x00, 0x18, 0xA1, 0xDC, 0x05, 0x97,
+0x03, 0x63, 0x00, 0xEF, 0xDE, 0x63, 0x43, 0x62,
+0x42, 0xD1, 0x41, 0xD0, 0x01, 0x6A, 0x7D, 0x67,
+0x4B, 0xEA, 0x54, 0xC3, 0x0F, 0x6A, 0x56, 0xC3,
+0x10, 0x6A, 0x57, 0xC3, 0x10, 0xF0, 0x24, 0x6A,
+0xB5, 0xF5, 0x58, 0x9A, 0xFF, 0x69, 0x8C, 0xE9,
+0x30, 0x31, 0x49, 0xE1, 0x40, 0x9A, 0x30, 0xF0,
+0x20, 0x68, 0x06, 0x04, 0x04, 0xD2, 0x4E, 0xF2,
+0x50, 0x98, 0x04, 0x05, 0x04, 0x6E, 0x40, 0xEA,
+0x10, 0xF0, 0x24, 0x6A, 0x75, 0xF4, 0x50, 0x9A,
+0x07, 0x04, 0x04, 0x05, 0x49, 0xE1, 0x40, 0x9A,
 0x04, 0x6E, 0x04, 0xD2, 0x4E, 0xF2, 0x50, 0x98,
-0x40, 0xEA, 0x30, 0xF0, 0x20, 0x6A, 0xAE, 0xF2,
-0x5C, 0x9A, 0x05, 0x04, 0x40, 0xEA, 0x43, 0x97,
-0x42, 0x91, 0x41, 0x90, 0x22, 0x63, 0x00, 0xEF,
-0xFC, 0x63, 0x07, 0x62, 0x06, 0xD1, 0x05, 0xD0,
-0x10, 0xF0, 0x24, 0x6A, 0x10, 0xF0, 0x24, 0x6B,
-0x95, 0xF7, 0x50, 0x9A, 0x95, 0xF7, 0x74, 0x9B,
-0x00, 0xA2, 0x20, 0xA3, 0xFF, 0x6A, 0x4C, 0xE8,
-0x4C, 0xE9, 0x2A, 0xE8, 0x43, 0x60, 0x10, 0xF0,
-0x24, 0x6A, 0x75, 0xF6, 0x54, 0x9A, 0x10, 0x33,
-0x49, 0xE3, 0x40, 0xA2, 0xFF, 0x6B, 0x6C, 0xEA,
-0x56, 0x32, 0x6C, 0xEA, 0x07, 0x5A, 0x2C, 0x60,
-0x10, 0xF0, 0x24, 0x6B, 0x48, 0x32, 0x75, 0xF1,
-0x10, 0x4B, 0x4D, 0xE3, 0x40, 0x9B, 0x00, 0xEA,
-0x30, 0xF0, 0x20, 0x6A, 0x2F, 0xF7, 0x5A, 0xA2,
-0x1F, 0x2A, 0x30, 0xF0, 0x20, 0x6A, 0x6E, 0xF2,
-0x54, 0x9A, 0x18, 0x10, 0x30, 0xF0, 0x20, 0x6A,
-0x4E, 0xF2, 0x5C, 0x9A, 0x13, 0x10, 0x30, 0xF0,
-0x20, 0x6A, 0x6E, 0xF2, 0x40, 0x9A, 0x0E, 0x10,
-0x30, 0xF0, 0x20, 0x6A, 0x6E, 0xF2, 0x44, 0x9A,
-0x09, 0x10, 0x30, 0xF0, 0x20, 0x6A, 0x6E, 0xF2,
-0x48, 0x9A, 0x04, 0x10, 0x30, 0xF0, 0x20, 0x6A,
-0x6E, 0xF2, 0x4C, 0x9A, 0x90, 0x67, 0x40, 0xEA,
-0x01, 0x48, 0x7F, 0x6A, 0x4C, 0xE8, 0x0A, 0xE9,
-0xC2, 0x61, 0x10, 0xF0, 0x24, 0x6A, 0x95, 0xF7,
-0x50, 0x9A, 0x20, 0xC2, 0x07, 0x97, 0x06, 0x91,
-0x05, 0x90, 0x04, 0x63, 0x00, 0xEF, 0x00, 0x65,
-0xFC, 0x63, 0x07, 0x62, 0x06, 0xD1, 0x05, 0xD0,
-0x10, 0xF0, 0x24, 0x6A, 0x35, 0xF7, 0x60, 0x9A,
-0x02, 0x6C, 0x00, 0xF4, 0x00, 0x6D, 0x40, 0x9B,
-0x30, 0xF0, 0x20, 0x69, 0x8D, 0xEA, 0x40, 0xDB,
-0x10, 0xF0, 0x24, 0x6A, 0xF5, 0xF2, 0x60, 0x9A,
-0xFF, 0xF7, 0x1F, 0x6C, 0x40, 0xAB, 0x8C, 0xEA,
-0xAD, 0xEA, 0x8C, 0xEA, 0x40, 0xCB, 0x10, 0xF0,
-0x24, 0x6A, 0x95, 0xF7, 0x18, 0x9A, 0x10, 0xF0,
-0x24, 0x6B, 0x95, 0xF7, 0x1C, 0x4B, 0x40, 0x98,
-0x60, 0x9B, 0x0A, 0x6C, 0x6C, 0xEA, 0x10, 0xF0,
-0x24, 0x6B, 0x55, 0xF2, 0x60, 0x9B, 0x6D, 0xEA,
-0x40, 0xD8, 0xCE, 0xF4, 0x5C, 0x99, 0x40, 0xEA,
-0x40, 0x98, 0xDF, 0xF7, 0x01, 0x6B, 0x6B, 0xEB,
-0x6C, 0xEA, 0x10, 0xF0, 0x24, 0x6B, 0xB5, 0xF7,
-0x60, 0x9B, 0x0A, 0x6C, 0x6D, 0xEA, 0x40, 0xD8,
-0xCE, 0xF4, 0x5C, 0x99, 0x40, 0xEA, 0x10, 0xF0,
-0x24, 0x6C, 0x95, 0xF7, 0x1C, 0x4C, 0x40, 0x98,
-0x80, 0x9C, 0x8C, 0xEA, 0x40, 0xD8, 0xCE, 0xF4,
-0x5C, 0x99, 0x0A, 0x6C, 0x40, 0xEA, 0x40, 0x98,
-0x1D, 0xF0, 0x01, 0x6B, 0x6B, 0xEB, 0x6C, 0xEA,
-0x10, 0xF0, 0x24, 0x6B, 0xB5, 0xF7, 0x64, 0x9B,
-0x0A, 0x6C, 0x6D, 0xEA, 0x40, 0xD8, 0xCE, 0xF4,
-0x5C, 0x99, 0x40, 0xEA, 0x07, 0x97, 0x06, 0x91,
-0x05, 0x90, 0x04, 0x63, 0x00, 0xEF, 0x00, 0x65,
-0x10, 0xF0, 0x24, 0x6B, 0xB5, 0xF7, 0xA8, 0x9B,
-0xFF, 0x6A, 0x08, 0x6E, 0x60, 0xA5, 0xCB, 0xEE,
-0x4C, 0xEC, 0x4C, 0xEB, 0xCC, 0xEB, 0x6D, 0xEC,
-0x10, 0xF0, 0x24, 0x6B, 0xB5, 0xF7, 0x6C, 0x9B,
-0x4C, 0xEC, 0x80, 0xC5, 0x60, 0xA3, 0x6C, 0xEA,
-0x20, 0xE8, 0x00, 0x65, 0x10, 0xF0, 0x24, 0x6B,
-0xB5, 0xF7, 0xC8, 0x9B, 0xFF, 0x6A, 0x08, 0x6F,
-0x60, 0xA6, 0xEB, 0xEF, 0x4C, 0xEC, 0x4C, 0xEB,
-0xEC, 0xEB, 0x6D, 0xEC, 0x4C, 0xED, 0x4C, 0xEC,
-0x10, 0xF0, 0x24, 0x6A, 0xB5, 0xF7, 0x4C, 0x9A,
-0x80, 0xC6, 0xA0, 0xC2, 0x20, 0xE8, 0x00, 0x65,
-0xFC, 0x63, 0x07, 0x62, 0x06, 0xD1, 0x05, 0xD0,
-0x00, 0x6C, 0x00, 0x18, 0xCE, 0xE7, 0x30, 0xF0,
-0x20, 0x6A, 0xCE, 0xF2, 0x40, 0x9A, 0x01, 0x68,
-0x0B, 0xE8, 0x40, 0xEA, 0x30, 0xF0, 0x20, 0x69,
-0x01, 0xF4, 0x00, 0x6C, 0xB0, 0x67, 0x00, 0x18,
-0x34, 0xE1, 0xCE, 0xF4, 0x70, 0x99, 0x04, 0x6E,
-0xCB, 0xEE, 0x4C, 0xEE, 0x01, 0xF4, 0x00, 0x6C,
-0xB0, 0x67, 0x40, 0xEB, 0x00, 0x6C, 0xA4, 0x67,
-0xD0, 0x67, 0x00, 0x18, 0x7F, 0xE1, 0x00, 0x6C,
-0xE4, 0x67, 0x30, 0xF0, 0x20, 0x6B, 0xA4, 0x67,
-0xD0, 0x67, 0xEF, 0xF5, 0x40, 0xCB, 0x00, 0x18,
-0x92, 0xE1, 0x10, 0xF0, 0x24, 0x6A, 0x55, 0xF4,
-0x60, 0x9A, 0xFE, 0x6A, 0xB0, 0x67, 0x80, 0xA3,
-0x8C, 0xEA, 0x40, 0xC3, 0xA1, 0xF0, 0x14, 0x6C,
-0x00, 0x18, 0x34, 0xE1, 0xCE, 0xF4, 0x70, 0x99,
-0x40, 0x6E, 0xA1, 0xF0, 0x14, 0x6C, 0xB0, 0x67,
-0x4D, 0xEE, 0x40, 0xEB, 0x00, 0x18, 0x9A, 0xC9,
-0x01, 0x72, 0x06, 0x61, 0x10, 0xF0, 0x24, 0x6A,
-0xF5, 0xF2, 0x40, 0x9A, 0x3F, 0x6B, 0x60, 0xC2,
-0x10, 0xF0, 0x24, 0x6A, 0xB5, 0xF7, 0x70, 0x9A,
-0xFD, 0x6A, 0x80, 0xA3, 0x8C, 0xEA, 0x40, 0xC3,
+0x40, 0xEA, 0x10, 0xF0, 0x24, 0x6A, 0x75, 0xF4,
+0x44, 0x9A, 0x08, 0x04, 0x04, 0x05, 0x49, 0xE1,
+0x40, 0x9A, 0x04, 0x6E, 0x04, 0xD2, 0x4E, 0xF2,
+0x50, 0x98, 0x40, 0xEA, 0x10, 0xF0, 0x24, 0x6A,
+0x75, 0xF4, 0x58, 0x9A, 0x09, 0x04, 0x04, 0x05,
+0x45, 0xE1, 0x40, 0x99, 0x04, 0x6E, 0x04, 0xD2,
+0x4E, 0xF2, 0x50, 0x98, 0x40, 0xEA, 0x30, 0xF0,
+0x20, 0x6A, 0xAE, 0xF2, 0x5C, 0x9A, 0x05, 0x04,
+0x40, 0xEA, 0x43, 0x97, 0x42, 0x91, 0x41, 0x90,
+0x22, 0x63, 0x00, 0xEF, 0xFC, 0x63, 0x07, 0x62,
+0x06, 0xD1, 0x05, 0xD0, 0x10, 0xF0, 0x24, 0x6A,
+0x10, 0xF0, 0x24, 0x6B, 0xD5, 0xF6, 0x50, 0x9A,
+0xD5, 0xF6, 0x74, 0x9B, 0x00, 0xA2, 0x20, 0xA3,
+0xFF, 0x6A, 0x4C, 0xE8, 0x4C, 0xE9, 0x2A, 0xE8,
+0x43, 0x60, 0x10, 0xF0, 0x24, 0x6A, 0xB5, 0xF5,
+0x58, 0x9A, 0x10, 0x33, 0x49, 0xE3, 0x40, 0xA2,
+0xFF, 0x6B, 0x6C, 0xEA, 0x56, 0x32, 0x6C, 0xEA,
+0x07, 0x5A, 0x2C, 0x60, 0x10, 0xF0, 0x24, 0x6B,
+0x48, 0x32, 0xB5, 0xF0, 0x14, 0x4B, 0x4D, 0xE3,
+0x40, 0x9B, 0x00, 0xEA, 0x30, 0xF0, 0x20, 0x6A,
+0x2F, 0xF7, 0x5A, 0xA2, 0x1F, 0x2A, 0x30, 0xF0,
+0x20, 0x6A, 0x6E, 0xF2, 0x54, 0x9A, 0x18, 0x10,
+0x30, 0xF0, 0x20, 0x6A, 0x4E, 0xF2, 0x5C, 0x9A,
+0x13, 0x10, 0x30, 0xF0, 0x20, 0x6A, 0x6E, 0xF2,
+0x40, 0x9A, 0x0E, 0x10, 0x30, 0xF0, 0x20, 0x6A,
+0x6E, 0xF2, 0x44, 0x9A, 0x09, 0x10, 0x30, 0xF0,
+0x20, 0x6A, 0x6E, 0xF2, 0x48, 0x9A, 0x04, 0x10,
+0x30, 0xF0, 0x20, 0x6A, 0x6E, 0xF2, 0x4C, 0x9A,
+0x90, 0x67, 0x40, 0xEA, 0x01, 0x48, 0x7F, 0x6A,
+0x4C, 0xE8, 0x0A, 0xE9, 0xC2, 0x61, 0x10, 0xF0,
+0x24, 0x6A, 0xD5, 0xF6, 0x50, 0x9A, 0x20, 0xC2,
 0x07, 0x97, 0x06, 0x91, 0x05, 0x90, 0x04, 0x63,
 0x00, 0xEF, 0x00, 0x65, 0xFC, 0x63, 0x07, 0x62,
 0x06, 0xD1, 0x05, 0xD0, 0x10, 0xF0, 0x24, 0x6A,
-0xB5, 0xF7, 0x70, 0x9A, 0xFF, 0x69, 0x02, 0x6C,
-0x40, 0xA3, 0x01, 0x68, 0x0B, 0xE8, 0x2C, 0xEA,
-0x8D, 0xEA, 0x2C, 0xEA, 0x40, 0xC3, 0x10, 0xF0,
-0x24, 0x6A, 0xF5, 0xF2, 0x40, 0x9A, 0x01, 0x6B,
-0x6B, 0xEB, 0x60, 0xC2, 0x10, 0xF0, 0x24, 0x6A,
-0xB5, 0xF7, 0x54, 0x9A, 0x09, 0x6B, 0xB0, 0x67,
-0x60, 0xC2, 0x10, 0xF0, 0x24, 0x6A, 0x55, 0xF4,
-0x48, 0x9A, 0x7A, 0x6B, 0x6B, 0xEB, 0x60, 0xC2,
-0xA1, 0xF0, 0x12, 0x4C, 0x00, 0x18, 0x34, 0xE1,
-0x30, 0xF0, 0x20, 0x6C, 0xCE, 0xF4, 0x70, 0x9C,
-0x41, 0x6E, 0xCB, 0xEE, 0xB0, 0x67, 0x4C, 0xEE,
-0xA1, 0xF0, 0x14, 0x6C, 0x40, 0xEB, 0x10, 0xF0,
-0x24, 0x6A, 0x55, 0xF4, 0x60, 0x9A, 0x01, 0x6C,
-0x40, 0xA3, 0x2C, 0xEA, 0x8D, 0xEA, 0x2C, 0xEA,
-0x40, 0xC3, 0x30, 0xF0, 0x20, 0x6A, 0xCE, 0xF4,
-0x5C, 0x9A, 0x01, 0xF3, 0x01, 0x49, 0x40, 0xEA,
-0x30, 0xF0, 0x20, 0x6A, 0xEF, 0xF5, 0xE0, 0xAA,
-0x10, 0xF0, 0x24, 0x6A, 0xB5, 0xF2, 0x40, 0x9A,
-0x00, 0x6C, 0xD0, 0x67, 0x4D, 0xEF, 0xA4, 0x67,
-0x00, 0x18, 0x92, 0xE1, 0x91, 0x67, 0xB0, 0x67,
-0x00, 0x18, 0x34, 0xE1, 0x30, 0xF0, 0x20, 0x6C,
-0xCE, 0xF4, 0x70, 0x9C, 0x03, 0x6E, 0xB0, 0x67,
-0x4D, 0xEE, 0x91, 0x67, 0x40, 0xEB, 0x01, 0x6C,
-0x00, 0x18, 0xCE, 0xE7, 0x00, 0x18, 0x9D, 0xD3,
+0x75, 0xF6, 0x60, 0x9A, 0x02, 0x6C, 0x00, 0xF4,
+0x00, 0x6D, 0x40, 0x9B, 0x30, 0xF0, 0x20, 0x69,
+0x8D, 0xEA, 0x40, 0xDB, 0x10, 0xF0, 0x24, 0x6A,
+0x35, 0xF2, 0x64, 0x9A, 0xFF, 0xF7, 0x1F, 0x6C,
+0x40, 0xAB, 0x8C, 0xEA, 0xAD, 0xEA, 0x8C, 0xEA,
+0x40, 0xCB, 0x10, 0xF0, 0x24, 0x6A, 0xD5, 0xF6,
+0x18, 0x9A, 0x10, 0xF0, 0x24, 0x6B, 0xD5, 0xF6,
+0x1C, 0x4B, 0x40, 0x98, 0x60, 0x9B, 0x0A, 0x6C,
+0x6C, 0xEA, 0x10, 0xF0, 0x24, 0x6B, 0x95, 0xF1,
+0x64, 0x9B, 0x6D, 0xEA, 0x40, 0xD8, 0xCE, 0xF4,
+0x5C, 0x99, 0x40, 0xEA, 0x40, 0x98, 0xDF, 0xF7,
+0x01, 0x6B, 0x6B, 0xEB, 0x6C, 0xEA, 0x10, 0xF0,
+0x24, 0x6B, 0xF5, 0xF6, 0x60, 0x9B, 0x0A, 0x6C,
+0x6D, 0xEA, 0x40, 0xD8, 0xCE, 0xF4, 0x5C, 0x99,
+0x40, 0xEA, 0x10, 0xF0, 0x24, 0x6C, 0xD5, 0xF6,
+0x1C, 0x4C, 0x40, 0x98, 0x80, 0x9C, 0x8C, 0xEA,
+0x40, 0xD8, 0xCE, 0xF4, 0x5C, 0x99, 0x0A, 0x6C,
+0x40, 0xEA, 0x40, 0x98, 0x1D, 0xF0, 0x01, 0x6B,
+0x6B, 0xEB, 0x6C, 0xEA, 0x10, 0xF0, 0x24, 0x6B,
+0xF5, 0xF6, 0x64, 0x9B, 0x0A, 0x6C, 0x6D, 0xEA,
+0x40, 0xD8, 0xCE, 0xF4, 0x5C, 0x99, 0x40, 0xEA,
 0x07, 0x97, 0x06, 0x91, 0x05, 0x90, 0x04, 0x63,
-0x00, 0xEF, 0x00, 0x65, 0x10, 0xF0, 0x24, 0x6A,
-0xD5, 0xF7, 0x48, 0x9A, 0x30, 0xF0, 0x20, 0x6B,
-0xC0, 0xF1, 0x08, 0x4B, 0x80, 0xA2, 0xEB, 0xF6,
-0xD4, 0xA3, 0xEB, 0xF6, 0x9C, 0xC3, 0xA0, 0xAA,
-0x01, 0xF0, 0x00, 0x6C, 0xAC, 0xEC, 0x83, 0x35,
-0x03, 0x6C, 0xAE, 0x35, 0x8B, 0xEC, 0xA4, 0x35,
-0xCC, 0xEC, 0xAD, 0xEC, 0xEB, 0xF6, 0x94, 0xC3,
-0x10, 0xF0, 0x24, 0x6C, 0xD5, 0xF7, 0x8C, 0x9C,
-0xA0, 0xAC, 0xEB, 0xF6, 0xBE, 0xCB, 0xA0, 0xAA,
-0xBF, 0xF7, 0x1F, 0x6B, 0xAC, 0xEB, 0x60, 0xCA,
-0xA0, 0xAA, 0x7F, 0xF7, 0x1F, 0x6B, 0xAC, 0xEB,
-0x60, 0xCA, 0xC0, 0xAA, 0xFE, 0xF7, 0x1F, 0x6B,
-0xFF, 0xF7, 0x1F, 0x6D, 0xCC, 0xEB, 0x60, 0xCA,
-0x40, 0xAC, 0xFF, 0x6B, 0x21, 0x4B, 0xAC, 0xEA,
-0x6D, 0xEA, 0xAC, 0xEA, 0x40, 0xCC, 0x20, 0xE8,
-0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A,
-0x10, 0xF0, 0x24, 0x6B, 0xEB, 0xF6, 0x9C, 0xA2,
-0xD5, 0xF7, 0x68, 0x9B, 0x01, 0x6E, 0x80, 0xC3,
-0x10, 0xF0, 0x24, 0x6C, 0xEB, 0xF6, 0xBE, 0xAA,
-0xD5, 0xF7, 0x8C, 0x9C, 0xA0, 0xCC, 0xEB, 0xF6,
-0x54, 0xA2, 0x80, 0xAB, 0xFF, 0xF7, 0x1F, 0x6D,
-0x46, 0x32, 0xCC, 0xEA, 0xAC, 0xEC, 0x40, 0x32,
-0xFE, 0xF7, 0x1E, 0x4E, 0x4C, 0x32, 0xCC, 0xEC,
-0x8D, 0xEA, 0xAC, 0xEA, 0x40, 0xCB, 0x20, 0xE8,
-0xFD, 0x63, 0x05, 0x62, 0x04, 0xD0, 0x10, 0xF0,
-0x24, 0x6A, 0xD5, 0xF7, 0x50, 0x9A, 0xEF, 0xF7,
-0x1F, 0x68, 0x02, 0x6B, 0x40, 0xAA, 0x4C, 0xE8,
-0x30, 0xF0, 0x20, 0x6A, 0xEF, 0xF5, 0x58, 0xAA,
-0x0E, 0xEA, 0x6C, 0xEA, 0x02, 0x22, 0x00, 0x18,
-0xDA, 0xE6, 0x02, 0x6B, 0x50, 0x67, 0x6C, 0xEA,
-0x08, 0x2A, 0x30, 0xF0, 0x20, 0x6A, 0xEF, 0xF5,
-0x58, 0xAA, 0x6C, 0xEA, 0x02, 0x2A, 0x00, 0x18,
-0xDA, 0xE6, 0x30, 0xF0, 0x20, 0x6A, 0xEF, 0xF5,
-0x58, 0xAA, 0x80, 0x6B, 0x0E, 0xEA, 0x6C, 0xEA,
-0x06, 0x22, 0x0C, 0xEB, 0x04, 0x2B, 0x00, 0x6C,
-0x01, 0x6D, 0x00, 0x18, 0xA7, 0xD3, 0x30, 0xF0,
-0x20, 0x6A, 0xEF, 0xF5, 0x18, 0xCA, 0x05, 0x97,
-0x04, 0x90, 0x03, 0x63, 0x00, 0xEF, 0x00, 0x65,
-0xFD, 0x63, 0x05, 0x62, 0x04, 0xD0, 0x01, 0x74,
-0x1C, 0x60, 0x05, 0x24, 0x02, 0x74, 0x0E, 0x60,
-0x03, 0x74, 0x51, 0x60, 0x5B, 0x10, 0x10, 0xF0,
-0x24, 0x6A, 0xD5, 0xF7, 0x7C, 0x9A, 0x10, 0xF0,
-0x24, 0x6C, 0xF5, 0xF7, 0x80, 0x9C, 0x40, 0x9B,
-0x8C, 0xEA, 0x40, 0xDB, 0x10, 0xF0, 0x24, 0x6A,
-0xF5, 0xF7, 0x64, 0x9A, 0x10, 0xF0, 0x24, 0x6C,
-0x75, 0xF3, 0x9C, 0x9C, 0x40, 0x9B, 0x8C, 0xEA,
-0x44, 0x10, 0x10, 0xF0, 0x24, 0x6A, 0xD5, 0xF7,
-0x7C, 0x9A, 0x10, 0xF0, 0x24, 0x6C, 0xF5, 0xF7,
-0x80, 0x9C, 0x40, 0x9B, 0x8C, 0xEA, 0x10, 0xF0,
-0x24, 0x6C, 0xB5, 0xF2, 0x9C, 0x9C, 0x8D, 0xEA,
-0x40, 0xDB, 0x30, 0xF0, 0x20, 0x6A, 0xEF, 0xF5,
-0x58, 0xAA, 0x80, 0x6B, 0x6C, 0xEA, 0x1F, 0x22,
-0x30, 0xF0, 0x20, 0x6A, 0x48, 0xF5, 0x40, 0xA2,
-0x05, 0x5A, 0x19, 0x60, 0x01, 0x6C, 0xA4, 0x67,
-0x00, 0x18, 0xA7, 0xD3, 0x0A, 0x68, 0x01, 0x6E,
-0x00, 0x6C, 0x01, 0x6D, 0xCB, 0xEE, 0x00, 0x18,
-0x7F, 0xE1, 0x04, 0x6B, 0x4C, 0xEB, 0x02, 0x23,
-0x01, 0x68, 0x04, 0x10, 0x01, 0x6C, 0xA4, 0x67,
-0x00, 0x18, 0xA7, 0xD3, 0xFF, 0x48, 0xFF, 0x6A,
-0x4C, 0xE8, 0xED, 0x28, 0x04, 0x10, 0x00, 0x6C,
-0x01, 0x6D, 0x00, 0x18, 0xA7, 0xD3, 0x10, 0xF0,
-0x24, 0x6A, 0xF5, 0xF7, 0x64, 0x9A, 0x10, 0xF0,
-0x24, 0x6C, 0x75, 0xF3, 0x98, 0x9C, 0x40, 0x9B,
-0x8D, 0xEA, 0x40, 0xDB, 0x05, 0x97, 0x04, 0x90,
-0x03, 0x63, 0x00, 0xEF, 0xFC, 0x63, 0x07, 0x62,
-0x06, 0xD0, 0x10, 0xF0, 0x24, 0x6B, 0xD5, 0xF2,
-0x78, 0x9B, 0xE9, 0xA4, 0x48, 0xA4, 0xA0, 0xAB,
-0xE0, 0x37, 0x5D, 0xE7, 0xFF, 0xF7, 0x1F, 0x6A,
-0x4C, 0xEF, 0x4C, 0xED, 0x4A, 0xA4, 0xCB, 0xA4,
-0x02, 0x5A, 0x04, 0x61, 0x02, 0x72, 0x0B, 0x6A,
-0x30, 0x61, 0x0C, 0x10, 0x00, 0xF1, 0x01, 0x5F,
-0x2B, 0x60, 0x30, 0xF0, 0x20, 0x6B, 0x30, 0xF0,
-0x20, 0x6A, 0xAB, 0xF6, 0x03, 0x4B, 0x2B, 0xF6,
-0xE1, 0xC2, 0x0B, 0x10, 0x00, 0xF1, 0x01, 0x5F,
-0x1F, 0x60, 0x30, 0xF0, 0x20, 0x6B, 0x30, 0xF0,
-0x20, 0x6A, 0xAB, 0xF7, 0x03, 0x4B, 0x2B, 0xF6,
-0xE2, 0xC2, 0xB5, 0xE6, 0x10, 0xF0, 0x24, 0x6E,
-0x00, 0x6A, 0xF5, 0xF7, 0x08, 0x9E, 0x10, 0xF0,
-0x24, 0x6E, 0x04, 0xD2, 0x05, 0xD2, 0x75, 0xF3,
-0xD4, 0x9E, 0x30, 0xF0, 0x20, 0x6A, 0xAE, 0xF2,
-0x40, 0x9A, 0xBC, 0x35, 0x00, 0x6C, 0x15, 0xE5,
-0xD9, 0xE3, 0x40, 0xEA, 0x00, 0x6A, 0x01, 0x10,
-0x0A, 0x6A, 0x07, 0x97, 0x06, 0x90, 0x04, 0x63,
-0x00, 0xEF, 0x00, 0x65, 0xFC, 0x63, 0x07, 0x62,
-0xFF, 0x6A, 0x8C, 0xEA, 0x01, 0x2A, 0x01, 0x6A,
-0x30, 0xF0, 0x20, 0x6C, 0xC0, 0xF1, 0x08, 0x4C,
-0xCB, 0xF6, 0xDD, 0xA4, 0x38, 0x26, 0x8D, 0xE2,
-0x4B, 0xF4, 0x78, 0xA3, 0x34, 0x23, 0x10, 0xF0,
-0x24, 0x6B, 0xD5, 0xF2, 0x78, 0x9B, 0xFF, 0xF7,
-0x1F, 0x6D, 0x01, 0x72, 0x60, 0xAB, 0x6C, 0xED,
-0x03, 0x60, 0x02, 0x72, 0x08, 0x60, 0x27, 0x10,
-0x30, 0xF0, 0x20, 0x6B, 0xAB, 0xF6, 0x03, 0x4B,
-0x4B, 0xF4, 0xF9, 0xA4, 0x06, 0x10, 0x4B, 0xF4,
-0xFA, 0xA4, 0x30, 0xF0, 0x20, 0x6B, 0xAB, 0xF7,
-0x03, 0x4B, 0xE1, 0xF7, 0x1F, 0x6A, 0xAC, 0xEA,
-0x10, 0xF0, 0x24, 0x6D, 0x75, 0xF3, 0xB4, 0x9D,
-0xD9, 0xE2, 0x00, 0x6A, 0xB5, 0xE3, 0x10, 0xF0,
-0x24, 0x6B, 0x04, 0xD2, 0x05, 0xD2, 0xF5, 0xF7,
-0x68, 0x9B, 0x30, 0xF0, 0x20, 0x6A, 0xAE, 0xF2,
-0x40, 0x9A, 0xDC, 0x36, 0x00, 0x6C, 0x79, 0xE6,
-0x40, 0xEA, 0x01, 0x6A, 0x01, 0x10, 0x00, 0x6A,
-0x07, 0x97, 0x04, 0x63, 0x00, 0xEF, 0x00, 0x65,
-0xFB, 0x63, 0x09, 0x62, 0x08, 0xD1, 0x07, 0xD0,
-0xFF, 0x6A, 0x4C, 0xED, 0x4C, 0xEC, 0x4C, 0xEE,
-0xEC, 0xEA, 0x05, 0x25, 0x01, 0x75, 0x56, 0x61,
-0x08, 0x6B, 0x0C, 0x6D, 0x02, 0x10, 0x0A, 0x6B,
-0x0E, 0x6D, 0x01, 0x74, 0x1D, 0x60, 0x02, 0x74,
-0x2A, 0x60, 0x26, 0x67, 0xE1, 0x45, 0xC4, 0xED,
-0x24, 0xEB, 0x82, 0x67, 0xCD, 0xE9, 0x84, 0xEF,
-0xC1, 0x43, 0x8D, 0xE9, 0x44, 0xEE, 0x4D, 0xE9,
-0x01, 0x6A, 0x02, 0x67, 0x04, 0xEB, 0x62, 0x67,
-0x64, 0xED, 0xA2, 0x67, 0x6D, 0xE8, 0xA4, 0xEF,
-0xAD, 0xE8, 0x44, 0xEE, 0xFF, 0xF7, 0x1F, 0x6C,
-0x4D, 0xE8, 0x8C, 0xE9, 0x8C, 0xE8, 0x1E, 0x10,
-0x01, 0x6B, 0x01, 0x45, 0x22, 0x67, 0x83, 0x67,
-0x24, 0xE8, 0xC4, 0xED, 0x84, 0xE8, 0xCD, 0xE9,
-0xFF, 0xF7, 0x1F, 0x6A, 0x04, 0x67, 0x64, 0xED,
-0x4C, 0xE9, 0x6D, 0xE8, 0x0E, 0x10, 0x01, 0x6C,
-0x01, 0x43, 0x22, 0x67, 0xA4, 0x67, 0x24, 0xE8,
-0xC4, 0xEB, 0xA4, 0xE8, 0xCD, 0xE9, 0xFF, 0xF7,
-0x1F, 0x6A, 0x05, 0x67, 0x84, 0xEB, 0x4C, 0xE9,
-0x8D, 0xE8, 0x4C, 0xE8, 0x30, 0xF0, 0x20, 0x6A,
-0xEE, 0xF3, 0x4C, 0x9A, 0x38, 0x6C, 0x0F, 0xE8,
-0x04, 0xD2, 0x30, 0xF0, 0x20, 0x6A, 0xEE, 0xF3,
-0x40, 0x9A, 0x40, 0xEA, 0x4C, 0xE8, 0x04, 0x92,
-0x2D, 0xE8, 0xFF, 0xF7, 0x1F, 0x6D, 0x38, 0x6C,
-0x0C, 0xED, 0x40, 0xEA, 0x09, 0x97, 0x08, 0x91,
-0x07, 0x90, 0x05, 0x63, 0x00, 0xEF, 0x00, 0x65,
-0x30, 0xF0, 0x20, 0x6B, 0xE8, 0xF2, 0x7C, 0xA3,
-0xFF, 0x6A, 0xAC, 0xEA, 0x01, 0x73, 0x03, 0x61,
-0xAD, 0xF4, 0x00, 0x6B, 0x04, 0x10, 0x03, 0x73,
-0x04, 0x61, 0xA5, 0xF1, 0x00, 0x6B, 0x6B, 0xEB,
-0x02, 0x10, 0x60, 0xF2, 0x00, 0x6B, 0x60, 0xCC,
-0x30, 0xF0, 0x20, 0x6B, 0xE8, 0xF2, 0x7C, 0xA3,
-0x02, 0x73, 0x0A, 0x61, 0x10, 0xF0, 0x24, 0x6B,
-0x16, 0xF0, 0x74, 0x9B, 0x74, 0x6D, 0xA0, 0xC3,
-0xA0, 0xAC, 0x80, 0x6B, 0xAD, 0xEB, 0x60, 0xCC,
-0x09, 0x22, 0x60, 0xAC, 0x00, 0xF2, 0x01, 0x6A,
-0x4B, 0xEA, 0x6C, 0xEA, 0x41, 0x6B, 0x6B, 0xEB,
-0x6C, 0xEA, 0x06, 0x10, 0x60, 0xAC, 0x00, 0xF2,
-0x00, 0x6A, 0x6D, 0xEA, 0x40, 0x6B, 0x6D, 0xEA,
-0x40, 0xCC, 0x20, 0xE8, 0xFF, 0x63, 0x01, 0xD1,
-0x00, 0xD0, 0x30, 0xF0, 0x20, 0x6B, 0xE8, 0xF2,
-0x7C, 0xA3, 0xFF, 0x6A, 0x8C, 0xEA, 0x02, 0x73,
-0x70, 0x61, 0x48, 0x2A, 0x10, 0xF0, 0x24, 0x6A,
-0x16, 0xF0, 0xF8, 0x9A, 0x30, 0xF0, 0x20, 0x6A,
-0x2F, 0xF5, 0x18, 0x4A, 0x60, 0x9F, 0xA0, 0xF0,
-0x7C, 0xDA, 0x10, 0xF0, 0x24, 0x6B, 0x16, 0xF0,
-0xDC, 0x9B, 0x60, 0x9E, 0xA0, 0xF0, 0x70, 0xDA,
-0x10, 0xF0, 0x24, 0x6B, 0xD5, 0xF7, 0xBC, 0x9B,
-0x60, 0x9D, 0xA0, 0xF0, 0x74, 0xDA, 0x10, 0xF0,
-0x24, 0x6B, 0x35, 0xF6, 0x9C, 0x9B, 0x10, 0xF0,
-0x24, 0x6B, 0x55, 0xF6, 0x60, 0x9B, 0x20, 0x9C,
-0xA0, 0xF0, 0x2C, 0xDA, 0x00, 0x9B, 0xA0, 0xF0,
-0x18, 0xDA, 0x10, 0xF0, 0x24, 0x6A, 0x36, 0xF0,
-0x40, 0x9A, 0x2D, 0xEA, 0x18, 0xF0, 0x01, 0x69,
-0x2B, 0xE9, 0x2C, 0xEA, 0x10, 0xF0, 0x24, 0x69,
-0x75, 0xF7, 0x34, 0x99, 0x0D, 0xE9, 0x02, 0xF0,
-0x01, 0x68, 0x0B, 0xE8, 0x0C, 0xE9, 0x10, 0xF0,
-0x24, 0x68, 0x36, 0xF0, 0x04, 0x98, 0x00, 0xDF,
-0x04, 0x6F, 0xE0, 0xDE, 0x10, 0xF0, 0x24, 0x6E,
-0x36, 0xF0, 0xC8, 0x9E, 0xC0, 0xDD, 0x40, 0xDC,
-0x20, 0xDB, 0x27, 0x10, 0x30, 0xF0, 0x20, 0x6A,
-0x2F, 0xF5, 0x18, 0x4A, 0x10, 0xF0, 0x24, 0x6B,
-0xA0, 0xF0, 0x9C, 0x9A, 0x16, 0xF0, 0x78, 0x9B,
+0x00, 0xEF, 0x00, 0x65, 0x10, 0xF0, 0x24, 0x6B,
+0xF5, 0xF6, 0xA8, 0x9B, 0xFF, 0x6A, 0x08, 0x6E,
+0x60, 0xA5, 0xCB, 0xEE, 0x4C, 0xEC, 0x4C, 0xEB,
+0xCC, 0xEB, 0x6D, 0xEC, 0x10, 0xF0, 0x24, 0x6B,
+0xF5, 0xF6, 0x6C, 0x9B, 0x4C, 0xEC, 0x80, 0xC5,
+0x60, 0xA3, 0x6C, 0xEA, 0x20, 0xE8, 0x00, 0x65,
+0x10, 0xF0, 0x24, 0x6B, 0xF5, 0xF6, 0xC8, 0x9B,
+0xFF, 0x6A, 0x08, 0x6F, 0x60, 0xA6, 0xEB, 0xEF,
+0x4C, 0xEC, 0x4C, 0xEB, 0xEC, 0xEB, 0x6D, 0xEC,
+0x4C, 0xED, 0x4C, 0xEC, 0x10, 0xF0, 0x24, 0x6A,
+0xF5, 0xF6, 0x4C, 0x9A, 0x80, 0xC6, 0xA0, 0xC2,
+0x20, 0xE8, 0x00, 0x65, 0xFC, 0x63, 0x07, 0x62,
+0x06, 0xD1, 0x05, 0xD0, 0x00, 0x6C, 0x00, 0x18,
+0x9F, 0xE7, 0x30, 0xF0, 0x20, 0x6A, 0xCE, 0xF2,
+0x40, 0x9A, 0x01, 0x68, 0x0B, 0xE8, 0x40, 0xEA,
+0x30, 0xF0, 0x20, 0x69, 0x01, 0xF4, 0x00, 0x6C,
+0xB0, 0x67, 0x00, 0x18, 0x05, 0xE1, 0xCE, 0xF4,
+0x70, 0x99, 0x04, 0x6E, 0xCB, 0xEE, 0x4C, 0xEE,
+0x01, 0xF4, 0x00, 0x6C, 0xB0, 0x67, 0x40, 0xEB,
+0x00, 0x6C, 0xA4, 0x67, 0xD0, 0x67, 0x00, 0x18,
+0x50, 0xE1, 0x00, 0x6C, 0xE4, 0x67, 0x30, 0xF0,
+0x20, 0x6B, 0xA4, 0x67, 0xD0, 0x67, 0xEF, 0xF5,
+0x40, 0xCB, 0x00, 0x18, 0x63, 0xE1, 0x10, 0xF0,
+0x24, 0x6A, 0x95, 0xF3, 0x64, 0x9A, 0xFE, 0x6A,
+0xB0, 0x67, 0x80, 0xA3, 0x8C, 0xEA, 0x40, 0xC3,
+0xA1, 0xF0, 0x14, 0x6C, 0x00, 0x18, 0x05, 0xE1,
+0xCE, 0xF4, 0x70, 0x99, 0x40, 0x6E, 0xA1, 0xF0,
+0x14, 0x6C, 0xB0, 0x67, 0x4D, 0xEE, 0x40, 0xEB,
+0x00, 0x18, 0x9A, 0xC9, 0x01, 0x72, 0x06, 0x61,
+0x10, 0xF0, 0x24, 0x6A, 0x35, 0xF2, 0x44, 0x9A,
+0x3F, 0x6B, 0x60, 0xC2, 0x10, 0xF0, 0x24, 0x6A,
+0xF5, 0xF6, 0x70, 0x9A, 0xFD, 0x6A, 0x80, 0xA3,
+0x8C, 0xEA, 0x40, 0xC3, 0x07, 0x97, 0x06, 0x91,
+0x05, 0x90, 0x04, 0x63, 0x00, 0xEF, 0x00, 0x65,
+0xFC, 0x63, 0x07, 0x62, 0x06, 0xD1, 0x05, 0xD0,
+0x10, 0xF0, 0x24, 0x6A, 0xF5, 0xF6, 0x70, 0x9A,
+0xFF, 0x69, 0x02, 0x6C, 0x40, 0xA3, 0x01, 0x68,
+0x0B, 0xE8, 0x2C, 0xEA, 0x8D, 0xEA, 0x2C, 0xEA,
+0x40, 0xC3, 0x10, 0xF0, 0x24, 0x6A, 0x35, 0xF2,
+0x44, 0x9A, 0x01, 0x6B, 0x6B, 0xEB, 0x60, 0xC2,
+0x10, 0xF0, 0x24, 0x6A, 0xF5, 0xF6, 0x54, 0x9A,
+0x09, 0x6B, 0xB0, 0x67, 0x60, 0xC2, 0x10, 0xF0,
+0x24, 0x6A, 0x95, 0xF3, 0x4C, 0x9A, 0x7A, 0x6B,
+0x6B, 0xEB, 0x60, 0xC2, 0xA1, 0xF0, 0x12, 0x4C,
+0x00, 0x18, 0x05, 0xE1, 0x30, 0xF0, 0x20, 0x6C,
+0xCE, 0xF4, 0x70, 0x9C, 0x41, 0x6E, 0xCB, 0xEE,
+0xB0, 0x67, 0x4C, 0xEE, 0xA1, 0xF0, 0x14, 0x6C,
+0x40, 0xEB, 0x10, 0xF0, 0x24, 0x6A, 0x95, 0xF3,
+0x64, 0x9A, 0x01, 0x6C, 0x40, 0xA3, 0x2C, 0xEA,
+0x8D, 0xEA, 0x2C, 0xEA, 0x40, 0xC3, 0x30, 0xF0,
+0x20, 0x6A, 0xCE, 0xF4, 0x5C, 0x9A, 0x01, 0xF3,
+0x01, 0x49, 0x40, 0xEA, 0x30, 0xF0, 0x20, 0x6A,
+0xEF, 0xF5, 0xE0, 0xAA, 0x10, 0xF0, 0x24, 0x6A,
+0xF5, 0xF1, 0x44, 0x9A, 0x00, 0x6C, 0xD0, 0x67,
+0x4D, 0xEF, 0xA4, 0x67, 0x00, 0x18, 0x63, 0xE1,
+0x91, 0x67, 0xB0, 0x67, 0x00, 0x18, 0x05, 0xE1,
+0x30, 0xF0, 0x20, 0x6C, 0xCE, 0xF4, 0x70, 0x9C,
+0x03, 0x6E, 0xB0, 0x67, 0x4D, 0xEE, 0x91, 0x67,
+0x40, 0xEB, 0x01, 0x6C, 0x00, 0x18, 0x9F, 0xE7,
+0x00, 0x18, 0x9D, 0xD3, 0x07, 0x97, 0x06, 0x91,
+0x05, 0x90, 0x04, 0x63, 0x00, 0xEF, 0x00, 0x65,
+0x10, 0xF0, 0x24, 0x6A, 0x15, 0xF7, 0x48, 0x9A,
+0x30, 0xF0, 0x20, 0x6B, 0xC0, 0xF1, 0x08, 0x4B,
+0x80, 0xA2, 0xEB, 0xF6, 0xD4, 0xA3, 0xEB, 0xF6,
+0x9C, 0xC3, 0xA0, 0xAA, 0x01, 0xF0, 0x00, 0x6C,
+0xAC, 0xEC, 0x83, 0x35, 0x03, 0x6C, 0xAE, 0x35,
+0x8B, 0xEC, 0xA4, 0x35, 0xCC, 0xEC, 0xAD, 0xEC,
+0xEB, 0xF6, 0x94, 0xC3, 0x10, 0xF0, 0x24, 0x6C,
+0x15, 0xF7, 0x8C, 0x9C, 0xA0, 0xAC, 0xEB, 0xF6,
+0xBE, 0xCB, 0xA0, 0xAA, 0xBF, 0xF7, 0x1F, 0x6B,
+0xAC, 0xEB, 0x60, 0xCA, 0xA0, 0xAA, 0x7F, 0xF7,
+0x1F, 0x6B, 0xAC, 0xEB, 0x60, 0xCA, 0xC0, 0xAA,
+0xFE, 0xF7, 0x1F, 0x6B, 0xFF, 0xF7, 0x1F, 0x6D,
+0xCC, 0xEB, 0x60, 0xCA, 0x40, 0xAC, 0xFF, 0x6B,
+0x21, 0x4B, 0xAC, 0xEA, 0x6D, 0xEA, 0xAC, 0xEA,
+0x40, 0xCC, 0x20, 0xE8, 0x30, 0xF0, 0x20, 0x6A,
+0xC0, 0xF1, 0x08, 0x4A, 0x10, 0xF0, 0x24, 0x6B,
+0xEB, 0xF6, 0x9C, 0xA2, 0x15, 0xF7, 0x68, 0x9B,
+0x01, 0x6E, 0x80, 0xC3, 0x10, 0xF0, 0x24, 0x6C,
+0xEB, 0xF6, 0xBE, 0xAA, 0x15, 0xF7, 0x8C, 0x9C,
+0xA0, 0xCC, 0xEB, 0xF6, 0x54, 0xA2, 0x80, 0xAB,
+0xFF, 0xF7, 0x1F, 0x6D, 0x46, 0x32, 0xCC, 0xEA,
+0xAC, 0xEC, 0x40, 0x32, 0xFE, 0xF7, 0x1E, 0x4E,
+0x4C, 0x32, 0xCC, 0xEC, 0x8D, 0xEA, 0xAC, 0xEA,
+0x40, 0xCB, 0x20, 0xE8, 0xFD, 0x63, 0x05, 0x62,
+0x04, 0xD0, 0x10, 0xF0, 0x24, 0x6A, 0x15, 0xF7,
+0x50, 0x9A, 0xEF, 0xF7, 0x1F, 0x68, 0x02, 0x6B,
+0x40, 0xAA, 0x4C, 0xE8, 0x30, 0xF0, 0x20, 0x6A,
+0xEF, 0xF5, 0x58, 0xAA, 0x0E, 0xEA, 0x6C, 0xEA,
+0x02, 0x22, 0x00, 0x18, 0xAB, 0xE6, 0x02, 0x6B,
+0x50, 0x67, 0x6C, 0xEA, 0x08, 0x2A, 0x30, 0xF0,
+0x20, 0x6A, 0xEF, 0xF5, 0x58, 0xAA, 0x6C, 0xEA,
+0x02, 0x2A, 0x00, 0x18, 0xAB, 0xE6, 0x30, 0xF0,
+0x20, 0x6A, 0xEF, 0xF5, 0x58, 0xAA, 0x80, 0x6B,
+0x0E, 0xEA, 0x6C, 0xEA, 0x06, 0x22, 0x0C, 0xEB,
+0x04, 0x2B, 0x00, 0x6C, 0x01, 0x6D, 0x00, 0x18,
+0xA7, 0xD3, 0x30, 0xF0, 0x20, 0x6A, 0xEF, 0xF5,
+0x18, 0xCA, 0x05, 0x97, 0x04, 0x90, 0x03, 0x63,
+0x00, 0xEF, 0x00, 0x65, 0xFD, 0x63, 0x05, 0x62,
+0x04, 0xD0, 0x01, 0x74, 0x1C, 0x60, 0x05, 0x24,
+0x02, 0x74, 0x0E, 0x60, 0x03, 0x74, 0x51, 0x60,
+0x5B, 0x10, 0x10, 0xF0, 0x24, 0x6A, 0x15, 0xF7,
+0x7C, 0x9A, 0x10, 0xF0, 0x24, 0x6C, 0x35, 0xF7,
+0x80, 0x9C, 0x40, 0x9B, 0x8C, 0xEA, 0x40, 0xDB,
+0x10, 0xF0, 0x24, 0x6A, 0x35, 0xF7, 0x64, 0x9A,
+0x10, 0xF0, 0x24, 0x6C, 0xD5, 0xF2, 0x80, 0x9C,
+0x40, 0x9B, 0x8C, 0xEA, 0x44, 0x10, 0x10, 0xF0,
+0x24, 0x6A, 0x15, 0xF7, 0x7C, 0x9A, 0x10, 0xF0,
+0x24, 0x6C, 0x35, 0xF7, 0x80, 0x9C, 0x40, 0x9B,
+0x8C, 0xEA, 0x10, 0xF0, 0x24, 0x6C, 0x15, 0xF2,
+0x80, 0x9C, 0x8D, 0xEA, 0x40, 0xDB, 0x30, 0xF0,
+0x20, 0x6A, 0xEF, 0xF5, 0x58, 0xAA, 0x80, 0x6B,
+0x6C, 0xEA, 0x1F, 0x22, 0x30, 0xF0, 0x20, 0x6A,
+0x48, 0xF5, 0x40, 0xA2, 0x05, 0x5A, 0x19, 0x60,
+0x01, 0x6C, 0xA4, 0x67, 0x00, 0x18, 0xA7, 0xD3,
+0x0A, 0x68, 0x01, 0x6E, 0x00, 0x6C, 0x01, 0x6D,
+0xCB, 0xEE, 0x00, 0x18, 0x50, 0xE1, 0x04, 0x6B,
+0x4C, 0xEB, 0x02, 0x23, 0x01, 0x68, 0x04, 0x10,
+0x01, 0x6C, 0xA4, 0x67, 0x00, 0x18, 0xA7, 0xD3,
+0xFF, 0x48, 0xFF, 0x6A, 0x4C, 0xE8, 0xED, 0x28,
+0x04, 0x10, 0x00, 0x6C, 0x01, 0x6D, 0x00, 0x18,
+0xA7, 0xD3, 0x10, 0xF0, 0x24, 0x6A, 0x35, 0xF7,
+0x64, 0x9A, 0x10, 0xF0, 0x24, 0x6C, 0xB5, 0xF2,
+0x9C, 0x9C, 0x40, 0x9B, 0x8D, 0xEA, 0x40, 0xDB,
+0x05, 0x97, 0x04, 0x90, 0x03, 0x63, 0x00, 0xEF,
+0xFC, 0x63, 0x07, 0x62, 0x06, 0xD0, 0x10, 0xF0,
+0x24, 0x6B, 0x15, 0xF2, 0x7C, 0x9B, 0xE9, 0xA4,
+0x48, 0xA4, 0xA0, 0xAB, 0xE0, 0x37, 0x5D, 0xE7,
+0xFF, 0xF7, 0x1F, 0x6A, 0x4C, 0xEF, 0x4C, 0xED,
+0x4A, 0xA4, 0xCB, 0xA4, 0x02, 0x5A, 0x04, 0x61,
+0x02, 0x72, 0x0B, 0x6A, 0x30, 0x61, 0x0C, 0x10,
+0x00, 0xF1, 0x01, 0x5F, 0x2B, 0x60, 0x30, 0xF0,
+0x20, 0x6B, 0x30, 0xF0, 0x20, 0x6A, 0xAB, 0xF6,
+0x03, 0x4B, 0x2B, 0xF6, 0xE1, 0xC2, 0x0B, 0x10,
+0x00, 0xF1, 0x01, 0x5F, 0x1F, 0x60, 0x30, 0xF0,
+0x20, 0x6B, 0x30, 0xF0, 0x20, 0x6A, 0xAB, 0xF7,
+0x03, 0x4B, 0x2B, 0xF6, 0xE2, 0xC2, 0xB5, 0xE6,
+0x10, 0xF0, 0x24, 0x6E, 0x00, 0x6A, 0x35, 0xF7,
+0x08, 0x9E, 0x10, 0xF0, 0x24, 0x6E, 0x04, 0xD2,
+0x05, 0xD2, 0xB5, 0xF2, 0xD8, 0x9E, 0x30, 0xF0,
+0x20, 0x6A, 0xAE, 0xF2, 0x40, 0x9A, 0xBC, 0x35,
+0x00, 0x6C, 0x15, 0xE5, 0xD9, 0xE3, 0x40, 0xEA,
+0x00, 0x6A, 0x01, 0x10, 0x0A, 0x6A, 0x07, 0x97,
+0x06, 0x90, 0x04, 0x63, 0x00, 0xEF, 0x00, 0x65,
+0xFC, 0x63, 0x07, 0x62, 0xFF, 0x6A, 0x8C, 0xEA,
+0x01, 0x2A, 0x01, 0x6A, 0x30, 0xF0, 0x20, 0x6C,
+0xC0, 0xF1, 0x08, 0x4C, 0xCB, 0xF6, 0xDD, 0xA4,
+0x38, 0x26, 0x8D, 0xE2, 0x4B, 0xF4, 0x78, 0xA3,
+0x34, 0x23, 0x10, 0xF0, 0x24, 0x6B, 0x15, 0xF2,
+0x7C, 0x9B, 0xFF, 0xF7, 0x1F, 0x6D, 0x01, 0x72,
+0x60, 0xAB, 0x6C, 0xED, 0x03, 0x60, 0x02, 0x72,
+0x08, 0x60, 0x27, 0x10, 0x30, 0xF0, 0x20, 0x6B,
+0xAB, 0xF6, 0x03, 0x4B, 0x4B, 0xF4, 0xF9, 0xA4,
+0x06, 0x10, 0x4B, 0xF4, 0xFA, 0xA4, 0x30, 0xF0,
+0x20, 0x6B, 0xAB, 0xF7, 0x03, 0x4B, 0xE1, 0xF7,
+0x1F, 0x6A, 0xAC, 0xEA, 0x10, 0xF0, 0x24, 0x6D,
+0xB5, 0xF2, 0xB8, 0x9D, 0xD9, 0xE2, 0x00, 0x6A,
+0xB5, 0xE3, 0x10, 0xF0, 0x24, 0x6B, 0x04, 0xD2,
+0x05, 0xD2, 0x35, 0xF7, 0x68, 0x9B, 0x30, 0xF0,
+0x20, 0x6A, 0xAE, 0xF2, 0x40, 0x9A, 0xDC, 0x36,
+0x00, 0x6C, 0x79, 0xE6, 0x40, 0xEA, 0x01, 0x6A,
+0x01, 0x10, 0x00, 0x6A, 0x07, 0x97, 0x04, 0x63,
+0x00, 0xEF, 0x00, 0x65, 0xFB, 0x63, 0x09, 0x62,
+0x08, 0xD1, 0x07, 0xD0, 0xFF, 0x6A, 0x4C, 0xED,
+0x4C, 0xEC, 0x4C, 0xEE, 0xEC, 0xEA, 0x05, 0x25,
+0x01, 0x75, 0x56, 0x61, 0x08, 0x6B, 0x0C, 0x6D,
+0x02, 0x10, 0x0A, 0x6B, 0x0E, 0x6D, 0x01, 0x74,
+0x1D, 0x60, 0x02, 0x74, 0x2A, 0x60, 0x26, 0x67,
+0xE1, 0x45, 0xC4, 0xED, 0x24, 0xEB, 0x82, 0x67,
+0xCD, 0xE9, 0x84, 0xEF, 0xC1, 0x43, 0x8D, 0xE9,
+0x44, 0xEE, 0x4D, 0xE9, 0x01, 0x6A, 0x02, 0x67,
+0x04, 0xEB, 0x62, 0x67, 0x64, 0xED, 0xA2, 0x67,
+0x6D, 0xE8, 0xA4, 0xEF, 0xAD, 0xE8, 0x44, 0xEE,
+0xFF, 0xF7, 0x1F, 0x6C, 0x4D, 0xE8, 0x8C, 0xE9,
+0x8C, 0xE8, 0x1E, 0x10, 0x01, 0x6B, 0x01, 0x45,
+0x22, 0x67, 0x83, 0x67, 0x24, 0xE8, 0xC4, 0xED,
+0x84, 0xE8, 0xCD, 0xE9, 0xFF, 0xF7, 0x1F, 0x6A,
+0x04, 0x67, 0x64, 0xED, 0x4C, 0xE9, 0x6D, 0xE8,
+0x0E, 0x10, 0x01, 0x6C, 0x01, 0x43, 0x22, 0x67,
+0xA4, 0x67, 0x24, 0xE8, 0xC4, 0xEB, 0xA4, 0xE8,
+0xCD, 0xE9, 0xFF, 0xF7, 0x1F, 0x6A, 0x05, 0x67,
+0x84, 0xEB, 0x4C, 0xE9, 0x8D, 0xE8, 0x4C, 0xE8,
+0x30, 0xF0, 0x20, 0x6A, 0xEE, 0xF3, 0x4C, 0x9A,
+0x38, 0x6C, 0x0F, 0xE8, 0x04, 0xD2, 0x30, 0xF0,
+0x20, 0x6A, 0xEE, 0xF3, 0x40, 0x9A, 0x40, 0xEA,
+0x4C, 0xE8, 0x04, 0x92, 0x2D, 0xE8, 0xFF, 0xF7,
+0x1F, 0x6D, 0x38, 0x6C, 0x0C, 0xED, 0x40, 0xEA,
+0x09, 0x97, 0x08, 0x91, 0x07, 0x90, 0x05, 0x63,
+0x00, 0xEF, 0x00, 0x65, 0x30, 0xF0, 0x20, 0x6B,
+0xE8, 0xF2, 0x7C, 0xA3, 0xFF, 0x6A, 0xAC, 0xEA,
+0x01, 0x73, 0x03, 0x61, 0xAD, 0xF4, 0x00, 0x6B,
+0x04, 0x10, 0x03, 0x73, 0x04, 0x61, 0xA5, 0xF1,
+0x00, 0x6B, 0x6B, 0xEB, 0x02, 0x10, 0x60, 0xF2,
+0x00, 0x6B, 0x60, 0xCC, 0x30, 0xF0, 0x20, 0x6B,
+0xE8, 0xF2, 0x7C, 0xA3, 0x02, 0x73, 0x0A, 0x61,
+0x10, 0xF0, 0x24, 0x6B, 0x55, 0xF7, 0x74, 0x9B,
+0x74, 0x6D, 0xA0, 0xC3, 0xA0, 0xAC, 0x80, 0x6B,
+0xAD, 0xEB, 0x60, 0xCC, 0x09, 0x22, 0x60, 0xAC,
+0x00, 0xF2, 0x01, 0x6A, 0x4B, 0xEA, 0x6C, 0xEA,
+0x41, 0x6B, 0x6B, 0xEB, 0x6C, 0xEA, 0x06, 0x10,
+0x60, 0xAC, 0x00, 0xF2, 0x00, 0x6A, 0x6D, 0xEA,
+0x40, 0x6B, 0x6D, 0xEA, 0x40, 0xCC, 0x20, 0xE8,
+0xFF, 0x63, 0x01, 0xD1, 0x00, 0xD0, 0x30, 0xF0,
+0x20, 0x6B, 0xE8, 0xF2, 0x7C, 0xA3, 0xFF, 0x6A,
+0x8C, 0xEA, 0x02, 0x73, 0x70, 0x61, 0x48, 0x2A,
+0x10, 0xF0, 0x24, 0x6A, 0x55, 0xF7, 0xF8, 0x9A,
+0x30, 0xF0, 0x20, 0x6A, 0x2F, 0xF5, 0x18, 0x4A,
+0x60, 0x9F, 0xA0, 0xF0, 0x7C, 0xDA, 0x10, 0xF0,
+0x24, 0x6B, 0x55, 0xF7, 0xDC, 0x9B, 0x60, 0x9E,
+0xA0, 0xF0, 0x70, 0xDA, 0x10, 0xF0, 0x24, 0x6B,
+0x15, 0xF7, 0xBC, 0x9B, 0x60, 0x9D, 0xA0, 0xF0,
+0x74, 0xDA, 0x10, 0xF0, 0x24, 0x6B, 0x95, 0xF5,
+0x80, 0x9B, 0x10, 0xF0, 0x24, 0x6B, 0x95, 0xF5,
+0x64, 0x9B, 0x20, 0x9C, 0xA0, 0xF0, 0x2C, 0xDA,
+0x00, 0x9B, 0xA0, 0xF0, 0x18, 0xDA, 0x10, 0xF0,
+0x24, 0x6A, 0x75, 0xF7, 0x40, 0x9A, 0x2D, 0xEA,
+0x18, 0xF0, 0x01, 0x69, 0x2B, 0xE9, 0x2C, 0xEA,
+0x10, 0xF0, 0x24, 0x69, 0xB5, 0xF6, 0x34, 0x99,
+0x0D, 0xE9, 0x02, 0xF0, 0x01, 0x68, 0x0B, 0xE8,
+0x0C, 0xE9, 0x10, 0xF0, 0x24, 0x68, 0x75, 0xF7,
+0x04, 0x98, 0x00, 0xDF, 0x04, 0x6F, 0xE0, 0xDE,
+0x10, 0xF0, 0x24, 0x6E, 0x75, 0xF7, 0xC8, 0x9E,
+0xC0, 0xDD, 0x40, 0xDC, 0x20, 0xDB, 0x27, 0x10,
+0x30, 0xF0, 0x20, 0x6A, 0x2F, 0xF5, 0x18, 0x4A,
+0x10, 0xF0, 0x24, 0x6B, 0xA0, 0xF0, 0x9C, 0x9A,
+0x55, 0xF7, 0x78, 0x9B, 0x80, 0xDB, 0x10, 0xF0,
+0x24, 0x6B, 0xA0, 0xF0, 0x90, 0x9A, 0x55, 0xF7,
+0x7C, 0x9B, 0x80, 0xDB, 0x10, 0xF0, 0x24, 0x6B,
+0xA0, 0xF0, 0x94, 0x9A, 0x15, 0xF7, 0x7C, 0x9B,
 0x80, 0xDB, 0x10, 0xF0, 0x24, 0x6B, 0xA0, 0xF0,
-0x90, 0x9A, 0x16, 0xF0, 0x7C, 0x9B, 0x80, 0xDB,
-0x10, 0xF0, 0x24, 0x6B, 0xA0, 0xF0, 0x94, 0x9A,
-0xD5, 0xF7, 0x7C, 0x9B, 0x80, 0xDB, 0x10, 0xF0,
-0x24, 0x6B, 0xA0, 0xF0, 0x8C, 0x9A, 0x35, 0xF6,
-0x7C, 0x9B, 0x80, 0xDB, 0xA0, 0xF0, 0x78, 0x9A,
-0x10, 0xF0, 0x24, 0x6A, 0x55, 0xF6, 0x40, 0x9A,
-0x60, 0xDA, 0x01, 0x91, 0x00, 0x90, 0x01, 0x63,
-0x20, 0xE8, 0x00, 0x65, 0x10, 0xF0, 0x24, 0x6A,
-0x36, 0xF0, 0x6C, 0x9A, 0xFF, 0x6C, 0x21, 0x6D,
-0x40, 0xA3, 0x8C, 0xEA, 0xAD, 0xEA, 0x8C, 0xEA,
-0x40, 0xC3, 0x20, 0xE8, 0x30, 0xF0, 0x20, 0x6A,
-0xE8, 0xF2, 0x5C, 0xA2, 0x01, 0x72, 0x0B, 0x61,
-0x10, 0xF0, 0x24, 0x6A, 0x36, 0xF0, 0x70, 0x9A,
-0xFF, 0x6C, 0x04, 0x6D, 0x40, 0xA3, 0x8C, 0xEA,
+0x8C, 0x9A, 0x95, 0xF5, 0x60, 0x9B, 0x80, 0xDB,
+0xA0, 0xF0, 0x78, 0x9A, 0x10, 0xF0, 0x24, 0x6A,
+0x95, 0xF5, 0x44, 0x9A, 0x60, 0xDA, 0x01, 0x91,
+0x00, 0x90, 0x01, 0x63, 0x20, 0xE8, 0x00, 0x65,
+0x10, 0xF0, 0x24, 0x6A, 0x75, 0xF7, 0x6C, 0x9A,
+0xFF, 0x6C, 0x21, 0x6D, 0x40, 0xA3, 0x8C, 0xEA,
 0xAD, 0xEA, 0x8C, 0xEA, 0x40, 0xC3, 0x20, 0xE8,
-0xFA, 0x63, 0x0B, 0x62, 0x0A, 0xD1, 0x09, 0xD0,
-0xFF, 0xF7, 0x1F, 0x6B, 0xAC, 0xEB, 0x06, 0xD3,
-0x10, 0xF0, 0x24, 0x6B, 0xD5, 0xF2, 0x78, 0x9B,
-0xFF, 0x6A, 0x8C, 0xEA, 0x80, 0xAB, 0xE1, 0xF7,
-0x1F, 0x6B, 0x00, 0x68, 0x8C, 0xEB, 0x69, 0xE2,
-0x10, 0xF0, 0x24, 0x6B, 0x36, 0xF0, 0x94, 0x9B,
-0x5C, 0x32, 0x91, 0xE2, 0x04, 0xD4, 0x22, 0x10,
-0x04, 0x92, 0x40, 0x9A, 0x05, 0xD2, 0x0D, 0x28,
-0x30, 0xF0, 0x20, 0x69, 0xCE, 0xF4, 0x50, 0x99,
-0x05, 0x96, 0x01, 0x6D, 0x83, 0xF1, 0x18, 0x6C,
-0xAB, 0xED, 0x40, 0xEA, 0xCE, 0xF4, 0x50, 0x99,
-0x04, 0x10, 0x30, 0xF0, 0x20, 0x6A, 0xCE, 0xF4,
-0x50, 0x9A, 0x05, 0x96, 0x01, 0x6D, 0x83, 0xF1,
-0x18, 0x6C, 0xAB, 0xED, 0x40, 0xEA, 0x04, 0x93,
-0x01, 0x48, 0xFF, 0xF7, 0x1F, 0x6A, 0x04, 0x4B,
-0x4C, 0xE8, 0x04, 0xD3, 0x06, 0x92, 0x43, 0xE8,
-0xDB, 0x61, 0x0B, 0x97, 0x0A, 0x91, 0x09, 0x90,
-0x06, 0x63, 0x00, 0xEF, 0xDF, 0x63, 0x41, 0x62,
-0x40, 0xD0, 0x01, 0x68, 0x00, 0x6A, 0x0B, 0xE8,
-0x82, 0x67, 0x42, 0x6D, 0xD0, 0x67, 0x04, 0xD2,
-0x00, 0x18, 0x7F, 0xE1, 0x10, 0xF0, 0x24, 0x6B,
-0xB5, 0xF2, 0x60, 0x9B, 0x4C, 0xEB, 0x36, 0x2B,
-0x00, 0x6C, 0x42, 0x6D, 0xD0, 0x67, 0x00, 0x18,
-0x7F, 0xE1, 0x1F, 0xF4, 0x00, 0x6B, 0x4C, 0xEB,
-0x62, 0x32, 0x4A, 0x32, 0x2E, 0x5A, 0x04, 0xD2,
-0x02, 0x60, 0x2D, 0x72, 0x16, 0x61, 0x01, 0x6A,
-0x7D, 0x67, 0x4B, 0xEA, 0x54, 0xC3, 0x1D, 0x6A,
-0x56, 0xC3, 0x04, 0x6A, 0x57, 0xC3, 0x30, 0xF0,
-0x20, 0x6A, 0x4E, 0xF2, 0x50, 0x9A, 0x06, 0x04,
-0x04, 0x05, 0x04, 0x6E, 0x40, 0xEA, 0x30, 0xF0,
-0x20, 0x6A, 0xAE, 0xF2, 0x5C, 0x9A, 0x05, 0x04,
-0x40, 0xEA, 0x01, 0x68, 0x0B, 0xE8, 0x00, 0x6C,
-0x42, 0x6D, 0xD0, 0x67, 0x00, 0x18, 0x7F, 0xE1,
-0x10, 0xF0, 0x24, 0x6B, 0xB5, 0xF2, 0xE0, 0x9B,
-0x00, 0x6C, 0x42, 0x6D, 0xD0, 0x67, 0x4D, 0xEF,
-0x00, 0x18, 0x92, 0xE1, 0x41, 0x97, 0x40, 0x90,
-0x21, 0x63, 0x00, 0xEF, 0x3B, 0x24, 0x03, 0x80,
-0x51, 0x24, 0x03, 0x80, 0x67, 0x24, 0x03, 0x80,
-0x7D, 0x24, 0x03, 0x80, 0x97, 0x24, 0x03, 0x80,
-0xEF, 0x24, 0x03, 0x80, 0x05, 0x25, 0x03, 0x80,
-0x23, 0x25, 0x03, 0x80, 0x55, 0x25, 0x03, 0x80,
-0x7F, 0x25, 0x03, 0x80, 0x27, 0x30, 0x03, 0x80,
-0x2D, 0x30, 0x03, 0x80, 0x39, 0x30, 0x03, 0x80,
-0x45, 0x30, 0x03, 0x80, 0x51, 0x30, 0x03, 0x80,
-0xC1, 0x32, 0x03, 0x80, 0xA9, 0x33, 0x03, 0x80,
-0x23, 0x33, 0x03, 0x80, 0xA9, 0x33, 0x03, 0x80,
-0x69, 0x32, 0x03, 0x80, 0xA9, 0x33, 0x03, 0x80,
+0x30, 0xF0, 0x20, 0x6A, 0xE8, 0xF2, 0x5C, 0xA2,
+0x01, 0x72, 0x0B, 0x61, 0x10, 0xF0, 0x24, 0x6A,
+0x75, 0xF7, 0x70, 0x9A, 0xFF, 0x6C, 0x04, 0x6D,
+0x40, 0xA3, 0x8C, 0xEA, 0xAD, 0xEA, 0x8C, 0xEA,
+0x40, 0xC3, 0x20, 0xE8, 0xFA, 0x63, 0x0B, 0x62,
+0x0A, 0xD1, 0x09, 0xD0, 0xFF, 0xF7, 0x1F, 0x6B,
+0xAC, 0xEB, 0x06, 0xD3, 0x10, 0xF0, 0x24, 0x6B,
+0x15, 0xF2, 0x7C, 0x9B, 0xFF, 0x6A, 0x8C, 0xEA,
+0x80, 0xAB, 0xE1, 0xF7, 0x1F, 0x6B, 0x00, 0x68,
+0x8C, 0xEB, 0x69, 0xE2, 0x10, 0xF0, 0x24, 0x6B,
+0x75, 0xF7, 0x94, 0x9B, 0x5C, 0x32, 0x91, 0xE2,
+0x04, 0xD4, 0x22, 0x10, 0x04, 0x92, 0x40, 0x9A,
+0x05, 0xD2, 0x0D, 0x28, 0x30, 0xF0, 0x20, 0x69,
+0xCE, 0xF4, 0x50, 0x99, 0x05, 0x96, 0x01, 0x6D,
+0x83, 0xF1, 0x18, 0x6C, 0xAB, 0xED, 0x40, 0xEA,
+0xCE, 0xF4, 0x50, 0x99, 0x04, 0x10, 0x30, 0xF0,
+0x20, 0x6A, 0xCE, 0xF4, 0x50, 0x9A, 0x05, 0x96,
+0x01, 0x6D, 0x83, 0xF1, 0x18, 0x6C, 0xAB, 0xED,
+0x40, 0xEA, 0x04, 0x93, 0x01, 0x48, 0xFF, 0xF7,
+0x1F, 0x6A, 0x04, 0x4B, 0x4C, 0xE8, 0x04, 0xD3,
+0x06, 0x92, 0x43, 0xE8, 0xDB, 0x61, 0x0B, 0x97,
+0x0A, 0x91, 0x09, 0x90, 0x06, 0x63, 0x00, 0xEF,
+0xDF, 0x63, 0x41, 0x62, 0x40, 0xD0, 0x01, 0x68,
+0x00, 0x6A, 0x0B, 0xE8, 0x82, 0x67, 0x42, 0x6D,
+0xD0, 0x67, 0x04, 0xD2, 0x00, 0x18, 0x50, 0xE1,
+0x10, 0xF0, 0x24, 0x6B, 0xF5, 0xF1, 0x64, 0x9B,
+0x4C, 0xEB, 0x36, 0x2B, 0x00, 0x6C, 0x42, 0x6D,
+0xD0, 0x67, 0x00, 0x18, 0x50, 0xE1, 0x1F, 0xF4,
+0x00, 0x6B, 0x4C, 0xEB, 0x62, 0x32, 0x4A, 0x32,
+0x2E, 0x5A, 0x04, 0xD2, 0x02, 0x60, 0x2D, 0x72,
+0x16, 0x61, 0x01, 0x6A, 0x7D, 0x67, 0x4B, 0xEA,
+0x54, 0xC3, 0x1D, 0x6A, 0x56, 0xC3, 0x04, 0x6A,
+0x57, 0xC3, 0x30, 0xF0, 0x20, 0x6A, 0x4E, 0xF2,
+0x50, 0x9A, 0x06, 0x04, 0x04, 0x05, 0x04, 0x6E,
+0x40, 0xEA, 0x30, 0xF0, 0x20, 0x6A, 0xAE, 0xF2,
+0x5C, 0x9A, 0x05, 0x04, 0x40, 0xEA, 0x01, 0x68,
+0x0B, 0xE8, 0x00, 0x6C, 0x42, 0x6D, 0xD0, 0x67,
+0x00, 0x18, 0x50, 0xE1, 0x10, 0xF0, 0x24, 0x6B,
+0xF5, 0xF1, 0xE4, 0x9B, 0x00, 0x6C, 0x42, 0x6D,
+0xD0, 0x67, 0x4D, 0xEF, 0x00, 0x18, 0x63, 0xE1,
+0x41, 0x97, 0x40, 0x90, 0x21, 0x63, 0x00, 0xEF,
+0x3B, 0x24, 0x03, 0x80, 0x51, 0x24, 0x03, 0x80,
+0x67, 0x24, 0x03, 0x80, 0x7D, 0x24, 0x03, 0x80,
+0x97, 0x24, 0x03, 0x80, 0xEF, 0x24, 0x03, 0x80,
+0x05, 0x25, 0x03, 0x80, 0x23, 0x25, 0x03, 0x80,
+0x55, 0x25, 0x03, 0x80, 0x7F, 0x25, 0x03, 0x80,
+0x27, 0x30, 0x03, 0x80, 0x2D, 0x30, 0x03, 0x80,
+0x39, 0x30, 0x03, 0x80, 0x45, 0x30, 0x03, 0x80,
+0x51, 0x30, 0x03, 0x80, 0xC1, 0x32, 0x03, 0x80,
+0xA9, 0x33, 0x03, 0x80, 0x23, 0x33, 0x03, 0x80,
+0xA9, 0x33, 0x03, 0x80, 0x69, 0x32, 0x03, 0x80,
 0xA9, 0x33, 0x03, 0x80, 0xA9, 0x33, 0x03, 0x80,
-0x8B, 0x33, 0x03, 0x80, 0xA9, 0x33, 0x03, 0x80,
+0xA9, 0x33, 0x03, 0x80, 0x8B, 0x33, 0x03, 0x80,
 0xA9, 0x33, 0x03, 0x80, 0xA9, 0x33, 0x03, 0x80,
-0x03, 0x32, 0x03, 0x80, 0x57, 0x36, 0x03, 0x80,
-0x61, 0x36, 0x03, 0x80, 0x6B, 0x36, 0x03, 0x80,
-0x75, 0x36, 0x03, 0x80, 0x7F, 0x36, 0x03, 0x80,
-0xDD, 0x37, 0x03, 0x80, 0xFD, 0x37, 0x03, 0x80,
-0x1D, 0x38, 0x03, 0x80, 0x3D, 0x38, 0x03, 0x80,
-0x5D, 0x38, 0x03, 0x80, 0xF3, 0x39, 0x03, 0x80,
-0x2F, 0x3A, 0x03, 0x80, 0x75, 0x3A, 0x03, 0x80,
-0xB7, 0x3A, 0x03, 0x80, 0xFD, 0x3A, 0x03, 0x80,
-0x6B, 0x3B, 0x03, 0x80, 0x87, 0x3B, 0x03, 0x80,
-0xA9, 0x3B, 0x03, 0x80, 0xCB, 0x3B, 0x03, 0x80,
-0xEF, 0x3B, 0x03, 0x80, 0xA8, 0x06, 0x10, 0x07,
-0x00, 0x16, 0x04, 0x16, 0x08, 0x16, 0x00, 0x00,
-0x9B, 0x3E, 0x03, 0x80, 0xF7, 0x3E, 0x03, 0x80,
-0x8B, 0x3F, 0x03, 0x80, 0x1F, 0x40, 0x03, 0x80,
-0xB7, 0x40, 0x03, 0x80, 0xED, 0x44, 0x03, 0x80,
-0xE7, 0x44, 0x03, 0x80, 0xF3, 0x44, 0x03, 0x80,
-0xF9, 0x44, 0x03, 0x80, 0xFF, 0x44, 0x03, 0x80,
-0x05, 0x45, 0x03, 0x80, 0x94, 0x0C, 0x94, 0x0E,
-0x94, 0x18, 0x94, 0x1A, 0x00, 0x01, 0x02, 0x03,
-0x05, 0x00, 0x00, 0x00, 0x00, 0x01, 0x03, 0x04,
-0x05, 0x00, 0x00, 0x00, 0x09, 0x12, 0x1B, 0x24,
-0xC1, 0x51, 0x10, 0x80, 0xFF, 0x51, 0x10, 0x80,
-0xC9, 0x51, 0x10, 0x80, 0xF1, 0x51, 0x10, 0x80,
-0xFF, 0x51, 0x10, 0x80, 0xFF, 0x51, 0x10, 0x80,
-0xFF, 0x51, 0x10, 0x80, 0xD1, 0x51, 0x10, 0x80,
-0xD9, 0x51, 0x10, 0x80, 0xE1, 0x51, 0x10, 0x80,
+0xA9, 0x33, 0x03, 0x80, 0x03, 0x32, 0x03, 0x80,
+0x57, 0x36, 0x03, 0x80, 0x61, 0x36, 0x03, 0x80,
+0x6B, 0x36, 0x03, 0x80, 0x75, 0x36, 0x03, 0x80,
+0x7F, 0x36, 0x03, 0x80, 0xDD, 0x37, 0x03, 0x80,
+0xFD, 0x37, 0x03, 0x80, 0x1D, 0x38, 0x03, 0x80,
+0x3D, 0x38, 0x03, 0x80, 0x5D, 0x38, 0x03, 0x80,
+0xF3, 0x39, 0x03, 0x80, 0x2F, 0x3A, 0x03, 0x80,
+0x75, 0x3A, 0x03, 0x80, 0xB7, 0x3A, 0x03, 0x80,
+0xFD, 0x3A, 0x03, 0x80, 0x6B, 0x3B, 0x03, 0x80,
+0x87, 0x3B, 0x03, 0x80, 0xA9, 0x3B, 0x03, 0x80,
+0xCB, 0x3B, 0x03, 0x80, 0xEF, 0x3B, 0x03, 0x80,
+0xA8, 0x06, 0x10, 0x07, 0x00, 0x16, 0x04, 0x16,
+0x08, 0x16, 0x00, 0x00, 0x9B, 0x3E, 0x03, 0x80,
+0xF7, 0x3E, 0x03, 0x80, 0x8B, 0x3F, 0x03, 0x80,
+0x1F, 0x40, 0x03, 0x80, 0xB7, 0x40, 0x03, 0x80,
+0xED, 0x44, 0x03, 0x80, 0xE7, 0x44, 0x03, 0x80,
+0xF3, 0x44, 0x03, 0x80, 0xF9, 0x44, 0x03, 0x80,
+0xFF, 0x44, 0x03, 0x80, 0x05, 0x45, 0x03, 0x80,
+0x94, 0x0C, 0x94, 0x0E, 0x94, 0x18, 0x94, 0x1A,
+0x00, 0x01, 0x02, 0x03, 0x05, 0x00, 0x00, 0x00,
+0x00, 0x01, 0x03, 0x04, 0x05, 0x00, 0x00, 0x00,
+0x09, 0x12, 0x1B, 0x24, 0xC1, 0x51, 0x10, 0x80,
+0xFF, 0x51, 0x10, 0x80, 0xC9, 0x51, 0x10, 0x80,
+0xF1, 0x51, 0x10, 0x80, 0xFF, 0x51, 0x10, 0x80,
 0xFF, 0x51, 0x10, 0x80, 0xFF, 0x51, 0x10, 0x80,
-0xF9, 0x51, 0x10, 0x80, 0xFF, 0x51, 0x10, 0x80,
-0xE9, 0x51, 0x10, 0x80, 0x04, 0x08, 0x08, 0x08,
-0x08, 0x08, 0x0A, 0x0A, 0x0A, 0x00, 0x00, 0x00,
-0x00, 0x04, 0x0C, 0x14, 0x1C, 0x24, 0x2C, 0x36,
-0x40, 0x00, 0x00, 0x00, 0x27, 0x5E, 0x10, 0x80,
-0x3D, 0x5E, 0x10, 0x80, 0x27, 0x5E, 0x10, 0x80,
-0x3D, 0x5E, 0x10, 0x80, 0x27, 0x5E, 0x10, 0x80,
-0x3D, 0x5E, 0x10, 0x80, 0x6D, 0x5E, 0x10, 0x80,
+0xD1, 0x51, 0x10, 0x80, 0xD9, 0x51, 0x10, 0x80,
+0xE1, 0x51, 0x10, 0x80, 0xFF, 0x51, 0x10, 0x80,
+0xFF, 0x51, 0x10, 0x80, 0xF9, 0x51, 0x10, 0x80,
+0xFF, 0x51, 0x10, 0x80, 0xE9, 0x51, 0x10, 0x80,
+0x04, 0x08, 0x08, 0x08, 0x08, 0x08, 0x0A, 0x0A,
+0x0A, 0x00, 0x00, 0x00, 0x00, 0x04, 0x0C, 0x14,
+0x1C, 0x24, 0x2C, 0x36, 0x40, 0x00, 0x00, 0x00,
+0x27, 0x5E, 0x10, 0x80, 0x3D, 0x5E, 0x10, 0x80,
+0x27, 0x5E, 0x10, 0x80, 0x3D, 0x5E, 0x10, 0x80,
+0x27, 0x5E, 0x10, 0x80, 0x3D, 0x5E, 0x10, 0x80,
 0x6D, 0x5E, 0x10, 0x80, 0x6D, 0x5E, 0x10, 0x80,
-0x2B, 0x5E, 0x10, 0x80, 0x53, 0x5E, 0x10, 0x80,
-0x53, 0x5E, 0x10, 0x80, 0x2B, 0x5E, 0x10, 0x80,
-0x85, 0x5E, 0x10, 0x80, 0xA1, 0x5E, 0x10, 0x80,
-0x71, 0x71, 0x10, 0x80, 0xC1, 0x71, 0x10, 0x80,
-0x49, 0x72, 0x10, 0x80, 0x9F, 0x72, 0x10, 0x80,
-0xC3, 0x72, 0x10, 0x80, 0x07, 0x08, 0x09, 0x0A,
-0x0B, 0x0C, 0x0D, 0x0E, 0x0F, 0x10, 0x00, 0x00,
-0x12, 0x12, 0x14, 0x12, 0x0F, 0x0F, 0x0C, 0x0C,
-0x09, 0x08, 0x08, 0x07, 0x0A, 0x0A, 0x09, 0x07,
-0x07, 0x06, 0x05, 0x04, 0x0C, 0x0C, 0x0A, 0x0A,
-0x09, 0x07, 0x07, 0x06, 0x0C, 0x0C, 0x0A, 0x0A,
-0x09, 0x07, 0x07, 0x06, 0x0C, 0x0C, 0x0A, 0x0A,
-0x09, 0x07, 0x07, 0x06, 0x0A, 0x0A, 0x08, 0x08,
-0x08, 0x07, 0x07, 0x06, 0x04, 0x04, 0x0C, 0x0C,
+0x6D, 0x5E, 0x10, 0x80, 0x2B, 0x5E, 0x10, 0x80,
+0x53, 0x5E, 0x10, 0x80, 0x53, 0x5E, 0x10, 0x80,
+0x2B, 0x5E, 0x10, 0x80, 0x85, 0x5E, 0x10, 0x80,
+0xA1, 0x5E, 0x10, 0x80, 0x71, 0x71, 0x10, 0x80,
+0xC1, 0x71, 0x10, 0x80, 0x49, 0x72, 0x10, 0x80,
+0x9F, 0x72, 0x10, 0x80, 0xC3, 0x72, 0x10, 0x80,
+0x07, 0x08, 0x09, 0x0A, 0x0B, 0x0C, 0x0D, 0x0E,
+0x0F, 0x10, 0x00, 0x00, 0x12, 0x12, 0x14, 0x12,
+0x0F, 0x0F, 0x0C, 0x0C, 0x09, 0x08, 0x08, 0x07,
 0x0A, 0x0A, 0x09, 0x07, 0x07, 0x06, 0x05, 0x04,
-0x0C, 0x0C, 0x0A, 0x0A, 0x09, 0x07, 0x07, 0x05,
-0x04, 0x04, 0x0A, 0x0A, 0x0A, 0x0A, 0x0A, 0x0A,
-0x0A, 0x0A, 0x0A, 0x0A, 0x28, 0x28, 0x32, 0x28,
-0x1E, 0x19, 0x19, 0x19, 0x18, 0x18, 0x12, 0x0F,
-0x14, 0x1E, 0x19, 0x1E, 0x18, 0x16, 0x0C, 0x0C,
-0x1E, 0x1E, 0x19, 0x1E, 0x18, 0x16, 0x0C, 0x0C,
-0x1E, 0x1E, 0x19, 0x1C, 0x18, 0x14, 0x0C, 0x0A,
-0x1E, 0x1E, 0x19, 0x1E, 0x19, 0x18, 0x0F, 0x0E,
-0x14, 0x28, 0x21, 0x1E, 0x1A, 0x16, 0x0B, 0x10,
-0x0A, 0x0A, 0x2D, 0x28, 0x21, 0x1E, 0x1A, 0x16,
-0x0B, 0x10, 0x0A, 0x0A, 0x1E, 0x1E, 0x1E, 0x1E,
-0x18, 0x16, 0x0D, 0x0D, 0x0A, 0x08, 0x0A, 0x0A,
+0x0C, 0x0C, 0x0A, 0x0A, 0x09, 0x07, 0x07, 0x06,
+0x0C, 0x0C, 0x0A, 0x0A, 0x09, 0x07, 0x07, 0x06,
+0x0C, 0x0C, 0x0A, 0x0A, 0x09, 0x07, 0x07, 0x06,
+0x0A, 0x0A, 0x08, 0x08, 0x08, 0x07, 0x07, 0x06,
+0x04, 0x04, 0x0C, 0x0C, 0x0A, 0x0A, 0x09, 0x07,
+0x07, 0x06, 0x05, 0x04, 0x0C, 0x0C, 0x0A, 0x0A,
+0x09, 0x07, 0x07, 0x05, 0x04, 0x04, 0x0A, 0x0A,
 0x0A, 0x0A, 0x0A, 0x0A, 0x0A, 0x0A, 0x0A, 0x0A,
-0x4A, 0x40, 0x36, 0x2C, 0x24, 0x1C, 0x14, 0x0C,
-0x04, 0x00, 0x00, 0x00, 0x0B, 0x7E, 0x10, 0x80,
-0x5F, 0x7E, 0x10, 0x80, 0xED, 0x7E, 0x10, 0x80,
-0xED, 0x7F, 0x10, 0x80, 0x53, 0x7F, 0x10, 0x80,
-0x83, 0x7F, 0x10, 0x80, 0x63, 0x6F, 0x6E, 0x66,
-0x69, 0x67, 0x5F, 0x70, 0x68, 0x79, 0x64, 0x6D,
-0x5F, 0x73, 0x77, 0x69, 0x74, 0x63, 0x68, 0x5F,
-0x62, 0x61, 0x6E, 0x64, 0x77, 0x69, 0x64, 0x74,
-0x68, 0x5F, 0x38, 0x38, 0x32, 0x31, 0x63, 0x00,
+0x28, 0x28, 0x32, 0x28, 0x1E, 0x19, 0x19, 0x19,
+0x18, 0x18, 0x12, 0x0F, 0x14, 0x1E, 0x19, 0x1E,
+0x18, 0x16, 0x0C, 0x0C, 0x1E, 0x1E, 0x19, 0x1E,
+0x18, 0x16, 0x0C, 0x0C, 0x1E, 0x1E, 0x19, 0x1C,
+0x18, 0x14, 0x0C, 0x0A, 0x1E, 0x1E, 0x19, 0x1E,
+0x19, 0x18, 0x0F, 0x0E, 0x14, 0x28, 0x21, 0x1E,
+0x1A, 0x16, 0x0B, 0x10, 0x0A, 0x0A, 0x2D, 0x28,
+0x21, 0x1E, 0x1A, 0x16, 0x0B, 0x10, 0x0A, 0x0A,
+0x1E, 0x1E, 0x1E, 0x1E, 0x18, 0x16, 0x0D, 0x0D,
+0x0A, 0x08, 0x0A, 0x0A, 0x0A, 0x0A, 0x0A, 0x0A,
+0x0A, 0x0A, 0x0A, 0x0A, 0x4A, 0x40, 0x36, 0x2C,
+0x24, 0x1C, 0x14, 0x0C, 0x04, 0x00, 0x00, 0x00,
+0x0B, 0x7E, 0x10, 0x80, 0x5F, 0x7E, 0x10, 0x80,
+0xED, 0x7E, 0x10, 0x80, 0xED, 0x7F, 0x10, 0x80,
+0x53, 0x7F, 0x10, 0x80, 0x83, 0x7F, 0x10, 0x80,
 0x63, 0x6F, 0x6E, 0x66, 0x69, 0x67, 0x5F, 0x70,
 0x68, 0x79, 0x64, 0x6D, 0x5F, 0x73, 0x77, 0x69,
-0x74, 0x63, 0x68, 0x5F, 0x63, 0x68, 0x61, 0x6E,
-0x6E, 0x65, 0x6C, 0x5F, 0x38, 0x38, 0x32, 0x31,
-0x63, 0x00, 0x00, 0x00, 0x63, 0x6F, 0x6E, 0x66,
-0x69, 0x67, 0x5F, 0x70, 0x68, 0x79, 0x64, 0x6D,
-0x5F, 0x73, 0x77, 0x69, 0x74, 0x63, 0x68, 0x5F,
-0x62, 0x61, 0x6E, 0x64, 0x5F, 0x38, 0x38, 0x32,
-0x31, 0x63, 0x00, 0x00, 0x63, 0x6F, 0x6E, 0x66,
-0x69, 0x67, 0x5F, 0x70, 0x68, 0x79, 0x64, 0x6D,
-0x5F, 0x77, 0x72, 0x69, 0x74, 0x65, 0x5F, 0x72,
-0x66, 0x5F, 0x72, 0x65, 0x67, 0x5F, 0x38, 0x38,
+0x74, 0x63, 0x68, 0x5F, 0x62, 0x61, 0x6E, 0x64,
+0x77, 0x69, 0x64, 0x74, 0x68, 0x5F, 0x38, 0x38,
 0x32, 0x31, 0x63, 0x00, 0x63, 0x6F, 0x6E, 0x66,
 0x69, 0x67, 0x5F, 0x70, 0x68, 0x79, 0x64, 0x6D,
-0x5F, 0x72, 0x65, 0x61, 0x64, 0x5F, 0x72, 0x66,
-0x5F, 0x72, 0x65, 0x67, 0x5F, 0x38, 0x38, 0x32,
-0x31, 0x63, 0x00, 0x00, 0x2D, 0x87, 0x10, 0x80,
-0x47, 0x87, 0x10, 0x80, 0x57, 0x87, 0x10, 0x80,
-0x6D, 0x87, 0x10, 0x80, 0x83, 0x87, 0x10, 0x80,
-0x83, 0x87, 0x10, 0x80, 0x9F, 0x87, 0x10, 0x80,
-0x71, 0x1B, 0x03, 0x80, 0x6D, 0x1B, 0x03, 0x80,
-0x71, 0x1B, 0x03, 0x80, 0x6D, 0x1B, 0x03, 0x80,
-0x91, 0x1B, 0x03, 0x80, 0x6D, 0x1B, 0x03, 0x80,
-0x91, 0x1B, 0x03, 0x80, 0x6D, 0x1B, 0x03, 0x80,
-0xB1, 0x1B, 0x03, 0x80, 0x6D, 0x1B, 0x03, 0x80,
-0xB1, 0x1B, 0x03, 0x80, 0x6D, 0x1B, 0x03, 0x80,
-0xD1, 0x1B, 0x03, 0x80, 0x6D, 0x1B, 0x03, 0x80,
-0xD1, 0x1B, 0x03, 0x80, 0xB3, 0x63, 0x03, 0x80,
-0xC9, 0x63, 0x03, 0x80, 0xF3, 0x63, 0x03, 0x80,
-0xF3, 0x63, 0x03, 0x80, 0xF3, 0x63, 0x03, 0x80,
-0xF3, 0x63, 0x03, 0x80, 0xD5, 0x63, 0x03, 0x80,
-0xDF, 0x63, 0x03, 0x80, 0xE9, 0x63, 0x03, 0x80,
-0xF3, 0x63, 0x03, 0x80, 0xBB, 0x63, 0x03, 0x80,
-0xA9, 0x63, 0x03, 0x80, 0xE3, 0x1D, 0x03, 0x80,
-0xE7, 0x1D, 0x03, 0x80, 0xEB, 0x1D, 0x03, 0x80,
-0xEF, 0x1D, 0x03, 0x80, 0xF3, 0x1D, 0x03, 0x80,
-0x75, 0x72, 0x03, 0x80, 0x97, 0x72, 0x03, 0x80,
-0xB9, 0x72, 0x03, 0x80, 0xDB, 0x72, 0x03, 0x80,
-0xFF, 0x72, 0x03, 0x80, 0x39, 0x73, 0x03, 0x80,
-0x5D, 0x73, 0x03, 0x80, 0x81, 0x73, 0x03, 0x80,
-0xA5, 0x73, 0x03, 0x80, 0xCB, 0x73, 0x03, 0x80,
-0xD1, 0x75, 0x03, 0x80, 0xE7, 0x75, 0x03, 0x80,
-0x09, 0x76, 0x03, 0x80, 0x2F, 0x76, 0x03, 0x80,
-0x55, 0x76, 0x03, 0x80, 0x31, 0x7A, 0x03, 0x80,
-0x31, 0x7A, 0x03, 0x80, 0x31, 0x7A, 0x03, 0x80,
-0x4B, 0x7A, 0x03, 0x80, 0x31, 0x7A, 0x03, 0x80,
-0x31, 0x7A, 0x03, 0x80, 0x31, 0x7A, 0x03, 0x80,
-0x2D, 0x7A, 0x03, 0x80, 0x2D, 0x7A, 0x03, 0x80,
-0x2D, 0x7A, 0x03, 0x80, 0x2D, 0x7A, 0x03, 0x80,
-0x2D, 0x7A, 0x03, 0x80, 0xA9, 0x7A, 0x03, 0x80,
-0xB3, 0x7A, 0x03, 0x80, 0x8D, 0x20, 0x03, 0x80,
+0x5F, 0x73, 0x77, 0x69, 0x74, 0x63, 0x68, 0x5F,
+0x63, 0x68, 0x61, 0x6E, 0x6E, 0x65, 0x6C, 0x5F,
+0x38, 0x38, 0x32, 0x31, 0x63, 0x00, 0x00, 0x00,
+0x63, 0x6F, 0x6E, 0x66, 0x69, 0x67, 0x5F, 0x70,
+0x68, 0x79, 0x64, 0x6D, 0x5F, 0x73, 0x77, 0x69,
+0x74, 0x63, 0x68, 0x5F, 0x62, 0x61, 0x6E, 0x64,
+0x5F, 0x38, 0x38, 0x32, 0x31, 0x63, 0x00, 0x00,
+0x63, 0x6F, 0x6E, 0x66, 0x69, 0x67, 0x5F, 0x70,
+0x68, 0x79, 0x64, 0x6D, 0x5F, 0x77, 0x72, 0x69,
+0x74, 0x65, 0x5F, 0x72, 0x66, 0x5F, 0x72, 0x65,
+0x67, 0x5F, 0x38, 0x38, 0x32, 0x31, 0x63, 0x00,
+0x63, 0x6F, 0x6E, 0x66, 0x69, 0x67, 0x5F, 0x70,
+0x68, 0x79, 0x64, 0x6D, 0x5F, 0x72, 0x65, 0x61,
+0x64, 0x5F, 0x72, 0x66, 0x5F, 0x72, 0x65, 0x67,
+0x5F, 0x38, 0x38, 0x32, 0x31, 0x63, 0x00, 0x00,
+0x2D, 0x87, 0x10, 0x80, 0x47, 0x87, 0x10, 0x80,
+0x57, 0x87, 0x10, 0x80, 0x6D, 0x87, 0x10, 0x80,
+0x83, 0x87, 0x10, 0x80, 0x83, 0x87, 0x10, 0x80,
+0x9F, 0x87, 0x10, 0x80, 0x71, 0x1B, 0x03, 0x80,
+0x6D, 0x1B, 0x03, 0x80, 0x71, 0x1B, 0x03, 0x80,
+0x6D, 0x1B, 0x03, 0x80, 0x91, 0x1B, 0x03, 0x80,
+0x6D, 0x1B, 0x03, 0x80, 0x91, 0x1B, 0x03, 0x80,
+0x6D, 0x1B, 0x03, 0x80, 0xB1, 0x1B, 0x03, 0x80,
+0x6D, 0x1B, 0x03, 0x80, 0xB1, 0x1B, 0x03, 0x80,
+0x6D, 0x1B, 0x03, 0x80, 0xD1, 0x1B, 0x03, 0x80,
+0x6D, 0x1B, 0x03, 0x80, 0xD1, 0x1B, 0x03, 0x80,
+0x13, 0x63, 0x03, 0x80, 0x29, 0x63, 0x03, 0x80,
+0x53, 0x63, 0x03, 0x80, 0x53, 0x63, 0x03, 0x80,
+0x53, 0x63, 0x03, 0x80, 0x53, 0x63, 0x03, 0x80,
+0x35, 0x63, 0x03, 0x80, 0x3F, 0x63, 0x03, 0x80,
+0x49, 0x63, 0x03, 0x80, 0x53, 0x63, 0x03, 0x80,
+0x1B, 0x63, 0x03, 0x80, 0x09, 0x63, 0x03, 0x80,
+0xE3, 0x1D, 0x03, 0x80, 0xE7, 0x1D, 0x03, 0x80,
+0xEB, 0x1D, 0x03, 0x80, 0xEF, 0x1D, 0x03, 0x80,
+0xF3, 0x1D, 0x03, 0x80, 0xD5, 0x71, 0x03, 0x80,
+0xF7, 0x71, 0x03, 0x80, 0x19, 0x72, 0x03, 0x80,
+0x3B, 0x72, 0x03, 0x80, 0x5F, 0x72, 0x03, 0x80,
+0x99, 0x72, 0x03, 0x80, 0xBD, 0x72, 0x03, 0x80,
+0xE1, 0x72, 0x03, 0x80, 0x05, 0x73, 0x03, 0x80,
+0x2B, 0x73, 0x03, 0x80, 0x31, 0x75, 0x03, 0x80,
+0x47, 0x75, 0x03, 0x80, 0x69, 0x75, 0x03, 0x80,
+0x8F, 0x75, 0x03, 0x80, 0xB5, 0x75, 0x03, 0x80,
+0x91, 0x79, 0x03, 0x80, 0x91, 0x79, 0x03, 0x80,
+0x91, 0x79, 0x03, 0x80, 0xAB, 0x79, 0x03, 0x80,
+0x91, 0x79, 0x03, 0x80, 0x91, 0x79, 0x03, 0x80,
+0x91, 0x79, 0x03, 0x80, 0x8D, 0x79, 0x03, 0x80,
+0x8D, 0x79, 0x03, 0x80, 0x8D, 0x79, 0x03, 0x80,
+0x8D, 0x79, 0x03, 0x80, 0x8D, 0x79, 0x03, 0x80,
+0x09, 0x7A, 0x03, 0x80, 0x13, 0x7A, 0x03, 0x80,
+0x8D, 0x20, 0x03, 0x80, 0x8D, 0x20, 0x03, 0x80,
 0x8D, 0x20, 0x03, 0x80, 0x8D, 0x20, 0x03, 0x80,
-0x8D, 0x20, 0x03, 0x80, 0xAD, 0x20, 0x03, 0x80,
 0xAD, 0x20, 0x03, 0x80, 0xAD, 0x20, 0x03, 0x80,
-0xAD, 0x20, 0x03, 0x80, 0xCD, 0x20, 0x03, 0x80,
+0xAD, 0x20, 0x03, 0x80, 0xAD, 0x20, 0x03, 0x80,
+0xCD, 0x20, 0x03, 0x80, 0xCD, 0x20, 0x03, 0x80,
 0xCD, 0x20, 0x03, 0x80, 0xCD, 0x20, 0x03, 0x80,
-0xCD, 0x20, 0x03, 0x80, 0xED, 0x20, 0x03, 0x80,
 0xED, 0x20, 0x03, 0x80, 0xED, 0x20, 0x03, 0x80,
-0xED, 0x20, 0x03, 0x80, 0x8F, 0x8C, 0x03, 0x80,
-0x9F, 0x8C, 0x03, 0x80, 0xA9, 0x8C, 0x03, 0x80,
-0xB3, 0x8C, 0x03, 0x80, 0xC5, 0x8C, 0x03, 0x80,
-0x01, 0x9B, 0x03, 0x80, 0x33, 0x9B, 0x03, 0x80,
-0x15, 0x9B, 0x03, 0x80, 0x3D, 0x9B, 0x03, 0x80,
-0x1F, 0x9B, 0x03, 0x80, 0x49, 0x9B, 0x03, 0x80,
-0x29, 0x9B, 0x03, 0x80, 0xFC, 0x10, 0x60, 0xB8,
-0xFA, 0xFA, 0xFA, 0xFA, 0x8C, 0x04, 0x64, 0xB8,
-0x90, 0x04, 0x64, 0xB8, 0x94, 0x04, 0x64, 0xB8,
-0x98, 0x04, 0x64, 0xB8, 0x9C, 0x04, 0x64, 0xB8,
-0xA0, 0x04, 0x64, 0xB8, 0x01, 0x06, 0x64, 0xB8,
-0x00, 0x00, 0x68, 0x18, 0x48, 0x00, 0x68, 0x18,
-0x48, 0x04, 0x68, 0x18, 0x00, 0x00, 0x60, 0xB8,
-0x00, 0x00, 0x64, 0xB8, 0x54, 0x05, 0x64, 0xB8,
-0x50, 0x05, 0x64, 0xB8, 0x51, 0x05, 0x64, 0xB8,
-0x78, 0x05, 0x64, 0xB8, 0x79, 0x05, 0x64, 0xB8,
-0x7A, 0x05, 0x64, 0xB8, 0xFF, 0xFF, 0xFF, 0x8F,
-0x60, 0x05, 0x60, 0xB8, 0x60, 0x05, 0x64, 0xB8,
-0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x20,
-0x00, 0x00, 0x00, 0x30, 0x00, 0x00, 0x00, 0x40,
-0xBF, 0x01, 0x64, 0xB8, 0x89, 0x00, 0x60, 0xB8,
-0x8A, 0x00, 0x60, 0xB8, 0x1A, 0x04, 0x64, 0xB8,
-0x1B, 0x04, 0x64, 0xB8, 0x87, 0x02, 0x64, 0xB8,
-0x96, 0x02, 0x64, 0xB8, 0x86, 0x02, 0x64, 0xB8,
-0xF8, 0x10, 0x60, 0xB8, 0x00, 0x00, 0x40, 0x00,
-0xF0, 0x11, 0x64, 0xB8, 0x58, 0x05, 0x64, 0xB8,
-0x01, 0x00, 0x60, 0xB8, 0x01, 0x00, 0x64, 0xB8,
-0x57, 0x01, 0x64, 0xB8, 0x3C, 0x01, 0x64, 0xB8,
-0x22, 0x05, 0x64, 0xB8, 0x00, 0x00, 0x01, 0x00,
-0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x04, 0x00,
-0x00, 0x00, 0x08, 0x00, 0x0A, 0x06, 0x64, 0xB8,
-0x5B, 0x01, 0x64, 0xB8, 0xFE, 0x11, 0x64, 0xB8,
-0xA8, 0x06, 0x64, 0xB8, 0x10, 0x07, 0x64, 0xB8,
-0x00, 0x16, 0x64, 0xB8, 0x04, 0x16, 0x64, 0xB8,
-0x08, 0x16, 0x64, 0xB8, 0xAB, 0x06, 0x64, 0xB8,
-0xAA, 0x06, 0x64, 0xB8, 0x13, 0x07, 0x64, 0xB8,
-0x12, 0x07, 0x64, 0xB8, 0x03, 0x16, 0x64, 0xB8,
-0x02, 0x16, 0x64, 0xB8, 0x07, 0x16, 0x64, 0xB8,
-0x06, 0x16, 0x64, 0xB8, 0x0B, 0x16, 0x64, 0xB8,
-0x0A, 0x16, 0x64, 0xB8, 0xFC, 0x11, 0x64, 0xB8,
-0x00, 0x00, 0x1E, 0x00, 0x00, 0x00, 0x06, 0x00,
-0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x30, 0x00,
-0x00, 0x00, 0x00, 0x03, 0xB1, 0x05, 0x64, 0xB8,
-0x22, 0x00, 0x60, 0xB8, 0x04, 0x06, 0x64, 0xB8,
-0xFF, 0xFF, 0xFF, 0xFE, 0x00, 0x00, 0x00, 0x01,
-0x60, 0x16, 0x64, 0xB8, 0x09, 0x00, 0x78, 0xB8,
-0x31, 0x00, 0x78, 0xB8, 0x14, 0x00, 0x78, 0xB8,
-0x1D, 0x04, 0x64, 0xB8, 0x7A, 0x04, 0x64, 0xB8,
-0x24, 0x04, 0x64, 0xB8, 0x4D, 0x01, 0x64, 0xB8,
-0x00, 0x01, 0x64, 0xB8, 0x04, 0x02, 0x64, 0xB8,
-0x08, 0x02, 0x64, 0xB8, 0x56, 0x04, 0x64, 0xB8,
-0x04, 0x00, 0x70, 0xB8, 0x0A, 0x00, 0x70, 0xB8,
-0x34, 0x00, 0x78, 0xB8, 0x18, 0x11, 0x64, 0xB8,
-0x55, 0x00, 0x78, 0xB8, 0x56, 0x00, 0x78, 0xB8,
-0x40, 0x00, 0x78, 0xB8, 0x1C, 0x04, 0x64, 0xB8,
-0x10, 0x00, 0x70, 0xB8, 0x4C, 0x04, 0x64, 0xB8,
-0x4D, 0x04, 0x64, 0xB8, 0x16, 0x00, 0x70, 0xB8,
-0x4E, 0x04, 0x64, 0xB8, 0x17, 0x00, 0x70, 0xB8,
-0x4F, 0x04, 0x64, 0xB8, 0xC7, 0x01, 0x64, 0xB8,
-0xA4, 0x01, 0x64, 0xB8, 0x1C, 0x01, 0x64, 0xB8,
-0xFF, 0xFF, 0x03, 0x00, 0x84, 0x02, 0x64, 0xB8,
-0x52, 0x05, 0x64, 0xB8, 0x20, 0x04, 0x64, 0xB8,
-0xFF, 0xFF, 0xEF, 0xFF, 0x5F, 0x11, 0x64, 0xB8,
-0x88, 0x00, 0x60, 0xB8, 0x8B, 0x00, 0x60, 0xB8,
-0x84, 0x00, 0x60, 0xB8, 0x00, 0x00, 0x00, 0x02,
-0xCB, 0x01, 0x64, 0xB8, 0x00, 0x00, 0x00, 0x60,
-0xE0, 0x00, 0x60, 0xB8, 0xE1, 0x00, 0x60, 0xB8,
-0xE8, 0x12, 0x64, 0xB8, 0x00, 0x00, 0x00, 0x80,
-0x00, 0x00, 0x00, 0x04, 0xFF, 0xFF, 0xFF, 0xFB,
-0xFF, 0xFF, 0xFF, 0xDF, 0xFF, 0xFF, 0xFF, 0x1F,
-0x04, 0x00, 0x60, 0xB8, 0x04, 0x00, 0x64, 0xB8,
-0x08, 0x00, 0x60, 0xB8, 0x08, 0x00, 0x64, 0xB8,
-0x24, 0x00, 0x60, 0xB8, 0x80, 0x00, 0x60, 0xB8,
-0xFF, 0xFF, 0xFD, 0xFF, 0xCC, 0x07, 0x64, 0xB8,
-0x82, 0x10, 0x60, 0xB8, 0x42, 0x34, 0x00, 0xB8,
-0x00, 0x0C, 0x01, 0x00, 0x08, 0x00, 0x00, 0xF8,
-0x08, 0x70, 0x0A, 0xF8, 0x08, 0x50, 0x01, 0xF8,
-0x00, 0x00, 0x1F, 0x00, 0x00, 0x00, 0x00, 0xC0,
-0x1A, 0x15, 0x64, 0xB8, 0x77, 0x77, 0x77, 0x77,
-0x17, 0x11, 0x17, 0x77, 0x00, 0x00, 0x00, 0x3E,
-0x00, 0x00, 0xE0, 0xFF, 0x00, 0x1C, 0x01, 0x88,
-0x01, 0x00, 0x00, 0xE0, 0x00, 0x00, 0xFF, 0x0F,
-0x21, 0x00, 0x00, 0xE0, 0x00, 0x00, 0x00, 0xFF,
-0x08, 0x00, 0x45, 0x01, 0x88, 0x0C, 0x46, 0x01,
-0xFF, 0xFF, 0x0F, 0x00, 0xBA, 0xCB, 0x08, 0x00,
-0x18, 0x80, 0x0A, 0x00, 0x68, 0x10, 0x46, 0x01,
-0xF3, 0x10, 0x05, 0x00, 0x00, 0x9C, 0x0A, 0x00,
-0x08, 0x00, 0x45, 0x00, 0x68, 0x14, 0x46, 0x00,
-0x08, 0x00, 0x84, 0x00, 0xBA, 0xCB, 0x0B, 0x00,
-0x18, 0xC0, 0x0A, 0x00, 0x08, 0x00, 0x44, 0x01,
-0xF3, 0x0E, 0x05, 0x00, 0x18, 0xDC, 0x0A, 0x00,
-0xC8, 0x0E, 0x05, 0x00, 0x18, 0x9C, 0x0A, 0x00,
-0x00, 0x00, 0xF0, 0x0F, 0x00, 0x00, 0x00, 0x0F,
-0x02, 0x00, 0x60, 0xB8, 0x62, 0x06, 0x64, 0xB8,
-0xB4, 0x06, 0x64, 0xB8, 0x06, 0x00, 0x00, 0x89,
-0x00, 0x00, 0x00, 0x50, 0x40, 0x00, 0x0F, 0x70,
-0x02, 0x04, 0x00, 0xD8, 0x20, 0x01, 0x00, 0xD1,
-0x40, 0x80, 0x0B, 0x70, 0x02, 0x04, 0x02, 0xD8,
-0x20, 0x01, 0x00, 0xDE, 0x03, 0x29, 0x29, 0x00,
-0x48, 0x00, 0x46, 0x01, 0x60, 0x10, 0x05, 0x00,
-0xDE, 0x0F, 0x0E, 0x00, 0xCE, 0xEF, 0x0D, 0x00,
-0xCE, 0xEF, 0x05, 0x00, 0xFF, 0x3F, 0x0E, 0x00,
-0x1F, 0xFF, 0x0F, 0x00, 0xE7, 0x0E, 0x05, 0x00,
-0xE8, 0x0E, 0x05, 0x00, 0x45, 0x23, 0x01, 0x00,
-0x08, 0x08, 0x00, 0xF8, 0x08, 0x07, 0x00, 0xF8,
-0x08, 0x02, 0x00, 0xF8, 0x08, 0x03, 0x00, 0xF8,
-0x18, 0x00, 0x00, 0xF8, 0xDE, 0xBC, 0x0A, 0x00,
-0x01, 0x00, 0x66, 0xB8, 0x00, 0x00, 0x66, 0xB8,
-0xCD, 0x9B, 0x78, 0x56, 0x00, 0x1C, 0x66, 0xB8,
-0x04, 0x1C, 0x66, 0xB8, 0xFF, 0xFF, 0x3F, 0x00,
-0x1F, 0x00, 0x60, 0xB8, 0x04, 0xEA, 0xEF, 0xFD,
-0x07, 0xEA, 0xEF, 0xFD, 0x08, 0xEA, 0xEF, 0xFD,
-0x09, 0xEA, 0xEF, 0xFD, 0x0A, 0xEA, 0xEF, 0xFD,
-0x53, 0x04, 0x64, 0xB8, 0xF0, 0x10, 0x60, 0xB8,
-0xCA, 0x04, 0x64, 0xB8, 0xCF, 0x04, 0x64, 0xB8,
-0xF1, 0x10, 0x60, 0xB8, 0x06, 0x00, 0x66, 0xB8,
-0x52, 0x04, 0x64, 0xB8, 0x50, 0x04, 0x64, 0xB8,
-0x51, 0x04, 0x64, 0xB8, 0x01, 0x1C, 0x66, 0xB8,
-0x02, 0x1C, 0x66, 0xB8, 0x03, 0x1C, 0x66, 0xB8,
-0x05, 0x1C, 0x66, 0xB8, 0x06, 0x1C, 0x66, 0xB8,
-0x07, 0x1C, 0x66, 0xB8, 0x02, 0x10, 0x66, 0xB8,
-0x08, 0x10, 0x66, 0xB8, 0x03, 0x10, 0x66, 0xB8,
-0x09, 0x10, 0x66, 0xB8, 0x04, 0x10, 0x66, 0xB8,
-0x05, 0x10, 0x66, 0xB8, 0x0C, 0x10, 0x66, 0xB8,
-0x0D, 0x10, 0x66, 0xB8, 0x06, 0x10, 0x66, 0xB8,
-0xFF, 0xFF, 0x0B, 0xFF, 0x00, 0x00, 0x70, 0x00,
-0xFF, 0xFF, 0x7A, 0xFF, 0x00, 0x00, 0xD0, 0x00,
-0xFF, 0xFF, 0xDA, 0xFF, 0xFF, 0xFF, 0xFF, 0x0F,
-0x00, 0xFC, 0xCF, 0xFF, 0x00, 0x00, 0x01, 0x10,
-0x00, 0xF3, 0x3F, 0xFF, 0x01, 0x00, 0x02, 0x20,
-0x00, 0xCF, 0xFF, 0xFC, 0x02, 0x00, 0x04, 0x40,
-0x00, 0xFC, 0xCE, 0xEF, 0x40, 0x02, 0x20, 0x00,
-0x80, 0x03, 0x30, 0x00, 0x00, 0xFF, 0xF9, 0xFF,
-0x00, 0x00, 0xFE, 0x1F, 0x1C, 0x0C, 0xB8, 0x64,
-0x67, 0x56, 0x23, 0x01, 0xFF, 0xFF, 0xF7, 0xFF,
-0xFF, 0xFC, 0xFE, 0xFF, 0x00, 0x01, 0x01, 0x00,
-0x00, 0x00, 0x80, 0x01, 0xCC, 0x06, 0x64, 0xB8,
-0x68, 0x05, 0x64, 0xB8, 0x40, 0x42, 0x0F, 0x00,
-0x00, 0x04, 0x64, 0xB8, 0x04, 0x04, 0x64, 0xB8,
-0x08, 0x04, 0x64, 0xB8, 0x0C, 0x04, 0x64, 0xB8,
-0x68, 0x04, 0x64, 0xB8, 0x6C, 0x04, 0x64, 0xB8,
-0x70, 0x04, 0x64, 0xB8, 0x74, 0x04, 0x64, 0xB8,
-0x00, 0x00, 0x3C, 0x00, 0x6B, 0x01, 0x64, 0xB8,
-0x00, 0x00, 0x70, 0xB8, 0x18, 0x00, 0x70, 0xB8,
-0x0B, 0x00, 0x70, 0xB8, 0x02, 0x00, 0x70, 0xB8,
-0x94, 0x02, 0x64, 0xB8, 0x97, 0x02, 0x64, 0xB8,
-0x54, 0x02, 0x64, 0xB8, 0x50, 0x02, 0x64, 0xB8,
-0x4C, 0x02, 0x64, 0xB8, 0x00, 0x00, 0x78, 0xB8,
-0x04, 0x00, 0x78, 0xB8, 0x48, 0x02, 0x64, 0xB8,
-0x44, 0x02, 0x64, 0xB8, 0xCC, 0x01, 0x64, 0xB8,
-0xF4, 0x11, 0x64, 0xB8, 0xF5, 0x11, 0x64, 0xB8,
-0xD4, 0x04, 0x60, 0xB8, 0xD4, 0x04, 0x64, 0xB8,
-0x84, 0x04, 0x60, 0xB8, 0x84, 0x04, 0x64, 0xB8,
-0xC8, 0x04, 0x60, 0xB8, 0xC8, 0x04, 0x64, 0xB8,
-0x78, 0x04, 0x60, 0xB8, 0x78, 0x04, 0x64, 0xB8,
-0xCF, 0x01, 0x64, 0xB8, 0x34, 0x01, 0x64, 0xB8,
-0x64, 0x05, 0x64, 0xB8, 0x44, 0x00, 0x60, 0xB8,
-0x60, 0x00, 0x60, 0xB8, 0xBE, 0x05, 0x64, 0xB8,
-0x01, 0xEA, 0xEF, 0xFD, 0x02, 0xEA, 0xEF, 0xFD,
-0xC8, 0x01, 0x64, 0xB8, 0xC9, 0x01, 0x64, 0xB8,
-0xA0, 0x01, 0x64, 0xB8, 0xFF, 0xFF, 0xFF, 0x00,
-0x00, 0x00, 0x00, 0x05, 0x64, 0x01, 0x64, 0xB8,
-0x53, 0x05, 0x64, 0xB8, 0x77, 0x05, 0x64, 0xB8,
-0x94, 0x01, 0x64, 0xB8, 0x00, 0x10, 0x66, 0xB8,
-0x54, 0x00, 0x60, 0xB8, 0x50, 0x00, 0x60, 0xB8,
-0x9A, 0x01, 0x64, 0xB8, 0x99, 0x01, 0x64, 0xB8,
-0xC6, 0x01, 0x64, 0xB8, 0x30, 0x01, 0x64, 0xB8,
-0x24, 0x01, 0x64, 0xB8, 0x20, 0x01, 0x64, 0xB8,
-0x24, 0x11, 0x64, 0xB8, 0x20, 0x11, 0x64, 0xB8,
-0x2C, 0x11, 0x64, 0xB8, 0x28, 0x11, 0x64, 0xB8,
-0x34, 0x11, 0x64, 0xB8, 0x30, 0x11, 0x64, 0xB8,
-0x38, 0x01, 0x64, 0xB8, 0x3C, 0x11, 0x64, 0xB8,
-0x38, 0x11, 0x64, 0xB8, 0xE4, 0x11, 0x64, 0xB8,
-0xE0, 0x11, 0x64, 0xB8, 0x00, 0x40, 0xE0, 0x03,
-0x01, 0x60, 0x00, 0x03, 0xE0, 0x04, 0x64, 0xB8,
-0xE3, 0x04, 0x64, 0xB8, 0xE0, 0x12, 0x64, 0xB8,
-0x02, 0x01, 0x64, 0xB8, 0x21, 0x05, 0x64, 0xB8,
-0x40, 0x11, 0x64, 0xB8, 0x44, 0x11, 0x64, 0xB8,
-0x48, 0x11, 0x64, 0xB8, 0x4C, 0x11, 0x64, 0xB8,
-0xB4, 0x00, 0x60, 0xB8, 0x2F, 0x01, 0x64, 0xB8,
+0xED, 0x20, 0x03, 0x80, 0xED, 0x20, 0x03, 0x80,
+0xD3, 0x8B, 0x03, 0x80, 0xE3, 0x8B, 0x03, 0x80,
+0xED, 0x8B, 0x03, 0x80, 0xF7, 0x8B, 0x03, 0x80,
+0x09, 0x8C, 0x03, 0x80, 0x45, 0x9A, 0x03, 0x80,
+0x77, 0x9A, 0x03, 0x80, 0x59, 0x9A, 0x03, 0x80,
+0x81, 0x9A, 0x03, 0x80, 0x63, 0x9A, 0x03, 0x80,
+0x8D, 0x9A, 0x03, 0x80, 0x6D, 0x9A, 0x03, 0x80,
+0xFC, 0x10, 0x60, 0xB8, 0xFA, 0xFA, 0xFA, 0xFA,
+0x8C, 0x04, 0x64, 0xB8, 0x90, 0x04, 0x64, 0xB8,
+0x94, 0x04, 0x64, 0xB8, 0x98, 0x04, 0x64, 0xB8,
+0x9C, 0x04, 0x64, 0xB8, 0xA0, 0x04, 0x64, 0xB8,
+0x01, 0x06, 0x64, 0xB8, 0x00, 0x00, 0x68, 0x18,
+0x48, 0x00, 0x68, 0x18, 0x48, 0x04, 0x68, 0x18,
+0x00, 0x00, 0x60, 0xB8, 0x00, 0x00, 0x64, 0xB8,
+0x54, 0x05, 0x64, 0xB8, 0x50, 0x05, 0x64, 0xB8,
+0x51, 0x05, 0x64, 0xB8, 0x78, 0x05, 0x64, 0xB8,
+0x79, 0x05, 0x64, 0xB8, 0x7A, 0x05, 0x64, 0xB8,
+0xFF, 0xFF, 0xFF, 0x8F, 0x60, 0x05, 0x60, 0xB8,
+0x60, 0x05, 0x64, 0xB8, 0x00, 0x00, 0x00, 0x10,
+0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x30,
+0x00, 0x00, 0x00, 0x40, 0xBF, 0x01, 0x64, 0xB8,
+0x89, 0x00, 0x60, 0xB8, 0x8A, 0x00, 0x60, 0xB8,
+0x1A, 0x04, 0x64, 0xB8, 0x1B, 0x04, 0x64, 0xB8,
+0x87, 0x02, 0x64, 0xB8, 0x96, 0x02, 0x64, 0xB8,
+0x86, 0x02, 0x64, 0xB8, 0xF8, 0x10, 0x60, 0xB8,
+0x00, 0x00, 0x40, 0x00, 0xF0, 0x11, 0x64, 0xB8,
+0x58, 0x05, 0x64, 0xB8, 0x01, 0x00, 0x60, 0xB8,
+0x01, 0x00, 0x64, 0xB8, 0x57, 0x01, 0x64, 0xB8,
+0x3C, 0x01, 0x64, 0xB8, 0x22, 0x05, 0x64, 0xB8,
+0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x00,
+0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x08, 0x00,
+0x0A, 0x06, 0x64, 0xB8, 0x5B, 0x01, 0x64, 0xB8,
+0xFE, 0x11, 0x64, 0xB8, 0xA8, 0x06, 0x64, 0xB8,
+0x10, 0x07, 0x64, 0xB8, 0x00, 0x16, 0x64, 0xB8,
+0x04, 0x16, 0x64, 0xB8, 0x08, 0x16, 0x64, 0xB8,
+0xAB, 0x06, 0x64, 0xB8, 0xAA, 0x06, 0x64, 0xB8,
+0x13, 0x07, 0x64, 0xB8, 0x12, 0x07, 0x64, 0xB8,
+0x03, 0x16, 0x64, 0xB8, 0x02, 0x16, 0x64, 0xB8,
+0x07, 0x16, 0x64, 0xB8, 0x06, 0x16, 0x64, 0xB8,
+0x0B, 0x16, 0x64, 0xB8, 0x0A, 0x16, 0x64, 0xB8,
+0xFC, 0x11, 0x64, 0xB8, 0x00, 0x00, 0x1E, 0x00,
+0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x03, 0x00,
+0x00, 0x00, 0x30, 0x00, 0x00, 0x00, 0x00, 0x03,
+0xB1, 0x05, 0x64, 0xB8, 0x22, 0x00, 0x60, 0xB8,
+0x04, 0x06, 0x64, 0xB8, 0xFF, 0xFF, 0xFF, 0xFE,
+0x00, 0x00, 0x00, 0x01, 0x60, 0x16, 0x64, 0xB8,
+0x09, 0x00, 0x78, 0xB8, 0x31, 0x00, 0x78, 0xB8,
+0x14, 0x00, 0x78, 0xB8, 0x1D, 0x04, 0x64, 0xB8,
+0x7A, 0x04, 0x64, 0xB8, 0x24, 0x04, 0x64, 0xB8,
+0x4D, 0x01, 0x64, 0xB8, 0x00, 0x01, 0x64, 0xB8,
+0x04, 0x02, 0x64, 0xB8, 0x08, 0x02, 0x64, 0xB8,
+0x56, 0x04, 0x64, 0xB8, 0x04, 0x00, 0x70, 0xB8,
+0x0A, 0x00, 0x70, 0xB8, 0x34, 0x00, 0x78, 0xB8,
+0x18, 0x11, 0x64, 0xB8, 0x55, 0x00, 0x78, 0xB8,
+0x56, 0x00, 0x78, 0xB8, 0x40, 0x00, 0x78, 0xB8,
+0x1C, 0x04, 0x64, 0xB8, 0x10, 0x00, 0x70, 0xB8,
+0x4C, 0x04, 0x64, 0xB8, 0x4D, 0x04, 0x64, 0xB8,
+0x16, 0x00, 0x70, 0xB8, 0x4E, 0x04, 0x64, 0xB8,
+0x17, 0x00, 0x70, 0xB8, 0x4F, 0x04, 0x64, 0xB8,
+0xC7, 0x01, 0x64, 0xB8, 0xA4, 0x01, 0x64, 0xB8,
+0x1C, 0x01, 0x64, 0xB8, 0xFF, 0xFF, 0x03, 0x00,
+0x84, 0x02, 0x64, 0xB8, 0x52, 0x05, 0x64, 0xB8,
+0x20, 0x04, 0x64, 0xB8, 0xFF, 0xFF, 0xEF, 0xFF,
+0x5F, 0x11, 0x64, 0xB8, 0x88, 0x00, 0x60, 0xB8,
+0x8B, 0x00, 0x60, 0xB8, 0x84, 0x00, 0x60, 0xB8,
+0x00, 0x00, 0x00, 0x02, 0xCB, 0x01, 0x64, 0xB8,
+0x00, 0x00, 0x00, 0x60, 0xE0, 0x00, 0x60, 0xB8,
+0xE1, 0x00, 0x60, 0xB8, 0xE8, 0x12, 0x64, 0xB8,
+0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x04,
+0xFF, 0xFF, 0xFF, 0xFB, 0xFF, 0xFF, 0xFF, 0xDF,
+0xFF, 0xFF, 0xFF, 0x1F, 0x04, 0x00, 0x60, 0xB8,
+0x04, 0x00, 0x64, 0xB8, 0x08, 0x00, 0x60, 0xB8,
+0x08, 0x00, 0x64, 0xB8, 0x24, 0x00, 0x60, 0xB8,
+0x80, 0x00, 0x60, 0xB8, 0xFF, 0xFF, 0xFD, 0xFF,
+0xCC, 0x07, 0x64, 0xB8, 0x82, 0x10, 0x60, 0xB8,
+0x42, 0x34, 0x00, 0xB8, 0x00, 0x0C, 0x01, 0x00,
+0x08, 0x00, 0x00, 0xF8, 0x08, 0x70, 0x0A, 0xF8,
+0x08, 0x50, 0x01, 0xF8, 0x00, 0x00, 0x1F, 0x00,
+0x00, 0x00, 0x00, 0xC0, 0x1A, 0x15, 0x64, 0xB8,
+0x77, 0x77, 0x77, 0x77, 0x17, 0x11, 0x17, 0x77,
+0x00, 0x00, 0x00, 0x3E, 0x00, 0x00, 0xE0, 0xFF,
+0x00, 0x1C, 0x01, 0x88, 0x01, 0x00, 0x00, 0xE0,
+0x00, 0x00, 0xFF, 0x0F, 0x21, 0x00, 0x00, 0xE0,
+0x00, 0x00, 0x00, 0xFF, 0x08, 0x00, 0x45, 0x01,
+0x88, 0x0C, 0x46, 0x01, 0xFF, 0xFF, 0x0F, 0x00,
+0xBA, 0xCB, 0x08, 0x00, 0x18, 0x80, 0x0A, 0x00,
+0x68, 0x10, 0x46, 0x01, 0xF3, 0x10, 0x05, 0x00,
+0x00, 0x9C, 0x0A, 0x00, 0x08, 0x00, 0x45, 0x00,
+0x68, 0x14, 0x46, 0x00, 0x08, 0x00, 0x84, 0x00,
+0xBA, 0xCB, 0x0B, 0x00, 0x18, 0xC0, 0x0A, 0x00,
+0x08, 0x00, 0x44, 0x01, 0xF3, 0x0E, 0x05, 0x00,
+0x18, 0xDC, 0x0A, 0x00, 0xC8, 0x0E, 0x05, 0x00,
+0x18, 0x9C, 0x0A, 0x00, 0x00, 0x00, 0xF0, 0x0F,
+0x00, 0x00, 0x00, 0x0F, 0x02, 0x00, 0x60, 0xB8,
+0x62, 0x06, 0x64, 0xB8, 0xB4, 0x06, 0x64, 0xB8,
+0x06, 0x00, 0x00, 0x89, 0x00, 0x00, 0x00, 0x50,
+0x40, 0x00, 0x0F, 0x70, 0x02, 0x04, 0x00, 0xD8,
+0x20, 0x01, 0x00, 0xD1, 0x40, 0x80, 0x0B, 0x70,
+0x02, 0x04, 0x02, 0xD8, 0x20, 0x01, 0x00, 0xDE,
+0x03, 0x29, 0x29, 0x00, 0x48, 0x00, 0x46, 0x01,
+0x60, 0x10, 0x05, 0x00, 0xDE, 0x0F, 0x0E, 0x00,
+0xCE, 0xEF, 0x0D, 0x00, 0xCE, 0xEF, 0x05, 0x00,
+0xFF, 0x3F, 0x0E, 0x00, 0x1F, 0xFF, 0x0F, 0x00,
+0xE7, 0x0E, 0x05, 0x00, 0xE8, 0x0E, 0x05, 0x00,
+0x45, 0x23, 0x01, 0x00, 0x08, 0x08, 0x00, 0xF8,
+0x08, 0x07, 0x00, 0xF8, 0x08, 0x02, 0x00, 0xF8,
+0x08, 0x03, 0x00, 0xF8, 0x18, 0x00, 0x00, 0xF8,
+0xDE, 0xBC, 0x0A, 0x00, 0x01, 0x00, 0x66, 0xB8,
+0x00, 0x00, 0x66, 0xB8, 0xCD, 0x9B, 0x78, 0x56,
+0x00, 0x1C, 0x66, 0xB8, 0x04, 0x1C, 0x66, 0xB8,
+0xFF, 0xFF, 0x3F, 0x00, 0x1F, 0x00, 0x60, 0xB8,
+0x04, 0xEA, 0xEF, 0xFD, 0x07, 0xEA, 0xEF, 0xFD,
+0x08, 0xEA, 0xEF, 0xFD, 0x09, 0xEA, 0xEF, 0xFD,
+0x0A, 0xEA, 0xEF, 0xFD, 0x53, 0x04, 0x64, 0xB8,
+0xF0, 0x10, 0x60, 0xB8, 0xCA, 0x04, 0x64, 0xB8,
+0xCF, 0x04, 0x64, 0xB8, 0xF1, 0x10, 0x60, 0xB8,
+0x06, 0x00, 0x66, 0xB8, 0x52, 0x04, 0x64, 0xB8,
+0x50, 0x04, 0x64, 0xB8, 0x51, 0x04, 0x64, 0xB8,
+0x01, 0x1C, 0x66, 0xB8, 0x02, 0x1C, 0x66, 0xB8,
+0x03, 0x1C, 0x66, 0xB8, 0x05, 0x1C, 0x66, 0xB8,
+0x06, 0x1C, 0x66, 0xB8, 0x07, 0x1C, 0x66, 0xB8,
+0x02, 0x10, 0x66, 0xB8, 0x08, 0x10, 0x66, 0xB8,
+0x03, 0x10, 0x66, 0xB8, 0x09, 0x10, 0x66, 0xB8,
+0x04, 0x10, 0x66, 0xB8, 0x05, 0x10, 0x66, 0xB8,
+0x0C, 0x10, 0x66, 0xB8, 0x0D, 0x10, 0x66, 0xB8,
+0x06, 0x10, 0x66, 0xB8, 0xFF, 0xFF, 0x0B, 0xFF,
+0x00, 0x00, 0x70, 0x00, 0xFF, 0xFF, 0x7A, 0xFF,
+0x00, 0x00, 0xD0, 0x00, 0xFF, 0xFF, 0xDA, 0xFF,
+0xFF, 0xFF, 0xFF, 0x0F, 0x00, 0xFC, 0xCF, 0xFF,
+0x00, 0x00, 0x01, 0x10, 0x00, 0xF3, 0x3F, 0xFF,
+0x01, 0x00, 0x02, 0x20, 0x00, 0xCF, 0xFF, 0xFC,
+0x02, 0x00, 0x04, 0x40, 0x00, 0xFC, 0xCE, 0xEF,
+0x40, 0x02, 0x20, 0x00, 0x80, 0x03, 0x30, 0x00,
+0x00, 0xFF, 0xF9, 0xFF, 0x00, 0x00, 0xFE, 0x1F,
+0x1C, 0x0C, 0xB8, 0x64, 0x67, 0x56, 0x23, 0x01,
+0xFF, 0xFF, 0xF7, 0xFF, 0xFF, 0xFC, 0xFE, 0xFF,
+0x00, 0x01, 0x01, 0x00, 0x00, 0x00, 0x80, 0x01,
+0xCC, 0x06, 0x64, 0xB8, 0x68, 0x05, 0x64, 0xB8,
+0x40, 0x42, 0x0F, 0x00, 0x00, 0x04, 0x64, 0xB8,
+0x04, 0x04, 0x64, 0xB8, 0x08, 0x04, 0x64, 0xB8,
+0x0C, 0x04, 0x64, 0xB8, 0x68, 0x04, 0x64, 0xB8,
+0x6C, 0x04, 0x64, 0xB8, 0x70, 0x04, 0x64, 0xB8,
+0x74, 0x04, 0x64, 0xB8, 0x00, 0x00, 0x3C, 0x00,
+0x6B, 0x01, 0x64, 0xB8, 0x00, 0x00, 0x70, 0xB8,
+0x18, 0x00, 0x70, 0xB8, 0x0B, 0x00, 0x70, 0xB8,
+0x02, 0x00, 0x70, 0xB8, 0x94, 0x02, 0x64, 0xB8,
+0x97, 0x02, 0x64, 0xB8, 0x54, 0x02, 0x64, 0xB8,
+0x50, 0x02, 0x64, 0xB8, 0x4C, 0x02, 0x64, 0xB8,
+0x00, 0x00, 0x78, 0xB8, 0x04, 0x00, 0x78, 0xB8,
+0x48, 0x02, 0x64, 0xB8, 0x44, 0x02, 0x64, 0xB8,
+0xCC, 0x01, 0x64, 0xB8, 0xF4, 0x11, 0x64, 0xB8,
+0xF5, 0x11, 0x64, 0xB8, 0xD4, 0x04, 0x60, 0xB8,
+0xD4, 0x04, 0x64, 0xB8, 0x84, 0x04, 0x60, 0xB8,
+0x84, 0x04, 0x64, 0xB8, 0xC8, 0x04, 0x60, 0xB8,
+0xC8, 0x04, 0x64, 0xB8, 0x78, 0x04, 0x60, 0xB8,
+0x78, 0x04, 0x64, 0xB8, 0xCF, 0x01, 0x64, 0xB8,
+0x34, 0x01, 0x64, 0xB8, 0x64, 0x05, 0x64, 0xB8,
+0x44, 0x00, 0x60, 0xB8, 0x60, 0x00, 0x60, 0xB8,
+0xBE, 0x05, 0x64, 0xB8, 0x01, 0xEA, 0xEF, 0xFD,
+0x02, 0xEA, 0xEF, 0xFD, 0xC8, 0x01, 0x64, 0xB8,
+0xC9, 0x01, 0x64, 0xB8, 0xA0, 0x01, 0x64, 0xB8,
+0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x05,
+0x64, 0x01, 0x64, 0xB8, 0x53, 0x05, 0x64, 0xB8,
+0x77, 0x05, 0x64, 0xB8, 0x94, 0x01, 0x64, 0xB8,
+0x00, 0x10, 0x66, 0xB8, 0x54, 0x00, 0x60, 0xB8,
+0x50, 0x00, 0x60, 0xB8, 0x9A, 0x01, 0x64, 0xB8,
+0x99, 0x01, 0x64, 0xB8, 0xC6, 0x01, 0x64, 0xB8,
+0x30, 0x01, 0x64, 0xB8, 0x24, 0x01, 0x64, 0xB8,
+0x20, 0x01, 0x64, 0xB8, 0x24, 0x11, 0x64, 0xB8,
+0x20, 0x11, 0x64, 0xB8, 0x2C, 0x11, 0x64, 0xB8,
+0x28, 0x11, 0x64, 0xB8, 0x34, 0x11, 0x64, 0xB8,
+0x30, 0x11, 0x64, 0xB8, 0x38, 0x01, 0x64, 0xB8,
+0x3C, 0x11, 0x64, 0xB8, 0x38, 0x11, 0x64, 0xB8,
+0xE4, 0x11, 0x64, 0xB8, 0xE0, 0x11, 0x64, 0xB8,
+0x00, 0x40, 0xE0, 0x03, 0x01, 0x60, 0x00, 0x03,
+0xE0, 0x04, 0x64, 0xB8, 0xE3, 0x04, 0x64, 0xB8,
+0xE0, 0x12, 0x64, 0xB8, 0x02, 0x01, 0x64, 0xB8,
+0x21, 0x05, 0x64, 0xB8, 0x40, 0x11, 0x64, 0xB8,
+0x44, 0x11, 0x64, 0xB8, 0x48, 0x11, 0x64, 0xB8,
+0x4C, 0x11, 0x64, 0xB8, 0x2F, 0x01, 0x64, 0xB8,
 0x00, 0x28, 0x64, 0xB8, 0x00, 0x2C, 0x64, 0xB8,
 0x00, 0x38, 0x64, 0xB8, 0x00, 0x3C, 0x64, 0xB8,
 0xF8, 0x05, 0x64, 0xB8, 0xF9, 0x05, 0x64, 0xB8,
@@ -10043,7 +10018,7 @@ u8 array_mp_8821c_fw_ap[] = {
 0x74, 0x63, 0x68, 0x20, 0x62, 0x61, 0x6E, 0x64,
 0x20, 0x28, 0x63, 0x68, 0x3A, 0x20, 0x25, 0x64,
 0x29, 0x0A, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-0x6E, 0x13, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x4E, 0xE1, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
@@ -10726,7 +10701,7 @@ u8 array_mp_8821c_fw_ap[] = {
 0x0C, 0x6D, 0x00, 0x18, 0x73, 0xC9, 0x01, 0x6C,
 0x0C, 0x6D, 0x00, 0x18, 0x73, 0xC9, 0x30, 0xF0,
 0x20, 0x6C, 0x48, 0xF5, 0x10, 0x4C, 0x00, 0x6D,
-0x00, 0x18, 0x82, 0xE8, 0xE8, 0xF3, 0x66, 0xA0,
+0x00, 0x18, 0x53, 0xE8, 0xE8, 0xF3, 0x66, 0xA0,
 0x0F, 0x6A, 0xE8, 0xF3, 0x45, 0xC0, 0x01, 0x6A,
 0x6C, 0xEA, 0x28, 0x6B, 0x6D, 0xEA, 0xE8, 0xF3,
 0x46, 0xC0, 0x07, 0x6A, 0xE8, 0xF3, 0x47, 0xC0,
@@ -10738,7 +10713,7 @@ u8 array_mp_8821c_fw_ap[] = {
 0x00, 0x18, 0x93, 0xCF, 0x03, 0x6C, 0x00, 0x6D,
 0x00, 0x18, 0x93, 0xCF, 0x04, 0x6C, 0x00, 0x6D,
 0x00, 0x18, 0x93, 0xCF, 0x10, 0xF0, 0x24, 0x6A,
-0x55, 0xF2, 0x6C, 0x9A, 0xF8, 0x6A, 0x00, 0x6D,
+0x95, 0xF1, 0x70, 0x9A, 0xF8, 0x6A, 0x00, 0x6D,
 0x80, 0xA3, 0xC5, 0x67, 0x8C, 0xEA, 0x40, 0xC3,
 0x30, 0xF0, 0x20, 0x6A, 0x6E, 0xF2, 0x58, 0x9A,
 0xFF, 0x6C, 0x40, 0xEA, 0x07, 0x97, 0x06, 0x91,
@@ -10763,18 +10738,18 @@ u8 array_mp_8821c_fw_ap[] = {
 0x01, 0x4A, 0x6A, 0xEA, 0xFB, 0x61, 0x42, 0xF4,
 0x10, 0x6A, 0x1F, 0xF7, 0x00, 0x6B, 0x4C, 0xEB,
 0x02, 0xF0, 0x00, 0x73, 0x01, 0x60, 0x05, 0x2B,
-0x10, 0xF0, 0x24, 0x6B, 0xB5, 0xF1, 0x7C, 0x9B,
-0x04, 0x10, 0x10, 0xF0, 0x24, 0x6B, 0xD5, 0xF1,
-0x60, 0x9B, 0x6D, 0xE2, 0x04, 0x4A, 0x00, 0x6C,
+0x10, 0xF0, 0x24, 0x6B, 0x15, 0xF1, 0x60, 0x9B,
+0x04, 0x10, 0x10, 0xF0, 0x24, 0x6B, 0x15, 0xF1,
+0x64, 0x9B, 0x6D, 0xE2, 0x04, 0x4A, 0x00, 0x6C,
 0x62, 0xF4, 0x00, 0x72, 0x80, 0xDB, 0xE9, 0x61,
 0x20, 0xE8, 0x00, 0x65, 0xFD, 0x63, 0x05, 0x62,
 0x30, 0xF0, 0x20, 0x6A, 0x4E, 0xF2, 0x4C, 0x9A,
 0x30, 0xF0, 0x20, 0x6C, 0x2F, 0xF5, 0x18, 0x4C,
 0x00, 0x6D, 0x03, 0x6E, 0x40, 0xEA, 0x05, 0x97,
 0x03, 0x63, 0x00, 0xEF, 0xFD, 0x63, 0x05, 0x62,
-0x10, 0xF0, 0x24, 0x6A, 0x95, 0xF3, 0x58, 0x9A,
+0x10, 0xF0, 0x24, 0x6A, 0xD5, 0xF2, 0x5C, 0x9A,
 0x03, 0x6D, 0xFF, 0x6B, 0x80, 0x9A, 0x10, 0xF0,
-0x24, 0x6A, 0x95, 0xF3, 0x5C, 0x9A, 0x00, 0xF5,
+0x24, 0x6A, 0xF5, 0xF2, 0x40, 0x9A, 0x00, 0xF5,
 0x82, 0x34, 0xAC, 0xEC, 0x40, 0x9A, 0x01, 0x74,
 0x42, 0x32, 0x52, 0x32, 0xAC, 0xEA, 0x06, 0x60,
 0x0A, 0x2C, 0x02, 0x5A, 0x28, 0x6C, 0x0D, 0x60,
@@ -10784,10 +10759,10 @@ u8 array_mp_8821c_fw_ap[] = {
 0x6C, 0xEC, 0x80, 0x18, 0xAD, 0x06, 0x30, 0xF0,
 0x20, 0x6A, 0x2F, 0xF5, 0x18, 0x4A, 0x00, 0x6B,
 0x00, 0xF2, 0x62, 0xC2, 0x10, 0xF0, 0x24, 0x6B,
-0x15, 0xF2, 0x78, 0x9B, 0x00, 0x6A, 0x40, 0xDB,
-0x10, 0xF0, 0x24, 0x6B, 0x95, 0xF1, 0x6C, 0x9B,
-0x40, 0xDB, 0x10, 0xF0, 0x24, 0x6B, 0x55, 0xF3,
-0x78, 0x9B, 0x40, 0xC3, 0x05, 0x97, 0x03, 0x63,
+0x55, 0xF1, 0x7C, 0x9B, 0x00, 0x6A, 0x40, 0xDB,
+0x10, 0xF0, 0x24, 0x6B, 0xD5, 0xF0, 0x70, 0x9B,
+0x40, 0xDB, 0x10, 0xF0, 0x24, 0x6B, 0x95, 0xF2,
+0x7C, 0x9B, 0x40, 0xC3, 0x05, 0x97, 0x03, 0x63,
 0x00, 0xEF, 0x00, 0x65, 0xFB, 0x63, 0x09, 0x62,
 0x08, 0xD1, 0x07, 0xD0, 0x30, 0xF0, 0x20, 0x68,
 0x4E, 0xF2, 0x4C, 0x98, 0x30, 0xF0, 0x20, 0x69,
@@ -10802,7 +10777,7 @@ u8 array_mp_8821c_fw_ap[] = {
 0x76, 0x05, 0x05, 0x92, 0x00, 0x68, 0x80, 0xF0,
 0x0C, 0xD9, 0x40, 0xF0, 0x00, 0xC2, 0x80, 0x18,
 0x7D, 0x05, 0x01, 0x6A, 0xE9, 0xF0, 0x44, 0xC1,
-0x00, 0x18, 0x4C, 0xDB, 0x04, 0x92, 0x30, 0xF0,
+0x00, 0x18, 0x24, 0xDB, 0x04, 0x92, 0x30, 0xF0,
 0x20, 0x6C, 0xED, 0xF0, 0x16, 0x4C, 0x00, 0xF2,
 0x03, 0xC2, 0x30, 0xF0, 0x20, 0x6A, 0xED, 0xF0,
 0x06, 0x4A, 0x00, 0x6B, 0x60, 0xC2, 0x70, 0xC2,
@@ -10820,70 +10795,70 @@ u8 array_mp_8821c_fw_ap[] = {
 0x00, 0x18, 0xEF, 0xCA, 0x00, 0x18, 0x1E, 0xD5,
 0x30, 0xF0, 0x20, 0x6A, 0xCE, 0xF5, 0x44, 0x9A,
 0x40, 0xEA, 0x80, 0x18, 0xBE, 0x06, 0x00, 0x18,
-0x72, 0xE3, 0x00, 0x6A, 0x10, 0xF0, 0x24, 0x6C,
-0xF0, 0x67, 0x51, 0xF4, 0x19, 0x4C, 0xA2, 0x67,
-0x64, 0x6E, 0x04, 0xD2, 0x00, 0x18, 0xDA, 0xE3,
+0x43, 0xE3, 0x00, 0x6A, 0x10, 0xF0, 0x24, 0x6C,
+0xF0, 0x67, 0x91, 0xF3, 0x1D, 0x4C, 0xA2, 0x67,
+0x64, 0x6E, 0x04, 0xD2, 0x00, 0x18, 0xAB, 0xE3,
 0xD0, 0x67, 0x00, 0x6C, 0x42, 0x6D, 0x00, 0x18,
-0x7F, 0xE1, 0x10, 0xF0, 0x24, 0x6B, 0xB5, 0xF2,
-0xE0, 0x9B, 0xD0, 0x67, 0x00, 0x6C, 0x4D, 0xEF,
-0x42, 0x6D, 0x00, 0x18, 0x92, 0xE1, 0x10, 0xF0,
-0x24, 0x6C, 0xF0, 0x67, 0x34, 0xF4, 0x1D, 0x4C,
+0x50, 0xE1, 0x10, 0xF0, 0x24, 0x6B, 0xF5, 0xF1,
+0xE4, 0x9B, 0xD0, 0x67, 0x00, 0x6C, 0x4D, 0xEF,
+0x42, 0x6D, 0x00, 0x18, 0x63, 0xE1, 0x10, 0xF0,
+0x24, 0x6C, 0xF0, 0x67, 0x94, 0xF3, 0x01, 0x4C,
 0x00, 0x6D, 0x64, 0x6E, 0x01, 0x6A, 0x04, 0xD2,
-0x00, 0x18, 0xDA, 0xE3, 0x00, 0x18, 0x96, 0xE3,
+0x00, 0x18, 0xAB, 0xE3, 0x00, 0x18, 0x67, 0xE3,
 0x07, 0x97, 0x06, 0x90, 0x04, 0x63, 0x00, 0xEF,
 0x30, 0xF0, 0x20, 0x6A, 0x00, 0x6B, 0x2F, 0xF5,
 0x18, 0x4A, 0xA0, 0xF0, 0x64, 0xC2, 0xA0, 0xF0,
 0x65, 0xC2, 0x10, 0xF0, 0x30, 0x6A, 0x00, 0xF0,
 0x00, 0x4A, 0x40, 0xF0, 0x60, 0xC2, 0x40, 0xF0,
 0x61, 0xC2, 0x20, 0xE8, 0x10, 0xF0, 0x24, 0x6A,
-0x75, 0xF6, 0x44, 0x9A, 0x01, 0x6B, 0x60, 0xC2,
+0xB5, 0xF5, 0x48, 0x9A, 0x01, 0x6B, 0x60, 0xC2,
 0x20, 0xE8, 0x00, 0x65, 0x10, 0xF0, 0x24, 0x6A,
-0x75, 0xF6, 0x88, 0x9A, 0xFF, 0x6B, 0x20, 0x6D,
+0xB5, 0xF5, 0x8C, 0x9A, 0xFF, 0x6B, 0x20, 0x6D,
 0x40, 0xA4, 0x6C, 0xEA, 0xAD, 0xEA, 0x6C, 0xEA,
-0x40, 0xC4, 0x10, 0xF0, 0x24, 0x6A, 0x75, 0xF6,
-0x8C, 0x9A, 0x08, 0x6D, 0x40, 0xA4, 0x6C, 0xEA,
+0x40, 0xC4, 0x10, 0xF0, 0x24, 0x6A, 0xB5, 0xF5,
+0x90, 0x9A, 0x08, 0x6D, 0x40, 0xA4, 0x6C, 0xEA,
 0xAD, 0xEA, 0x6C, 0xEA, 0x40, 0xC4, 0x20, 0xE8,
-0x10, 0xF0, 0x24, 0x6A, 0x75, 0xF6, 0x70, 0x9A,
+0x10, 0xF0, 0x24, 0x6A, 0xB5, 0xF5, 0x74, 0x9A,
 0xFD, 0x6A, 0xFF, 0x6C, 0xA0, 0xA3, 0xAC, 0xEA,
 0x40, 0xC3, 0x40, 0xA3, 0x01, 0x6D, 0x8C, 0xEA,
 0xAD, 0xEA, 0x8C, 0xEA, 0x40, 0xC3, 0x20, 0xE8,
 0xFD, 0x63, 0x05, 0x62, 0x04, 0xD0, 0x10, 0xF0,
-0x24, 0x6A, 0xB5, 0xF4, 0x14, 0x9A, 0x30, 0xF0,
+0x24, 0x6A, 0xF5, 0xF3, 0x18, 0x9A, 0x30, 0xF0,
 0x20, 0x6A, 0x4E, 0xF2, 0x4C, 0x9A, 0x90, 0x67,
 0x00, 0x6D, 0x02, 0xF0, 0x00, 0x6E, 0x40, 0xEA,
 0x04, 0x6A, 0x40, 0xC0, 0x10, 0xF0, 0x24, 0x6A,
-0x75, 0xF6, 0x54, 0x9A, 0x20, 0x48, 0x0E, 0xEA,
+0xB5, 0xF5, 0x58, 0x9A, 0x20, 0x48, 0x0E, 0xEA,
 0xF7, 0x2A, 0x10, 0xF0, 0x24, 0x6B, 0x30, 0xF0,
-0x20, 0x6A, 0xB5, 0xF4, 0x9C, 0x9B, 0x4E, 0xF2,
+0x20, 0x6A, 0x15, 0xF4, 0x80, 0x9B, 0x4E, 0xF2,
 0x4C, 0x9A, 0x00, 0x6D, 0x00, 0xF4, 0x00, 0x6E,
 0x40, 0xEA, 0x05, 0x97, 0x04, 0x90, 0x03, 0x63,
 0x00, 0xEF, 0x00, 0x65, 0x10, 0xF0, 0x24, 0x6A,
-0xD5, 0xF6, 0xA4, 0x9A, 0x1F, 0xF4, 0x0E, 0x6E,
+0x15, 0xF6, 0xA8, 0x9A, 0x1F, 0xF4, 0x0E, 0x6E,
 0x30, 0xF0, 0x20, 0x6B, 0xCB, 0xEE, 0xC0, 0xF1,
 0xC8, 0xDB, 0xE1, 0xF7, 0x1F, 0x6A, 0xC0, 0xF1,
 0x08, 0x4B, 0x00, 0x6C, 0x42, 0xDB, 0x43, 0xDB,
 0xA1, 0xDB, 0x84, 0xDB, 0x10, 0xF0, 0x24, 0x6B,
-0x95, 0xF6, 0x6C, 0x9B, 0xC0, 0xDB, 0x10, 0xF0,
-0x24, 0x6B, 0x95, 0xF6, 0x74, 0x9B, 0xA0, 0xDB,
-0x10, 0xF0, 0x24, 0x6B, 0x95, 0xF6, 0x7C, 0x9B,
-0x40, 0xDB, 0x10, 0xF0, 0x24, 0x6B, 0xB5, 0xF6,
-0x64, 0x9B, 0x40, 0xDB, 0x10, 0xF0, 0x24, 0x6A,
-0xB5, 0xF6, 0x4C, 0x9A, 0x80, 0xDA, 0x20, 0xE8,
+0xD5, 0xF5, 0x70, 0x9B, 0xC0, 0xDB, 0x10, 0xF0,
+0x24, 0x6B, 0xD5, 0xF5, 0x78, 0x9B, 0xA0, 0xDB,
+0x10, 0xF0, 0x24, 0x6B, 0xF5, 0xF5, 0x60, 0x9B,
+0x40, 0xDB, 0x10, 0xF0, 0x24, 0x6B, 0xF5, 0xF5,
+0x68, 0x9B, 0x40, 0xDB, 0x10, 0xF0, 0x24, 0x6A,
+0xF5, 0xF5, 0x50, 0x9A, 0x80, 0xDA, 0x20, 0xE8,
 0x80, 0x6A, 0x30, 0xF0, 0x20, 0x6B, 0xE0, 0xF1,
-0x58, 0xDB, 0x10, 0xF0, 0x24, 0x6B, 0x75, 0xF6,
-0x7C, 0x9B, 0x40, 0xDB, 0x20, 0xE8, 0x00, 0x65,
-0x10, 0xF0, 0x24, 0x6B, 0xD5, 0xF6, 0x88, 0x9B,
+0x58, 0xDB, 0x10, 0xF0, 0x24, 0x6B, 0xD5, 0xF5,
+0x60, 0x9B, 0x40, 0xDB, 0x20, 0xE8, 0x00, 0x65,
+0x10, 0xF0, 0x24, 0x6B, 0x15, 0xF6, 0x8C, 0x9B,
 0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A,
 0xE6, 0x6D, 0xFF, 0x6B, 0xAE, 0xDA, 0x8F, 0xDA,
-0x70, 0xDA, 0x10, 0xF0, 0x24, 0x6A, 0xB5, 0xF6,
-0x50, 0x9A, 0xA0, 0xDA, 0x10, 0xF0, 0x24, 0x6A,
-0xB5, 0xF6, 0x58, 0x9A, 0x80, 0xDA, 0x10, 0xF0,
-0x24, 0x6A, 0xD5, 0xF6, 0x40, 0x9A, 0x60, 0xDA,
+0x70, 0xDA, 0x10, 0xF0, 0x24, 0x6A, 0xF5, 0xF5,
+0x54, 0x9A, 0xA0, 0xDA, 0x10, 0xF0, 0x24, 0x6A,
+0xF5, 0xF5, 0x5C, 0x9A, 0x80, 0xDA, 0x10, 0xF0,
+0x24, 0x6A, 0x15, 0xF6, 0x44, 0x9A, 0x60, 0xDA,
 0x20, 0xE8, 0x00, 0x65, 0x20, 0xE8, 0x00, 0x65,
 0xFD, 0x63, 0x05, 0x62, 0x80, 0x18, 0x4D, 0x07,
 0x30, 0xF0, 0x20, 0x6B, 0xE8, 0xF2, 0x5C, 0xC3,
-0x80, 0x18, 0x3E, 0x06, 0x00, 0x18, 0xDA, 0xE6,
-0x10, 0xF0, 0x24, 0x6A, 0xD5, 0xF6, 0x54, 0x9A,
+0x80, 0x18, 0x3E, 0x06, 0x00, 0x18, 0xAB, 0xE6,
+0x10, 0xF0, 0x24, 0x6A, 0x15, 0xF6, 0x58, 0x9A,
 0x3F, 0x6B, 0x60, 0xC2, 0x80, 0x18, 0x2F, 0x06,
 0x80, 0x18, 0x33, 0x06, 0x80, 0x18, 0xB3, 0x06,
 0x80, 0x18, 0x46, 0x06, 0x05, 0x97, 0x03, 0x63,
@@ -10894,8 +10869,8 @@ u8 array_mp_8821c_fw_ap[] = {
 0xFA, 0xD0, 0x40, 0xF0, 0xD0, 0xA8, 0x01, 0x6C,
 0x03, 0x6D, 0xC2, 0x36, 0x00, 0x18, 0xFA, 0xD0,
 0x05, 0x97, 0x04, 0x90, 0x03, 0x63, 0x00, 0xEF,
-0xFD, 0x63, 0x05, 0x62, 0x00, 0x18, 0x38, 0xDD,
-0x00, 0x18, 0x57, 0xDD, 0x80, 0x18, 0x5B, 0x06,
+0xFD, 0x63, 0x05, 0x62, 0x00, 0x18, 0x10, 0xDD,
+0x00, 0x18, 0x2F, 0xDD, 0x80, 0x18, 0x5B, 0x06,
 0x80, 0x18, 0x78, 0x06, 0x80, 0x18, 0x72, 0x06,
 0x80, 0x18, 0x97, 0x06, 0x05, 0x97, 0x03, 0x63,
 0x00, 0xEF, 0x00, 0x65, 0xFD, 0x63, 0x05, 0x62,
@@ -10908,57 +10883,57 @@ u8 array_mp_8821c_fw_ap[] = {
 0x48, 0xF1, 0x60, 0xDA, 0x00, 0xF2, 0x00, 0x4B,
 0x48, 0xF1, 0x64, 0xDA, 0x20, 0xE8, 0x00, 0x65,
 0x20, 0xE8, 0x00, 0x65, 0x10, 0xF0, 0x24, 0x6A,
-0x95, 0xF7, 0x4C, 0x9A, 0xE0, 0xF1, 0x1B, 0x6B,
+0xD5, 0xF6, 0x4C, 0x9A, 0xE0, 0xF1, 0x1B, 0x6B,
 0x6B, 0xEB, 0x60, 0xCA, 0x10, 0xF0, 0x24, 0x6A,
-0x55, 0xF3, 0x64, 0x9A, 0xFB, 0x6A, 0x80, 0xA3,
+0x95, 0xF2, 0x68, 0x9A, 0xFB, 0x6A, 0x80, 0xA3,
 0x8C, 0xEA, 0x40, 0xC3, 0x20, 0xE8, 0x00, 0x65,
 0x10, 0xF0, 0x23, 0x6A, 0xA9, 0xF2, 0x0D, 0x4A,
 0x30, 0xF0, 0x20, 0x6B, 0x4E, 0xF2, 0x4C, 0xDB,
 0x10, 0xF0, 0x23, 0x6A, 0xC9, 0xF2, 0x01, 0x4A,
 0x30, 0xF0, 0x20, 0x6B, 0x4E, 0xF2, 0x50, 0xDB,
-0x10, 0xF0, 0x23, 0x6A, 0xEE, 0xF3, 0x11, 0x4A,
+0x10, 0xF0, 0x23, 0x6A, 0x4E, 0xF3, 0x11, 0x4A,
 0x30, 0xF0, 0x20, 0x6B, 0x4E, 0xF2, 0x54, 0xDB,
 0x10, 0xF0, 0x30, 0x6A, 0xE3, 0xF2, 0x1D, 0x4A,
 0x30, 0xF0, 0x20, 0x6B, 0x4E, 0xF2, 0x58, 0xDB,
-0x10, 0xF0, 0x24, 0x6A, 0xB3, 0xF2, 0x11, 0x4A,
+0x10, 0xF0, 0x24, 0x6A, 0xF3, 0xF1, 0x15, 0x4A,
 0x30, 0xF0, 0x20, 0x6B, 0x6E, 0xF2, 0x50, 0xDB,
 0x10, 0xF0, 0x30, 0x6A, 0x8E, 0xF4, 0x11, 0x4A,
 0x30, 0xF0, 0x20, 0x6B, 0x6E, 0xF2, 0x54, 0xDB,
-0x10, 0xF0, 0x24, 0x6A, 0x13, 0xF2, 0x11, 0x4A,
+0x10, 0xF0, 0x24, 0x6A, 0x53, 0xF1, 0x15, 0x4A,
 0x30, 0xF0, 0x20, 0x6B, 0x4E, 0xF2, 0x5C, 0xDB,
-0x10, 0xF0, 0x24, 0x6A, 0xB1, 0xF2, 0x05, 0x4A,
+0x10, 0xF0, 0x24, 0x6A, 0xF1, 0xF1, 0x09, 0x4A,
 0x30, 0xF0, 0x20, 0x6B, 0x6E, 0xF2, 0x58, 0xDB,
-0x10, 0xF0, 0x24, 0x6A, 0x51, 0xF3, 0x19, 0x4A,
+0x10, 0xF0, 0x24, 0x6A, 0x91, 0xF2, 0x1D, 0x4A,
 0x30, 0xF0, 0x20, 0x6B, 0x6E, 0xF2, 0x5C, 0xDB,
-0x10, 0xF0, 0x23, 0x6A, 0x0B, 0xF4, 0x11, 0x4A,
+0x10, 0xF0, 0x23, 0x6A, 0x6B, 0xF3, 0x11, 0x4A,
 0x30, 0xF0, 0x20, 0x6B, 0x8E, 0xF2, 0x5C, 0xDB,
 0x10, 0xF0, 0x23, 0x6A, 0xA8, 0xF4, 0x05, 0x4A,
 0x30, 0xF0, 0x20, 0x6B, 0xAE, 0xF2, 0x40, 0xDB,
 0x10, 0xF0, 0x23, 0x6A, 0x48, 0xF4, 0x0D, 0x4A,
 0x30, 0xF0, 0x20, 0x6B, 0xAE, 0xF2, 0x44, 0xDB,
-0x10, 0xF0, 0x24, 0x6A, 0x70, 0xF4, 0x09, 0x4A,
+0x10, 0xF0, 0x24, 0x6A, 0xB0, 0xF3, 0x0D, 0x4A,
 0x30, 0xF0, 0x20, 0x6B, 0xAE, 0xF2, 0x48, 0xDB,
-0x10, 0xF0, 0x23, 0x6A, 0x4E, 0xF0, 0x05, 0x4A,
+0x10, 0xF0, 0x23, 0x6A, 0xAD, 0xF7, 0x05, 0x4A,
 0x30, 0xF0, 0x20, 0x6B, 0xAE, 0xF2, 0x4C, 0xDB,
-0x10, 0xF0, 0x23, 0x6A, 0x8E, 0xF0, 0x0D, 0x4A,
+0x10, 0xF0, 0x23, 0x6A, 0xED, 0xF7, 0x0D, 0x4A,
 0x30, 0xF0, 0x20, 0x6B, 0xAE, 0xF2, 0x50, 0xDB,
-0x10, 0xF0, 0x24, 0x6A, 0xD2, 0xF7, 0x19, 0x4A,
+0x10, 0xF0, 0x24, 0x6A, 0x12, 0xF7, 0x1D, 0x4A,
 0x30, 0xF0, 0x20, 0x6B, 0xAE, 0xF2, 0x54, 0xDB,
 0x10, 0xF0, 0x30, 0x6A, 0x23, 0xF6, 0x11, 0x4A,
 0x30, 0xF0, 0x20, 0x6B, 0xEE, 0xF4, 0x48, 0xDB,
-0x10, 0xF0, 0x24, 0x6A, 0xB4, 0xF0, 0x05, 0x4A,
+0x10, 0xF0, 0x24, 0x6A, 0xF3, 0xF7, 0x09, 0x4A,
 0x30, 0xF0, 0x20, 0x6B, 0xCE, 0xF5, 0x4C, 0xDB,
-0x10, 0xF0, 0x24, 0x6A, 0x14, 0xF0, 0x0D, 0x4A,
+0x10, 0xF0, 0x24, 0x6A, 0x53, 0xF7, 0x11, 0x4A,
 0x30, 0xF0, 0x20, 0x6B, 0xEE, 0xF5, 0x44, 0xDB,
-0x10, 0xF0, 0x24, 0x6A, 0x13, 0xF6, 0x0D, 0x4A,
+0x10, 0xF0, 0x24, 0x6A, 0x53, 0xF5, 0x11, 0x4A,
 0x30, 0xF0, 0x20, 0x6B, 0xEE, 0xF4, 0x50, 0xDB,
-0x10, 0xF0, 0x24, 0x6A, 0x93, 0xF6, 0x01, 0x4A,
+0x10, 0xF0, 0x24, 0x6A, 0xD3, 0xF5, 0x05, 0x4A,
 0x30, 0xF0, 0x20, 0x6B, 0xEE, 0xF4, 0x54, 0xDB,
 0x10, 0xF0, 0x23, 0x6A, 0x0A, 0xF7, 0x1D, 0x4A,
 0x30, 0xF0, 0x20, 0x6B, 0xAE, 0xF2, 0x58, 0xDB,
 0x10, 0xF0, 0x23, 0x6A, 0x2B, 0xF1, 0x01, 0x4A,
 0x30, 0xF0, 0x20, 0x6B, 0xAE, 0xF2, 0x5C, 0xDB,
-0x10, 0xF0, 0x24, 0x6A, 0x10, 0xF7, 0x19, 0x4A,
+0x10, 0xF0, 0x24, 0x6A, 0x50, 0xF6, 0x1D, 0x4A,
 0x30, 0xF0, 0x20, 0x6B, 0xCE, 0xF2, 0x40, 0xDB,
 0x10, 0xF0, 0x23, 0x6A, 0x24, 0xF0, 0x1D, 0x4A,
 0x30, 0xF0, 0x20, 0x6B, 0xCE, 0xF2, 0x44, 0xDB,
@@ -10968,7 +10943,7 @@ u8 array_mp_8821c_fw_ap[] = {
 0x30, 0xF0, 0x20, 0x6B, 0x2E, 0xF4, 0x4C, 0xDB,
 0x10, 0xF0, 0x23, 0x6A, 0xC8, 0xF1, 0x15, 0x4A,
 0x30, 0xF0, 0x20, 0x6B, 0x2E, 0xF4, 0x54, 0xDB,
-0x10, 0xF0, 0x24, 0x6A, 0x10, 0xF5, 0x0D, 0x4A,
+0x10, 0xF0, 0x24, 0x6A, 0x50, 0xF4, 0x11, 0x4A,
 0x30, 0xF0, 0x20, 0x6B, 0xCE, 0xF4, 0x50, 0xDB,
 0x10, 0xF0, 0x23, 0x6A, 0x49, 0xF2, 0x0D, 0x4A,
 0x30, 0xF0, 0x20, 0x6B, 0xCE, 0xF4, 0x54, 0xDB,
@@ -10976,10 +10951,10 @@ u8 array_mp_8821c_fw_ap[] = {
 0x30, 0xF0, 0x20, 0x6B, 0xCE, 0xF4, 0x5C, 0xDB,
 0x10, 0xF0, 0x23, 0x6A, 0x49, 0xF2, 0x19, 0x4A,
 0x30, 0xF0, 0x20, 0x6B, 0xCE, 0xF4, 0x58, 0xDB,
-0x10, 0xF0, 0x23, 0x6A, 0xEF, 0xF1, 0x15, 0x4A,
+0x10, 0xF0, 0x23, 0x6A, 0x4F, 0xF1, 0x15, 0x4A,
 0x30, 0xF0, 0x20, 0x6B, 0xEE, 0xF4, 0x40, 0xDB,
 0x20, 0xE8, 0x00, 0x65, 0x10, 0xF0, 0x24, 0x6A,
-0x16, 0xF0, 0x50, 0x9A, 0x60, 0x9A, 0x03, 0x6A,
+0x55, 0xF7, 0x50, 0x9A, 0x60, 0x9A, 0x03, 0x6A,
 0x62, 0x33, 0x72, 0x33, 0x4C, 0xEB, 0x02, 0x6A,
 0x04, 0x23, 0x01, 0x73, 0x01, 0x6A, 0x01, 0x60,
 0x03, 0x6A, 0x20, 0xE8, 0xFC, 0x63, 0x07, 0x62,
@@ -10987,13 +10962,13 @@ u8 array_mp_8821c_fw_ap[] = {
 0xE8, 0xF2, 0x5C, 0xA2, 0xFF, 0x68, 0x24, 0x67,
 0x02, 0x72, 0x0C, 0xE9, 0x03, 0x61, 0x01, 0x71,
 0x10, 0x61, 0x1D, 0x10, 0x10, 0xF0, 0x24, 0x6A,
-0xF5, 0xF2, 0x40, 0x9A, 0x01, 0x6B, 0x6B, 0xEB,
+0x35, 0xF2, 0x44, 0x9A, 0x01, 0x6B, 0x6B, 0xEB,
 0x60, 0xC2, 0x30, 0xF0, 0x20, 0x6A, 0xCE, 0xF4,
 0x5C, 0x9A, 0x64, 0x6C, 0x40, 0xEA, 0x00, 0x18,
-0xDD, 0xE8, 0x10, 0xF0, 0x24, 0x6A, 0xD5, 0xF2,
-0x7C, 0x9A, 0x80, 0x6C, 0x8B, 0xEC, 0x40, 0xA3,
+0xAE, 0xE8, 0x10, 0xF0, 0x24, 0x6A, 0x35, 0xF2,
+0x60, 0x9A, 0x80, 0x6C, 0x8B, 0xEC, 0x40, 0xA3,
 0x0C, 0xEA, 0x8E, 0xEA, 0x0C, 0xEA, 0x40, 0xC3,
-0x91, 0x67, 0x00, 0x18, 0xBA, 0xDB, 0x07, 0x97,
+0x91, 0x67, 0x00, 0x18, 0x92, 0xDB, 0x07, 0x97,
 0x06, 0x91, 0x05, 0x90, 0x04, 0x63, 0x00, 0xEF,
 0x15, 0xF0, 0xFF, 0x0F, 0x00, 0x00, 0x00, 0x00,
 0x15, 0xF0, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00,
@@ -11010,67 +10985,67 @@ u8 array_mp_8821c_fw_ap[] = {
 0x15, 0xF0, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00,
 0x00, 0xF0, 0xFF, 0xFF, 0xFF, 0x03, 0x00, 0x00,
 0x15, 0xF0, 0xFF, 0xFF, 0x0F, 0x00, 0x00, 0x00,
-0x10, 0xF0, 0x24, 0x6B, 0xB5, 0xF7, 0x78, 0x9B,
+0x10, 0xF0, 0x24, 0x6B, 0xF5, 0xF6, 0x78, 0x9B,
 0xFF, 0x6A, 0x8C, 0xEA, 0x60, 0x9B, 0x80, 0xF1,
 0x01, 0x6C, 0x8B, 0xEC, 0x8C, 0xEB, 0x10, 0xF0,
-0x24, 0x6C, 0x95, 0xF3, 0x98, 0x9C, 0x01, 0x72,
+0x24, 0x6C, 0xD5, 0xF2, 0x9C, 0x9C, 0x01, 0x72,
 0x80, 0x9C, 0x05, 0x60, 0x02, 0x72, 0x05, 0x61,
 0xFF, 0x6A, 0x01, 0x4A, 0x01, 0x10, 0x80, 0x6A,
-0x4D, 0xEB, 0x10, 0xF0, 0x24, 0x6A, 0xB5, 0xF7,
+0x4D, 0xEB, 0x10, 0xF0, 0x24, 0x6A, 0xF5, 0xF6,
 0x58, 0x9A, 0x60, 0xDA, 0x10, 0xF0, 0x24, 0x6A,
-0xB5, 0xF7, 0x5C, 0x9A, 0x10, 0xF0, 0x24, 0x6B,
-0x95, 0xF3, 0x78, 0x9B, 0x8C, 0xEA, 0x40, 0xDB,
-0x10, 0xF0, 0x24, 0x6B, 0xD5, 0xF7, 0x60, 0x9B,
+0xF5, 0xF6, 0x5C, 0x9A, 0x10, 0xF0, 0x24, 0x6B,
+0xD5, 0xF2, 0x7C, 0x9B, 0x8C, 0xEA, 0x40, 0xDB,
+0x10, 0xF0, 0x24, 0x6B, 0x15, 0xF7, 0x60, 0x9B,
 0x50, 0x6A, 0x40, 0xC3, 0x10, 0xF0, 0x24, 0x6B,
-0xD5, 0xF7, 0x64, 0x9B, 0x40, 0xC3, 0x20, 0xE8,
-0x10, 0xF0, 0x24, 0x6A, 0xD5, 0xF7, 0x50, 0x9A,
-0x10, 0xF0, 0x24, 0x6C, 0xD5, 0xF7, 0x98, 0x9C,
+0x15, 0xF7, 0x64, 0x9B, 0x40, 0xC3, 0x20, 0xE8,
+0x10, 0xF0, 0x24, 0x6A, 0x15, 0xF7, 0x50, 0x9A,
+0x10, 0xF0, 0x24, 0x6C, 0x15, 0xF7, 0x98, 0x9C,
 0x60, 0xAA, 0xEF, 0xF7, 0x1F, 0x6A, 0x6C, 0xEA,
 0x30, 0xF0, 0x20, 0x6B, 0xEF, 0xF5, 0x58, 0xCB,
-0x10, 0xF0, 0x24, 0x6A, 0xD5, 0xF7, 0x74, 0x9A,
+0x10, 0xF0, 0x24, 0x6A, 0x15, 0xF7, 0x74, 0x9A,
 0x40, 0x9B, 0x8D, 0xEA, 0x40, 0xDB, 0x20, 0xE8,
 0xFF, 0x6A, 0x4C, 0xEC, 0x03, 0x6B, 0x8C, 0xEB,
 0x4C, 0xEE, 0x3C, 0x2B, 0x10, 0xF0, 0x24, 0x6B,
-0xF5, 0xF7, 0x6C, 0x9B, 0x80, 0xC3, 0x0F, 0x6B,
+0x35, 0xF7, 0x6C, 0x9B, 0x80, 0xC3, 0x0F, 0x6B,
 0xCC, 0xEB, 0x34, 0x23, 0x01, 0x6C, 0x6C, 0xEC,
-0x06, 0x24, 0x10, 0xF0, 0x24, 0x6C, 0xF5, 0xF7,
+0x06, 0x24, 0x10, 0xF0, 0x24, 0x6C, 0x35, 0xF7,
 0x90, 0x9C, 0xAC, 0xEA, 0x40, 0xC4, 0x02, 0x6A,
 0x6C, 0xEA, 0x08, 0x22, 0xFF, 0x6C, 0xA2, 0x32,
-0x8C, 0xEA, 0x10, 0xF0, 0x24, 0x6C, 0xF5, 0xF7,
+0x8C, 0xEA, 0x10, 0xF0, 0x24, 0x6C, 0x35, 0xF7,
 0x94, 0x9C, 0x40, 0xC4, 0x04, 0x6A, 0x6C, 0xEA,
 0x09, 0x22, 0xA2, 0x32, 0xFF, 0x6C, 0x42, 0x32,
-0x8C, 0xEA, 0x10, 0xF0, 0x24, 0x6C, 0xF5, 0xF7,
+0x8C, 0xEA, 0x10, 0xF0, 0x24, 0x6C, 0x35, 0xF7,
 0x98, 0x9C, 0x40, 0xC4, 0x6E, 0x32, 0x07, 0x22,
-0x10, 0xF0, 0x24, 0x6A, 0xF5, 0xF7, 0x5C, 0x9A,
+0x10, 0xF0, 0x24, 0x6A, 0x35, 0xF7, 0x5C, 0x9A,
 0x00, 0xF6, 0xA2, 0x35, 0xA0, 0xC2, 0x20, 0x6A,
-0x6D, 0xEA, 0x10, 0xF0, 0x24, 0x6B, 0x16, 0xF0,
+0x6D, 0xEA, 0x10, 0xF0, 0x24, 0x6B, 0x55, 0xF7,
 0x60, 0x9B, 0x40, 0xC3, 0x00, 0x6A, 0x40, 0xC3,
 0x01, 0x6A, 0x20, 0xE8, 0x00, 0x6A, 0x20, 0xE8,
 0xFF, 0x6A, 0x8C, 0xEA, 0x03, 0x6B, 0x4C, 0xEB,
 0x03, 0x23, 0x01, 0x6A, 0x4B, 0xEA, 0x20, 0xE8,
-0x10, 0xF0, 0x24, 0x6C, 0xF5, 0xF7, 0x8C, 0x9C,
-0x40, 0xC4, 0x10, 0xF0, 0x24, 0x6A, 0x16, 0xF0,
+0x10, 0xF0, 0x24, 0x6C, 0x35, 0xF7, 0x8C, 0x9C,
+0x40, 0xC4, 0x10, 0xF0, 0x24, 0x6A, 0x55, 0xF7,
 0x80, 0x9A, 0x30, 0x6A, 0x40, 0xC4, 0x10, 0xF0,
-0x24, 0x6A, 0xF5, 0xF7, 0x50, 0x9A, 0x40, 0x9A,
+0x24, 0x6A, 0x35, 0xF7, 0x50, 0x9A, 0x40, 0x9A,
 0x60, 0xC4, 0x20, 0xE8, 0xFD, 0x63, 0x05, 0x62,
-0x10, 0xF0, 0x24, 0x6A, 0x16, 0xF0, 0xA4, 0x9A,
+0x10, 0xF0, 0x24, 0x6A, 0x55, 0xF7, 0xA4, 0x9A,
 0xE0, 0xF3, 0x10, 0x6C, 0x0F, 0x6E, 0x80, 0x18,
 0xB2, 0x07, 0xE0, 0xF3, 0x0C, 0x6C, 0x80, 0x18,
 0xD4, 0x07, 0xFF, 0x6B, 0x4C, 0xEB, 0x0B, 0x73,
-0x0B, 0x61, 0x10, 0xF0, 0x24, 0x6A, 0x16, 0xF0,
-0x68, 0x9A, 0x10, 0xF0, 0x24, 0x6C, 0x16, 0xF0,
+0x0B, 0x61, 0x10, 0xF0, 0x24, 0x6A, 0x55, 0xF7,
+0x68, 0x9A, 0x10, 0xF0, 0x24, 0x6C, 0x55, 0xF7,
 0x8C, 0x9C, 0x40, 0x9B, 0x8C, 0xEA, 0x40, 0xDB,
 0x05, 0x97, 0x03, 0x63, 0x00, 0xEF, 0x00, 0x65,
 0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A,
 0x05, 0x6B, 0x65, 0xF4, 0x64, 0xDA, 0x00, 0x6B,
 0x65, 0xF4, 0x60, 0xDA, 0x20, 0xE8, 0x00, 0x65,
 0xE5, 0x63, 0x35, 0x62, 0x34, 0xD1, 0x33, 0xD0,
-0x10, 0xF0, 0x24, 0x6D, 0x07, 0x04, 0xF4, 0xF6,
-0x0C, 0x4D, 0x54, 0x6E, 0x00, 0x18, 0x50, 0xD2,
-0x10, 0xF0, 0x24, 0x6D, 0x1C, 0x04, 0x94, 0xF6,
-0x18, 0x4D, 0x54, 0x6E, 0x00, 0x18, 0x50, 0xD2,
-0x10, 0xF0, 0x24, 0x6A, 0x94, 0xF6, 0x6C, 0x9A,
-0x94, 0xF6, 0x0C, 0x4A, 0x00, 0x69, 0x04, 0xD3,
+0x10, 0xF0, 0x24, 0x6D, 0x07, 0x04, 0x34, 0xF6,
+0x10, 0x4D, 0x54, 0x6E, 0x00, 0x18, 0x50, 0xD2,
+0x10, 0xF0, 0x24, 0x6D, 0x1C, 0x04, 0xD4, 0xF5,
+0x1C, 0x4D, 0x54, 0x6E, 0x00, 0x18, 0x50, 0xD2,
+0x10, 0xF0, 0x24, 0x6A, 0xD4, 0xF5, 0x70, 0x9A,
+0xD4, 0xF5, 0x10, 0x4A, 0x00, 0x69, 0x04, 0xD3,
 0x61, 0x9A, 0x44, 0xAA, 0x05, 0xD3, 0x7D, 0x67,
 0x4C, 0xCB, 0x52, 0x68, 0x18, 0xE9, 0x30, 0xF0,
 0x20, 0x6A, 0x60, 0xF2, 0x08, 0x4A, 0x61, 0x6F,
@@ -11105,11 +11080,11 @@ u8 array_mp_8821c_fw_ap[] = {
 0x08, 0x4A, 0xE5, 0xF2, 0x76, 0xC2, 0x30, 0xF0,
 0x20, 0x6A, 0x4E, 0xF5, 0x48, 0x9A, 0x40, 0xEA,
 0x30, 0xF0, 0x20, 0x6A, 0x4E, 0xF5, 0x54, 0x9A,
-0x40, 0xEA, 0x10, 0xF0, 0x24, 0x6A, 0xF5, 0xF4,
-0x44, 0x9A, 0x32, 0x6B, 0x30, 0xF0, 0x20, 0x6C,
-0x60, 0xC2, 0x10, 0xF0, 0x24, 0x6A, 0xF5, 0xF4,
-0x48, 0x9A, 0x10, 0xF0, 0x24, 0x6B, 0xF5, 0xF4,
-0x6C, 0x9B, 0x40, 0xA2, 0x05, 0xF4, 0x10, 0x4C,
+0x40, 0xEA, 0x10, 0xF0, 0x24, 0x6A, 0x35, 0xF4,
+0x48, 0x9A, 0x32, 0x6B, 0x30, 0xF0, 0x20, 0x6C,
+0x60, 0xC2, 0x10, 0xF0, 0x24, 0x6A, 0x35, 0xF4,
+0x4C, 0x9A, 0x10, 0xF0, 0x24, 0x6B, 0x35, 0xF4,
+0x70, 0x9B, 0x40, 0xA2, 0x05, 0xF4, 0x10, 0x4C,
 0x1C, 0x05, 0x0C, 0xEA, 0xFF, 0x4A, 0x0C, 0xEA,
 0x40, 0xC3, 0x30, 0xF0, 0x20, 0x68, 0x4E, 0xF2,
 0x50, 0x98, 0x54, 0x6E, 0x40, 0xEA, 0x4E, 0xF2,
@@ -11131,23 +11106,23 @@ u8 array_mp_8821c_fw_ap[] = {
 0x05, 0x67, 0x0C, 0xD6, 0x27, 0x67, 0x1F, 0x22,
 0x1F, 0xF7, 0x00, 0x6A, 0xAC, 0xEA, 0x02, 0xF0,
 0x00, 0x72, 0x01, 0x60, 0x05, 0x2A, 0x10, 0xF0,
-0x24, 0x6A, 0xB5, 0xF1, 0x5C, 0x9A, 0x04, 0x10,
-0x10, 0xF0, 0x24, 0x6A, 0xD5, 0xF1, 0x40, 0x9A,
+0x24, 0x6A, 0x15, 0xF1, 0x40, 0x9A, 0x04, 0x10,
+0x10, 0xF0, 0x24, 0x6A, 0x15, 0xF1, 0x44, 0x9A,
 0x49, 0xE0, 0x40, 0x9A, 0x0C, 0x94, 0x04, 0xD2,
 0x30, 0xF0, 0x20, 0x6A, 0xAE, 0xF4, 0x50, 0x9A,
 0x40, 0xEA, 0x0C, 0x93, 0x24, 0xEA, 0x6F, 0xEA,
 0x04, 0x93, 0x6C, 0xEA, 0x4D, 0xE9, 0x1F, 0xF7,
 0x00, 0x6A, 0x0C, 0xEA, 0x02, 0xF0, 0x00, 0x72,
 0x01, 0x60, 0x05, 0x2A, 0x10, 0xF0, 0x24, 0x6A,
-0xB5, 0xF1, 0x5C, 0x9A, 0x04, 0x10, 0x10, 0xF0,
-0x24, 0x6A, 0xD5, 0xF1, 0x40, 0x9A, 0x41, 0xE0,
+0x15, 0xF1, 0x40, 0x9A, 0x04, 0x10, 0x10, 0xF0,
+0x24, 0x6A, 0x15, 0xF1, 0x44, 0x9A, 0x41, 0xE0,
 0x20, 0xD8, 0x09, 0x97, 0x08, 0x91, 0x07, 0x90,
 0x05, 0x63, 0x00, 0xEF, 0xFC, 0x63, 0x07, 0x62,
 0x06, 0xD1, 0x05, 0xD0, 0x1F, 0xF7, 0x00, 0x6A,
 0xAC, 0xEA, 0x02, 0xF0, 0x00, 0x72, 0x26, 0x67,
 0x01, 0x60, 0x05, 0x2A, 0x10, 0xF0, 0x24, 0x6A,
-0xB5, 0xF1, 0x5C, 0x9A, 0x04, 0x10, 0x10, 0xF0,
-0x24, 0x6A, 0xD5, 0xF1, 0x40, 0x9A, 0x55, 0xE5,
+0x15, 0xF1, 0x40, 0x9A, 0x04, 0x10, 0x10, 0xF0,
+0x24, 0x6A, 0x15, 0xF1, 0x44, 0x9A, 0x55, 0xE5,
 0x30, 0xF0, 0x20, 0x6A, 0x00, 0x9D, 0xAE, 0xF4,
 0x50, 0x9A, 0x91, 0x67, 0x2C, 0xE8, 0x40, 0xEA,
 0x06, 0xEA, 0x50, 0x67, 0x07, 0x97, 0x06, 0x91,
@@ -11160,15 +11135,15 @@ u8 array_mp_8821c_fw_ap[] = {
 0x04, 0x90, 0x03, 0x63, 0x00, 0xEF, 0x00, 0x65,
 0xFC, 0x63, 0x07, 0x62, 0x06, 0xD1, 0x05, 0xD0,
 0x10, 0xF0, 0x24, 0x6B, 0x30, 0xF0, 0x20, 0x68,
-0xB5, 0xF3, 0x14, 0x4B, 0xCE, 0xF4, 0x50, 0x98,
+0xF5, 0xF2, 0x18, 0x4B, 0xCE, 0xF4, 0x50, 0x98,
 0xC0, 0x9B, 0x03, 0xF3, 0x00, 0x69, 0x01, 0x6D,
 0x91, 0x67, 0xAB, 0xED, 0x40, 0xEA, 0x10, 0xF0,
-0x24, 0x6B, 0xCE, 0xF4, 0x50, 0x98, 0xB5, 0xF3,
-0xD8, 0x9B, 0x01, 0x6D, 0x91, 0x67, 0xAB, 0xED,
+0x24, 0x6B, 0xCE, 0xF4, 0x50, 0x98, 0xF5, 0xF2,
+0xDC, 0x9B, 0x01, 0x6D, 0x91, 0x67, 0xAB, 0xED,
 0x40, 0xEA, 0x10, 0xF0, 0x24, 0x6B, 0xCE, 0xF4,
-0x50, 0x98, 0xB5, 0xF3, 0xDC, 0x9B, 0x01, 0x6D,
+0x50, 0x98, 0x15, 0xF3, 0xC0, 0x9B, 0x01, 0x6D,
 0x91, 0x67, 0xAB, 0xED, 0x40, 0xEA, 0x10, 0xF0,
-0x24, 0x6B, 0xB5, 0xF3, 0x14, 0x4B, 0xCE, 0xF4,
+0x24, 0x6B, 0xF5, 0xF2, 0x18, 0x4B, 0xCE, 0xF4,
 0x50, 0x98, 0xC0, 0x9B, 0x01, 0x6D, 0x91, 0x67,
 0xAB, 0xED, 0x40, 0xEA, 0x07, 0x97, 0x06, 0x91,
 0x05, 0x90, 0x04, 0x63, 0x00, 0xEF, 0x00, 0x65,
@@ -11176,9 +11151,9 @@ u8 array_mp_8821c_fw_ap[] = {
 0x00, 0x6A, 0x0B, 0xD7, 0xE0, 0xAE, 0x1F, 0xF7,
 0x00, 0x6B, 0xEC, 0xEB, 0x02, 0xF0, 0x00, 0x73,
 0x01, 0x60, 0x09, 0x2B, 0x10, 0xF0, 0x24, 0x6B,
-0xE0, 0xAE, 0xB5, 0xF1, 0x7C, 0x9B, 0x6D, 0xE7,
+0xE0, 0xAE, 0x15, 0xF1, 0x60, 0x9B, 0x6D, 0xE7,
 0xE0, 0xA4, 0xE0, 0xC3, 0x07, 0x10, 0x10, 0xF0,
-0x24, 0x6B, 0xD5, 0xF1, 0x60, 0x9B, 0x7D, 0xE7,
+0x24, 0x6B, 0x15, 0xF1, 0x64, 0x9B, 0x7D, 0xE7,
 0x60, 0xA4, 0x60, 0xC7, 0x01, 0x4A, 0xFF, 0x6B,
 0x6C, 0xEA, 0x04, 0x72, 0x02, 0x4E, 0x01, 0x4C,
 0xE1, 0x61, 0x25, 0x67, 0x00, 0x68, 0x0B, 0x92,
@@ -11188,13 +11163,13 @@ u8 array_mp_8821c_fw_ap[] = {
 0x04, 0x49, 0xF1, 0x61, 0x07, 0x97, 0x06, 0x91,
 0x05, 0x90, 0x04, 0x63, 0x00, 0xEF, 0x00, 0x65,
 0xFC, 0x63, 0x07, 0x62, 0x06, 0xD1, 0x05, 0xD0,
-0x10, 0xF0, 0x24, 0x6A, 0x35, 0xF2, 0x58, 0x9A,
+0x10, 0xF0, 0x24, 0x6A, 0x75, 0xF1, 0x5C, 0x9A,
 0x7F, 0x6B, 0xFF, 0x6C, 0x60, 0xC2, 0x10, 0xF0,
-0x24, 0x6A, 0xD5, 0xF1, 0x48, 0x9A, 0x14, 0x6B,
+0x24, 0x6A, 0x15, 0xF1, 0x4C, 0x9A, 0x14, 0x6B,
 0x01, 0x6D, 0x60, 0xC2, 0x10, 0xF0, 0x24, 0x6A,
-0xD5, 0xF1, 0x4C, 0x9A, 0x10, 0x6B, 0x30, 0xF0,
+0x15, 0xF1, 0x50, 0x9A, 0x10, 0x6B, 0x30, 0xF0,
 0x20, 0x68, 0x60, 0xC2, 0x10, 0xF0, 0x24, 0x6A,
-0xD5, 0xF3, 0x68, 0x9A, 0x01, 0x6E, 0x81, 0xF4,
+0x15, 0xF3, 0x6C, 0x9A, 0x01, 0x6E, 0x81, 0xF4,
 0x14, 0x69, 0x40, 0xA3, 0x8C, 0xEA, 0xAD, 0xEA,
 0x8C, 0xEA, 0x40, 0xC3, 0xCE, 0xF4, 0x50, 0x98,
 0x01, 0xF0, 0x0D, 0x4C, 0xEF, 0xF7, 0x1F, 0x4D,
@@ -11206,22 +11181,22 @@ u8 array_mp_8821c_fw_ap[] = {
 0x04, 0x6E, 0x40, 0xEA, 0xCE, 0xF4, 0x50, 0x98,
 0xFF, 0x6D, 0x01, 0xF3, 0x00, 0x6C, 0x01, 0x4D,
 0x00, 0x6E, 0x40, 0xEA, 0x10, 0xF0, 0x24, 0x6B,
-0xF5, 0xF1, 0xA8, 0x9B, 0xCE, 0xF4, 0x50, 0x98,
+0x35, 0xF1, 0xAC, 0x9B, 0xCE, 0xF4, 0x50, 0x98,
 0x01, 0xF0, 0x08, 0x6C, 0x00, 0x6E, 0x40, 0xEA,
 0xCE, 0xF4, 0x50, 0x98, 0x21, 0xF0, 0x18, 0x6C,
 0x0E, 0x6D, 0x07, 0x6E, 0x40, 0xEA, 0x07, 0x97,
 0x06, 0x91, 0x05, 0x90, 0x04, 0x63, 0x00, 0xEF,
 0xFC, 0x63, 0x07, 0x62, 0x06, 0xD1, 0x05, 0xD0,
 0xFF, 0x6A, 0x8C, 0xEA, 0x1E, 0x22, 0x30, 0xF0,
-0x20, 0x68, 0x10, 0xF0, 0x24, 0x6B, 0xD5, 0xF3,
-0xCC, 0x9B, 0xCE, 0xF4, 0x50, 0x98, 0x01, 0x69,
+0x20, 0x68, 0x10, 0xF0, 0x24, 0x6B, 0x15, 0xF3,
+0xD0, 0x9B, 0xCE, 0xF4, 0x50, 0x98, 0x01, 0x69,
 0x2B, 0xE9, 0xA1, 0xF4, 0x10, 0x6C, 0xB1, 0x67,
 0x40, 0xEA, 0xCE, 0xF4, 0x50, 0x98, 0xA1, 0xF4,
 0x14, 0x6C, 0xB1, 0x67, 0x6E, 0xF7, 0x17, 0x6E,
 0x40, 0xEA, 0xCE, 0xF4, 0x50, 0x98, 0xA1, 0xF4,
 0x1C, 0x6C, 0xB1, 0x67, 0x21, 0xF0, 0x1B, 0x6E,
 0x1D, 0x10, 0x30, 0xF0, 0x20, 0x68, 0x10, 0xF0,
-0x24, 0x6B, 0xD5, 0xF3, 0xD0, 0x9B, 0xCE, 0xF4,
+0x24, 0x6B, 0x15, 0xF3, 0xD4, 0x9B, 0xCE, 0xF4,
 0x50, 0x98, 0x01, 0x69, 0x2B, 0xE9, 0xA1, 0xF4,
 0x10, 0x6C, 0xB1, 0x67, 0x40, 0xEA, 0xCE, 0xF4,
 0x50, 0x98, 0xA1, 0xF4, 0x14, 0x6C, 0xB1, 0x67,
@@ -11267,52 +11242,52 @@ u8 array_mp_8821c_fw_ap[] = {
 0xFF, 0x6B, 0x52, 0x32, 0x0C, 0xEA, 0x6C, 0xEA,
 0x03, 0x22, 0x02, 0x72, 0x42, 0x60, 0xA7, 0x10,
 0x10, 0xF0, 0x24, 0x6E, 0x30, 0xF0, 0x20, 0x68,
-0xD5, 0xF3, 0x14, 0x4E, 0xCE, 0xF4, 0x50, 0x98,
+0x15, 0xF3, 0x18, 0x4E, 0xCE, 0xF4, 0x50, 0x98,
 0xA0, 0x9E, 0x81, 0xF4, 0x14, 0x6C, 0x00, 0x6E,
 0x40, 0xEA, 0xFD, 0x67, 0x7D, 0xA7, 0x30, 0xF0,
 0x20, 0x69, 0x6F, 0xF0, 0x14, 0x49, 0x64, 0x33,
-0x10, 0xF0, 0x24, 0x6E, 0x2D, 0xE3, 0xD5, 0xF3,
-0x18, 0x4E, 0xCE, 0xF4, 0x50, 0x98, 0xA0, 0x9E,
+0x10, 0xF0, 0x24, 0x6E, 0x2D, 0xE3, 0x15, 0xF3,
+0x1C, 0x4E, 0xCE, 0xF4, 0x50, 0x98, 0xA0, 0x9E,
 0xC0, 0xAB, 0x01, 0xF4, 0x1C, 0x6C, 0x40, 0xEA,
-0x10, 0xF0, 0x24, 0x6F, 0xD5, 0xF3, 0x14, 0x4F,
+0x10, 0xF0, 0x24, 0x6F, 0x15, 0xF3, 0x18, 0x4F,
 0xA0, 0x9F, 0xCE, 0xF4, 0x50, 0x98, 0x81, 0xF6,
 0x14, 0x6C, 0x00, 0x6E, 0x40, 0xEA, 0x7D, 0x67,
-0x5D, 0xA3, 0x10, 0xF0, 0x24, 0x6E, 0xD5, 0xF3,
-0x18, 0x4E, 0x44, 0x32, 0x25, 0xE2, 0xA0, 0x9E,
+0x5D, 0xA3, 0x10, 0xF0, 0x24, 0x6E, 0x15, 0xF3,
+0x1C, 0x4E, 0x44, 0x32, 0x25, 0xE2, 0xA0, 0x9E,
 0xCE, 0xF4, 0x50, 0x98, 0xC0, 0xA9, 0x01, 0xF6,
 0x1C, 0x6C, 0x40, 0xEA, 0x10, 0xF0, 0x24, 0x6C,
-0x36, 0xF0, 0x18, 0x4C, 0x80, 0x18, 0xFE, 0x11,
+0x75, 0xF7, 0x18, 0x4C, 0x80, 0x18, 0xFE, 0x11,
 0x66, 0x10, 0xFD, 0x67, 0x9D, 0xA7, 0x20, 0xF0,
 0xA0, 0xA7, 0x20, 0xF0, 0xC1, 0x87, 0x00, 0xF0,
 0x19, 0x01, 0x06, 0x07, 0x04, 0xD1, 0x80, 0x18,
 0x42, 0x09, 0x5D, 0x67, 0xB8, 0xA2, 0xD9, 0xA2,
-0x10, 0xF0, 0x24, 0x6C, 0x56, 0xF0, 0x04, 0x4C,
+0x10, 0xF0, 0x24, 0x6C, 0x95, 0xF7, 0x04, 0x4C,
 0x80, 0x18, 0xFE, 0x11, 0x10, 0xF0, 0x24, 0x6B,
-0x30, 0xF0, 0x20, 0x68, 0xFD, 0x67, 0xD5, 0xF3,
-0x14, 0x4B, 0xD8, 0xA7, 0xA0, 0x9B, 0xCE, 0xF4,
+0x30, 0xF0, 0x20, 0x68, 0xFD, 0x67, 0x15, 0xF3,
+0x18, 0x4B, 0xD8, 0xA7, 0xA0, 0x9B, 0xCE, 0xF4,
 0x50, 0x98, 0x81, 0xF4, 0x14, 0x6C, 0x30, 0xF0,
 0x20, 0x69, 0x40, 0xEA, 0x5D, 0x67, 0x79, 0xA2,
 0x6F, 0xF0, 0x14, 0x49, 0x10, 0xF0, 0x24, 0x6E,
-0x64, 0x33, 0x2D, 0xE3, 0xD5, 0xF3, 0x18, 0x4E,
+0x64, 0x33, 0x2D, 0xE3, 0x15, 0xF3, 0x1C, 0x4E,
 0xA0, 0x9E, 0xCE, 0xF4, 0x50, 0x98, 0xC0, 0xAB,
 0x01, 0xF4, 0x1C, 0x6C, 0x40, 0xEA, 0xFD, 0x67,
 0x9D, 0xA7, 0x20, 0xF0, 0xA4, 0xA7, 0x20, 0xF0,
 0xC5, 0x87, 0x00, 0xF0, 0x19, 0x02, 0x06, 0x07,
 0x04, 0xD2, 0x80, 0x18, 0x42, 0x09, 0x7D, 0x67,
 0xB8, 0xA3, 0xD9, 0xA3, 0x10, 0xF0, 0x24, 0x6C,
-0x76, 0xF0, 0x04, 0x4C, 0x80, 0x18, 0xFE, 0x11,
-0x10, 0xF0, 0x24, 0x6E, 0xD5, 0xF3, 0x14, 0x4E,
+0xB5, 0xF7, 0x04, 0x4C, 0x80, 0x18, 0xFE, 0x11,
+0x10, 0xF0, 0x24, 0x6E, 0x15, 0xF3, 0x18, 0x4E,
 0xFD, 0x67, 0xA0, 0x9E, 0xCE, 0xF4, 0x50, 0x98,
 0xD8, 0xA7, 0x81, 0xF6, 0x14, 0x6C, 0x40, 0xEA,
 0x7D, 0x67, 0x59, 0xA3, 0x10, 0xF0, 0x24, 0x6E,
-0xD5, 0xF3, 0x18, 0x4E, 0x44, 0x32, 0x25, 0xE2,
+0x15, 0xF3, 0x1C, 0x4E, 0x44, 0x32, 0x25, 0xE2,
 0xA0, 0x9E, 0xCE, 0xF4, 0x50, 0x98, 0xC0, 0xA9,
 0x01, 0xF6, 0x1C, 0x6C, 0x40, 0xEA, 0x0F, 0x97,
 0x0E, 0x91, 0x0D, 0x90, 0x00, 0x6A, 0x08, 0x63,
 0x00, 0xEF, 0x00, 0x65, 0xF9, 0x63, 0x0D, 0x62,
 0x0C, 0xD1, 0x0B, 0xD0, 0x30, 0xF0, 0x20, 0x68,
 0xC0, 0xF1, 0x08, 0x48, 0x28, 0xF1, 0x4C, 0xA0,
-0x69, 0x2A, 0x10, 0xF0, 0x24, 0x6C, 0x96, 0xF0,
+0x69, 0x2A, 0x10, 0xF0, 0x24, 0x6C, 0xD5, 0xF7,
 0x04, 0x4C, 0x80, 0x18, 0xFE, 0x11, 0x01, 0x6A,
 0xA7, 0xF6, 0x46, 0xC0, 0x30, 0xF0, 0x21, 0x6A,
 0x50, 0xF3, 0x0E, 0x4A, 0x30, 0xF0, 0x20, 0x6F,
@@ -11340,26 +11315,26 @@ u8 array_mp_8821c_fw_ap[] = {
 0x04, 0x4F, 0x10, 0x4E, 0x18, 0x65, 0x03, 0x4D,
 0x01, 0x4C, 0xB3, 0x2A, 0x10, 0xF0, 0x24, 0x6B,
 0x30, 0xF0, 0x20, 0x6A, 0xCE, 0xF4, 0x50, 0x9A,
-0xD5, 0xF3, 0xDC, 0x9B, 0x01, 0x6D, 0x03, 0xF3,
+0x35, 0xF3, 0xC0, 0x9B, 0x01, 0x6D, 0x03, 0xF3,
 0x10, 0x6C, 0xAB, 0xED, 0x40, 0xEA, 0x0D, 0x97,
 0x0C, 0x91, 0x0B, 0x90, 0x07, 0x63, 0x00, 0xEF,
 0xFC, 0x63, 0x07, 0x62, 0x06, 0xD1, 0x05, 0xD0,
 0x00, 0x6B, 0x0B, 0xD7, 0xE0, 0xAE, 0x1F, 0xF7,
 0x00, 0x6A, 0xEC, 0xEA, 0x02, 0xF0, 0x00, 0x72,
 0x01, 0x60, 0x08, 0x2A, 0x10, 0xF0, 0x24, 0x6A,
-0xE0, 0xAE, 0xB5, 0xF1, 0x5C, 0x9A, 0x49, 0xE7,
+0xE0, 0xAE, 0x15, 0xF1, 0x40, 0x9A, 0x49, 0xE7,
 0xE0, 0xA2, 0x06, 0x10, 0x10, 0xF0, 0x24, 0x6A,
-0xD5, 0xF1, 0x40, 0x9A, 0x5D, 0xE7, 0xE0, 0xA7,
+0x15, 0xF1, 0x44, 0x9A, 0x5D, 0xE7, 0xE0, 0xA7,
 0xFF, 0x6A, 0xEC, 0xEA, 0x7D, 0xE4, 0x01, 0x4B,
 0x04, 0x73, 0x40, 0xC7, 0x02, 0x4E, 0xE2, 0x61,
 0x25, 0x67, 0x00, 0x68, 0x0B, 0x93, 0x01, 0x6D,
 0xAB, 0xED, 0x09, 0xE3, 0x80, 0xAA, 0x02, 0x48,
-0x00, 0x18, 0x34, 0xE1, 0x16, 0x70, 0x40, 0xD9,
+0x00, 0x18, 0x05, 0xE1, 0x16, 0x70, 0x40, 0xD9,
 0x04, 0x49, 0xF4, 0x61, 0x07, 0x97, 0x06, 0x91,
 0x05, 0x90, 0x04, 0x63, 0x00, 0xEF, 0x00, 0x65,
 0xFB, 0x63, 0x09, 0x62, 0x08, 0xD1, 0x07, 0xD0,
-0x10, 0xF0, 0x24, 0x6B, 0xFF, 0x69, 0xB5, 0xF3,
-0x74, 0x9B, 0x30, 0xF0, 0x20, 0x68, 0x2C, 0xEC,
+0x10, 0xF0, 0x24, 0x6B, 0xFF, 0x69, 0xF5, 0xF2,
+0x78, 0x9B, 0x30, 0xF0, 0x20, 0x68, 0x2C, 0xEC,
 0xCE, 0xF4, 0x50, 0x98, 0xAC, 0xE9, 0x24, 0x36,
 0x01, 0x6D, 0x04, 0xD4, 0xAB, 0xED, 0x03, 0xF3,
 0x00, 0x6C, 0x6D, 0xEE, 0x40, 0xEA, 0x04, 0x92,
@@ -11368,24 +11343,24 @@ u8 array_mp_8821c_fw_ap[] = {
 0x07, 0x10, 0xCE, 0xF4, 0x50, 0x98, 0x03, 0xF3,
 0x0C, 0x6C, 0x06, 0xF0, 0x00, 0x6D, 0x01, 0x6E,
 0x40, 0xEA, 0x10, 0xF0, 0x24, 0x6B, 0x30, 0xF0,
-0x20, 0x6A, 0xCE, 0xF4, 0x50, 0x9A, 0xD5, 0xF3,
-0xA0, 0x9B, 0xC3, 0xF3, 0x14, 0x6C, 0x10, 0x6E,
+0x20, 0x6A, 0xCE, 0xF4, 0x50, 0x9A, 0x15, 0xF3,
+0xA4, 0x9B, 0xC3, 0xF3, 0x14, 0x6C, 0x10, 0x6E,
 0x40, 0xEA, 0x04, 0x94, 0x24, 0x31, 0x30, 0xF0,
 0x20, 0x6A, 0x25, 0xE4, 0x30, 0x33, 0xC0, 0xF1,
 0x08, 0x4A, 0x30, 0x31, 0x6D, 0xE2, 0x29, 0xE2,
 0xE7, 0xF7, 0x0C, 0x4A, 0x04, 0xD2, 0x10, 0xF0,
-0x24, 0x6A, 0xF5, 0xF3, 0x20, 0x9A, 0xE7, 0xF6,
+0x24, 0x6A, 0x35, 0xF3, 0x24, 0x9A, 0xE7, 0xF6,
 0x0C, 0x4B, 0x05, 0xD3, 0x30, 0xF0, 0x20, 0x68,
 0xCE, 0xF4, 0x50, 0x98, 0x01, 0x6D, 0xD1, 0x67,
 0xC3, 0xF3, 0x18, 0x6C, 0xAB, 0xED, 0x40, 0xEA,
 0x01, 0x6D, 0xE3, 0xF3, 0x1C, 0x6C, 0xAB, 0xED,
-0x00, 0x18, 0x34, 0xE1, 0x10, 0xF0, 0x24, 0x6B,
-0xF5, 0xF3, 0x64, 0x9B, 0x05, 0x94, 0x04, 0x49,
+0x00, 0x18, 0x05, 0xE1, 0x10, 0xF0, 0x24, 0x6B,
+0x35, 0xF3, 0x68, 0x9B, 0x05, 0x94, 0x04, 0x49,
 0x4C, 0xEB, 0x62, 0x33, 0x62, 0x33, 0x60, 0xCC,
 0xE1, 0xF7, 0x1F, 0x6B, 0x4C, 0xEB, 0x04, 0x92,
 0x02, 0x4C, 0x05, 0xD4, 0x60, 0xCA, 0x02, 0x4A,
-0x04, 0xD2, 0x10, 0xF0, 0x24, 0x6A, 0xF5, 0xF3,
-0x48, 0x9A, 0x2E, 0xEA, 0xD7, 0x2A, 0xCE, 0xF4,
+0x04, 0xD2, 0x10, 0xF0, 0x24, 0x6A, 0x35, 0xF3,
+0x4C, 0x9A, 0x2E, 0xEA, 0xD7, 0x2A, 0xCE, 0xF4,
 0x50, 0x98, 0x01, 0x6D, 0xC3, 0xF3, 0x18, 0x6C,
 0xAB, 0xED, 0x00, 0x6E, 0x40, 0xEA, 0xCE, 0xF4,
 0x50, 0x98, 0x03, 0xF3, 0x0C, 0x6C, 0x06, 0xF0,
@@ -11394,110 +11369,110 @@ u8 array_mp_8821c_fw_ap[] = {
 0xFC, 0x63, 0x07, 0x62, 0x06, 0xD1, 0x05, 0xD0,
 0x30, 0xF0, 0x21, 0x6A, 0x70, 0xF3, 0x40, 0xA2,
 0xFF, 0x69, 0x8C, 0xE9, 0x53, 0x22, 0x10, 0xF0,
-0x24, 0x6B, 0x30, 0xF0, 0x20, 0x68, 0xB5, 0xF3,
-0x74, 0x9B, 0xCE, 0xF4, 0x50, 0x98, 0x24, 0x36,
+0x24, 0x6B, 0x30, 0xF0, 0x20, 0x68, 0xF5, 0xF2,
+0x78, 0x9B, 0xCE, 0xF4, 0x50, 0x98, 0x24, 0x36,
 0x01, 0x6D, 0x6D, 0xEE, 0x03, 0xF3, 0x00, 0x6C,
 0xAB, 0xED, 0x40, 0xEA, 0x10, 0xF0, 0x24, 0x6B,
-0xF5, 0xF3, 0xAC, 0x9B, 0xCE, 0xF4, 0x50, 0x98,
+0x35, 0xF3, 0xB0, 0x9B, 0xCE, 0xF4, 0x50, 0x98,
 0x23, 0xF3, 0x08, 0x6C, 0x80, 0x6E, 0x40, 0xEA,
 0xCE, 0xF4, 0x50, 0x98, 0x01, 0x6D, 0xC3, 0xF3,
 0x0C, 0x6C, 0xAB, 0xED, 0x09, 0x6E, 0x40, 0xEA,
 0x10, 0xF0, 0x24, 0x6B, 0xCE, 0xF4, 0x50, 0x98,
-0xF5, 0xF3, 0xD0, 0x9B, 0x01, 0x6D, 0x23, 0xF3,
+0x35, 0xF3, 0xD4, 0x9B, 0x01, 0x6D, 0x23, 0xF3,
 0x00, 0x6C, 0xAB, 0xED, 0x40, 0xEA, 0x10, 0xF0,
-0x24, 0x6B, 0xF5, 0xF3, 0xD4, 0x9B, 0xCE, 0xF4,
+0x24, 0x6B, 0x35, 0xF3, 0xD8, 0x9B, 0xCE, 0xF4,
 0x50, 0x98, 0x01, 0x6D, 0x23, 0xF3, 0x04, 0x6C,
 0xAB, 0xED, 0x40, 0xEA, 0x10, 0xF0, 0x24, 0x6A,
-0xF5, 0xF3, 0x18, 0x9A, 0x10, 0xF0, 0x24, 0x6A,
-0xF5, 0xF3, 0xFC, 0x9A, 0x00, 0x6C, 0x78, 0x6D,
-0xD0, 0x67, 0x00, 0x18, 0x92, 0xE1, 0x00, 0x6C,
+0x35, 0xF3, 0x1C, 0x9A, 0x10, 0xF0, 0x24, 0x6A,
+0x55, 0xF3, 0xE0, 0x9A, 0x00, 0x6C, 0x78, 0x6D,
+0xD0, 0x67, 0x00, 0x18, 0x63, 0xE1, 0x00, 0x6C,
 0x5C, 0x6D, 0xD0, 0x67, 0x20, 0xF3, 0x00, 0x6F,
-0x00, 0x18, 0x92, 0xE1, 0x10, 0xF0, 0x24, 0x6A,
-0x00, 0x6C, 0x8F, 0x6D, 0xD0, 0x67, 0x15, 0xF4,
-0xE0, 0x9A, 0x79, 0x10, 0x10, 0xF0, 0x24, 0x6B,
-0xB5, 0xF3, 0x74, 0x9B, 0x30, 0xF0, 0x20, 0x68,
+0x00, 0x18, 0x63, 0xE1, 0x10, 0xF0, 0x24, 0x6A,
+0x00, 0x6C, 0x8F, 0x6D, 0xD0, 0x67, 0x55, 0xF3,
+0xE4, 0x9A, 0x79, 0x10, 0x10, 0xF0, 0x24, 0x6B,
+0xF5, 0xF2, 0x78, 0x9B, 0x30, 0xF0, 0x20, 0x68,
 0xCE, 0xF4, 0x50, 0x98, 0x24, 0x36, 0x01, 0x6D,
 0x03, 0xF3, 0x00, 0x6C, 0xAB, 0xED, 0x6D, 0xEE,
 0x40, 0xEA, 0x30, 0xF0, 0x20, 0x6A, 0x48, 0xF0,
 0x54, 0xA2, 0x03, 0x22, 0x01, 0x72, 0x28, 0x60,
 0x64, 0x10, 0xCE, 0xF4, 0x50, 0x98, 0xC3, 0xF3,
 0x0C, 0x6C, 0xFF, 0x6D, 0x12, 0x6E, 0x40, 0xEA,
-0x10, 0xF0, 0x24, 0x6B, 0xF5, 0xF3, 0xAC, 0x9B,
+0x10, 0xF0, 0x24, 0x6B, 0x35, 0xF3, 0xB0, 0x9B,
 0xCE, 0xF4, 0x50, 0x98, 0x23, 0xF3, 0x08, 0x6C,
 0x00, 0x6E, 0x40, 0xEA, 0x10, 0xF0, 0x24, 0x6B,
-0xF5, 0xF3, 0xD0, 0x9B, 0xCE, 0xF4, 0x50, 0x98,
+0x35, 0xF3, 0xD4, 0x9B, 0xCE, 0xF4, 0x50, 0x98,
 0x01, 0x6D, 0x23, 0xF3, 0x00, 0x6C, 0xAB, 0xED,
 0x40, 0xEA, 0x01, 0x6D, 0x10, 0xF0, 0x24, 0x6B,
 0xCE, 0xF4, 0x50, 0x98, 0x23, 0xF3, 0x04, 0x6C,
-0xAB, 0xED, 0x15, 0xF4, 0xC4, 0x9B, 0x26, 0x10,
+0xAB, 0xED, 0x55, 0xF3, 0xC8, 0x9B, 0x26, 0x10,
 0xCE, 0xF4, 0x50, 0x98, 0xC3, 0xF3, 0x0C, 0x6C,
 0xFF, 0x6D, 0x09, 0x6E, 0x40, 0xEA, 0x10, 0xF0,
-0x24, 0x6B, 0xF5, 0xF3, 0xAC, 0x9B, 0xCE, 0xF4,
+0x24, 0x6B, 0x35, 0xF3, 0xB0, 0x9B, 0xCE, 0xF4,
 0x50, 0x98, 0x23, 0xF3, 0x08, 0x6C, 0x00, 0x6E,
-0x40, 0xEA, 0x10, 0xF0, 0x24, 0x6B, 0x15, 0xF4,
-0xD0, 0x9B, 0xCE, 0xF4, 0x50, 0x98, 0x01, 0x6D,
+0x40, 0xEA, 0x10, 0xF0, 0x24, 0x6B, 0x55, 0xF3,
+0xD4, 0x9B, 0xCE, 0xF4, 0x50, 0x98, 0x01, 0x6D,
 0x23, 0xF3, 0x00, 0x6C, 0xAB, 0xED, 0x40, 0xEA,
 0x10, 0xF0, 0x24, 0x6B, 0xCE, 0xF4, 0x50, 0x98,
-0x15, 0xF4, 0xD4, 0x9B, 0x01, 0x6D, 0x23, 0xF3,
+0x55, 0xF3, 0xD8, 0x9B, 0x01, 0x6D, 0x23, 0xF3,
 0x04, 0x6C, 0xAB, 0xED, 0x40, 0xEA, 0x10, 0xF0,
-0x24, 0x6A, 0xF5, 0xF3, 0x18, 0x9A, 0x10, 0xF0,
-0x24, 0x6A, 0x15, 0xF4, 0xE8, 0x9A, 0x91, 0x67,
-0x56, 0x6D, 0xD0, 0x67, 0x00, 0x18, 0x92, 0xE1,
-0x10, 0xF0, 0x24, 0x6A, 0x15, 0xF4, 0xEC, 0x9A,
+0x24, 0x6A, 0x35, 0xF3, 0x1C, 0x9A, 0x10, 0xF0,
+0x24, 0x6A, 0x55, 0xF3, 0xEC, 0x9A, 0x91, 0x67,
+0x56, 0x6D, 0xD0, 0x67, 0x00, 0x18, 0x63, 0xE1,
+0x10, 0xF0, 0x24, 0x6A, 0x55, 0xF3, 0xF0, 0x9A,
 0x91, 0x67, 0x8F, 0x6D, 0xD0, 0x67, 0x00, 0x18,
-0x92, 0xE1, 0x07, 0x97, 0x06, 0x91, 0x05, 0x90,
+0x63, 0xE1, 0x07, 0x97, 0x06, 0x91, 0x05, 0x90,
 0x04, 0x63, 0x00, 0xEF, 0xFC, 0x63, 0x07, 0x62,
 0x06, 0xD1, 0x05, 0xD0, 0x30, 0xF0, 0x21, 0x6A,
 0x70, 0xF3, 0x40, 0xA2, 0xFF, 0x6E, 0x8C, 0xEE,
 0x48, 0x22, 0x10, 0xF0, 0x24, 0x6B, 0x30, 0xF0,
-0x20, 0x68, 0xB5, 0xF3, 0x74, 0x9B, 0xCE, 0xF4,
+0x20, 0x68, 0xF5, 0xF2, 0x78, 0x9B, 0xCE, 0xF4,
 0x50, 0x98, 0x01, 0x69, 0x2B, 0xE9, 0xC4, 0x36,
 0x6D, 0xEE, 0xB1, 0x67, 0x03, 0xF3, 0x00, 0x6C,
 0x40, 0xEA, 0xCE, 0xF4, 0x50, 0x98, 0xB1, 0x67,
 0xC3, 0xF3, 0x0C, 0x6C, 0x1B, 0x6E, 0x40, 0xEA,
-0x10, 0xF0, 0x24, 0x6B, 0x15, 0xF4, 0xD8, 0x9B,
+0x10, 0xF0, 0x24, 0x6B, 0x55, 0xF3, 0xDC, 0x9B,
 0xCE, 0xF4, 0x50, 0x98, 0xB1, 0x67, 0x23, 0xF3,
 0x00, 0x6C, 0x40, 0xEA, 0x10, 0xF0, 0x24, 0x6A,
-0xF5, 0xF3, 0x38, 0x9A, 0x10, 0xF0, 0x24, 0x6A,
-0x15, 0xF4, 0xFC, 0x9A, 0x00, 0x6C, 0x78, 0x6D,
-0xD1, 0x67, 0x00, 0x18, 0x92, 0xE1, 0x00, 0x6C,
+0x35, 0xF3, 0x3C, 0x9A, 0x10, 0xF0, 0x24, 0x6A,
+0x75, 0xF3, 0xE0, 0x9A, 0x00, 0x6C, 0x78, 0x6D,
+0xD1, 0x67, 0x00, 0x18, 0x63, 0xE1, 0x00, 0x6C,
 0x5C, 0x6D, 0xD1, 0x67, 0x28, 0xF3, 0x00, 0x6F,
-0x00, 0x18, 0x92, 0xE1, 0x10, 0xF0, 0x24, 0x6A,
-0x35, 0xF4, 0xE0, 0x9A, 0x00, 0x6C, 0x8F, 0x6D,
-0xD1, 0x67, 0x00, 0x18, 0x92, 0xE1, 0x10, 0xF0,
+0x00, 0x18, 0x63, 0xE1, 0x10, 0xF0, 0x24, 0x6A,
+0x75, 0xF3, 0xE4, 0x9A, 0x00, 0x6C, 0x8F, 0x6D,
+0xD1, 0x67, 0x00, 0x18, 0x63, 0xE1, 0x10, 0xF0,
 0x24, 0x6B, 0xCE, 0xF4, 0x50, 0x98, 0x23, 0xF3,
-0x08, 0x6C, 0xF5, 0xF3, 0xAC, 0x9B, 0x80, 0x6E,
-0x5D, 0x10, 0x10, 0xF0, 0x24, 0x6B, 0xB5, 0xF3,
-0x74, 0x9B, 0x30, 0xF0, 0x20, 0x68, 0xCE, 0xF4,
+0x08, 0x6C, 0x35, 0xF3, 0xB0, 0x9B, 0x80, 0x6E,
+0x5D, 0x10, 0x10, 0xF0, 0x24, 0x6B, 0xF5, 0xF2,
+0x78, 0x9B, 0x30, 0xF0, 0x20, 0x68, 0xCE, 0xF4,
 0x50, 0x98, 0x01, 0x69, 0x2B, 0xE9, 0xC4, 0x36,
 0x6D, 0xEE, 0x03, 0xF3, 0x00, 0x6C, 0xB1, 0x67,
 0x40, 0xEA, 0xCE, 0xF4, 0x50, 0x98, 0xC3, 0xF3,
 0x0C, 0x6C, 0xB1, 0x67, 0x09, 0x6E, 0x40, 0xEA,
 0x10, 0xF0, 0x24, 0x6B, 0xCE, 0xF4, 0x50, 0x98,
-0x35, 0xF4, 0xC4, 0x9B, 0x23, 0xF3, 0x00, 0x6C,
+0x75, 0xF3, 0xC8, 0x9B, 0x23, 0xF3, 0x00, 0x6C,
 0xB1, 0x67, 0x40, 0xEA, 0x30, 0xF0, 0x20, 0x6A,
 0x48, 0xF0, 0x54, 0xA2, 0x03, 0x22, 0x01, 0x72,
 0x16, 0x60, 0x35, 0x10, 0x10, 0xF0, 0x24, 0x6A,
-0xF5, 0xF3, 0x38, 0x9A, 0x10, 0xF0, 0x24, 0x6A,
-0x35, 0xF4, 0xE8, 0x9A, 0x00, 0x6C, 0x56, 0x6D,
-0xD1, 0x67, 0x00, 0x18, 0x92, 0xE1, 0x10, 0xF0,
+0x35, 0xF3, 0x3C, 0x9A, 0x10, 0xF0, 0x24, 0x6A,
+0x75, 0xF3, 0xEC, 0x9A, 0x00, 0x6C, 0x56, 0x6D,
+0xD1, 0x67, 0x00, 0x18, 0x63, 0xE1, 0x10, 0xF0,
 0x24, 0x6A, 0x00, 0x6C, 0x8F, 0x6D, 0xD1, 0x67,
-0x35, 0xF4, 0xEC, 0x9A, 0x14, 0x10, 0x10, 0xF0,
-0x24, 0x6A, 0xF5, 0xF3, 0x38, 0x9A, 0x10, 0xF0,
-0x24, 0x6A, 0x35, 0xF4, 0xF0, 0x9A, 0x00, 0x6C,
-0x56, 0x6D, 0xD1, 0x67, 0x00, 0x18, 0x92, 0xE1,
-0x10, 0xF0, 0x24, 0x6A, 0x35, 0xF4, 0xF4, 0x9A,
+0x75, 0xF3, 0xF0, 0x9A, 0x14, 0x10, 0x10, 0xF0,
+0x24, 0x6A, 0x35, 0xF3, 0x3C, 0x9A, 0x10, 0xF0,
+0x24, 0x6A, 0x75, 0xF3, 0xF4, 0x9A, 0x00, 0x6C,
+0x56, 0x6D, 0xD1, 0x67, 0x00, 0x18, 0x63, 0xE1,
+0x10, 0xF0, 0x24, 0x6A, 0x75, 0xF3, 0xF8, 0x9A,
 0x00, 0x6C, 0x8F, 0x6D, 0xD1, 0x67, 0x00, 0x18,
-0x92, 0xE1, 0x10, 0xF0, 0x24, 0x6B, 0xCE, 0xF4,
-0x50, 0x98, 0xF5, 0xF3, 0xAC, 0x9B, 0x23, 0xF3,
+0x63, 0xE1, 0x10, 0xF0, 0x24, 0x6B, 0xCE, 0xF4,
+0x50, 0x98, 0x35, 0xF3, 0xB0, 0x9B, 0x23, 0xF3,
 0x08, 0x6C, 0x00, 0x6E, 0x40, 0xEA, 0x07, 0x97,
 0x06, 0x91, 0x05, 0x90, 0x04, 0x63, 0x00, 0xEF,
 0xFB, 0x63, 0x09, 0x62, 0x08, 0xD0, 0x00, 0x6A,
 0x7D, 0x67, 0x4C, 0xCB, 0x10, 0xF0, 0x24, 0x6A,
-0xF5, 0xF3, 0xD8, 0x9A, 0x10, 0xF0, 0x24, 0x6A,
-0x35, 0xF2, 0xFC, 0x9A, 0x00, 0x6C, 0xA4, 0x67,
-0x00, 0x18, 0x92, 0xE1, 0x30, 0xF0, 0x20, 0x68,
-0x10, 0xF0, 0x24, 0x6B, 0x35, 0xF4, 0xB8, 0x9B,
+0x35, 0xF3, 0xDC, 0x9A, 0x10, 0xF0, 0x24, 0x6A,
+0x95, 0xF1, 0xE0, 0x9A, 0x00, 0x6C, 0xA4, 0x67,
+0x00, 0x18, 0x63, 0xE1, 0x30, 0xF0, 0x20, 0x68,
+0x10, 0xF0, 0x24, 0x6B, 0x75, 0xF3, 0xBC, 0x9B,
 0xCE, 0xF4, 0x50, 0x98, 0xE1, 0xF0, 0x18, 0x6C,
 0x00, 0x6E, 0x40, 0xEA, 0xCE, 0xF4, 0x50, 0x98,
 0x01, 0x6D, 0xE1, 0xF0, 0x1C, 0x6C, 0xAB, 0xED,
@@ -11509,64 +11484,64 @@ u8 array_mp_8821c_fw_ap[] = {
 0x00, 0x6E, 0x40, 0xEA, 0xCE, 0xF4, 0x50, 0x98,
 0x01, 0xF0, 0x08, 0x6C, 0xFF, 0x6D, 0x00, 0x6E,
 0x40, 0xEA, 0x10, 0xF0, 0x24, 0x6B, 0xCE, 0xF4,
-0x50, 0x98, 0x35, 0xF4, 0xBC, 0x9B, 0x01, 0xF2,
+0x50, 0x98, 0x95, 0xF3, 0xA0, 0x9B, 0x01, 0xF2,
 0x04, 0x6C, 0x00, 0x6E, 0x40, 0xEA, 0x10, 0xF0,
-0x24, 0x6A, 0x55, 0xF4, 0x60, 0x9A, 0xFF, 0x6A,
+0x24, 0x6A, 0x95, 0xF3, 0x64, 0x9A, 0xFF, 0x6A,
 0x80, 0xA3, 0x8C, 0xEA, 0xFE, 0x6C, 0x4C, 0xEC,
 0x80, 0xC3, 0x40, 0xC3, 0x10, 0xF0, 0x24, 0x6A,
-0x55, 0xF4, 0x44, 0x9A, 0x60, 0xA2, 0x01, 0x6A,
+0x95, 0xF3, 0x48, 0x9A, 0x60, 0xA2, 0x01, 0x6A,
 0x6C, 0xEA, 0x09, 0x22, 0x10, 0xF0, 0x24, 0x6A,
-0x55, 0xF4, 0x6C, 0x9A, 0x10, 0xF0, 0x24, 0x6A,
-0x55, 0xF4, 0x48, 0x9A, 0x60, 0xDA, 0x09, 0x97,
+0x95, 0xF3, 0x70, 0x9A, 0x10, 0xF0, 0x24, 0x6A,
+0x95, 0xF3, 0x4C, 0x9A, 0x60, 0xDA, 0x09, 0x97,
 0x08, 0x90, 0x05, 0x63, 0x00, 0xEF, 0x00, 0x65,
 0xFC, 0x63, 0x07, 0x62, 0x06, 0xD1, 0x05, 0xD0,
 0xFF, 0x6A, 0x8C, 0xEA, 0x37, 0x22, 0x30, 0xF0,
 0x20, 0x68, 0x10, 0xF0, 0x24, 0x6B, 0xCE, 0xF4,
-0x50, 0x98, 0x55, 0xF4, 0xD0, 0x9B, 0x01, 0x69,
+0x50, 0x98, 0x95, 0xF3, 0xD4, 0x9B, 0x01, 0x69,
 0x2B, 0xE9, 0xB1, 0x67, 0x61, 0xF4, 0x00, 0x6C,
 0x40, 0xEA, 0x10, 0xF0, 0x24, 0x6B, 0xCE, 0xF4,
-0x50, 0x98, 0x55, 0xF4, 0xD4, 0x9B, 0xB1, 0x67,
+0x50, 0x98, 0x95, 0xF3, 0xD8, 0x9B, 0xB1, 0x67,
 0x61, 0xF4, 0x00, 0x6C, 0x40, 0xEA, 0x10, 0xF0,
-0x24, 0x6B, 0xCE, 0xF4, 0x50, 0x98, 0x55, 0xF4,
-0xD8, 0x9B, 0xB1, 0x67, 0x41, 0xF4, 0x18, 0x6C,
-0x40, 0xEA, 0x10, 0xF0, 0x24, 0x6B, 0x55, 0xF4,
-0xDC, 0x9B, 0xCE, 0xF4, 0x50, 0x98, 0xB1, 0x67,
+0x24, 0x6B, 0xCE, 0xF4, 0x50, 0x98, 0x95, 0xF3,
+0xDC, 0x9B, 0xB1, 0x67, 0x41, 0xF4, 0x18, 0x6C,
+0x40, 0xEA, 0x10, 0xF0, 0x24, 0x6B, 0xB5, 0xF3,
+0xC0, 0x9B, 0xCE, 0xF4, 0x50, 0x98, 0xB1, 0x67,
 0x41, 0xF4, 0x1C, 0x6C, 0x40, 0xEA, 0xCE, 0xF4,
 0x50, 0x98, 0x61, 0xF4, 0x0C, 0x6C, 0xB1, 0x67,
 0x01, 0xF2, 0x15, 0x6E, 0x40, 0xEA, 0x80, 0x18,
 0x50, 0x0B, 0x34, 0x10, 0x30, 0xF0, 0x20, 0x68,
-0x10, 0xF0, 0x24, 0x6B, 0x55, 0xF4, 0xD0, 0x9B,
+0x10, 0xF0, 0x24, 0x6B, 0x95, 0xF3, 0xD4, 0x9B,
 0xCE, 0xF4, 0x50, 0x98, 0x01, 0x69, 0x2B, 0xE9,
 0x61, 0xF4, 0x00, 0x6C, 0xB1, 0x67, 0x40, 0xEA,
-0x10, 0xF0, 0x24, 0x6B, 0x75, 0xF4, 0xC0, 0x9B,
+0x10, 0xF0, 0x24, 0x6B, 0xB5, 0xF3, 0xC4, 0x9B,
 0xCE, 0xF4, 0x50, 0x98, 0x61, 0xF4, 0x00, 0x6C,
 0xB1, 0x67, 0x40, 0xEA, 0x10, 0xF0, 0x24, 0x6B,
-0x75, 0xF4, 0xC4, 0x9B, 0xCE, 0xF4, 0x50, 0x98,
+0xB5, 0xF3, 0xC8, 0x9B, 0xCE, 0xF4, 0x50, 0x98,
 0x41, 0xF4, 0x18, 0x6C, 0xB1, 0x67, 0x40, 0xEA,
 0x10, 0xF0, 0x24, 0x6B, 0xCE, 0xF4, 0x50, 0x98,
-0x75, 0xF4, 0xC8, 0x9B, 0x41, 0xF4, 0x1C, 0x6C,
+0xB5, 0xF3, 0xCC, 0x9B, 0x41, 0xF4, 0x1C, 0x6C,
 0xB1, 0x67, 0x40, 0xEA, 0xCE, 0xF4, 0x50, 0x98,
 0x61, 0xF4, 0x0C, 0x6C, 0xB1, 0x67, 0x22, 0xF2,
 0x0A, 0x6E, 0x40, 0xEA, 0x10, 0xF0, 0x24, 0x6B,
 0x30, 0xF0, 0x20, 0x6A, 0xCE, 0xF4, 0x50, 0x9A,
-0x75, 0xF3, 0xB4, 0x9B, 0xA1, 0xF1, 0x04, 0x6C,
+0xB5, 0xF2, 0xB8, 0x9B, 0xA1, 0xF1, 0x04, 0x6C,
 0x00, 0x6E, 0x40, 0xEA, 0x07, 0x97, 0x06, 0x91,
 0x05, 0x90, 0x04, 0x63, 0x00, 0xEF, 0x00, 0x65,
 0xFC, 0x63, 0x07, 0x62, 0x06, 0xD1, 0x05, 0xD0,
 0xFF, 0x68, 0x8C, 0xE8, 0x00, 0x69, 0x10, 0xF0,
-0x24, 0x6A, 0xF5, 0xF3, 0x18, 0x4A, 0xC0, 0x9A,
+0x24, 0x6A, 0x35, 0xF3, 0x1C, 0x4A, 0xC0, 0x9A,
 0x90, 0x67, 0xEF, 0x6D, 0x00, 0x6F, 0x00, 0x18,
-0x92, 0xE1, 0x10, 0xF0, 0x24, 0x6B, 0xF5, 0xF3,
-0x18, 0x4B, 0xC0, 0x9B, 0x90, 0x67, 0x08, 0x6D,
-0x00, 0x6F, 0x00, 0x18, 0x92, 0xE1, 0x10, 0xF0,
-0x24, 0x6A, 0xF5, 0xF3, 0x18, 0x4A, 0xC0, 0x9A,
-0x90, 0x67, 0x08, 0x6D, 0x00, 0x18, 0x7F, 0xE1,
+0x63, 0xE1, 0x10, 0xF0, 0x24, 0x6B, 0x35, 0xF3,
+0x1C, 0x4B, 0xC0, 0x9B, 0x90, 0x67, 0x08, 0x6D,
+0x00, 0x6F, 0x00, 0x18, 0x63, 0xE1, 0x10, 0xF0,
+0x24, 0x6A, 0x35, 0xF3, 0x1C, 0x4A, 0xC0, 0x9A,
+0x90, 0x67, 0x08, 0x6D, 0x00, 0x18, 0x50, 0xE1,
 0x07, 0x22, 0x01, 0x49, 0xFF, 0xF7, 0x1F, 0x6A,
 0x4C, 0xE9, 0x2E, 0xF5, 0x10, 0x71, 0xDB, 0x61,
 0x07, 0x97, 0x06, 0x91, 0x05, 0x90, 0x04, 0x63,
 0x00, 0xEF, 0x00, 0x65, 0xFD, 0x63, 0x05, 0x62,
-0x10, 0xF0, 0x24, 0x6A, 0xF5, 0xF3, 0xD8, 0x9A,
-0x00, 0x6C, 0x18, 0x6D, 0x00, 0x18, 0x7F, 0xE1,
+0x10, 0xF0, 0x24, 0x6A, 0x35, 0xF3, 0xDC, 0x9A,
+0x00, 0x6C, 0x18, 0x6D, 0x00, 0x18, 0x50, 0xE1,
 0x30, 0xF0, 0x20, 0x6B, 0x01, 0xF4, 0x00, 0x6C,
 0xC0, 0xF1, 0x08, 0x4B, 0x4C, 0xEC, 0x87, 0xF6,
 0x50, 0xDB, 0x82, 0x32, 0x4A, 0x32, 0x02, 0x72,
@@ -11575,7 +11550,7 @@ u8 array_mp_8821c_fw_ap[] = {
 0x87, 0xF6, 0x8D, 0xC3, 0x03, 0x10, 0x01, 0x6A,
 0x87, 0xF6, 0x4D, 0xC3, 0x30, 0xF0, 0x20, 0x6A,
 0xC0, 0xF1, 0x08, 0x4A, 0x10, 0xF0, 0x24, 0x6B,
-0x35, 0xF2, 0x7C, 0x9B, 0x87, 0xF6, 0x90, 0x9A,
+0x95, 0xF1, 0x60, 0x9B, 0x87, 0xF6, 0x90, 0x9A,
 0x8C, 0xEB, 0x62, 0x33, 0x62, 0x33, 0x87, 0xF6,
 0x6C, 0xC2, 0x05, 0x97, 0x03, 0x63, 0x00, 0xEF,
 0xFD, 0x63, 0x05, 0x62, 0x04, 0xD0, 0xFF, 0x6A,
@@ -11604,8 +11579,8 @@ u8 array_mp_8821c_fw_ap[] = {
 0x87, 0xF6, 0x50, 0x9B, 0x01, 0x6D, 0xA7, 0xF6,
 0xB2, 0xC3, 0xA7, 0xF6, 0xB3, 0xC3, 0xE7, 0xF6,
 0x44, 0xDB, 0x17, 0x10, 0x10, 0xF0, 0x24, 0x6A,
-0xF5, 0xF3, 0xD8, 0x9A, 0x00, 0x6C, 0x58, 0x6D,
-0x00, 0x18, 0x7F, 0xE1, 0x22, 0xF0, 0x1A, 0x48,
+0x35, 0xF3, 0xDC, 0x9A, 0x00, 0x6C, 0x58, 0x6D,
+0x00, 0x18, 0x50, 0xE1, 0x22, 0xF0, 0x1A, 0x48,
 0x30, 0xF0, 0x20, 0x6B, 0xC0, 0xF1, 0x08, 0x4B,
 0x08, 0x30, 0x0D, 0xE3, 0x41, 0xDB, 0x05, 0x10,
 0xFE, 0x4C, 0x4C, 0xEC, 0xB0, 0x67, 0x80, 0x18,
@@ -11619,23 +11594,23 @@ u8 array_mp_8821c_fw_ap[] = {
 0xFC, 0x63, 0x07, 0x62, 0x06, 0xD1, 0x05, 0xD0,
 0x00, 0x68, 0x09, 0xD5, 0x24, 0x67, 0x09, 0x93,
 0x00, 0x6C, 0x09, 0xE3, 0xA0, 0xA2, 0x10, 0xF0,
-0x24, 0x6A, 0xF5, 0xF3, 0xD8, 0x9A, 0x01, 0x48,
-0x00, 0x18, 0x7F, 0xE1, 0x05, 0x70, 0x40, 0xD9,
+0x24, 0x6A, 0x35, 0xF3, 0xDC, 0x9A, 0x01, 0x48,
+0x00, 0x18, 0x50, 0xE1, 0x05, 0x70, 0x40, 0xD9,
 0x04, 0x49, 0xF1, 0x61, 0x07, 0x97, 0x06, 0x91,
 0x05, 0x90, 0x04, 0x63, 0x00, 0xEF, 0x00, 0x65,
 0xFB, 0x63, 0x09, 0x62, 0x08, 0xD1, 0x07, 0xD0,
 0x10, 0xF0, 0x24, 0x6A, 0x0C, 0xD6, 0xFF, 0x68,
-0xF5, 0xF3, 0xD8, 0x9A, 0xFF, 0xF7, 0x1F, 0x69,
+0x35, 0xF3, 0xDC, 0x9A, 0xFF, 0xF7, 0x1F, 0x69,
 0x0C, 0x97, 0x8C, 0xE8, 0xAC, 0xE9, 0x90, 0x67,
-0xB1, 0x67, 0x00, 0x18, 0x92, 0xE1, 0x00, 0x6A,
-0x04, 0xD2, 0x10, 0xF0, 0x24, 0x6B, 0xF5, 0xF3,
-0x18, 0x4B, 0xC0, 0x9B, 0x90, 0x67, 0xB1, 0x67,
-0x00, 0x18, 0x7F, 0xE1, 0x0C, 0x93, 0x6E, 0xEA,
+0xB1, 0x67, 0x00, 0x18, 0x63, 0xE1, 0x00, 0x6A,
+0x04, 0xD2, 0x10, 0xF0, 0x24, 0x6B, 0x35, 0xF3,
+0x1C, 0x4B, 0xC0, 0x9B, 0x90, 0x67, 0xB1, 0x67,
+0x00, 0x18, 0x50, 0xE1, 0x0C, 0x93, 0x6E, 0xEA,
 0x16, 0x22, 0x30, 0xF0, 0x20, 0x6A, 0xCE, 0xF4,
 0x5C, 0x9A, 0x0A, 0x6C, 0x40, 0xEA, 0x10, 0xF0,
-0x24, 0x6A, 0xF5, 0xF3, 0x18, 0x4A, 0xC0, 0x9A,
+0x24, 0x6A, 0x35, 0xF3, 0x1C, 0x4A, 0xC0, 0x9A,
 0x0C, 0x97, 0x90, 0x67, 0xB1, 0x67, 0x00, 0x18,
-0x92, 0xE1, 0x04, 0x93, 0x01, 0x4B, 0xE0, 0xF3,
+0x63, 0xE1, 0x04, 0x93, 0x01, 0x4B, 0xE0, 0xF3,
 0x08, 0x73, 0x04, 0xD3, 0xDE, 0x61, 0x09, 0x97,
 0x08, 0x91, 0x07, 0x90, 0x05, 0x63, 0x00, 0xEF,
 0xFB, 0x63, 0x09, 0x62, 0x08, 0xD1, 0x07, 0xD0,
@@ -11644,29 +11619,29 @@ u8 array_mp_8821c_fw_ap[] = {
 0x20, 0xF6, 0x48, 0xA0, 0x04, 0xD5, 0x60, 0x22,
 0x06, 0x25, 0x12, 0x6A, 0x00, 0xF6, 0x4D, 0xC0,
 0x02, 0x6A, 0x00, 0xF6, 0x50, 0xD8, 0x10, 0xF0,
-0x24, 0x6B, 0x30, 0xF0, 0x20, 0x68, 0xB5, 0xF3,
-0x74, 0x9B, 0xCE, 0xF4, 0x50, 0x98, 0x24, 0x36,
+0x24, 0x6B, 0x30, 0xF0, 0x20, 0x68, 0xF5, 0xF2,
+0x78, 0x9B, 0xCE, 0xF4, 0x50, 0x98, 0x24, 0x36,
 0x01, 0x6D, 0x6D, 0xEE, 0x03, 0xF3, 0x00, 0x6C,
 0xAB, 0xED, 0x40, 0xEA, 0x10, 0xF0, 0x24, 0x6B,
-0xF5, 0xF3, 0xAC, 0x9B, 0xCE, 0xF4, 0x50, 0x98,
+0x35, 0xF3, 0xB0, 0x9B, 0xCE, 0xF4, 0x50, 0x98,
 0x23, 0xF3, 0x08, 0x6C, 0x80, 0x6E, 0x40, 0xEA,
 0x30, 0xF0, 0x21, 0x6B, 0x50, 0xF3, 0xC5, 0xA3,
 0xCE, 0xF4, 0x50, 0x98, 0xC3, 0xF3, 0x0C, 0x6C,
 0xFF, 0x6D, 0x40, 0xEA, 0x10, 0xF0, 0x24, 0x6B,
-0x75, 0xF4, 0xCC, 0x9B, 0xCE, 0xF4, 0x50, 0x98,
+0xB5, 0xF3, 0xD0, 0x9B, 0xCE, 0xF4, 0x50, 0x98,
 0x01, 0x6D, 0x03, 0xF3, 0x18, 0x6C, 0xAB, 0xED,
-0x40, 0xEA, 0x10, 0xF0, 0x24, 0x6B, 0xF5, 0xF3,
-0xD0, 0x9B, 0xCE, 0xF4, 0x50, 0x98, 0x01, 0x6D,
+0x40, 0xEA, 0x10, 0xF0, 0x24, 0x6B, 0x35, 0xF3,
+0xD4, 0x9B, 0xCE, 0xF4, 0x50, 0x98, 0x01, 0x6D,
 0x23, 0xF3, 0x00, 0x6C, 0xAB, 0xED, 0x40, 0xEA,
-0x10, 0xF0, 0x24, 0x6B, 0x15, 0xF4, 0xD4, 0x9B,
+0x10, 0xF0, 0x24, 0x6B, 0x55, 0xF3, 0xD8, 0x9B,
 0xCE, 0xF4, 0x50, 0x98, 0x01, 0x6D, 0x23, 0xF3,
 0x04, 0x6C, 0xAB, 0xED, 0x40, 0xEA, 0x10, 0xF0,
-0x24, 0x6A, 0xF5, 0xF3, 0xDC, 0x9A, 0x91, 0x67,
+0x24, 0x6A, 0x55, 0xF3, 0xC0, 0x9A, 0x91, 0x67,
 0x78, 0x6D, 0x80, 0x18, 0x56, 0x0C, 0x91, 0x67,
 0x5C, 0x6D, 0x20, 0xF3, 0x00, 0x6E, 0x80, 0x18,
 0x56, 0x0C, 0x10, 0xF0, 0x24, 0x6A, 0x91, 0x67,
-0x8F, 0x6D, 0x15, 0xF4, 0xC0, 0x9A, 0xB2, 0x10,
-0x10, 0xF0, 0x24, 0x6B, 0xB5, 0xF3, 0x74, 0x9B,
+0x8F, 0x6D, 0x55, 0xF3, 0xC4, 0x9A, 0xB2, 0x10,
+0x10, 0xF0, 0x24, 0x6B, 0xF5, 0xF2, 0x78, 0x9B,
 0x30, 0xF0, 0x20, 0x6A, 0xCE, 0xF4, 0x50, 0x9A,
 0x24, 0x36, 0x01, 0x6D, 0x03, 0xF3, 0x00, 0x6C,
 0xAB, 0xED, 0x6D, 0xEE, 0x40, 0xEA, 0x30, 0xF0,
@@ -11678,98 +11653,98 @@ u8 array_mp_8821c_fw_ap[] = {
 0x18, 0x4B, 0x00, 0xF6, 0xCD, 0xA3, 0xCE, 0xF4,
 0x50, 0x98, 0x04, 0xD3, 0xC3, 0xF3, 0x0C, 0x6C,
 0xFF, 0x6D, 0x40, 0xEA, 0x10, 0xF0, 0x24, 0x6B,
-0xF5, 0xF3, 0xAC, 0x9B, 0xCE, 0xF4, 0x50, 0x98,
+0x35, 0xF3, 0xB0, 0x9B, 0xCE, 0xF4, 0x50, 0x98,
 0x23, 0xF3, 0x08, 0x6C, 0x00, 0x6E, 0x40, 0xEA,
-0x10, 0xF0, 0x24, 0x6B, 0xF5, 0xF3, 0xD0, 0x9B,
+0x10, 0xF0, 0x24, 0x6B, 0x35, 0xF3, 0xD4, 0x9B,
 0xCE, 0xF4, 0x50, 0x98, 0x01, 0x6D, 0x23, 0xF3,
 0x00, 0x6C, 0xAB, 0xED, 0x40, 0xEA, 0x04, 0x94,
-0x10, 0xF0, 0x24, 0x6A, 0xD4, 0xF5, 0x14, 0x4A,
+0x10, 0xF0, 0x24, 0x6A, 0x14, 0xF5, 0x18, 0x4A,
 0x00, 0xF6, 0x70, 0x9C, 0x01, 0x6D, 0x23, 0xF3,
 0x04, 0x6C, 0x49, 0xE3, 0xC0, 0xA2, 0x10, 0xF0,
-0x24, 0x6B, 0x75, 0xF4, 0x70, 0x9B, 0xCE, 0xF4,
+0x24, 0x6B, 0xB5, 0xF3, 0x74, 0x9B, 0xCE, 0xF4,
 0x50, 0x98, 0xC0, 0x36, 0xC8, 0x36, 0xAB, 0xED,
 0x6D, 0xEE, 0x40, 0xEA, 0x10, 0xF0, 0x24, 0x6A,
-0x91, 0x67, 0x56, 0x6D, 0x15, 0xF4, 0xC8, 0x9A,
+0x91, 0x67, 0x56, 0x6D, 0x55, 0xF3, 0xCC, 0x9A,
 0x49, 0x10, 0x04, 0x92, 0x06, 0x22, 0x1B, 0x6A,
 0x00, 0xF6, 0x4D, 0xC0, 0x02, 0x6A, 0x00, 0xF6,
 0x50, 0xD8, 0x30, 0xF0, 0x20, 0x6B, 0x30, 0xF0,
 0x20, 0x68, 0x2F, 0xF5, 0x18, 0x4B, 0x00, 0xF6,
 0xCD, 0xA3, 0xCE, 0xF4, 0x50, 0x98, 0x04, 0xD3,
 0xC3, 0xF3, 0x0C, 0x6C, 0xFF, 0x6D, 0x40, 0xEA,
-0x10, 0xF0, 0x24, 0x6B, 0xF5, 0xF3, 0xAC, 0x9B,
+0x10, 0xF0, 0x24, 0x6B, 0x35, 0xF3, 0xB0, 0x9B,
 0xCE, 0xF4, 0x50, 0x98, 0x23, 0xF3, 0x08, 0x6C,
 0x00, 0x6E, 0x40, 0xEA, 0x10, 0xF0, 0x24, 0x6B,
-0x15, 0xF4, 0xD0, 0x9B, 0xCE, 0xF4, 0x50, 0x98,
+0x55, 0xF3, 0xD4, 0x9B, 0xCE, 0xF4, 0x50, 0x98,
 0x01, 0x6D, 0x23, 0xF3, 0x00, 0x6C, 0xAB, 0xED,
 0x40, 0xEA, 0x04, 0x94, 0x10, 0xF0, 0x24, 0x6A,
-0xD4, 0xF5, 0x1C, 0x4A, 0x00, 0xF6, 0x70, 0x9C,
+0x34, 0xF5, 0x00, 0x4A, 0x00, 0xF6, 0x70, 0x9C,
 0x01, 0x6D, 0x23, 0xF3, 0x04, 0x6C, 0x49, 0xE3,
-0xC0, 0xA2, 0x10, 0xF0, 0x24, 0x6B, 0x75, 0xF4,
-0x70, 0x9B, 0xCE, 0xF4, 0x50, 0x98, 0xC0, 0x36,
+0xC0, 0xA2, 0x10, 0xF0, 0x24, 0x6B, 0xB5, 0xF3,
+0x74, 0x9B, 0xCE, 0xF4, 0x50, 0x98, 0xC0, 0x36,
 0xC8, 0x36, 0xAB, 0xED, 0x6D, 0xEE, 0x40, 0xEA,
-0x10, 0xF0, 0x24, 0x6A, 0x75, 0xF4, 0xD4, 0x9A,
+0x10, 0xF0, 0x24, 0x6A, 0xB5, 0xF3, 0xD8, 0x9A,
 0x91, 0x67, 0x56, 0x6D, 0x80, 0x18, 0x56, 0x0C,
-0x10, 0xF0, 0x24, 0x6A, 0x15, 0xF4, 0xCC, 0x9A,
+0x10, 0xF0, 0x24, 0x6A, 0x55, 0xF3, 0xD0, 0x9A,
 0x91, 0x67, 0x8F, 0x6D, 0x80, 0x18, 0x56, 0x0C,
 0x09, 0x97, 0x08, 0x91, 0x07, 0x90, 0x05, 0x63,
 0x00, 0xEF, 0x00, 0x65, 0xFC, 0x63, 0x07, 0x62,
 0x06, 0xD1, 0x05, 0xD0, 0x10, 0xF0, 0x24, 0x6A,
-0xF5, 0xF3, 0x38, 0x9A, 0x08, 0xD4, 0x00, 0x6C,
+0x35, 0xF3, 0x3C, 0x9A, 0x08, 0xD4, 0x00, 0x6C,
 0x05, 0x67, 0xD1, 0x67, 0xE4, 0x67, 0xEF, 0x6D,
-0x00, 0x18, 0x92, 0xE1, 0x00, 0x6C, 0xE4, 0x67,
-0xD1, 0x67, 0xEE, 0x6D, 0x00, 0x18, 0x92, 0xE1,
+0x00, 0x18, 0x63, 0xE1, 0x00, 0x6C, 0xE4, 0x67,
+0xD1, 0x67, 0xEE, 0x6D, 0x00, 0x18, 0x63, 0xE1,
 0xC0, 0x98, 0x11, 0x6A, 0x4B, 0xEA, 0x4C, 0xEE,
 0x00, 0x6C, 0xDF, 0x6D, 0x80, 0x18, 0x56, 0x0C,
 0xC1, 0x98, 0x11, 0x6A, 0x4B, 0xEA, 0x4C, 0xEE,
 0x00, 0x6C, 0xDE, 0x6D, 0x80, 0x18, 0x56, 0x0C,
 0x08, 0x92, 0xE2, 0x98, 0xD1, 0x67, 0xA2, 0xA2,
-0x00, 0x6C, 0x00, 0x18, 0x92, 0xE1, 0x08, 0x92,
+0x00, 0x6C, 0x00, 0x18, 0x63, 0xE1, 0x08, 0x92,
 0xE3, 0x98, 0xD1, 0x67, 0xA3, 0xA2, 0x00, 0x6C,
-0x00, 0x18, 0x92, 0xE1, 0x44, 0x98, 0x02, 0x6F,
+0x00, 0x18, 0x63, 0xE1, 0x44, 0x98, 0x02, 0x6F,
 0xEB, 0xEF, 0xD1, 0x67, 0x4C, 0xEF, 0x00, 0x6C,
-0x01, 0x6D, 0x00, 0x18, 0x92, 0xE1, 0x07, 0x97,
+0x01, 0x6D, 0x00, 0x18, 0x63, 0xE1, 0x07, 0x97,
 0x06, 0x91, 0x05, 0x90, 0x04, 0x63, 0x00, 0xEF,
 0xFC, 0x63, 0x07, 0x62, 0x06, 0xD1, 0x05, 0xD0,
 0x10, 0xF0, 0x24, 0x6B, 0x30, 0xF0, 0x20, 0x68,
-0xB5, 0xF3, 0xD4, 0x9B, 0xCE, 0xF4, 0x50, 0x98,
+0xF5, 0xF2, 0xD8, 0x9B, 0xCE, 0xF4, 0x50, 0x98,
 0x01, 0x69, 0x2B, 0xE9, 0x03, 0xF3, 0x00, 0x6C,
 0xB1, 0x67, 0x40, 0xEA, 0xCE, 0xF4, 0x50, 0x98,
 0xA3, 0xF3, 0x18, 0x6C, 0xB1, 0x67, 0x00, 0x6E,
-0x40, 0xEA, 0x10, 0xF0, 0x24, 0x6A, 0xF5, 0xF3,
-0x18, 0x9A, 0x00, 0x6C, 0xDF, 0x6D, 0xD0, 0x67,
-0x00, 0x18, 0x7F, 0xE1, 0x01, 0xF0, 0x13, 0x6B,
+0x40, 0xEA, 0x10, 0xF0, 0x24, 0x6A, 0x35, 0xF3,
+0x1C, 0x9A, 0x00, 0x6C, 0xDF, 0x6D, 0xD0, 0x67,
+0x00, 0x18, 0x50, 0xE1, 0x01, 0xF0, 0x13, 0x6B,
 0x6B, 0xEB, 0x4C, 0xEB, 0x01, 0xF0, 0x02, 0x6E,
 0x00, 0x6C, 0xDF, 0x6D, 0x6D, 0xEE, 0x80, 0x18,
 0x56, 0x0C, 0x30, 0xF0, 0x21, 0x6A, 0x70, 0xF3,
 0x40, 0xA2, 0x10, 0x22, 0x00, 0x6C, 0xDE, 0x6D,
-0xD0, 0x67, 0x00, 0x18, 0x7F, 0xE1, 0x10, 0xF0,
+0xD0, 0x67, 0x00, 0x18, 0x50, 0xE1, 0x10, 0xF0,
 0x11, 0x6B, 0x6B, 0xEB, 0x4C, 0xEB, 0x10, 0xF0,
 0x00, 0x6E, 0x00, 0x6C, 0xDE, 0x6D, 0x6D, 0xEE,
 0x80, 0x18, 0x56, 0x0C, 0x30, 0xF0, 0x21, 0x6A,
 0x70, 0xF3, 0x40, 0xA2, 0x5C, 0x2A, 0x10, 0xF0,
-0x24, 0x6A, 0x55, 0xF2, 0x08, 0x9A, 0x00, 0x6C,
+0x24, 0x6A, 0x95, 0xF1, 0x0C, 0x9A, 0x00, 0x6C,
 0xEF, 0x6D, 0xD0, 0x67, 0x80, 0x18, 0x56, 0x0C,
 0x00, 0x6C, 0x33, 0x6D, 0x24, 0x6E, 0x80, 0x18,
 0x56, 0x0C, 0x00, 0x6C, 0x3E, 0x6D, 0x3F, 0x6E,
 0x80, 0x18, 0x56, 0x0C, 0x10, 0xF0, 0x24, 0x6A,
-0x75, 0xF4, 0xD8, 0x9A, 0x00, 0x6C, 0x3F, 0x6D,
+0xB5, 0xF3, 0xDC, 0x9A, 0x00, 0x6C, 0x3F, 0x6D,
 0x80, 0x18, 0x56, 0x0C, 0x00, 0x6C, 0xEF, 0x6D,
 0xC4, 0x67, 0x80, 0x18, 0x56, 0x0C, 0x30, 0xF0,
 0x20, 0x6A, 0x48, 0xF0, 0x54, 0xA2, 0x01, 0x72,
 0x17, 0x61, 0x01, 0x6F, 0x00, 0x6C, 0xEF, 0x6D,
-0xD0, 0x67, 0x00, 0x18, 0x92, 0xE1, 0x00, 0x6C,
+0xD0, 0x67, 0x00, 0x18, 0x63, 0xE1, 0x00, 0x6C,
 0x33, 0x6D, 0x26, 0x6E, 0x80, 0x18, 0x56, 0x0C,
 0x00, 0x6C, 0x3E, 0x6D, 0x37, 0x6E, 0x80, 0x18,
 0x56, 0x0C, 0x10, 0xF0, 0x24, 0x6A, 0x00, 0x6C,
-0x3F, 0x6D, 0x75, 0xF4, 0xDC, 0x9A, 0x16, 0x10,
+0x3F, 0x6D, 0xD5, 0xF3, 0xC0, 0x9A, 0x16, 0x10,
 0x01, 0x6F, 0x00, 0x6C, 0xEF, 0x6D, 0xD0, 0x67,
-0x00, 0x18, 0x92, 0xE1, 0x00, 0x6C, 0x33, 0x6D,
+0x00, 0x18, 0x63, 0xE1, 0x00, 0x6C, 0x33, 0x6D,
 0x26, 0x6E, 0x80, 0x18, 0x56, 0x0C, 0x00, 0x6C,
 0x3E, 0x6D, 0x37, 0x6E, 0x80, 0x18, 0x56, 0x0C,
-0x10, 0xF0, 0x24, 0x6A, 0x95, 0xF4, 0xC0, 0x9A,
+0x10, 0xF0, 0x24, 0x6A, 0xD5, 0xF3, 0xC4, 0x9A,
 0x00, 0x6C, 0x3F, 0x6D, 0x80, 0x18, 0x56, 0x0C,
 0x00, 0x6C, 0xEF, 0x6D, 0xD0, 0x67, 0xE4, 0x67,
-0x00, 0x18, 0x92, 0xE1, 0x16, 0x10, 0x00, 0x6C,
+0x00, 0x18, 0x63, 0xE1, 0x16, 0x10, 0x00, 0x6C,
 0xEE, 0x6D, 0x02, 0xF0, 0x00, 0x6E, 0x80, 0x18,
 0x56, 0x0C, 0x00, 0x6C, 0x33, 0x6D, 0x04, 0x6E,
 0x80, 0x18, 0x56, 0x0C, 0x00, 0x6C, 0x3F, 0x6D,
@@ -11780,12 +11755,12 @@ u8 array_mp_8821c_fw_ap[] = {
 0x08, 0xD1, 0x07, 0xD0, 0xFF, 0x68, 0xFF, 0xF7,
 0x1F, 0x69, 0x8C, 0xE8, 0xAC, 0xE9, 0x90, 0x67,
 0xB1, 0x67, 0x0C, 0xD6, 0x0D, 0xD7, 0x00, 0x18,
-0x92, 0xE1, 0x00, 0x6A, 0x04, 0xD2, 0x0C, 0x96,
-0x90, 0x67, 0xB1, 0x67, 0x00, 0x18, 0x7F, 0xE1,
+0x63, 0xE1, 0x00, 0x6A, 0x04, 0xD2, 0x0C, 0x96,
+0x90, 0x67, 0xB1, 0x67, 0x00, 0x18, 0x50, 0xE1,
 0x0D, 0x93, 0x6E, 0xEA, 0x12, 0x22, 0x30, 0xF0,
 0x20, 0x6A, 0xCE, 0xF4, 0x5C, 0x9A, 0x0A, 0x6C,
 0x40, 0xEA, 0x0C, 0x96, 0x0D, 0x97, 0x90, 0x67,
-0xB1, 0x67, 0x00, 0x18, 0x92, 0xE1, 0x04, 0x92,
+0xB1, 0x67, 0x00, 0x18, 0x63, 0xE1, 0x04, 0x92,
 0x01, 0x4A, 0xE0, 0xF3, 0x08, 0x72, 0x04, 0xD2,
 0xE6, 0x61, 0x09, 0x97, 0x08, 0x91, 0x07, 0x90,
 0x05, 0x63, 0x00, 0xEF, 0xFB, 0x63, 0x09, 0x62,
@@ -11793,81 +11768,81 @@ u8 array_mp_8821c_fw_ap[] = {
 0x4C, 0xED, 0x4C, 0xE9, 0x30, 0xF0, 0x21, 0x6A,
 0x70, 0xF3, 0x40, 0xA2, 0x04, 0xD5, 0x56, 0x22,
 0x10, 0xF0, 0x24, 0x6A, 0x30, 0xF0, 0x20, 0x68,
-0xB5, 0xF3, 0x54, 0x9A, 0xCE, 0xF4, 0x70, 0x98,
+0xF5, 0xF2, 0x58, 0x9A, 0xCE, 0xF4, 0x70, 0x98,
 0x24, 0x36, 0x01, 0x6D, 0x4D, 0xEE, 0x03, 0xF3,
 0x00, 0x6C, 0xAB, 0xED, 0x40, 0xEB, 0xCE, 0xF4,
 0x50, 0x98, 0x01, 0x6D, 0xC3, 0xF3, 0x0C, 0x6C,
 0xAB, 0xED, 0x1B, 0x6E, 0x40, 0xEA, 0x10, 0xF0,
-0x24, 0x6B, 0xF5, 0xF3, 0x0C, 0x4B, 0xCE, 0xF4,
+0x24, 0x6B, 0x35, 0xF3, 0x10, 0x4B, 0xCE, 0xF4,
 0x50, 0x98, 0xA0, 0x9B, 0x23, 0xF3, 0x00, 0x6C,
 0x00, 0x6E, 0x40, 0xEA, 0x10, 0xF0, 0x24, 0x6B,
-0xF5, 0xF3, 0x0C, 0x4B, 0xCE, 0xF4, 0x50, 0x98,
+0x35, 0xF3, 0x10, 0x4B, 0xCE, 0xF4, 0x50, 0x98,
 0xA0, 0x9B, 0x23, 0xF3, 0x08, 0x6C, 0x80, 0x6E,
 0x40, 0xEA, 0x04, 0x93, 0x10, 0xF0, 0x24, 0x6A,
-0xF5, 0xF3, 0x18, 0x9A, 0x60, 0x32, 0x10, 0xF0,
-0x24, 0x6B, 0x95, 0xF4, 0x64, 0x9B, 0x58, 0x32,
+0x35, 0xF3, 0x1C, 0x9A, 0x60, 0x32, 0x10, 0xF0,
+0x24, 0x6B, 0xD5, 0xF3, 0x68, 0x9B, 0x58, 0x32,
 0x91, 0x67, 0x6D, 0xEA, 0x10, 0xF0, 0x24, 0x6B,
-0x15, 0xF4, 0xFC, 0x9B, 0x78, 0x6D, 0xD0, 0x67,
-0x4C, 0xEF, 0x00, 0x18, 0x92, 0xE1, 0x91, 0x67,
+0x75, 0xF3, 0xE0, 0x9B, 0x78, 0x6D, 0xD0, 0x67,
+0x4C, 0xEF, 0x00, 0x18, 0x63, 0xE1, 0x91, 0x67,
 0x5C, 0x6D, 0xD0, 0x67, 0x2A, 0xF3, 0x00, 0x6F,
-0x00, 0x18, 0x92, 0xE1, 0x10, 0xF0, 0x24, 0x6A,
-0x35, 0xF4, 0xE0, 0x9A, 0x91, 0x67, 0x8F, 0x6D,
-0xD0, 0x67, 0x00, 0x18, 0x92, 0xE1, 0x00, 0x6C,
+0x00, 0x18, 0x63, 0xE1, 0x10, 0xF0, 0x24, 0x6A,
+0x75, 0xF3, 0xE4, 0x9A, 0x91, 0x67, 0x8F, 0x6D,
+0xD0, 0x67, 0x00, 0x18, 0x63, 0xE1, 0x00, 0x6C,
 0xEE, 0x6D, 0x55, 0x10, 0x10, 0xF0, 0x24, 0x6A,
-0x30, 0xF0, 0x20, 0x68, 0xB5, 0xF3, 0x54, 0x9A,
+0x30, 0xF0, 0x20, 0x68, 0xF5, 0xF2, 0x58, 0x9A,
 0xCE, 0xF4, 0x70, 0x98, 0x24, 0x36, 0x01, 0x6D,
 0x4D, 0xEE, 0x03, 0xF3, 0x00, 0x6C, 0xAB, 0xED,
 0x40, 0xEB, 0xCE, 0xF4, 0x50, 0x98, 0x01, 0x6D,
 0xC3, 0xF3, 0x0C, 0x6C, 0xAB, 0xED, 0x09, 0x6E,
-0x40, 0xEA, 0x10, 0xF0, 0x24, 0x6B, 0xF5, 0xF3,
-0x0C, 0x4B, 0xCE, 0xF4, 0x50, 0x98, 0xA0, 0x9B,
+0x40, 0xEA, 0x10, 0xF0, 0x24, 0x6B, 0x35, 0xF3,
+0x10, 0x4B, 0xCE, 0xF4, 0x50, 0x98, 0xA0, 0x9B,
 0x23, 0xF3, 0x00, 0x6C, 0x00, 0x6E, 0x40, 0xEA,
 0x30, 0xF0, 0x20, 0x6A, 0x48, 0xF0, 0x54, 0xA2,
 0x03, 0x22, 0x01, 0x72, 0x35, 0x60, 0x69, 0x10,
-0x10, 0xF0, 0x24, 0x6B, 0xF5, 0xF3, 0x0C, 0x4B,
+0x10, 0xF0, 0x24, 0x6B, 0x35, 0xF3, 0x10, 0x4B,
 0xCE, 0xF4, 0x50, 0x98, 0xA0, 0x9B, 0x23, 0xF3,
 0x08, 0x6C, 0x00, 0x6E, 0x40, 0xEA, 0x04, 0x93,
-0x10, 0xF0, 0x24, 0x6A, 0xF5, 0xF3, 0x18, 0x9A,
-0x74, 0x32, 0x10, 0xF0, 0x24, 0x6B, 0x95, 0xF4,
-0x68, 0x9B, 0x00, 0x6C, 0x56, 0x6D, 0x6D, 0xEA,
-0x10, 0xF0, 0x24, 0x6B, 0x95, 0xF4, 0xEC, 0x9B,
-0xD0, 0x67, 0x4C, 0xEF, 0x00, 0x18, 0x92, 0xE1,
-0x10, 0xF0, 0x24, 0x6A, 0x35, 0xF4, 0xEC, 0x9A,
+0x10, 0xF0, 0x24, 0x6A, 0x35, 0xF3, 0x1C, 0x9A,
+0x74, 0x32, 0x10, 0xF0, 0x24, 0x6B, 0xD5, 0xF3,
+0x6C, 0x9B, 0x00, 0x6C, 0x56, 0x6D, 0x6D, 0xEA,
+0x10, 0xF0, 0x24, 0x6B, 0xD5, 0xF3, 0xF0, 0x9B,
+0xD0, 0x67, 0x4C, 0xEF, 0x00, 0x18, 0x63, 0xE1,
+0x10, 0xF0, 0x24, 0x6A, 0x75, 0xF3, 0xF0, 0x9A,
 0x00, 0x6C, 0x8F, 0x6D, 0xD0, 0x67, 0x00, 0x18,
-0x92, 0xE1, 0x00, 0x6C, 0xEF, 0x6D, 0x10, 0x6E,
+0x63, 0xE1, 0x00, 0x6C, 0xEF, 0x6D, 0x10, 0x6E,
 0x01, 0x6F, 0x80, 0x18, 0x89, 0x0D, 0x00, 0x6C,
 0x33, 0x6D, 0x08, 0x6E, 0xE4, 0x67, 0x33, 0x10,
-0x10, 0xF0, 0x24, 0x6B, 0xF5, 0xF3, 0x0C, 0x4B,
+0x10, 0xF0, 0x24, 0x6B, 0x35, 0xF3, 0x10, 0x4B,
 0xCE, 0xF4, 0x50, 0x98, 0xA0, 0x9B, 0x23, 0xF3,
 0x08, 0x6C, 0x00, 0x6E, 0x40, 0xEA, 0x04, 0x93,
-0x10, 0xF0, 0x24, 0x6A, 0xF5, 0xF3, 0x18, 0x9A,
-0x74, 0x32, 0x10, 0xF0, 0x24, 0x6B, 0x95, 0xF4,
-0x68, 0x9B, 0x00, 0x6C, 0x56, 0x6D, 0x6D, 0xEA,
-0x10, 0xF0, 0x24, 0x6B, 0x95, 0xF4, 0xF0, 0x9B,
-0xD0, 0x67, 0x4C, 0xEF, 0x00, 0x18, 0x92, 0xE1,
-0x10, 0xF0, 0x24, 0x6A, 0x35, 0xF4, 0xEC, 0x9A,
+0x10, 0xF0, 0x24, 0x6A, 0x35, 0xF3, 0x1C, 0x9A,
+0x74, 0x32, 0x10, 0xF0, 0x24, 0x6B, 0xD5, 0xF3,
+0x6C, 0x9B, 0x00, 0x6C, 0x56, 0x6D, 0x6D, 0xEA,
+0x10, 0xF0, 0x24, 0x6B, 0xD5, 0xF3, 0xF4, 0x9B,
+0xD0, 0x67, 0x4C, 0xEF, 0x00, 0x18, 0x63, 0xE1,
+0x10, 0xF0, 0x24, 0x6A, 0x75, 0xF3, 0xF0, 0x9A,
 0x00, 0x6C, 0x8F, 0x6D, 0xD0, 0x67, 0x00, 0x18,
-0x92, 0xE1, 0x00, 0x6C, 0xEF, 0x6D, 0x10, 0x6E,
+0x63, 0xE1, 0x00, 0x6C, 0xEF, 0x6D, 0x10, 0x6E,
 0x01, 0x6F, 0x80, 0x18, 0x89, 0x0D, 0x00, 0x6C,
 0x33, 0x6D, 0x08, 0x6E, 0x01, 0x6F, 0x00, 0x18,
-0x92, 0xE1, 0x04, 0x97, 0x91, 0x67, 0x33, 0x6D,
-0x07, 0x6E, 0x00, 0x18, 0x92, 0xE1, 0x09, 0x97,
+0x63, 0xE1, 0x04, 0x97, 0x91, 0x67, 0x33, 0x6D,
+0x07, 0x6E, 0x00, 0x18, 0x63, 0xE1, 0x09, 0x97,
 0x08, 0x91, 0x07, 0x90, 0x05, 0x63, 0x00, 0xEF,
 0xF9, 0x63, 0x0D, 0x62, 0x0C, 0xD1, 0x0B, 0xD0,
 0x00, 0x6A, 0x7D, 0x67, 0x4C, 0xCB, 0x2E, 0xF5,
 0x10, 0x6A, 0xFF, 0x68, 0x04, 0xD2, 0x06, 0x02,
 0x0C, 0xEC, 0x05, 0xD2, 0x10, 0xF0, 0x24, 0x6A,
-0x08, 0xD4, 0xF5, 0xF3, 0xD8, 0x9A, 0x10, 0xF0,
-0x24, 0x6A, 0x08, 0x94, 0x95, 0xF4, 0xF4, 0x9A,
+0x08, 0xD4, 0x35, 0xF3, 0xDC, 0x9A, 0x10, 0xF0,
+0x24, 0x6A, 0x08, 0x94, 0xD5, 0xF3, 0xF8, 0x9A,
 0x0C, 0xED, 0x09, 0xD5, 0x08, 0x6D, 0x00, 0x18,
-0xAC, 0xE1, 0x0E, 0x22, 0x09, 0x92, 0x00, 0x69,
-0x12, 0x22, 0x10, 0xF0, 0x24, 0x6A, 0x75, 0xF3,
-0xB8, 0x9A, 0x03, 0xF3, 0x08, 0x6C, 0x00, 0x18,
-0x34, 0xE1, 0x22, 0x67, 0x0C, 0xE9, 0x07, 0x10,
-0x10, 0xF0, 0x24, 0x6C, 0xB6, 0xF0, 0x08, 0x4C,
+0x7D, 0xE1, 0x0E, 0x22, 0x09, 0x92, 0x00, 0x69,
+0x12, 0x22, 0x10, 0xF0, 0x24, 0x6A, 0xB5, 0xF2,
+0xBC, 0x9A, 0x03, 0xF3, 0x08, 0x6C, 0x00, 0x18,
+0x05, 0xE1, 0x22, 0x67, 0x0C, 0xE9, 0x07, 0x10,
+0x10, 0xF0, 0x24, 0x6C, 0xF5, 0xF7, 0x08, 0x4C,
 0x80, 0x18, 0xFE, 0x11, 0x01, 0x69, 0x08, 0x94,
 0x80, 0x18, 0xC8, 0x0B, 0x7D, 0x67, 0xAC, 0xAB,
-0x10, 0xF0, 0x24, 0x6C, 0xD6, 0xF0, 0x00, 0x4C,
+0x10, 0xF0, 0x24, 0x6C, 0x16, 0xF0, 0x00, 0x4C,
 0x80, 0x18, 0xFE, 0x11, 0x51, 0x67, 0x0D, 0x97,
 0x0C, 0x91, 0x0B, 0x90, 0x07, 0x63, 0x00, 0xEF,
 0xFA, 0x63, 0x0B, 0x62, 0x0A, 0xD1, 0x09, 0xD0,
@@ -11877,13 +11852,13 @@ u8 array_mp_8821c_fw_ap[] = {
 0x05, 0x92, 0x01, 0x72, 0x16, 0x61, 0x30, 0xF0,
 0x20, 0x6A, 0x48, 0xF0, 0x55, 0xA2, 0x02, 0x72,
 0x08, 0x61, 0x44, 0x41, 0x01, 0x68, 0x04, 0xEA,
-0x10, 0xF0, 0x24, 0x6A, 0x95, 0xF4, 0x58, 0x9A,
+0x10, 0xF0, 0x24, 0x6A, 0xD5, 0xF3, 0x5C, 0x9A,
 0x1A, 0x10, 0x44, 0x41, 0x01, 0x68, 0x04, 0xEA,
-0x10, 0xF0, 0x24, 0x6A, 0x95, 0xF4, 0x5C, 0x9A,
+0x10, 0xF0, 0x24, 0x6A, 0xF5, 0xF3, 0x40, 0x9A,
 0x12, 0x10, 0x05, 0x93, 0x00, 0x68, 0x02, 0x73,
 0x0F, 0x61, 0x30, 0xF0, 0x20, 0x6A, 0x48, 0xF0,
 0x15, 0xA2, 0x09, 0x48, 0x10, 0xF0, 0x24, 0x6A,
-0xB5, 0xF3, 0x54, 0x9A, 0x00, 0x30, 0x64, 0x41,
+0xF5, 0xF2, 0x58, 0x9A, 0x00, 0x30, 0x64, 0x41,
 0x4D, 0xE8, 0x01, 0x6A, 0x44, 0xEB, 0x4D, 0xE8,
 0x80, 0x18, 0xA8, 0x08, 0x30, 0xF0, 0x20, 0x6C,
 0xCE, 0xF4, 0x50, 0x9C, 0x01, 0x6D, 0xD0, 0x67,
@@ -11898,34 +11873,34 @@ u8 array_mp_8821c_fw_ap[] = {
 0x48, 0x9A, 0x20, 0xF6, 0xAC, 0x98, 0x38, 0x6C,
 0x40, 0xEA, 0x24, 0x34, 0x30, 0xF0, 0x20, 0x6A,
 0x06, 0xD4, 0xCE, 0xF4, 0x70, 0x9A, 0x10, 0xF0,
-0x24, 0x6A, 0xB5, 0xF3, 0xD4, 0x9A, 0x06, 0x92,
+0x24, 0x6A, 0xF5, 0xF2, 0xD8, 0x9A, 0x06, 0x92,
 0x01, 0x6D, 0x03, 0xF3, 0x00, 0x6C, 0xAB, 0xED,
 0x4D, 0xEE, 0x40, 0xEB, 0x05, 0x93, 0x16, 0x2B,
 0x04, 0x94, 0x0F, 0x24, 0x06, 0x94, 0x10, 0xF0,
-0x24, 0x6A, 0xD4, 0xF5, 0x0C, 0x4A, 0x4D, 0xE4,
+0x24, 0x6A, 0x14, 0xF5, 0x10, 0x4A, 0x4D, 0xE4,
 0x30, 0xF0, 0x20, 0x6C, 0xCE, 0xF4, 0x50, 0x9C,
 0x80, 0xAB, 0x01, 0x6D, 0x00, 0x6E, 0x40, 0xEA,
 0x7C, 0x10, 0x02, 0x6C, 0xB1, 0x67, 0x80, 0x18,
 0xFC, 0x0B, 0x77, 0x10, 0x05, 0x92, 0x02, 0x72,
-0x62, 0x61, 0x10, 0xF0, 0x24, 0x6A, 0xF5, 0xF3,
-0xD8, 0x9A, 0x91, 0x67, 0x00, 0x6D, 0x00, 0x18,
-0x7F, 0xE1, 0x56, 0x32, 0xFF, 0x6C, 0x8C, 0xEA,
+0x62, 0x61, 0x10, 0xF0, 0x24, 0x6A, 0x35, 0xF3,
+0xDC, 0x9A, 0x91, 0x67, 0x00, 0x6D, 0x00, 0x18,
+0x50, 0xE1, 0x56, 0x32, 0xFF, 0x6C, 0x8C, 0xEA,
 0x00, 0xF6, 0x8D, 0xA0, 0x00, 0xF3, 0x68, 0x41,
 0x64, 0x33, 0x80, 0x34, 0x8D, 0xEA, 0x0D, 0xE3,
 0x43, 0xCB, 0x30, 0xF0, 0x20, 0x6B, 0xCE, 0xF4,
-0x50, 0x9B, 0x10, 0xF0, 0x24, 0x6B, 0xF5, 0xF1,
-0xCC, 0x9B, 0x01, 0x6D, 0x23, 0xF3, 0x18, 0x6C,
+0x50, 0x9B, 0x10, 0xF0, 0x24, 0x6B, 0x35, 0xF1,
+0xD0, 0x9B, 0x01, 0x6D, 0x23, 0xF3, 0x18, 0x6C,
 0xAB, 0xED, 0x40, 0xEA, 0x04, 0x94, 0x10, 0x24,
-0x06, 0x94, 0x10, 0xF0, 0x24, 0x6A, 0xD4, 0xF5,
-0x0C, 0x4A, 0x4D, 0xE4, 0x30, 0xF0, 0x20, 0x6C,
+0x06, 0x94, 0x10, 0xF0, 0x24, 0x6A, 0x14, 0xF5,
+0x10, 0x4A, 0x4D, 0xE4, 0x30, 0xF0, 0x20, 0x6C,
 0xCE, 0xF4, 0x50, 0x9C, 0x80, 0xAB, 0x01, 0xF4,
 0x00, 0x6D, 0x00, 0x6E, 0x40, 0xEA, 0x2F, 0x10,
 0x03, 0x6C, 0xB1, 0x67, 0x80, 0x18, 0xFC, 0x0B,
-0x2A, 0x10, 0x10, 0xF0, 0x24, 0x6A, 0xD4, 0xF5,
-0x0C, 0x4A, 0x24, 0x33, 0x4D, 0xE3, 0x01, 0x6D,
+0x2A, 0x10, 0x10, 0xF0, 0x24, 0x6A, 0x14, 0xF5,
+0x10, 0x4A, 0x24, 0x33, 0x4D, 0xE3, 0x01, 0x6D,
 0x30, 0xF0, 0x20, 0x6A, 0xCE, 0xF4, 0x50, 0x9A,
 0x80, 0xAB, 0xC5, 0x67, 0x0D, 0x10, 0x10, 0xF0,
-0x24, 0x6A, 0xD4, 0xF5, 0x0C, 0x4A, 0x24, 0x33,
+0x24, 0x6A, 0x14, 0xF5, 0x10, 0x4A, 0x24, 0x33,
 0x4D, 0xE3, 0x30, 0xF0, 0x20, 0x6A, 0xCE, 0xF4,
 0x50, 0x9A, 0x80, 0xAB, 0x01, 0x6D, 0x00, 0x6E,
 0x40, 0xEA, 0x7D, 0x67, 0x87, 0x43, 0x09, 0x4C,
@@ -11939,8 +11914,8 @@ u8 array_mp_8821c_fw_ap[] = {
 0x00, 0xEF, 0x04, 0x94, 0xC2, 0x24, 0xCF, 0x17,
 0xFC, 0x63, 0x07, 0x62, 0x06, 0xD1, 0x05, 0xD0,
 0xFF, 0x69, 0x8C, 0xE9, 0x44, 0x41, 0x01, 0x68,
-0x04, 0xEA, 0x10, 0xF0, 0x24, 0x6A, 0xB5, 0xF3,
-0x54, 0x9A, 0x4D, 0xE8, 0x80, 0x18, 0xA8, 0x08,
+0x04, 0xEA, 0x10, 0xF0, 0x24, 0x6A, 0xF5, 0xF2,
+0x58, 0x9A, 0x4D, 0xE8, 0x80, 0x18, 0xA8, 0x08,
 0x30, 0xF0, 0x20, 0x6B, 0xCE, 0xF4, 0x50, 0x9B,
 0x01, 0x6D, 0xD0, 0x67, 0x03, 0xF3, 0x00, 0x6C,
 0xAB, 0xED, 0x40, 0xEA, 0x30, 0xF0, 0x20, 0x6B,
@@ -11951,12 +11926,12 @@ u8 array_mp_8821c_fw_ap[] = {
 0x80, 0x18, 0x22, 0x0E, 0x02, 0x67, 0x30, 0xF0,
 0x21, 0x6B, 0x30, 0xF0, 0x20, 0x6A, 0x70, 0xF3,
 0xA4, 0x9B, 0xEE, 0xF3, 0x48, 0x9A, 0x38, 0x6C,
-0x40, 0xEA, 0x10, 0xF0, 0x24, 0x6C, 0xD6, 0xF0,
+0x40, 0xEA, 0x10, 0xF0, 0x24, 0x6C, 0x16, 0xF0,
 0x18, 0x4C, 0x00, 0x6D, 0x80, 0x18, 0xFE, 0x11,
 0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A,
 0x45, 0xE1, 0x00, 0x6C, 0xA7, 0xF6, 0x06, 0xC1,
 0xE4, 0x67, 0xEF, 0x6D, 0x10, 0x6E, 0x00, 0x18,
-0x92, 0xE1, 0x50, 0x67, 0x07, 0x97, 0x06, 0x91,
+0x63, 0xE1, 0x50, 0x67, 0x07, 0x97, 0x06, 0x91,
 0x05, 0x90, 0x04, 0x63, 0x00, 0xEF, 0x00, 0x65,
 0xFA, 0x63, 0x0B, 0x62, 0x0A, 0xD1, 0x09, 0xD0,
 0xFF, 0x6A, 0x4C, 0xEC, 0x4C, 0xED, 0x30, 0xF0,
@@ -11967,16 +11942,16 @@ u8 array_mp_8821c_fw_ap[] = {
 0x01, 0x58, 0x18, 0x67, 0x04, 0x6A, 0x03, 0xE2,
 0x04, 0x92, 0x30, 0xF0, 0x20, 0x69, 0xCE, 0xF4,
 0x70, 0x99, 0x44, 0x36, 0x10, 0xF0, 0x24, 0x6A,
-0xB5, 0xF3, 0x54, 0x9A, 0x01, 0x6D, 0x03, 0xF3,
+0xF5, 0xF2, 0x58, 0x9A, 0x01, 0x6D, 0x03, 0xF3,
 0x00, 0x6C, 0x4D, 0xEE, 0xAB, 0xED, 0x40, 0xEB,
 0x30, 0xF0, 0x21, 0x6B, 0x50, 0xF3, 0xC5, 0xA3,
 0xCE, 0xF4, 0x50, 0x99, 0x01, 0x6D, 0xC3, 0xF3,
 0x0C, 0x6C, 0xAB, 0xED, 0x40, 0xEA, 0x06, 0x93,
 0x01, 0x73, 0x09, 0x61, 0x04, 0x92, 0x01, 0x69,
 0x04, 0x4A, 0x24, 0xEA, 0x10, 0xF0, 0x24, 0x6A,
-0xB5, 0xF4, 0x40, 0x9A, 0x08, 0x10, 0x04, 0x92,
+0xF5, 0xF3, 0x44, 0x9A, 0x08, 0x10, 0x04, 0x92,
 0x01, 0x69, 0x04, 0x4A, 0x24, 0xEA, 0x10, 0xF0,
-0x24, 0x6A, 0xB5, 0xF4, 0x44, 0x9A, 0x4D, 0xE9,
+0x24, 0x6A, 0xF5, 0xF3, 0x48, 0x9A, 0x4D, 0xE9,
 0x80, 0x18, 0xA8, 0x08, 0x30, 0xF0, 0x20, 0x6B,
 0xCE, 0xF4, 0x50, 0x9B, 0x01, 0x6D, 0xD1, 0x67,
 0x03, 0xF3, 0x00, 0x6C, 0xAB, 0xED, 0x40, 0xEA,
@@ -11990,8 +11965,8 @@ u8 array_mp_8821c_fw_ap[] = {
 0x48, 0x9A, 0x20, 0xF6, 0xAC, 0x99, 0x38, 0x6C,
 0x40, 0xEA, 0x06, 0x92, 0x02, 0x72, 0x80, 0xF0,
 0x02, 0x61, 0x10, 0xF0, 0x24, 0x6A, 0x04, 0x94,
-0xF5, 0xF3, 0xD8, 0x9A, 0x00, 0x6D, 0x00, 0x18,
-0x7F, 0xE1, 0xE3, 0xF7, 0x00, 0x6B, 0x4C, 0xEB,
+0x35, 0xF3, 0xDC, 0x9A, 0x00, 0x6D, 0x00, 0x18,
+0x50, 0xE1, 0xE3, 0xF7, 0x00, 0x6B, 0x4C, 0xEB,
 0x76, 0x32, 0x1F, 0x6B, 0x6C, 0xEA, 0x02, 0x5A,
 0x0D, 0x60, 0x00, 0xF6, 0x70, 0x99, 0x02, 0x23,
 0xFF, 0x4B, 0x15, 0x10, 0x03, 0x70, 0x01, 0x48,
@@ -12002,7 +11977,7 @@ u8 array_mp_8821c_fw_ap[] = {
 0x04, 0x73, 0x04, 0x60, 0x01, 0x4B, 0x00, 0xF6,
 0x70, 0xD9, 0x03, 0x10, 0x01, 0x6B, 0x20, 0xF6,
 0x66, 0xC1, 0x01, 0x6C, 0x10, 0xF0, 0x24, 0x6D,
-0xF4, 0xF5, 0x04, 0x4D, 0xB5, 0xE0, 0xA0, 0xA5,
+0x34, 0xF5, 0x08, 0x4D, 0xB5, 0xE0, 0xA0, 0xA5,
 0x30, 0xF0, 0x20, 0x6B, 0x2F, 0xF5, 0x18, 0x4B,
 0x03, 0x70, 0x00, 0xF6, 0xAD, 0xC3, 0x0D, 0x61,
 0x01, 0x72, 0x0B, 0x61, 0x00, 0xF6, 0x50, 0x9B,
@@ -12012,11 +11987,11 @@ u8 array_mp_8821c_fw_ap[] = {
 0x18, 0x48, 0x20, 0xF6, 0x46, 0xA0, 0x01, 0x72,
 0x2C, 0x60, 0x2B, 0x24, 0x04, 0x93, 0x30, 0xF0,
 0x20, 0x69, 0xCE, 0xF4, 0x50, 0x99, 0x64, 0x36,
-0x10, 0xF0, 0x24, 0x6B, 0xB5, 0xF3, 0x74, 0x9B,
+0x10, 0xF0, 0x24, 0x6B, 0xF5, 0xF2, 0x78, 0x9B,
 0x01, 0x6D, 0x03, 0xF3, 0x00, 0x6C, 0x6D, 0xEE,
 0xAB, 0xED, 0x40, 0xEA, 0xCE, 0xF4, 0x30, 0x99,
 0x01, 0x6D, 0xAB, 0xED, 0x04, 0xD1, 0x23, 0xF3,
-0x04, 0x69, 0x91, 0x67, 0x00, 0x18, 0x34, 0xE1,
+0x04, 0x69, 0x91, 0x67, 0x00, 0x18, 0x05, 0xE1,
 0x00, 0xF6, 0xD0, 0x98, 0x07, 0xF4, 0x01, 0x6B,
 0x6B, 0xEB, 0x4C, 0xEB, 0xC0, 0x36, 0x04, 0x92,
 0xC8, 0x36, 0x01, 0x6D, 0x6D, 0xEE, 0x91, 0x67,
@@ -12064,12 +12039,12 @@ u8 array_mp_8821c_fw_ap[] = {
 0xFB, 0x63, 0x09, 0x62, 0x08, 0xD1, 0x07, 0xD0,
 0x30, 0xF0, 0x20, 0x68, 0xC0, 0xF1, 0x08, 0x48,
 0xFF, 0x69, 0x87, 0xF6, 0xB4, 0xA0, 0x8C, 0xE9,
-0x10, 0xF0, 0x24, 0x6C, 0xF6, 0xF0, 0x0C, 0x4C,
+0x10, 0xF0, 0x24, 0x6C, 0x36, 0xF0, 0x0C, 0x4C,
 0x80, 0x18, 0xFE, 0x11, 0x87, 0xF6, 0x4D, 0xA0,
 0x02, 0x72, 0x02, 0x6A, 0x04, 0xD2, 0x02, 0x60,
 0x04, 0x6B, 0x04, 0xD3, 0x30, 0xF0, 0x20, 0x6A,
 0x48, 0xF0, 0xBC, 0xA2, 0x10, 0xF0, 0x24, 0x6C,
-0xF6, 0xF0, 0x0C, 0x4C, 0x80, 0x18, 0xFE, 0x11,
+0x36, 0xF0, 0x0C, 0x4C, 0x80, 0x18, 0xFE, 0x11,
 0x30, 0xF0, 0x20, 0x68, 0xC0, 0xF1, 0x08, 0x48,
 0x87, 0xF6, 0x54, 0xA0, 0x02, 0x72, 0x10, 0x60,
 0x03, 0x72, 0x31, 0x60, 0x01, 0x72, 0x00, 0x68,
@@ -12094,31 +12069,31 @@ u8 array_mp_8821c_fw_ap[] = {
 0x01, 0x4B, 0x87, 0xF6, 0x75, 0xC2, 0x30, 0xF0,
 0x20, 0x68, 0xC0, 0xF1, 0x08, 0x48, 0x87, 0xF6,
 0x54, 0xA0, 0x04, 0x72, 0x6B, 0x61, 0xA7, 0xF6,
-0xA6, 0xA0, 0x10, 0xF0, 0x24, 0x6C, 0x16, 0xF1,
+0xA6, 0xA0, 0x10, 0xF0, 0x24, 0x6C, 0x56, 0xF0,
 0x00, 0x4C, 0x80, 0x18, 0xFE, 0x11, 0xA7, 0xF6,
-0xB2, 0xA0, 0x10, 0xF0, 0x24, 0x6C, 0x36, 0xF1,
+0xB2, 0xA0, 0x10, 0xF0, 0x24, 0x6C, 0x76, 0xF0,
 0x00, 0x4C, 0x80, 0x18, 0xFE, 0x11, 0xA7, 0xF6,
 0xB3, 0xA0, 0x10, 0xF0, 0x24, 0x6C, 0x30, 0xF0,
-0x20, 0x68, 0x2F, 0xF5, 0x18, 0x48, 0x36, 0xF1,
+0x20, 0x68, 0x2F, 0xF5, 0x18, 0x48, 0x76, 0xF0,
 0x1C, 0x4C, 0x80, 0x18, 0xFE, 0x11, 0x00, 0xF6,
-0xBA, 0xA0, 0x10, 0xF0, 0x24, 0x6C, 0x56, 0xF1,
+0xBA, 0xA0, 0x10, 0xF0, 0x24, 0x6C, 0x96, 0xF0,
 0x18, 0x4C, 0x80, 0x18, 0xFE, 0x11, 0x00, 0xF6,
 0xBB, 0xA0, 0x00, 0xF6, 0xDC, 0xA0, 0x10, 0xF0,
-0x24, 0x6C, 0x76, 0xF1, 0x18, 0x4C, 0x80, 0x18,
+0x24, 0x6C, 0xB6, 0xF0, 0x18, 0x4C, 0x80, 0x18,
 0xFE, 0x11, 0x20, 0xF6, 0xA1, 0xA0, 0x20, 0xF6,
-0xC2, 0xA0, 0x10, 0xF0, 0x24, 0x6C, 0xB6, 0xF1,
+0xC2, 0xA0, 0x10, 0xF0, 0x24, 0x6C, 0xF6, 0xF0,
 0x0C, 0x4C, 0x80, 0x18, 0xFE, 0x11, 0x30, 0xF0,
-0x20, 0x68, 0x10, 0xF0, 0x24, 0x6B, 0xB5, 0xF4,
-0xC8, 0x9B, 0xCE, 0xF4, 0x50, 0x98, 0x01, 0x69,
+0x20, 0x68, 0x10, 0xF0, 0x24, 0x6B, 0xF5, 0xF3,
+0xCC, 0x9B, 0xCE, 0xF4, 0x50, 0x98, 0x01, 0x69,
 0x2B, 0xE9, 0xB1, 0x67, 0x03, 0xF3, 0x00, 0x6C,
 0x40, 0xEA, 0xCE, 0xF4, 0x50, 0x98, 0xB1, 0x67,
 0x23, 0xF3, 0x0C, 0x6C, 0x07, 0x6E, 0x40, 0xEA,
 0xCE, 0xF4, 0x50, 0x98, 0xB1, 0x67, 0xC3, 0xF3,
 0x0C, 0x6C, 0x00, 0x6E, 0x40, 0xEA, 0x10, 0xF0,
-0x24, 0x6B, 0xF5, 0xF1, 0x0C, 0x4B, 0xCE, 0xF4,
+0x24, 0x6B, 0x35, 0xF1, 0x10, 0x4B, 0xCE, 0xF4,
 0x50, 0x98, 0xC0, 0x9B, 0xB1, 0x67, 0x23, 0xF3,
 0x18, 0x6C, 0x40, 0xEA, 0x10, 0xF0, 0x24, 0x6B,
-0xF5, 0xF1, 0x0C, 0x4B, 0xCE, 0xF4, 0x50, 0x98,
+0x35, 0xF1, 0x10, 0x4B, 0xCE, 0xF4, 0x50, 0x98,
 0xC0, 0x9B, 0x23, 0xF3, 0x1C, 0x6C, 0xB1, 0x67,
 0x40, 0xEA, 0x09, 0x10, 0x01, 0x71, 0x3F, 0xF7,
 0x13, 0x61, 0x87, 0xF6, 0x55, 0xA0, 0x04, 0x93,
@@ -12126,35 +12101,35 @@ u8 array_mp_8821c_fw_ap[] = {
 0x08, 0x91, 0x07, 0x90, 0x05, 0x63, 0x00, 0xEF,
 0xFC, 0x63, 0x07, 0x62, 0x06, 0xD1, 0x05, 0xD0,
 0x10, 0xF0, 0x24, 0x6B, 0x30, 0xF0, 0x20, 0x68,
-0xB5, 0xF3, 0xD4, 0x9B, 0xCE, 0xF4, 0x50, 0x98,
+0xF5, 0xF2, 0xD8, 0x9B, 0xCE, 0xF4, 0x50, 0x98,
 0xFF, 0x69, 0x01, 0x6D, 0xAB, 0xED, 0x8C, 0xE9,
 0x03, 0xF3, 0x00, 0x6C, 0x40, 0xEA, 0xCE, 0xF4,
 0x50, 0x98, 0x01, 0x6D, 0xA3, 0xF3, 0x18, 0x6C,
 0xAB, 0xED, 0x00, 0x6E, 0x40, 0xEA, 0x30, 0xF0,
 0x21, 0x6A, 0x70, 0xF3, 0x40, 0xA2, 0x11, 0x22,
-0x10, 0xF0, 0x24, 0x6A, 0xF5, 0xF3, 0x18, 0x9A,
+0x10, 0xF0, 0x24, 0x6A, 0x35, 0xF3, 0x1C, 0x9A,
 0x00, 0x6C, 0x01, 0x6D, 0xD0, 0x67, 0x00, 0x18,
-0x7F, 0xE1, 0x2E, 0x6B, 0x6B, 0xEB, 0x4C, 0xEB,
+0x50, 0xE1, 0x2E, 0x6B, 0x6B, 0xEB, 0x4C, 0xEB,
 0x00, 0x6C, 0x01, 0x6D, 0xD0, 0x67, 0x25, 0x6F,
-0x10, 0x10, 0x10, 0xF0, 0x24, 0x6A, 0xF5, 0xF3,
-0x18, 0x9A, 0x00, 0x6C, 0x01, 0x6D, 0xD0, 0x67,
-0x00, 0x18, 0x7F, 0xE1, 0x2E, 0x6B, 0x6B, 0xEB,
+0x10, 0x10, 0x10, 0xF0, 0x24, 0x6A, 0x35, 0xF3,
+0x1C, 0x9A, 0x00, 0x6C, 0x01, 0x6D, 0xD0, 0x67,
+0x00, 0x18, 0x50, 0xE1, 0x2E, 0x6B, 0x6B, 0xEB,
 0x4C, 0xEB, 0x00, 0x6C, 0x01, 0x6D, 0xD0, 0x67,
-0x05, 0x6F, 0x6D, 0xEF, 0x00, 0x18, 0x92, 0xE1,
+0x05, 0x6F, 0x6D, 0xEF, 0x00, 0x18, 0x63, 0xE1,
 0x91, 0x67, 0x80, 0x18, 0xC2, 0x0F, 0x07, 0x97,
 0x06, 0x91, 0x05, 0x90, 0x04, 0x63, 0x00, 0xEF,
 0xF2, 0x63, 0x1B, 0x62, 0x1A, 0xD1, 0x19, 0xD0,
 0x88, 0xA4, 0x02, 0x6A, 0x30, 0xF0, 0x20, 0x68,
 0x8C, 0xEA, 0x46, 0x32, 0x16, 0xD4, 0x17, 0xD2,
 0x80, 0x18, 0xE3, 0x09, 0x80, 0x18, 0xE1, 0x0B,
-0x10, 0xF0, 0x24, 0x6A, 0x35, 0xF2, 0xBC, 0x9A,
+0x10, 0xF0, 0x24, 0x6A, 0x95, 0xF1, 0xA0, 0x9A,
 0xA1, 0xF4, 0x18, 0x6C, 0x2F, 0xF5, 0x18, 0x48,
-0x00, 0x18, 0x34, 0xE1, 0x20, 0xF6, 0x48, 0xC0,
+0x00, 0x18, 0x05, 0xE1, 0x20, 0xF6, 0x48, 0xC0,
 0x30, 0xF0, 0x20, 0x6A, 0xCE, 0xF3, 0x5C, 0x9A,
 0x38, 0x6C, 0x01, 0x69, 0x40, 0xEA, 0x16, 0x94,
 0x00, 0x6D, 0x20, 0xF6, 0x4C, 0xD8, 0x2C, 0xEC,
 0x00, 0x18, 0x5D, 0xD3, 0x16, 0xD2, 0x72, 0x2A,
-0x10, 0xF0, 0x24, 0x6C, 0xF6, 0xF1, 0x00, 0x4C,
+0x10, 0xF0, 0x24, 0x6C, 0x36, 0xF1, 0x00, 0x4C,
 0x80, 0x18, 0xFE, 0x11, 0x30, 0xF0, 0x20, 0x6A,
 0xC0, 0xF1, 0x08, 0x4A, 0x28, 0xF1, 0x6C, 0xA2,
 0x9D, 0x67, 0x87, 0xF6, 0x34, 0xC2, 0x01, 0x4B,
@@ -12183,12 +12158,12 @@ u8 array_mp_8821c_fw_ap[] = {
 0xC9, 0x17, 0x17, 0x92, 0x04, 0x22, 0x00, 0x6C,
 0x01, 0x6D, 0x00, 0x18, 0xEC, 0xD2, 0x00, 0x6C,
 0x00, 0x18, 0xB7, 0xD2, 0x10, 0xF0, 0x24, 0x6A,
-0xF5, 0xF3, 0xD8, 0x9A, 0x10, 0xF0, 0x24, 0x6A,
-0xB5, 0xF4, 0xEC, 0x9A, 0x00, 0x6C, 0x08, 0x6D,
-0x00, 0x18, 0x92, 0xE1, 0x1B, 0x97, 0x1A, 0x91,
+0x35, 0xF3, 0xDC, 0x9A, 0x10, 0xF0, 0x24, 0x6A,
+0xF5, 0xF3, 0xF0, 0x9A, 0x00, 0x6C, 0x08, 0x6D,
+0x00, 0x18, 0x63, 0xE1, 0x1B, 0x97, 0x1A, 0x91,
 0x19, 0x90, 0x00, 0x6A, 0x0E, 0x63, 0x00, 0xEF,
 0xFD, 0x63, 0x05, 0x62, 0x00, 0x6A, 0x10, 0xF0,
-0x24, 0x6B, 0xB5, 0xF4, 0x70, 0x9B, 0x54, 0x34,
+0x24, 0x6B, 0xF5, 0xF3, 0x74, 0x9B, 0x54, 0x34,
 0x01, 0x4A, 0x71, 0xE4, 0xA0, 0xA4, 0xF8, 0x6B,
 0xAC, 0xEB, 0x60, 0xC4, 0xFF, 0x6B, 0x6C, 0xEA,
 0x80, 0x72, 0xF1, 0x61, 0x80, 0x18, 0xF2, 0x07,
@@ -12201,7 +12176,7 @@ u8 array_mp_8821c_fw_ap[] = {
 0x62, 0x85, 0x78, 0x73, 0x03, 0x60, 0x58, 0x73,
 0x7D, 0x67, 0x1A, 0x61, 0x82, 0x85, 0x60, 0xA6,
 0x78, 0x6F, 0xEE, 0xEC, 0x10, 0xF0, 0x24, 0x6F,
-0x72, 0x30, 0xF6, 0xF1, 0x14, 0x4F, 0xE1, 0xE0,
+0x72, 0x30, 0x36, 0xF1, 0x14, 0x4F, 0xE1, 0xE0,
 0x00, 0xA0, 0x01, 0x5C, 0x98, 0x67, 0x94, 0x34,
 0x8D, 0xE8, 0x3D, 0x67, 0x00, 0xC1, 0x0F, 0x68,
 0x6C, 0xE8, 0xFD, 0xE0, 0x60, 0xA7, 0x02, 0x4D,
@@ -12212,7 +12187,7 @@ u8 array_mp_8821c_fw_ap[] = {
 0x78, 0x74, 0xF8, 0x67, 0x01, 0x5F, 0x18, 0x67,
 0x14, 0x30, 0x18, 0x65, 0x0C, 0x6C, 0x07, 0x97,
 0x0F, 0x68, 0x10, 0xF0, 0x24, 0x69, 0xE7, 0xEC,
-0x0C, 0xEF, 0xF6, 0xF1, 0x14, 0x49, 0x3D, 0xE7,
+0x0C, 0xEF, 0x36, 0xF1, 0x14, 0x49, 0x3D, 0xE7,
 0xE0, 0xA7, 0x06, 0x90, 0x38, 0x67, 0x2D, 0xEF,
 0xFC, 0x4C, 0xE0, 0xC0, 0x01, 0x48, 0xE4, 0x44,
 0x06, 0xD0, 0xED, 0x2F, 0x04, 0x4B, 0x02, 0x4D,
@@ -12221,7 +12196,7 @@ u8 array_mp_8821c_fw_ap[] = {
 0x06, 0xD3, 0x78, 0x74, 0x98, 0x67, 0x01, 0x5C,
 0xF8, 0x67, 0xF4, 0x37, 0x07, 0xD1, 0x1F, 0x65,
 0x1C, 0x6C, 0x07, 0x97, 0x0F, 0x68, 0x10, 0xF0,
-0x24, 0x69, 0xE6, 0xEC, 0x0C, 0xEF, 0xF6, 0xF1,
+0x24, 0x69, 0xE6, 0xEC, 0x0C, 0xEF, 0x36, 0xF1,
 0x14, 0x49, 0x3D, 0xE7, 0xE0, 0xA7, 0x06, 0x91,
 0x18, 0x67, 0x0D, 0xEF, 0xFC, 0x4C, 0xE0, 0xC1,
 0x01, 0x49, 0xE4, 0x44, 0x06, 0xD1, 0xED, 0x2F,
@@ -12272,7 +12247,7 @@ u8 array_mp_8821c_fw_ap[] = {
 0xF4, 0xC0, 0x43, 0xF4, 0xE4, 0x43, 0xE4, 0x37,
 0xB5, 0xE7, 0xE0, 0xAD, 0x74, 0x33, 0xF5, 0xC0,
 0xE2, 0x37, 0xF6, 0xC0, 0x10, 0xF0, 0x24, 0x6F,
-0xB5, 0xF4, 0xF4, 0x9F, 0xED, 0xE3, 0x60, 0xA3,
+0xF5, 0xF3, 0xF8, 0x9F, 0xED, 0xE3, 0x60, 0xA3,
 0x80, 0xCE, 0x80, 0xCD, 0x77, 0xC0, 0x02, 0x10,
 0x9D, 0x67, 0x72, 0xC4, 0x81, 0x5A, 0x23, 0x60,
 0xC3, 0xF3, 0x84, 0x42, 0x30, 0xF0, 0x20, 0x6B,
@@ -12281,7 +12256,7 @@ u8 array_mp_8821c_fw_ap[] = {
 0xB9, 0xC6, 0xA2, 0x35, 0xBA, 0xC6, 0x43, 0xF4,
 0xA4, 0x42, 0xA4, 0x35, 0x6D, 0xE5, 0xA0, 0xAB,
 0x54, 0x32, 0xBB, 0xC6, 0xA2, 0x35, 0xBC, 0xC6,
-0x10, 0xF0, 0x24, 0x6D, 0xB5, 0xF4, 0xB4, 0x9D,
+0x10, 0xF0, 0x24, 0x6D, 0xF5, 0xF3, 0xB8, 0x9D,
 0xA9, 0xE2, 0x40, 0xA2, 0x5D, 0xC6, 0x00, 0x6A,
 0x40, 0xCC, 0x40, 0xCB, 0x02, 0x10, 0xFD, 0x67,
 0x58, 0xC7, 0x04, 0x6A, 0x1D, 0x67, 0x50, 0xC0,
@@ -12310,8 +12285,8 @@ u8 array_mp_8821c_fw_ap[] = {
 0x85, 0x67, 0x80, 0x18, 0x66, 0x10, 0x14, 0x10,
 0x85, 0x67, 0x80, 0x18, 0x5F, 0x09, 0x10, 0x10,
 0x85, 0x67, 0x80, 0x18, 0x9A, 0x11, 0x0C, 0x10,
-0x10, 0xF0, 0x24, 0x6A, 0x15, 0xF2, 0x78, 0x9A,
-0x10, 0xF0, 0x24, 0x6C, 0x55, 0xF2, 0x80, 0x9C,
+0x10, 0xF0, 0x24, 0x6A, 0x55, 0xF1, 0x7C, 0x9A,
+0x10, 0xF0, 0x24, 0x6C, 0x95, 0xF1, 0x84, 0x9C,
 0x40, 0x9B, 0x8D, 0xEA, 0x40, 0xDB, 0xFF, 0x6A,
 0x05, 0x97, 0x03, 0x63, 0x00, 0xEF, 0x00, 0x65,
 0xF8, 0x63, 0x0F, 0x62, 0x0E, 0xD1, 0x0D, 0xD0,
@@ -12363,7 +12338,7 @@ u8 array_mp_8821c_fw_ap[] = {
 0x80, 0x9A, 0xE5, 0xF2, 0x72, 0xC2, 0x04, 0xF0,
 0x00, 0x6B, 0x8C, 0xEB, 0x29, 0x23, 0xE5, 0xF2,
 0xB0, 0xA2, 0xE5, 0xF2, 0xD1, 0xA2, 0xE5, 0xF2,
-0xF2, 0xA2, 0x10, 0xF0, 0x24, 0x6C, 0x16, 0xF2,
+0xF2, 0xA2, 0x10, 0xF0, 0x24, 0x6C, 0x56, 0xF1,
 0x08, 0x4C, 0x80, 0x18, 0xFE, 0x11, 0x1C, 0x10,
 0x02, 0x73, 0x1A, 0x61, 0x62, 0xA4, 0xE5, 0xF2,
 0x70, 0xC2, 0x63, 0xA4, 0x65, 0xF4, 0x80, 0x9A,
@@ -12371,7 +12346,7 @@ u8 array_mp_8821c_fw_ap[] = {
 0xE5, 0xF2, 0x72, 0xC2, 0x04, 0xF0, 0x00, 0x6B,
 0x8C, 0xEB, 0x0A, 0x23, 0xE5, 0xF2, 0xB0, 0xA2,
 0xE5, 0xF2, 0xD1, 0xA2, 0x10, 0xF0, 0x24, 0x6C,
-0x36, 0xF2, 0x18, 0x4C, 0x80, 0x18, 0xFE, 0x11,
+0x76, 0xF1, 0x18, 0x4C, 0x80, 0x18, 0xFE, 0x11,
 0x30, 0xF0, 0x20, 0x6A, 0x05, 0x97, 0xC0, 0xF1,
 0x08, 0x4A, 0x01, 0x6B, 0xE5, 0xF2, 0x76, 0xC2,
 0x00, 0x6B, 0xE5, 0xF2, 0x75, 0xC2, 0x03, 0x63,
@@ -12394,7 +12369,7 @@ u8 array_mp_8821c_fw_ap[] = {
 0xA8, 0x9D, 0x65, 0xC4, 0xFF, 0x6C, 0x8C, 0xE8,
 0x07, 0xF7, 0x01, 0x4C, 0xAC, 0xEC, 0x0A, 0x24,
 0xD6, 0xAA, 0xE3, 0xA2, 0x10, 0xF0, 0x24, 0x6C,
-0x56, 0xF2, 0x1C, 0x4C, 0xB1, 0x67, 0x04, 0xD3,
+0x96, 0xF1, 0x1C, 0x4C, 0xB1, 0x67, 0x04, 0xD3,
 0x80, 0x18, 0xFE, 0x11, 0x14, 0x93, 0x02, 0x6A,
 0x4E, 0xEB, 0x21, 0x2B, 0x30, 0xF0, 0x20, 0x6A,
 0x2C, 0x34, 0x2F, 0xF7, 0x1C, 0x4A, 0x89, 0xE2,
@@ -12403,7 +12378,7 @@ u8 array_mp_8821c_fw_ap[] = {
 0x63, 0xCA, 0x30, 0xF0, 0x20, 0x6B, 0x25, 0xF6,
 0x68, 0x9B, 0xFF, 0x6A, 0x4C, 0xE8, 0x07, 0xF7,
 0x01, 0x4A, 0x6C, 0xEA, 0x08, 0x22, 0x10, 0xF0,
-0x24, 0x6C, 0x96, 0xF2, 0x00, 0x4C, 0xB1, 0x67,
+0x24, 0x6C, 0xD6, 0xF1, 0x00, 0x4C, 0xB1, 0x67,
 0x00, 0x6E, 0x80, 0x18, 0xFE, 0x11, 0x13, 0x93,
 0xFF, 0x6A, 0x01, 0x4B, 0x4C, 0xEB, 0x12, 0x92,
 0x13, 0xD3, 0x01, 0x4A, 0x12, 0xD2, 0x13, 0x93,
@@ -12413,7 +12388,7 @@ u8 array_mp_8821c_fw_ap[] = {
 0x20, 0xF0, 0x5D, 0xA3, 0x20, 0xF0, 0xBA, 0xA3,
 0x20, 0xF0, 0xDB, 0xA3, 0x20, 0xF0, 0xFC, 0xA3,
 0x04, 0xD2, 0x20, 0xF0, 0x5E, 0xA3, 0x10, 0xF0,
-0x24, 0x6C, 0x96, 0xF2, 0x18, 0x4C, 0x05, 0xD2,
+0x24, 0x6C, 0xD6, 0xF1, 0x18, 0x4C, 0x05, 0xD2,
 0x20, 0xF0, 0x5F, 0xA3, 0x06, 0xD2, 0x40, 0xF0,
 0x40, 0xA3, 0x07, 0xD2, 0x40, 0xF0, 0x41, 0xA3,
 0x08, 0xD2, 0x40, 0xF0, 0x42, 0xA3, 0x09, 0xD2,
@@ -12434,7 +12409,7 @@ u8 array_mp_8821c_fw_ap[] = {
 0x03, 0x6A, 0x78, 0x67, 0x6F, 0xE2, 0x07, 0xD3,
 0x30, 0xF0, 0x20, 0x6B, 0x25, 0xF6, 0x68, 0x9B,
 0xE7, 0xF7, 0x1D, 0x4A, 0x6C, 0xEA, 0x07, 0x22,
-0x08, 0x97, 0x10, 0xF0, 0x24, 0x6C, 0xD6, 0xF2,
+0x08, 0x97, 0x10, 0xF0, 0x24, 0x6C, 0x16, 0xF2,
 0x14, 0x4C, 0x80, 0x18, 0xFE, 0x11, 0x80, 0x18,
 0x16, 0x11, 0x00, 0x68, 0x06, 0x91, 0x4A, 0x10,
 0x08, 0x93, 0x01, 0x6A, 0x44, 0xE9, 0x6C, 0xEA,
@@ -12443,7 +12418,7 @@ u8 array_mp_8821c_fw_ap[] = {
 0x25, 0xF6, 0x68, 0x9B, 0x00, 0xF6, 0x24, 0xC2,
 0x01, 0x48, 0xFF, 0x6A, 0x4C, 0xE8, 0x07, 0xF7,
 0x01, 0x4A, 0x6C, 0xEA, 0x08, 0x22, 0x10, 0xF0,
-0x24, 0x6C, 0xF6, 0xF2, 0x1C, 0x4C, 0xB0, 0x67,
+0x24, 0x6C, 0x36, 0xF2, 0x1C, 0x4C, 0xB0, 0x67,
 0xD1, 0x67, 0x80, 0x18, 0xFE, 0x11, 0x07, 0x92,
 0x4A, 0xE8, 0x04, 0x60, 0x06, 0x92, 0x1F, 0x4A,
 0x2E, 0xEA, 0x21, 0x2A, 0x30, 0xF0, 0x20, 0x6B,
@@ -12451,7 +12426,7 @@ u8 array_mp_8821c_fw_ap[] = {
 0x6C, 0xEA, 0x12, 0x22, 0x30, 0xF0, 0x20, 0x6A,
 0x2F, 0xF5, 0x18, 0x4A, 0x00, 0xF6, 0xC4, 0xA2,
 0x00, 0xF6, 0xE5, 0xA2, 0x00, 0xF6, 0x46, 0xA2,
-0x10, 0xF0, 0x24, 0x6C, 0x16, 0xF3, 0x1C, 0x4C,
+0x10, 0xF0, 0x24, 0x6C, 0x56, 0xF2, 0x1C, 0x4C,
 0xB0, 0x67, 0x04, 0xD2, 0x80, 0x18, 0xFE, 0x11,
 0x0D, 0x20, 0x07, 0x94, 0x00, 0x68, 0x80, 0x18,
 0x37, 0x12, 0x80, 0x18, 0x16, 0x11, 0x01, 0x49,
@@ -12460,11 +12435,11 @@ u8 array_mp_8821c_fw_ap[] = {
 0x0B, 0x90, 0x07, 0x63, 0x00, 0xEF, 0x00, 0x65,
 0xF6, 0x63, 0x13, 0x62, 0x12, 0xD1, 0x11, 0xD0,
 0x10, 0xF0, 0x24, 0x6B, 0xFF, 0x6A, 0x8C, 0xEA,
-0x34, 0xF6, 0x90, 0x9B, 0x34, 0xF6, 0x10, 0x4B,
+0x74, 0xF5, 0x94, 0x9B, 0x74, 0xF5, 0x14, 0x4B,
 0x08, 0x72, 0x04, 0xD4, 0x81, 0x9B, 0x68, 0xA3,
 0x05, 0xD4, 0x9D, 0x67, 0x78, 0xC4, 0x10, 0xF0,
-0x24, 0x6B, 0x34, 0xF6, 0x84, 0x9B, 0x34, 0xF6,
-0x04, 0x4B, 0x07, 0xD4, 0x81, 0x9B, 0x68, 0xA3,
+0x24, 0x6B, 0x74, 0xF5, 0x88, 0x9B, 0x74, 0xF5,
+0x08, 0x4B, 0x07, 0xD4, 0x81, 0x9B, 0x68, 0xA3,
 0x08, 0xD4, 0x9D, 0x67, 0x20, 0xF0, 0x64, 0xC4,
 0x37, 0x61, 0x20, 0xF0, 0x05, 0x02, 0x07, 0x00,
 0x04, 0x01, 0x0E, 0xD2, 0x40, 0xA0, 0x0B, 0x5A,
@@ -12501,16 +12476,16 @@ u8 array_mp_8821c_fw_ap[] = {
 0x80, 0x18, 0xDC, 0x12, 0x34, 0x10, 0x04, 0xA2,
 0x22, 0xA2, 0x43, 0xA2, 0x10, 0x30, 0x08, 0x74,
 0x4D, 0xE8, 0x0E, 0x61, 0x10, 0xF0, 0x24, 0x6C,
-0x56, 0xF3, 0x04, 0x4C, 0x80, 0x18, 0xBC, 0x11,
+0x96, 0xF2, 0x04, 0x4C, 0x80, 0x18, 0xBC, 0x11,
 0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A,
 0x45, 0xE1, 0x45, 0xF2, 0x08, 0xC1, 0x1F, 0x10,
 0x09, 0x74, 0x0E, 0x61, 0x10, 0xF0, 0x24, 0x6C,
-0x76, 0xF3, 0x04, 0x4C, 0x80, 0x18, 0xBC, 0x11,
+0xB6, 0xF2, 0x04, 0x4C, 0x80, 0x18, 0xBC, 0x11,
 0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A,
 0x45, 0xE1, 0x85, 0xF2, 0x1C, 0xC1, 0x0F, 0x10,
 0x0A, 0x74, 0x0D, 0x61, 0x10, 0xF0, 0x24, 0x6A,
-0xB5, 0xF4, 0xF8, 0x9A, 0x10, 0xF0, 0x24, 0x6C,
-0x76, 0xF3, 0x14, 0x4C, 0xF9, 0x6D, 0x28, 0xF3,
+0xF5, 0xF3, 0xFC, 0x9A, 0x10, 0xF0, 0x24, 0x6C,
+0xB6, 0xF2, 0x14, 0x4C, 0xF9, 0x6D, 0x28, 0xF3,
 0x01, 0x6E, 0x80, 0x18, 0xFE, 0x11, 0x07, 0x97,
 0x06, 0x91, 0x05, 0x90, 0x04, 0x63, 0x00, 0xEF,
 0xFB, 0x63, 0x09, 0x62, 0xFF, 0x6A, 0x4C, 0xEC,
@@ -12599,55 +12574,55 @@ u8 array_mp_8821c_fw_ap[] = {
 0x20, 0xF0, 0xA5, 0xA0, 0x30, 0x6A, 0x4C, 0xEB,
 0x9F, 0x4A, 0xAC, 0xEA, 0x6D, 0xEA, 0x20, 0xF0,
 0x45, 0xC0, 0x10, 0xF0, 0x24, 0x6D, 0x10, 0xF0,
-0x24, 0x6A, 0xB5, 0xF4, 0x5C, 0x9A, 0xD5, 0xF4,
-0xA0, 0x9D, 0x2C, 0x33, 0x49, 0xE3, 0x03, 0x4C,
+0x24, 0x6A, 0x15, 0xF4, 0x40, 0x9A, 0x15, 0xF4,
+0xA4, 0x9D, 0x2C, 0x33, 0x49, 0xE3, 0x03, 0x4C,
 0xAD, 0xE3, 0xA0, 0xA4, 0x01, 0x4C, 0xA0, 0xC2,
 0x01, 0x4A, 0x6A, 0xEA, 0xFA, 0x61, 0x30, 0xF0,
 0x20, 0x6A, 0x25, 0xF6, 0x48, 0x9A, 0x02, 0x6B,
 0x6C, 0xEA, 0x0F, 0x22, 0x20, 0xF0, 0xC5, 0xA0,
 0x44, 0xA0, 0x10, 0xF0, 0x24, 0x6C, 0xDA, 0x37,
-0x04, 0xD2, 0x01, 0x6A, 0xB6, 0xF3, 0x00, 0x4C,
+0x04, 0xD2, 0x01, 0x6A, 0xF6, 0xF2, 0x00, 0x4C,
 0xB1, 0x67, 0xDE, 0x36, 0x4C, 0xEF, 0x80, 0x18,
 0xFE, 0x11, 0x30, 0xF0, 0x20, 0x6A, 0x25, 0xF6,
 0x48, 0x9A, 0x02, 0x6B, 0x6C, 0xEA, 0x16, 0x22,
 0x20, 0xF0, 0x66, 0xA0, 0x20, 0xF0, 0xC5, 0xA0,
 0x01, 0x6C, 0x6A, 0x33, 0x8C, 0xEB, 0x06, 0x97,
 0x03, 0x6A, 0xCA, 0x35, 0x04, 0xD3, 0x10, 0xF0,
-0x24, 0x6C, 0xD2, 0x33, 0x4C, 0xEB, 0xD6, 0xF3,
+0x24, 0x6C, 0xD2, 0x33, 0x4C, 0xEB, 0x16, 0xF3,
 0x04, 0x4C, 0x4C, 0xED, 0x4C, 0xEE, 0x05, 0xD3,
 0x80, 0x18, 0xFE, 0x11, 0x10, 0xF0, 0x24, 0x6A,
-0xB5, 0xF4, 0x5C, 0x9A, 0x2C, 0x33, 0x49, 0xE3,
+0x15, 0xF4, 0x40, 0x9A, 0x2C, 0x33, 0x49, 0xE3,
 0x60, 0x9A, 0x30, 0xF0, 0x20, 0x6A, 0xCC, 0xF1,
 0x56, 0xA2, 0x01, 0x72, 0x16, 0x61, 0x10, 0xF0,
-0x24, 0x6A, 0xD5, 0xF4, 0x44, 0x9A, 0x63, 0xEA,
-0x10, 0x60, 0x10, 0xF0, 0x24, 0x6A, 0xD5, 0xF4,
-0x48, 0x9A, 0x00, 0x6B, 0x60, 0xC2, 0x10, 0xF0,
-0x24, 0x6A, 0xD5, 0xF4, 0x6C, 0x9A, 0x10, 0xF0,
-0x24, 0x6A, 0x95, 0xF1, 0x4C, 0x9A, 0x60, 0xDA,
+0x24, 0x6A, 0x15, 0xF4, 0x48, 0x9A, 0x63, 0xEA,
+0x10, 0x60, 0x10, 0xF0, 0x24, 0x6A, 0x15, 0xF4,
+0x4C, 0x9A, 0x00, 0x6B, 0x60, 0xC2, 0x10, 0xF0,
+0x24, 0x6A, 0x15, 0xF4, 0x70, 0x9A, 0x10, 0xF0,
+0x24, 0x6A, 0xD5, 0xF0, 0x50, 0x9A, 0x60, 0xDA,
 0xF0, 0x17, 0x20, 0xF0, 0x45, 0xA0, 0x03, 0x6B,
 0x4A, 0x32, 0x6C, 0xEA, 0x30, 0xF0, 0x20, 0x6B,
 0xCC, 0xF1, 0x74, 0xA3, 0x05, 0x73, 0x11, 0x61,
-0x38, 0x22, 0x10, 0xF0, 0x24, 0x6A, 0xD5, 0xF4,
-0x48, 0x9A, 0x00, 0x6B, 0x60, 0xC2, 0x10, 0xF0,
-0x24, 0x6A, 0xD5, 0xF4, 0x70, 0x9A, 0x10, 0xF0,
-0x24, 0x6A, 0x95, 0xF1, 0x4C, 0x9A, 0x60, 0xDA,
+0x38, 0x22, 0x10, 0xF0, 0x24, 0x6A, 0x15, 0xF4,
+0x4C, 0x9A, 0x00, 0x6B, 0x60, 0xC2, 0x10, 0xF0,
+0x24, 0x6A, 0x15, 0xF4, 0x74, 0x9A, 0x10, 0xF0,
+0x24, 0x6A, 0xD5, 0xF0, 0x50, 0x9A, 0x60, 0xDA,
 0xF0, 0x17, 0x06, 0x73, 0x12, 0x61, 0x02, 0x5A,
-0x24, 0x61, 0x10, 0xF0, 0x24, 0x6A, 0xD5, 0xF4,
-0x48, 0x9A, 0x00, 0x6B, 0x60, 0xC2, 0x10, 0xF0,
-0x24, 0x6A, 0xD5, 0xF4, 0x74, 0x9A, 0x10, 0xF0,
-0x24, 0x6A, 0x95, 0xF1, 0x4C, 0x9A, 0x60, 0xDA,
+0x24, 0x61, 0x10, 0xF0, 0x24, 0x6A, 0x15, 0xF4,
+0x4C, 0x9A, 0x00, 0x6B, 0x60, 0xC2, 0x10, 0xF0,
+0x24, 0x6A, 0x15, 0xF4, 0x78, 0x9A, 0x10, 0xF0,
+0x24, 0x6A, 0xD5, 0xF0, 0x50, 0x9A, 0x60, 0xDA,
 0xF0, 0x17, 0x07, 0x73, 0x12, 0x61, 0x03, 0x72,
-0x10, 0x61, 0x10, 0xF0, 0x24, 0x6A, 0xD5, 0xF4,
-0x48, 0x9A, 0x00, 0x6B, 0x60, 0xC2, 0x10, 0xF0,
-0x24, 0x6A, 0xD5, 0xF4, 0x78, 0x9A, 0x10, 0xF0,
-0x24, 0x6A, 0x95, 0xF1, 0x4C, 0x9A, 0x60, 0xDA,
+0x10, 0x61, 0x10, 0xF0, 0x24, 0x6A, 0x15, 0xF4,
+0x4C, 0x9A, 0x00, 0x6B, 0x60, 0xC2, 0x10, 0xF0,
+0x24, 0x6A, 0x15, 0xF4, 0x7C, 0x9A, 0x10, 0xF0,
+0x24, 0x6A, 0xD5, 0xF0, 0x50, 0x9A, 0x60, 0xDA,
 0xF0, 0x17, 0x30, 0xF0, 0x20, 0x6A, 0xCC, 0xF1,
 0x57, 0xA2, 0x02, 0x72, 0x16, 0x61, 0x20, 0xF0,
 0x45, 0xA0, 0x03, 0x6B, 0x52, 0x32, 0x6C, 0xEA,
-0x10, 0x22, 0x10, 0xF0, 0x24, 0x6A, 0xD5, 0xF4,
-0x48, 0x9A, 0x00, 0x6B, 0x60, 0xC2, 0x10, 0xF0,
-0x24, 0x6A, 0xD5, 0xF4, 0x7C, 0x9A, 0x10, 0xF0,
-0x24, 0x6A, 0x95, 0xF1, 0x4C, 0x9A, 0x60, 0xDA,
+0x10, 0x22, 0x10, 0xF0, 0x24, 0x6A, 0x15, 0xF4,
+0x4C, 0x9A, 0x00, 0x6B, 0x60, 0xC2, 0x10, 0xF0,
+0x24, 0x6A, 0x35, 0xF4, 0x60, 0x9A, 0x10, 0xF0,
+0x24, 0x6A, 0xD5, 0xF0, 0x50, 0x9A, 0x60, 0xDA,
 0xF0, 0x17, 0x07, 0x93, 0x60, 0x6A, 0x91, 0x67,
 0x6C, 0xEA, 0x56, 0x32, 0x06, 0xD2, 0x80, 0x18,
 0x7D, 0x17, 0x06, 0x92, 0x10, 0x22, 0x06, 0x93,
@@ -12658,8 +12633,8 @@ u8 array_mp_8821c_fw_ap[] = {
 0x0A, 0x91, 0x09, 0x90, 0x06, 0x63, 0x00, 0xEF,
 0xFD, 0x63, 0x05, 0x62, 0xFF, 0x6A, 0x4C, 0xEC,
 0xC0, 0x4C, 0x4C, 0xEC, 0x0F, 0x5C, 0x27, 0x60,
-0x10, 0xF0, 0x24, 0x6A, 0x88, 0x34, 0xF4, 0xF5,
-0x08, 0x4A, 0x89, 0xE2, 0x40, 0x9A, 0x00, 0xEA,
+0x10, 0xF0, 0x24, 0x6A, 0x88, 0x34, 0x34, 0xF5,
+0x0C, 0x4A, 0x89, 0xE2, 0x40, 0x9A, 0x00, 0xEA,
 0x85, 0x67, 0x80, 0x18, 0xCB, 0x13, 0x1B, 0x10,
 0x85, 0x67, 0x80, 0x18, 0x88, 0x13, 0x17, 0x10,
 0x85, 0x67, 0x80, 0x18, 0x27, 0x13, 0x13, 0x10,
@@ -12669,8 +12644,8 @@ u8 array_mp_8821c_fw_ap[] = {
 0x85, 0x67, 0x80, 0x18, 0x1D, 0x11, 0x03, 0x10,
 0x85, 0x67, 0x80, 0x18, 0x8B, 0x11, 0x05, 0x97,
 0x03, 0x63, 0x00, 0xEF, 0x10, 0xF0, 0x24, 0x6A,
-0xFF, 0x6B, 0x8C, 0xEB, 0x54, 0xF7, 0x80, 0x9A,
-0xFE, 0x63, 0x54, 0xF7, 0x00, 0x4A, 0x00, 0xD4,
+0xFF, 0x6B, 0x8C, 0xEB, 0x94, 0xF6, 0x84, 0x9A,
+0xFE, 0x63, 0x94, 0xF6, 0x04, 0x4A, 0x00, 0xD4,
 0x81, 0x9A, 0x44, 0xAA, 0x00, 0xF0, 0x0A, 0x05,
 0x01, 0xD4, 0x9D, 0x67, 0x44, 0xCC, 0x40, 0xA4,
 0x43, 0xEB, 0x05, 0x61, 0x01, 0x4B, 0x4B, 0xE3,
@@ -12711,7 +12686,7 @@ u8 array_mp_8821c_fw_ap[] = {
 0x02, 0xCA, 0x03, 0x10, 0x01, 0x6B, 0x6B, 0xEB,
 0x62, 0xCA, 0x01, 0x91, 0x00, 0x90, 0x01, 0x63,
 0x20, 0xE8, 0x00, 0x65, 0x10, 0xF0, 0x24, 0x6A,
-0xF5, 0xF4, 0xA0, 0x9A, 0x30, 0xF0, 0x20, 0x6A,
+0x35, 0xF4, 0xA4, 0x9A, 0x30, 0xF0, 0x20, 0x6A,
 0xC0, 0xF1, 0x08, 0x4A, 0x80, 0xA5, 0xE5, 0xF2,
 0xDB, 0xA2, 0x10, 0x6B, 0x8C, 0xEB, 0x02, 0x6C,
 0x8B, 0xEC, 0x72, 0x33, 0xCC, 0xEC, 0x6D, 0xEC,
@@ -12813,7 +12788,7 @@ u8 array_mp_8821c_fw_ap[] = {
 0x4D, 0xE3, 0x65, 0xAB, 0x65, 0xF4, 0x40, 0x9A,
 0x07, 0xD3, 0x02, 0x6B, 0x6C, 0xEA, 0x09, 0x22,
 0x07, 0x95, 0x04, 0x96, 0x10, 0xF0, 0x24, 0x6C,
-0xF6, 0xF3, 0x10, 0x4C, 0xF0, 0x67, 0x80, 0x18,
+0x36, 0xF3, 0x10, 0x4C, 0xF0, 0x67, 0x80, 0x18,
 0xFE, 0x11, 0x04, 0x92, 0x43, 0xE8, 0x17, 0x61,
 0x06, 0x94, 0x43, 0xE0, 0xFF, 0xF7, 0x1F, 0x6A,
 0x20, 0xF0, 0x64, 0xA4, 0x4C, 0xE8, 0x0F, 0x6C,
@@ -12838,7 +12813,7 @@ u8 array_mp_8821c_fw_ap[] = {
 0x8C, 0xEB, 0x10, 0x23, 0x06, 0x93, 0x49, 0xE0,
 0x45, 0xF4, 0xF2, 0xA2, 0x20, 0xF0, 0xA4, 0xA3,
 0x10, 0xF0, 0x24, 0x6C, 0x0F, 0x6B, 0xAE, 0x35,
-0x16, 0xF4, 0x08, 0x4C, 0x6C, 0xED, 0xD0, 0x67,
+0x56, 0xF3, 0x08, 0x4C, 0x6C, 0xED, 0xD0, 0x67,
 0x80, 0x18, 0xFE, 0x11, 0x30, 0xF0, 0x20, 0x6A,
 0xC0, 0xF1, 0x08, 0x4A, 0x41, 0xE0, 0x45, 0xF4,
 0x52, 0xA0, 0xFF, 0xF7, 0x1F, 0x6B, 0x49, 0xE1,
@@ -12850,7 +12825,7 @@ u8 array_mp_8821c_fw_ap[] = {
 0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A,
 0x65, 0xF4, 0x60, 0x9A, 0x02, 0x6C, 0x8C, 0xEB,
 0x0D, 0x23, 0x05, 0x93, 0x10, 0xF0, 0x24, 0x6C,
-0x36, 0xF4, 0x00, 0x4C, 0xC2, 0xF5, 0x10, 0x4B,
+0x76, 0xF3, 0x00, 0x4C, 0xC2, 0xF5, 0x10, 0x4B,
 0x64, 0x33, 0x49, 0xE3, 0xA5, 0xAA, 0xD1, 0x67,
 0x80, 0x18, 0xFE, 0x11, 0x07, 0x92, 0x11, 0x67,
 0x0B, 0x5A, 0x10, 0x61, 0x15, 0x59, 0x01, 0x6A,
@@ -12861,7 +12836,7 @@ u8 array_mp_8821c_fw_ap[] = {
 0x28, 0x68, 0x03, 0x59, 0x00, 0x69, 0x02, 0x60,
 0x04, 0x92, 0x4A, 0x31, 0x30, 0xF0, 0x20, 0x6A,
 0x25, 0xF6, 0x48, 0x9A, 0x02, 0x6B, 0x6C, 0xEA,
-0x08, 0x22, 0x10, 0xF0, 0x24, 0x6C, 0x36, 0xF4,
+0x08, 0x22, 0x10, 0xF0, 0x24, 0x6C, 0x76, 0xF3,
 0x10, 0x4C, 0xB1, 0x67, 0xD0, 0x67, 0x80, 0x18,
 0xFE, 0x11, 0x10, 0x92, 0x20, 0xCA, 0x0F, 0x93,
 0x00, 0xCB, 0x0B, 0x97, 0x0A, 0x91, 0x09, 0x90,
@@ -12879,7 +12854,7 @@ u8 array_mp_8821c_fw_ap[] = {
 0xA0, 0xF0, 0x06, 0x23, 0x30, 0xF0, 0x20, 0x6A,
 0x25, 0xF6, 0x48, 0x9A, 0x02, 0x6B, 0x6C, 0xEA,
 0x09, 0x22, 0x05, 0x95, 0x04, 0x96, 0x10, 0xF0,
-0x24, 0x6C, 0x56, 0xF4, 0x08, 0x4C, 0xF1, 0x67,
+0x24, 0x6C, 0x96, 0xF3, 0x08, 0x4C, 0xF1, 0x67,
 0x80, 0x18, 0xFE, 0x11, 0x05, 0x93, 0x01, 0x73,
 0x03, 0x60, 0x05, 0x6B, 0x01, 0x6A, 0x53, 0x10,
 0x04, 0x6B, 0x00, 0x6A, 0x50, 0x10, 0x05, 0x94,
@@ -12916,7 +12891,7 @@ u8 array_mp_8821c_fw_ap[] = {
 0x80, 0xA4, 0x01, 0x68, 0x80, 0xC2, 0x0E, 0x92,
 0x60, 0xC2, 0x30, 0xF0, 0x20, 0x6A, 0x25, 0xF6,
 0x48, 0x9A, 0x02, 0x6B, 0x6C, 0xEA, 0x09, 0x22,
-0x10, 0xF0, 0x24, 0x6C, 0x76, 0xF4, 0x04, 0x4C,
+0x10, 0xF0, 0x24, 0x6C, 0xB6, 0xF3, 0x04, 0x4C,
 0xB0, 0x67, 0x80, 0x18, 0xFE, 0x11, 0x01, 0x10,
 0x00, 0x68, 0x50, 0x67, 0x0B, 0x97, 0x0A, 0x91,
 0x09, 0x90, 0x06, 0x63, 0x00, 0xEF, 0x00, 0x68,
@@ -12933,7 +12908,7 @@ u8 array_mp_8821c_fw_ap[] = {
 0x20, 0x6A, 0x25, 0xF6, 0x48, 0x9A, 0x04, 0xD3,
 0x8C, 0xEB, 0x05, 0xD3, 0x04, 0x6B, 0x6C, 0xEA,
 0x08, 0x22, 0x04, 0x96, 0x10, 0xF0, 0x24, 0x6C,
-0x76, 0xF4, 0x1C, 0x4C, 0xB0, 0x67, 0x80, 0x18,
+0xB6, 0xF3, 0x1C, 0x4C, 0xB0, 0x67, 0x80, 0x18,
 0xFE, 0x11, 0x05, 0x92, 0x23, 0xEA, 0x0B, 0x61,
 0x4E, 0xE9, 0x0A, 0x29, 0x04, 0x94, 0x80, 0x6B,
 0x80, 0x6A, 0x6B, 0xEB, 0x0C, 0xEA, 0x8C, 0xEB,
@@ -12952,10 +12927,10 @@ u8 array_mp_8821c_fw_ap[] = {
 0x02, 0x6E, 0x40, 0xEA, 0x30, 0xF0, 0x20, 0x6B,
 0x25, 0xF6, 0x68, 0x9B, 0x00, 0xF4, 0x00, 0x6A,
 0x6C, 0xEA, 0x13, 0x22, 0x10, 0xF0, 0x24, 0x6C,
-0x96, 0xF4, 0x08, 0x4C, 0x0C, 0x10, 0x30, 0xF0,
+0xD6, 0xF3, 0x08, 0x4C, 0x0C, 0x10, 0x30, 0xF0,
 0x20, 0x6B, 0x25, 0xF6, 0x68, 0x9B, 0x00, 0xF4,
 0x00, 0x6A, 0x6C, 0xEA, 0x06, 0x22, 0x10, 0xF0,
-0x24, 0x6C, 0x96, 0xF4, 0x14, 0x4C, 0x80, 0x18,
+0x24, 0x6C, 0xD6, 0xF3, 0x14, 0x4C, 0x80, 0x18,
 0xFE, 0x11, 0x07, 0x97, 0x06, 0x91, 0x05, 0x90,
 0x04, 0x63, 0x00, 0xEF, 0xFC, 0x63, 0x07, 0x62,
 0x06, 0xD0, 0x00, 0x68, 0x52, 0x6A, 0x58, 0xE8,
@@ -12976,7 +12951,7 @@ u8 array_mp_8821c_fw_ap[] = {
 0x00, 0xF4, 0x00, 0x6B, 0x8C, 0xEB, 0x0F, 0x23,
 0x40, 0xF0, 0xA5, 0xA2, 0x40, 0xF0, 0xC6, 0xA2,
 0x40, 0xF0, 0xE7, 0xA2, 0x40, 0xF0, 0x48, 0xA2,
-0x10, 0xF0, 0x24, 0x6C, 0xB6, 0xF4, 0x00, 0x4C,
+0x10, 0xF0, 0x24, 0x6C, 0xF6, 0xF3, 0x00, 0x4C,
 0x04, 0xD2, 0x80, 0x18, 0xFE, 0x11, 0x01, 0x48,
 0xFF, 0x6A, 0x4C, 0xE8, 0x80, 0x70, 0xAE, 0x61,
 0x07, 0x97, 0x06, 0x90, 0x04, 0x63, 0x00, 0xEF,
@@ -13003,7 +12978,7 @@ u8 array_mp_8821c_fw_ap[] = {
 0x6C, 0xED, 0xFF, 0x6C, 0x7F, 0x6A, 0xEC, 0xEC,
 0xAC, 0xEA, 0x0A, 0xD4, 0x07, 0xD2, 0xCC, 0xEB,
 0x06, 0x94, 0x10, 0xF0, 0x24, 0x6A, 0x0B, 0xD3,
-0xB5, 0xF4, 0x50, 0x9A, 0x80, 0x6B, 0xAC, 0xEB,
+0xF5, 0xF3, 0x54, 0x9A, 0x80, 0x6B, 0xAC, 0xEB,
 0x09, 0xD3, 0x94, 0x33, 0x49, 0xE3, 0x40, 0xA2,
 0x30, 0xF0, 0x20, 0x6A, 0x4E, 0xF5, 0x4C, 0x9A,
 0x07, 0x95, 0x09, 0x96, 0x0A, 0x97, 0x40, 0xEA,
@@ -13024,7 +12999,7 @@ u8 array_mp_8821c_fw_ap[] = {
 0xB1, 0x67, 0x80, 0x18, 0x91, 0x14, 0x0A, 0x93,
 0x06, 0x96, 0x00, 0x6A, 0x82, 0x67, 0xA2, 0x67,
 0xF1, 0x67, 0x05, 0xD2, 0x04, 0xD3, 0x80, 0x18,
-0xF0, 0x16, 0x00, 0x6A, 0x82, 0x67, 0x29, 0x10,
+0xF0, 0x16, 0x00, 0x6C, 0x44, 0x67, 0x29, 0x10,
 0x20, 0xF0, 0x86, 0xA0, 0x40, 0x6A, 0x23, 0xC0,
 0x8D, 0xEA, 0x20, 0xF0, 0x46, 0xC0, 0x0A, 0x95,
 0x06, 0x96, 0x00, 0x6C, 0x04, 0xD5, 0xF1, 0x67,
@@ -13034,28 +13009,28 @@ u8 array_mp_8821c_fw_ap[] = {
 0x20, 0x6B, 0xAF, 0xF3, 0x1C, 0x4B, 0x20, 0xF0,
 0x48, 0xC0, 0x07, 0x94, 0x6D, 0xE4, 0x60, 0xA3,
 0x20, 0xF0, 0x92, 0xA0, 0x63, 0xEC, 0x03, 0x60,
-0x04, 0x4A, 0x20, 0xF0, 0x48, 0xC0, 0x01, 0x6A,
-0x40, 0x6C, 0x0A, 0x95, 0xAC, 0x33, 0x08, 0x95,
+0x04, 0x4A, 0x20, 0xF0, 0x48, 0xC0, 0x40, 0x6C,
+0x01, 0x6A, 0x0A, 0x95, 0xAC, 0x33, 0x08, 0x95,
 0x6D, 0xE5, 0x8D, 0xEB, 0x00, 0xF6, 0x60, 0x33,
 0xFF, 0x6C, 0x00, 0xF6, 0x63, 0x33, 0x8C, 0xEB,
 0x06, 0x94, 0x03, 0x5C, 0x0A, 0x60, 0x10, 0xF0,
-0x24, 0x6C, 0xF5, 0xF4, 0x84, 0x9C, 0x20, 0xC4,
-0x10, 0xF0, 0x24, 0x6C, 0xF5, 0xF4, 0x90, 0x9C,
+0x24, 0x6C, 0x35, 0xF4, 0x88, 0x9C, 0x20, 0xC4,
+0x10, 0xF0, 0x24, 0x6C, 0x35, 0xF4, 0x94, 0x9C,
 0x60, 0xC4, 0x30, 0xF0, 0x20, 0x6C, 0xC5, 0xF4,
 0xA3, 0xA4, 0x04, 0x6C, 0xAC, 0xEC, 0x05, 0x24,
 0x07, 0x94, 0x09, 0x91, 0x8D, 0xE9, 0xFF, 0x6C,
 0x8C, 0xE9, 0x06, 0x95, 0xB4, 0x34, 0x10, 0xF0,
-0x24, 0x6D, 0xB5, 0xF4, 0xB4, 0x9D, 0xB5, 0xE4,
-0x20, 0xC5, 0x10, 0xF0, 0x24, 0x6D, 0xB5, 0xF4,
-0xB0, 0x9D, 0xB5, 0xE4, 0x60, 0xC5, 0x10, 0xF0,
-0x24, 0x6B, 0xF5, 0xF4, 0x74, 0x9B, 0x71, 0xE4,
+0x24, 0x6D, 0xF5, 0xF3, 0xB8, 0x9D, 0xB5, 0xE4,
+0x20, 0xC5, 0x10, 0xF0, 0x24, 0x6D, 0xF5, 0xF3,
+0xB4, 0x9D, 0xB5, 0xE4, 0x60, 0xC5, 0x10, 0xF0,
+0x24, 0x6B, 0x35, 0xF4, 0x78, 0x9B, 0x71, 0xE4,
 0x40, 0xC4, 0x0F, 0x97, 0x0E, 0x91, 0x0D, 0x90,
 0x08, 0x63, 0x00, 0xEF, 0xFB, 0x63, 0x09, 0x62,
 0x08, 0xD1, 0x07, 0xD0, 0xFF, 0x69, 0x8C, 0xE9,
 0x52, 0x68, 0x18, 0xE9, 0x30, 0xF0, 0x20, 0x6A,
 0x60, 0xF2, 0x08, 0x4A, 0x12, 0xE8, 0x01, 0xE2,
 0x84, 0xA0, 0x0F, 0x5C, 0x53, 0x60, 0x10, 0xF0,
-0x24, 0x6A, 0x88, 0x33, 0x34, 0xF6, 0x1C, 0x4A,
+0x24, 0x6A, 0x88, 0x33, 0x94, 0xF5, 0x00, 0x4A,
 0x69, 0xE2, 0x40, 0x9A, 0x00, 0xEA, 0x1B, 0x6A,
 0x2E, 0x10, 0x3D, 0x6A, 0x20, 0xF0, 0x60, 0xA0,
 0x47, 0xC0, 0x08, 0x6A, 0x4B, 0xEA, 0x6C, 0xEA,
@@ -13078,7 +13053,7 @@ u8 array_mp_8821c_fw_ap[] = {
 0x04, 0xD3, 0x09, 0x10, 0x20, 0xF0, 0x60, 0xA0,
 0x08, 0x6A, 0x4B, 0xEA, 0x6C, 0xEA, 0x20, 0xF0,
 0x40, 0xC0, 0x03, 0x6D, 0x04, 0xD5, 0x10, 0xF0,
-0x24, 0x6A, 0xB5, 0xF4, 0x5C, 0x9A, 0x2C, 0x35,
+0x24, 0x6A, 0x15, 0xF4, 0x40, 0x9A, 0x2C, 0x35,
 0x8C, 0x34, 0x55, 0xE5, 0x10, 0xF0, 0x30, 0x6A,
 0xA3, 0xF5, 0x18, 0x4A, 0x91, 0xE2, 0xE5, 0x67,
 0xFD, 0x65, 0x00, 0x6A, 0x05, 0xD5, 0x05, 0x96,
@@ -13090,10 +13065,10 @@ u8 array_mp_8821c_fw_ap[] = {
 0x48, 0x36, 0xF5, 0xE6, 0x60, 0xDD, 0x01, 0x4A,
 0x7F, 0x67, 0x79, 0xE6, 0x02, 0x72, 0x60, 0x9E,
 0x04, 0x4C, 0xE1, 0x61, 0x10, 0xF0, 0x24, 0x6B,
-0xB5, 0xF4, 0x7C, 0x9B, 0x2C, 0x32, 0x91, 0x67,
+0x15, 0xF4, 0x60, 0x9B, 0x2C, 0x32, 0x91, 0x67,
 0x6D, 0xE2, 0xA0, 0x9B, 0x10, 0xF0, 0x24, 0x6B,
-0xD5, 0xF4, 0x60, 0x9B, 0x69, 0xE2, 0xC0, 0x9A,
-0x10, 0xF0, 0x24, 0x6A, 0xB5, 0xF4, 0x54, 0x9A,
+0x15, 0xF4, 0x64, 0x9B, 0x69, 0xE2, 0xC0, 0x9A,
+0x10, 0xF0, 0x24, 0x6A, 0xF5, 0xF3, 0x58, 0x9A,
 0x34, 0x33, 0x49, 0xE3, 0x40, 0xA2, 0xFF, 0x6B,
 0x4C, 0xEB, 0x30, 0xF0, 0x20, 0x6A, 0x6E, 0xF5,
 0x40, 0x9A, 0x05, 0xD3, 0x40, 0xEA, 0x05, 0x96,
@@ -13108,13 +13083,13 @@ u8 array_mp_8821c_fw_ap[] = {
 0x30, 0xF0, 0x20, 0x6A, 0x25, 0xF6, 0x48, 0x9A,
 0x01, 0x6B, 0x6C, 0xEA, 0x09, 0x22, 0xA0, 0xA0,
 0xC1, 0xA0, 0xE2, 0xA0, 0x10, 0xF0, 0x24, 0x6C,
-0xB6, 0xF4, 0x18, 0x4C, 0x80, 0x18, 0xFE, 0x11,
+0xF6, 0xF3, 0x18, 0x4C, 0x80, 0x18, 0xFE, 0x11,
 0x09, 0x97, 0x08, 0x91, 0x07, 0x90, 0x05, 0x63,
 0x00, 0xEF, 0x00, 0x65, 0xFA, 0x63, 0x0B, 0x62,
 0x0A, 0xD1, 0x09, 0xD0, 0x10, 0xF0, 0x24, 0x6A,
-0xF5, 0xF4, 0x58, 0x9A, 0x00, 0x68, 0x60, 0xA2,
+0x35, 0xF4, 0x5C, 0x9A, 0x00, 0x68, 0x60, 0xA2,
 0xFF, 0x6A, 0x83, 0x67, 0x10, 0xF0, 0x24, 0x6B,
-0xF5, 0xF4, 0x60, 0x9B, 0x4C, 0xEC, 0x06, 0xD4,
+0x35, 0xF4, 0x64, 0x9B, 0x4C, 0xEC, 0x06, 0xD4,
 0x60, 0xA3, 0x01, 0x6C, 0x6C, 0xEA, 0x30, 0xF0,
 0x20, 0x6B, 0xC0, 0xF1, 0x08, 0x4B, 0x56, 0x32,
 0x8C, 0xEA, 0xE5, 0xF2, 0xBB, 0xA3, 0x48, 0x34,
@@ -13127,12 +13102,12 @@ u8 array_mp_8821c_fw_ap[] = {
 0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A, 0xE5, 0xF2,
 0xBB, 0xA2, 0xAC, 0xEB, 0x26, 0x23, 0x06, 0x93,
 0x0A, 0xEB, 0x23, 0x61, 0x10, 0xF0, 0x24, 0x6B,
-0xF5, 0xF4, 0x7C, 0x9B, 0x65, 0xF4, 0x40, 0x9A,
+0x55, 0xF4, 0x60, 0x9B, 0x65, 0xF4, 0x40, 0x9A,
 0x60, 0xA3, 0xA3, 0x67, 0x10, 0xF0, 0x24, 0x6B,
-0x15, 0xF5, 0x60, 0x9B, 0x8C, 0xED, 0x04, 0xD5,
+0x55, 0xF4, 0x64, 0x9B, 0x8C, 0xED, 0x04, 0xD5,
 0x60, 0xA3, 0x6C, 0xEC, 0x10, 0x6B, 0x6C, 0xEA,
 0x05, 0xD4, 0x09, 0x22, 0x05, 0x96, 0x04, 0x97,
-0x10, 0xF0, 0x24, 0x6C, 0xD6, 0xF4, 0x10, 0x4C,
+0x10, 0xF0, 0x24, 0x6C, 0x16, 0xF4, 0x10, 0x4C,
 0xB0, 0x67, 0x80, 0x18, 0xFE, 0x11, 0x04, 0x95,
 0x05, 0x97, 0x90, 0x67, 0x00, 0x6E, 0x80, 0x18,
 0x14, 0x17, 0x67, 0x40, 0x30, 0xF0, 0x20, 0x6A,
@@ -13144,7 +13119,7 @@ u8 array_mp_8821c_fw_ap[] = {
 0x20, 0x6A, 0x25, 0xF6, 0x48, 0x9A, 0x10, 0x6B,
 0x6C, 0xEA, 0x0A, 0x22, 0x30, 0xF0, 0x20, 0x6A,
 0x2F, 0xF7, 0xBD, 0xA2, 0x10, 0xF0, 0x24, 0x6C,
-0xF6, 0xF4, 0x0C, 0x4C, 0x80, 0x18, 0xFE, 0x11,
+0x36, 0xF4, 0x0C, 0x4C, 0x80, 0x18, 0xFE, 0x11,
 0x67, 0x40, 0x30, 0xF0, 0x20, 0x6A, 0x39, 0x4B,
 0x6C, 0x33, 0x2F, 0xF5, 0x18, 0x4A, 0x49, 0xE3,
 0x00, 0x6B, 0x65, 0xC2, 0x01, 0x48, 0xFF, 0x6A,
@@ -13164,7 +13139,7 @@ u8 array_mp_8821c_fw_ap[] = {
 0x20, 0x6A, 0x25, 0xF6, 0x48, 0x9A, 0x04, 0x6B,
 0x6C, 0xEA, 0x0C, 0x22, 0x20, 0xF0, 0xC5, 0xA0,
 0x10, 0xF0, 0x24, 0x6C, 0x03, 0x6A, 0xCA, 0x36,
-0xF6, 0xF4, 0x18, 0x4C, 0xB1, 0x67, 0x4C, 0xEE,
+0x36, 0xF4, 0x18, 0x4C, 0xB1, 0x67, 0x4C, 0xEE,
 0x80, 0x18, 0xFE, 0x11, 0x5F, 0xA0, 0x80, 0x6D,
 0xAB, 0xED, 0x4C, 0xED, 0x20, 0xF0, 0xE5, 0xA0,
 0x2D, 0xED, 0x00, 0xF6, 0xA0, 0x35, 0x04, 0x94,
@@ -13177,7 +13152,7 @@ u8 array_mp_8821c_fw_ap[] = {
 0x30, 0xF0, 0x20, 0x6A, 0x60, 0xF2, 0x08, 0x4A,
 0x94, 0x33, 0xEC, 0xED, 0x09, 0xD4, 0x0C, 0xD5,
 0x7F, 0x69, 0x12, 0xE8, 0x01, 0xE2, 0x10, 0xF0,
-0x24, 0x6A, 0xB5, 0xF4, 0x54, 0x9A, 0x49, 0xE3,
+0x24, 0x6A, 0xF5, 0xF3, 0x58, 0x9A, 0x49, 0xE3,
 0x40, 0xA2, 0x7D, 0x67, 0x58, 0xC3, 0x98, 0xA3,
 0x03, 0x6B, 0x1B, 0x65, 0x08, 0xD4, 0xA0, 0xA0,
 0x8C, 0xE9, 0x98, 0x67, 0x0A, 0xD5, 0x20, 0xF0,
@@ -13197,7 +13172,7 @@ u8 array_mp_8821c_fw_ap[] = {
 0x30, 0xF0, 0x20, 0x6A, 0x25, 0xF6, 0x48, 0x9A,
 0x04, 0x6B, 0x6C, 0xEA, 0x0C, 0x22, 0x58, 0x67,
 0x7D, 0x67, 0xCC, 0xEA, 0x08, 0x95, 0xD9, 0xA3,
-0x10, 0xF0, 0x24, 0x6C, 0x16, 0xF5, 0x0C, 0x4C,
+0x10, 0xF0, 0x24, 0x6C, 0x56, 0xF4, 0x0C, 0x4C,
 0x4C, 0xEF, 0x80, 0x18, 0xFE, 0x11, 0x0A, 0x94,
 0x83, 0xE9, 0x79, 0x60, 0x09, 0x94, 0x06, 0x05,
 0x00, 0xF0, 0x19, 0x06, 0x01, 0x6F, 0x80, 0x18,
@@ -13209,7 +13184,7 @@ u8 array_mp_8821c_fw_ap[] = {
 0x8D, 0xED, 0x38, 0xC6, 0x30, 0xF0, 0x20, 0x6A,
 0x20, 0xF0, 0xA5, 0xC0, 0x25, 0xF6, 0x48, 0x9A,
 0x04, 0x6B, 0x6C, 0xEA, 0x07, 0x22, 0xB9, 0xA6,
-0x10, 0xF0, 0x24, 0x6C, 0x36, 0xF5, 0x08, 0x4C,
+0x10, 0xF0, 0x24, 0x6C, 0x76, 0xF4, 0x08, 0x4C,
 0x80, 0x18, 0xFE, 0x11, 0xDD, 0x67, 0x30, 0xF0,
 0x20, 0x6A, 0x6E, 0xF5, 0x4C, 0x9A, 0x09, 0x94,
 0xB8, 0xA6, 0x40, 0xEA, 0xFF, 0x72, 0x08, 0xD2,
@@ -13217,7 +13192,7 @@ u8 array_mp_8821c_fw_ap[] = {
 0x08, 0x93, 0xFF, 0x6A, 0x4C, 0xEB, 0x08, 0xD3,
 0x17, 0x10, 0x30, 0xF0, 0x20, 0x6A, 0x25, 0xF6,
 0x48, 0x9A, 0x04, 0x6B, 0x6C, 0xEA, 0x07, 0x22,
-0x08, 0x95, 0x10, 0xF0, 0x24, 0x6C, 0x36, 0xF5,
+0x08, 0x95, 0x10, 0xF0, 0x24, 0x6C, 0x76, 0xF4,
 0x18, 0x4C, 0x80, 0x18, 0xFE, 0x11, 0x9D, 0x67,
 0xA7, 0x44, 0x19, 0x4D, 0xA0, 0xA5, 0xB8, 0xC4,
 0x5F, 0x10, 0x01, 0x49, 0xFF, 0x6A, 0x4C, 0xE9,
@@ -13228,7 +13203,7 @@ u8 array_mp_8821c_fw_ap[] = {
 0x08, 0x94, 0x8A, 0xE9, 0xEA, 0x61, 0x30, 0xF0,
 0x20, 0x6A, 0x25, 0xF6, 0x48, 0x9A, 0x04, 0x6B,
 0x6C, 0xEA, 0x42, 0x22, 0xDD, 0x67, 0xB8, 0xA6,
-0x10, 0xF0, 0x24, 0x6C, 0x56, 0xF5, 0x08, 0x4C,
+0x10, 0xF0, 0x24, 0x6C, 0x96, 0xF4, 0x08, 0x4C,
 0x80, 0x18, 0xFE, 0x11, 0x39, 0x10, 0x0A, 0x92,
 0x4E, 0xE9, 0x21, 0x29, 0x20, 0xF0, 0x46, 0xA0,
 0x04, 0x6B, 0x6C, 0xEA, 0xE0, 0xF0, 0x0C, 0x22,
@@ -13237,17 +13212,17 @@ u8 array_mp_8821c_fw_ap[] = {
 0x30, 0xF0, 0x20, 0x6A, 0x0A, 0x95, 0x25, 0xF6,
 0x48, 0x9A, 0xDD, 0x67, 0xAD, 0xEC, 0x6C, 0xEA,
 0x98, 0xC6, 0xA0, 0xF0, 0x1F, 0x22, 0xB8, 0xA6,
-0x10, 0xF0, 0x24, 0x6C, 0x56, 0xF5, 0x14, 0x4C,
+0x10, 0xF0, 0x24, 0x6C, 0x96, 0xF4, 0x14, 0x4C,
 0x80, 0x18, 0xFE, 0x11, 0xB7, 0x10, 0x30, 0xF0,
 0x20, 0x6A, 0x25, 0xF6, 0x48, 0x9A, 0x04, 0x6B,
 0x6C, 0xEA, 0x08, 0x22, 0x5D, 0x67, 0xB8, 0xA2,
-0x10, 0xF0, 0x24, 0x6C, 0x76, 0xF5, 0x00, 0x4C,
+0x10, 0xF0, 0x24, 0x6C, 0xB6, 0xF4, 0x00, 0x4C,
 0x80, 0x18, 0xFE, 0x11, 0x7D, 0x67, 0x87, 0x43,
 0x21, 0x4C, 0x80, 0xA4, 0x98, 0xC3, 0x9F, 0xC0,
 0x30, 0xF0, 0x20, 0x6A, 0x25, 0xF6, 0x48, 0x9A,
 0x04, 0x6B, 0x6C, 0xEA, 0x0A, 0x22, 0xDD, 0x67,
 0xB8, 0xA6, 0xE6, 0xA0, 0xC5, 0xA0, 0x10, 0xF0,
-0x24, 0x6C, 0x76, 0xF5, 0x0C, 0x4C, 0x80, 0x18,
+0x24, 0x6C, 0xB6, 0xF4, 0x0C, 0x4C, 0x80, 0x18,
 0xFE, 0x11, 0x5D, 0x67, 0x09, 0x94, 0xB8, 0xA2,
 0x80, 0x18, 0x7A, 0x16, 0x7D, 0x67, 0x58, 0xC3,
 0x09, 0x94, 0xA5, 0xA0, 0x80, 0x18, 0x7A, 0x16,
@@ -13255,7 +13230,7 @@ u8 array_mp_8821c_fw_ap[] = {
 0x7A, 0x16, 0x46, 0xC0, 0x30, 0xF0, 0x20, 0x6A,
 0x25, 0xF6, 0x48, 0x9A, 0x04, 0x6B, 0x6C, 0xEA,
 0x0A, 0x22, 0xDD, 0x67, 0xB8, 0xA6, 0xE6, 0xA0,
-0xC5, 0xA0, 0x10, 0xF0, 0x24, 0x6C, 0x76, 0xF5,
+0xC5, 0xA0, 0x10, 0xF0, 0x24, 0x6C, 0xB6, 0xF4,
 0x1C, 0x4C, 0x80, 0x18, 0xFE, 0x11, 0x46, 0xA0,
 0xFF, 0x6B, 0x85, 0xA0, 0x4E, 0xEB, 0x01, 0x5B,
 0x78, 0x67, 0xFF, 0x74, 0x05, 0x61, 0x45, 0xC0,
@@ -13276,14 +13251,14 @@ u8 array_mp_8821c_fw_ap[] = {
 0x6C, 0xEA, 0x20, 0xF0, 0x46, 0xC0, 0x30, 0xF0,
 0x20, 0x6A, 0x25, 0xF6, 0x48, 0x9A, 0x04, 0x6B,
 0x6C, 0xEA, 0x06, 0x22, 0x10, 0xF0, 0x24, 0x6C,
-0x96, 0xF5, 0x0C, 0x4C, 0x80, 0x18, 0xFE, 0x11,
+0xD6, 0xF4, 0x0C, 0x4C, 0x80, 0x18, 0xFE, 0x11,
 0x20, 0xF0, 0x66, 0xA0, 0x03, 0x6A, 0x20, 0xF0,
 0x85, 0xA0, 0x6C, 0xEA, 0x48, 0x33, 0x0D, 0x6A,
 0x4B, 0xEA, 0x8C, 0xEA, 0x6D, 0xEA, 0x20, 0xF0,
 0x45, 0xC0, 0x2A, 0x10, 0x20, 0xF0, 0x46, 0xA0,
 0xDD, 0x67, 0xB8, 0xA6, 0xE6, 0xA0, 0xC5, 0xA0,
 0x4E, 0x32, 0x03, 0x6B, 0x10, 0xF0, 0x24, 0x6C,
-0x6C, 0xEA, 0x96, 0xF5, 0x18, 0x4C, 0x04, 0xD2,
+0x6C, 0xEA, 0xD6, 0xF4, 0x18, 0x4C, 0x04, 0xD2,
 0x80, 0x18, 0xFE, 0x11, 0x0C, 0x92, 0x01, 0x6E,
 0x01, 0x72, 0x08, 0x61, 0x20, 0xF0, 0x66, 0xA0,
 0x19, 0x6A, 0x4B, 0xEA, 0x6C, 0xEA, 0x20, 0xF0,
@@ -13298,7 +13273,7 @@ u8 array_mp_8821c_fw_ap[] = {
 0x60, 0xF2, 0x08, 0x4A, 0x94, 0x33, 0xEC, 0xED,
 0xEC, 0xEE, 0x08, 0xD4, 0x0C, 0xD6, 0x07, 0xD5,
 0x7F, 0x69, 0x12, 0xE8, 0x01, 0xE2, 0x10, 0xF0,
-0x24, 0x6A, 0xB5, 0xF4, 0x54, 0x9A, 0x49, 0xE3,
+0x24, 0x6A, 0xF5, 0xF3, 0x58, 0x9A, 0x49, 0xE3,
 0x40, 0xA2, 0x7D, 0x67, 0x50, 0xC3, 0x40, 0xA0,
 0xD0, 0xA3, 0x06, 0xD2, 0x61, 0xA0, 0xFE, 0x65,
 0xCC, 0xE9, 0x0A, 0xD3, 0x20, 0xF0, 0xC5, 0xA0,
@@ -13317,7 +13292,7 @@ u8 array_mp_8821c_fw_ap[] = {
 0x20, 0xF0, 0x66, 0xC0, 0x30, 0xF0, 0x20, 0x6B,
 0x25, 0xF6, 0x68, 0x9B, 0x08, 0x6C, 0x8C, 0xEB,
 0x0C, 0x23, 0x0B, 0x93, 0x10, 0xF0, 0x24, 0x6C,
-0xB6, 0xF5, 0x14, 0x4C, 0x6C, 0xEA, 0x7D, 0x67,
+0xF6, 0xF4, 0x14, 0x4C, 0x6C, 0xEA, 0x7D, 0x67,
 0xD1, 0xA3, 0xBF, 0x67, 0x4C, 0xEF, 0x80, 0x18,
 0xFE, 0x11, 0x06, 0x96, 0x23, 0xEE, 0x02, 0x60,
 0x5D, 0x67, 0xD0, 0xC2, 0x07, 0x92, 0x00, 0x6E,
@@ -13347,7 +13322,7 @@ u8 array_mp_8821c_fw_ap[] = {
 0x46, 0xC0, 0x06, 0xD3, 0x30, 0xF0, 0x20, 0x6A,
 0x25, 0xF6, 0x48, 0x9A, 0x08, 0x6B, 0x6C, 0xEA,
 0x09, 0x22, 0xDD, 0x67, 0xB0, 0xA6, 0xD1, 0xA6,
-0x10, 0xF0, 0x24, 0x6C, 0xD6, 0xF5, 0x10, 0x4C,
+0x10, 0xF0, 0x24, 0x6C, 0x16, 0xF5, 0x10, 0x4C,
 0x80, 0x18, 0xFE, 0x11, 0x20, 0xF0, 0x63, 0xA0,
 0x0F, 0x6A, 0x6C, 0xEA, 0x20, 0x6B, 0x6D, 0xEA,
 0x20, 0xF0, 0x43, 0xC0, 0x5D, 0x67, 0xF1, 0xA2,
@@ -13362,15 +13337,15 @@ u8 array_mp_8821c_fw_ap[] = {
 0x8C, 0xEB, 0x4C, 0xEB, 0x0D, 0x23, 0x30, 0xF0,
 0x20, 0x6A, 0x25, 0xF6, 0x48, 0x9A, 0x02, 0x6B,
 0x6C, 0xEA, 0x20, 0xF2, 0x11, 0x22, 0x10, 0xF0,
-0x24, 0x6C, 0xF6, 0xF5, 0x00, 0x4C, 0x2A, 0x12,
-0x09, 0x95, 0x10, 0xF0, 0x24, 0x6C, 0xB5, 0xF4,
-0x94, 0x9C, 0xB4, 0x33, 0x7F, 0x6E, 0x91, 0xE3,
+0x24, 0x6C, 0x36, 0xF5, 0x00, 0x4C, 0x2A, 0x12,
+0x09, 0x95, 0x10, 0xF0, 0x24, 0x6C, 0xF5, 0xF3,
+0x98, 0x9C, 0xB4, 0x33, 0x7F, 0x6E, 0x91, 0xE3,
 0x20, 0xA4, 0x80, 0x6C, 0x4C, 0xE9, 0x2C, 0xEE,
 0x2C, 0xEC, 0x0A, 0xD6, 0x0E, 0xD4, 0x20, 0xF0,
 0x85, 0xA0, 0x40, 0xF0, 0x24, 0xC0, 0x0A, 0x95,
 0x8A, 0x34, 0x0C, 0xD4, 0x0C, 0x96, 0x03, 0x6C,
-0x8C, 0xEE, 0x10, 0xF0, 0x24, 0x6C, 0xB5, 0xF4,
-0x90, 0x9C, 0x4C, 0xEE, 0x0C, 0xD6, 0x8D, 0xE3,
+0x8C, 0xEE, 0x10, 0xF0, 0x24, 0x6C, 0xF5, 0xF3,
+0x94, 0x9C, 0x4C, 0xEE, 0x0C, 0xD6, 0x8D, 0xE3,
 0x60, 0xA3, 0x83, 0x67, 0x4C, 0xEC, 0x0F, 0xD4,
 0x60, 0xA0, 0xA3, 0xEB, 0x08, 0x60, 0x0E, 0x96,
 0x0A, 0xD3, 0x23, 0x67, 0x04, 0x26, 0x80, 0x69,
@@ -13381,7 +13356,7 @@ u8 array_mp_8821c_fw_ap[] = {
 0x23, 0xF0, 0x14, 0x4B, 0x64, 0x33, 0x4D, 0xE3,
 0x60, 0xAB, 0x03, 0x5B, 0x0B, 0x61, 0x65, 0xF4,
 0x40, 0x9A, 0x02, 0x6B, 0x6C, 0xEA, 0x06, 0x22,
-0x10, 0xF0, 0x24, 0x6C, 0xF6, 0xF5, 0x0C, 0x4C,
+0x10, 0xF0, 0x24, 0x6C, 0x36, 0xF5, 0x0C, 0x4C,
 0x80, 0x18, 0xFE, 0x11, 0x30, 0xF0, 0x20, 0x6A,
 0x08, 0xD2, 0x09, 0x92, 0x08, 0x93, 0x30, 0xF0,
 0x20, 0x6E, 0xA2, 0xF7, 0x14, 0x4A, 0xC0, 0xF1,
@@ -13397,7 +13372,7 @@ u8 array_mp_8821c_fw_ap[] = {
 0x0B, 0xD2, 0x02, 0x6B, 0x96, 0xC8, 0x08, 0x95,
 0x65, 0xF4, 0x40, 0x9D, 0x6C, 0xEA, 0x08, 0x22,
 0x0D, 0x95, 0x0B, 0x96, 0x10, 0xF0, 0x24, 0x6C,
-0xF6, 0xF5, 0x14, 0x4C, 0x80, 0x18, 0xFE, 0x11,
+0x36, 0xF5, 0x14, 0x4C, 0x80, 0x18, 0xFE, 0x11,
 0x30, 0xF0, 0x20, 0x6C, 0xC0, 0xF1, 0x08, 0x4C,
 0x65, 0xF4, 0x40, 0x9C, 0x02, 0x6B, 0x6C, 0xEA,
 0x18, 0x22, 0x09, 0x92, 0x09, 0x96, 0x09, 0x93,
@@ -13405,11 +13380,11 @@ u8 array_mp_8821c_fw_ap[] = {
 0x23, 0xF0, 0x14, 0x4B, 0x44, 0x32, 0xC4, 0x36,
 0x64, 0x33, 0x89, 0xE2, 0x99, 0xE6, 0x8D, 0xE3,
 0xA0, 0xAA, 0xC0, 0xAE, 0xE0, 0xAB, 0x10, 0xF0,
-0x24, 0x6C, 0x16, 0xF6, 0x04, 0x4C, 0x80, 0x18,
+0x24, 0x6C, 0x56, 0xF5, 0x04, 0x4C, 0x80, 0x18,
 0xFE, 0x11, 0x30, 0xF0, 0x20, 0x6A, 0x25, 0xF6,
 0x48, 0x9A, 0x02, 0x6B, 0x6C, 0xEA, 0x0C, 0x22,
 0x0F, 0x96, 0x18, 0x6D, 0x10, 0xF0, 0x24, 0x6C,
-0xCC, 0xED, 0x0C, 0x96, 0x16, 0xF6, 0x14, 0x4C,
+0xCC, 0xED, 0x0C, 0x96, 0x56, 0xF5, 0x14, 0x4C,
 0xAE, 0x35, 0xF1, 0x67, 0x80, 0x18, 0xFE, 0x11,
 0x09, 0x94, 0x0D, 0x95, 0x0A, 0x96, 0x00, 0xF0,
 0x1A, 0x02, 0x06, 0x07, 0x04, 0xD2, 0x80, 0x18,
@@ -13428,11 +13403,11 @@ u8 array_mp_8821c_fw_ap[] = {
 0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A,
 0x65, 0xF4, 0x60, 0x9A, 0x02, 0x6C, 0x8C, 0xEB,
 0x0C, 0x23, 0x0A, 0x96, 0x10, 0xF0, 0x24, 0x6C,
-0x36, 0xF6, 0x0C, 0x4C, 0x49, 0xE6, 0x45, 0xF2,
+0x76, 0xF5, 0x0C, 0x4C, 0x49, 0xE6, 0x45, 0xF2,
 0xA8, 0xA2, 0x85, 0xF2, 0xDC, 0xA2, 0x80, 0x18,
 0xFE, 0x11, 0x30, 0xF0, 0x20, 0x6A, 0x25, 0xF6,
 0x48, 0x9A, 0x02, 0x6B, 0x6C, 0xEA, 0x08, 0x22,
-0x08, 0x95, 0x10, 0xF0, 0x24, 0x6C, 0x36, 0xF6,
+0x08, 0x95, 0x10, 0xF0, 0x24, 0x6C, 0x76, 0xF5,
 0x1C, 0x4C, 0xD1, 0x67, 0x80, 0x18, 0xFE, 0x11,
 0x40, 0xF0, 0x40, 0xA0, 0x3F, 0x6B, 0x6C, 0xEA,
 0x40, 0xF0, 0x60, 0x80, 0x00, 0x53, 0x13, 0x60,
@@ -13450,18 +13425,18 @@ u8 array_mp_8821c_fw_ap[] = {
 0xFF, 0x69, 0x4C, 0xE9, 0x30, 0xF0, 0x20, 0x6A,
 0x25, 0xF6, 0x48, 0x9A, 0x02, 0x6B, 0x6C, 0xEA,
 0x08, 0x22, 0x0A, 0x96, 0x10, 0xF0, 0x24, 0x6C,
-0x56, 0xF6, 0x0C, 0x4C, 0xB1, 0x67, 0x80, 0x18,
+0x96, 0xF5, 0x0C, 0x4C, 0xB1, 0x67, 0x80, 0x18,
 0xFE, 0x11, 0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1,
 0x08, 0x4A, 0xE5, 0xF2, 0x9B, 0xA2, 0x04, 0x6B,
 0x8C, 0xEB, 0x0B, 0x23, 0x65, 0xF4, 0x40, 0x9A,
 0x02, 0x6B, 0x6C, 0xEA, 0xA0, 0xF0, 0x1C, 0x22,
-0x10, 0xF0, 0x24, 0x6C, 0x56, 0xF6, 0x1C, 0x4C,
+0x10, 0xF0, 0x24, 0x6C, 0x96, 0xF5, 0x1C, 0x4C,
 0xB5, 0x10, 0x0D, 0x95, 0x0A, 0x96, 0xC3, 0xED,
 0x03, 0x60, 0x0B, 0x93, 0x1E, 0x5B, 0x59, 0x61,
 0x0B, 0x94, 0x50, 0x5C, 0x1D, 0x61, 0x30, 0xF0,
 0x20, 0x6A, 0x25, 0xF6, 0x48, 0x9A, 0x02, 0x6B,
 0x6C, 0xEA, 0x06, 0x22, 0x10, 0xF0, 0x24, 0x6C,
-0x76, 0xF6, 0x08, 0x4C, 0x80, 0x18, 0xFE, 0x11,
+0xB6, 0xF5, 0x08, 0x4C, 0x80, 0x18, 0xFE, 0x11,
 0x09, 0x94, 0x01, 0x6D, 0xC5, 0x67, 0x80, 0x18,
 0x61, 0x19, 0x20, 0xF0, 0x60, 0xA0, 0x39, 0x6A,
 0x4B, 0xEA, 0x6C, 0xEA, 0x20, 0xF0, 0x40, 0xC0,
@@ -13472,23 +13447,23 @@ u8 array_mp_8821c_fw_ap[] = {
 0x20, 0xF0, 0x60, 0xC0, 0x30, 0xF0, 0x20, 0x6B,
 0x25, 0xF6, 0x68, 0x9B, 0x02, 0x6C, 0x8C, 0xEB,
 0x0A, 0x23, 0x20, 0xF0, 0xA0, 0xA0, 0x10, 0xF0,
-0x24, 0x6C, 0x76, 0xF6, 0x14, 0x4C, 0xAE, 0x35,
+0x24, 0x6C, 0xB6, 0xF5, 0x14, 0x4C, 0xAE, 0x35,
 0x4C, 0xED, 0x80, 0x18, 0xFE, 0x11, 0x20, 0xF0,
 0x40, 0xA0, 0x07, 0x6B, 0x4E, 0x32, 0x6C, 0xEA,
 0x02, 0x52, 0x6A, 0x61, 0x30, 0xF0, 0x20, 0x6A,
 0x25, 0xF6, 0x48, 0x9A, 0x02, 0x6B, 0x6C, 0xEA,
-0x06, 0x22, 0x10, 0xF0, 0x24, 0x6C, 0x96, 0xF6,
+0x06, 0x22, 0x10, 0xF0, 0x24, 0x6C, 0xD6, 0xF5,
 0x04, 0x4C, 0x80, 0x18, 0xFE, 0x11, 0x09, 0x94,
 0x01, 0x6D, 0x00, 0x6E, 0x80, 0x18, 0x61, 0x19,
 0x2A, 0x10, 0x0D, 0x95, 0x23, 0xED, 0x32, 0x60,
 0x20, 0xF0, 0x61, 0xA0, 0x01, 0x4B, 0x20, 0xF0,
 0x61, 0xC0, 0x65, 0xF4, 0x40, 0x9A, 0x02, 0x6B,
 0x6C, 0xEA, 0x08, 0x22, 0x20, 0xF0, 0xA1, 0xA0,
-0x10, 0xF0, 0x24, 0x6C, 0x96, 0xF6, 0x10, 0x4C,
+0x10, 0xF0, 0x24, 0x6C, 0xD6, 0xF5, 0x10, 0x4C,
 0x80, 0x18, 0xFE, 0x11, 0x20, 0xF0, 0x41, 0xA0,
 0x03, 0x5A, 0x3E, 0x61, 0x30, 0xF0, 0x20, 0x6A,
 0x25, 0xF6, 0x48, 0x9A, 0x02, 0x6B, 0x6C, 0xEA,
-0x06, 0x22, 0x10, 0xF0, 0x24, 0x6C, 0x96, 0xF6,
+0x06, 0x22, 0x10, 0xF0, 0x24, 0x6C, 0xD6, 0xF5,
 0x1C, 0x4C, 0x80, 0x18, 0xFE, 0x11, 0x09, 0x94,
 0x00, 0x6D, 0x80, 0x18, 0x70, 0x18, 0x00, 0x6A,
 0x20, 0xF0, 0x60, 0xA0, 0x20, 0xF0, 0x41, 0xC0,
@@ -13501,24 +13476,24 @@ u8 array_mp_8821c_fw_ap[] = {
 0x8D, 0xEA, 0x20, 0xF0, 0x40, 0xC0, 0x30, 0xF0,
 0x20, 0x6A, 0x25, 0xF6, 0x48, 0x9A, 0x02, 0x6B,
 0x6C, 0xEA, 0x06, 0x22, 0x10, 0xF0, 0x24, 0x6C,
-0xB6, 0xF6, 0x04, 0x4C, 0x80, 0x18, 0xFE, 0x11,
+0xF6, 0xF5, 0x04, 0x4C, 0x80, 0x18, 0xFE, 0x11,
 0x09, 0x94, 0x80, 0x18, 0x02, 0x1D, 0x13, 0x97,
 0x12, 0x91, 0x11, 0x90, 0x0A, 0x63, 0x00, 0xEF,
 0xFB, 0x63, 0x09, 0x62, 0x08, 0xD1, 0x07, 0xD0,
 0xFF, 0x6A, 0x4C, 0xEC, 0x52, 0x68, 0x18, 0xEC,
 0x30, 0xF0, 0x20, 0x6B, 0x60, 0xF2, 0x08, 0x4B,
 0x04, 0xD4, 0x4C, 0xED, 0x12, 0xE8, 0x01, 0xE3,
-0x94, 0x33, 0x10, 0xF0, 0x24, 0x6C, 0xB5, 0xF4,
-0x94, 0x9C, 0x91, 0xE3, 0x80, 0xA4, 0xC4, 0x67,
-0x10, 0xF0, 0x24, 0x6C, 0x4C, 0xEE, 0xB5, 0xF4,
-0x90, 0x9C, 0x05, 0xD6, 0x20, 0xF0, 0xC6, 0xA0,
+0x94, 0x33, 0x10, 0xF0, 0x24, 0x6C, 0xF5, 0xF3,
+0x98, 0x9C, 0x91, 0xE3, 0x80, 0xA4, 0xC4, 0x67,
+0x10, 0xF0, 0x24, 0x6C, 0x4C, 0xEE, 0xF5, 0xF3,
+0x94, 0x9C, 0x05, 0xD6, 0x20, 0xF0, 0xC6, 0xA0,
 0x8D, 0xE3, 0x80, 0xA3, 0x40, 0x6B, 0xCC, 0xEB,
 0x4C, 0xEB, 0x4C, 0xEC, 0xA0, 0xF0, 0x01, 0x23,
 0x18, 0x69, 0x8C, 0xE9, 0x2F, 0x31, 0x01, 0x75,
 0x4C, 0xE9, 0x23, 0x61, 0x30, 0xF0, 0x20, 0x6B,
 0x25, 0xF6, 0x68, 0x9B, 0x00, 0xF1, 0x01, 0x4A,
 0x6C, 0xEA, 0x06, 0x22, 0x10, 0xF0, 0x24, 0x6C,
-0xB6, 0xF6, 0x10, 0x4C, 0x80, 0x18, 0xFE, 0x11,
+0xF6, 0xF5, 0x10, 0x4C, 0x80, 0x18, 0xFE, 0x11,
 0x20, 0xF0, 0x63, 0xA0, 0x10, 0x6A, 0x4B, 0xEA,
 0x6C, 0xEA, 0x20, 0xF0, 0x43, 0xC0, 0x04, 0x94,
 0x05, 0x95, 0x00, 0x6E, 0xF1, 0x67, 0x80, 0x18,
@@ -13526,7 +13501,7 @@ u8 array_mp_8821c_fw_ap[] = {
 0x4B, 0xEA, 0x6C, 0xEA, 0x20, 0xF0, 0x46, 0xC0,
 0x78, 0x10, 0x30, 0xF0, 0x20, 0x6B, 0x25, 0xF6,
 0x68, 0x9B, 0x00, 0xF2, 0x00, 0x6A, 0x6C, 0xEA,
-0x06, 0x22, 0x10, 0xF0, 0x24, 0x6C, 0xB6, 0xF6,
+0x06, 0x22, 0x10, 0xF0, 0x24, 0x6C, 0xF6, 0xF5,
 0x1C, 0x4C, 0x80, 0x18, 0xFE, 0x11, 0x20, 0xF0,
 0x83, 0xA0, 0x0F, 0x6A, 0x20, 0xF0, 0xA6, 0xA0,
 0x64, 0x67, 0x4C, 0xEB, 0x01, 0x4B, 0x4C, 0xEB,
@@ -13535,7 +13510,7 @@ u8 array_mp_8821c_fw_ap[] = {
 0x43, 0x45, 0x6C, 0xEA, 0x02, 0x5A, 0x52, 0x60,
 0x30, 0xF0, 0x20, 0x6B, 0x25, 0xF6, 0x68, 0x9B,
 0x00, 0xF2, 0x00, 0x6A, 0x6C, 0xEA, 0x08, 0x22,
-0x10, 0xF0, 0x24, 0x6C, 0xFF, 0x6A, 0xD6, 0xF6,
+0x10, 0xF0, 0x24, 0x6C, 0xFF, 0x6A, 0x16, 0xF6,
 0x04, 0x4C, 0x4C, 0xED, 0x80, 0x18, 0xFE, 0x11,
 0x20, 0xF0, 0xA6, 0xA0, 0x03, 0x6C, 0xFF, 0x6E,
 0xAE, 0x32, 0x8C, 0xEA, 0x6F, 0x42, 0xCC, 0xEB,
@@ -13550,7 +13525,7 @@ u8 array_mp_8821c_fw_ap[] = {
 0x8D, 0xEA, 0x20, 0xF0, 0x45, 0xC0, 0x30, 0xF0,
 0x20, 0x6B, 0x25, 0xF6, 0x68, 0x9B, 0x00, 0xF2,
 0x00, 0x6A, 0x6C, 0xEA, 0x08, 0x22, 0x05, 0x96,
-0x10, 0xF0, 0x24, 0x6C, 0xD6, 0xF6, 0x10, 0x4C,
+0x10, 0xF0, 0x24, 0x6C, 0x16, 0xF6, 0x10, 0x4C,
 0xB1, 0x67, 0x80, 0x18, 0xFE, 0x11, 0x04, 0x94,
 0x05, 0x95, 0x01, 0x6E, 0xF1, 0x67, 0x80, 0x18,
 0x14, 0x17, 0x03, 0x10, 0x04, 0x94, 0x80, 0x18,
@@ -13561,16 +13536,16 @@ u8 array_mp_8821c_fw_ap[] = {
 0x20, 0x6B, 0x60, 0xF2, 0x08, 0x4B, 0x7F, 0x6E,
 0x12, 0xE8, 0x01, 0xE3, 0x76, 0xA8, 0x83, 0x67,
 0x4C, 0xEC, 0x0D, 0xD4, 0x10, 0xF0, 0x24, 0x6C,
-0xB5, 0xF4, 0x94, 0x9C, 0x34, 0x33, 0x91, 0xE3,
+0xF5, 0xF3, 0x98, 0x9C, 0x34, 0x33, 0x91, 0xE3,
 0x80, 0xA4, 0x8C, 0xEA, 0x09, 0xD2, 0xCC, 0xEA,
-0x08, 0xD2, 0x10, 0xF0, 0x24, 0x6A, 0xB5, 0xF4,
-0x50, 0x9A, 0x4D, 0xE3, 0x60, 0xA3, 0x18, 0x6A,
+0x08, 0xD2, 0x10, 0xF0, 0x24, 0x6A, 0xF5, 0xF3,
+0x54, 0x9A, 0x4D, 0xE3, 0x60, 0xA3, 0x18, 0x6A,
 0x6C, 0xEA, 0x4E, 0x32, 0x0C, 0xD2, 0x33, 0xF0,
 0x64, 0x41, 0x30, 0xF0, 0x20, 0x6A, 0x64, 0x33,
 0xC0, 0xF1, 0x08, 0x4A, 0x4D, 0xE3, 0x60, 0xAB,
 0x03, 0x5B, 0x15, 0x61, 0x65, 0xF4, 0x40, 0x9A,
 0x00, 0xF2, 0x00, 0x6B, 0x4C, 0xEB, 0x06, 0x23,
-0x10, 0xF0, 0x24, 0x6C, 0xF6, 0xF5, 0x0C, 0x4C,
+0x10, 0xF0, 0x24, 0x6C, 0x36, 0xF5, 0x0C, 0x4C,
 0x80, 0x18, 0xFE, 0x11, 0x01, 0x6D, 0x91, 0x67,
 0xC5, 0x67, 0x80, 0x18, 0x61, 0x19, 0x91, 0x67,
 0x00, 0x6D, 0x80, 0x18, 0x08, 0x1B, 0x30, 0xF0,
@@ -13588,12 +13563,12 @@ u8 array_mp_8821c_fw_ap[] = {
 0x6C, 0xEA, 0x12, 0x22, 0x07, 0x96, 0x0E, 0x97,
 0xB3, 0xF2, 0x44, 0x41, 0x0F, 0x93, 0x44, 0x32,
 0x89, 0xE2, 0xA0, 0xAE, 0xC0, 0xAF, 0xE0, 0xAA,
-0x40, 0xAB, 0x10, 0xF0, 0x24, 0x6C, 0xD6, 0xF6,
+0x40, 0xAB, 0x10, 0xF0, 0x24, 0x6C, 0x16, 0xF6,
 0x1C, 0x4C, 0x04, 0xD2, 0x80, 0x18, 0xFE, 0x11,
 0x30, 0xF0, 0x20, 0x6B, 0x25, 0xF6, 0x68, 0x9B,
 0x00, 0xF2, 0x00, 0x6A, 0x6C, 0xEA, 0x0B, 0x22,
 0x09, 0x94, 0x0B, 0x95, 0x0A, 0x96, 0x0C, 0x97,
-0x04, 0xD4, 0x10, 0xF0, 0x24, 0x6C, 0xF6, 0xF6,
+0x04, 0xD4, 0x10, 0xF0, 0x24, 0x6C, 0x36, 0xF6,
 0x14, 0x4C, 0x80, 0x18, 0xFE, 0x11, 0x09, 0x96,
 0xDE, 0x32, 0x12, 0x22, 0x08, 0x97, 0x30, 0xF0,
 0x20, 0x6A, 0x0F, 0xF4, 0x10, 0x4A, 0xE4, 0x33,
@@ -13623,16 +13598,16 @@ u8 array_mp_8821c_fw_ap[] = {
 0x12, 0xEB, 0x64, 0xEC, 0x06, 0xD3, 0x30, 0xF0,
 0x20, 0x6B, 0x25, 0xF6, 0x68, 0x9B, 0x6C, 0xEA,
 0x08, 0x22, 0x0D, 0x95, 0x10, 0xF0, 0x24, 0x6C,
-0x16, 0xF7, 0x14, 0x4C, 0xC7, 0x67, 0x80, 0x18,
+0x56, 0xF6, 0x14, 0x4C, 0xC7, 0x67, 0x80, 0x18,
 0xFE, 0x11, 0x30, 0xF0, 0x20, 0x6B, 0x25, 0xF6,
 0x68, 0x9B, 0x00, 0xF2, 0x00, 0x6A, 0x6C, 0xEA,
 0x09, 0x22, 0x40, 0xF0, 0xA4, 0xA0, 0x08, 0x96,
-0x10, 0xF0, 0x24, 0x6C, 0x36, 0xF7, 0x00, 0x4C,
+0x10, 0xF0, 0x24, 0x6C, 0x76, 0xF6, 0x00, 0x4C,
 0x80, 0x18, 0xFE, 0x11, 0x30, 0xF0, 0x20, 0x6B,
 0x25, 0xF6, 0x68, 0x9B, 0x00, 0xF2, 0x00, 0x6A,
 0x6C, 0xEA, 0x0C, 0x22, 0x07, 0x96, 0x06, 0x97,
 0x10, 0xF0, 0x24, 0x6C, 0xC2, 0x35, 0xE2, 0x36,
-0x36, 0xF7, 0x0C, 0x4C, 0xAA, 0x35, 0xCA, 0x36,
+0x76, 0xF6, 0x0C, 0x4C, 0xAA, 0x35, 0xCA, 0x36,
 0x80, 0x18, 0xFE, 0x11, 0x06, 0x92, 0x07, 0x93,
 0x63, 0xEA, 0x03, 0x61, 0x0A, 0x94, 0x1E, 0x5C,
 0x2F, 0x61, 0x20, 0xF0, 0x63, 0xA0, 0x10, 0x6A,
@@ -13640,7 +13615,7 @@ u8 array_mp_8821c_fw_ap[] = {
 0x10, 0x72, 0x4C, 0x61, 0x30, 0xF0, 0x20, 0x6B,
 0x25, 0xF6, 0x68, 0x9B, 0x00, 0xF2, 0x00, 0x6A,
 0x6C, 0xEA, 0x06, 0x22, 0x10, 0xF0, 0x24, 0x6C,
-0x36, 0xF7, 0x18, 0x4C, 0x80, 0x18, 0xFE, 0x11,
+0x76, 0xF6, 0x18, 0x4C, 0x80, 0x18, 0xFE, 0x11,
 0x0A, 0x96, 0x1E, 0x5E, 0x3B, 0x61, 0x30, 0xF0,
 0x20, 0x6A, 0x2E, 0xF5, 0x48, 0x9A, 0x08, 0x94,
 0x40, 0xEA, 0x07, 0x22, 0xFD, 0x67, 0x47, 0x47,
@@ -13649,7 +13624,7 @@ u8 array_mp_8821c_fw_ap[] = {
 0x40, 0xA3, 0x40, 0xF0, 0x45, 0xC0, 0x26, 0x10,
 0x30, 0xF0, 0x20, 0x6B, 0x25, 0xF6, 0x68, 0x9B,
 0x00, 0xF2, 0x00, 0x6A, 0x6C, 0xEA, 0x07, 0x22,
-0x09, 0x95, 0x10, 0xF0, 0x24, 0x6C, 0x56, 0xF7,
+0x09, 0x95, 0x10, 0xF0, 0x24, 0x6C, 0x96, 0xF6,
 0x00, 0x4C, 0x80, 0x18, 0xFE, 0x11, 0x00, 0x6A,
 0x20, 0xF0, 0x63, 0xA0, 0x40, 0xF0, 0x42, 0xC0,
 0x10, 0x6A, 0x4B, 0xEA, 0x6C, 0xEA, 0xFF, 0x6B,
@@ -13672,8 +13647,8 @@ u8 array_mp_8821c_fw_ap[] = {
 0x30, 0xF0, 0x20, 0x6D, 0x60, 0xF2, 0x08, 0x4D,
 0xFF, 0x4B, 0x12, 0xEA, 0x49, 0xE5, 0xFF, 0x6D,
 0xAC, 0xEB, 0x05, 0x5B, 0xE0, 0xF0, 0x13, 0x60,
-0x10, 0xF0, 0x24, 0x6D, 0x68, 0x33, 0x74, 0xF6,
-0x18, 0x4D, 0x75, 0xE5, 0x60, 0x9D, 0x00, 0xEB,
+0x10, 0xF0, 0x24, 0x6D, 0x68, 0x33, 0xB4, 0xF5,
+0x1C, 0x4D, 0x75, 0xE5, 0x60, 0x9D, 0x00, 0xEB,
 0x0C, 0x6B, 0x9D, 0x67, 0x6F, 0xCC, 0xBD, 0x67,
 0x0E, 0x6C, 0x90, 0xC5, 0x72, 0xC5, 0x20, 0xF0,
 0x72, 0xA2, 0x03, 0x6C, 0xDD, 0x67, 0x73, 0xC5,
@@ -13688,19 +13663,19 @@ u8 array_mp_8821c_fw_ap[] = {
 0x70, 0xC5, 0x0D, 0x6B, 0x72, 0xC5, 0x64, 0xA2,
 0x8C, 0x34, 0x73, 0xC5, 0x60, 0xA2, 0x74, 0xC5,
 0x41, 0xA2, 0x55, 0xC5, 0x10, 0xF0, 0x24, 0x6A,
-0xB5, 0xF4, 0x5C, 0x9A, 0x49, 0xE4, 0x40, 0xA2,
-0x56, 0xC5, 0x10, 0xF0, 0x24, 0x6A, 0x15, 0xF5,
-0x44, 0x9A, 0x49, 0xE4, 0x40, 0xA2, 0x57, 0xC5,
-0x10, 0xF0, 0x24, 0x6A, 0x15, 0xF5, 0x48, 0x9A,
+0x15, 0xF4, 0x40, 0x9A, 0x49, 0xE4, 0x40, 0xA2,
+0x56, 0xC5, 0x10, 0xF0, 0x24, 0x6A, 0x55, 0xF4,
+0x48, 0x9A, 0x49, 0xE4, 0x40, 0xA2, 0x57, 0xC5,
+0x10, 0xF0, 0x24, 0x6A, 0x55, 0xF4, 0x4C, 0x9A,
 0x49, 0xE4, 0x40, 0xA2, 0x58, 0xC5, 0x10, 0xF0,
-0x24, 0x6A, 0x15, 0xF5, 0x4C, 0x9A, 0x49, 0xE4,
+0x24, 0x6A, 0x55, 0xF4, 0x50, 0x9A, 0x49, 0xE4,
 0x40, 0xA2, 0x59, 0xC5, 0x10, 0xF0, 0x24, 0x6A,
-0xD5, 0xF4, 0x40, 0x9A, 0x49, 0xE4, 0x40, 0xA2,
-0x5A, 0xC5, 0x10, 0xF0, 0x24, 0x6A, 0x15, 0xF5,
-0x50, 0x9A, 0x49, 0xE4, 0x40, 0xA2, 0x5B, 0xC5,
-0x10, 0xF0, 0x24, 0x6A, 0x15, 0xF5, 0x54, 0x9A,
+0x15, 0xF4, 0x44, 0x9A, 0x49, 0xE4, 0x40, 0xA2,
+0x5A, 0xC5, 0x10, 0xF0, 0x24, 0x6A, 0x55, 0xF4,
+0x54, 0x9A, 0x49, 0xE4, 0x40, 0xA2, 0x5B, 0xC5,
+0x10, 0xF0, 0x24, 0x6A, 0x55, 0xF4, 0x58, 0x9A,
 0x49, 0xE4, 0x40, 0xA2, 0x5C, 0xC5, 0x10, 0xF0,
-0x24, 0x6A, 0x15, 0xF5, 0x58, 0x9A, 0x76, 0x10,
+0x24, 0x6A, 0x55, 0xF4, 0x5C, 0x9A, 0x76, 0x10,
 0xDD, 0x67, 0x0C, 0x6A, 0x4F, 0xCE, 0x0E, 0x6A,
 0x50, 0xC6, 0x52, 0xC6, 0x30, 0xF0, 0x20, 0x6A,
 0xC0, 0xF1, 0x08, 0x4A, 0x45, 0xF4, 0x72, 0xA2,
@@ -13723,14 +13698,14 @@ u8 array_mp_8821c_fw_ap[] = {
 0x76, 0xAA, 0x04, 0x4B, 0x6F, 0x33, 0x75, 0xC5,
 0x60, 0xA2, 0x76, 0xC5, 0x65, 0xA2, 0x77, 0xC5,
 0x46, 0xA2, 0x58, 0xC5, 0x10, 0xF0, 0x24, 0x6A,
-0xB5, 0xF4, 0x5C, 0x9A, 0x49, 0xE4, 0x40, 0xA2,
-0x59, 0xC5, 0x10, 0xF0, 0x24, 0x6A, 0x15, 0xF5,
-0x44, 0x9A, 0x49, 0xE4, 0x40, 0xA2, 0x5A, 0xC5,
-0x10, 0xF0, 0x24, 0x6A, 0x15, 0xF5, 0x48, 0x9A,
+0x15, 0xF4, 0x40, 0x9A, 0x49, 0xE4, 0x40, 0xA2,
+0x59, 0xC5, 0x10, 0xF0, 0x24, 0x6A, 0x55, 0xF4,
+0x48, 0x9A, 0x49, 0xE4, 0x40, 0xA2, 0x5A, 0xC5,
+0x10, 0xF0, 0x24, 0x6A, 0x55, 0xF4, 0x4C, 0x9A,
 0x49, 0xE4, 0x40, 0xA2, 0x5B, 0xC5, 0x10, 0xF0,
-0x24, 0x6A, 0x15, 0xF5, 0x4C, 0x9A, 0x49, 0xE4,
+0x24, 0x6A, 0x55, 0xF4, 0x50, 0x9A, 0x49, 0xE4,
 0x40, 0xA2, 0x5C, 0xC5, 0x10, 0xF0, 0x24, 0x6A,
-0xD5, 0xF4, 0x40, 0x9A, 0x51, 0xE4, 0x40, 0xA4,
+0x15, 0xF4, 0x44, 0x9A, 0x51, 0xE4, 0x40, 0xA4,
 0x5D, 0xC5, 0x04, 0x94, 0x05, 0x95, 0x06, 0x96,
 0x07, 0x97, 0x80, 0x18, 0x6D, 0x08, 0x09, 0x97,
 0x05, 0x63, 0x00, 0xEF, 0x00, 0x6A, 0xB3, 0xF0,
@@ -13775,24 +13750,24 @@ u8 array_mp_8821c_fw_ap[] = {
 0x6D, 0xE2, 0xE0, 0xF0, 0x41, 0xA3, 0x4C, 0xEC,
 0xE0, 0xF0, 0x81, 0xC3, 0x20, 0xE8, 0x00, 0x65,
 0xF4, 0x63, 0x17, 0x62, 0x16, 0xD1, 0x15, 0xD0,
-0x10, 0xF0, 0x24, 0x6B, 0xFF, 0x6A, 0x15, 0xF5,
-0x7C, 0x9B, 0x4C, 0xEC, 0x90, 0x34, 0x6D, 0xE4,
-0x00, 0xA3, 0x10, 0xF0, 0x24, 0x6B, 0x35, 0xF5,
-0x60, 0x9B, 0x4C, 0xE8, 0x6D, 0xE4, 0xA0, 0xA3,
-0x10, 0xF0, 0x24, 0x6B, 0x35, 0xF5, 0x64, 0x9B,
+0x10, 0xF0, 0x24, 0x6B, 0xFF, 0x6A, 0x75, 0xF4,
+0x60, 0x9B, 0x4C, 0xEC, 0x90, 0x34, 0x6D, 0xE4,
+0x00, 0xA3, 0x10, 0xF0, 0x24, 0x6B, 0x75, 0xF4,
+0x64, 0x9B, 0x4C, 0xE8, 0x6D, 0xE4, 0xA0, 0xA3,
+0x10, 0xF0, 0x24, 0x6B, 0x75, 0xF4, 0x68, 0x9B,
 0x4C, 0xED, 0x6D, 0xE4, 0x60, 0xA3, 0xC3, 0x67,
-0x10, 0xF0, 0x24, 0x6B, 0x35, 0xF5, 0x68, 0x9B,
+0x10, 0xF0, 0x24, 0x6B, 0x75, 0xF4, 0x6C, 0x9B,
 0x4C, 0xEE, 0x0F, 0xD6, 0x6D, 0xE4, 0x60, 0xA3,
-0xE3, 0x67, 0x10, 0xF0, 0x24, 0x6B, 0x35, 0xF5,
-0xCC, 0x9B, 0x4C, 0xEF, 0x10, 0xD7, 0xD9, 0xE4,
+0xE3, 0x67, 0x10, 0xF0, 0x24, 0x6B, 0x75, 0xF4,
+0xD0, 0x9B, 0x4C, 0xEF, 0x10, 0xD7, 0xD9, 0xE4,
 0x60, 0xA6, 0xE3, 0x67, 0x10, 0xF0, 0x24, 0x6B,
-0x35, 0xF5, 0x70, 0x9B, 0x4C, 0xEF, 0x09, 0xD7,
+0x75, 0xF4, 0x74, 0x9B, 0x4C, 0xEF, 0x09, 0xD7,
 0x6D, 0xE4, 0x60, 0xA3, 0xE3, 0x67, 0x10, 0xF0,
-0x24, 0x6B, 0x35, 0xF5, 0x74, 0x9B, 0x4C, 0xEF,
+0x24, 0x6B, 0x75, 0xF4, 0x78, 0x9B, 0x4C, 0xEF,
 0x0B, 0xD7, 0x6D, 0xE4, 0xE0, 0xA3, 0x4C, 0xEF,
-0x10, 0xF0, 0x24, 0x6A, 0x35, 0xF5, 0x58, 0x9A,
+0x10, 0xF0, 0x24, 0x6A, 0x75, 0xF4, 0x5C, 0x9A,
 0x49, 0xE4, 0x40, 0xA2, 0x10, 0xF0, 0x24, 0x6A,
-0x35, 0xF5, 0x5C, 0x9A, 0x51, 0xE4, 0x60, 0xA4,
+0x95, 0xF4, 0x40, 0x9A, 0x51, 0xE4, 0x60, 0xA4,
 0x01, 0x6A, 0x4C, 0xEB, 0xA0, 0xF2, 0x06, 0x2B,
 0x52, 0x69, 0x38, 0xE8, 0x30, 0xF0, 0x20, 0x6B,
 0x60, 0xF2, 0x08, 0x4B, 0x12, 0xE9, 0x25, 0xE3,
@@ -13800,12 +13775,12 @@ u8 array_mp_8821c_fw_ap[] = {
 0x63, 0x33, 0x00, 0x53, 0x00, 0x6B, 0x0E, 0xD3,
 0x05, 0x60, 0x20, 0xF0, 0x66, 0xA1, 0x7A, 0x33,
 0x4C, 0xEB, 0x0E, 0xD3, 0x10, 0xF0, 0x24, 0x6A,
-0xB5, 0xF4, 0x54, 0x9A, 0x14, 0x33, 0x0F, 0x94,
+0xF5, 0xF3, 0x58, 0x9A, 0x14, 0x33, 0x0F, 0x94,
 0x49, 0xE3, 0xC0, 0xA2, 0xFF, 0x6B, 0x6C, 0xEE,
 0xCA, 0xEC, 0x10, 0x60, 0x30, 0xF0, 0x20, 0x6A,
 0x25, 0xF6, 0x48, 0x9A, 0x01, 0x6B, 0x6C, 0xEA,
 0x60, 0xF2, 0x1C, 0x22, 0x0F, 0x95, 0x10, 0xF0,
-0x24, 0x6C, 0x56, 0xF7, 0x0C, 0x4C, 0x80, 0x18,
+0x24, 0x6C, 0x96, 0xF6, 0x0C, 0x4C, 0x80, 0x18,
 0xFE, 0x11, 0x74, 0x12, 0x20, 0xF0, 0x85, 0xA1,
 0x80, 0x6A, 0x4B, 0xEA, 0x8C, 0xEA, 0x6C, 0xEA,
 0x40, 0xF2, 0x1E, 0x2A, 0x0E, 0x96, 0x19, 0x26,
@@ -13834,7 +13809,7 @@ u8 array_mp_8821c_fw_ap[] = {
 0x09, 0x95, 0x0B, 0x96, 0xB2, 0xF7, 0x64, 0x40,
 0x64, 0x33, 0x04, 0xD5, 0x05, 0xD6, 0x06, 0xD7,
 0x49, 0xE3, 0x40, 0xAA, 0x0F, 0x95, 0x10, 0x96,
-0x0D, 0x97, 0x10, 0xF0, 0x24, 0x6C, 0x76, 0xF7,
+0x0D, 0x97, 0x10, 0xF0, 0x24, 0x6C, 0xB6, 0xF6,
 0x00, 0x4C, 0x07, 0xD2, 0x80, 0x18, 0xFE, 0x11,
 0x10, 0x92, 0x0F, 0x97, 0xEE, 0xEA, 0x26, 0x22,
 0x0E, 0x92, 0x05, 0x22, 0x30, 0xF0, 0x20, 0x6A,
@@ -13858,7 +13833,7 @@ u8 array_mp_8821c_fw_ap[] = {
 0x25, 0xF6, 0x48, 0x9A, 0x01, 0x6E, 0x08, 0xD3,
 0xCC, 0xEA, 0x0C, 0x22, 0x40, 0xF0, 0x41, 0xA1,
 0x10, 0xF0, 0x24, 0x6C, 0x3F, 0x6F, 0x5A, 0x33,
-0x96, 0xF7, 0x10, 0x4C, 0x6C, 0xEE, 0x4C, 0xEF,
+0xD6, 0xF6, 0x10, 0x4C, 0x6C, 0xEE, 0x4C, 0xEF,
 0x80, 0x18, 0xFE, 0x11, 0x0B, 0x92, 0x09, 0x94,
 0x12, 0x97, 0x11, 0x93, 0x5D, 0xE7, 0x8D, 0xE3,
 0xFF, 0xF7, 0x1F, 0x6A, 0x4C, 0xEB, 0x4C, 0xEF,
@@ -13867,7 +13842,7 @@ u8 array_mp_8821c_fw_ap[] = {
 0x30, 0xF0, 0x20, 0x6A, 0x25, 0xF6, 0x48, 0x9A,
 0x08, 0x95, 0x01, 0x6B, 0x6C, 0xEA, 0x0C, 0xD5,
 0x08, 0x22, 0x08, 0x96, 0x10, 0xF0, 0x24, 0x6C,
-0xB6, 0xF7, 0x00, 0x4C, 0xB0, 0x67, 0x80, 0x18,
+0xF6, 0xF6, 0x00, 0x4C, 0xB0, 0x67, 0x80, 0x18,
 0xFE, 0x11, 0x09, 0x96, 0x0A, 0x97, 0x08, 0x94,
 0x0B, 0x95, 0xEB, 0xE6, 0xFF, 0xF7, 0x1F, 0x6B,
 0x6C, 0xEA, 0x04, 0xD2, 0xCB, 0xE4, 0xAB, 0xE2,
@@ -13912,7 +13887,7 @@ u8 array_mp_8821c_fw_ap[] = {
 0x6B, 0xEB, 0x8C, 0xEB, 0xFF, 0x6C, 0x8C, 0xEB,
 0xA0, 0xF0, 0x1A, 0x23, 0x65, 0xF4, 0x40, 0x9A,
 0x01, 0x6B, 0x6C, 0xEA, 0x07, 0x22, 0x10, 0xF0,
-0x24, 0x6C, 0xB6, 0xF7, 0x10, 0x4C, 0xB0, 0x67,
+0x24, 0x6C, 0xF6, 0xF6, 0x10, 0x4C, 0xB0, 0x67,
 0x80, 0x18, 0xFE, 0x11, 0x90, 0x67, 0x80, 0x18,
 0xDB, 0x19, 0x20, 0xF0, 0x67, 0xA1, 0x7F, 0x6A,
 0x6C, 0xEA, 0x20, 0xF0, 0x47, 0xC1, 0xA4, 0x10,
@@ -13922,7 +13897,7 @@ u8 array_mp_8821c_fw_ap[] = {
 0x04, 0xD3, 0xB2, 0xF7, 0x64, 0x40, 0x64, 0x33,
 0x05, 0xD4, 0x06, 0xD5, 0x49, 0xE3, 0x40, 0xAA,
 0x0F, 0x95, 0x10, 0x96, 0x0D, 0x97, 0x10, 0xF0,
-0x24, 0x6C, 0xB6, 0xF7, 0x1C, 0x4C, 0x07, 0xD2,
+0x24, 0x6C, 0xF6, 0xF6, 0x1C, 0x4C, 0x07, 0xD2,
 0x80, 0x18, 0xFE, 0x11, 0x10, 0x92, 0x0F, 0x96,
 0x00, 0x6D, 0xCE, 0xEA, 0x21, 0x2A, 0x40, 0xF0,
 0xC1, 0xA1, 0x0D, 0x97, 0x3F, 0x6B, 0x40, 0x6A,
@@ -13936,7 +13911,7 @@ u8 array_mp_8821c_fw_ap[] = {
 0x30, 0xF0, 0x20, 0x6A, 0x25, 0xF6, 0x48, 0x9A,
 0x01, 0x6E, 0xCC, 0xEA, 0x0C, 0x22, 0x40, 0xF0,
 0x41, 0xA1, 0x10, 0xF0, 0x24, 0x6C, 0x3F, 0x6F,
-0x5A, 0x33, 0x96, 0xF7, 0x10, 0x4C, 0x6C, 0xEE,
+0x5A, 0x33, 0xD6, 0xF6, 0x10, 0x4C, 0x6C, 0xEE,
 0x4C, 0xEF, 0x80, 0x18, 0xFE, 0x11, 0x12, 0x97,
 0x0B, 0x93, 0x11, 0x95, 0x09, 0x96, 0x69, 0xE7,
 0xFF, 0xF7, 0x1F, 0x6C, 0xCD, 0xE5, 0x40, 0xF0,
@@ -13962,92 +13937,92 @@ u8 array_mp_8821c_fw_ap[] = {
 0x6D, 0xEA, 0x40, 0xF0, 0x41, 0xC1, 0x0E, 0x10,
 0x30, 0xF0, 0x20, 0x6A, 0x25, 0xF6, 0x48, 0x9A,
 0x01, 0x6B, 0x6C, 0xEA, 0x07, 0x22, 0x10, 0xF0,
-0x24, 0x6C, 0xF6, 0xF7, 0x0C, 0x4C, 0xB0, 0x67,
+0x24, 0x6C, 0x36, 0xF7, 0x0C, 0x4C, 0xB0, 0x67,
 0x80, 0x18, 0xFE, 0x11, 0x17, 0x97, 0x16, 0x91,
 0x15, 0x90, 0x0C, 0x63, 0x00, 0xEF, 0x00, 0x65,
 0x01, 0x6A, 0x20, 0xE8, 0x20, 0xE8, 0x00, 0x65,
 0x20, 0xE8, 0x00, 0x65, 0x20, 0xE8, 0x00, 0x65,
 0xFC, 0x63, 0x07, 0x62, 0x06, 0xD1, 0x05, 0xD0,
 0x01, 0x75, 0x1F, 0x61, 0x10, 0xF0, 0x24, 0x6A,
-0xF5, 0xF1, 0x30, 0x9A, 0x30, 0xF0, 0x20, 0x68,
+0x35, 0xF1, 0x34, 0x9A, 0x30, 0xF0, 0x20, 0x68,
 0xCE, 0xF4, 0x50, 0x98, 0xB1, 0x67, 0x41, 0xF1,
 0x08, 0x6C, 0x02, 0x6E, 0x40, 0xEA, 0xCE, 0xF4,
 0x50, 0x98, 0xB1, 0x67, 0x41, 0xF1, 0x0C, 0x6C,
 0x02, 0x6E, 0x40, 0xEA, 0x10, 0xF0, 0x24, 0x6A,
-0x75, 0xF3, 0x34, 0x9A, 0x21, 0xF4, 0x00, 0x6C,
+0xB5, 0xF2, 0x38, 0x9A, 0x21, 0xF4, 0x00, 0x6C,
 0xCE, 0xF4, 0x50, 0x98, 0xB1, 0x67, 0x00, 0x6E,
 0x46, 0x10, 0x02, 0x75, 0x26, 0x61, 0x10, 0xF0,
-0x24, 0x6A, 0xF5, 0xF1, 0x30, 0x9A, 0x30, 0xF0,
+0x24, 0x6A, 0x35, 0xF1, 0x34, 0x9A, 0x30, 0xF0,
 0x20, 0x68, 0xCE, 0xF4, 0x50, 0x98, 0xB1, 0x67,
 0x41, 0xF1, 0x08, 0x6C, 0x02, 0x6E, 0x40, 0xEA,
 0xCE, 0xF4, 0x50, 0x98, 0xB1, 0x67, 0x41, 0xF1,
 0x0C, 0x6C, 0x01, 0x6E, 0x40, 0xEA, 0x10, 0xF0,
-0x24, 0x6A, 0x75, 0xF3, 0x34, 0x9A, 0xCE, 0xF4,
+0x24, 0x6A, 0xB5, 0xF2, 0x38, 0x9A, 0xCE, 0xF4,
 0x50, 0x98, 0x21, 0xF4, 0x00, 0x6C, 0xB1, 0x67,
 0x00, 0x6E, 0x40, 0xEA, 0xCE, 0xF4, 0x50, 0x98,
 0xE1, 0xF0, 0x10, 0x6C, 0xB1, 0x67, 0x01, 0x6E,
-0x25, 0x10, 0x10, 0xF0, 0x24, 0x6A, 0xF5, 0xF1,
-0x30, 0x9A, 0x30, 0xF0, 0x20, 0x68, 0xCE, 0xF4,
+0x25, 0x10, 0x10, 0xF0, 0x24, 0x6A, 0x35, 0xF1,
+0x34, 0x9A, 0x30, 0xF0, 0x20, 0x68, 0xCE, 0xF4,
 0x50, 0x98, 0xB1, 0x67, 0x41, 0xF1, 0x08, 0x6C,
 0x02, 0x6E, 0x40, 0xEA, 0xCE, 0xF4, 0x50, 0x98,
 0xB1, 0x67, 0x41, 0xF1, 0x0C, 0x6C, 0x02, 0x6E,
-0x40, 0xEA, 0x10, 0xF0, 0x24, 0x6A, 0x75, 0xF3,
-0x34, 0x9A, 0xCE, 0xF4, 0x50, 0x98, 0x21, 0xF4,
+0x40, 0xEA, 0x10, 0xF0, 0x24, 0x6A, 0xB5, 0xF2,
+0x38, 0x9A, 0xCE, 0xF4, 0x50, 0x98, 0x21, 0xF4,
 0x00, 0x6C, 0xB1, 0x67, 0x01, 0x6E, 0x40, 0xEA,
 0xCE, 0xF4, 0x50, 0x98, 0xE1, 0xF0, 0x10, 0x6C,
 0xB1, 0x67, 0x00, 0x6E, 0x40, 0xEA, 0x07, 0x97,
 0x06, 0x91, 0x05, 0x90, 0x04, 0x63, 0x00, 0xEF,
 0xFA, 0x63, 0x0B, 0x62, 0x0A, 0xD1, 0x09, 0xD0,
 0x0C, 0xD4, 0x45, 0x67, 0x1A, 0x25, 0x10, 0xF0,
-0x24, 0x6B, 0x15, 0xF2, 0x7C, 0x9B, 0x80, 0x9C,
+0x24, 0x6B, 0x75, 0xF1, 0x60, 0x9B, 0x80, 0x9C,
 0x8C, 0xEB, 0x04, 0x2B, 0x01, 0x6A, 0x4B, 0xEA,
 0x06, 0xD2, 0x34, 0x10, 0x10, 0xF0, 0x24, 0x6C,
-0x10, 0xF0, 0x24, 0x6D, 0xF6, 0xF7, 0x18, 0x4C,
-0xF4, 0xF7, 0x0C, 0x4D, 0xC2, 0x67, 0x80, 0x18,
+0x10, 0xF0, 0x24, 0x6D, 0x36, 0xF7, 0x18, 0x4C,
+0x34, 0xF7, 0x10, 0x4D, 0xC2, 0x67, 0x80, 0x18,
 0xFE, 0x11, 0x01, 0x6C, 0x8B, 0xEC, 0x06, 0xD4,
-0x25, 0x10, 0x10, 0xF0, 0x24, 0x6A, 0xF5, 0xF3,
-0x18, 0x9A, 0xFF, 0x69, 0xCC, 0xE9, 0xEC, 0xE8,
+0x25, 0x10, 0x10, 0xF0, 0x24, 0x6A, 0x35, 0xF3,
+0x1C, 0x9A, 0xFF, 0x69, 0xCC, 0xE9, 0xEC, 0xE8,
 0x28, 0x34, 0xB0, 0x67, 0x05, 0xF0, 0x00, 0x4C,
-0x00, 0x18, 0x34, 0xE1, 0x0C, 0x95, 0x06, 0xD2,
-0x10, 0xF0, 0x24, 0x6A, 0x15, 0xF2, 0x5C, 0x9A,
+0x00, 0x18, 0x05, 0xE1, 0x0C, 0x95, 0x06, 0xD2,
+0x10, 0xF0, 0x24, 0x6A, 0x75, 0xF1, 0x40, 0x9A,
 0x60, 0x9D, 0x6C, 0xEA, 0x0F, 0x22, 0x06, 0x92,
 0x10, 0xF0, 0x24, 0x6C, 0x10, 0xF0, 0x24, 0x6D,
-0x17, 0xF0, 0x18, 0x4C, 0xF4, 0xF7, 0x0C, 0x4D,
+0x56, 0xF7, 0x18, 0x4C, 0x34, 0xF7, 0x10, 0x4D,
 0x00, 0x6E, 0xF1, 0x67, 0x04, 0xD2, 0x05, 0xD0,
 0x80, 0x18, 0xFE, 0x11, 0x06, 0x92, 0x0B, 0x97,
 0x0A, 0x91, 0x09, 0x90, 0x06, 0x63, 0x00, 0xEF,
 0xF9, 0x63, 0x0D, 0x62, 0x0C, 0xD1, 0x0B, 0xD0,
 0x0E, 0xD4, 0x45, 0x67, 0x12, 0x91, 0x13, 0x25,
-0x10, 0xF0, 0x24, 0x6B, 0x15, 0xF2, 0x7C, 0x9B,
+0x10, 0xF0, 0x24, 0x6B, 0x75, 0xF1, 0x60, 0x9B,
 0x80, 0x9C, 0x8C, 0xEB, 0x7F, 0x23, 0x10, 0xF0,
-0x24, 0x6C, 0x10, 0xF0, 0x24, 0x6D, 0xF6, 0xF7,
-0x18, 0x4C, 0xD4, 0xF7, 0x0C, 0x4D, 0xC2, 0x67,
+0x24, 0x6C, 0x10, 0xF0, 0x24, 0x6D, 0x36, 0xF7,
+0x18, 0x4C, 0x14, 0xF7, 0x10, 0x4D, 0xC2, 0x67,
 0x80, 0x18, 0xFE, 0x11, 0x73, 0x10, 0x10, 0xF0,
-0x24, 0x6A, 0xF5, 0xF3, 0x58, 0x9A, 0xFF, 0x68,
+0x24, 0x6A, 0x35, 0xF3, 0x5C, 0x9A, 0xFF, 0x68,
 0x00, 0x6B, 0x4C, 0xEF, 0x4A, 0xEF, 0xCC, 0xE8,
 0x08, 0xD7, 0x09, 0xD3, 0x30, 0x60, 0x0E, 0x94,
 0xA3, 0x67, 0xD0, 0x67, 0xE2, 0x67, 0x80, 0x18,
 0xE2, 0x1E, 0x09, 0xD2, 0x01, 0x4A, 0x13, 0x2A,
-0x0E, 0x94, 0x10, 0xF0, 0x24, 0x6A, 0x15, 0xF2,
-0x5C, 0x9A, 0x60, 0x9C, 0x6C, 0xEA, 0x56, 0x22,
+0x0E, 0x94, 0x10, 0xF0, 0x24, 0x6A, 0x75, 0xF1,
+0x40, 0x9A, 0x60, 0x9C, 0x6C, 0xEA, 0x56, 0x22,
 0x10, 0xF0, 0x24, 0x6C, 0x10, 0xF0, 0x24, 0x6D,
-0x57, 0xF0, 0x04, 0x4C, 0xD4, 0xF7, 0x0C, 0x4D,
+0x96, 0xF7, 0x04, 0x4C, 0x14, 0xF7, 0x10, 0x4D,
 0x80, 0x18, 0xFE, 0x11, 0x4B, 0x10, 0x00, 0x6B,
 0x43, 0x67, 0x08, 0x94, 0x01, 0x6D, 0x86, 0xEB,
 0xAC, 0xEC, 0x07, 0x2C, 0x01, 0x4A, 0xFF, 0x6C,
 0x8C, 0xEA, 0x14, 0x72, 0x01, 0x4B, 0xF5, 0x61,
 0x14, 0x6A, 0x08, 0x95, 0x09, 0x93, 0x24, 0xEA,
 0xAF, 0xEA, 0x6C, 0xEA, 0x4D, 0xE9, 0x10, 0xF0,
-0x24, 0x6A, 0xF5, 0xF3, 0x58, 0x9A, 0x00, 0xF5,
+0x24, 0x6A, 0x35, 0xF3, 0x5C, 0x9A, 0x00, 0xF5,
 0x00, 0x33, 0x01, 0x6D, 0x2C, 0xEA, 0x6D, 0xEA,
 0x30, 0xF0, 0x20, 0x6B, 0xCE, 0xF4, 0xF0, 0x9B,
-0x10, 0xF0, 0x24, 0x6B, 0x55, 0xF5, 0xD4, 0x9B,
+0x10, 0xF0, 0x24, 0x6B, 0x95, 0xF4, 0xD8, 0x9B,
 0x81, 0xF4, 0x10, 0x6C, 0xAB, 0xED, 0x4C, 0xEE,
 0x40, 0xEF, 0x0E, 0x94, 0x10, 0xF0, 0x24, 0x6A,
-0x15, 0xF2, 0x5C, 0x9A, 0x60, 0x9C, 0x6C, 0xEA,
+0x75, 0xF1, 0x40, 0x9A, 0x60, 0x9C, 0x6C, 0xEA,
 0x11, 0x22, 0x09, 0x95, 0x08, 0x92, 0x10, 0xF0,
 0x24, 0x6C, 0x05, 0xD5, 0x10, 0xF0, 0x24, 0x6D,
-0x77, 0xF0, 0x08, 0x4C, 0xD4, 0xF7, 0x0C, 0x4D,
+0xB6, 0xF7, 0x08, 0x4C, 0x14, 0xF7, 0x10, 0x4D,
 0x00, 0x6E, 0xF0, 0x67, 0x04, 0xD1, 0x06, 0xD2,
 0x80, 0x18, 0xFE, 0x11, 0x30, 0xF0, 0x20, 0x6A,
 0xCE, 0xF4, 0x5C, 0x9A, 0x0D, 0x6C, 0x40, 0xEA,
@@ -14055,37 +14030,37 @@ u8 array_mp_8821c_fw_ap[] = {
 0x0C, 0x91, 0x0B, 0x90, 0x07, 0x63, 0x00, 0xEF,
 0xFA, 0x63, 0x0B, 0x62, 0x0A, 0xD1, 0x09, 0xD0,
 0xFF, 0x6A, 0xAC, 0xEA, 0x06, 0xD2, 0x10, 0xF0,
-0x24, 0x6A, 0x15, 0xF2, 0x5C, 0x9A, 0x60, 0x9C,
+0x24, 0x6A, 0x75, 0xF1, 0x40, 0x9A, 0x60, 0x9C,
 0x04, 0x67, 0x26, 0x67, 0x6C, 0xEA, 0x0A, 0x22,
 0x10, 0xF0, 0x24, 0x6C, 0x10, 0xF0, 0x24, 0x6D,
-0xB7, 0xF0, 0x04, 0x4C, 0x74, 0xF7, 0x04, 0x4D,
+0xF6, 0xF7, 0x04, 0x4C, 0xB4, 0xF6, 0x08, 0x4D,
 0x80, 0x18, 0xFE, 0x11, 0x4B, 0xA0, 0x13, 0x22,
-0x10, 0xF0, 0x24, 0x6A, 0x15, 0xF2, 0x5C, 0x9A,
+0x10, 0xF0, 0x24, 0x6A, 0x75, 0xF1, 0x40, 0x9A,
 0x60, 0x98, 0x6C, 0xEA, 0x80, 0xF1, 0x01, 0x22,
 0x10, 0xF0, 0x24, 0x6C, 0x10, 0xF0, 0x24, 0x6D,
-0xD7, 0xF0, 0x00, 0x4C, 0x74, 0xF7, 0x04, 0x4D,
+0x17, 0xF0, 0x00, 0x4C, 0xB4, 0xF6, 0x08, 0x4D,
 0x80, 0x18, 0xFE, 0x11, 0x76, 0x11, 0x06, 0x59,
 0x0A, 0x60, 0x01, 0x71, 0x03, 0x61, 0x06, 0x93,
 0x03, 0x5B, 0x04, 0x10, 0x02, 0x71, 0x10, 0x61,
 0x06, 0x94, 0x05, 0x5C, 0x0D, 0x61, 0x10, 0xF0,
-0x24, 0x6A, 0x15, 0xF2, 0x5C, 0x9A, 0x60, 0x98,
+0x24, 0x6A, 0x75, 0xF1, 0x40, 0x9A, 0x60, 0x98,
 0x6C, 0xEA, 0x60, 0xF1, 0x04, 0x22, 0x10, 0xF0,
-0x24, 0x6C, 0xF7, 0xF0, 0x04, 0x4C, 0x3D, 0x11,
+0x24, 0x6C, 0x37, 0xF0, 0x04, 0x4C, 0x3D, 0x11,
 0x30, 0xF0, 0x21, 0x6A, 0x90, 0xF4, 0x34, 0xDA,
-0x10, 0xF0, 0x24, 0x6A, 0xF5, 0xF3, 0xF8, 0x9A,
+0x10, 0xF0, 0x24, 0x6A, 0x35, 0xF3, 0xFC, 0x9A,
 0x90, 0x67, 0x00, 0x6D, 0x18, 0x6E, 0x80, 0x18,
 0xE2, 0x1E, 0x06, 0x59, 0x07, 0xD2, 0xE0, 0xF0,
 0x19, 0x60, 0x10, 0xF0, 0x24, 0x6A, 0x28, 0x33,
-0x54, 0xF7, 0x0C, 0x4A, 0x69, 0xE2, 0x40, 0x9A,
+0x94, 0xF6, 0x10, 0x4A, 0x69, 0xE2, 0x40, 0x9A,
 0x00, 0xEA, 0x01, 0x6D, 0xA1, 0xF0, 0x0C, 0x6C,
-0xAB, 0xED, 0x00, 0x18, 0x34, 0xE1, 0x10, 0xF0,
-0x24, 0x6B, 0x55, 0xF5, 0x78, 0x9B, 0x01, 0x6D,
+0xAB, 0xED, 0x00, 0x18, 0x05, 0xE1, 0x10, 0xF0,
+0x24, 0x6B, 0x95, 0xF4, 0x7C, 0x9B, 0x01, 0x6D,
 0xA1, 0xF0, 0x0C, 0x6C, 0x4C, 0xEB, 0x30, 0xF0,
 0x20, 0x6A, 0xCE, 0xF4, 0xF0, 0x9A, 0x10, 0xF0,
-0x24, 0x6A, 0x55, 0xF5, 0xDC, 0x9A, 0xAB, 0xED,
+0x24, 0x6A, 0xB5, 0xF4, 0xC0, 0x9A, 0xAB, 0xED,
 0x6D, 0xEE, 0x40, 0xEF, 0x30, 0xF0, 0x20, 0x6B,
 0xCE, 0xF4, 0x50, 0x9B, 0x10, 0xF0, 0x24, 0x6B,
-0xF5, 0xF1, 0xB4, 0x9B, 0xC1, 0xF0, 0x04, 0x6C,
+0x35, 0xF1, 0xB8, 0x9B, 0xC1, 0xF0, 0x04, 0x6C,
 0x01, 0x6E, 0x40, 0xEA, 0x07, 0x94, 0x01, 0xF4,
 0x00, 0x6A, 0x8D, 0xEA, 0xDC, 0x10, 0x06, 0x92,
 0x01, 0x72, 0x09, 0x61, 0x30, 0xF0, 0x20, 0x6A,
@@ -14094,106 +14069,106 @@ u8 array_mp_8821c_fw_ap[] = {
 0x20, 0x6A, 0xCE, 0xF4, 0x50, 0x9A, 0x01, 0xF2,
 0x00, 0x6C, 0x10, 0x6D, 0x00, 0x6E, 0x40, 0xEA,
 0x01, 0x6D, 0xA1, 0xF0, 0x0C, 0x6C, 0xAB, 0xED,
-0x00, 0x18, 0x34, 0xE1, 0x10, 0xF0, 0x24, 0x6B,
-0x75, 0xF5, 0x60, 0x9B, 0x06, 0x94, 0x0F, 0x6E,
-0x4C, 0xEB, 0x10, 0xF0, 0x24, 0x6A, 0x75, 0xF5,
-0x44, 0x9A, 0x8C, 0xEE, 0xC8, 0x36, 0x30, 0xF0,
+0x00, 0x18, 0x05, 0xE1, 0x10, 0xF0, 0x24, 0x6B,
+0xB5, 0xF4, 0x64, 0x9B, 0x06, 0x94, 0x0F, 0x6E,
+0x4C, 0xEB, 0x10, 0xF0, 0x24, 0x6A, 0xB5, 0xF4,
+0x48, 0x9A, 0x8C, 0xEE, 0xC8, 0x36, 0x30, 0xF0,
 0x20, 0x6C, 0x4D, 0xEE, 0xCE, 0xF4, 0x50, 0x9C,
 0x01, 0x6D, 0x6D, 0xEE, 0xA1, 0xF0, 0x0C, 0x6C,
 0xAB, 0xED, 0x40, 0xEA, 0x30, 0xF0, 0x20, 0x6B,
 0xCE, 0xF4, 0x50, 0x9B, 0x10, 0xF0, 0x24, 0x6B,
-0xF5, 0xF1, 0xB4, 0x9B, 0xC1, 0xF0, 0x04, 0x6C,
+0x35, 0xF1, 0xB8, 0x9B, 0xC1, 0xF0, 0x04, 0x6C,
 0x01, 0x6E, 0x40, 0xEA, 0x07, 0x94, 0x01, 0xF4,
 0x01, 0x6A, 0x4B, 0xEA, 0x8C, 0xEA, 0x01, 0xF0,
 0x00, 0x6B, 0x31, 0x10, 0x01, 0x6D, 0xA1, 0xF0,
-0x0C, 0x6C, 0xAB, 0xED, 0x00, 0x18, 0x34, 0xE1,
-0x10, 0xF0, 0x24, 0x6B, 0x75, 0xF5, 0x68, 0x9B,
+0x0C, 0x6C, 0xAB, 0xED, 0x00, 0x18, 0x05, 0xE1,
+0x10, 0xF0, 0x24, 0x6B, 0xB5, 0xF4, 0x6C, 0x9B,
 0x0F, 0x6E, 0x30, 0xF0, 0x20, 0x6C, 0x4C, 0xEB,
 0x06, 0x92, 0x01, 0x6D, 0xAB, 0xED, 0x4C, 0xEE,
-0x10, 0xF0, 0x24, 0x6A, 0x75, 0xF5, 0x4C, 0x9A,
+0x10, 0xF0, 0x24, 0x6A, 0xB5, 0xF4, 0x50, 0x9A,
 0xC8, 0x36, 0x4D, 0xEE, 0xCE, 0xF4, 0x50, 0x9C,
 0x6D, 0xEE, 0xA1, 0xF0, 0x0C, 0x6C, 0x40, 0xEA,
 0x30, 0xF0, 0x20, 0x6B, 0xCE, 0xF4, 0x50, 0x9B,
-0x10, 0xF0, 0x24, 0x6B, 0xF5, 0xF1, 0xB4, 0x9B,
+0x10, 0xF0, 0x24, 0x6B, 0x35, 0xF1, 0xB8, 0x9B,
 0xC1, 0xF0, 0x04, 0x6C, 0x01, 0x6E, 0x40, 0xEA,
 0x07, 0x94, 0x01, 0xF4, 0x01, 0x6A, 0x4B, 0xEA,
 0x8C, 0xEA, 0x00, 0xF4, 0x00, 0x6B, 0x6D, 0xEA,
 0x62, 0x10, 0x01, 0x6D, 0xA1, 0xF0, 0x0C, 0x6C,
-0xAB, 0xED, 0x00, 0x18, 0x34, 0xE1, 0x10, 0xF0,
-0x24, 0x6B, 0x75, 0xF5, 0x70, 0x9B, 0x01, 0x6D,
+0xAB, 0xED, 0x00, 0x18, 0x05, 0xE1, 0x10, 0xF0,
+0x24, 0x6B, 0xB5, 0xF4, 0x74, 0x9B, 0x01, 0x6D,
 0xA1, 0xF0, 0x0C, 0x6C, 0x4C, 0xEB, 0x30, 0xF0,
 0x20, 0x6A, 0xCE, 0xF4, 0xF0, 0x9A, 0x10, 0xF0,
-0x24, 0x6A, 0xAB, 0xED, 0x75, 0xF5, 0xD4, 0x9A,
+0x24, 0x6A, 0xAB, 0xED, 0xB5, 0xF4, 0xD8, 0x9A,
 0x17, 0x10, 0x01, 0x6D, 0xA1, 0xF0, 0x0C, 0x6C,
-0xAB, 0xED, 0x00, 0x18, 0x34, 0xE1, 0x10, 0xF0,
-0x24, 0x6B, 0x75, 0xF5, 0x70, 0x9B, 0x30, 0xF0,
+0xAB, 0xED, 0x00, 0x18, 0x05, 0xE1, 0x10, 0xF0,
+0x24, 0x6B, 0xB5, 0xF4, 0x74, 0x9B, 0x30, 0xF0,
 0x20, 0x6C, 0x01, 0x6D, 0x4C, 0xEB, 0x10, 0xF0,
-0x24, 0x6A, 0x75, 0xF5, 0xD8, 0x9A, 0xCE, 0xF4,
+0x24, 0x6A, 0xB5, 0xF4, 0xDC, 0x9A, 0xCE, 0xF4,
 0xF0, 0x9C, 0xAB, 0xED, 0xA1, 0xF0, 0x0C, 0x6C,
 0x6D, 0xEE, 0x40, 0xEF, 0x30, 0xF0, 0x20, 0x6B,
 0xCE, 0xF4, 0x50, 0x9B, 0x10, 0xF0, 0x24, 0x6B,
-0xF5, 0xF1, 0xB4, 0x9B, 0xC1, 0xF0, 0x04, 0x6C,
+0x35, 0xF1, 0xB8, 0x9B, 0xC1, 0xF0, 0x04, 0x6C,
 0x00, 0x6E, 0x40, 0xEA, 0x10, 0xF0, 0x24, 0x6B,
 0x30, 0xF0, 0x20, 0x6C, 0xCE, 0xF4, 0x50, 0x9C,
-0x75, 0xF3, 0xB4, 0x9B, 0xC1, 0xF0, 0x08, 0x6C,
+0xB5, 0xF2, 0xB8, 0x9B, 0xC1, 0xF0, 0x08, 0x6C,
 0x01, 0x6E, 0x40, 0xEA, 0x01, 0xF4, 0x00, 0x6A,
 0x07, 0x93, 0xB1, 0x17, 0x10, 0xF0, 0x24, 0x6A,
-0x15, 0xF2, 0x7C, 0x9A, 0x40, 0x98, 0x4C, 0xEB,
+0x75, 0xF1, 0x60, 0x9A, 0x40, 0x98, 0x4C, 0xEB,
 0x07, 0x92, 0x0D, 0x23, 0x06, 0x97, 0x10, 0xF0,
-0x24, 0x6C, 0x10, 0xF0, 0x24, 0x6D, 0xF7, 0xF0,
-0x04, 0x4C, 0x74, 0xF7, 0x04, 0x4D, 0xD1, 0x67,
+0x24, 0x6C, 0x10, 0xF0, 0x24, 0x6D, 0x37, 0xF0,
+0x04, 0x4C, 0xB4, 0xF6, 0x08, 0x4D, 0xD1, 0x67,
 0x80, 0x18, 0xFE, 0x11, 0x07, 0x92, 0x04, 0xD2,
-0x10, 0xF0, 0x24, 0x6A, 0xF5, 0xF3, 0xF8, 0x9A,
+0x10, 0xF0, 0x24, 0x6A, 0x35, 0xF3, 0xFC, 0x9A,
 0x90, 0x67, 0x00, 0x6D, 0x18, 0x6E, 0x80, 0x18,
 0x08, 0x1F, 0x07, 0x93, 0x00, 0x6C, 0x01, 0x4B,
 0x01, 0x23, 0x01, 0x6C, 0xFF, 0x6B, 0x4C, 0xEB,
 0x8C, 0xEB, 0x14, 0x2B, 0x10, 0xF0, 0x24, 0x6A,
-0x15, 0xF2, 0x5C, 0x9A, 0x60, 0x98, 0x6C, 0xEA,
-0x26, 0x22, 0x10, 0xF0, 0x24, 0x6C, 0x37, 0xF1,
+0x75, 0xF1, 0x40, 0x9A, 0x60, 0x98, 0x6C, 0xEA,
+0x26, 0x22, 0x10, 0xF0, 0x24, 0x6C, 0x77, 0xF0,
 0x00, 0x4C, 0x06, 0x97, 0x10, 0xF0, 0x24, 0x6D,
-0x74, 0xF7, 0x04, 0x4D, 0xD1, 0x67, 0x80, 0x18,
+0xB4, 0xF6, 0x08, 0x4D, 0xD1, 0x67, 0x80, 0x18,
 0xFE, 0x11, 0x19, 0x10, 0x90, 0x67, 0xB1, 0x67,
 0x80, 0x18, 0xA6, 0x1E, 0x10, 0xF0, 0x24, 0x6A,
-0x15, 0xF2, 0x5C, 0x9A, 0x60, 0x98, 0x6C, 0xEA,
+0x75, 0xF1, 0x40, 0x9A, 0x60, 0x98, 0x6C, 0xEA,
 0x0C, 0x22, 0x06, 0x97, 0x10, 0xF0, 0x24, 0x6C,
-0x10, 0xF0, 0x24, 0x6D, 0x97, 0xF1, 0x00, 0x4C,
-0x74, 0xF7, 0x04, 0x4D, 0xD1, 0x67, 0x80, 0x18,
+0x10, 0xF0, 0x24, 0x6D, 0xD7, 0xF0, 0x00, 0x4C,
+0xB4, 0xF6, 0x08, 0x4D, 0xD1, 0x67, 0x80, 0x18,
 0xFE, 0x11, 0x01, 0x6A, 0x01, 0x10, 0x00, 0x6A,
 0x0B, 0x97, 0x0A, 0x91, 0x09, 0x90, 0x06, 0x63,
 0x00, 0xEF, 0x00, 0x65, 0xF9, 0x63, 0x0D, 0x62,
 0x0C, 0xD1, 0x0B, 0xD0, 0x10, 0xF0, 0x24, 0x6A,
-0x15, 0xF2, 0x5C, 0x9A, 0x60, 0x9C, 0xFF, 0x68,
+0x75, 0xF1, 0x40, 0x9A, 0x60, 0x9C, 0xFF, 0x68,
 0x24, 0x67, 0x6C, 0xEA, 0xAC, 0xE8, 0x0A, 0x22,
 0x10, 0xF0, 0x24, 0x6C, 0x10, 0xF0, 0x24, 0x6D,
-0xB7, 0xF1, 0x1C, 0x4C, 0x94, 0xF7, 0x08, 0x4D,
+0xF7, 0xF0, 0x1C, 0x4C, 0xD4, 0xF6, 0x0C, 0x4D,
 0x80, 0x18, 0xFE, 0x11, 0x4B, 0xA1, 0x13, 0x22,
-0x10, 0xF0, 0x24, 0x6A, 0x15, 0xF2, 0x5C, 0x9A,
+0x10, 0xF0, 0x24, 0x6A, 0x75, 0xF1, 0x40, 0x9A,
 0x60, 0x99, 0x6C, 0xEA, 0xC0, 0xF1, 0x1A, 0x22,
 0x10, 0xF0, 0x24, 0x6C, 0x10, 0xF0, 0x24, 0x6D,
-0xD7, 0xF0, 0x00, 0x4C, 0x94, 0xF7, 0x08, 0x4D,
+0x17, 0xF0, 0x00, 0x4C, 0xD4, 0xF6, 0x0C, 0x4D,
 0x80, 0x18, 0xFE, 0x11, 0xCF, 0x11, 0x30, 0xF0,
 0x21, 0x6A, 0x90, 0xF4, 0x18, 0xC2, 0x10, 0xF0,
-0x24, 0x6A, 0xF5, 0xF3, 0xF8, 0x9A, 0x91, 0x67,
+0x24, 0x6A, 0x35, 0xF3, 0xFC, 0x9A, 0x91, 0x67,
 0x00, 0x6D, 0x18, 0x6E, 0x80, 0x18, 0xE2, 0x1E,
 0x09, 0xD2, 0x09, 0x93, 0x00, 0x6A, 0x01, 0x4B,
 0x01, 0x23, 0x01, 0x6A, 0x01, 0x6B, 0x4C, 0xEB,
 0x07, 0xD3, 0x60, 0xF2, 0x50, 0xA1, 0x00, 0x6B,
 0x08, 0xD3, 0x12, 0x2A, 0x10, 0xF0, 0x24, 0x6A,
-0xF5, 0xF3, 0xF8, 0x9A, 0xA3, 0x67, 0x91, 0x67,
+0x35, 0xF3, 0xFC, 0x9A, 0xA3, 0x67, 0x91, 0x67,
 0xB8, 0x6E, 0x80, 0x18, 0xE2, 0x1E, 0x08, 0xD2,
 0x08, 0x93, 0x00, 0x6A, 0x01, 0x4B, 0x01, 0x23,
 0x01, 0x6A, 0x07, 0x93, 0x4C, 0xEB, 0x07, 0xD3,
 0x0F, 0x58, 0x71, 0x60, 0x10, 0xF0, 0x24, 0x6A,
-0x75, 0xF5, 0x5C, 0x9A, 0x09, 0x93, 0x01, 0xF4,
+0xD5, 0xF4, 0x40, 0x9A, 0x09, 0x93, 0x01, 0xF4,
 0x1C, 0x6C, 0x01, 0xF7, 0x00, 0x6D, 0x4C, 0xEB,
 0x0D, 0xEB, 0x06, 0xD3, 0x30, 0xF0, 0x20, 0x6B,
 0xCE, 0xF4, 0x50, 0x9B, 0x00, 0x6E, 0x40, 0xEA,
 0x30, 0xF0, 0x20, 0x6B, 0xCE, 0xF4, 0x50, 0x9B,
-0x10, 0xF0, 0x24, 0x6B, 0x95, 0xF5, 0xA0, 0x9B,
+0x10, 0xF0, 0x24, 0x6B, 0xD5, 0xF4, 0xA4, 0x9B,
 0x61, 0xF0, 0x00, 0x6C, 0x61, 0xF1, 0x0A, 0x6E,
 0x40, 0xEA, 0x60, 0xF2, 0x50, 0xA1, 0x07, 0x2A,
-0x10, 0xF0, 0x24, 0x6A, 0x08, 0x93, 0x55, 0xF2,
-0x48, 0x9A, 0x4D, 0xEB, 0x08, 0xD3, 0x0E, 0x70,
+0x10, 0xF0, 0x24, 0x6A, 0x08, 0x93, 0x95, 0xF1,
+0x4C, 0x9A, 0x4D, 0xEB, 0x08, 0xD3, 0x0E, 0x70,
 0x20, 0x61, 0x30, 0xF0, 0x20, 0x6B, 0xCE, 0xF4,
 0x50, 0x9B, 0x01, 0x6D, 0x21, 0xF2, 0x04, 0x6C,
 0xAB, 0xED, 0x17, 0xF0, 0x1C, 0x6E, 0x40, 0xEA,
@@ -14203,27 +14178,27 @@ u8 array_mp_8821c_fw_ap[] = {
 0x01, 0x6D, 0xCE, 0xF4, 0x50, 0x9B, 0xA1, 0xF2,
 0x0C, 0x6C, 0xAB, 0xED, 0x66, 0xF6, 0x07, 0x6E,
 0x24, 0x10, 0x30, 0xF0, 0x20, 0x6A, 0xCE, 0xF4,
-0x70, 0x9A, 0x10, 0xF0, 0x24, 0x6A, 0x95, 0xF5,
-0xC4, 0x9A, 0x01, 0x6D, 0x21, 0xF2, 0x04, 0x6C,
+0x70, 0x9A, 0x10, 0xF0, 0x24, 0x6A, 0xD5, 0xF4,
+0xC8, 0x9A, 0x01, 0x6D, 0x21, 0xF2, 0x04, 0x6C,
 0xAB, 0xED, 0x40, 0xEB, 0x30, 0xF0, 0x20, 0x6B,
 0xCE, 0xF4, 0x50, 0x9B, 0x21, 0xF2, 0x08, 0x6C,
 0xFF, 0xF7, 0x1F, 0x6D, 0x11, 0xF0, 0x10, 0x6E,
 0x40, 0xEA, 0x30, 0xF0, 0x20, 0x6B, 0xCE, 0xF4,
-0x50, 0x9B, 0x10, 0xF0, 0x24, 0x6B, 0x95, 0xF5,
-0xC8, 0x9B, 0x01, 0x6D, 0xA1, 0xF2, 0x0C, 0x6C,
+0x50, 0x9B, 0x10, 0xF0, 0x24, 0x6B, 0xD5, 0xF4,
+0xCC, 0x9B, 0x01, 0x6D, 0xA1, 0xF2, 0x0C, 0x6C,
 0xAB, 0xED, 0x40, 0xEA, 0xE5, 0x10, 0x24, 0x58,
 0xC0, 0xF0, 0x16, 0x61, 0x10, 0xF0, 0x24, 0x6A,
-0x75, 0xF5, 0x5C, 0x9A, 0x09, 0x93, 0x4C, 0xEB,
+0xD5, 0xF4, 0x40, 0x9A, 0x09, 0x93, 0x4C, 0xEB,
 0x0D, 0xEB, 0x06, 0xD3, 0x68, 0x40, 0xE4, 0x4B,
 0xFF, 0x6A, 0x4C, 0xEB, 0x1D, 0x5B, 0x21, 0x61,
 0x68, 0x40, 0xA4, 0x4B, 0x4C, 0xEB, 0x29, 0x5B,
-0x05, 0x60, 0x10, 0xF0, 0x24, 0x6A, 0x55, 0xF2,
-0x40, 0x9A, 0x06, 0x10, 0x8D, 0x58, 0x08, 0x61,
-0x10, 0xF0, 0x24, 0x6A, 0x55, 0xF2, 0x44, 0x9A,
+0x05, 0x60, 0x10, 0xF0, 0x24, 0x6A, 0x95, 0xF1,
+0x44, 0x9A, 0x06, 0x10, 0x8D, 0x58, 0x08, 0x61,
+0x10, 0xF0, 0x24, 0x6A, 0x95, 0xF1, 0x48, 0x9A,
 0x06, 0x93, 0x4D, 0xEB, 0x06, 0xD3, 0x0D, 0x10,
-0x10, 0xF0, 0x24, 0x6A, 0x15, 0xF2, 0x5C, 0x9A,
+0x10, 0xF0, 0x24, 0x6A, 0x75, 0xF1, 0x40, 0x9A,
 0x60, 0x99, 0x6C, 0xEA, 0x00, 0xF1, 0x04, 0x22,
-0x10, 0xF0, 0x24, 0x6C, 0xD7, 0xF1, 0x18, 0x4C,
+0x10, 0xF0, 0x24, 0x6C, 0x17, 0xF1, 0x18, 0x4C,
 0xE3, 0x10, 0x68, 0x40, 0xE4, 0x4B, 0xFF, 0x6A,
 0x4C, 0xEB, 0x1D, 0x5B, 0x0A, 0x60, 0x30, 0xF0,
 0x20, 0x6A, 0xCE, 0xF4, 0x50, 0x9A, 0x01, 0xF4,
@@ -14237,119 +14212,119 @@ u8 array_mp_8821c_fw_ap[] = {
 0x01, 0xF7, 0x00, 0x6D, 0x03, 0x6E, 0x40, 0xEA,
 0x68, 0x40, 0xE4, 0x4B, 0xFF, 0x6A, 0x4C, 0xEB,
 0x0D, 0x5B, 0x1B, 0x60, 0x0D, 0x10, 0x10, 0xF0,
-0x24, 0x6A, 0x15, 0xF2, 0x5C, 0x9A, 0x60, 0x99,
+0x24, 0x6A, 0x75, 0xF1, 0x40, 0x9A, 0x60, 0x99,
 0x6C, 0xEA, 0xC0, 0xF0, 0x05, 0x22, 0x10, 0xF0,
-0x24, 0x6C, 0x17, 0xF2, 0x08, 0x4C, 0xA4, 0x10,
+0x24, 0x6C, 0x57, 0xF1, 0x08, 0x4C, 0xA4, 0x10,
 0x30, 0xF0, 0x20, 0x6A, 0x10, 0xF0, 0x24, 0x6B,
 0xCE, 0xF4, 0x50, 0x9A, 0x61, 0xF0, 0x00, 0x6C,
-0x95, 0xF5, 0xA0, 0x9B, 0x80, 0xF4, 0x14, 0x6E,
+0xD5, 0xF4, 0xA4, 0x9B, 0x80, 0xF4, 0x14, 0x6E,
 0x35, 0x10, 0x68, 0x40, 0xD4, 0x4B, 0x4C, 0xEB,
 0x0D, 0x5B, 0x0D, 0x60, 0x30, 0xF0, 0x20, 0x6A,
 0x10, 0xF0, 0x24, 0x6B, 0xCE, 0xF4, 0x50, 0x9A,
-0x61, 0xF0, 0x00, 0x6C, 0x95, 0xF5, 0xA0, 0x9B,
+0x61, 0xF0, 0x00, 0x6C, 0xD5, 0xF4, 0xA4, 0x9B,
 0x40, 0xF4, 0x13, 0x6E, 0x23, 0x10, 0x68, 0x40,
 0xA4, 0x4B, 0x4C, 0xEB, 0x11, 0x5B, 0x0D, 0x60,
 0x30, 0xF0, 0x20, 0x6A, 0x10, 0xF0, 0x24, 0x6B,
 0xCE, 0xF4, 0x50, 0x9A, 0x61, 0xF0, 0x00, 0x6C,
-0x95, 0xF5, 0xA0, 0x9B, 0x40, 0xF4, 0x12, 0x6E,
+0xD5, 0xF4, 0xA4, 0x9B, 0x40, 0xF4, 0x12, 0x6E,
 0x11, 0x10, 0x68, 0x40, 0x92, 0x4B, 0x4C, 0xEB,
 0x3C, 0x5B, 0x11, 0x60, 0x30, 0xF0, 0x20, 0x6A,
 0x10, 0xF0, 0x24, 0x6B, 0xCE, 0xF4, 0x50, 0x9A,
-0x95, 0xF5, 0xA0, 0x9B, 0x61, 0xF0, 0x00, 0x6C,
+0xD5, 0xF4, 0xA4, 0x9B, 0x61, 0xF0, 0x00, 0x6C,
 0x00, 0xF4, 0x12, 0x6E, 0x40, 0xEA, 0x60, 0xF2,
 0x50, 0xA1, 0x2E, 0x2A, 0x0C, 0x10, 0x10, 0xF0,
-0x24, 0x6A, 0x15, 0xF2, 0x5C, 0x9A, 0x60, 0x99,
+0x24, 0x6A, 0x75, 0xF1, 0x40, 0x9A, 0x60, 0x99,
 0x6C, 0xEA, 0x72, 0x22, 0x10, 0xF0, 0x24, 0x6C,
-0x37, 0xF2, 0x18, 0x4C, 0x51, 0x10, 0x48, 0x40,
+0x77, 0xF1, 0x18, 0x4C, 0x51, 0x10, 0x48, 0x40,
 0xCF, 0x4A, 0xFF, 0x6B, 0x6C, 0xEA, 0x13, 0x5A,
-0x07, 0x60, 0x10, 0xF0, 0x24, 0x6A, 0x95, 0xF5,
-0x4C, 0x9A, 0x08, 0x93, 0x4C, 0xEB, 0x06, 0x10,
-0x10, 0xF0, 0x24, 0x6A, 0x55, 0xF2, 0x48, 0x9A,
+0x07, 0x60, 0x10, 0xF0, 0x24, 0x6A, 0xD5, 0xF4,
+0x50, 0x9A, 0x08, 0x93, 0x4C, 0xEB, 0x06, 0x10,
+0x10, 0xF0, 0x24, 0x6A, 0x95, 0xF1, 0x4C, 0x9A,
 0x08, 0x93, 0x4D, 0xEB, 0x08, 0xD3, 0x0C, 0x10,
-0x10, 0xF0, 0x24, 0x6A, 0x15, 0xF2, 0x5C, 0x9A,
+0x10, 0xF0, 0x24, 0x6A, 0x75, 0xF1, 0x40, 0x9A,
 0x60, 0x99, 0x6C, 0xEA, 0x51, 0x22, 0x10, 0xF0,
-0x24, 0x6C, 0x77, 0xF2, 0x0C, 0x4C, 0x30, 0x10,
-0x10, 0xF0, 0x24, 0x6B, 0xF5, 0xF3, 0x18, 0x4B,
+0x24, 0x6C, 0xB7, 0xF1, 0x0C, 0x4C, 0x30, 0x10,
+0x10, 0xF0, 0x24, 0x6B, 0x35, 0xF3, 0x1C, 0x4B,
 0x06, 0x92, 0xE0, 0x9B, 0x91, 0x67, 0x00, 0x6D,
 0x18, 0x6E, 0x04, 0xD2, 0x80, 0x18, 0x08, 0x1F,
 0x07, 0x93, 0x4C, 0xEB, 0x07, 0xD3, 0x60, 0xF2,
 0x50, 0xA1, 0x11, 0x2A, 0x10, 0xF0, 0x24, 0x6B,
-0xF5, 0xF3, 0x18, 0x4B, 0x08, 0x92, 0xE0, 0x9B,
+0x35, 0xF3, 0x1C, 0x4B, 0x08, 0x92, 0xE0, 0x9B,
 0x91, 0x67, 0x00, 0x6D, 0xB8, 0x6E, 0x04, 0xD2,
 0x80, 0x18, 0x08, 0x1F, 0x07, 0x93, 0x4C, 0xEB,
 0xFF, 0x6A, 0x4C, 0xEB, 0x07, 0xD3, 0x07, 0x92,
-0x13, 0x2A, 0x10, 0xF0, 0x24, 0x6A, 0x15, 0xF2,
-0x5C, 0x9A, 0x60, 0x99, 0x6C, 0xEA, 0x20, 0x22,
-0x10, 0xF0, 0x24, 0x6C, 0x97, 0xF2, 0x10, 0x4C,
-0x10, 0xF0, 0x24, 0x6D, 0x94, 0xF7, 0x08, 0x4D,
+0x13, 0x2A, 0x10, 0xF0, 0x24, 0x6A, 0x75, 0xF1,
+0x40, 0x9A, 0x60, 0x99, 0x6C, 0xEA, 0x20, 0x22,
+0x10, 0xF0, 0x24, 0x6C, 0xD7, 0xF1, 0x10, 0x4C,
+0x10, 0xF0, 0x24, 0x6D, 0xD4, 0xF6, 0x0C, 0x4D,
 0xD0, 0x67, 0x80, 0x18, 0xFE, 0x11, 0x14, 0x10,
-0x10, 0xF0, 0x24, 0x6A, 0x15, 0xF2, 0x5C, 0x9A,
+0x10, 0xF0, 0x24, 0x6A, 0x75, 0xF1, 0x40, 0x9A,
 0x60, 0x99, 0x6C, 0xEA, 0x0B, 0x22, 0x10, 0xF0,
-0x24, 0x6C, 0x10, 0xF0, 0x24, 0x6D, 0xD7, 0xF2,
-0x1C, 0x4C, 0x94, 0xF7, 0x08, 0x4D, 0xD0, 0x67,
+0x24, 0x6C, 0x10, 0xF0, 0x24, 0x6D, 0x17, 0xF2,
+0x1C, 0x4C, 0xD4, 0xF6, 0x0C, 0x4D, 0xD0, 0x67,
 0x80, 0x18, 0xFE, 0x11, 0x01, 0x6A, 0x01, 0x10,
 0x00, 0x6A, 0x0D, 0x97, 0x0C, 0x91, 0x0B, 0x90,
 0x07, 0x63, 0x00, 0xEF, 0xFA, 0x63, 0x0B, 0x62,
 0x0A, 0xD1, 0x09, 0xD0, 0xFF, 0x6A, 0xAC, 0xEA,
-0x06, 0xD2, 0x10, 0xF0, 0x24, 0x6A, 0x15, 0xF2,
-0x5C, 0x9A, 0x60, 0x9C, 0x04, 0x67, 0x6C, 0xEA,
+0x06, 0xD2, 0x10, 0xF0, 0x24, 0x6A, 0x75, 0xF1,
+0x40, 0x9A, 0x60, 0x9C, 0x04, 0x67, 0x6C, 0xEA,
 0x0A, 0x22, 0x10, 0xF0, 0x24, 0x6C, 0x10, 0xF0,
-0x24, 0x6D, 0x17, 0xF3, 0x08, 0x4C, 0xB4, 0xF7,
-0x0C, 0x4D, 0x80, 0x18, 0xFE, 0x11, 0x4B, 0xA0,
-0x13, 0x22, 0x10, 0xF0, 0x24, 0x6A, 0x15, 0xF2,
-0x5C, 0x9A, 0x60, 0x98, 0x6C, 0xEA, 0xC0, 0xF0,
+0x24, 0x6D, 0x57, 0xF2, 0x08, 0x4C, 0xF4, 0xF6,
+0x10, 0x4D, 0x80, 0x18, 0xFE, 0x11, 0x4B, 0xA0,
+0x13, 0x22, 0x10, 0xF0, 0x24, 0x6A, 0x75, 0xF1,
+0x40, 0x9A, 0x60, 0x98, 0x6C, 0xEA, 0xC0, 0xF0,
 0x13, 0x22, 0x10, 0xF0, 0x24, 0x6C, 0x10, 0xF0,
-0x24, 0x6D, 0xD7, 0xF0, 0x00, 0x4C, 0xB4, 0xF7,
-0x0C, 0x4D, 0x80, 0x18, 0xFE, 0x11, 0xC8, 0x10,
-0x10, 0xF0, 0x24, 0x6A, 0xF5, 0xF3, 0xF8, 0x9A,
+0x24, 0x6D, 0x17, 0xF0, 0x00, 0x4C, 0xF4, 0xF6,
+0x10, 0x4D, 0x80, 0x18, 0xFE, 0x11, 0xC8, 0x10,
+0x10, 0xF0, 0x24, 0x6A, 0x35, 0xF3, 0xFC, 0x9A,
 0x90, 0x67, 0x00, 0x6D, 0x18, 0x6E, 0x80, 0x18,
 0xE2, 0x1E, 0x07, 0xD2, 0x06, 0x92, 0x0F, 0x5A,
 0x48, 0x60, 0x30, 0xF0, 0x20, 0x69, 0x10, 0xF0,
-0x24, 0x6B, 0xF5, 0xF1, 0xA8, 0x9B, 0xCE, 0xF4,
+0x24, 0x6B, 0x35, 0xF1, 0xAC, 0x9B, 0xCE, 0xF4,
 0x50, 0x99, 0x01, 0xF0, 0x08, 0x6C, 0x01, 0x6E,
 0x40, 0xEA, 0xCE, 0xF4, 0x50, 0x99, 0x40, 0xF4,
 0x14, 0x6C, 0x80, 0x6D, 0x00, 0x6E, 0x40, 0xEA,
 0x10, 0xF0, 0x24, 0x6B, 0xCE, 0xF4, 0x50, 0x99,
-0x55, 0xF2, 0xA4, 0x9B, 0x81, 0xF2, 0x00, 0x6C,
+0x95, 0xF1, 0xA8, 0x9B, 0x81, 0xF2, 0x00, 0x6C,
 0x00, 0x6E, 0x40, 0xEA, 0xCE, 0xF4, 0x50, 0x99,
 0x01, 0xF0, 0x14, 0x6C, 0x1F, 0xF4, 0x00, 0x6D,
 0x0F, 0x6E, 0x40, 0xEA, 0x10, 0xF0, 0x24, 0x6A,
-0x95, 0xF5, 0x30, 0x9A, 0x07, 0x92, 0x4C, 0xE9,
+0xD5, 0xF4, 0x34, 0x9A, 0x07, 0x92, 0x4C, 0xE9,
 0x30, 0xF0, 0x21, 0x6A, 0x70, 0xF3, 0x4D, 0xA2,
 0x03, 0x22, 0x90, 0x67, 0x00, 0x6D, 0x02, 0x10,
 0x90, 0x67, 0x01, 0x6D, 0x00, 0x18, 0x7B, 0xC6,
-0x10, 0xF0, 0x24, 0x6A, 0xF5, 0xF3, 0xF8, 0x9A,
+0x10, 0xF0, 0x24, 0x6A, 0x35, 0xF3, 0xFC, 0x9A,
 0x90, 0x67, 0x00, 0x6D, 0x18, 0x6E, 0x04, 0xD1,
 0x80, 0x18, 0x08, 0x1F, 0x06, 0x95, 0x90, 0x67,
 0x22, 0x67, 0x80, 0x18, 0xA2, 0x1E, 0x43, 0x2A,
 0x71, 0x10, 0x06, 0x92, 0x24, 0x5A, 0x33, 0x61,
 0x30, 0xF0, 0x20, 0x69, 0x10, 0xF0, 0x24, 0x6B,
-0x55, 0xF2, 0xA4, 0x9B, 0xCE, 0xF4, 0x50, 0x99,
+0x95, 0xF1, 0xA8, 0x9B, 0xCE, 0xF4, 0x50, 0x99,
 0x81, 0xF2, 0x00, 0x6C, 0x01, 0x6E, 0x40, 0xEA,
 0xCE, 0xF4, 0x50, 0x99, 0x40, 0xF4, 0x14, 0x6C,
 0x80, 0x6D, 0x01, 0x6E, 0x40, 0xEA, 0x10, 0xF0,
-0x24, 0x6B, 0xCE, 0xF4, 0x50, 0x99, 0xF5, 0xF1,
-0xA8, 0x9B, 0x01, 0xF0, 0x08, 0x6C, 0x00, 0x6E,
+0x24, 0x6B, 0xCE, 0xF4, 0x50, 0x99, 0x35, 0xF1,
+0xAC, 0x9B, 0x01, 0xF0, 0x08, 0x6C, 0x00, 0x6E,
 0x40, 0xEA, 0xCE, 0xF4, 0x50, 0x99, 0x01, 0xF0,
 0x14, 0x6C, 0x1F, 0xF4, 0x00, 0x6D, 0x0F, 0x6E,
-0x40, 0xEA, 0x10, 0xF0, 0x24, 0x6A, 0x95, 0xF5,
-0x30, 0x9A, 0x07, 0x92, 0x90, 0x67, 0x02, 0x6D,
-0x4C, 0xE9, 0x10, 0xF0, 0x24, 0x6A, 0x95, 0xF5,
-0x54, 0x9A, 0x4D, 0xE9, 0xB7, 0x17, 0x10, 0xF0,
-0x24, 0x6A, 0x15, 0xF2, 0x5C, 0x9A, 0x60, 0x98,
+0x40, 0xEA, 0x10, 0xF0, 0x24, 0x6A, 0xD5, 0xF4,
+0x34, 0x9A, 0x07, 0x92, 0x90, 0x67, 0x02, 0x6D,
+0x4C, 0xE9, 0x10, 0xF0, 0x24, 0x6A, 0xD5, 0xF4,
+0x58, 0x9A, 0x4D, 0xE9, 0xB7, 0x17, 0x10, 0xF0,
+0x24, 0x6A, 0x75, 0xF1, 0x40, 0x9A, 0x60, 0x98,
 0x6C, 0xEA, 0x34, 0x22, 0x10, 0xF0, 0x24, 0x6C,
-0x77, 0xF2, 0x0C, 0x4C, 0x14, 0x10, 0x07, 0x92,
+0xB7, 0xF1, 0x0C, 0x4C, 0x14, 0x10, 0x07, 0x92,
 0x00, 0x6B, 0x01, 0x4A, 0x01, 0x22, 0x01, 0x6B,
 0xFF, 0x6A, 0x2C, 0xEA, 0x6C, 0xEA, 0x13, 0x2A,
-0x10, 0xF0, 0x24, 0x6A, 0x15, 0xF2, 0x5C, 0x9A,
+0x10, 0xF0, 0x24, 0x6A, 0x75, 0xF1, 0x40, 0x9A,
 0x60, 0x98, 0x6C, 0xEA, 0x1F, 0x22, 0x10, 0xF0,
-0x24, 0x6C, 0x37, 0xF3, 0x08, 0x4C, 0x06, 0x96,
-0x10, 0xF0, 0x24, 0x6D, 0xB4, 0xF7, 0x0C, 0x4D,
+0x24, 0x6C, 0x77, 0xF2, 0x08, 0x4C, 0x06, 0x96,
+0x10, 0xF0, 0x24, 0x6D, 0xF4, 0xF6, 0x10, 0x4D,
 0x80, 0x18, 0xFE, 0x11, 0x13, 0x10, 0x10, 0xF0,
-0x24, 0x6A, 0x15, 0xF2, 0x5C, 0x9A, 0x60, 0x98,
+0x24, 0x6A, 0x75, 0xF1, 0x40, 0x9A, 0x60, 0x98,
 0x6C, 0xEA, 0x0E, 0x22, 0x06, 0x96, 0x10, 0xF0,
-0x24, 0x6C, 0x10, 0xF0, 0x24, 0x6D, 0x77, 0xF3,
-0x14, 0x4C, 0xB4, 0xF7, 0x0C, 0x4D, 0x80, 0x18,
+0x24, 0x6C, 0x10, 0xF0, 0x24, 0x6D, 0xB7, 0xF2,
+0x14, 0x4C, 0xF4, 0xF6, 0x10, 0x4D, 0x80, 0x18,
 0xFE, 0x11, 0x02, 0x10, 0x00, 0x6A, 0x01, 0x10,
 0x01, 0x6A, 0x0B, 0x97, 0x0A, 0x91, 0x09, 0x90,
 0x06, 0x63, 0x00, 0xEF, 0xFB, 0x63, 0x09, 0x62,
@@ -14366,8 +14341,8 @@ u8 array_mp_8821c_fw_ap[] = {
 0x2F, 0xF5, 0x18, 0x4A, 0x20, 0xF6, 0x70, 0xC2,
 0xFF, 0x6D, 0xFF, 0x4B, 0xAC, 0xEB, 0x00, 0x6C,
 0x07, 0x5B, 0x20, 0xF6, 0x93, 0xC2, 0x08, 0x60,
-0x10, 0xF0, 0x24, 0x6A, 0x68, 0x33, 0x15, 0xF0,
-0x0C, 0x4A, 0x69, 0xE2, 0x40, 0x9A, 0x00, 0xEA,
+0x10, 0xF0, 0x24, 0x6A, 0x68, 0x33, 0x54, 0xF7,
+0x10, 0x4A, 0x69, 0xE2, 0x40, 0x9A, 0x00, 0xEA,
 0x01, 0x6B, 0x20, 0xF6, 0x71, 0xC2, 0x20, 0xF6,
 0x92, 0xC2, 0x0A, 0x10, 0x30, 0xF0, 0x20, 0x6A,
 0x2F, 0xF5, 0x18, 0x4A, 0x01, 0x6B, 0x20, 0xF6,
@@ -14396,27 +14371,27 @@ u8 array_mp_8821c_fw_ap[] = {
 0x02, 0x2B, 0x01, 0x6B, 0x6E, 0xE9, 0x05, 0x2A,
 0x3B, 0x10, 0x01, 0x6A, 0x4E, 0xE9, 0x04, 0xD2,
 0x02, 0x10, 0x00, 0x6A, 0x04, 0xD2, 0x10, 0xF0,
-0x24, 0x6B, 0x30, 0xF0, 0x20, 0x68, 0x95, 0xF5,
-0xB8, 0x9B, 0xCE, 0xF4, 0x50, 0x98, 0x4C, 0x6C,
+0x24, 0x6B, 0x30, 0xF0, 0x20, 0x68, 0xD5, 0xF4,
+0xBC, 0x9B, 0xCE, 0xF4, 0x50, 0x98, 0x4C, 0x6C,
 0x02, 0x6E, 0x40, 0xEA, 0x04, 0x93, 0x14, 0x2B,
 0xCE, 0xF4, 0x50, 0x98, 0xA1, 0xF4, 0x14, 0x6C,
 0xFF, 0x6D, 0x77, 0x6E, 0x40, 0xEA, 0x01, 0x59,
 0x38, 0x67, 0x10, 0xF0, 0x24, 0x6B, 0x02, 0x6E,
 0xCE, 0xF4, 0x50, 0x98, 0xA1, 0xF4, 0x14, 0x6C,
-0xF5, 0xF1, 0xB0, 0x9B, 0x3B, 0xE6, 0x12, 0x10,
+0x35, 0xF1, 0xB4, 0x9B, 0x3B, 0xE6, 0x12, 0x10,
 0xCE, 0xF4, 0x50, 0x98, 0xA1, 0xF4, 0x14, 0x6C,
 0xFF, 0x6D, 0x66, 0x6E, 0x40, 0xEA, 0x10, 0xF0,
 0x24, 0x6B, 0x01, 0x59, 0xCE, 0xF4, 0x50, 0x98,
-0xF5, 0xF1, 0xB0, 0x9B, 0xD8, 0x67, 0xA1, 0xF4,
+0x35, 0xF1, 0xB4, 0x9B, 0xD8, 0x67, 0xA1, 0xF4,
 0x14, 0x6C, 0x01, 0x4E, 0x40, 0xEA, 0x06, 0x10,
 0x30, 0xF0, 0x21, 0x6A, 0x70, 0xF3, 0x4D, 0xA2,
 0xC0, 0x22, 0xC3, 0x17, 0x09, 0x97, 0x08, 0x91,
 0x07, 0x90, 0x05, 0x63, 0x00, 0xEF, 0x00, 0x65,
 0xFF, 0x6A, 0x4C, 0xEC, 0x0F, 0x5C, 0x09, 0x60,
-0x10, 0xF0, 0x24, 0x6A, 0x95, 0xF5, 0x7C, 0x9A,
+0x10, 0xF0, 0x24, 0x6A, 0xF5, 0xF4, 0x60, 0x9A,
 0xFC, 0x6A, 0x80, 0xA3, 0x8C, 0xEA, 0x40, 0xC3,
 0x20, 0xE8, 0x24, 0x5C, 0x0A, 0x61, 0x10, 0xF0,
-0x24, 0x6B, 0x95, 0xF5, 0x9C, 0x9B, 0x03, 0x6D,
+0x24, 0x6B, 0xF5, 0xF4, 0x80, 0x9B, 0x03, 0x6D,
 0x60, 0xA4, 0x4C, 0xEB, 0xAD, 0xEB, 0x4C, 0xEB,
 0x60, 0xC4, 0x20, 0xE8, 0x10, 0xF0, 0x21, 0x6A,
 0x84, 0xF4, 0x08, 0x4A, 0x30, 0xF0, 0x20, 0x6B,
@@ -14449,23 +14424,23 @@ u8 array_mp_8821c_fw_ap[] = {
 0xAE, 0xF6, 0x5C, 0xDB, 0x10, 0xF0, 0x21, 0x6A,
 0xC6, 0xF1, 0x0C, 0x4A, 0x30, 0xF0, 0x20, 0x6B,
 0xCE, 0xF6, 0x40, 0xDB, 0x20, 0xE8, 0x00, 0x65,
-0xED, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
+0x99, 0x45, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
 };
 
-u32 array_length_mp_8821c_fw_ap = 115416;
+u32 array_length_mp_8821c_fw_ap = 115224;
 
 #endif /*defined(CONFIG_AP_WOWLAN) || (DM_ODM_SUPPORT_TYPE & (ODM_AP))*/
 
 #if (DM_ODM_SUPPORT_TYPE & (ODM_WIN)) || (DM_ODM_SUPPORT_TYPE & (ODM_CE))
 
 u8 array_mp_8821c_fw_nic[] = {
-0x21, 0x88, 0x00, 0x00, 0x18, 0x00, 0x08, 0x00,
-0x0C, 0xBC, 0x11, 0xA2, 0x00, 0x00, 0x00, 0x00,
-0x01, 0x0C, 0x12, 0x0D, 0xE4, 0x07, 0x00, 0x00,
+0x21, 0x88, 0x00, 0x00, 0x18, 0x00, 0x05, 0x00,
+0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00,
+0x09, 0x06, 0x0F, 0x12, 0xE3, 0x07, 0x00, 0x00,
 0x18, 0x00, 0x00, 0x00, 0x0C, 0x00, 0x00, 0x00,
 0x00, 0x00, 0x20, 0x80, 0xE8, 0x7C, 0x00, 0x00,
 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00,
-0x98, 0xF5, 0x00, 0x00, 0x10, 0xAC, 0x00, 0x00,
+0x58, 0xF1, 0x00, 0x00, 0x10, 0xAC, 0x00, 0x00,
 0x00, 0x00, 0x10, 0x80, 0x00, 0x00, 0x03, 0x80,
 0x00, 0x00, 0x04, 0x04, 0x08, 0x08, 0x08, 0x08,
 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C,
@@ -14516,7 +14491,7 @@ u8 array_mp_8821c_fw_nic[] = {
 0x01, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00,
 0x00, 0x01, 0x10, 0x00, 0x01, 0x00, 0x03, 0x80,
 0x9D, 0x01, 0x03, 0x80, 0x9D, 0x01, 0x03, 0x80,
-0x2D, 0x50, 0x03, 0x80, 0x00, 0x00, 0x00, 0x00,
+0xE5, 0x4F, 0x03, 0x80, 0x00, 0x00, 0x00, 0x00,
 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
@@ -18312,7 +18287,7 @@ u8 array_mp_8821c_fw_nic[] = {
 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-0xDD, 0x4F, 0x03, 0x80, 0x01, 0x00, 0x00, 0x00,
+0x95, 0x4F, 0x03, 0x80, 0x01, 0x00, 0x00, 0x00,
 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
@@ -18320,7 +18295,7 @@ u8 array_mp_8821c_fw_nic[] = {
 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-0x98, 0x83, 0x20, 0x80, 0x22, 0x05, 0x50, 0x05,
+0x94, 0x83, 0x20, 0x80, 0x22, 0x05, 0x50, 0x05,
 0x51, 0x05, 0x1A, 0x15, 0x08, 0x08, 0x0C, 0x09,
 0x00, 0x0C, 0xB0, 0x0C, 0xB4, 0x0C, 0xBC, 0x0C,
 0x90, 0x19, 0xA4, 0x09, 0x04, 0x0A, 0x00, 0x0B,
@@ -18464,7 +18439,7 @@ u8 array_mp_8821c_fw_nic[] = {
 0x18, 0x00, 0x00, 0x00, 0x00, 0x83, 0x01, 0x06,
 0x80, 0x03, 0x00, 0x00, 0x00, 0x00, 0x70, 0xE0,
 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-0x16, 0x5B, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x9A, 0x44, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
 0x30, 0xF0, 0x21, 0x6C, 0x18, 0xF0, 0x00, 0x4C,
 0xBC, 0x65, 0x1F, 0xF7, 0x00, 0x6C, 0x8C, 0xB9,
 0x00, 0x65, 0x00, 0x65, 0x00, 0x65, 0x77, 0xF0,
@@ -18481,8 +18456,8 @@ u8 array_mp_8821c_fw_nic[] = {
 0x08, 0x4C, 0x00, 0x6E, 0x30, 0xF0, 0x20, 0x6F,
 0x2F, 0xF0, 0x08, 0x4F, 0xC0, 0xDC, 0x04, 0x4C,
 0xE3, 0xEC, 0xB8, 0x67, 0xFB, 0x2D, 0x30, 0xF0,
-0x21, 0x6C, 0x90, 0xF3, 0x18, 0x4C, 0x00, 0x6E,
-0x30, 0xF0, 0x21, 0x6F, 0xF0, 0xF4, 0x10, 0x4F,
+0x21, 0x6C, 0x90, 0xF3, 0x14, 0x4C, 0x00, 0x6E,
+0x30, 0xF0, 0x21, 0x6F, 0xF0, 0xF4, 0x00, 0x4F,
 0xC0, 0xDC, 0x04, 0x4C, 0xE3, 0xEC, 0xB8, 0x67,
 0xFB, 0x2D, 0x30, 0xF0, 0x21, 0x6C, 0x15, 0xF0,
 0x00, 0x4C, 0x00, 0x6E, 0x30, 0xF0, 0x21, 0x6F,
@@ -18490,7 +18465,7 @@ u8 array_mp_8821c_fw_nic[] = {
 0xE3, 0xEC, 0xB8, 0x67, 0xFB, 0x2D, 0x10, 0xF0,
 0x23, 0x6C, 0xC0, 0xF0, 0x01, 0x4C, 0x00, 0xEC,
 0xFD, 0x63, 0x05, 0x62, 0x04, 0xD0, 0x10, 0xF0,
-0x24, 0x6B, 0xBC, 0xF2, 0x70, 0x9B, 0x10, 0xF0,
+0x24, 0x6B, 0x9B, 0xF6, 0x6C, 0x9B, 0x10, 0xF0,
 0x23, 0x6A, 0xC0, 0xF0, 0x01, 0x4A, 0x40, 0xDB,
 0x00, 0x1C, 0x94, 0x00, 0x80, 0x18, 0x20, 0x07,
 0x80, 0x18, 0xFE, 0x05, 0x80, 0x18, 0x20, 0x06,
@@ -18505,13 +18480,13 @@ u8 array_mp_8821c_fw_nic[] = {
 0x30, 0xF0, 0x20, 0x6A, 0xEE, 0xF7, 0x50, 0x9A,
 0x30, 0xF0, 0x20, 0x6C, 0x6F, 0xF0, 0x08, 0x4C,
 0x01, 0x6D, 0x40, 0xEA, 0x30, 0xF0, 0x21, 0x6B,
-0xF0, 0xF4, 0x44, 0xDB, 0x30, 0xF0, 0x20, 0x6C,
+0xD0, 0xF4, 0x54, 0xDB, 0x30, 0xF0, 0x20, 0x6C,
 0x30, 0xF0, 0x21, 0x6A, 0x2F, 0xF0, 0x08, 0x4C,
 0x15, 0xF4, 0x00, 0x4A, 0x43, 0xDC, 0xCE, 0xF7,
 0x40, 0x98, 0x00, 0x6D, 0x40, 0xEA, 0x30, 0xF0,
-0x21, 0x6B, 0xD0, 0xF4, 0x5C, 0xDB, 0x00, 0x18,
-0xF0, 0xE0, 0x10, 0xF0, 0x24, 0x6A, 0x9C, 0xF4,
-0x60, 0x9A, 0xFF, 0xF7, 0x1F, 0x6C, 0x10, 0xF0,
+0x21, 0x6B, 0xD0, 0xF4, 0x4C, 0xDB, 0x00, 0x18,
+0x9A, 0xE0, 0x10, 0xF0, 0x24, 0x6A, 0x5C, 0xF0,
+0x7C, 0x9A, 0xFF, 0xF7, 0x1F, 0x6C, 0x10, 0xF0,
 0x00, 0x6D, 0x40, 0xAB, 0xAB, 0xED, 0x8C, 0xEA,
 0xAD, 0xEA, 0x8C, 0xEA, 0x40, 0xCB, 0x30, 0xF0,
 0x20, 0x6A, 0xAE, 0xF7, 0x58, 0x9A, 0x40, 0xEA,
@@ -18524,7 +18499,7 @@ u8 array_mp_8821c_fw_nic[] = {
 0x60, 0xAA, 0xBF, 0xF6, 0x1A, 0x6A, 0x6A, 0xEA,
 0x31, 0x60, 0x77, 0xF0, 0x24, 0x6A, 0xA0, 0xF1,
 0x1C, 0x4A, 0x1D, 0xF4, 0x00, 0x6B, 0x60, 0xDA,
-0x10, 0xF0, 0x23, 0x6A, 0x24, 0xF0, 0x1D, 0x4A,
+0x10, 0xF0, 0x23, 0x6A, 0x24, 0xF0, 0x19, 0x4A,
 0x00, 0xEA, 0x00, 0xF0, 0x20, 0x6A, 0x1F, 0xF7,
 0x00, 0x6A, 0x4C, 0xEB, 0x4C, 0xB8, 0x00, 0x65,
 0x6C, 0xEA, 0x42, 0x32, 0x30, 0xF0, 0x20, 0x6B,
@@ -18561,7 +18536,7 @@ u8 array_mp_8821c_fw_nic[] = {
 0x80, 0x44, 0x62, 0xEC, 0x0D, 0x60, 0x77, 0xF0,
 0x24, 0x6C, 0xA0, 0xF1, 0x1C, 0x4C, 0x1D, 0xF4,
 0x01, 0x6B, 0x60, 0xDC, 0x10, 0xF0, 0x23, 0x6C,
-0x24, 0xF0, 0x1D, 0x4C, 0x00, 0xEC, 0x00, 0x65,
+0x24, 0xF0, 0x19, 0x4C, 0x00, 0xEC, 0x00, 0x65,
 0x30, 0xF0, 0x20, 0x6B, 0x2D, 0xF1, 0x18, 0x4B,
 0x41, 0x9B, 0x40, 0xDB, 0x89, 0x9A, 0xBC, 0x65,
 0x7D, 0x67, 0xDF, 0xF7, 0x00, 0x03, 0x4C, 0xB8,
@@ -18609,7 +18584,7 @@ u8 array_mp_8821c_fw_nic[] = {
 0x80, 0x44, 0x62, 0xEC, 0x0D, 0x60, 0x77, 0xF0,
 0x24, 0x6C, 0xA0, 0xF1, 0x1C, 0x4C, 0x1D, 0xF4,
 0x01, 0x6B, 0x60, 0xDC, 0x10, 0xF0, 0x23, 0x6C,
-0x24, 0xF0, 0x1D, 0x4C, 0x00, 0xEC, 0x00, 0x65,
+0x24, 0xF0, 0x19, 0x4C, 0x00, 0xEC, 0x00, 0x65,
 0x40, 0x9A, 0x30, 0xF0, 0x20, 0x6C, 0xAD, 0xF1,
 0x08, 0x4C, 0x00, 0xF4, 0x00, 0x4C, 0xBC, 0x65,
 0x82, 0x67, 0x40, 0xEA, 0x30, 0xF0, 0x20, 0x6C,
@@ -18652,411 +18627,411 @@ u8 array_mp_8821c_fw_nic[] = {
 0x00, 0xEF, 0x00, 0x65, 0xFD, 0x63, 0x05, 0x62,
 0x00, 0x18, 0x75, 0xC1, 0x05, 0x97, 0x03, 0x63,
 0x00, 0xEF, 0x00, 0x65, 0x10, 0xF0, 0x24, 0x6B,
-0xBC, 0xF2, 0x70, 0x9B, 0x10, 0xF0, 0x23, 0x6A,
+0x9B, 0xF6, 0x6C, 0x9B, 0x10, 0xF0, 0x23, 0x6A,
 0xC0, 0xF5, 0x15, 0x4A, 0x40, 0xDB, 0x01, 0x4A,
 0x40, 0xDB, 0x20, 0xE8, 0xFC, 0x63, 0x07, 0x62,
 0x06, 0xD1, 0x05, 0xD0, 0x10, 0xF0, 0x24, 0x6A,
-0xBC, 0xF2, 0x30, 0x9A, 0x10, 0xF0, 0x23, 0x68,
+0x9B, 0xF6, 0x2C, 0x9A, 0x10, 0xF0, 0x23, 0x68,
 0xE0, 0xF5, 0x0D, 0x48, 0x00, 0xD9, 0x30, 0xF0,
 0x20, 0x6A, 0xCE, 0xF3, 0x40, 0x9A, 0x01, 0x48,
 0x40, 0xEA, 0x00, 0xD9, 0x07, 0x97, 0x06, 0x91,
 0x05, 0x90, 0x04, 0x63, 0x00, 0xEF, 0x00, 0x65,
-0x10, 0xF0, 0x24, 0x6B, 0xBC, 0xF2, 0x70, 0x9B,
+0x10, 0xF0, 0x24, 0x6B, 0x9B, 0xF6, 0x6C, 0x9B,
 0x10, 0xF0, 0x23, 0x6A, 0x20, 0xF6, 0x01, 0x4A,
-0x40, 0xDB, 0x10, 0xF0, 0x24, 0x6A, 0xBD, 0xF0,
-0x40, 0x9A, 0xC0, 0x9A, 0x10, 0xF0, 0x24, 0x6A,
-0xBD, 0xF0, 0x44, 0x9A, 0xA0, 0x9A, 0x10, 0xF0,
-0x24, 0x6A, 0xBD, 0xF0, 0x48, 0x9A, 0x80, 0x9A,
-0x10, 0xF0, 0x24, 0x6A, 0xBD, 0xF0, 0x4C, 0x9A,
+0x40, 0xDB, 0x10, 0xF0, 0x24, 0x6A, 0x7C, 0xF4,
+0x58, 0x9A, 0xC0, 0x9A, 0x10, 0xF0, 0x24, 0x6A,
+0x7C, 0xF4, 0x5C, 0x9A, 0xA0, 0x9A, 0x10, 0xF0,
+0x24, 0x6A, 0x9C, 0xF4, 0x40, 0x9A, 0x80, 0x9A,
+0x10, 0xF0, 0x24, 0x6A, 0x9C, 0xF4, 0x44, 0x9A,
 0x40, 0x9A, 0x33, 0x22, 0x10, 0xF0, 0x24, 0x6A,
-0x7C, 0xF3, 0x6C, 0x9A, 0x10, 0xF0, 0x24, 0x6F,
-0x3C, 0xF4, 0xEC, 0x9F, 0x40, 0x9B, 0xED, 0xEA,
-0x40, 0xDB, 0x10, 0xF0, 0x24, 0x6A, 0xBD, 0xF0,
-0x50, 0x9A, 0xFF, 0x6B, 0xC0, 0xDA, 0x10, 0xF0,
-0x24, 0x6A, 0xBD, 0xF0, 0x54, 0x9A, 0xA0, 0xDA,
-0x10, 0xF0, 0x24, 0x6A, 0xBD, 0xF0, 0x58, 0x9A,
+0x3B, 0xF7, 0x6C, 0x9A, 0x10, 0xF0, 0x24, 0x6F,
+0x1C, 0xF0, 0xE8, 0x9F, 0x40, 0x9B, 0xED, 0xEA,
+0x40, 0xDB, 0x10, 0xF0, 0x24, 0x6A, 0x9C, 0xF4,
+0x48, 0x9A, 0xFF, 0x6B, 0xC0, 0xDA, 0x10, 0xF0,
+0x24, 0x6A, 0x9C, 0xF4, 0x4C, 0x9A, 0xA0, 0xDA,
+0x10, 0xF0, 0x24, 0x6A, 0x9C, 0xF4, 0x50, 0x9A,
 0x10, 0x6D, 0xAB, 0xED, 0x80, 0xDA, 0x10, 0xF0,
-0x24, 0x6A, 0xBD, 0xF0, 0x9C, 0x9A, 0x40, 0xA4,
+0x24, 0x6A, 0x9C, 0xF4, 0x94, 0x9A, 0x40, 0xA4,
 0x6C, 0xEA, 0xAC, 0xEA, 0x02, 0x6D, 0xAD, 0xEA,
 0x6C, 0xEA, 0x40, 0xC4, 0x10, 0xF0, 0x24, 0x6A,
-0x5C, 0xF4, 0x80, 0x9A, 0x80, 0x6D, 0xAB, 0xED,
+0x1C, 0xF0, 0x9C, 0x9A, 0x80, 0x6D, 0xAB, 0xED,
 0x40, 0xA4, 0x6C, 0xEA, 0xAE, 0xEA, 0x6C, 0xEA,
-0x40, 0xC4, 0x10, 0xF0, 0x24, 0x6B, 0xBC, 0xF2,
-0x70, 0x9B, 0x10, 0xF0, 0x23, 0x6A, 0x20, 0xF6,
+0x40, 0xC4, 0x10, 0xF0, 0x24, 0x6B, 0x9B, 0xF6,
+0x6C, 0x9B, 0x10, 0xF0, 0x23, 0x6A, 0x20, 0xF6,
 0x02, 0x4A, 0x40, 0xDB, 0x20, 0xE8, 0x00, 0x65,
 0xFD, 0x63, 0x05, 0x62, 0x10, 0xF0, 0x24, 0x6B,
-0xBC, 0xF2, 0x70, 0x9B, 0x10, 0xF0, 0x23, 0x6A,
+0x9B, 0xF6, 0x6C, 0x9B, 0x10, 0xF0, 0x23, 0x6A,
 0xC0, 0xF6, 0x19, 0x4A, 0x40, 0xDB, 0x00, 0x18,
-0x62, 0xE3, 0x30, 0xF0, 0x20, 0x6A, 0x00, 0xF2,
+0x0C, 0xE3, 0x30, 0xF0, 0x20, 0x6A, 0x00, 0xF2,
 0x6C, 0x9A, 0x6C, 0x23, 0x01, 0x6A, 0x6C, 0xEA,
-0x02, 0x22, 0x00, 0x18, 0x93, 0xE3, 0x30, 0xF0,
+0x02, 0x22, 0x00, 0x18, 0x3D, 0xE3, 0x30, 0xF0,
 0x20, 0x6A, 0x00, 0xF2, 0x4C, 0x9A, 0x02, 0x6B,
-0x6C, 0xEA, 0x02, 0x22, 0x00, 0x18, 0x7B, 0xE6,
+0x6C, 0xEA, 0x02, 0x22, 0x00, 0x18, 0x1E, 0xE6,
 0x30, 0xF0, 0x20, 0x6A, 0x00, 0xF2, 0x4C, 0x9A,
 0x04, 0x6B, 0x6C, 0xEA, 0x02, 0x22, 0x00, 0x18,
-0x62, 0xE6, 0x30, 0xF0, 0x20, 0x6A, 0x00, 0xF2,
+0x05, 0xE6, 0x30, 0xF0, 0x20, 0x6A, 0x00, 0xF2,
 0x4C, 0x9A, 0x08, 0x6B, 0x6C, 0xEA, 0x02, 0x22,
-0x00, 0x18, 0x94, 0xE3, 0x30, 0xF0, 0x20, 0x6A,
+0x00, 0x18, 0x3E, 0xE3, 0x30, 0xF0, 0x20, 0x6A,
 0x00, 0xF2, 0x4C, 0x9A, 0x10, 0x6B, 0x6C, 0xEA,
-0x02, 0x22, 0x00, 0x18, 0x95, 0xE3, 0x30, 0xF0,
+0x02, 0x22, 0x00, 0x18, 0x3F, 0xE3, 0x30, 0xF0,
 0x20, 0x6A, 0x00, 0xF2, 0x4C, 0x9A, 0x20, 0x6B,
-0x6C, 0xEA, 0x02, 0x22, 0x00, 0x18, 0x96, 0xE3,
+0x6C, 0xEA, 0x02, 0x22, 0x00, 0x18, 0x40, 0xE3,
 0x30, 0xF0, 0x20, 0x6A, 0x00, 0xF2, 0x4C, 0x9A,
 0x40, 0x6B, 0x6C, 0xEA, 0x02, 0x22, 0x00, 0x18,
-0x97, 0xE3, 0x30, 0xF0, 0x20, 0x6A, 0x00, 0xF2,
+0x41, 0xE3, 0x30, 0xF0, 0x20, 0x6A, 0x00, 0xF2,
 0x4C, 0x9A, 0x80, 0x6B, 0x6C, 0xEA, 0x02, 0x22,
-0x00, 0x18, 0x5E, 0xE6, 0x30, 0xF0, 0x20, 0x6B,
+0x00, 0x18, 0x01, 0xE6, 0x30, 0xF0, 0x20, 0x6B,
 0x00, 0xF2, 0x6C, 0x9B, 0xFF, 0x6A, 0x01, 0x4A,
-0x6C, 0xEA, 0x02, 0x22, 0x00, 0x18, 0x56, 0xE6,
+0x6C, 0xEA, 0x02, 0x22, 0x00, 0x18, 0xF9, 0xE5,
 0x30, 0xF0, 0x20, 0x6B, 0x00, 0xF2, 0x6C, 0x9B,
 0x04, 0xF0, 0x00, 0x6A, 0x6C, 0xEA, 0x02, 0x22,
-0x00, 0x18, 0x98, 0xE3, 0x30, 0xF0, 0x20, 0x6B,
+0x00, 0x18, 0x42, 0xE3, 0x30, 0xF0, 0x20, 0x6B,
 0x00, 0xF2, 0x6C, 0x9B, 0x08, 0xF0, 0x00, 0x6A,
-0x6C, 0xEA, 0x02, 0x22, 0x00, 0x18, 0x99, 0xE3,
+0x6C, 0xEA, 0x02, 0x22, 0x00, 0x18, 0x43, 0xE3,
 0x30, 0xF0, 0x20, 0x6B, 0x00, 0xF2, 0x6C, 0x9B,
 0x10, 0xF0, 0x00, 0x6A, 0x6C, 0xEA, 0x02, 0x22,
-0x00, 0x18, 0x9A, 0xE3, 0x30, 0xF0, 0x20, 0x6A,
+0x00, 0x18, 0x44, 0xE3, 0x30, 0xF0, 0x20, 0x6A,
 0x00, 0xF2, 0x70, 0x9A, 0xA0, 0xF1, 0x08, 0x23,
 0x01, 0x6A, 0x6C, 0xEA, 0x02, 0x22, 0x00, 0x18,
-0x35, 0xE6, 0x30, 0xF0, 0x20, 0x6A, 0x00, 0xF2,
+0xDF, 0xE5, 0x30, 0xF0, 0x20, 0x6A, 0x00, 0xF2,
 0x50, 0x9A, 0x02, 0x6B, 0x6C, 0xEA, 0x02, 0x22,
-0x00, 0x18, 0x9B, 0xE3, 0x30, 0xF0, 0x20, 0x6A,
+0x00, 0x18, 0x45, 0xE3, 0x30, 0xF0, 0x20, 0x6A,
 0x00, 0xF2, 0x50, 0x9A, 0x04, 0x6B, 0x6C, 0xEA,
-0x03, 0x22, 0x00, 0x6C, 0x00, 0x18, 0x4A, 0xE4,
+0x03, 0x22, 0x00, 0x6C, 0x00, 0x18, 0xF4, 0xE3,
 0x10, 0xF0, 0x24, 0x6A, 0x30, 0xF0, 0x20, 0x6B,
-0x5C, 0xF3, 0x50, 0x9A, 0x00, 0xF2, 0x74, 0x9B,
+0x5B, 0xF7, 0x40, 0x9A, 0x00, 0xF2, 0x74, 0x9B,
 0x6C, 0xEA, 0x03, 0x22, 0x01, 0x6C, 0x00, 0x18,
-0x4A, 0xE4, 0x10, 0xF0, 0x24, 0x6A, 0x30, 0xF0,
-0x20, 0x6B, 0x3C, 0xF4, 0x4C, 0x9A, 0x00, 0xF2,
+0xF4, 0xE3, 0x10, 0xF0, 0x24, 0x6A, 0x30, 0xF0,
+0x20, 0x6B, 0x1C, 0xF0, 0x48, 0x9A, 0x00, 0xF2,
 0x74, 0x9B, 0x6C, 0xEA, 0x03, 0x22, 0x02, 0x6C,
-0x00, 0x18, 0x4A, 0xE4, 0x10, 0xF0, 0x24, 0x6A,
-0x30, 0xF0, 0x20, 0x6B, 0xFC, 0xF3, 0x44, 0x9A,
+0x00, 0x18, 0xF4, 0xE3, 0x10, 0xF0, 0x24, 0x6A,
+0x30, 0xF0, 0x20, 0x6B, 0xDB, 0xF7, 0x40, 0x9A,
 0x00, 0xF2, 0x74, 0x9B, 0x6C, 0xEA, 0x03, 0x22,
-0x03, 0x6C, 0x00, 0x18, 0x4A, 0xE4, 0x10, 0xF0,
-0x24, 0x6A, 0x30, 0xF0, 0x20, 0x6B, 0x1C, 0xF3,
-0x4C, 0x9A, 0x00, 0xF2, 0x74, 0x9B, 0x6C, 0xEA,
-0x03, 0x22, 0x04, 0x6C, 0x00, 0x18, 0x4A, 0xE4,
+0x03, 0x6C, 0x00, 0x18, 0xF4, 0xE3, 0x10, 0xF0,
+0x24, 0x6A, 0x30, 0xF0, 0x20, 0x6B, 0xFB, 0xF6,
+0x48, 0x9A, 0x00, 0xF2, 0x74, 0x9B, 0x6C, 0xEA,
+0x03, 0x22, 0x04, 0x6C, 0x00, 0x18, 0xF4, 0xE3,
 0x30, 0xF0, 0x20, 0x6A, 0x00, 0xF2, 0x50, 0x9A,
 0x08, 0x6B, 0x6C, 0xEA, 0x03, 0x22, 0x00, 0x6C,
-0x00, 0x18, 0x9C, 0xE3, 0x10, 0xF0, 0x24, 0x6A,
-0x30, 0xF0, 0x20, 0x6B, 0x5C, 0xF3, 0x54, 0x9A,
+0x00, 0x18, 0x46, 0xE3, 0x10, 0xF0, 0x24, 0x6A,
+0x30, 0xF0, 0x20, 0x6B, 0x5B, 0xF7, 0x44, 0x9A,
 0x00, 0xF2, 0x74, 0x9B, 0x6C, 0xEA, 0x03, 0x22,
-0x01, 0x6C, 0x00, 0x18, 0x9C, 0xE3, 0x10, 0xF0,
-0x24, 0x6A, 0x30, 0xF0, 0x20, 0x6B, 0xDD, 0xF0,
-0x40, 0x9A, 0x00, 0xF2, 0x74, 0x9B, 0x6C, 0xEA,
-0x03, 0x22, 0x02, 0x6C, 0x00, 0x18, 0x9C, 0xE3,
+0x01, 0x6C, 0x00, 0x18, 0x46, 0xE3, 0x10, 0xF0,
+0x24, 0x6A, 0x30, 0xF0, 0x20, 0x6B, 0x9C, 0xF4,
+0x58, 0x9A, 0x00, 0xF2, 0x74, 0x9B, 0x6C, 0xEA,
+0x03, 0x22, 0x02, 0x6C, 0x00, 0x18, 0x46, 0xE3,
 0x10, 0xF0, 0x24, 0x6A, 0x30, 0xF0, 0x20, 0x6B,
-0x3C, 0xF4, 0x5C, 0x9A, 0x00, 0xF2, 0x74, 0x9B,
+0x1C, 0xF0, 0x58, 0x9A, 0x00, 0xF2, 0x74, 0x9B,
 0x6C, 0xEA, 0x03, 0x22, 0x03, 0x6C, 0x00, 0x18,
-0x9C, 0xE3, 0x10, 0xF0, 0x24, 0x6A, 0x30, 0xF0,
-0x20, 0x6B, 0x1C, 0xF3, 0x50, 0x9A, 0x00, 0xF2,
+0x46, 0xE3, 0x10, 0xF0, 0x24, 0x6A, 0x30, 0xF0,
+0x20, 0x6B, 0xFB, 0xF6, 0x4C, 0x9A, 0x00, 0xF2,
 0x74, 0x9B, 0x6C, 0xEA, 0x03, 0x22, 0x04, 0x6C,
-0x00, 0x18, 0x9C, 0xE3, 0x30, 0xF0, 0x20, 0x6A,
+0x00, 0x18, 0x46, 0xE3, 0x30, 0xF0, 0x20, 0x6A,
 0x00, 0xF2, 0x50, 0x9A, 0x10, 0x6B, 0x6C, 0xEA,
-0x03, 0x22, 0x00, 0x6C, 0x00, 0x18, 0xA2, 0xE3,
+0x03, 0x22, 0x00, 0x6C, 0x00, 0x18, 0x4C, 0xE3,
 0x10, 0xF0, 0x24, 0x6A, 0x30, 0xF0, 0x20, 0x6B,
-0x5C, 0xF3, 0x58, 0x9A, 0x00, 0xF2, 0x74, 0x9B,
+0x5B, 0xF7, 0x48, 0x9A, 0x00, 0xF2, 0x74, 0x9B,
 0x6C, 0xEA, 0x03, 0x22, 0x01, 0x6C, 0x00, 0x18,
-0xA2, 0xE3, 0x10, 0xF0, 0x24, 0x6A, 0x30, 0xF0,
-0x20, 0x6B, 0x7C, 0xF3, 0x50, 0x9A, 0x00, 0xF2,
+0x4C, 0xE3, 0x10, 0xF0, 0x24, 0x6A, 0x30, 0xF0,
+0x20, 0x6B, 0x3B, 0xF7, 0x50, 0x9A, 0x00, 0xF2,
 0x74, 0x9B, 0x6C, 0xEA, 0x03, 0x22, 0x02, 0x6C,
-0x00, 0x18, 0xA2, 0xE3, 0x10, 0xF0, 0x24, 0x6A,
-0x30, 0xF0, 0x20, 0x6B, 0x5C, 0xF4, 0x5C, 0x9A,
+0x00, 0x18, 0x4C, 0xE3, 0x10, 0xF0, 0x24, 0x6A,
+0x30, 0xF0, 0x20, 0x6B, 0x3C, 0xF0, 0x58, 0x9A,
 0x00, 0xF2, 0x74, 0x9B, 0x6C, 0xEA, 0x03, 0x22,
-0x03, 0x6C, 0x00, 0x18, 0xA2, 0xE3, 0x10, 0xF0,
-0x24, 0x6A, 0x30, 0xF0, 0x20, 0x6B, 0x1C, 0xF3,
-0x58, 0x9A, 0x00, 0xF2, 0x74, 0x9B, 0x6C, 0xEA,
-0x03, 0x22, 0x04, 0x6C, 0x00, 0x18, 0xA2, 0xE3,
+0x03, 0x6C, 0x00, 0x18, 0x4C, 0xE3, 0x10, 0xF0,
+0x24, 0x6A, 0x30, 0xF0, 0x20, 0x6B, 0xFB, 0xF6,
+0x54, 0x9A, 0x00, 0xF2, 0x74, 0x9B, 0x6C, 0xEA,
+0x03, 0x22, 0x04, 0x6C, 0x00, 0x18, 0x4C, 0xE3,
 0x30, 0xF0, 0x20, 0x6A, 0x00, 0xF2, 0x50, 0x9A,
 0x20, 0x6B, 0x6C, 0xEA, 0x03, 0x22, 0x00, 0x6C,
-0x00, 0x18, 0xA3, 0xE3, 0x10, 0xF0, 0x24, 0x6A,
-0x30, 0xF0, 0x20, 0x6B, 0x5C, 0xF3, 0x5C, 0x9A,
+0x00, 0x18, 0x4D, 0xE3, 0x10, 0xF0, 0x24, 0x6A,
+0x30, 0xF0, 0x20, 0x6B, 0x5B, 0xF7, 0x4C, 0x9A,
 0x00, 0xF2, 0x74, 0x9B, 0x6C, 0xEA, 0x03, 0x22,
-0x01, 0x6C, 0x00, 0x18, 0xA3, 0xE3, 0x10, 0xF0,
-0x24, 0x6A, 0x30, 0xF0, 0x20, 0x6B, 0x9D, 0xF0,
-0x50, 0x9A, 0x00, 0xF2, 0x70, 0x9B, 0x6C, 0xEA,
-0x03, 0x22, 0x02, 0x6C, 0x00, 0x18, 0xA3, 0xE3,
+0x01, 0x6C, 0x00, 0x18, 0x4D, 0xE3, 0x10, 0xF0,
+0x24, 0x6A, 0x30, 0xF0, 0x20, 0x6B, 0x7C, 0xF4,
+0x48, 0x9A, 0x00, 0xF2, 0x70, 0x9B, 0x6C, 0xEA,
+0x03, 0x22, 0x02, 0x6C, 0x00, 0x18, 0x4D, 0xE3,
 0x10, 0xF0, 0x24, 0x6A, 0x30, 0xF0, 0x20, 0x6B,
-0xDD, 0xF0, 0x44, 0x9A, 0x00, 0xF2, 0x74, 0x9B,
+0x9C, 0xF4, 0x5C, 0x9A, 0x00, 0xF2, 0x74, 0x9B,
 0x6C, 0xEA, 0x03, 0x22, 0x03, 0x6C, 0x00, 0x18,
-0xA3, 0xE3, 0x30, 0xF0, 0x20, 0x6A, 0x00, 0xF2,
+0x4D, 0xE3, 0x30, 0xF0, 0x20, 0x6A, 0x00, 0xF2,
 0x54, 0x9A, 0x00, 0x52, 0x03, 0x60, 0x04, 0x6C,
-0x00, 0x18, 0xA3, 0xE3, 0x30, 0xF0, 0x20, 0x6B,
+0x00, 0x18, 0x4D, 0xE3, 0x30, 0xF0, 0x20, 0x6B,
 0x00, 0xF2, 0x70, 0x9B, 0x04, 0xF0, 0x00, 0x6A,
 0x6C, 0xEA, 0x03, 0x22, 0x00, 0x6C, 0x00, 0x18,
-0x34, 0xE5, 0x30, 0xF0, 0x20, 0x6B, 0x00, 0xF2,
+0xDE, 0xE4, 0x30, 0xF0, 0x20, 0x6B, 0x00, 0xF2,
 0x70, 0x9B, 0x08, 0xF0, 0x00, 0x6A, 0x6C, 0xEA,
-0x03, 0x22, 0x00, 0x6C, 0x00, 0x18, 0x4C, 0xE5,
+0x03, 0x22, 0x00, 0x6C, 0x00, 0x18, 0xF6, 0xE4,
 0x30, 0xF0, 0x20, 0x6B, 0x00, 0xF2, 0x70, 0x9B,
 0x10, 0xF0, 0x00, 0x6A, 0x6C, 0xEA, 0x04, 0x22,
-0x00, 0x18, 0xB9, 0xE3, 0x00, 0x18, 0x3A, 0xF0,
+0x00, 0x18, 0x63, 0xE3, 0x00, 0x18, 0xDC, 0xEF,
 0x10, 0xF0, 0x24, 0x6A, 0x30, 0xF0, 0x20, 0x6B,
-0x5C, 0xF3, 0x50, 0x9A, 0x00, 0xF2, 0x70, 0x9B,
-0x6C, 0xEA, 0x04, 0x22, 0x00, 0x18, 0xC1, 0xE3,
-0x00, 0x18, 0x42, 0xF0, 0x10, 0xF0, 0x24, 0x6A,
-0x30, 0xF0, 0x20, 0x6B, 0x5C, 0xF3, 0x54, 0x9A,
+0x5B, 0xF7, 0x40, 0x9A, 0x00, 0xF2, 0x70, 0x9B,
+0x6C, 0xEA, 0x04, 0x22, 0x00, 0x18, 0x6B, 0xE3,
+0x00, 0x18, 0xE4, 0xEF, 0x10, 0xF0, 0x24, 0x6A,
+0x30, 0xF0, 0x20, 0x6B, 0x5B, 0xF7, 0x44, 0x9A,
 0x00, 0xF2, 0x70, 0x9B, 0x6C, 0xEA, 0x04, 0x22,
-0x00, 0x18, 0xC9, 0xE3, 0x00, 0x18, 0x4A, 0xF0,
+0x00, 0x18, 0x73, 0xE3, 0x00, 0x18, 0xEC, 0xEF,
 0x30, 0xF0, 0x20, 0x6A, 0x00, 0xF2, 0x50, 0x9A,
 0x40, 0x6B, 0x6C, 0xEA, 0x04, 0x22, 0x00, 0x18,
-0x15, 0xE6, 0x00, 0x18, 0xC7, 0xF5, 0x30, 0xF0,
+0xBF, 0xE5, 0x00, 0x18, 0x69, 0xF5, 0x30, 0xF0,
 0x20, 0x6A, 0x00, 0xF2, 0x50, 0x9A, 0x80, 0x6B,
-0x6C, 0xEA, 0x04, 0x22, 0x00, 0x18, 0xBA, 0xE5,
-0x00, 0x18, 0xAA, 0xF2, 0x30, 0xF0, 0x20, 0x6B,
+0x6C, 0xEA, 0x04, 0x22, 0x00, 0x18, 0x64, 0xE5,
+0x00, 0x18, 0x4C, 0xF2, 0x30, 0xF0, 0x20, 0x6B,
 0x00, 0xF2, 0x70, 0x9B, 0xFF, 0x6A, 0x01, 0x4A,
-0x6C, 0xEA, 0x04, 0x22, 0x00, 0x18, 0xF5, 0xE5,
-0x00, 0x18, 0xC3, 0xF5, 0x30, 0xF0, 0x20, 0x6B,
-0x00, 0xF2, 0x70, 0x9B, 0x00, 0xF2, 0x00, 0x6A,
 0x6C, 0xEA, 0x04, 0x22, 0x00, 0x18, 0x9F, 0xE5,
-0x00, 0x18, 0xA6, 0xF2, 0x30, 0xF0, 0x20, 0x6B,
+0x00, 0x18, 0x65, 0xF5, 0x30, 0xF0, 0x20, 0x6B,
+0x00, 0xF2, 0x70, 0x9B, 0x00, 0xF2, 0x00, 0x6A,
+0x6C, 0xEA, 0x04, 0x22, 0x00, 0x18, 0x49, 0xE5,
+0x00, 0x18, 0x48, 0xF2, 0x30, 0xF0, 0x20, 0x6B,
 0x00, 0xF2, 0x70, 0x9B, 0x00, 0xF4, 0x00, 0x6A,
-0x6C, 0xEA, 0x04, 0x22, 0x00, 0x18, 0xD5, 0xE5,
-0x00, 0x18, 0xBF, 0xF5, 0x30, 0xF0, 0x20, 0x6B,
+0x6C, 0xEA, 0x04, 0x22, 0x00, 0x18, 0x7F, 0xE5,
+0x00, 0x18, 0x61, 0xF5, 0x30, 0xF0, 0x20, 0x6B,
 0x00, 0xF2, 0x70, 0x9B, 0x01, 0xF0, 0x00, 0x6A,
-0x6C, 0xEA, 0x04, 0x22, 0x00, 0x18, 0x84, 0xE5,
-0x00, 0x18, 0xA2, 0xF2, 0x30, 0xF0, 0x20, 0x6B,
+0x6C, 0xEA, 0x04, 0x22, 0x00, 0x18, 0x2E, 0xE5,
+0x00, 0x18, 0x44, 0xF2, 0x30, 0xF0, 0x20, 0x6B,
 0x00, 0xF2, 0x70, 0x9B, 0x02, 0xF0, 0x00, 0x6A,
-0x6C, 0xEA, 0x02, 0x22, 0x00, 0x18, 0xA4, 0xE3,
+0x6C, 0xEA, 0x02, 0x22, 0x00, 0x18, 0x4E, 0xE3,
 0x10, 0xF0, 0x24, 0x6A, 0x30, 0xF0, 0x20, 0x6B,
-0xFC, 0xF3, 0x44, 0x9A, 0x00, 0xF2, 0x70, 0x9B,
-0x6C, 0xEA, 0x02, 0x22, 0x00, 0x18, 0xD2, 0xE3,
+0xDB, 0xF7, 0x40, 0x9A, 0x00, 0xF2, 0x70, 0x9B,
+0x6C, 0xEA, 0x02, 0x22, 0x00, 0x18, 0x7C, 0xE3,
 0x10, 0xF0, 0x24, 0x6A, 0x30, 0xF0, 0x20, 0x6B,
-0x3C, 0xF4, 0x5C, 0x9A, 0x00, 0xF2, 0x70, 0x9B,
-0x6C, 0xEA, 0x02, 0x22, 0x00, 0x18, 0x30, 0xE5,
+0x1C, 0xF0, 0x58, 0x9A, 0x00, 0xF2, 0x70, 0x9B,
+0x6C, 0xEA, 0x02, 0x22, 0x00, 0x18, 0xDA, 0xE4,
 0x30, 0xF0, 0x20, 0x6A, 0x00, 0xF2, 0x74, 0x9A,
 0x55, 0x23, 0x01, 0x6A, 0x6C, 0xEA, 0x03, 0x22,
-0x01, 0x6C, 0x00, 0x18, 0x34, 0xE5, 0x30, 0xF0,
+0x01, 0x6C, 0x00, 0x18, 0xDE, 0xE4, 0x30, 0xF0,
 0x20, 0x6A, 0x00, 0xF2, 0x54, 0x9A, 0x02, 0x6B,
 0x6C, 0xEA, 0x03, 0x22, 0x01, 0x6C, 0x00, 0x18,
-0x4C, 0xE5, 0x30, 0xF0, 0x20, 0x6A, 0x00, 0xF2,
+0xF6, 0xE4, 0x30, 0xF0, 0x20, 0x6A, 0x00, 0xF2,
 0x54, 0x9A, 0x04, 0x6B, 0x6C, 0xEA, 0x03, 0x22,
-0x02, 0x6C, 0x00, 0x18, 0x34, 0xE5, 0x30, 0xF0,
+0x02, 0x6C, 0x00, 0x18, 0xDE, 0xE4, 0x30, 0xF0,
 0x20, 0x6A, 0x00, 0xF2, 0x54, 0x9A, 0x08, 0x6B,
 0x6C, 0xEA, 0x03, 0x22, 0x02, 0x6C, 0x00, 0x18,
-0x4C, 0xE5, 0x30, 0xF0, 0x20, 0x6A, 0x00, 0xF2,
+0xF6, 0xE4, 0x30, 0xF0, 0x20, 0x6A, 0x00, 0xF2,
 0x54, 0x9A, 0x10, 0x6B, 0x6C, 0xEA, 0x03, 0x22,
-0x03, 0x6C, 0x00, 0x18, 0x34, 0xE5, 0x30, 0xF0,
+0x03, 0x6C, 0x00, 0x18, 0xDE, 0xE4, 0x30, 0xF0,
 0x20, 0x6A, 0x00, 0xF2, 0x54, 0x9A, 0x20, 0x6B,
 0x6C, 0xEA, 0x03, 0x22, 0x03, 0x6C, 0x00, 0x18,
-0x4C, 0xE5, 0x30, 0xF0, 0x20, 0x6A, 0x00, 0xF2,
+0xF6, 0xE4, 0x30, 0xF0, 0x20, 0x6A, 0x00, 0xF2,
 0x54, 0x9A, 0x40, 0x6B, 0x6C, 0xEA, 0x03, 0x22,
-0x04, 0x6C, 0x00, 0x18, 0x34, 0xE5, 0x30, 0xF0,
+0x04, 0x6C, 0x00, 0x18, 0xDE, 0xE4, 0x30, 0xF0,
 0x20, 0x6A, 0x00, 0xF2, 0x54, 0x9A, 0x80, 0x6B,
 0x6C, 0xEA, 0x03, 0x22, 0x04, 0x6C, 0x00, 0x18,
-0x4C, 0xE5, 0x10, 0xF0, 0x24, 0x6B, 0xBC, 0xF2,
-0x70, 0x9B, 0x10, 0xF0, 0x23, 0x6A, 0xC0, 0xF6,
+0xF6, 0xE4, 0x10, 0xF0, 0x24, 0x6B, 0x9B, 0xF6,
+0x6C, 0x9B, 0x10, 0xF0, 0x23, 0x6A, 0xC0, 0xF6,
 0x1A, 0x4A, 0x40, 0xDB, 0x05, 0x97, 0x03, 0x63,
 0x00, 0xEF, 0x00, 0x65, 0xFD, 0x63, 0x05, 0x62,
-0x04, 0xD0, 0x10, 0xF0, 0x24, 0x6B, 0xBC, 0xF2,
-0x70, 0x9B, 0x10, 0xF0, 0x23, 0x6A, 0xE1, 0xF3,
-0x0D, 0x4A, 0x40, 0xDB, 0x00, 0x18, 0x32, 0xE3,
+0x04, 0xD0, 0x10, 0xF0, 0x24, 0x6B, 0x9B, 0xF6,
+0x6C, 0x9B, 0x10, 0xF0, 0x23, 0x6A, 0xE1, 0xF3,
+0x0D, 0x4A, 0x40, 0xDB, 0x00, 0x18, 0xDC, 0xE2,
 0x30, 0xF0, 0x20, 0x6A, 0xE0, 0xF1, 0x5C, 0x9A,
 0x22, 0x22, 0x00, 0x68, 0x30, 0xF0, 0x20, 0x6B,
 0xE0, 0xF1, 0x7C, 0x9B, 0x02, 0xF0, 0x00, 0x6A,
 0x44, 0xE8, 0x6C, 0xEA, 0x03, 0x22, 0x90, 0x67,
-0x00, 0x18, 0x86, 0xE6, 0x01, 0x48, 0x10, 0x70,
+0x00, 0x18, 0x29, 0xE6, 0x01, 0x48, 0x10, 0x70,
 0xF1, 0x61, 0x30, 0xF0, 0x20, 0x6A, 0xE0, 0xF1,
 0x5C, 0x9A, 0x80, 0x6B, 0x6C, 0xEA, 0x02, 0x22,
-0x00, 0x18, 0xC7, 0xE6, 0x10, 0xF0, 0x24, 0x6B,
-0xBC, 0xF2, 0x70, 0x9B, 0x10, 0xF0, 0x23, 0x6A,
+0x00, 0x18, 0x69, 0xE6, 0x10, 0xF0, 0x24, 0x6B,
+0x9B, 0xF6, 0x6C, 0x9B, 0x10, 0xF0, 0x23, 0x6A,
 0xE1, 0xF3, 0x0E, 0x4A, 0x40, 0xDB, 0x05, 0x97,
 0x04, 0x90, 0x03, 0x63, 0x00, 0xEF, 0x00, 0x65,
 0xFD, 0x63, 0x05, 0x62, 0x10, 0xF0, 0x24, 0x6B,
-0xBC, 0xF2, 0x70, 0x9B, 0x10, 0xF0, 0x23, 0x6A,
+0x9B, 0xF6, 0x6C, 0x9B, 0x10, 0xF0, 0x23, 0x6A,
 0x61, 0xF4, 0x01, 0x4A, 0x40, 0xDB, 0x00, 0x18,
-0x39, 0xE3, 0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1,
+0xE3, 0xE2, 0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1,
 0x7C, 0x9A, 0x61, 0x23, 0x08, 0x6A, 0x6C, 0xEA,
-0x03, 0x22, 0x00, 0x6C, 0x00, 0x18, 0xF6, 0xE3,
+0x03, 0x22, 0x00, 0x6C, 0x00, 0x18, 0xA0, 0xE3,
 0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1, 0x5C, 0x9A,
 0x02, 0x6B, 0x6C, 0xEA, 0x02, 0x22, 0x00, 0x18,
-0x76, 0xE3, 0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1,
+0x20, 0xE3, 0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1,
 0x5C, 0x9A, 0x10, 0x6B, 0x6C, 0xEA, 0x02, 0x22,
-0x00, 0x18, 0xC3, 0xE6, 0x30, 0xF0, 0x20, 0x6A,
+0x00, 0x18, 0x65, 0xE6, 0x30, 0xF0, 0x20, 0x6A,
 0xC0, 0xF1, 0x5C, 0x9A, 0x20, 0x6B, 0x6C, 0xEA,
-0x02, 0x22, 0x00, 0x18, 0xBF, 0xE6, 0x30, 0xF0,
+0x02, 0x22, 0x00, 0x18, 0x61, 0xE6, 0x30, 0xF0,
 0x20, 0x6A, 0xC0, 0xF1, 0x5C, 0x9A, 0x40, 0x6B,
-0x6C, 0xEA, 0x02, 0x22, 0x00, 0x18, 0x7B, 0xE3,
+0x6C, 0xEA, 0x02, 0x22, 0x00, 0x18, 0x25, 0xE3,
 0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1, 0x5C, 0x9A,
 0x80, 0x6B, 0x6C, 0xEA, 0x05, 0x22, 0x30, 0xF0,
 0x20, 0x6A, 0x6E, 0xF2, 0x50, 0x9A, 0x40, 0xEA,
 0x30, 0xF0, 0x20, 0x6B, 0xC0, 0xF1, 0x7C, 0x9B,
 0xFF, 0x6A, 0x01, 0x4A, 0x6C, 0xEA, 0x02, 0x22,
-0x00, 0x18, 0xBB, 0xE6, 0x30, 0xF0, 0x20, 0x6B,
+0x00, 0x18, 0x5D, 0xE6, 0x30, 0xF0, 0x20, 0x6B,
 0xC0, 0xF1, 0x7C, 0x9B, 0x00, 0xF2, 0x00, 0x6A,
-0x6C, 0xEA, 0x02, 0x22, 0x00, 0x18, 0xB7, 0xE6,
+0x6C, 0xEA, 0x02, 0x22, 0x00, 0x18, 0x59, 0xE6,
 0x10, 0xF0, 0x24, 0x6A, 0x30, 0xF0, 0x20, 0x6B,
-0xDD, 0xF0, 0x48, 0x9A, 0xC0, 0xF1, 0x7C, 0x9B,
+0xBC, 0xF4, 0x40, 0x9A, 0xC0, 0xF1, 0x7C, 0x9B,
 0x6C, 0xEA, 0x0D, 0x22, 0x10, 0xF0, 0x24, 0x6A,
-0xFC, 0xF3, 0x44, 0x9A, 0x6C, 0xEA, 0x04, 0x22,
-0x00, 0x6C, 0x00, 0x18, 0xD2, 0xE4, 0x03, 0x10,
-0x00, 0x6C, 0x00, 0x18, 0xD8, 0xE3, 0x30, 0xF0,
+0xDB, 0xF7, 0x40, 0x9A, 0x6C, 0xEA, 0x04, 0x22,
+0x00, 0x6C, 0x00, 0x18, 0x7C, 0xE4, 0x03, 0x10,
+0x00, 0x6C, 0x00, 0x18, 0x82, 0xE3, 0x30, 0xF0,
 0x20, 0x6A, 0xE0, 0xF1, 0x60, 0x9A, 0x7D, 0x23,
-0x10, 0xF0, 0x24, 0x6A, 0xDD, 0xF0, 0x40, 0x9A,
+0x10, 0xF0, 0x24, 0x6A, 0x9C, 0xF4, 0x58, 0x9A,
 0x6C, 0xEA, 0x03, 0x22, 0x00, 0x6C, 0x00, 0x18,
-0x75, 0xE4, 0x10, 0xF0, 0x24, 0x6A, 0x30, 0xF0,
-0x20, 0x6B, 0x7C, 0xF3, 0x50, 0x9A, 0xE0, 0xF1,
+0x1F, 0xE4, 0x10, 0xF0, 0x24, 0x6A, 0x30, 0xF0,
+0x20, 0x6B, 0x3B, 0xF7, 0x50, 0x9A, 0xE0, 0xF1,
 0x60, 0x9B, 0x6C, 0xEA, 0x03, 0x22, 0x01, 0x6C,
-0x00, 0x18, 0x75, 0xE4, 0x10, 0xF0, 0x24, 0x6A,
-0x30, 0xF0, 0x20, 0x6B, 0x9D, 0xF0, 0x50, 0x9A,
+0x00, 0x18, 0x1F, 0xE4, 0x10, 0xF0, 0x24, 0x6A,
+0x30, 0xF0, 0x20, 0x6B, 0x7C, 0xF4, 0x48, 0x9A,
 0xE0, 0xF1, 0x60, 0x9B, 0x6C, 0xEA, 0x03, 0x22,
-0x02, 0x6C, 0x00, 0x18, 0x75, 0xE4, 0x10, 0xF0,
-0x24, 0x6A, 0x30, 0xF0, 0x20, 0x6B, 0xFC, 0xF3,
-0x44, 0x9A, 0xE0, 0xF1, 0x60, 0x9B, 0x6C, 0xEA,
-0x03, 0x22, 0x03, 0x6C, 0x00, 0x18, 0x75, 0xE4,
+0x02, 0x6C, 0x00, 0x18, 0x1F, 0xE4, 0x10, 0xF0,
+0x24, 0x6A, 0x30, 0xF0, 0x20, 0x6B, 0xDB, 0xF7,
+0x40, 0x9A, 0xE0, 0xF1, 0x60, 0x9B, 0x6C, 0xEA,
+0x03, 0x22, 0x03, 0x6C, 0x00, 0x18, 0x1F, 0xE4,
 0x10, 0xF0, 0x24, 0x6A, 0x30, 0xF0, 0x20, 0x6B,
-0x3C, 0xF4, 0x5C, 0x9A, 0xE0, 0xF1, 0x60, 0x9B,
+0x1C, 0xF0, 0x58, 0x9A, 0xE0, 0xF1, 0x60, 0x9B,
 0x6C, 0xEA, 0x03, 0x22, 0x04, 0x6C, 0x00, 0x18,
-0x75, 0xE4, 0x10, 0xF0, 0x24, 0x6A, 0x30, 0xF0,
-0x20, 0x6B, 0x5C, 0xF3, 0x54, 0x9A, 0xE0, 0xF1,
+0x1F, 0xE4, 0x10, 0xF0, 0x24, 0x6A, 0x30, 0xF0,
+0x20, 0x6B, 0x5B, 0xF7, 0x44, 0x9A, 0xE0, 0xF1,
 0x60, 0x9B, 0x6C, 0xEA, 0x03, 0x22, 0x00, 0x6C,
-0x00, 0x18, 0xD9, 0xE3, 0x10, 0xF0, 0x24, 0x6A,
-0x30, 0xF0, 0x20, 0x6B, 0x5C, 0xF3, 0x58, 0x9A,
+0x00, 0x18, 0x83, 0xE3, 0x10, 0xF0, 0x24, 0x6A,
+0x30, 0xF0, 0x20, 0x6B, 0x5B, 0xF7, 0x48, 0x9A,
 0xE0, 0xF1, 0x60, 0x9B, 0x6C, 0xEA, 0x03, 0x22,
-0x00, 0x6C, 0x00, 0x18, 0x29, 0xE4, 0x10, 0xF0,
-0x24, 0x6A, 0x30, 0xF0, 0x20, 0x6B, 0x5C, 0xF3,
-0x5C, 0x9A, 0xE0, 0xF1, 0x60, 0x9B, 0x6C, 0xEA,
-0x03, 0x22, 0x00, 0x6C, 0x00, 0x18, 0x54, 0xE4,
+0x00, 0x6C, 0x00, 0x18, 0xD3, 0xE3, 0x10, 0xF0,
+0x24, 0x6A, 0x30, 0xF0, 0x20, 0x6B, 0x5B, 0xF7,
+0x4C, 0x9A, 0xE0, 0xF1, 0x60, 0x9B, 0x6C, 0xEA,
+0x03, 0x22, 0x00, 0x6C, 0x00, 0x18, 0xFE, 0xE3,
 0x10, 0xF0, 0x24, 0x6A, 0x30, 0xF0, 0x20, 0x6B,
-0x3C, 0xF4, 0x4C, 0x9A, 0xE0, 0xF1, 0x60, 0x9B,
+0x1C, 0xF0, 0x48, 0x9A, 0xE0, 0xF1, 0x60, 0x9B,
 0x6C, 0xEA, 0x03, 0x22, 0x00, 0x6C, 0x00, 0x18,
-0x11, 0xE4, 0x10, 0xF0, 0x24, 0x6A, 0x30, 0xF0,
-0x20, 0x6B, 0x5C, 0xF3, 0x50, 0x9A, 0xE0, 0xF1,
+0xBB, 0xE3, 0x10, 0xF0, 0x24, 0x6A, 0x30, 0xF0,
+0x20, 0x6B, 0x5B, 0xF7, 0x40, 0x9A, 0xE0, 0xF1,
 0x60, 0x9B, 0x6C, 0xEA, 0x02, 0x22, 0x00, 0x18,
-0xAC, 0xE6, 0x30, 0xF0, 0x20, 0x6A, 0xE0, 0xF1,
+0x4E, 0xE6, 0x30, 0xF0, 0x20, 0x6A, 0xE0, 0xF1,
 0x64, 0x9A, 0x78, 0x23, 0x01, 0x6A, 0x6C, 0xEA,
-0x03, 0x22, 0x00, 0x6C, 0x00, 0x18, 0x23, 0xE7,
+0x03, 0x22, 0x00, 0x6C, 0x00, 0x18, 0xC5, 0xE6,
 0x30, 0xF0, 0x20, 0x6A, 0xE0, 0xF1, 0x44, 0x9A,
 0x02, 0x6B, 0x6C, 0xEA, 0x03, 0x22, 0x10, 0x6C,
-0x00, 0x18, 0xD4, 0xE6, 0x30, 0xF0, 0x20, 0x6A,
+0x00, 0x18, 0x76, 0xE6, 0x30, 0xF0, 0x20, 0x6A,
 0xE0, 0xF1, 0x44, 0x9A, 0x04, 0x6B, 0x6C, 0xEA,
-0x03, 0x22, 0x20, 0x6C, 0x00, 0x18, 0xD4, 0xE6,
+0x03, 0x22, 0x20, 0x6C, 0x00, 0x18, 0x76, 0xE6,
 0x30, 0xF0, 0x20, 0x6A, 0xE0, 0xF1, 0x44, 0x9A,
 0x08, 0x6B, 0x6C, 0xEA, 0x03, 0x22, 0x30, 0x6C,
-0x00, 0x18, 0xD4, 0xE6, 0x30, 0xF0, 0x20, 0x6A,
+0x00, 0x18, 0x76, 0xE6, 0x30, 0xF0, 0x20, 0x6A,
 0xE0, 0xF1, 0x44, 0x9A, 0x10, 0x6B, 0x6C, 0xEA,
-0x03, 0x22, 0x40, 0x6C, 0x00, 0x18, 0xD4, 0xE6,
+0x03, 0x22, 0x40, 0x6C, 0x00, 0x18, 0x76, 0xE6,
 0x30, 0xF0, 0x20, 0x6A, 0xE0, 0xF1, 0x44, 0x9A,
 0x20, 0x6B, 0x6C, 0xEA, 0x03, 0x22, 0x50, 0x6C,
-0x00, 0x18, 0xD4, 0xE6, 0x30, 0xF0, 0x20, 0x6A,
+0x00, 0x18, 0x76, 0xE6, 0x30, 0xF0, 0x20, 0x6A,
 0xE0, 0xF1, 0x44, 0x9A, 0x40, 0x6B, 0x6C, 0xEA,
-0x03, 0x22, 0x60, 0x6C, 0x00, 0x18, 0xD4, 0xE6,
+0x03, 0x22, 0x60, 0x6C, 0x00, 0x18, 0x76, 0xE6,
 0x30, 0xF0, 0x20, 0x6A, 0xE0, 0xF1, 0x44, 0x9A,
 0x80, 0x6B, 0x6C, 0xEA, 0x03, 0x22, 0x70, 0x6C,
-0x00, 0x18, 0xD4, 0xE6, 0x30, 0xF0, 0x20, 0x6B,
+0x00, 0x18, 0x76, 0xE6, 0x30, 0xF0, 0x20, 0x6B,
 0xE0, 0xF1, 0x64, 0x9B, 0xFF, 0x6A, 0x01, 0x4A,
 0x6C, 0xEA, 0x03, 0x22, 0x01, 0x6C, 0x00, 0x18,
-0x23, 0xE7, 0x30, 0xF0, 0x20, 0x6B, 0xE0, 0xF1,
+0xC5, 0xE6, 0x30, 0xF0, 0x20, 0x6B, 0xE0, 0xF1,
 0x64, 0x9B, 0x00, 0xF2, 0x00, 0x6A, 0x6C, 0xEA,
-0x03, 0x22, 0x02, 0x6C, 0x00, 0x18, 0x23, 0xE7,
+0x03, 0x22, 0x02, 0x6C, 0x00, 0x18, 0xC5, 0xE6,
 0x30, 0xF0, 0x20, 0x6B, 0xE0, 0xF1, 0x64, 0x9B,
 0x00, 0xF4, 0x00, 0x6A, 0x6C, 0xEA, 0x03, 0x22,
-0x03, 0x6C, 0x00, 0x18, 0x23, 0xE7, 0x30, 0xF0,
+0x03, 0x6C, 0x00, 0x18, 0xC5, 0xE6, 0x30, 0xF0,
 0x20, 0x6B, 0xE0, 0xF1, 0x64, 0x9B, 0x01, 0xF0,
 0x00, 0x6A, 0x6C, 0xEA, 0x03, 0x22, 0x04, 0x6C,
-0x00, 0x18, 0x23, 0xE7, 0x30, 0xF0, 0x20, 0x6A,
+0x00, 0x18, 0xC5, 0xE6, 0x30, 0xF0, 0x20, 0x6A,
 0xE0, 0xF1, 0x68, 0x9A, 0xA0, 0xF0, 0x13, 0x23,
 0x01, 0x6A, 0x6C, 0xEA, 0x03, 0x22, 0x00, 0x6C,
-0x00, 0x18, 0x94, 0xE6, 0x30, 0xF0, 0x20, 0x6A,
+0x00, 0x18, 0x37, 0xE6, 0x30, 0xF0, 0x20, 0x6A,
 0xE0, 0xF1, 0x48, 0x9A, 0x02, 0x6B, 0x6C, 0xEA,
-0x03, 0x22, 0x10, 0x6C, 0x00, 0x18, 0x8B, 0xE6,
+0x03, 0x22, 0x10, 0x6C, 0x00, 0x18, 0x2E, 0xE6,
 0x30, 0xF0, 0x20, 0x6A, 0xE0, 0xF1, 0x48, 0x9A,
 0x04, 0x6B, 0x6C, 0xEA, 0x03, 0x22, 0x20, 0x6C,
-0x00, 0x18, 0x8B, 0xE6, 0x30, 0xF0, 0x20, 0x6A,
+0x00, 0x18, 0x2E, 0xE6, 0x30, 0xF0, 0x20, 0x6A,
 0xE0, 0xF1, 0x48, 0x9A, 0x08, 0x6B, 0x6C, 0xEA,
-0x03, 0x22, 0x30, 0x6C, 0x00, 0x18, 0x8B, 0xE6,
+0x03, 0x22, 0x30, 0x6C, 0x00, 0x18, 0x2E, 0xE6,
 0x30, 0xF0, 0x20, 0x6A, 0xE0, 0xF1, 0x48, 0x9A,
 0x10, 0x6B, 0x6C, 0xEA, 0x03, 0x22, 0x40, 0x6C,
-0x00, 0x18, 0x8B, 0xE6, 0x30, 0xF0, 0x20, 0x6A,
+0x00, 0x18, 0x2E, 0xE6, 0x30, 0xF0, 0x20, 0x6A,
 0xE0, 0xF1, 0x48, 0x9A, 0x20, 0x6B, 0x6C, 0xEA,
-0x03, 0x22, 0x50, 0x6C, 0x00, 0x18, 0x8B, 0xE6,
+0x03, 0x22, 0x50, 0x6C, 0x00, 0x18, 0x2E, 0xE6,
 0x30, 0xF0, 0x20, 0x6A, 0xE0, 0xF1, 0x48, 0x9A,
 0x40, 0x6B, 0x6C, 0xEA, 0x03, 0x22, 0x60, 0x6C,
-0x00, 0x18, 0x8B, 0xE6, 0x30, 0xF0, 0x20, 0x6A,
+0x00, 0x18, 0x2E, 0xE6, 0x30, 0xF0, 0x20, 0x6A,
 0xE0, 0xF1, 0x48, 0x9A, 0x80, 0x6B, 0x6C, 0xEA,
-0x03, 0x22, 0x70, 0x6C, 0x00, 0x18, 0x8B, 0xE6,
+0x03, 0x22, 0x70, 0x6C, 0x00, 0x18, 0x2E, 0xE6,
 0x30, 0xF0, 0x20, 0x6B, 0xE0, 0xF1, 0x68, 0x9B,
 0xFF, 0x6A, 0x01, 0x4A, 0x6C, 0xEA, 0x03, 0x22,
-0x01, 0x6C, 0x00, 0x18, 0x94, 0xE6, 0x30, 0xF0,
+0x01, 0x6C, 0x00, 0x18, 0x37, 0xE6, 0x30, 0xF0,
 0x20, 0x6B, 0xE0, 0xF1, 0x68, 0x9B, 0x00, 0xF2,
 0x00, 0x6A, 0x6C, 0xEA, 0x03, 0x22, 0x02, 0x6C,
-0x00, 0x18, 0x94, 0xE6, 0x30, 0xF0, 0x20, 0x6B,
+0x00, 0x18, 0x37, 0xE6, 0x30, 0xF0, 0x20, 0x6B,
 0xE0, 0xF1, 0x68, 0x9B, 0x00, 0xF4, 0x00, 0x6A,
 0x6C, 0xEA, 0x03, 0x22, 0x03, 0x6C, 0x00, 0x18,
-0x94, 0xE6, 0x30, 0xF0, 0x20, 0x6B, 0xE0, 0xF1,
+0x37, 0xE6, 0x30, 0xF0, 0x20, 0x6B, 0xE0, 0xF1,
 0x68, 0x9B, 0x01, 0xF0, 0x00, 0x6A, 0x6C, 0xEA,
-0x03, 0x22, 0x04, 0x6C, 0x00, 0x18, 0x94, 0xE6,
+0x03, 0x22, 0x04, 0x6C, 0x00, 0x18, 0x37, 0xE6,
 0x30, 0xF0, 0x20, 0x6B, 0xE0, 0xF1, 0x68, 0x9B,
 0x10, 0xF0, 0x00, 0x6A, 0x6C, 0xEA, 0x03, 0x22,
 0x00, 0x6C, 0x00, 0x18, 0x6C, 0xC7, 0x10, 0xF0,
-0x24, 0x6A, 0x30, 0xF0, 0x20, 0x6B, 0x1C, 0xF3,
-0x4C, 0x9A, 0xE0, 0xF1, 0x68, 0x9B, 0x6C, 0xEA,
+0x24, 0x6A, 0x30, 0xF0, 0x20, 0x6B, 0xFB, 0xF6,
+0x48, 0x9A, 0xE0, 0xF1, 0x68, 0x9B, 0x6C, 0xEA,
 0x03, 0x22, 0x01, 0x6C, 0x00, 0x18, 0x6C, 0xC7,
 0x10, 0xF0, 0x24, 0x6A, 0x30, 0xF0, 0x20, 0x6B,
-0x1C, 0xF3, 0x50, 0x9A, 0xE0, 0xF1, 0x68, 0x9B,
+0xFB, 0xF6, 0x4C, 0x9A, 0xE0, 0xF1, 0x68, 0x9B,
 0x6C, 0xEA, 0x03, 0x22, 0x02, 0x6C, 0x00, 0x18,
 0x6C, 0xC7, 0x10, 0xF0, 0x24, 0x6A, 0x30, 0xF0,
-0x20, 0x6B, 0x1C, 0xF3, 0x58, 0x9A, 0xE0, 0xF1,
+0x20, 0x6B, 0xFB, 0xF6, 0x54, 0x9A, 0xE0, 0xF1,
 0x68, 0x9B, 0x6C, 0xEA, 0x03, 0x22, 0x03, 0x6C,
 0x00, 0x18, 0x6C, 0xC7, 0x30, 0xF0, 0x20, 0x6A,
 0xE0, 0xF1, 0x48, 0x9A, 0x00, 0x52, 0x03, 0x60,
 0x04, 0x6C, 0x00, 0x18, 0x6C, 0xC7, 0x30, 0xF0,
 0x20, 0x6A, 0xE0, 0xF1, 0x6C, 0x9A, 0xC0, 0xF0,
 0x18, 0x23, 0x01, 0x6A, 0x6C, 0xEA, 0x03, 0x22,
-0x01, 0x6C, 0x00, 0x18, 0xD9, 0xE3, 0x30, 0xF0,
+0x01, 0x6C, 0x00, 0x18, 0x83, 0xE3, 0x30, 0xF0,
 0x20, 0x6A, 0xE0, 0xF1, 0x4C, 0x9A, 0x02, 0x6B,
 0x6C, 0xEA, 0x03, 0x22, 0x01, 0x6C, 0x00, 0x18,
-0x29, 0xE4, 0x30, 0xF0, 0x20, 0x6A, 0xE0, 0xF1,
+0xD3, 0xE3, 0x30, 0xF0, 0x20, 0x6A, 0xE0, 0xF1,
 0x4C, 0x9A, 0x04, 0x6B, 0x6C, 0xEA, 0x03, 0x22,
-0x01, 0x6C, 0x00, 0x18, 0x54, 0xE4, 0x30, 0xF0,
+0x01, 0x6C, 0x00, 0x18, 0xFE, 0xE3, 0x30, 0xF0,
 0x20, 0x6A, 0xE0, 0xF1, 0x4C, 0x9A, 0x08, 0x6B,
 0x6C, 0xEA, 0x03, 0x22, 0x01, 0x6C, 0x00, 0x18,
-0x11, 0xE4, 0x30, 0xF0, 0x20, 0x6A, 0xE0, 0xF1,
+0xBB, 0xE3, 0x30, 0xF0, 0x20, 0x6A, 0xE0, 0xF1,
 0x4C, 0x9A, 0x10, 0x6B, 0x6C, 0xEA, 0x03, 0x22,
-0x02, 0x6C, 0x00, 0x18, 0xD9, 0xE3, 0x30, 0xF0,
+0x02, 0x6C, 0x00, 0x18, 0x83, 0xE3, 0x30, 0xF0,
 0x20, 0x6A, 0xE0, 0xF1, 0x4C, 0x9A, 0x20, 0x6B,
 0x6C, 0xEA, 0x03, 0x22, 0x02, 0x6C, 0x00, 0x18,
-0x29, 0xE4, 0x30, 0xF0, 0x20, 0x6A, 0xE0, 0xF1,
+0xD3, 0xE3, 0x30, 0xF0, 0x20, 0x6A, 0xE0, 0xF1,
 0x4C, 0x9A, 0x40, 0x6B, 0x6C, 0xEA, 0x03, 0x22,
-0x02, 0x6C, 0x00, 0x18, 0x54, 0xE4, 0x30, 0xF0,
+0x02, 0x6C, 0x00, 0x18, 0xFE, 0xE3, 0x30, 0xF0,
 0x20, 0x6A, 0xE0, 0xF1, 0x4C, 0x9A, 0x80, 0x6B,
 0x6C, 0xEA, 0x03, 0x22, 0x02, 0x6C, 0x00, 0x18,
-0x11, 0xE4, 0x30, 0xF0, 0x20, 0x6B, 0xE0, 0xF1,
+0xBB, 0xE3, 0x30, 0xF0, 0x20, 0x6B, 0xE0, 0xF1,
 0x6C, 0x9B, 0xFF, 0x6A, 0x01, 0x4A, 0x6C, 0xEA,
-0x03, 0x22, 0x03, 0x6C, 0x00, 0x18, 0xD9, 0xE3,
+0x03, 0x22, 0x03, 0x6C, 0x00, 0x18, 0x83, 0xE3,
 0x30, 0xF0, 0x20, 0x6B, 0xE0, 0xF1, 0x6C, 0x9B,
 0x00, 0xF2, 0x00, 0x6A, 0x6C, 0xEA, 0x03, 0x22,
-0x03, 0x6C, 0x00, 0x18, 0x29, 0xE4, 0x30, 0xF0,
+0x03, 0x6C, 0x00, 0x18, 0xD3, 0xE3, 0x30, 0xF0,
 0x20, 0x6B, 0xE0, 0xF1, 0x6C, 0x9B, 0x00, 0xF4,
 0x00, 0x6A, 0x6C, 0xEA, 0x03, 0x22, 0x03, 0x6C,
-0x00, 0x18, 0x54, 0xE4, 0x30, 0xF0, 0x20, 0x6B,
+0x00, 0x18, 0xFE, 0xE3, 0x30, 0xF0, 0x20, 0x6B,
 0xE0, 0xF1, 0x6C, 0x9B, 0x01, 0xF0, 0x00, 0x6A,
 0x6C, 0xEA, 0x03, 0x22, 0x03, 0x6C, 0x00, 0x18,
-0x11, 0xE4, 0x30, 0xF0, 0x20, 0x6B, 0xE0, 0xF1,
+0xBB, 0xE3, 0x30, 0xF0, 0x20, 0x6B, 0xE0, 0xF1,
 0x6C, 0x9B, 0x02, 0xF0, 0x00, 0x6A, 0x6C, 0xEA,
-0x03, 0x22, 0x04, 0x6C, 0x00, 0x18, 0xD9, 0xE3,
+0x03, 0x22, 0x04, 0x6C, 0x00, 0x18, 0x83, 0xE3,
 0x30, 0xF0, 0x20, 0x6B, 0xE0, 0xF1, 0x6C, 0x9B,
 0x04, 0xF0, 0x00, 0x6A, 0x6C, 0xEA, 0x03, 0x22,
-0x04, 0x6C, 0x00, 0x18, 0x29, 0xE4, 0x30, 0xF0,
+0x04, 0x6C, 0x00, 0x18, 0xD3, 0xE3, 0x30, 0xF0,
 0x20, 0x6B, 0xE0, 0xF1, 0x6C, 0x9B, 0x08, 0xF0,
 0x00, 0x6A, 0x6C, 0xEA, 0x03, 0x22, 0x04, 0x6C,
-0x00, 0x18, 0x54, 0xE4, 0x30, 0xF0, 0x20, 0x6B,
+0x00, 0x18, 0xFE, 0xE3, 0x30, 0xF0, 0x20, 0x6B,
 0xE0, 0xF1, 0x6C, 0x9B, 0x10, 0xF0, 0x00, 0x6A,
 0x6C, 0xEA, 0x03, 0x22, 0x04, 0x6C, 0x00, 0x18,
-0x11, 0xE4, 0x10, 0xF0, 0x24, 0x6A, 0x30, 0xF0,
-0x20, 0x6B, 0x5C, 0xF3, 0x50, 0x9A, 0xE0, 0xF1,
+0xBB, 0xE3, 0x10, 0xF0, 0x24, 0x6A, 0x30, 0xF0,
+0x20, 0x6B, 0x5B, 0xF7, 0x40, 0x9A, 0xE0, 0xF1,
 0x6C, 0x9B, 0x6C, 0xEA, 0x03, 0x22, 0x01, 0x6C,
-0x00, 0x18, 0xF6, 0xE3, 0x10, 0xF0, 0x24, 0x6A,
-0x30, 0xF0, 0x20, 0x6B, 0x5C, 0xF3, 0x54, 0x9A,
+0x00, 0x18, 0xA0, 0xE3, 0x10, 0xF0, 0x24, 0x6A,
+0x30, 0xF0, 0x20, 0x6B, 0x5B, 0xF7, 0x44, 0x9A,
 0xE0, 0xF1, 0x6C, 0x9B, 0x6C, 0xEA, 0x03, 0x22,
-0x02, 0x6C, 0x00, 0x18, 0xF6, 0xE3, 0x10, 0xF0,
-0x24, 0x6A, 0x30, 0xF0, 0x20, 0x6B, 0x5C, 0xF3,
-0x58, 0x9A, 0xE0, 0xF1, 0x6C, 0x9B, 0x6C, 0xEA,
-0x03, 0x22, 0x03, 0x6C, 0x00, 0x18, 0xF6, 0xE3,
+0x02, 0x6C, 0x00, 0x18, 0xA0, 0xE3, 0x10, 0xF0,
+0x24, 0x6A, 0x30, 0xF0, 0x20, 0x6B, 0x5B, 0xF7,
+0x48, 0x9A, 0xE0, 0xF1, 0x6C, 0x9B, 0x6C, 0xEA,
+0x03, 0x22, 0x03, 0x6C, 0x00, 0x18, 0xA0, 0xE3,
 0x10, 0xF0, 0x24, 0x6A, 0x30, 0xF0, 0x20, 0x6B,
-0x5C, 0xF3, 0x5C, 0x9A, 0xE0, 0xF1, 0x6C, 0x9B,
+0x5B, 0xF7, 0x4C, 0x9A, 0xE0, 0xF1, 0x6C, 0x9B,
 0x6C, 0xEA, 0x03, 0x22, 0x04, 0x6C, 0x00, 0x18,
-0xF6, 0xE3, 0x10, 0xF0, 0x24, 0x6B, 0xBC, 0xF2,
-0x70, 0x9B, 0x10, 0xF0, 0x23, 0x6A, 0x61, 0xF4,
+0xA0, 0xE3, 0x10, 0xF0, 0x24, 0x6B, 0x9B, 0xF6,
+0x6C, 0x9B, 0x10, 0xF0, 0x23, 0x6A, 0x61, 0xF4,
 0x02, 0x4A, 0x40, 0xDB, 0x05, 0x97, 0x03, 0x63,
 0x00, 0xEF, 0x00, 0x65, 0xFD, 0x63, 0x05, 0x62,
 0x30, 0xF0, 0x20, 0x6A, 0x4E, 0xF2, 0x4C, 0x9A,
@@ -19069,9 +19044,9 @@ u8 array_mp_8821c_fw_nic[] = {
 0x6D, 0xC2, 0x0C, 0x6B, 0x08, 0xF3, 0x6E, 0xC2,
 0x05, 0x97, 0x03, 0x63, 0x00, 0xEF, 0x00, 0x65,
 0xFD, 0x63, 0x05, 0x62, 0x04, 0xD0, 0x10, 0xF0,
-0x24, 0x6A, 0xBC, 0xF3, 0x5C, 0x9A, 0x60, 0xA2,
+0x24, 0x6A, 0x9B, 0xF7, 0x58, 0x9A, 0x60, 0xA2,
 0x42, 0x23, 0x00, 0x6B, 0x60, 0xC2, 0x10, 0xF0,
-0x24, 0x6A, 0x5C, 0xF3, 0x48, 0x9A, 0x02, 0x6B,
+0x24, 0x6A, 0x3B, 0xF7, 0x58, 0x9A, 0x02, 0x6B,
 0x30, 0xF0, 0x20, 0x68, 0x60, 0xC2, 0xC0, 0xF1,
 0x08, 0x48, 0x68, 0xF3, 0x79, 0xA0, 0x02, 0x6A,
 0xFF, 0x6C, 0x6C, 0xEA, 0x8C, 0xEA, 0x0B, 0x22,
@@ -19084,7 +19059,7 @@ u8 array_mp_8821c_fw_nic[] = {
 0x65, 0xA0, 0xE8, 0xF3, 0x44, 0xA0, 0x63, 0xEA,
 0x12, 0x60, 0x30, 0xF0, 0x20, 0x6B, 0x30, 0xF0,
 0x20, 0x6A, 0x6E, 0xF5, 0x58, 0x9A, 0xEF, 0xF6,
-0x85, 0xA3, 0x40, 0xEA, 0x01, 0x72, 0x07, 0x61,
+0x81, 0xA3, 0x40, 0xEA, 0x01, 0x72, 0x07, 0x61,
 0x68, 0xF3, 0x79, 0xA0, 0x21, 0x6A, 0x4B, 0xEA,
 0x6C, 0xEA, 0x68, 0xF3, 0x59, 0xC0, 0x05, 0x97,
 0x04, 0x90, 0x03, 0x63, 0x00, 0xEF, 0x00, 0x65,
@@ -19092,33 +19067,33 @@ u8 array_mp_8821c_fw_nic[] = {
 0x96, 0x34, 0x4C, 0xEC, 0x01, 0x74, 0x0B, 0x60,
 0x05, 0x24, 0x02, 0x74, 0x0D, 0x60, 0x03, 0x74,
 0x10, 0x60, 0x20, 0xE8, 0x10, 0xF0, 0x24, 0x6A,
-0x1C, 0xF4, 0x8C, 0x9A, 0x0E, 0x10, 0x10, 0xF0,
-0x24, 0x6A, 0x1C, 0xF4, 0x90, 0x9A, 0x09, 0x10,
-0x10, 0xF0, 0x24, 0x6A, 0x1C, 0xF4, 0x94, 0x9A,
-0x04, 0x10, 0x10, 0xF0, 0x24, 0x6A, 0x1C, 0xF4,
-0x98, 0x9A, 0xA0, 0x9C, 0x01, 0x6A, 0x44, 0xEB,
+0xFB, 0xF7, 0x88, 0x9A, 0x0E, 0x10, 0x10, 0xF0,
+0x24, 0x6A, 0xFB, 0xF7, 0x8C, 0x9A, 0x09, 0x10,
+0x10, 0xF0, 0x24, 0x6A, 0xFB, 0xF7, 0x90, 0x9A,
+0x04, 0x10, 0x10, 0xF0, 0x24, 0x6A, 0xFB, 0xF7,
+0x94, 0x9A, 0xA0, 0x9C, 0x01, 0x6A, 0x44, 0xEB,
 0xAD, 0xEA, 0x40, 0xDC, 0x20, 0xE8, 0x00, 0x65,
 0xFF, 0x6A, 0x4C, 0xEC, 0x1F, 0x6B, 0x8C, 0xEB,
 0x96, 0x34, 0x4C, 0xEC, 0x01, 0x74, 0x0B, 0x60,
 0x05, 0x24, 0x02, 0x74, 0x0D, 0x60, 0x03, 0x74,
 0x10, 0x60, 0x20, 0xE8, 0x10, 0xF0, 0x24, 0x6A,
-0x1C, 0xF4, 0x8C, 0x9A, 0x0E, 0x10, 0x10, 0xF0,
-0x24, 0x6A, 0x1C, 0xF4, 0x90, 0x9A, 0x09, 0x10,
-0x10, 0xF0, 0x24, 0x6A, 0x1C, 0xF4, 0x94, 0x9A,
-0x04, 0x10, 0x10, 0xF0, 0x24, 0x6A, 0x1C, 0xF4,
-0x98, 0x9A, 0xA0, 0x9C, 0x01, 0x6A, 0x44, 0xEB,
+0xFB, 0xF7, 0x88, 0x9A, 0x0E, 0x10, 0x10, 0xF0,
+0x24, 0x6A, 0xFB, 0xF7, 0x8C, 0x9A, 0x09, 0x10,
+0x10, 0xF0, 0x24, 0x6A, 0xFB, 0xF7, 0x90, 0x9A,
+0x04, 0x10, 0x10, 0xF0, 0x24, 0x6A, 0xFB, 0xF7,
+0x94, 0x9A, 0xA0, 0x9C, 0x01, 0x6A, 0x44, 0xEB,
 0x4F, 0xEA, 0xAC, 0xEA, 0x40, 0xDC, 0x20, 0xE8,
 0xFC, 0x63, 0x07, 0x62, 0x06, 0xD1, 0x05, 0xD0,
 0xFF, 0x6A, 0x8C, 0xEA, 0x05, 0x5A, 0x00, 0x68,
 0x24, 0x60, 0x10, 0xF0, 0x24, 0x6B, 0x48, 0x34,
-0x3B, 0xF6, 0x04, 0x4B, 0x8D, 0xE3, 0x60, 0x9B,
-0x00, 0xEB, 0x10, 0xF0, 0x24, 0x6B, 0x7C, 0xF3,
-0x7C, 0x9B, 0x13, 0x10, 0x10, 0xF0, 0x24, 0x6B,
-0x9C, 0xF3, 0x60, 0x9B, 0x0E, 0x10, 0x10, 0xF0,
-0x24, 0x6B, 0x9C, 0xF3, 0x64, 0x9B, 0x09, 0x10,
-0x10, 0xF0, 0x24, 0x6B, 0x9C, 0xF3, 0x68, 0x9B,
-0x04, 0x10, 0x10, 0xF0, 0x24, 0x6B, 0x9C, 0xF3,
-0x6C, 0x9B, 0x60, 0xAB, 0xFF, 0xF7, 0x1F, 0x68,
+0x1B, 0xF2, 0x00, 0x4B, 0x8D, 0xE3, 0x60, 0x9B,
+0x00, 0xEB, 0x10, 0xF0, 0x24, 0x6B, 0x5B, 0xF7,
+0x78, 0x9B, 0x13, 0x10, 0x10, 0xF0, 0x24, 0x6B,
+0x5B, 0xF7, 0x7C, 0x9B, 0x0E, 0x10, 0x10, 0xF0,
+0x24, 0x6B, 0x7B, 0xF7, 0x60, 0x9B, 0x09, 0x10,
+0x10, 0xF0, 0x24, 0x6B, 0x7B, 0xF7, 0x64, 0x9B,
+0x04, 0x10, 0x10, 0xF0, 0x24, 0x6B, 0x7B, 0xF7,
+0x68, 0x9B, 0x60, 0xAB, 0xFF, 0xF7, 0x1F, 0x68,
 0x6C, 0xE8, 0x18, 0xF0, 0x00, 0x6B, 0x0C, 0xEB,
 0x0F, 0x2B, 0x30, 0xF0, 0x20, 0x6B, 0xC0, 0xF1,
 0x08, 0x4B, 0x68, 0xF3, 0x9D, 0xA3, 0x02, 0x6A,
@@ -19135,13 +19110,13 @@ u8 array_mp_8821c_fw_nic[] = {
 0x8C, 0xEA, 0x10, 0x72, 0x2E, 0x61, 0x68, 0xF3,
 0x9D, 0xA3, 0x04, 0x6A, 0x00, 0x6D, 0x8D, 0xEA,
 0x68, 0xF3, 0x5D, 0xC3, 0x01, 0x6C, 0x00, 0x18,
-0x42, 0xD2, 0x23, 0x10, 0x68, 0xF3, 0xDD, 0xA3,
+0x30, 0xD2, 0x23, 0x10, 0x68, 0xF3, 0xDD, 0xA3,
 0x01, 0x6D, 0xCD, 0xED, 0x68, 0xF3, 0xBD, 0xC3,
 0x68, 0xF3, 0xB5, 0xA3, 0x10, 0x6B, 0x6B, 0xEB,
 0xAC, 0xEB, 0x8C, 0xEB, 0x20, 0x73, 0x06, 0x60,
 0x30, 0xF0, 0x20, 0x6A, 0x2E, 0xF4, 0x54, 0x9A,
 0x40, 0xEA, 0x0F, 0x10, 0x82, 0x67, 0x00, 0x18,
-0x6A, 0xCE, 0x0B, 0x10, 0x30, 0xF0, 0x20, 0x6A,
+0x58, 0xCE, 0x0B, 0x10, 0x30, 0xF0, 0x20, 0x6A,
 0xC0, 0xF1, 0x08, 0x4A, 0x68, 0xF3, 0x9D, 0xA2,
 0x02, 0x6B, 0x6B, 0xEB, 0x8C, 0xEB, 0x68, 0xF3,
 0x7D, 0xC2, 0x02, 0x30, 0x1E, 0x30, 0x1A, 0x20,
@@ -19157,39 +19132,39 @@ u8 array_mp_8821c_fw_nic[] = {
 0x7D, 0xC2, 0x07, 0x97, 0x06, 0x91, 0x05, 0x90,
 0x04, 0x63, 0x00, 0xEF, 0xFD, 0x63, 0x05, 0x62,
 0x04, 0xD0, 0xFF, 0x68, 0x8C, 0xE8, 0x00, 0x18,
-0x0C, 0xC9, 0x03, 0x2A, 0x90, 0x67, 0x00, 0x18,
-0x61, 0xCE, 0x05, 0x97, 0x04, 0x90, 0x03, 0x63,
+0x0B, 0xC9, 0x03, 0x2A, 0x90, 0x67, 0x00, 0x18,
+0x4F, 0xCE, 0x05, 0x97, 0x04, 0x90, 0x03, 0x63,
 0x00, 0xEF, 0x00, 0x65, 0xFD, 0x63, 0x05, 0x62,
-0x00, 0x18, 0x28, 0xF0, 0x01, 0x72, 0x01, 0x6C,
-0x01, 0x60, 0x02, 0x6C, 0x00, 0x18, 0xB3, 0xF3,
+0x00, 0x18, 0xCA, 0xEF, 0x01, 0x72, 0x01, 0x6C,
+0x01, 0x60, 0x02, 0x6C, 0x00, 0x18, 0x55, 0xF3,
 0x05, 0x97, 0x03, 0x63, 0x00, 0xEF, 0x00, 0x65,
-0x30, 0xF0, 0x20, 0x6B, 0xEF, 0xF6, 0x62, 0xAB,
+0x30, 0xF0, 0x20, 0x6B, 0xCF, 0xF6, 0x7E, 0xAB,
 0xFF, 0x6A, 0x4C, 0xEC, 0x71, 0xE4, 0x4C, 0xEC,
-0x10, 0xF0, 0x24, 0x6A, 0x1C, 0xF4, 0x48, 0x9A,
-0x80, 0xC2, 0x10, 0xF0, 0x24, 0x6A, 0x1C, 0xF4,
-0x5C, 0x9A, 0x80, 0xC2, 0x20, 0xE8, 0x00, 0x65,
+0x10, 0xF0, 0x24, 0x6A, 0xFB, 0xF7, 0x44, 0x9A,
+0x80, 0xC2, 0x10, 0xF0, 0x24, 0x6A, 0xFB, 0xF7,
+0x58, 0x9A, 0x80, 0xC2, 0x20, 0xE8, 0x00, 0x65,
 0xFD, 0x63, 0x05, 0x62, 0x30, 0xF0, 0x20, 0x6A,
 0x4E, 0xF2, 0x50, 0x9A, 0xA4, 0x67, 0x30, 0xF0,
-0x20, 0x6C, 0xCF, 0xF6, 0x1C, 0x4C, 0x05, 0x6E,
+0x20, 0x6C, 0xCF, 0xF6, 0x18, 0x4C, 0x05, 0x6E,
 0x40, 0xEA, 0x05, 0x97, 0x03, 0x63, 0x00, 0xEF,
 0xFC, 0x63, 0x07, 0x62, 0x06, 0xD1, 0x05, 0xD0,
-0x10, 0xF0, 0x24, 0x6B, 0x5C, 0xF3, 0x10, 0x4B,
+0x10, 0xF0, 0x24, 0x6B, 0x5B, 0xF7, 0x00, 0x4B,
 0x30, 0xF0, 0x20, 0x69, 0xFF, 0x68, 0xAC, 0xE8,
 0xCE, 0xF4, 0x50, 0x99, 0xA0, 0x9B, 0x82, 0xF0,
 0x00, 0x6C, 0x01, 0x6E, 0x40, 0xEA, 0x10, 0xF0,
-0x24, 0x6B, 0x5C, 0xF4, 0xBC, 0x9B, 0xCE, 0xF4,
+0x24, 0x6B, 0x3C, 0xF0, 0xB8, 0x9B, 0xCE, 0xF4,
 0x50, 0x99, 0x00, 0x6C, 0x01, 0x6E, 0x40, 0xEA,
 0x01, 0x6D, 0xA1, 0xF4, 0x18, 0x6C, 0xAB, 0xED,
-0x00, 0x18, 0x42, 0xE7, 0x01, 0x70, 0x0F, 0x60,
+0x00, 0x18, 0xE4, 0xE6, 0x01, 0x70, 0x0F, 0x60,
 0x03, 0x20, 0x02, 0x70, 0x16, 0x60, 0x1F, 0x10,
-0x10, 0xF0, 0x24, 0x6B, 0x5C, 0xF3, 0x10, 0x4B,
+0x10, 0xF0, 0x24, 0x6B, 0x5B, 0xF7, 0x00, 0x4B,
 0x60, 0x9B, 0x6D, 0xEA, 0x10, 0xF0, 0x24, 0x6B,
-0x3C, 0xF6, 0x60, 0x9B, 0x13, 0x10, 0x10, 0xF0,
-0x24, 0x6B, 0x3C, 0xF6, 0x64, 0x9B, 0x6D, 0xEA,
-0x10, 0xF0, 0x24, 0x6B, 0x3C, 0xF6, 0x68, 0x9B,
-0x09, 0x10, 0x10, 0xF0, 0x24, 0x6B, 0x3C, 0xF6,
-0x6C, 0x9B, 0x6D, 0xEA, 0x10, 0xF0, 0x24, 0x6B,
-0x3C, 0xF6, 0x70, 0x9B, 0x6C, 0xEA, 0x30, 0xF0,
+0xFC, 0xF1, 0x7C, 0x9B, 0x13, 0x10, 0x10, 0xF0,
+0x24, 0x6B, 0x1C, 0xF2, 0x60, 0x9B, 0x6D, 0xEA,
+0x10, 0xF0, 0x24, 0x6B, 0x1C, 0xF2, 0x64, 0x9B,
+0x09, 0x10, 0x10, 0xF0, 0x24, 0x6B, 0x1C, 0xF2,
+0x68, 0x9B, 0x6D, 0xEA, 0x10, 0xF0, 0x24, 0x6B,
+0x1C, 0xF2, 0x6C, 0x9B, 0x6C, 0xEA, 0x30, 0xF0,
 0x20, 0x6B, 0xCE, 0xF4, 0x70, 0x9B, 0x01, 0x6D,
 0xA1, 0xF4, 0x18, 0x6C, 0xAB, 0xED, 0xC2, 0x67,
 0x40, 0xEB, 0x07, 0x97, 0x06, 0x91, 0x05, 0x90,
@@ -19217,24 +19192,24 @@ u8 array_mp_8821c_fw_nic[] = {
 0x40, 0xEA, 0xCE, 0xF2, 0x44, 0x99, 0x0A, 0x94,
 0x09, 0x95, 0x0B, 0x96, 0x02, 0x6F, 0x40, 0xEA,
 0x0F, 0x58, 0x08, 0x60, 0x10, 0xF0, 0x24, 0x6A,
-0x08, 0x33, 0x5C, 0xF1, 0x00, 0x4A, 0x69, 0xE2,
+0x08, 0x33, 0x1B, 0xF5, 0x1C, 0x4A, 0x69, 0xE2,
 0x40, 0x9A, 0x00, 0xEA, 0x00, 0x6A, 0x44, 0x10,
 0xD0, 0xF4, 0x44, 0x40, 0x1F, 0xF7, 0x00, 0x6B,
 0x6C, 0xEA, 0x05, 0x2A, 0x10, 0xF0, 0x24, 0x6A,
-0xFC, 0xF6, 0x5C, 0x9A, 0x34, 0x10, 0x10, 0xF0,
-0x24, 0x6A, 0x1C, 0xF4, 0x4C, 0x9A, 0x2F, 0x10,
+0xDC, 0xF2, 0x58, 0x9A, 0x34, 0x10, 0x10, 0xF0,
+0x24, 0x6A, 0xFB, 0xF7, 0x48, 0x9A, 0x2F, 0x10,
 0x80, 0xF4, 0x44, 0x40, 0x1F, 0xF7, 0x00, 0x6B,
 0x6C, 0xEA, 0x05, 0x2A, 0x10, 0xF0, 0x24, 0x6A,
-0x1C, 0xF7, 0x40, 0x9A, 0x24, 0x10, 0x10, 0xF0,
-0x24, 0x6A, 0x1C, 0xF4, 0x58, 0x9A, 0x1F, 0x10,
+0xDC, 0xF2, 0x5C, 0x9A, 0x24, 0x10, 0x10, 0xF0,
+0x24, 0x6A, 0xFB, 0xF7, 0x54, 0x9A, 0x1F, 0x10,
 0xC0, 0xF4, 0x48, 0x40, 0x1F, 0xF7, 0x00, 0x6B,
 0x6C, 0xEA, 0x05, 0x2A, 0x10, 0xF0, 0x24, 0x6A,
-0x1C, 0xF7, 0x44, 0x9A, 0x14, 0x10, 0x10, 0xF0,
-0x24, 0x6A, 0x1C, 0xF7, 0x48, 0x9A, 0x0F, 0x10,
+0xFC, 0xF2, 0x40, 0x9A, 0x14, 0x10, 0x10, 0xF0,
+0x24, 0x6A, 0xFC, 0xF2, 0x44, 0x9A, 0x0F, 0x10,
 0x70, 0xF4, 0x48, 0x40, 0x1F, 0xF7, 0x00, 0x6B,
 0x6C, 0xEA, 0x05, 0x2A, 0x10, 0xF0, 0x24, 0x6A,
-0x1C, 0xF7, 0x4C, 0x9A, 0x04, 0x10, 0x10, 0xF0,
-0x24, 0x6A, 0x1C, 0xF7, 0x50, 0x9A, 0x49, 0xE0,
+0xFC, 0xF2, 0x48, 0x9A, 0x04, 0x10, 0x10, 0xF0,
+0x24, 0x6A, 0xFC, 0xF2, 0x4C, 0x9A, 0x49, 0xE0,
 0x60, 0xAA, 0xFF, 0xF7, 0x1F, 0x6A, 0x6C, 0xEA,
 0x7D, 0x67, 0x53, 0xC3, 0x42, 0x32, 0x54, 0xC3,
 0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A,
@@ -19259,7 +19234,7 @@ u8 array_mp_8821c_fw_nic[] = {
 0x58, 0x9A, 0x90, 0x67, 0xB1, 0x67, 0x53, 0x6E,
 0x40, 0xEA, 0x7D, 0x67, 0x20, 0x6A, 0x50, 0xC3,
 0x03, 0x6A, 0x4F, 0xCB, 0x10, 0xF0, 0x24, 0x6A,
-0x5C, 0xF3, 0x4C, 0x9A, 0x9D, 0x67, 0x40, 0xA2,
+0x3B, 0xF7, 0x5C, 0x9A, 0x9D, 0x67, 0x40, 0xA2,
 0x52, 0xC3, 0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1,
 0x08, 0x4A, 0x2C, 0xF7, 0x7E, 0xA2, 0x2C, 0xF7,
 0x5F, 0xA2, 0x73, 0xC4, 0x54, 0xC4, 0x30, 0xF0,
@@ -19268,48 +19243,48 @@ u8 array_mp_8821c_fw_nic[] = {
 0x06, 0x63, 0x00, 0xEF, 0xFC, 0x63, 0x07, 0x62,
 0x30, 0xF0, 0x20, 0x6A, 0x4E, 0xF2, 0x50, 0x9A,
 0xA4, 0x67, 0x30, 0xF0, 0x20, 0x6C, 0xEF, 0xF6,
-0x04, 0x4C, 0x07, 0x6E, 0x40, 0xEA, 0x30, 0xF0,
-0x20, 0x6A, 0xEF, 0xF6, 0x44, 0xA2, 0x05, 0x5A,
+0x00, 0x4C, 0x07, 0x6E, 0x40, 0xEA, 0x30, 0xF0,
+0x20, 0x6A, 0xEF, 0xF6, 0x40, 0xA2, 0x05, 0x5A,
 0x13, 0x60, 0x10, 0xF0, 0x24, 0x6B, 0x48, 0x32,
-0x7C, 0xF1, 0x1C, 0x4B, 0x4D, 0xE3, 0x40, 0x9B,
+0x5B, 0xF5, 0x18, 0x4B, 0x4D, 0xE3, 0x40, 0x9B,
 0x00, 0xEA, 0x00, 0x6C, 0x07, 0x10, 0x01, 0x6C,
 0x05, 0x10, 0x02, 0x6C, 0x03, 0x10, 0x03, 0x6C,
-0x01, 0x10, 0x04, 0x6C, 0x00, 0x18, 0x20, 0xE2,
+0x01, 0x10, 0x04, 0x6C, 0x00, 0x18, 0xCA, 0xE1,
 0x30, 0xF0, 0x20, 0x6B, 0xC0, 0xF1, 0x08, 0x4B,
 0x69, 0xF3, 0x48, 0xA3, 0x1F, 0x6C, 0x01, 0x6D,
 0x4A, 0x32, 0x8C, 0xEA, 0x30, 0xF0, 0x20, 0x6C,
-0xEF, 0xF6, 0x84, 0xA4, 0x47, 0xEC, 0xAC, 0xEA,
+0xEF, 0xF6, 0x80, 0xA4, 0x47, 0xEC, 0xAC, 0xEA,
 0x03, 0x22, 0x69, 0xF3, 0x89, 0xC3, 0x04, 0x10,
 0x01, 0x6A, 0x4B, 0xEA, 0x69, 0xF3, 0x49, 0xC3,
 0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A,
 0x69, 0xF3, 0x88, 0xA2, 0x02, 0x6B, 0x8C, 0xEB,
 0x1C, 0x23, 0x03, 0x6B, 0x6B, 0xEB, 0x8C, 0xEB,
-0x69, 0xF3, 0x68, 0xC2, 0x00, 0x18, 0x3F, 0xE9,
+0x69, 0xF3, 0x68, 0xC2, 0x00, 0x18, 0xE1, 0xE8,
 0x04, 0xD2, 0x30, 0xF0, 0x20, 0x6A, 0x04, 0x93,
-0xCF, 0xF5, 0x5C, 0x9A, 0x6E, 0xEA, 0x03, 0x22,
-0x04, 0x94, 0x00, 0x18, 0x60, 0xE9, 0x30, 0xF0,
+0xCF, 0xF5, 0x58, 0x9A, 0x6E, 0xEA, 0x03, 0x22,
+0x04, 0x94, 0x00, 0x18, 0x02, 0xE9, 0x30, 0xF0,
 0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A, 0x69, 0xF3,
 0x88, 0xA2, 0x02, 0x6B, 0x8D, 0xEB, 0x69, 0xF3,
 0x68, 0xC2, 0x07, 0x97, 0x04, 0x63, 0x00, 0xEF,
 0xFD, 0x63, 0x05, 0x62, 0x30, 0xF0, 0x20, 0x6A,
 0x4E, 0xF2, 0x50, 0x9A, 0xA4, 0x67, 0x30, 0xF0,
-0x20, 0x6C, 0xAF, 0xF5, 0x10, 0x4C, 0x04, 0x6E,
-0x40, 0xEA, 0x00, 0x18, 0xB9, 0xCB, 0x05, 0x97,
+0x20, 0x6C, 0xAF, 0xF5, 0x0C, 0x4C, 0x04, 0x6E,
+0x40, 0xEA, 0x00, 0x18, 0xC0, 0xCB, 0x05, 0x97,
 0x03, 0x63, 0x00, 0xEF, 0xFB, 0x63, 0x09, 0x62,
 0x08, 0xD1, 0x07, 0xD0, 0x10, 0xF0, 0x24, 0x6A,
-0x3C, 0xF7, 0x08, 0x9A, 0x0A, 0xD4, 0xFF, 0x69,
+0x1C, 0xF3, 0x04, 0x9A, 0x0A, 0xD4, 0xFF, 0x69,
 0x40, 0xA0, 0x0A, 0x95, 0x30, 0xF0, 0x20, 0x6C,
 0x62, 0x67, 0x30, 0xF0, 0x20, 0x6A, 0x4E, 0xF2,
 0x50, 0x9A, 0x2C, 0xEB, 0x05, 0xD3, 0xC8, 0xF4,
 0x12, 0x4C, 0x01, 0x6E, 0x40, 0xEA, 0x10, 0xF0,
-0x24, 0x6A, 0x3C, 0xF7, 0x6C, 0x9A, 0xF8, 0x6A,
+0x24, 0x6A, 0x1C, 0xF3, 0x68, 0x9A, 0xF8, 0x6A,
 0x80, 0xA3, 0x8C, 0xEA, 0x40, 0xC3, 0x10, 0xF0,
-0x24, 0x6A, 0x3C, 0xF7, 0x50, 0x9A, 0x02, 0x6B,
+0x24, 0x6A, 0x1C, 0xF3, 0x4C, 0x9A, 0x02, 0x6B,
 0x00, 0x6C, 0x60, 0xC2, 0x10, 0xF0, 0x24, 0x6B,
-0x3C, 0xF7, 0x74, 0x9B, 0x80, 0xC3, 0x10, 0xF0,
-0x24, 0x6B, 0x3C, 0xF7, 0x78, 0x9B, 0x20, 0x6C,
+0x1C, 0xF3, 0x70, 0x9B, 0x80, 0xC3, 0x10, 0xF0,
+0x24, 0x6B, 0x1C, 0xF3, 0x74, 0x9B, 0x20, 0x6C,
 0x80, 0xC3, 0x40, 0xA2, 0x10, 0xF0, 0x24, 0x6B,
-0x3C, 0xF7, 0x7C, 0x9B, 0x2C, 0xEA, 0x50, 0x32,
+0x1C, 0xF3, 0x78, 0x9B, 0x2C, 0xEA, 0x50, 0x32,
 0x01, 0x4A, 0x2C, 0xEA, 0x40, 0xC3, 0x0A, 0x94,
 0x02, 0x6B, 0x40, 0xA4, 0x6C, 0xEA, 0x2C, 0xEA,
 0xA0, 0xF0, 0x0A, 0x22, 0x30, 0xF0, 0x20, 0x6C,
@@ -19320,24 +19295,24 @@ u8 array_mp_8821c_fw_nic[] = {
 0x40, 0xEA, 0x04, 0x92, 0x05, 0x94, 0x20, 0x68,
 0x08, 0xF3, 0x6A, 0xA2, 0x04, 0x6A, 0x8D, 0xE8,
 0x6C, 0xEA, 0x2C, 0xEA, 0x2C, 0xE8, 0x1A, 0x22,
-0x10, 0xF0, 0x24, 0x6A, 0x5C, 0xF7, 0x40, 0x9A,
+0x10, 0xF0, 0x24, 0x6A, 0x1C, 0xF3, 0x5C, 0x9A,
 0x01, 0x6C, 0x10, 0xF0, 0x00, 0x6D, 0x60, 0xA2,
 0x2C, 0xEB, 0x60, 0xC2, 0x30, 0xF0, 0x20, 0x6B,
 0x4E, 0xF2, 0x54, 0x9B, 0x40, 0xEA, 0x10, 0xF0,
-0x24, 0x6A, 0xFC, 0xF2, 0x6C, 0x9A, 0x02, 0x6C,
+0x24, 0x6A, 0xDB, 0xF6, 0x68, 0x9A, 0x02, 0x6C,
 0x40, 0xA3, 0x2C, 0xEA, 0x8D, 0xEA, 0x2C, 0xEA,
 0x40, 0xC3, 0x0A, 0x10, 0x04, 0x93, 0x01, 0x6C,
 0x10, 0xF0, 0x00, 0x6D, 0x08, 0xF3, 0x4B, 0xC3,
-0x08, 0xF3, 0x4C, 0xC3, 0x00, 0x18, 0x98, 0xE1,
+0x08, 0xF3, 0x4C, 0xC3, 0x00, 0x18, 0x42, 0xE1,
 0x30, 0xF0, 0x20, 0x6A, 0xC8, 0xF4, 0x92, 0xA2,
 0x08, 0x6A, 0xFF, 0x6B, 0x8C, 0xEA, 0x0D, 0x22,
 0x02, 0x6A, 0x4D, 0xE8, 0x10, 0xF0, 0x24, 0x6A,
-0xFC, 0xF2, 0x8C, 0x9A, 0x01, 0x6D, 0x6C, 0xE8,
+0xDB, 0xF6, 0x88, 0x9A, 0x01, 0x6D, 0x6C, 0xE8,
 0x40, 0xA4, 0x6C, 0xEA, 0xAD, 0xEA, 0x6C, 0xEA,
 0x40, 0xC4, 0x30, 0xF0, 0x20, 0x6A, 0xC8, 0xF4,
 0x92, 0xA2, 0x10, 0x6A, 0xFF, 0x6B, 0x8C, 0xEA,
 0x0D, 0x22, 0x04, 0x6A, 0x4D, 0xE8, 0x10, 0xF0,
-0x24, 0x6A, 0xFC, 0xF2, 0x8C, 0x9A, 0x01, 0x6D,
+0x24, 0x6A, 0xDB, 0xF6, 0x88, 0x9A, 0x01, 0x6D,
 0x6C, 0xE8, 0x40, 0xA4, 0x6C, 0xEA, 0xAD, 0xEA,
 0x6C, 0xEA, 0x40, 0xC4, 0x30, 0xF0, 0x20, 0x6A,
 0xC8, 0xF4, 0x72, 0xA2, 0x20, 0x6A, 0x6C, 0xEA,
@@ -19345,41 +19320,41 @@ u8 array_mp_8821c_fw_nic[] = {
 0xFF, 0x6A, 0x4C, 0xE8, 0x30, 0xF0, 0x20, 0x6A,
 0xC8, 0xF4, 0x72, 0xA2, 0x40, 0x6A, 0x4C, 0xEB,
 0x03, 0x2B, 0x4D, 0xE8, 0xFF, 0x6A, 0x4C, 0xE8,
-0x10, 0xF0, 0x24, 0x6A, 0x3C, 0xF7, 0x48, 0x9A,
+0x10, 0xF0, 0x24, 0x6A, 0x1C, 0xF3, 0x44, 0x9A,
 0x00, 0xC2, 0x30, 0xF0, 0x20, 0x6A, 0xC8, 0xF4,
 0x55, 0xA2, 0x03, 0x2A, 0x01, 0x6C, 0x00, 0x18,
-0xB3, 0xF3, 0x30, 0xF0, 0x20, 0x6A, 0xC8, 0xF4,
+0x55, 0xF3, 0x30, 0xF0, 0x20, 0x6A, 0xC8, 0xF4,
 0x72, 0xA2, 0x40, 0x6A, 0x04, 0x6C, 0x6C, 0xEA,
-0x05, 0x2A, 0x00, 0x18, 0x28, 0xF0, 0x01, 0x6C,
-0x01, 0x2A, 0x02, 0x6C, 0x00, 0x18, 0xB3, 0xF3,
+0x05, 0x2A, 0x00, 0x18, 0xCA, 0xEF, 0x01, 0x6C,
+0x01, 0x2A, 0x02, 0x6C, 0x00, 0x18, 0x55, 0xF3,
 0xA9, 0x10, 0x40, 0xC0, 0x04, 0x94, 0x08, 0xF3,
 0x4D, 0xA4, 0x04, 0x72, 0xC0, 0xF0, 0x0F, 0x61,
-0x00, 0x6C, 0x00, 0x18, 0xB3, 0xF3, 0xCB, 0x10,
+0x00, 0x6C, 0x00, 0x18, 0x55, 0xF3, 0xCB, 0x10,
 0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A,
 0x04, 0xD2, 0x08, 0xF3, 0x4A, 0xA2, 0x01, 0x6B,
 0x6C, 0xEA, 0x2C, 0xEA, 0x80, 0xF0, 0x19, 0x22,
 0x30, 0xF0, 0x20, 0x6C, 0x4E, 0xF2, 0x54, 0x9C,
 0xC0, 0x6D, 0x83, 0x67, 0x40, 0xEA, 0x10, 0xF0,
-0x24, 0x6B, 0xFC, 0xF2, 0x0C, 0x4B, 0x05, 0x92,
+0x24, 0x6B, 0xDB, 0xF6, 0x08, 0x4B, 0x05, 0x92,
 0x60, 0x9B, 0x20, 0x68, 0x4D, 0xE8, 0x40, 0xA3,
 0x01, 0x6C, 0x2C, 0xE8, 0x2C, 0xEA, 0x8D, 0xEA,
 0x2C, 0xEA, 0x40, 0xC3, 0x04, 0x94, 0x04, 0x6A,
 0x08, 0xF3, 0x6A, 0xA4, 0x6C, 0xEA, 0x2C, 0xEA,
-0x1B, 0x22, 0x10, 0xF0, 0x24, 0x6A, 0x5C, 0xF7,
-0x40, 0x9A, 0x01, 0x6C, 0x10, 0xF0, 0x00, 0x6D,
+0x1B, 0x22, 0x10, 0xF0, 0x24, 0x6A, 0x1C, 0xF3,
+0x5C, 0x9A, 0x01, 0x6C, 0x10, 0xF0, 0x00, 0x6D,
 0x60, 0xA2, 0x2C, 0xEB, 0x60, 0xC2, 0x30, 0xF0,
 0x20, 0x6B, 0x4E, 0xF2, 0x54, 0x9B, 0x40, 0xEA,
-0x10, 0xF0, 0x24, 0x6C, 0xFC, 0xF2, 0x0C, 0x4C,
+0x10, 0xF0, 0x24, 0x6C, 0xDB, 0xF6, 0x08, 0x4C,
 0x80, 0x9C, 0x02, 0x6B, 0x40, 0xA4, 0x2C, 0xEA,
 0x6D, 0xEA, 0x2C, 0xEA, 0x40, 0xC4, 0x05, 0x10,
 0x01, 0x6C, 0x10, 0xF0, 0x00, 0x6D, 0x00, 0x18,
-0x98, 0xE1, 0x30, 0xF0, 0x20, 0x6A, 0xC8, 0xF4,
+0x42, 0xE1, 0x30, 0xF0, 0x20, 0x6A, 0xC8, 0xF4,
 0x72, 0xA2, 0x08, 0x6A, 0x6C, 0xEA, 0x04, 0x22,
 0x02, 0x6A, 0x4D, 0xE8, 0xFF, 0x6A, 0x4C, 0xE8,
 0x30, 0xF0, 0x20, 0x6A, 0xC8, 0xF4, 0x72, 0xA2,
 0x10, 0x6A, 0x6C, 0xEA, 0x04, 0x22, 0x04, 0x6A,
 0x4D, 0xE8, 0xFF, 0x6A, 0x4C, 0xE8, 0x10, 0xF0,
-0x24, 0x6A, 0x3C, 0xF7, 0x68, 0x9A, 0x40, 0x6D,
+0x24, 0x6A, 0x1C, 0xF3, 0x64, 0x9A, 0x40, 0x6D,
 0xFF, 0x6C, 0x00, 0xC3, 0x30, 0xF0, 0x20, 0x68,
 0xC0, 0xF1, 0x08, 0x48, 0x08, 0xF3, 0x4A, 0xA0,
 0xAC, 0xEA, 0x0B, 0x22, 0x08, 0xF3, 0x4E, 0xA0,
@@ -19387,15 +19362,15 @@ u8 array_mp_8821c_fw_nic[] = {
 0x2E, 0xF4, 0x48, 0x9A, 0x02, 0x6C, 0x00, 0x6D,
 0x1E, 0x10, 0x40, 0xA3, 0x8C, 0xEA, 0xAD, 0xEA,
 0x8C, 0xEA, 0x40, 0xC3, 0x08, 0xF3, 0x4E, 0xA0,
-0x02, 0x72, 0x18, 0x61, 0x00, 0x18, 0x9A, 0xCC,
-0x00, 0x18, 0x28, 0xF0, 0x01, 0x72, 0x09, 0x61,
+0x02, 0x72, 0x18, 0x61, 0x00, 0x18, 0xC2, 0xCC,
+0x00, 0x18, 0xCA, 0xEF, 0x01, 0x72, 0x09, 0x61,
 0x30, 0xF0, 0x20, 0x6A, 0x2E, 0xF4, 0x48, 0x9A,
 0x68, 0xF3, 0x98, 0xA0, 0x01, 0x6D, 0x00, 0x6E,
 0x07, 0x10, 0x30, 0xF0, 0x20, 0x6A, 0x2E, 0xF4,
 0x48, 0x9A, 0x00, 0x6C, 0xA4, 0x67, 0xC5, 0x67,
 0x40, 0xEA, 0x04, 0x10, 0x68, 0xF3, 0x5C, 0xA0,
 0x08, 0xF3, 0x4E, 0xC0, 0x10, 0xF0, 0x24, 0x6A,
-0x5C, 0xF7, 0x44, 0x9A, 0x22, 0x6B, 0x60, 0xC2,
+0x3C, 0xF3, 0x40, 0x9A, 0x22, 0x6B, 0x60, 0xC2,
 0x26, 0x10, 0x40, 0xC0, 0x04, 0x93, 0x08, 0xF3,
 0x4E, 0xA3, 0x02, 0x72, 0x06, 0x61, 0x30, 0xF0,
 0x20, 0x6A, 0x2E, 0xF4, 0x48, 0x9A, 0x04, 0x6C,
@@ -19412,408 +19387,419 @@ u8 array_mp_8821c_fw_nic[] = {
 0x4C, 0xEE, 0x4C, 0xEC, 0x06, 0x61, 0x01, 0x75,
 0x02, 0x61, 0x01, 0x76, 0x07, 0x60, 0x00, 0x6D,
 0x0A, 0x10, 0x01, 0x75, 0x06, 0x61, 0x01, 0x76,
-0x01, 0x6D, 0x05, 0x60, 0x00, 0x18, 0x4C, 0xDF,
+0x01, 0x6D, 0x05, 0x60, 0x00, 0x18, 0xF6, 0xDE,
 0x04, 0x10, 0x01, 0x5B, 0xB8, 0x67, 0x00, 0x18,
-0x41, 0xDF, 0x05, 0x97, 0x03, 0x63, 0x00, 0xEF,
+0xEB, 0xDE, 0x05, 0x97, 0x03, 0x63, 0x00, 0xEF,
 0xFD, 0x63, 0x05, 0x62, 0x04, 0xD0, 0xFF, 0x68,
-0x8C, 0xE8, 0x90, 0x67, 0x00, 0x18, 0x19, 0xCC,
-0x90, 0x67, 0x00, 0x18, 0x72, 0xEC, 0x01, 0x6C,
-0x00, 0x18, 0x34, 0xCA, 0x90, 0x67, 0x00, 0x18,
-0xDD, 0xCB, 0x30, 0xF0, 0x20, 0x6A, 0xEF, 0xF4,
-0x08, 0x4A, 0x00, 0xF2, 0x63, 0xA2, 0x0D, 0x2B,
-0xC0, 0xF0, 0x7D, 0xA2, 0x07, 0x6A, 0x6C, 0xEA,
-0x4E, 0xE8, 0x07, 0x28, 0x00, 0x18, 0x49, 0xD6,
-0x30, 0xF0, 0x20, 0x6A, 0x8E, 0xF3, 0x5C, 0x9A,
-0x40, 0xEA, 0x05, 0x97, 0x04, 0x90, 0x03, 0x63,
-0x00, 0xEF, 0x00, 0x65, 0xFC, 0x63, 0x07, 0x62,
-0x06, 0xD1, 0x05, 0xD0, 0xFF, 0x6A, 0x27, 0x67,
-0x4C, 0xE9, 0x6F, 0x41, 0x4C, 0xEB, 0x04, 0x67,
-0x02, 0x5B, 0x4C, 0xE8, 0x4C, 0xED, 0x4C, 0xEE,
-0x03, 0x61, 0x90, 0x67, 0x00, 0x18, 0x8F, 0xE8,
-0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A,
-0x49, 0xE0, 0x0C, 0xF7, 0x7E, 0xA2, 0x2C, 0xF7,
-0x4E, 0xA2, 0x10, 0x58, 0x6D, 0xEA, 0xFF, 0x6B,
-0x6C, 0xEA, 0x49, 0x60, 0x10, 0xF0, 0x24, 0x6B,
-0x08, 0x34, 0x1C, 0xF2, 0x04, 0x4B, 0x8D, 0xE3,
-0x60, 0x9B, 0x00, 0xEB, 0xD0, 0xF4, 0x64, 0x40,
-0x1F, 0xF7, 0x00, 0x6C, 0x8C, 0xEB, 0x05, 0x2B,
-0x10, 0xF0, 0x24, 0x6B, 0xFC, 0xF6, 0x7C, 0x9B,
-0x34, 0x10, 0x10, 0xF0, 0x24, 0x6B, 0x1C, 0xF4,
-0x6C, 0x9B, 0x2F, 0x10, 0x80, 0xF4, 0x64, 0x40,
-0x1F, 0xF7, 0x00, 0x6C, 0x8C, 0xEB, 0x05, 0x2B,
-0x10, 0xF0, 0x24, 0x6B, 0x1C, 0xF7, 0x60, 0x9B,
-0x24, 0x10, 0x10, 0xF0, 0x24, 0x6B, 0x1C, 0xF4,
-0x78, 0x9B, 0x1F, 0x10, 0xC0, 0xF4, 0x68, 0x40,
-0x1F, 0xF7, 0x00, 0x6C, 0x8C, 0xEB, 0x05, 0x2B,
-0x10, 0xF0, 0x24, 0x6B, 0x1C, 0xF7, 0x64, 0x9B,
-0x14, 0x10, 0x10, 0xF0, 0x24, 0x6B, 0x1C, 0xF7,
-0x68, 0x9B, 0x0F, 0x10, 0x70, 0xF4, 0x68, 0x40,
-0x1F, 0xF7, 0x00, 0x6C, 0x8C, 0xEB, 0x05, 0x2B,
-0x10, 0xF0, 0x24, 0x6B, 0x1C, 0xF7, 0x6C, 0x9B,
-0x04, 0x10, 0x10, 0xF0, 0x24, 0x6B, 0x1C, 0xF7,
-0x70, 0x9B, 0x61, 0xE0, 0x40, 0xC0, 0x30, 0xF0,
-0x20, 0x6A, 0xE8, 0xF2, 0x3B, 0xC2, 0x07, 0x97,
-0x06, 0x91, 0x05, 0x90, 0x04, 0x63, 0x00, 0xEF,
-0xFD, 0x63, 0x05, 0x62, 0x30, 0xF0, 0x20, 0x6A,
-0xAE, 0xF2, 0x4C, 0x9A, 0x42, 0xF1, 0x18, 0x6C,
-0x01, 0x6D, 0x02, 0x6E, 0x40, 0xEA, 0x05, 0x97,
-0x05, 0x6A, 0x03, 0x63, 0x00, 0xEF, 0x00, 0x65,
-0x10, 0xF0, 0x24, 0x6B, 0xBC, 0xF2, 0x70, 0x9B,
-0x10, 0xF0, 0x23, 0x6A, 0x03, 0xF7, 0x09, 0x4A,
-0x40, 0xDB, 0x01, 0x4A, 0x40, 0xDB, 0xF4, 0x17,
-0xFB, 0x63, 0x09, 0x62, 0x08, 0xD1, 0x07, 0xD0,
-0x10, 0xF0, 0x24, 0x6A, 0xBC, 0xF2, 0x74, 0x9A,
-0x10, 0xF0, 0x24, 0x6A, 0xBC, 0xF2, 0x50, 0x9A,
-0x01, 0x6C, 0xA4, 0x67, 0x60, 0xDA, 0x00, 0x18,
-0x2A, 0xD3, 0x30, 0xF0, 0x20, 0x6A, 0x00, 0xF1,
-0x00, 0x4A, 0x10, 0xF0, 0x24, 0x6B, 0xEF, 0x9A,
-0xBC, 0xF2, 0x78, 0x9B, 0x8C, 0x9A, 0xCE, 0x9A,
-0xAD, 0x9A, 0xE0, 0xDB, 0x10, 0xF0, 0x24, 0x6B,
-0xBC, 0xF2, 0x7C, 0x9B, 0x00, 0x68, 0xC0, 0xDB,
-0x10, 0xF0, 0x24, 0x6B, 0xDC, 0xF2, 0x60, 0x9B,
-0xA0, 0xDB, 0x10, 0xF0, 0x24, 0x6B, 0xDC, 0xF2,
-0x64, 0x9B, 0x80, 0xDB, 0x10, 0xF0, 0x24, 0x6B,
-0x89, 0x9A, 0xDC, 0xF2, 0x68, 0x9B, 0x80, 0xDB,
-0x68, 0x9A, 0x10, 0xF0, 0x24, 0x6A, 0xDC, 0xF2,
-0x4C, 0x9A, 0x60, 0xDA, 0x30, 0xF0, 0x20, 0x6A,
-0x60, 0xF1, 0x48, 0xAA, 0x0B, 0x10, 0x30, 0xF0,
-0x20, 0x6B, 0x08, 0x34, 0x2E, 0xF2, 0x0C, 0x4B,
-0x6D, 0xE4, 0x60, 0x9B, 0x05, 0x23, 0x01, 0x48,
-0xFF, 0x6B, 0x6C, 0xE8, 0x43, 0xE8, 0xF3, 0x61,
-0x10, 0xF0, 0x24, 0x6A, 0xDC, 0xF2, 0x70, 0x9A,
-0x7F, 0x6A, 0x00, 0x69, 0x80, 0xA3, 0x20, 0xF0,
-0x20, 0x6D, 0x00, 0xF1, 0x00, 0x4D, 0x8C, 0xEA,
-0x40, 0xC3, 0x30, 0xF0, 0x20, 0x6B, 0xAE, 0xF2,
-0x40, 0x9B, 0x10, 0xF0, 0x24, 0x6B, 0xDC, 0xF2,
-0xD4, 0x9B, 0x91, 0x67, 0x48, 0x6F, 0x04, 0xD1,
+0x8C, 0xE8, 0x90, 0x67, 0x00, 0x18, 0x20, 0xCC,
+0x90, 0x67, 0x00, 0x18, 0x14, 0xEC, 0x01, 0x6C,
+0x00, 0x18, 0x33, 0xCA, 0x90, 0x67, 0x00, 0x18,
+0xE4, 0xCB, 0x30, 0xF0, 0x20, 0x6A, 0xEF, 0xF4,
+0x08, 0x4A, 0xE0, 0xF1, 0x7F, 0xA2, 0x0B, 0x2B,
+0xC0, 0xF0, 0x79, 0xA2, 0x07, 0x6A, 0x6C, 0xEA,
+0x4E, 0xE8, 0x05, 0x28, 0x30, 0xF0, 0x20, 0x6A,
+0x8E, 0xF3, 0x5C, 0x9A, 0x40, 0xEA, 0x05, 0x97,
+0x04, 0x90, 0x03, 0x63, 0x00, 0xEF, 0x00, 0x65,
+0xFC, 0x63, 0x07, 0x62, 0x06, 0xD1, 0x05, 0xD0,
+0xFF, 0x6A, 0x27, 0x67, 0x4C, 0xE9, 0x6F, 0x41,
+0x4C, 0xEB, 0x04, 0x67, 0x02, 0x5B, 0x4C, 0xE8,
+0x4C, 0xED, 0x4C, 0xEE, 0x03, 0x61, 0x90, 0x67,
+0x00, 0x18, 0x31, 0xE8, 0x30, 0xF0, 0x20, 0x6A,
+0xC0, 0xF1, 0x08, 0x4A, 0x49, 0xE0, 0x0C, 0xF7,
+0x7E, 0xA2, 0x2C, 0xF7, 0x4E, 0xA2, 0x10, 0x58,
+0x6D, 0xEA, 0xFF, 0x6B, 0x6C, 0xEA, 0x49, 0x60,
+0x10, 0xF0, 0x24, 0x6B, 0x08, 0x34, 0xFB, 0xF5,
+0x00, 0x4B, 0x8D, 0xE3, 0x60, 0x9B, 0x00, 0xEB,
+0xD0, 0xF4, 0x64, 0x40, 0x1F, 0xF7, 0x00, 0x6C,
+0x8C, 0xEB, 0x05, 0x2B, 0x10, 0xF0, 0x24, 0x6B,
+0xDC, 0xF2, 0x78, 0x9B, 0x34, 0x10, 0x10, 0xF0,
+0x24, 0x6B, 0xFB, 0xF7, 0x68, 0x9B, 0x2F, 0x10,
+0x80, 0xF4, 0x64, 0x40, 0x1F, 0xF7, 0x00, 0x6C,
+0x8C, 0xEB, 0x05, 0x2B, 0x10, 0xF0, 0x24, 0x6B,
+0xDC, 0xF2, 0x7C, 0x9B, 0x24, 0x10, 0x10, 0xF0,
+0x24, 0x6B, 0xFB, 0xF7, 0x74, 0x9B, 0x1F, 0x10,
+0xC0, 0xF4, 0x68, 0x40, 0x1F, 0xF7, 0x00, 0x6C,
+0x8C, 0xEB, 0x05, 0x2B, 0x10, 0xF0, 0x24, 0x6B,
+0xFC, 0xF2, 0x60, 0x9B, 0x14, 0x10, 0x10, 0xF0,
+0x24, 0x6B, 0xFC, 0xF2, 0x64, 0x9B, 0x0F, 0x10,
+0x70, 0xF4, 0x68, 0x40, 0x1F, 0xF7, 0x00, 0x6C,
+0x8C, 0xEB, 0x05, 0x2B, 0x10, 0xF0, 0x24, 0x6B,
+0xFC, 0xF2, 0x68, 0x9B, 0x04, 0x10, 0x10, 0xF0,
+0x24, 0x6B, 0xFC, 0xF2, 0x6C, 0x9B, 0x61, 0xE0,
+0x40, 0xC0, 0x30, 0xF0, 0x20, 0x6A, 0xE8, 0xF2,
+0x3B, 0xC2, 0x07, 0x97, 0x06, 0x91, 0x05, 0x90,
+0x04, 0x63, 0x00, 0xEF, 0xFD, 0x63, 0x05, 0x62,
+0x30, 0xF0, 0x20, 0x6A, 0xAE, 0xF2, 0x4C, 0x9A,
+0x42, 0xF1, 0x18, 0x6C, 0x01, 0x6D, 0x02, 0x6E,
+0x40, 0xEA, 0x05, 0x97, 0x05, 0x6A, 0x03, 0x63,
+0x00, 0xEF, 0x00, 0x65, 0x10, 0xF0, 0x24, 0x6B,
+0x9B, 0xF6, 0x6C, 0x9B, 0x10, 0xF0, 0x23, 0x6A,
+0x03, 0xF7, 0x05, 0x4A, 0x40, 0xDB, 0x01, 0x4A,
+0x40, 0xDB, 0xF4, 0x17, 0xFB, 0x63, 0x09, 0x62,
+0x08, 0xD1, 0x07, 0xD0, 0x10, 0xF0, 0x24, 0x6A,
+0x9B, 0xF6, 0x70, 0x9A, 0x10, 0xF0, 0x24, 0x6A,
+0x9B, 0xF6, 0x4C, 0x9A, 0x01, 0x6C, 0xA4, 0x67,
+0x60, 0xDA, 0x00, 0x18, 0x18, 0xD3, 0x30, 0xF0,
+0x20, 0x6A, 0x00, 0xF1, 0x00, 0x4A, 0x10, 0xF0,
+0x24, 0x6B, 0xEF, 0x9A, 0x9B, 0xF6, 0x74, 0x9B,
+0x8C, 0x9A, 0xCE, 0x9A, 0xAD, 0x9A, 0xE0, 0xDB,
+0x10, 0xF0, 0x24, 0x6B, 0x9B, 0xF6, 0x78, 0x9B,
+0x00, 0x68, 0xC0, 0xDB, 0x10, 0xF0, 0x24, 0x6B,
+0x9B, 0xF6, 0x7C, 0x9B, 0xA0, 0xDB, 0x10, 0xF0,
+0x24, 0x6B, 0xBB, 0xF6, 0x60, 0x9B, 0x80, 0xDB,
+0x10, 0xF0, 0x24, 0x6B, 0x89, 0x9A, 0xBB, 0xF6,
+0x64, 0x9B, 0x80, 0xDB, 0x68, 0x9A, 0x10, 0xF0,
+0x24, 0x6A, 0xBB, 0xF6, 0x48, 0x9A, 0x60, 0xDA,
+0x30, 0xF0, 0x20, 0x6A, 0x60, 0xF1, 0x48, 0xAA,
+0x0B, 0x10, 0x30, 0xF0, 0x20, 0x6B, 0x08, 0x34,
+0x2E, 0xF2, 0x0C, 0x4B, 0x6D, 0xE4, 0x60, 0x9B,
+0x05, 0x23, 0x01, 0x48, 0xFF, 0x6B, 0x6C, 0xE8,
+0x43, 0xE8, 0xF3, 0x61, 0x10, 0xF0, 0x24, 0x6A,
+0xBB, 0xF6, 0x6C, 0x9A, 0x7F, 0x6A, 0x00, 0x69,
+0x80, 0xA3, 0x20, 0xF0, 0x20, 0x6D, 0x00, 0xF1,
+0x00, 0x4D, 0x8C, 0xEA, 0x40, 0xC3, 0x30, 0xF0,
+0x20, 0x6B, 0xAE, 0xF2, 0x40, 0x9B, 0x10, 0xF0,
+0x24, 0x6B, 0xBB, 0xF6, 0xD0, 0x9B, 0x91, 0x67,
+0x48, 0x6F, 0x04, 0xD1, 0x05, 0xD1, 0x40, 0xEA,
+0x30, 0xF0, 0x20, 0x6B, 0xAE, 0xF2, 0x40, 0x9B,
+0x10, 0xF0, 0x24, 0x6B, 0xBB, 0xF6, 0xD4, 0x9B,
+0x20, 0xF0, 0x20, 0x6D, 0x91, 0x67, 0xAD, 0xF1,
+0x08, 0x4D, 0x00, 0xF4, 0x00, 0x6F, 0x04, 0xD1,
 0x05, 0xD1, 0x40, 0xEA, 0x30, 0xF0, 0x20, 0x6B,
 0xAE, 0xF2, 0x40, 0x9B, 0x10, 0xF0, 0x24, 0x6B,
-0xDC, 0xF2, 0xD8, 0x9B, 0x20, 0xF0, 0x20, 0x6D,
-0x91, 0x67, 0xAD, 0xF1, 0x08, 0x4D, 0x00, 0xF4,
-0x00, 0x6F, 0x04, 0xD1, 0x05, 0xD1, 0x40, 0xEA,
-0x30, 0xF0, 0x20, 0x6B, 0xAE, 0xF2, 0x40, 0x9B,
-0x10, 0xF0, 0x24, 0x6B, 0xDC, 0xF2, 0xDC, 0x9B,
-0x20, 0xF0, 0x21, 0x6D, 0x00, 0x37, 0x91, 0x67,
-0x15, 0xF0, 0x00, 0x4D, 0xE8, 0x37, 0x04, 0xD1,
-0x05, 0xD1, 0x40, 0xEA, 0x00, 0x1C, 0x96, 0x45,
-0xFF, 0x17, 0x00, 0x65, 0x30, 0xF0, 0x20, 0x6A,
-0x00, 0xF1, 0x00, 0x4A, 0x60, 0xDA, 0x81, 0xDA,
-0xA2, 0xDA, 0xC3, 0xDA, 0xE4, 0xDA, 0x05, 0xDA,
-0x26, 0xDA, 0x78, 0x67, 0x67, 0xDA, 0x7D, 0x67,
-0x68, 0xDA, 0x7F, 0x67, 0x69, 0xDA, 0x12, 0xEB,
-0x6A, 0xDA, 0x10, 0xEB, 0x6B, 0xDA, 0x6D, 0xB8,
-0x00, 0x65, 0x6C, 0xDA, 0x68, 0xB8, 0x00, 0x65,
-0x6D, 0xDA, 0x6C, 0xB8, 0x00, 0x65, 0x6E, 0xDA,
-0x6E, 0xB8, 0x00, 0x65, 0x6F, 0xDA, 0x10, 0xF0,
-0x23, 0x6A, 0x23, 0xF7, 0x01, 0x4A, 0x00, 0xEA,
-0x00, 0x65, 0x00, 0x65, 0xFF, 0x63, 0x01, 0xD0,
-0xFF, 0x6A, 0x4C, 0xEC, 0x4C, 0xED, 0x8E, 0x37,
-0x4C, 0xEF, 0x07, 0x6E, 0x01, 0x75, 0x8C, 0xEE,
-0x52, 0xF4, 0x60, 0x47, 0x59, 0x61, 0x30, 0xF0,
-0x20, 0x6D, 0xC0, 0xF1, 0x08, 0x4D, 0xBD, 0xE7,
-0xE8, 0xF2, 0xAF, 0xA7, 0x01, 0x68, 0x04, 0xEE,
-0x0D, 0xED, 0xE8, 0xF2, 0xAF, 0xC7, 0x1F, 0xF7,
-0x00, 0x6D, 0x6C, 0xED, 0x02, 0xF0, 0x00, 0x75,
-0x01, 0x60, 0x25, 0x2D, 0x1F, 0xF7, 0x00, 0x6A,
-0x6C, 0xEA, 0x02, 0xF0, 0x00, 0x72, 0x01, 0x60,
-0x07, 0x2A, 0x10, 0xF0, 0x24, 0x6A, 0xFC, 0xF2,
-0xA0, 0x9A, 0xB5, 0xE3, 0x60, 0xA5, 0x0B, 0x10,
-0x10, 0xF0, 0x24, 0x6A, 0xFC, 0xF2, 0xA0, 0x9A,
-0x10, 0xF0, 0x24, 0x6A, 0xFC, 0xF2, 0x44, 0x9A,
-0xB5, 0xE3, 0x4D, 0xE3, 0x60, 0xA3, 0x01, 0x6A,
-0x00, 0xF6, 0x60, 0x33, 0x44, 0xEE, 0x00, 0xF6,
-0x63, 0x33, 0x4F, 0xEA, 0x6C, 0xEA, 0xFF, 0x6B,
-0x6C, 0xEA, 0x40, 0xC5, 0x0E, 0x10, 0x10, 0xF0,
-0x24, 0x6D, 0xFC, 0xF2, 0xA4, 0x9D, 0x0F, 0xE8,
-0xAD, 0xE3, 0xA0, 0xA3, 0x00, 0xF6, 0xA0, 0x35,
-0x00, 0xF6, 0xA3, 0x35, 0x0C, 0xED, 0x4C, 0xED,
-0xA0, 0xC3, 0x30, 0xF0, 0x20, 0x6A, 0xEF, 0xF6,
-0x45, 0xA2, 0x4E, 0xEC, 0x52, 0x2C, 0x10, 0xF0,
-0x24, 0x6A, 0xFC, 0xF2, 0x48, 0x9A, 0x60, 0x9A,
-0x30, 0xF0, 0x20, 0x6A, 0x70, 0x33, 0x00, 0xF5,
-0x62, 0x33, 0x48, 0xF5, 0x68, 0xCA, 0x45, 0x10,
-0x30, 0xF0, 0x20, 0x6C, 0xC0, 0xF1, 0x08, 0x4C,
-0x9D, 0xE7, 0xE8, 0xF2, 0x0F, 0xA7, 0x01, 0x6D,
-0xA4, 0xEE, 0xAF, 0xEC, 0x0C, 0xEC, 0xE8, 0xF2,
-0x8F, 0xC7, 0x1F, 0xF7, 0x00, 0x6C, 0x6C, 0xEC,
-0x02, 0xF0, 0x00, 0x74, 0x01, 0x60, 0x24, 0x2C,
+0xBB, 0xF6, 0xD8, 0x9B, 0x20, 0xF0, 0x21, 0x6D,
+0x00, 0x37, 0x91, 0x67, 0x15, 0xF0, 0x00, 0x4D,
+0xE8, 0x37, 0x04, 0xD1, 0x05, 0xD1, 0x40, 0xEA,
+0x00, 0x1C, 0x96, 0x45, 0xFF, 0x17, 0x00, 0x65,
+0x30, 0xF0, 0x20, 0x6A, 0x00, 0xF1, 0x00, 0x4A,
+0x60, 0xDA, 0x81, 0xDA, 0xA2, 0xDA, 0xC3, 0xDA,
+0xE4, 0xDA, 0x05, 0xDA, 0x26, 0xDA, 0x78, 0x67,
+0x67, 0xDA, 0x7D, 0x67, 0x68, 0xDA, 0x7F, 0x67,
+0x69, 0xDA, 0x12, 0xEB, 0x6A, 0xDA, 0x10, 0xEB,
+0x6B, 0xDA, 0x6D, 0xB8, 0x00, 0x65, 0x6C, 0xDA,
+0x68, 0xB8, 0x00, 0x65, 0x6D, 0xDA, 0x6C, 0xB8,
+0x00, 0x65, 0x6E, 0xDA, 0x6E, 0xB8, 0x00, 0x65,
+0x6F, 0xDA, 0x10, 0xF0, 0x23, 0x6A, 0x03, 0xF7,
+0x1D, 0x4A, 0x00, 0xEA, 0x00, 0x65, 0x00, 0x65,
+0xFF, 0x63, 0x01, 0xD0, 0xFF, 0x6A, 0x4C, 0xEC,
+0x4C, 0xED, 0x8E, 0x37, 0x4C, 0xEF, 0x07, 0x6E,
+0x01, 0x75, 0x8C, 0xEE, 0x52, 0xF4, 0x60, 0x47,
+0x59, 0x61, 0x30, 0xF0, 0x20, 0x6D, 0xC0, 0xF1,
+0x08, 0x4D, 0xBD, 0xE7, 0xE8, 0xF2, 0xAF, 0xA7,
+0x01, 0x68, 0x04, 0xEE, 0x0D, 0xED, 0xE8, 0xF2,
+0xAF, 0xC7, 0x1F, 0xF7, 0x00, 0x6D, 0x6C, 0xED,
+0x02, 0xF0, 0x00, 0x75, 0x01, 0x60, 0x25, 0x2D,
 0x1F, 0xF7, 0x00, 0x6A, 0x6C, 0xEA, 0x02, 0xF0,
 0x00, 0x72, 0x01, 0x60, 0x07, 0x2A, 0x10, 0xF0,
-0x24, 0x6A, 0xFC, 0xF2, 0x80, 0x9A, 0x91, 0xE3,
-0x60, 0xA4, 0x0B, 0x10, 0x10, 0xF0, 0x24, 0x6A,
-0xFC, 0xF2, 0x80, 0x9A, 0x10, 0xF0, 0x24, 0x6A,
-0xFC, 0xF2, 0x44, 0x9A, 0x91, 0xE3, 0x4D, 0xE3,
-0x60, 0xA3, 0x00, 0xF6, 0x60, 0x33, 0x01, 0x6A,
-0x00, 0xF6, 0x63, 0x33, 0x44, 0xEE, 0x6D, 0xEA,
-0xFF, 0x6B, 0x6C, 0xEA, 0x40, 0xC4, 0x0D, 0x10,
-0x10, 0xF0, 0x24, 0x6C, 0xFC, 0xF2, 0x84, 0x9C,
-0x8D, 0xE3, 0x80, 0xA3, 0x00, 0xF6, 0x80, 0x34,
-0x00, 0xF6, 0x83, 0x34, 0xAD, 0xEC, 0x4C, 0xEC,
-0x80, 0xC3, 0x01, 0x90, 0x01, 0x63, 0x20, 0xE8,
-0xFF, 0x6A, 0x4C, 0xEC, 0x05, 0x5C, 0xAC, 0xEA,
-0x4B, 0x60, 0x10, 0xF0, 0x24, 0x6B, 0x88, 0x34,
-0x5B, 0xF5, 0x04, 0x4B, 0x8D, 0xE3, 0x60, 0x9B,
-0x00, 0xEB, 0x05, 0x22, 0x10, 0xF0, 0x24, 0x6A,
-0xFC, 0xF2, 0x6C, 0x9A, 0x2D, 0x10, 0x10, 0xF0,
-0x24, 0x6A, 0xFC, 0xF2, 0x6C, 0x9A, 0x20, 0x10,
-0x05, 0x22, 0x10, 0xF0, 0x24, 0x6A, 0xFC, 0xF2,
-0x70, 0x9A, 0x22, 0x10, 0x10, 0xF0, 0x24, 0x6A,
-0xFC, 0xF2, 0x70, 0x9A, 0x15, 0x10, 0x05, 0x22,
-0x10, 0xF0, 0x24, 0x6A, 0xFC, 0xF2, 0x74, 0x9A,
-0x17, 0x10, 0x10, 0xF0, 0x24, 0x6A, 0xFC, 0xF2,
-0x74, 0x9A, 0x0A, 0x10, 0x05, 0x22, 0x10, 0xF0,
-0x24, 0x6A, 0xFC, 0xF2, 0x78, 0x9A, 0x0C, 0x10,
-0x10, 0xF0, 0x24, 0x6A, 0xFC, 0xF2, 0x78, 0x9A,
-0x80, 0xA3, 0xF7, 0x6A, 0x0A, 0x10, 0x0C, 0x22,
-0x10, 0xF0, 0x24, 0x6A, 0xFC, 0xF2, 0x7C, 0x9A,
-0x40, 0xA3, 0xFF, 0x6C, 0x08, 0x6D, 0x8C, 0xEA,
-0xAD, 0xEA, 0x8C, 0xEA, 0x40, 0xC3, 0x20, 0xE8,
-0x10, 0xF0, 0x24, 0x6A, 0xFC, 0xF2, 0x7C, 0x9A,
-0xF7, 0x6A, 0x80, 0xA3, 0x8C, 0xEA, 0x40, 0xC3,
-0x20, 0xE8, 0x00, 0x65, 0xFF, 0x6A, 0x4C, 0xEC,
-0x01, 0x6B, 0xAC, 0xEA, 0x6E, 0xEA, 0x01, 0x5A,
-0x58, 0x67, 0x05, 0x5C, 0x48, 0x32, 0x08, 0x60,
-0x10, 0xF0, 0x24, 0x6B, 0x88, 0x34, 0x5B, 0xF5,
-0x18, 0x4B, 0x8D, 0xE3, 0x60, 0x9B, 0x00, 0xEB,
-0x01, 0x6A, 0x4B, 0xEA, 0x20, 0xE8, 0x10, 0xF0,
-0x24, 0x6B, 0xFC, 0xF2, 0x88, 0x9B, 0x10, 0xF0,
-0x24, 0x6D, 0x1C, 0xF3, 0xA0, 0x9D, 0x60, 0x9C,
-0xAC, 0xEB, 0x1E, 0x10, 0x10, 0xF0, 0x24, 0x6B,
-0xFC, 0xF2, 0x88, 0x9B, 0x10, 0xF0, 0x24, 0x6D,
-0x1C, 0xF3, 0xA0, 0x9D, 0x60, 0x9C, 0xAC, 0xEB,
-0x10, 0xF0, 0x24, 0x6D, 0x1C, 0xF3, 0xAC, 0x9D,
-0x0E, 0x10, 0x10, 0xF0, 0x24, 0x6B, 0xFC, 0xF2,
-0x88, 0x9B, 0x10, 0xF0, 0x24, 0x6D, 0x1C, 0xF3,
-0xA0, 0x9D, 0x60, 0x9C, 0xAC, 0xEB, 0x10, 0xF0,
-0x24, 0x6D, 0x1C, 0xF3, 0xB0, 0x9D, 0xAD, 0xEB,
+0x24, 0x6A, 0xBB, 0xF6, 0xBC, 0x9A, 0xB5, 0xE3,
+0x60, 0xA5, 0x0B, 0x10, 0x10, 0xF0, 0x24, 0x6A,
+0xBB, 0xF6, 0xBC, 0x9A, 0x10, 0xF0, 0x24, 0x6A,
+0xDB, 0xF6, 0x40, 0x9A, 0xB5, 0xE3, 0x4D, 0xE3,
+0x60, 0xA3, 0x01, 0x6A, 0x00, 0xF6, 0x60, 0x33,
+0x44, 0xEE, 0x00, 0xF6, 0x63, 0x33, 0x4F, 0xEA,
+0x6C, 0xEA, 0xFF, 0x6B, 0x6C, 0xEA, 0x40, 0xC5,
+0x0E, 0x10, 0x10, 0xF0, 0x24, 0x6D, 0xDB, 0xF6,
+0xA0, 0x9D, 0x0F, 0xE8, 0xAD, 0xE3, 0xA0, 0xA3,
+0x00, 0xF6, 0xA0, 0x35, 0x00, 0xF6, 0xA3, 0x35,
+0x0C, 0xED, 0x4C, 0xED, 0xA0, 0xC3, 0x30, 0xF0,
+0x20, 0x6A, 0xEF, 0xF6, 0x41, 0xA2, 0x4E, 0xEC,
+0x52, 0x2C, 0x10, 0xF0, 0x24, 0x6A, 0xDB, 0xF6,
+0x44, 0x9A, 0x60, 0x9A, 0x30, 0xF0, 0x20, 0x6A,
+0x70, 0x33, 0x00, 0xF5, 0x62, 0x33, 0x48, 0xF5,
+0x68, 0xCA, 0x45, 0x10, 0x30, 0xF0, 0x20, 0x6C,
+0xC0, 0xF1, 0x08, 0x4C, 0x9D, 0xE7, 0xE8, 0xF2,
+0x0F, 0xA7, 0x01, 0x6D, 0xA4, 0xEE, 0xAF, 0xEC,
+0x0C, 0xEC, 0xE8, 0xF2, 0x8F, 0xC7, 0x1F, 0xF7,
+0x00, 0x6C, 0x6C, 0xEC, 0x02, 0xF0, 0x00, 0x74,
+0x01, 0x60, 0x24, 0x2C, 0x1F, 0xF7, 0x00, 0x6A,
+0x6C, 0xEA, 0x02, 0xF0, 0x00, 0x72, 0x01, 0x60,
+0x07, 0x2A, 0x10, 0xF0, 0x24, 0x6A, 0xBB, 0xF6,
+0x9C, 0x9A, 0x91, 0xE3, 0x60, 0xA4, 0x0B, 0x10,
+0x10, 0xF0, 0x24, 0x6A, 0xBB, 0xF6, 0x9C, 0x9A,
+0x10, 0xF0, 0x24, 0x6A, 0xDB, 0xF6, 0x40, 0x9A,
+0x91, 0xE3, 0x4D, 0xE3, 0x60, 0xA3, 0x00, 0xF6,
+0x60, 0x33, 0x01, 0x6A, 0x00, 0xF6, 0x63, 0x33,
+0x44, 0xEE, 0x6D, 0xEA, 0xFF, 0x6B, 0x6C, 0xEA,
+0x40, 0xC4, 0x0D, 0x10, 0x10, 0xF0, 0x24, 0x6C,
+0xDB, 0xF6, 0x80, 0x9C, 0x8D, 0xE3, 0x80, 0xA3,
+0x00, 0xF6, 0x80, 0x34, 0x00, 0xF6, 0x83, 0x34,
+0xAD, 0xEC, 0x4C, 0xEC, 0x80, 0xC3, 0x01, 0x90,
+0x01, 0x63, 0x20, 0xE8, 0xFF, 0x6A, 0x4C, 0xEC,
+0x05, 0x5C, 0xAC, 0xEA, 0x4B, 0x60, 0x10, 0xF0,
+0x24, 0x6B, 0x88, 0x34, 0x3B, 0xF1, 0x00, 0x4B,
+0x8D, 0xE3, 0x60, 0x9B, 0x00, 0xEB, 0x05, 0x22,
+0x10, 0xF0, 0x24, 0x6A, 0xDB, 0xF6, 0x68, 0x9A,
+0x2D, 0x10, 0x10, 0xF0, 0x24, 0x6A, 0xDB, 0xF6,
+0x68, 0x9A, 0x20, 0x10, 0x05, 0x22, 0x10, 0xF0,
+0x24, 0x6A, 0xDB, 0xF6, 0x6C, 0x9A, 0x22, 0x10,
+0x10, 0xF0, 0x24, 0x6A, 0xDB, 0xF6, 0x6C, 0x9A,
+0x15, 0x10, 0x05, 0x22, 0x10, 0xF0, 0x24, 0x6A,
+0xDB, 0xF6, 0x70, 0x9A, 0x17, 0x10, 0x10, 0xF0,
+0x24, 0x6A, 0xDB, 0xF6, 0x70, 0x9A, 0x0A, 0x10,
+0x05, 0x22, 0x10, 0xF0, 0x24, 0x6A, 0xDB, 0xF6,
+0x74, 0x9A, 0x0C, 0x10, 0x10, 0xF0, 0x24, 0x6A,
+0xDB, 0xF6, 0x74, 0x9A, 0x80, 0xA3, 0xF7, 0x6A,
+0x0A, 0x10, 0x0C, 0x22, 0x10, 0xF0, 0x24, 0x6A,
+0xDB, 0xF6, 0x78, 0x9A, 0x40, 0xA3, 0xFF, 0x6C,
+0x08, 0x6D, 0x8C, 0xEA, 0xAD, 0xEA, 0x8C, 0xEA,
+0x40, 0xC3, 0x20, 0xE8, 0x10, 0xF0, 0x24, 0x6A,
+0xDB, 0xF6, 0x78, 0x9A, 0xF7, 0x6A, 0x80, 0xA3,
+0x8C, 0xEA, 0x40, 0xC3, 0x20, 0xE8, 0x00, 0x65,
+0xFF, 0x6A, 0x4C, 0xEC, 0x01, 0x6B, 0xAC, 0xEA,
+0x6E, 0xEA, 0x01, 0x5A, 0x58, 0x67, 0x05, 0x5C,
+0x48, 0x32, 0x08, 0x60, 0x10, 0xF0, 0x24, 0x6B,
+0x88, 0x34, 0x3B, 0xF1, 0x14, 0x4B, 0x8D, 0xE3,
+0x60, 0x9B, 0x00, 0xEB, 0x01, 0x6A, 0x4B, 0xEA,
+0x20, 0xE8, 0x10, 0xF0, 0x24, 0x6B, 0xDB, 0xF6,
+0x84, 0x9B, 0x10, 0xF0, 0x24, 0x6D, 0xDB, 0xF6,
+0xBC, 0x9D, 0x60, 0x9C, 0xAC, 0xEB, 0x1E, 0x10,
+0x10, 0xF0, 0x24, 0x6B, 0xDB, 0xF6, 0x84, 0x9B,
+0x10, 0xF0, 0x24, 0x6D, 0xDB, 0xF6, 0xBC, 0x9D,
+0x60, 0x9C, 0xAC, 0xEB, 0x10, 0xF0, 0x24, 0x6D,
+0xFB, 0xF6, 0xA8, 0x9D, 0x0E, 0x10, 0x10, 0xF0,
+0x24, 0x6B, 0xDB, 0xF6, 0x84, 0x9B, 0x10, 0xF0,
+0x24, 0x6D, 0xDB, 0xF6, 0xBC, 0x9D, 0x60, 0x9C,
+0xAC, 0xEB, 0x10, 0xF0, 0x24, 0x6D, 0xFB, 0xF6,
+0xAC, 0x9D, 0xAD, 0xEB, 0x60, 0xDC, 0x60, 0xF5,
+0x60, 0x42, 0x1F, 0xF7, 0x00, 0x6C, 0x8C, 0xEB,
+0x02, 0xF0, 0x00, 0x73, 0x10, 0x61, 0x2E, 0x10,
+0x10, 0xF0, 0x24, 0x6B, 0xDB, 0xF6, 0x84, 0x9B,
+0x10, 0xF0, 0x24, 0x6D, 0xDB, 0xF6, 0xBC, 0x9D,
+0x60, 0x9C, 0xAC, 0xEB, 0x10, 0xF0, 0x24, 0x6D,
+0xFB, 0xF6, 0xB0, 0x9D, 0xE6, 0x17, 0x1E, 0x23,
+0x10, 0xF0, 0x24, 0x6B, 0xFB, 0xF6, 0x64, 0x9B,
+0x1D, 0x10, 0x10, 0xF0, 0x24, 0x6B, 0xDB, 0xF6,
+0x84, 0x9B, 0x10, 0xF0, 0x24, 0x6D, 0xDB, 0xF6,
+0xBC, 0x9D, 0x60, 0x9C, 0xAC, 0xEB, 0x10, 0xF0,
+0x24, 0x6D, 0xFB, 0xF6, 0xB4, 0x9D, 0xAD, 0xEB,
 0x60, 0xDC, 0x60, 0xF5, 0x60, 0x42, 0x1F, 0xF7,
 0x00, 0x6C, 0x8C, 0xEB, 0x02, 0xF0, 0x00, 0x73,
-0x10, 0x61, 0x2E, 0x10, 0x10, 0xF0, 0x24, 0x6B,
-0xFC, 0xF2, 0x88, 0x9B, 0x10, 0xF0, 0x24, 0x6D,
-0x1C, 0xF3, 0xA0, 0x9D, 0x60, 0x9C, 0xAC, 0xEB,
-0x10, 0xF0, 0x24, 0x6D, 0x1C, 0xF3, 0xB4, 0x9D,
-0xE6, 0x17, 0x1E, 0x23, 0x10, 0xF0, 0x24, 0x6B,
-0x1C, 0xF3, 0x68, 0x9B, 0x1D, 0x10, 0x10, 0xF0,
-0x24, 0x6B, 0xFC, 0xF2, 0x88, 0x9B, 0x10, 0xF0,
-0x24, 0x6D, 0x1C, 0xF3, 0xA0, 0x9D, 0x60, 0x9C,
-0xAC, 0xEB, 0x10, 0xF0, 0x24, 0x6D, 0x1C, 0xF3,
-0xB8, 0x9D, 0xAD, 0xEB, 0x60, 0xDC, 0x60, 0xF5,
-0x60, 0x42, 0x1F, 0xF7, 0x00, 0x6C, 0x8C, 0xEB,
-0x02, 0xF0, 0x00, 0x73, 0x01, 0x60, 0x07, 0x2B,
-0x10, 0xF0, 0x24, 0x6B, 0x1C, 0xF3, 0x64, 0x9B,
-0x69, 0xE2, 0x40, 0x9A, 0x20, 0xE8, 0x10, 0xF0,
-0x24, 0x6B, 0x1C, 0xF3, 0x68, 0x9B, 0x69, 0xE2,
-0x40, 0x9A, 0x20, 0xE8, 0xFF, 0x6A, 0x4C, 0xEC,
-0x01, 0x74, 0xAC, 0xEA, 0x13, 0x60, 0x03, 0x24,
-0x02, 0x74, 0x15, 0x60, 0x18, 0x10, 0x30, 0xF0,
-0x20, 0x6B, 0xC0, 0xF1, 0x08, 0x4B, 0x68, 0xF3,
-0xD9, 0xA3, 0x01, 0x6D, 0x4C, 0xED, 0x02, 0x6A,
-0x4B, 0xEA, 0xCC, 0xEA, 0xAD, 0xEA, 0x68, 0xF3,
-0x59, 0xC3, 0x09, 0x10, 0x30, 0xF0, 0x20, 0x6B,
-0x48, 0xF5, 0x44, 0xC3, 0x04, 0x10, 0x30, 0xF0,
-0x20, 0x6B, 0x48, 0xF5, 0x40, 0xC3, 0x10, 0xF0,
-0x24, 0x6A, 0x1C, 0xF3, 0x5C, 0x9A, 0x60, 0xA2,
-0x10, 0x6A, 0x6C, 0xEA, 0x24, 0x22, 0x02, 0x5C,
-0x03, 0x61, 0x02, 0x74, 0x17, 0x60, 0x20, 0xE8,
-0x30, 0xF0, 0x20, 0x6B, 0xC0, 0xF1, 0x08, 0x4B,
-0x68, 0xF3, 0x99, 0xA3, 0x01, 0x6A, 0x8C, 0xEA,
-0x68, 0xF3, 0x9C, 0xA3, 0x7F, 0x6B, 0x5C, 0x32,
-0x8C, 0xEB, 0x6D, 0xEA, 0xFF, 0x6B, 0x6C, 0xEA,
-0x10, 0xF0, 0x24, 0x6B, 0x3C, 0xF3, 0x60, 0x9B,
-0x40, 0xC3, 0x20, 0xE8, 0x30, 0xF0, 0x20, 0x6A,
-0x48, 0xF5, 0x60, 0xA2, 0x10, 0xF0, 0x24, 0x6A,
-0x3C, 0xF3, 0x44, 0x9A, 0x60, 0xC2, 0x20, 0xE8,
-0x10, 0xF0, 0x24, 0x6A, 0x3C, 0xF3, 0x48, 0x9A,
-0x60, 0xA2, 0xFF, 0x6A, 0x6C, 0xEA, 0xFF, 0x72,
-0x00, 0x6A, 0x0B, 0x61, 0x10, 0xF0, 0x24, 0x6A,
-0x3C, 0xF3, 0x4C, 0x9A, 0x60, 0xA2, 0x07, 0x6A,
-0x6C, 0xEA, 0x07, 0x6B, 0x6E, 0xEA, 0x01, 0x5A,
-0x58, 0x67, 0x20, 0xE8, 0xFF, 0x6A, 0x4C, 0xEC,
-0x01, 0x74, 0xAC, 0xEA, 0x03, 0x60, 0x02, 0x74,
-0x09, 0x60, 0x20, 0xE8, 0x30, 0xF0, 0x20, 0x6A,
-0xC0, 0xF1, 0x08, 0x4A, 0x02, 0x6B, 0x88, 0xF3,
-0x62, 0xC2, 0x15, 0x10, 0x09, 0x2A, 0x30, 0xF0,
-0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A, 0xE8, 0xF3,
-0x67, 0xA2, 0x88, 0xF3, 0x62, 0xC2, 0x05, 0x10,
-0xFF, 0x4A, 0x30, 0xF0, 0x20, 0x6B, 0x48, 0xF5,
-0x4A, 0xC3, 0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1,
-0x08, 0x4A, 0x88, 0xF3, 0x62, 0xA2, 0x68, 0xF3,
-0x99, 0xA2, 0x88, 0xF3, 0x63, 0xC2, 0x40, 0x6B,
-0x8D, 0xEB, 0x68, 0xF3, 0x79, 0xC2, 0x20, 0xE8,
-0xFD, 0x63, 0x05, 0x62, 0x00, 0x18, 0x0C, 0xC9,
-0x01, 0x72, 0x0E, 0x61, 0x30, 0xF0, 0x20, 0x6A,
-0xC0, 0xF1, 0x08, 0x4A, 0x68, 0xF3, 0x99, 0xA2,
-0x04, 0x6B, 0x8C, 0xEB, 0x05, 0x2B, 0x68, 0xF3,
-0x58, 0xA2, 0x05, 0x5A, 0x58, 0x67, 0x01, 0x10,
-0x00, 0x6A, 0x05, 0x97, 0x03, 0x63, 0x00, 0xEF,
-0xFF, 0x63, 0x01, 0xD1, 0x00, 0xD0, 0x10, 0xF0,
-0x24, 0x6B, 0x30, 0xF0, 0x20, 0x69, 0x3C, 0xF3,
-0xF0, 0x9B, 0xEF, 0xF4, 0x68, 0x99, 0xFF, 0x6A,
-0x4C, 0xEC, 0xEC, 0xEB, 0xEE, 0xEB, 0x4C, 0xED,
-0x4C, 0xEE, 0x80, 0xF0, 0x1E, 0x23, 0x30, 0xF0,
-0x20, 0x6B, 0xC0, 0xF1, 0x08, 0x4B, 0x68, 0xF3,
-0x1A, 0xA3, 0x20, 0x6F, 0x0C, 0xEF, 0x4C, 0xEF,
-0x80, 0xF0, 0x0F, 0x2F, 0xEF, 0xF4, 0x08, 0xA1,
-0x01, 0x6F, 0xEC, 0xE8, 0x4C, 0xE8, 0x61, 0x28,
-0x68, 0xF3, 0x19, 0xA3, 0x0C, 0xEF, 0x4C, 0xEF,
-0x09, 0x27, 0x88, 0xF3, 0x5B, 0xA3, 0xE4, 0x42,
-0x03, 0x4A, 0x88, 0xF3, 0xF3, 0xC3, 0x88, 0xF3,
-0x52, 0xC3, 0x08, 0x10, 0x05, 0x6F, 0x88, 0xF3,
-0xF3, 0xC3, 0x05, 0x4E, 0x04, 0x6F, 0x88, 0xF3,
-0xF2, 0xC3, 0x4C, 0xEE, 0x30, 0xF0, 0x20, 0x6A,
-0xC0, 0xF1, 0x08, 0x4A, 0x88, 0xF3, 0xF1, 0xA2,
-0x88, 0xF3, 0x72, 0xA2, 0xE3, 0xEB, 0x09, 0x61,
-0x88, 0xF3, 0x73, 0xA2, 0x88, 0xF3, 0xC4, 0xC2,
-0x71, 0xE4, 0xB7, 0xE4, 0x88, 0xF3, 0xB6, 0xC2,
-0x09, 0x10, 0x88, 0xF3, 0x93, 0xA2, 0x77, 0xE5,
-0xB9, 0xE6, 0x6F, 0xE4, 0x88, 0xF3, 0xC4, 0xC2,
-0x88, 0xF3, 0x76, 0xC2, 0x30, 0xF0, 0x20, 0x6A,
-0xC0, 0xF1, 0x08, 0x4A, 0x88, 0xF3, 0x73, 0xA2,
-0x88, 0xF3, 0x96, 0xA2, 0x0A, 0x4B, 0x82, 0xEB,
-0x02, 0x60, 0x88, 0xF3, 0x76, 0xC2, 0x30, 0xF0,
+0x01, 0x60, 0x07, 0x2B, 0x10, 0xF0, 0x24, 0x6B,
+0xFB, 0xF6, 0x60, 0x9B, 0x69, 0xE2, 0x40, 0x9A,
+0x20, 0xE8, 0x10, 0xF0, 0x24, 0x6B, 0xFB, 0xF6,
+0x64, 0x9B, 0x69, 0xE2, 0x40, 0x9A, 0x20, 0xE8,
+0xFF, 0x6A, 0x4C, 0xEC, 0x01, 0x74, 0xAC, 0xEA,
+0x13, 0x60, 0x03, 0x24, 0x02, 0x74, 0x15, 0x60,
+0x18, 0x10, 0x30, 0xF0, 0x20, 0x6B, 0xC0, 0xF1,
+0x08, 0x4B, 0x68, 0xF3, 0xD9, 0xA3, 0x01, 0x6D,
+0x4C, 0xED, 0x02, 0x6A, 0x4B, 0xEA, 0xCC, 0xEA,
+0xAD, 0xEA, 0x68, 0xF3, 0x59, 0xC3, 0x09, 0x10,
+0x30, 0xF0, 0x20, 0x6B, 0x48, 0xF5, 0x44, 0xC3,
+0x04, 0x10, 0x30, 0xF0, 0x20, 0x6B, 0x48, 0xF5,
+0x40, 0xC3, 0x10, 0xF0, 0x24, 0x6A, 0xFB, 0xF6,
+0x58, 0x9A, 0x60, 0xA2, 0x10, 0x6A, 0x6C, 0xEA,
+0x24, 0x22, 0x02, 0x5C, 0x03, 0x61, 0x02, 0x74,
+0x17, 0x60, 0x20, 0xE8, 0x30, 0xF0, 0x20, 0x6B,
+0xC0, 0xF1, 0x08, 0x4B, 0x68, 0xF3, 0x99, 0xA3,
+0x01, 0x6A, 0x8C, 0xEA, 0x68, 0xF3, 0x9C, 0xA3,
+0x7F, 0x6B, 0x5C, 0x32, 0x8C, 0xEB, 0x6D, 0xEA,
+0xFF, 0x6B, 0x6C, 0xEA, 0x10, 0xF0, 0x24, 0x6B,
+0xFB, 0xF6, 0x7C, 0x9B, 0x40, 0xC3, 0x20, 0xE8,
+0x30, 0xF0, 0x20, 0x6A, 0x48, 0xF5, 0x60, 0xA2,
+0x10, 0xF0, 0x24, 0x6A, 0x1B, 0xF7, 0x40, 0x9A,
+0x60, 0xC2, 0x20, 0xE8, 0x10, 0xF0, 0x24, 0x6A,
+0x1B, 0xF7, 0x44, 0x9A, 0x60, 0xA2, 0xFF, 0x6A,
+0x6C, 0xEA, 0xFF, 0x72, 0x00, 0x6A, 0x0B, 0x61,
+0x10, 0xF0, 0x24, 0x6A, 0x1B, 0xF7, 0x48, 0x9A,
+0x60, 0xA2, 0x07, 0x6A, 0x6C, 0xEA, 0x07, 0x6B,
+0x6E, 0xEA, 0x01, 0x5A, 0x58, 0x67, 0x20, 0xE8,
+0xFF, 0x6A, 0x4C, 0xEC, 0x01, 0x74, 0xAC, 0xEA,
+0x03, 0x60, 0x02, 0x74, 0x09, 0x60, 0x20, 0xE8,
+0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A,
+0x02, 0x6B, 0x88, 0xF3, 0x62, 0xC2, 0x15, 0x10,
+0x09, 0x2A, 0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1,
+0x08, 0x4A, 0xE8, 0xF3, 0x67, 0xA2, 0x88, 0xF3,
+0x62, 0xC2, 0x05, 0x10, 0xFF, 0x4A, 0x30, 0xF0,
+0x20, 0x6B, 0x48, 0xF5, 0x4A, 0xC3, 0x30, 0xF0,
 0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A, 0x88, 0xF3,
-0x76, 0xA2, 0x88, 0xF3, 0x84, 0xA2, 0x23, 0x4B,
-0x82, 0xEB, 0x02, 0x60, 0x88, 0xF3, 0x64, 0xC2,
+0x62, 0xA2, 0x68, 0xF3, 0x99, 0xA2, 0x88, 0xF3,
+0x63, 0xC2, 0x40, 0x6B, 0x8D, 0xEB, 0x68, 0xF3,
+0x79, 0xC2, 0x20, 0xE8, 0xFD, 0x63, 0x05, 0x62,
+0x00, 0x18, 0x0B, 0xC9, 0x01, 0x72, 0x0E, 0x61,
 0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A,
-0x88, 0xF3, 0x76, 0xA2, 0x68, 0xF3, 0x97, 0xA2,
-0x88, 0xF3, 0x6A, 0xCA, 0x18, 0x6B, 0x8C, 0xEB,
-0x10, 0x73, 0x07, 0x61, 0xC8, 0xF3, 0x79, 0xA2,
-0x03, 0x6C, 0x76, 0x33, 0x8C, 0xEB, 0x88, 0xF3,
-0x64, 0xC2, 0x10, 0xF0, 0x24, 0x6A, 0x3C, 0xF3,
-0x54, 0x9A, 0x60, 0xA2, 0x07, 0x23, 0x60, 0xA2,
-0xFF, 0x6A, 0x4C, 0xEB, 0x30, 0xF0, 0x20, 0x6A,
-0x48, 0xF5, 0x72, 0xCA, 0x10, 0xF0, 0x24, 0x6A,
-0x3C, 0xF3, 0x58, 0x9A, 0x30, 0xF0, 0x20, 0x6C,
-0x48, 0xF5, 0x92, 0xAC, 0xA0, 0xA2, 0xFF, 0x6B,
-0x6C, 0xED, 0x8E, 0xED, 0x02, 0x25, 0x8C, 0xEB,
-0x60, 0xC2, 0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1,
-0x08, 0x4A, 0x68, 0xF3, 0x9A, 0xA2, 0x41, 0x6B,
-0x6B, 0xEB, 0x8C, 0xEB, 0x68, 0xF3, 0x7A, 0xC2,
-0x04, 0x10, 0x40, 0x6A, 0x0D, 0xEA, 0x68, 0xF3,
-0x5A, 0xC3, 0x01, 0x91, 0x00, 0x90, 0x01, 0x63,
-0x20, 0xE8, 0x00, 0x65, 0xFD, 0x63, 0x05, 0x62,
+0x68, 0xF3, 0x99, 0xA2, 0x04, 0x6B, 0x8C, 0xEB,
+0x05, 0x2B, 0x68, 0xF3, 0x58, 0xA2, 0x05, 0x5A,
+0x58, 0x67, 0x01, 0x10, 0x00, 0x6A, 0x05, 0x97,
+0x03, 0x63, 0x00, 0xEF, 0xFF, 0x63, 0x01, 0xD1,
+0x00, 0xD0, 0x10, 0xF0, 0x24, 0x6B, 0x30, 0xF0,
+0x20, 0x69, 0x1B, 0xF7, 0xEC, 0x9B, 0xEF, 0xF4,
+0x68, 0x99, 0xFF, 0x6A, 0x4C, 0xEC, 0xEC, 0xEB,
+0xEE, 0xEB, 0x4C, 0xED, 0x4C, 0xEE, 0x80, 0xF0,
+0x1E, 0x23, 0x30, 0xF0, 0x20, 0x6B, 0xC0, 0xF1,
+0x08, 0x4B, 0x68, 0xF3, 0x1A, 0xA3, 0x20, 0x6F,
+0x0C, 0xEF, 0x4C, 0xEF, 0x80, 0xF0, 0x0F, 0x2F,
+0xEF, 0xF4, 0x08, 0xA1, 0x01, 0x6F, 0xEC, 0xE8,
+0x4C, 0xE8, 0x61, 0x28, 0x68, 0xF3, 0x19, 0xA3,
+0x0C, 0xEF, 0x4C, 0xEF, 0x09, 0x27, 0x88, 0xF3,
+0x5B, 0xA3, 0xE4, 0x42, 0x03, 0x4A, 0x88, 0xF3,
+0xF3, 0xC3, 0x88, 0xF3, 0x52, 0xC3, 0x08, 0x10,
+0x05, 0x6F, 0x88, 0xF3, 0xF3, 0xC3, 0x05, 0x4E,
+0x04, 0x6F, 0x88, 0xF3, 0xF2, 0xC3, 0x4C, 0xEE,
 0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A,
-0x88, 0xF3, 0x65, 0xA2, 0xE8, 0xF3, 0x84, 0xA2,
-0x63, 0xEC, 0x22, 0x60, 0x88, 0xF3, 0x98, 0xA2,
-0x01, 0x4C, 0x88, 0xF3, 0x98, 0xC2, 0x88, 0xF3,
-0xB8, 0xA2, 0xE8, 0xF3, 0x81, 0xA2, 0xA3, 0xEC,
-0x17, 0x61, 0x03, 0x6D, 0xB8, 0xEB, 0x88, 0xF3,
-0x90, 0xA2, 0x88, 0xF3, 0xB1, 0xA2, 0x04, 0x6F,
-0x01, 0x4C, 0x88, 0xF3, 0x90, 0xC2, 0x88, 0xF3,
-0x84, 0xA2, 0xFE, 0x4C, 0x12, 0xEB, 0x6D, 0xE4,
-0x88, 0xF3, 0x77, 0xC2, 0x88, 0xF3, 0x90, 0xA2,
-0x88, 0xF3, 0xD7, 0xA2, 0x00, 0x18, 0x3A, 0xC9,
-0x05, 0x97, 0x03, 0x63, 0x00, 0xEF, 0x00, 0x65,
-0x30, 0xF0, 0x20, 0x6B, 0x68, 0xF5, 0x04, 0x4B,
-0xFF, 0x6A, 0xA7, 0x43, 0x8C, 0xEA, 0x26, 0x4D,
-0x00, 0x6C, 0x80, 0xC3, 0x01, 0x4B, 0x83, 0x67,
-0xAE, 0xEC, 0xFA, 0x2C, 0x30, 0xF0, 0x20, 0x6B,
-0xC0, 0xF1, 0x08, 0x4B, 0x88, 0xF3, 0x94, 0xC3,
-0x88, 0xF3, 0x98, 0xC3, 0x88, 0xF3, 0x90, 0xC3,
-0x01, 0x6C, 0x8E, 0xEA, 0x05, 0x2A, 0x2D, 0x6C,
-0x88, 0xF3, 0x99, 0xC3, 0x88, 0xF3, 0x5A, 0xC3,
-0x20, 0xE8, 0x00, 0x65, 0xFD, 0x63, 0x05, 0x62,
-0x30, 0xF0, 0x20, 0x6B, 0xEF, 0xF4, 0xA8, 0xA3,
-0x01, 0x6B, 0xFF, 0x6A, 0xAC, 0xEB, 0x4C, 0xEB,
-0x4C, 0xEC, 0x10, 0x23, 0x30, 0xF0, 0x20, 0x6A,
-0xC0, 0xF1, 0x08, 0x4A, 0x88, 0xF3, 0x74, 0xA2,
-0x01, 0x4B, 0x88, 0xF3, 0x74, 0xC2, 0x88, 0xF3,
-0x74, 0xA2, 0xC8, 0xF3, 0x5E, 0xAA, 0x43, 0xEB,
-0xA0, 0xF0, 0x1E, 0x60, 0x00, 0x6D, 0x00, 0x18,
-0xA3, 0xC8, 0x30, 0xF0, 0x20, 0x6B, 0xC0, 0xF1,
-0x08, 0x4B, 0xC8, 0xF3, 0x94, 0x9B, 0xC8, 0xF3,
-0x50, 0xDB, 0x83, 0xEA, 0x31, 0x61, 0x68, 0xF3,
-0xF9, 0xA3, 0x01, 0x6D, 0xFF, 0x6E, 0xEC, 0xED,
-0x0E, 0x25, 0x88, 0xF3, 0xFB, 0xA3, 0x88, 0xF3,
-0xB6, 0xA3, 0x93, 0xE2, 0x0E, 0x4F, 0xBF, 0xE7,
-0xC8, 0xF3, 0xBC, 0xA3, 0x82, 0x34, 0x8A, 0x34,
-0xAF, 0xE7, 0x89, 0xE3, 0x0B, 0x10, 0xC8, 0xF3,
-0xFD, 0xA3, 0x88, 0xF3, 0xB6, 0xA3, 0x8B, 0xE2,
-0xEB, 0xEF, 0xAF, 0xE7, 0x42, 0x32, 0x0A, 0x4B,
-0x4A, 0x32, 0x49, 0xE3, 0xCC, 0xEA, 0x2D, 0x5A,
-0x0F, 0x60, 0x30, 0xF0, 0x20, 0x6B, 0xC0, 0xF1,
-0x08, 0x4B, 0x69, 0xE2, 0x88, 0xF3, 0x9C, 0xA2,
-0x01, 0x4C, 0x88, 0xF3, 0x9C, 0xC2, 0x88, 0xF3,
-0x54, 0xA3, 0x01, 0x4A, 0x88, 0xF3, 0x54, 0xC3,
+0x88, 0xF3, 0xF1, 0xA2, 0x88, 0xF3, 0x72, 0xA2,
+0xE3, 0xEB, 0x09, 0x61, 0x88, 0xF3, 0x73, 0xA2,
+0x88, 0xF3, 0xC4, 0xC2, 0x71, 0xE4, 0xB7, 0xE4,
+0x88, 0xF3, 0xB6, 0xC2, 0x09, 0x10, 0x88, 0xF3,
+0x93, 0xA2, 0x77, 0xE5, 0xB9, 0xE6, 0x6F, 0xE4,
+0x88, 0xF3, 0xC4, 0xC2, 0x88, 0xF3, 0x76, 0xC2,
 0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A,
-0x88, 0xF3, 0x94, 0xA2, 0xC8, 0xF3, 0x7E, 0xAA,
-0x63, 0xEC, 0x7A, 0x60, 0x82, 0x10, 0xA0, 0xA4,
-0xAD, 0xE3, 0xFF, 0x6D, 0xAC, 0xEB, 0x63, 0xEE,
-0x02, 0x60, 0xC2, 0x67, 0x06, 0x10, 0x01, 0x4A,
-0xAC, 0xEA, 0x2D, 0x72, 0x01, 0x4C, 0xF3, 0x61,
-0x00, 0x6E, 0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1,
-0x08, 0x4A, 0xC8, 0xF3, 0xFE, 0xAA, 0xE8, 0xF3,
-0x40, 0xA2, 0x30, 0xF0, 0x20, 0x6D, 0x00, 0x6C,
-0x5F, 0xE7, 0x68, 0xF5, 0x04, 0x4D, 0x64, 0x67,
-0x40, 0xA5, 0x51, 0xE4, 0xFF, 0x6A, 0x4C, 0xEC,
-0x82, 0xEF, 0x06, 0x61, 0x01, 0x4B, 0x4C, 0xEB,
-0x2D, 0x73, 0x01, 0x4D, 0xF5, 0x61, 0x00, 0x6B,
+0x88, 0xF3, 0x73, 0xA2, 0x88, 0xF3, 0x96, 0xA2,
+0x0A, 0x4B, 0x82, 0xEB, 0x02, 0x60, 0x88, 0xF3,
+0x76, 0xC2, 0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1,
+0x08, 0x4A, 0x88, 0xF3, 0x76, 0xA2, 0x88, 0xF3,
+0x84, 0xA2, 0x23, 0x4B, 0x82, 0xEB, 0x02, 0x60,
+0x88, 0xF3, 0x64, 0xC2, 0x30, 0xF0, 0x20, 0x6A,
+0xC0, 0xF1, 0x08, 0x4A, 0x88, 0xF3, 0x76, 0xA2,
+0x68, 0xF3, 0x97, 0xA2, 0x88, 0xF3, 0x6A, 0xCA,
+0x18, 0x6B, 0x8C, 0xEB, 0x10, 0x73, 0x07, 0x61,
+0xC8, 0xF3, 0x79, 0xA2, 0x03, 0x6C, 0x76, 0x33,
+0x8C, 0xEB, 0x88, 0xF3, 0x64, 0xC2, 0x10, 0xF0,
+0x24, 0x6A, 0x1B, 0xF7, 0x50, 0x9A, 0x60, 0xA2,
+0x07, 0x23, 0x60, 0xA2, 0xFF, 0x6A, 0x4C, 0xEB,
+0x30, 0xF0, 0x20, 0x6A, 0x48, 0xF5, 0x72, 0xCA,
+0x10, 0xF0, 0x24, 0x6A, 0x1B, 0xF7, 0x54, 0x9A,
+0x30, 0xF0, 0x20, 0x6C, 0x48, 0xF5, 0x92, 0xAC,
+0xA0, 0xA2, 0xFF, 0x6B, 0x6C, 0xED, 0x8E, 0xED,
+0x02, 0x25, 0x8C, 0xEB, 0x60, 0xC2, 0x30, 0xF0,
+0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A, 0x68, 0xF3,
+0x9A, 0xA2, 0x41, 0x6B, 0x6B, 0xEB, 0x8C, 0xEB,
+0x68, 0xF3, 0x7A, 0xC2, 0x04, 0x10, 0x40, 0x6A,
+0x0D, 0xEA, 0x68, 0xF3, 0x5A, 0xC3, 0x01, 0x91,
+0x00, 0x90, 0x01, 0x63, 0x20, 0xE8, 0x00, 0x65,
+0xFD, 0x63, 0x05, 0x62, 0x30, 0xF0, 0x20, 0x6A,
+0xC0, 0xF1, 0x08, 0x4A, 0x88, 0xF3, 0x65, 0xA2,
+0xE8, 0xF3, 0x84, 0xA2, 0x63, 0xEC, 0x22, 0x60,
+0x88, 0xF3, 0x98, 0xA2, 0x01, 0x4C, 0x88, 0xF3,
+0x98, 0xC2, 0x88, 0xF3, 0xB8, 0xA2, 0xE8, 0xF3,
+0x81, 0xA2, 0xA3, 0xEC, 0x17, 0x61, 0x03, 0x6D,
+0xB8, 0xEB, 0x88, 0xF3, 0x90, 0xA2, 0x88, 0xF3,
+0xB1, 0xA2, 0x04, 0x6F, 0x01, 0x4C, 0x88, 0xF3,
+0x90, 0xC2, 0x88, 0xF3, 0x84, 0xA2, 0xFE, 0x4C,
+0x12, 0xEB, 0x6D, 0xE4, 0x88, 0xF3, 0x77, 0xC2,
+0x88, 0xF3, 0x90, 0xA2, 0x88, 0xF3, 0xD7, 0xA2,
+0x00, 0x18, 0x39, 0xC9, 0x05, 0x97, 0x03, 0x63,
+0x00, 0xEF, 0x00, 0x65, 0x30, 0xF0, 0x20, 0x6B,
+0x68, 0xF5, 0x04, 0x4B, 0xFF, 0x6A, 0xA7, 0x43,
+0x8C, 0xEA, 0x26, 0x4D, 0x00, 0x6C, 0x80, 0xC3,
+0x01, 0x4B, 0x83, 0x67, 0xAE, 0xEC, 0xFA, 0x2C,
+0x30, 0xF0, 0x20, 0x6B, 0xC0, 0xF1, 0x08, 0x4B,
+0x88, 0xF3, 0x94, 0xC3, 0x88, 0xF3, 0x98, 0xC3,
+0x88, 0xF3, 0x90, 0xC3, 0x01, 0x6C, 0x8E, 0xEA,
+0x05, 0x2A, 0x2D, 0x6C, 0x88, 0xF3, 0x99, 0xC3,
+0x88, 0xF3, 0x5A, 0xC3, 0x20, 0xE8, 0x00, 0x65,
+0xFD, 0x63, 0x05, 0x62, 0x30, 0xF0, 0x20, 0x6B,
+0xEF, 0xF4, 0xA8, 0xA3, 0x01, 0x6B, 0xFF, 0x6A,
+0xAC, 0xEB, 0x4C, 0xEB, 0x4C, 0xEC, 0x10, 0x23,
 0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A,
-0x88, 0xF3, 0xD9, 0xC2, 0x88, 0xF3, 0x7A, 0xC2,
-0x88, 0xF3, 0x79, 0xA2, 0x0A, 0x5B, 0x05, 0x61,
-0xF6, 0x4B, 0x88, 0xF3, 0x71, 0xC2, 0x00, 0x6B,
-0x05, 0x10, 0x00, 0x6C, 0x88, 0xF3, 0x91, 0xC2,
-0x0A, 0x6C, 0x6F, 0xE4, 0x88, 0xF3, 0x70, 0xC2,
+0x88, 0xF3, 0x74, 0xA2, 0x01, 0x4B, 0x88, 0xF3,
+0x74, 0xC2, 0x88, 0xF3, 0x74, 0xA2, 0xC8, 0xF3,
+0x5E, 0xAA, 0x43, 0xEB, 0xA0, 0xF0, 0x1E, 0x60,
+0x00, 0x6D, 0x00, 0x18, 0xA2, 0xC8, 0x30, 0xF0,
+0x20, 0x6B, 0xC0, 0xF1, 0x08, 0x4B, 0xC8, 0xF3,
+0x94, 0x9B, 0xC8, 0xF3, 0x50, 0xDB, 0x83, 0xEA,
+0x31, 0x61, 0x68, 0xF3, 0xF9, 0xA3, 0x01, 0x6D,
+0xFF, 0x6E, 0xEC, 0xED, 0x0E, 0x25, 0x88, 0xF3,
+0xFB, 0xA3, 0x88, 0xF3, 0xB6, 0xA3, 0x93, 0xE2,
+0x0E, 0x4F, 0xBF, 0xE7, 0xC8, 0xF3, 0xBC, 0xA3,
+0x82, 0x34, 0x8A, 0x34, 0xAF, 0xE7, 0x89, 0xE3,
+0x0B, 0x10, 0xC8, 0xF3, 0xFD, 0xA3, 0x88, 0xF3,
+0xB6, 0xA3, 0x8B, 0xE2, 0xEB, 0xEF, 0xAF, 0xE7,
+0x42, 0x32, 0x0A, 0x4B, 0x4A, 0x32, 0x49, 0xE3,
+0xCC, 0xEA, 0x2D, 0x5A, 0x0F, 0x60, 0x30, 0xF0,
+0x20, 0x6B, 0xC0, 0xF1, 0x08, 0x4B, 0x69, 0xE2,
+0x88, 0xF3, 0x9C, 0xA2, 0x01, 0x4C, 0x88, 0xF3,
+0x9C, 0xC2, 0x88, 0xF3, 0x54, 0xA3, 0x01, 0x4A,
+0x88, 0xF3, 0x54, 0xC3, 0x30, 0xF0, 0x20, 0x6A,
+0xC0, 0xF1, 0x08, 0x4A, 0x88, 0xF3, 0x94, 0xA2,
+0xC8, 0xF3, 0x7E, 0xAA, 0x63, 0xEC, 0x7A, 0x60,
+0x82, 0x10, 0xA0, 0xA4, 0xAD, 0xE3, 0xFF, 0x6D,
+0xAC, 0xEB, 0x63, 0xEE, 0x02, 0x60, 0xC2, 0x67,
+0x06, 0x10, 0x01, 0x4A, 0xAC, 0xEA, 0x2D, 0x72,
+0x01, 0x4C, 0xF3, 0x61, 0x00, 0x6E, 0x30, 0xF0,
+0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A, 0xC8, 0xF3,
+0xFE, 0xAA, 0xE8, 0xF3, 0x40, 0xA2, 0x30, 0xF0,
+0x20, 0x6D, 0x00, 0x6C, 0x5F, 0xE7, 0x68, 0xF5,
+0x04, 0x4D, 0x64, 0x67, 0x40, 0xA5, 0x51, 0xE4,
+0xFF, 0x6A, 0x4C, 0xEC, 0x82, 0xEF, 0x06, 0x61,
+0x01, 0x4B, 0x4C, 0xEB, 0x2D, 0x73, 0x01, 0x4D,
+0xF5, 0x61, 0x00, 0x6B, 0x30, 0xF0, 0x20, 0x6A,
+0xC0, 0xF1, 0x08, 0x4A, 0x88, 0xF3, 0xD9, 0xC2,
+0x88, 0xF3, 0x7A, 0xC2, 0x88, 0xF3, 0x79, 0xA2,
+0x0A, 0x5B, 0x05, 0x61, 0xF6, 0x4B, 0x88, 0xF3,
+0x71, 0xC2, 0x00, 0x6B, 0x05, 0x10, 0x00, 0x6C,
+0x88, 0xF3, 0x91, 0xC2, 0x0A, 0x6C, 0x6F, 0xE4,
+0x88, 0xF3, 0x70, 0xC2, 0x30, 0xF0, 0x20, 0x6A,
+0xC0, 0xF1, 0x08, 0x4A, 0x88, 0xF3, 0x79, 0xA2,
+0x88, 0xF3, 0x9A, 0xA2, 0x68, 0xF3, 0xB9, 0xA2,
+0x73, 0xE4, 0x01, 0x6B, 0xAC, 0xEB, 0x03, 0x23,
+0xC8, 0xF3, 0x7C, 0xA2, 0x02, 0x10, 0xC8, 0xF3,
+0x7D, 0xA2, 0x71, 0xE4, 0x01, 0x4C, 0x88, 0xF3,
+0x97, 0xC2, 0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1,
+0x08, 0x4A, 0x88, 0xF3, 0x77, 0xA2, 0x10, 0x5B,
+0x03, 0x60, 0x10, 0x6B, 0x88, 0xF3, 0x77, 0xC2,
 0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A,
-0x88, 0xF3, 0x79, 0xA2, 0x88, 0xF3, 0x9A, 0xA2,
-0x68, 0xF3, 0xB9, 0xA2, 0x73, 0xE4, 0x01, 0x6B,
-0xAC, 0xEB, 0x03, 0x23, 0xC8, 0xF3, 0x7C, 0xA2,
-0x02, 0x10, 0xC8, 0xF3, 0x7D, 0xA2, 0x71, 0xE4,
-0x01, 0x4C, 0x88, 0xF3, 0x97, 0xC2, 0x30, 0xF0,
-0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A, 0x88, 0xF3,
-0x77, 0xA2, 0x10, 0x5B, 0x03, 0x60, 0x10, 0x6B,
-0x88, 0xF3, 0x77, 0xC2, 0x30, 0xF0, 0x20, 0x6A,
-0xC0, 0xF1, 0x08, 0x4A, 0x88, 0xF3, 0x77, 0xA2,
-0x88, 0xF3, 0x90, 0xA2, 0x88, 0xF3, 0xB1, 0xA2,
-0x02, 0x4B, 0x88, 0xF3, 0x77, 0xC2, 0x88, 0xF3,
-0xD7, 0xA2, 0x03, 0x6F, 0x00, 0x18, 0x3A, 0xC9,
-0x00, 0x6C, 0x00, 0x18, 0xAE, 0xC9, 0x09, 0x10,
-0x30, 0xF0, 0x20, 0x6C, 0x00, 0x6B, 0xE8, 0xF3,
-0xC0, 0xA2, 0x68, 0xF5, 0x04, 0x4C, 0x43, 0x67,
-0x7E, 0x17, 0x05, 0x97, 0x03, 0x63, 0x00, 0xEF,
-0xFB, 0x63, 0x09, 0x62, 0x30, 0xF0, 0x20, 0x6B,
-0x28, 0xF5, 0xBF, 0xA3, 0x04, 0x6B, 0xFF, 0x6A,
-0xAC, 0xEB, 0x4C, 0xEB, 0x4C, 0xEC, 0x0C, 0x23,
-0x7D, 0x67, 0x1E, 0x6A, 0x50, 0xC3, 0x01, 0x6A,
-0x4F, 0xCB, 0x30, 0xF0, 0x20, 0x6A, 0xAE, 0xF2,
-0x58, 0x9A, 0x92, 0xC3, 0x04, 0x04, 0x40, 0xEA,
-0x09, 0x97, 0x05, 0x63, 0x00, 0xEF, 0x00, 0x65,
-0xFC, 0x63, 0x07, 0x62, 0x06, 0xD1, 0x05, 0xD0,
-0x30, 0xF0, 0x20, 0x6B, 0x30, 0xF0, 0x20, 0x6A,
-0x24, 0x67, 0x6E, 0xF5, 0x58, 0x9A, 0xEF, 0xF6,
-0x85, 0xA3, 0xFF, 0x68, 0x0C, 0xE9, 0x40, 0xEA,
-0x01, 0x72, 0x35, 0x61, 0x30, 0xF0, 0x20, 0x6B,
-0xC0, 0xF1, 0x08, 0x4B, 0x68, 0xF3, 0x94, 0xA3,
-0x7F, 0x6A, 0x8C, 0xEA, 0x0C, 0xEA, 0x2B, 0x22,
-0x68, 0xF3, 0x75, 0xA3, 0x0F, 0x6A, 0x6C, 0xEA,
-0x01, 0x72, 0x25, 0x61, 0x05, 0x59, 0x03, 0x61,
-0xA0, 0xF6, 0x08, 0x6A, 0x07, 0x10, 0x10, 0xF0,
-0x24, 0x6A, 0x24, 0x31, 0x1B, 0xF6, 0x04, 0x4A,
-0x49, 0xE1, 0x40, 0xAA, 0x61, 0x42, 0x1F, 0xF7,
-0x00, 0x6C, 0x8C, 0xEB, 0x02, 0xF0, 0x00, 0x73,
-0x01, 0x60, 0x05, 0x2B, 0x10, 0xF0, 0x24, 0x6B,
-0x3C, 0xF3, 0x7C, 0x9B, 0x04, 0x10, 0x10, 0xF0,
-0x24, 0x6B, 0x5C, 0xF3, 0x60, 0x9B, 0x69, 0xE2,
-0x60, 0xA2, 0x20, 0x6A, 0x6C, 0xEA, 0x4B, 0xEA,
-0xC0, 0xF7, 0x42, 0x32, 0x01, 0x10, 0x01, 0x6A,
-0x07, 0x97, 0x06, 0x91, 0x05, 0x90, 0x04, 0x63,
-0x00, 0xEF, 0x00, 0x65, 0x30, 0xF0, 0x20, 0x6A,
-0x28, 0xF5, 0x7C, 0xA2, 0x7F, 0x6A, 0x6C, 0xEA,
-0x01, 0x5A, 0x58, 0x67, 0x20, 0xE8, 0x00, 0x65,
-0xFD, 0x63, 0x05, 0x62, 0x30, 0xF0, 0x20, 0x6A,
-0x4E, 0xF2, 0x4C, 0x9A, 0x30, 0xF0, 0x20, 0x6C,
-0xAF, 0xF5, 0x10, 0x4C, 0x00, 0x6D, 0x07, 0x6E,
-0x40, 0xEA, 0x05, 0x97, 0x03, 0x63, 0x00, 0xEF,
-0x30, 0xF0, 0x20, 0x6A, 0xAF, 0xF5, 0x50, 0xA2,
-0x01, 0x6B, 0x46, 0x32, 0x6C, 0xEA, 0x20, 0xE8,
-0x30, 0xF0, 0x20, 0x6A, 0xAF, 0xF5, 0x70, 0xA2,
+0x88, 0xF3, 0x77, 0xA2, 0x88, 0xF3, 0x90, 0xA2,
+0x88, 0xF3, 0xB1, 0xA2, 0x02, 0x4B, 0x88, 0xF3,
+0x77, 0xC2, 0x88, 0xF3, 0xD7, 0xA2, 0x03, 0x6F,
+0x00, 0x18, 0x39, 0xC9, 0x00, 0x6C, 0x00, 0x18,
+0xAD, 0xC9, 0x09, 0x10, 0x30, 0xF0, 0x20, 0x6C,
+0x00, 0x6B, 0xE8, 0xF3, 0xC0, 0xA2, 0x68, 0xF5,
+0x04, 0x4C, 0x43, 0x67, 0x7E, 0x17, 0x05, 0x97,
+0x03, 0x63, 0x00, 0xEF, 0xFB, 0x63, 0x09, 0x62,
+0x30, 0xF0, 0x20, 0x6B, 0x28, 0xF5, 0xBF, 0xA3,
+0x04, 0x6B, 0xFF, 0x6A, 0xAC, 0xEB, 0x4C, 0xEB,
+0x4C, 0xEC, 0x0C, 0x23, 0x7D, 0x67, 0x1E, 0x6A,
+0x50, 0xC3, 0x01, 0x6A, 0x4F, 0xCB, 0x30, 0xF0,
+0x20, 0x6A, 0xAE, 0xF2, 0x58, 0x9A, 0x92, 0xC3,
+0x04, 0x04, 0x40, 0xEA, 0x09, 0x97, 0x05, 0x63,
+0x00, 0xEF, 0x00, 0x65, 0xFC, 0x63, 0x07, 0x62,
+0x06, 0xD1, 0x05, 0xD0, 0x30, 0xF0, 0x20, 0x6B,
+0x30, 0xF0, 0x20, 0x6A, 0x24, 0x67, 0x6E, 0xF5,
+0x58, 0x9A, 0xEF, 0xF6, 0x81, 0xA3, 0xFF, 0x68,
+0x0C, 0xE9, 0x40, 0xEA, 0x01, 0x72, 0x35, 0x61,
+0x30, 0xF0, 0x20, 0x6B, 0xC0, 0xF1, 0x08, 0x4B,
+0x68, 0xF3, 0x94, 0xA3, 0x7F, 0x6A, 0x8C, 0xEA,
+0x0C, 0xEA, 0x2B, 0x22, 0x68, 0xF3, 0x75, 0xA3,
+0x0F, 0x6A, 0x6C, 0xEA, 0x01, 0x72, 0x25, 0x61,
+0x05, 0x59, 0x03, 0x61, 0xA0, 0xF6, 0x08, 0x6A,
+0x07, 0x10, 0x10, 0xF0, 0x24, 0x6A, 0x24, 0x31,
+0xFB, 0xF1, 0x00, 0x4A, 0x49, 0xE1, 0x40, 0xAA,
+0x61, 0x42, 0x1F, 0xF7, 0x00, 0x6C, 0x8C, 0xEB,
+0x02, 0xF0, 0x00, 0x73, 0x01, 0x60, 0x05, 0x2B,
+0x10, 0xF0, 0x24, 0x6B, 0x1B, 0xF7, 0x78, 0x9B,
+0x04, 0x10, 0x10, 0xF0, 0x24, 0x6B, 0x1B, 0xF7,
+0x7C, 0x9B, 0x69, 0xE2, 0x60, 0xA2, 0x20, 0x6A,
+0x6C, 0xEA, 0x4B, 0xEA, 0xC0, 0xF7, 0x42, 0x32,
+0x01, 0x10, 0x01, 0x6A, 0x07, 0x97, 0x06, 0x91,
+0x05, 0x90, 0x04, 0x63, 0x00, 0xEF, 0x00, 0x65,
+0x30, 0xF0, 0x20, 0x6A, 0x28, 0xF5, 0x7C, 0xA2,
+0x7F, 0x6A, 0x6C, 0xEA, 0x01, 0x5A, 0x58, 0x67,
+0x20, 0xE8, 0x00, 0x65, 0xFD, 0x63, 0x05, 0x62,
+0x30, 0xF0, 0x20, 0x6A, 0x4E, 0xF2, 0x4C, 0x9A,
+0x30, 0xF0, 0x20, 0x6C, 0xAF, 0xF5, 0x0C, 0x4C,
+0x00, 0x6D, 0x07, 0x6E, 0x40, 0xEA, 0x05, 0x97,
+0x03, 0x63, 0x00, 0xEF, 0x30, 0xF0, 0x20, 0x6A,
+0xAF, 0xF5, 0x4C, 0xA2, 0x01, 0x6B, 0x46, 0x32,
+0x6C, 0xEA, 0x20, 0xE8, 0xFD, 0x63, 0x05, 0x62,
+0x00, 0x18, 0x75, 0xCA, 0x14, 0x2A, 0x10, 0xF0,
+0x24, 0x6A, 0x3B, 0xF7, 0x40, 0x9A, 0x40, 0xA2,
+0x1E, 0x2A, 0x10, 0xF0, 0x24, 0x6A, 0x3B, 0xF7,
+0x44, 0x9A, 0x40, 0xA2, 0x18, 0x2A, 0x10, 0xF0,
+0x24, 0x6A, 0x3B, 0xF7, 0x48, 0x9A, 0x60, 0xA2,
+0x02, 0x6A, 0x6C, 0xEA, 0x10, 0x22, 0x00, 0x18,
+0x0B, 0xC9, 0x01, 0x72, 0x01, 0x6A, 0x0C, 0x60,
+0x10, 0xF0, 0x24, 0x6A, 0x3B, 0xF7, 0x6C, 0x9A,
+0x10, 0xF0, 0x24, 0x6C, 0x3B, 0xF7, 0x90, 0x9C,
+0x40, 0x9B, 0x8D, 0xEA, 0x40, 0xDB, 0x00, 0x6A,
+0x05, 0x97, 0x03, 0x63, 0x00, 0xEF, 0x00, 0x65,
+0x30, 0xF0, 0x20, 0x6A, 0xAF, 0xF5, 0x6C, 0xA2,
 0x01, 0x6A, 0x6C, 0xEA, 0x20, 0xE8, 0x00, 0x65,
-0x30, 0xF0, 0x20, 0x6A, 0xAF, 0xF5, 0x50, 0xA2,
+0x30, 0xF0, 0x20, 0x6A, 0xAF, 0xF5, 0x4C, 0xA2,
 0xFF, 0x6B, 0x56, 0x32, 0x8E, 0xEA, 0x6C, 0xEA,
 0x01, 0x5A, 0x58, 0x67, 0x6C, 0xEA, 0x20, 0xE8,
-0xFD, 0x63, 0x05, 0x62, 0x00, 0x18, 0x7A, 0xCA,
+0xFD, 0x63, 0x05, 0x62, 0x00, 0x18, 0x90, 0xCA,
 0x00, 0x6B, 0x06, 0x22, 0x30, 0xF0, 0x20, 0x6A,
-0xAF, 0xF5, 0x7A, 0xA2, 0x01, 0x6A, 0x4C, 0xEB,
+0xAF, 0xF5, 0x76, 0xA2, 0x01, 0x6A, 0x4C, 0xEB,
 0x05, 0x97, 0x43, 0x67, 0x03, 0x63, 0x00, 0xEF,
 0xFC, 0x63, 0x07, 0x62, 0x06, 0xD1, 0x05, 0xD0,
 0x30, 0xF0, 0x20, 0x68, 0xC0, 0xF1, 0x08, 0x48,
@@ -19821,14 +19807,14 @@ u8 array_mp_8821c_fw_nic[] = {
 0x4C, 0xEB, 0x0B, 0x23, 0xC9, 0xF0, 0x65, 0xA0,
 0x6C, 0xEA, 0x2C, 0xEA, 0x26, 0x2A, 0x68, 0xF3,
 0x58, 0xA0, 0x23, 0x2A, 0xE8, 0xF3, 0x52, 0xA0,
-0x1D, 0x10, 0x00, 0x18, 0x0C, 0xC9, 0x01, 0x72,
+0x1D, 0x10, 0x00, 0x18, 0x0B, 0xC9, 0x01, 0x72,
 0x1C, 0x61, 0x68, 0xF3, 0x7D, 0xA0, 0x03, 0x6A,
 0x6C, 0xEA, 0x17, 0x2A, 0x68, 0xF3, 0x58, 0xA0,
 0x14, 0x2A, 0x04, 0x6A, 0x6C, 0xEA, 0x11, 0x2A,
 0x10, 0x6A, 0x6C, 0xEA, 0x0E, 0x2A, 0x68, 0xF3,
 0x79, 0xA0, 0x20, 0x6A, 0x6C, 0xEA, 0x2C, 0xEA,
 0x08, 0x22, 0xE8, 0xF3, 0x52, 0xA0, 0x05, 0x2A,
-0x00, 0x18, 0x84, 0xCA, 0x01, 0x5A, 0x58, 0x67,
+0x00, 0x18, 0x9A, 0xCA, 0x01, 0x5A, 0x58, 0x67,
 0x01, 0x10, 0x00, 0x6A, 0x07, 0x97, 0x06, 0x91,
 0x05, 0x90, 0x04, 0x63, 0x00, 0xEF, 0x00, 0x65,
 0xFB, 0x63, 0x09, 0x62, 0x08, 0xD1, 0x07, 0xD0,
@@ -19839,15 +19825,15 @@ u8 array_mp_8821c_fw_nic[] = {
 0x88, 0xA1, 0x01, 0x6B, 0x8C, 0xEB, 0x4C, 0xEB,
 0x29, 0x23, 0xEF, 0xF4, 0x08, 0x49, 0x42, 0xA1,
 0xFF, 0x72, 0x54, 0x60, 0x10, 0xF0, 0x24, 0x6A,
-0x5C, 0xF3, 0x44, 0x9A, 0x00, 0x6B, 0x30, 0xF0,
+0x3B, 0xF7, 0x54, 0x9A, 0x00, 0x6B, 0x30, 0xF0,
 0x20, 0x68, 0x60, 0xC2, 0x10, 0xF0, 0x24, 0x6A,
-0x5C, 0xF3, 0x48, 0x9A, 0x04, 0x6B, 0xFF, 0x6C,
+0x3B, 0xF7, 0x58, 0x9A, 0x04, 0x6B, 0xFF, 0x6C,
 0x60, 0xC2, 0xAE, 0xF2, 0x50, 0x98, 0x59, 0x4C,
 0x00, 0x6D, 0x05, 0x6E, 0x40, 0xEA, 0xC2, 0xA1,
 0xAE, 0xF2, 0x50, 0x98, 0xFF, 0x6C, 0x55, 0x4C,
 0x00, 0x6D, 0x05, 0x4E, 0x40, 0xEA, 0x00, 0x18,
-0x7A, 0xCA, 0x34, 0x2A, 0x04, 0x94, 0x00, 0x18,
-0x98, 0xEC, 0x30, 0x10, 0x88, 0xF3, 0x65, 0xA0,
+0x90, 0xCA, 0x34, 0x2A, 0x04, 0x94, 0x00, 0x18,
+0x3A, 0xEC, 0x30, 0x10, 0x88, 0xF3, 0x65, 0xA0,
 0x02, 0x5B, 0x13, 0x60, 0x88, 0xF3, 0xC4, 0xA0,
 0x30, 0xF0, 0x20, 0x6A, 0xAE, 0xF2, 0x50, 0x9A,
 0xFF, 0x6C, 0xD9, 0xE3, 0x55, 0x4C, 0x00, 0x6D,
@@ -19867,61 +19853,62 @@ u8 array_mp_8821c_fw_nic[] = {
 0x05, 0x63, 0x00, 0xEF, 0xFB, 0x63, 0x09, 0x62,
 0x08, 0xD1, 0x07, 0xD0, 0xFF, 0x6A, 0x4C, 0xEC,
 0x30, 0xF0, 0x20, 0x69, 0x04, 0xD4, 0xEF, 0xF4,
-0x08, 0x49, 0xC0, 0xF0, 0x88, 0xA1, 0x04, 0x6B,
-0x8C, 0xEB, 0x4C, 0xEB, 0x37, 0x23, 0xC0, 0xF0,
-0x0A, 0xA1, 0xC0, 0xF0, 0x49, 0xA1, 0x58, 0xE8,
-0x12, 0xE8, 0xC0, 0xF0, 0x10, 0xC1, 0x00, 0x18,
-0x69, 0xCA, 0x03, 0x22, 0xC0, 0xF0, 0x11, 0xC1,
-0x03, 0x10, 0x01, 0x6A, 0xC0, 0xF0, 0x51, 0xC1,
-0x30, 0xF0, 0x20, 0x6A, 0xAF, 0xF5, 0x19, 0xA2,
-0x02, 0x58, 0x11, 0x61, 0x00, 0x18, 0x69, 0xCA,
-0x06, 0x22, 0x04, 0x94, 0x00, 0x18, 0x9F, 0xEC,
-0x04, 0x94, 0x00, 0x18, 0x98, 0xEC, 0x04, 0x94,
-0x00, 0x18, 0x68, 0xEC, 0x04, 0x94, 0xB0, 0x67,
-0x00, 0x18, 0x37, 0xED, 0x0F, 0x10, 0x01, 0x70,
-0x04, 0x61, 0x04, 0x94, 0x00, 0x18, 0x72, 0xEC,
-0x09, 0x10, 0x00, 0x18, 0x69, 0xCA, 0x06, 0x22,
-0x04, 0x94, 0x00, 0x18, 0x9F, 0xEC, 0x04, 0x94,
-0x00, 0x18, 0x98, 0xEC, 0x09, 0x97, 0x08, 0x91,
+0x08, 0x49, 0xC0, 0xF0, 0x84, 0xA1, 0x04, 0x6B,
+0x8C, 0xEB, 0x4C, 0xEB, 0x32, 0x23, 0xC0, 0xF0,
+0x06, 0xA1, 0xC0, 0xF0, 0x45, 0xA1, 0x58, 0xE8,
+0x12, 0xE8, 0xC0, 0xF0, 0x0C, 0xC1, 0x00, 0x18,
+0x68, 0xCA, 0x03, 0x22, 0xC0, 0xF0, 0x0D, 0xC1,
+0x03, 0x10, 0x01, 0x6A, 0xC0, 0xF0, 0x4D, 0xC1,
+0x30, 0xF0, 0x20, 0x6A, 0xAF, 0xF5, 0x15, 0xA2,
+0x02, 0x58, 0x11, 0x61, 0x00, 0x18, 0x68, 0xCA,
+0x06, 0x22, 0x04, 0x94, 0x00, 0x18, 0x41, 0xEC,
+0x04, 0x94, 0x00, 0x18, 0x3A, 0xEC, 0x04, 0x94,
+0x00, 0x18, 0x0A, 0xEC, 0x04, 0x94, 0xB0, 0x67,
+0x00, 0x18, 0xD9, 0xEC, 0x13, 0x10, 0x01, 0x70,
+0x04, 0x61, 0x04, 0x94, 0x00, 0x18, 0x14, 0xEC,
+0x0D, 0x10, 0x00, 0x18, 0x68, 0xCA, 0x0A, 0x22,
+0x03, 0x10, 0x04, 0x94, 0x00, 0x18, 0x30, 0xEC,
+0x04, 0x94, 0x00, 0x18, 0x41, 0xEC, 0x04, 0x94,
+0x00, 0x18, 0x3A, 0xEC, 0x09, 0x97, 0x08, 0x91,
 0x07, 0x90, 0x05, 0x63, 0x00, 0xEF, 0x00, 0x65,
 0xFC, 0x63, 0x07, 0x62, 0x06, 0xD0, 0xFF, 0x6A,
 0x4C, 0xEC, 0x12, 0x2C, 0x10, 0xF0, 0x23, 0x6C,
-0xC5, 0xF7, 0x1D, 0x4C, 0x00, 0x18, 0xE9, 0xE9,
+0xE5, 0xF7, 0x19, 0x4C, 0x00, 0x18, 0x8B, 0xE9,
 0x30, 0xF0, 0x20, 0x6A, 0xEF, 0xF4, 0x08, 0x4A,
-0xC0, 0xF0, 0x92, 0xA2, 0x02, 0x6B, 0x6B, 0xEB,
-0x8C, 0xEB, 0xC0, 0xF0, 0x72, 0xC2, 0x1F, 0x10,
+0xC0, 0xF0, 0x8E, 0xA2, 0x02, 0x6B, 0x6B, 0xEB,
+0x8C, 0xEB, 0xC0, 0xF0, 0x6E, 0xC2, 0x1F, 0x10,
 0x30, 0xF0, 0x20, 0x68, 0xEF, 0xF4, 0x08, 0x48,
-0xC0, 0xF0, 0x88, 0xA0, 0x04, 0x6B, 0x8C, 0xEB,
-0x4C, 0xEB, 0x15, 0x23, 0xC0, 0xF0, 0xCB, 0xA0,
+0xC0, 0xF0, 0x84, 0xA0, 0x04, 0x6B, 0x8C, 0xEB,
+0x4C, 0xEB, 0x15, 0x23, 0xC0, 0xF0, 0xC7, 0xA0,
 0x00, 0x6A, 0x04, 0xD2, 0xA2, 0x67, 0x0A, 0x6A,
-0x58, 0xEE, 0x10, 0xF0, 0x23, 0x6C, 0xC5, 0xF7,
-0x1D, 0x4C, 0x01, 0x6F, 0x12, 0xEE, 0x00, 0x18,
-0xFC, 0xE9, 0xC0, 0xF0, 0x72, 0xA0, 0x01, 0x6A,
-0x6D, 0xEA, 0xC0, 0xF0, 0x52, 0xC0, 0x07, 0x97,
+0x58, 0xEE, 0x10, 0xF0, 0x23, 0x6C, 0xE5, 0xF7,
+0x19, 0x4C, 0x01, 0x6F, 0x12, 0xEE, 0x00, 0x18,
+0x9E, 0xE9, 0xC0, 0xF0, 0x6E, 0xA0, 0x01, 0x6A,
+0x6D, 0xEA, 0xC0, 0xF0, 0x4E, 0xC0, 0x07, 0x97,
 0x06, 0x90, 0x04, 0x63, 0x00, 0xEF, 0x00, 0x65,
 0xFD, 0x63, 0x05, 0x62, 0x30, 0xF0, 0x21, 0x6A,
-0x70, 0xF3, 0x7C, 0xA2, 0x80, 0x6A, 0x4B, 0xEA,
+0x70, 0xF3, 0x78, 0xA2, 0x80, 0x6A, 0x4B, 0xEA,
 0x6C, 0xEA, 0xFF, 0x6B, 0x6C, 0xEA, 0x02, 0x2A,
-0x00, 0x18, 0x6F, 0xED, 0x30, 0xF0, 0x20, 0x6B,
-0xEF, 0xF4, 0x08, 0x4B, 0x80, 0xF6, 0x94, 0xA3,
+0x00, 0x18, 0x11, 0xED, 0x30, 0xF0, 0x20, 0x6B,
+0xEF, 0xF4, 0x08, 0x4B, 0x80, 0xF6, 0x90, 0xA3,
 0x80, 0x6A, 0x4B, 0xEA, 0x8C, 0xEA, 0xFF, 0x6C,
-0x8C, 0xEA, 0x05, 0x22, 0x80, 0xF6, 0x97, 0xA3,
+0x8C, 0xEA, 0x05, 0x22, 0x80, 0xF6, 0x93, 0xA3,
 0x00, 0x18, 0xF2, 0xC4, 0x08, 0x10, 0x30, 0xF0,
 0x20, 0x6A, 0x6E, 0xF2, 0x58, 0x9A, 0x00, 0x6D,
 0xFF, 0x6C, 0xC5, 0x67, 0x40, 0xEA, 0x0C, 0x6D,
-0x01, 0x6C, 0x00, 0x18, 0xE5, 0xC8, 0x0C, 0x6C,
-0x00, 0x18, 0xF0, 0xF1, 0x05, 0x97, 0x03, 0x63,
+0x01, 0x6C, 0x00, 0x18, 0xE4, 0xC8, 0x0C, 0x6C,
+0x00, 0x18, 0x92, 0xF1, 0x05, 0x97, 0x03, 0x63,
 0x00, 0xEF, 0x00, 0x65, 0xFD, 0x63, 0x05, 0x62,
 0x04, 0xD0, 0xFF, 0x68, 0x8C, 0xE8, 0x00, 0x18,
-0x6F, 0xED, 0x08, 0x20, 0x30, 0xF0, 0x20, 0x6A,
+0x11, 0xED, 0x08, 0x20, 0x30, 0xF0, 0x20, 0x6A,
 0x6E, 0xF2, 0x58, 0x9A, 0x00, 0x6D, 0xFF, 0x6C,
 0xC5, 0x67, 0x40, 0xEA, 0x04, 0x6D, 0x01, 0x6C,
-0x00, 0x18, 0xE5, 0xC8, 0x04, 0x6C, 0x00, 0x18,
-0xF0, 0xF1, 0x05, 0x97, 0x04, 0x90, 0x03, 0x63,
+0x00, 0x18, 0xE4, 0xC8, 0x04, 0x6C, 0x00, 0x18,
+0x92, 0xF1, 0x05, 0x97, 0x04, 0x90, 0x03, 0x63,
 0x00, 0xEF, 0x00, 0x65, 0xFC, 0x63, 0x07, 0x62,
 0x06, 0xD1, 0x05, 0xD0, 0x30, 0xF0, 0x20, 0x6B,
 0xFF, 0x69, 0x30, 0xF0, 0x20, 0x6A, 0x8C, 0xE9,
-0x6E, 0xF5, 0x58, 0x9A, 0xEF, 0xF6, 0x85, 0xA3,
+0x6E, 0xF5, 0x58, 0x9A, 0xEF, 0xF6, 0x81, 0xA3,
 0x40, 0xEA, 0x01, 0x72, 0x2C, 0x61, 0x30, 0xF0,
 0x20, 0x68, 0xC0, 0xF1, 0x08, 0x48, 0x68, 0xF3,
 0x7A, 0xA0, 0x09, 0x6A, 0x4B, 0xEA, 0x6C, 0xEA,
@@ -19932,172 +19919,180 @@ u8 array_mp_8821c_fw_nic[] = {
 0x01, 0x6D, 0x08, 0x6E, 0xF1, 0x67, 0x40, 0xEA,
 0x01, 0x72, 0x0D, 0x61, 0x68, 0xF3, 0x7A, 0xA0,
 0x02, 0x6A, 0x01, 0x6C, 0x6D, 0xEA, 0x0E, 0x6D,
-0x68, 0xF3, 0x5A, 0xC0, 0x00, 0x18, 0xE5, 0xC8,
-0x0E, 0x6C, 0x00, 0x18, 0xF0, 0xF1, 0x07, 0x97,
+0x68, 0xF3, 0x5A, 0xC0, 0x00, 0x18, 0xE4, 0xC8,
+0x0E, 0x6C, 0x00, 0x18, 0x92, 0xF1, 0x07, 0x97,
 0x06, 0x91, 0x05, 0x90, 0x04, 0x63, 0x00, 0xEF,
 0xFD, 0x63, 0x05, 0x62, 0x30, 0xF0, 0x20, 0x6B,
-0xEF, 0xF4, 0x08, 0x4B, 0x80, 0xF6, 0x94, 0xA3,
+0xEF, 0xF4, 0x08, 0x4B, 0x80, 0xF6, 0x90, 0xA3,
 0x80, 0x6A, 0x4B, 0xEA, 0x8C, 0xEA, 0xFF, 0x6C,
-0x8C, 0xEA, 0x05, 0x22, 0x80, 0xF6, 0x97, 0xA3,
+0x8C, 0xEA, 0x05, 0x22, 0x80, 0xF6, 0x93, 0xA3,
 0x00, 0x18, 0xDE, 0xC4, 0x08, 0x10, 0x30, 0xF0,
 0x20, 0x6A, 0x6E, 0xF2, 0x58, 0x9A, 0xFF, 0x6C,
 0xA4, 0x67, 0x2F, 0x6E, 0x40, 0xEA, 0x30, 0xF0,
 0x20, 0x6A, 0xCE, 0xF2, 0x40, 0x9A, 0x40, 0xEA,
-0x30, 0xF0, 0x21, 0x6A, 0x70, 0xF3, 0x7C, 0xA2,
+0x30, 0xF0, 0x21, 0x6A, 0x70, 0xF3, 0x78, 0xA2,
 0x80, 0x6A, 0x4B, 0xEA, 0x6C, 0xEA, 0xFF, 0x6B,
-0x6C, 0xEA, 0x02, 0x2A, 0x00, 0x18, 0x42, 0xED,
-0x08, 0x6D, 0x01, 0x6C, 0x00, 0x18, 0xE5, 0xC8,
-0x08, 0x6C, 0x00, 0x18, 0xF0, 0xF1, 0x05, 0x97,
+0x6C, 0xEA, 0x02, 0x2A, 0x00, 0x18, 0xE4, 0xEC,
+0x08, 0x6D, 0x01, 0x6C, 0x00, 0x18, 0xE4, 0xC8,
+0x08, 0x6C, 0x00, 0x18, 0x92, 0xF1, 0x05, 0x97,
 0x03, 0x63, 0x00, 0xEF, 0xFC, 0x63, 0x07, 0x62,
 0x06, 0xD1, 0x05, 0xD0, 0xFF, 0x69, 0x04, 0x67,
-0x2C, 0xE8, 0xAC, 0xE9, 0x00, 0x18, 0x69, 0xCA,
-0x07, 0x22, 0x03, 0x28, 0x00, 0x18, 0x7C, 0xCB,
-0x0D, 0x10, 0x00, 0x18, 0x34, 0xCB, 0x0A, 0x10,
+0x2C, 0xE8, 0xAC, 0xE9, 0x00, 0x18, 0x68, 0xCA,
+0x07, 0x22, 0x03, 0x28, 0x00, 0x18, 0x94, 0xCB,
+0x0D, 0x10, 0x00, 0x18, 0x4C, 0xCB, 0x0A, 0x10,
 0x01, 0x70, 0x08, 0x61, 0x30, 0xF0, 0x20, 0x6A,
 0x2E, 0xF4, 0x48, 0x9A, 0x04, 0x6C, 0x01, 0x6D,
 0xD1, 0x67, 0x40, 0xEA, 0x07, 0x97, 0x06, 0x91,
 0x05, 0x90, 0x04, 0x63, 0x00, 0xEF, 0x00, 0x65,
 0xFD, 0x63, 0x05, 0x62, 0x04, 0xD0, 0x30, 0xF0,
-0x20, 0x6A, 0xAF, 0xF5, 0x10, 0xA2, 0x00, 0x6C,
-0x16, 0x30, 0x00, 0x18, 0x16, 0xCB, 0x00, 0x18,
-0x7A, 0xCA, 0x10, 0x22, 0x00, 0x18, 0x69, 0xCA,
-0x0D, 0x22, 0x90, 0x67, 0x00, 0x18, 0x8E, 0xEC,
-0x90, 0x67, 0x00, 0x18, 0x9F, 0xEC, 0x90, 0x67,
-0x00, 0x18, 0x98, 0xEC, 0x00, 0x6C, 0xB0, 0x67,
-0x00, 0x18, 0x97, 0xCB, 0x05, 0x97, 0x04, 0x90,
+0x20, 0x6A, 0xAF, 0xF5, 0x0C, 0xA2, 0x00, 0x6C,
+0x00, 0x18, 0x2E, 0xCB, 0x00, 0x18, 0x90, 0xCA,
+0x16, 0x30, 0x01, 0x6C, 0x04, 0x22, 0x90, 0x67,
+0x00, 0x18, 0x05, 0xCB, 0x00, 0x6C, 0xB0, 0x67,
+0x00, 0x18, 0xAF, 0xCB, 0x05, 0x97, 0x04, 0x90,
+0x03, 0x63, 0x00, 0xEF, 0xFD, 0x63, 0x05, 0x62,
+0x04, 0xD0, 0x30, 0xF0, 0x20, 0x6B, 0xEF, 0xF4,
+0x08, 0x4B, 0x04, 0x67, 0xC0, 0xF0, 0x84, 0xA3,
+0xFF, 0x6A, 0x4C, 0xE8, 0x96, 0x34, 0x0E, 0xEC,
+0xAC, 0xEA, 0x19, 0x2C, 0xC0, 0xF0, 0xAC, 0xA3,
+0x43, 0xED, 0x04, 0x61, 0x4B, 0xE5, 0xC0, 0xF0,
+0x4C, 0xC3, 0x02, 0x10, 0xC0, 0xF0, 0x8C, 0xC3,
+0x30, 0xF0, 0x20, 0x6A, 0xAF, 0xF5, 0x54, 0xA2,
+0x0A, 0x2A, 0x90, 0x67, 0x00, 0x18, 0x05, 0xCB,
+0x01, 0x6C, 0xB0, 0x67, 0x00, 0x18, 0xAF, 0xCB,
+0x01, 0x6C, 0x00, 0x18, 0x2E, 0xCB, 0x05, 0x97,
+0x04, 0x90, 0x03, 0x63, 0x00, 0xEF, 0x00, 0x65,
+0xFD, 0x63, 0x05, 0x62, 0x04, 0xD0, 0xFF, 0x68,
+0x8C, 0xE8, 0x00, 0x18, 0x90, 0xCA, 0x0E, 0x22,
+0x90, 0x67, 0x00, 0x18, 0x94, 0xCA, 0x0A, 0x22,
+0x00, 0x18, 0x68, 0xCA, 0x07, 0x22, 0x30, 0xF0,
+0x20, 0x6A, 0xAF, 0xF5, 0xB5, 0xA2, 0x90, 0x67,
+0x00, 0x18, 0xCD, 0xCB, 0x05, 0x97, 0x04, 0x90,
 0x03, 0x63, 0x00, 0xEF, 0xFD, 0x63, 0x05, 0x62,
-0x04, 0xD0, 0x30, 0xF0, 0x20, 0x6A, 0xAF, 0xF5,
-0x10, 0xA2, 0x00, 0x6C, 0x00, 0x18, 0x16, 0xCB,
-0x00, 0x18, 0x7A, 0xCA, 0x16, 0x30, 0x01, 0x6C,
-0x04, 0x22, 0x90, 0x67, 0x00, 0x18, 0xEF, 0xCA,
-0x00, 0x6C, 0xB0, 0x67, 0x00, 0x18, 0x97, 0xCB,
-0x05, 0x97, 0x04, 0x90, 0x03, 0x63, 0x00, 0xEF,
-0xFD, 0x63, 0x05, 0x62, 0x04, 0xD0, 0x30, 0xF0,
-0x20, 0x6B, 0xEF, 0xF4, 0x08, 0x4B, 0x04, 0x67,
-0xC0, 0xF0, 0x88, 0xA3, 0xFF, 0x6A, 0x4C, 0xE8,
-0x96, 0x34, 0x0E, 0xEC, 0xAC, 0xEA, 0x19, 0x2C,
-0xC0, 0xF0, 0xB0, 0xA3, 0x43, 0xED, 0x04, 0x61,
-0x4B, 0xE5, 0xC0, 0xF0, 0x50, 0xC3, 0x02, 0x10,
-0xC0, 0xF0, 0x90, 0xC3, 0x30, 0xF0, 0x20, 0x6A,
-0xAF, 0xF5, 0x58, 0xA2, 0x0A, 0x2A, 0x90, 0x67,
-0x00, 0x18, 0xEF, 0xCA, 0x01, 0x6C, 0xB0, 0x67,
-0x00, 0x18, 0x97, 0xCB, 0x01, 0x6C, 0x00, 0x18,
-0x16, 0xCB, 0x05, 0x97, 0x04, 0x90, 0x03, 0x63,
-0x00, 0xEF, 0x00, 0x65, 0xFD, 0x63, 0x05, 0x62,
 0x04, 0xD0, 0xFF, 0x68, 0x8C, 0xE8, 0x00, 0x18,
-0x7A, 0xCA, 0x0E, 0x22, 0x90, 0x67, 0x00, 0x18,
-0x7E, 0xCA, 0x0A, 0x22, 0x00, 0x18, 0x69, 0xCA,
-0x07, 0x22, 0x30, 0xF0, 0x20, 0x6A, 0xAF, 0xF5,
-0xB9, 0xA2, 0x90, 0x67, 0x00, 0x18, 0xC6, 0xCB,
+0x90, 0xCA, 0x0E, 0x22, 0x90, 0x67, 0x00, 0x18,
+0x94, 0xCA, 0x0A, 0x22, 0x00, 0x18, 0x68, 0xCA,
+0x07, 0x2A, 0x30, 0xF0, 0x20, 0x6A, 0xAF, 0xF5,
+0xB5, 0xA2, 0x90, 0x67, 0x00, 0x18, 0xCD, 0xCB,
 0x05, 0x97, 0x04, 0x90, 0x03, 0x63, 0x00, 0xEF,
-0xFD, 0x63, 0x05, 0x62, 0x04, 0xD0, 0xFF, 0x68,
-0x8C, 0xE8, 0x00, 0x18, 0x7A, 0xCA, 0x0E, 0x22,
-0x90, 0x67, 0x00, 0x18, 0x7E, 0xCA, 0x0A, 0x22,
-0x00, 0x18, 0x69, 0xCA, 0x07, 0x2A, 0x30, 0xF0,
-0x20, 0x6A, 0xAF, 0xF5, 0xB9, 0xA2, 0x90, 0x67,
-0x00, 0x18, 0xC6, 0xCB, 0x05, 0x97, 0x04, 0x90,
+0xFD, 0x63, 0x05, 0x62, 0x30, 0xF0, 0x20, 0x6A,
+0xEF, 0xF4, 0x08, 0x4A, 0xC0, 0xF0, 0x8E, 0xA2,
+0xC0, 0xF0, 0xA4, 0xA2, 0x02, 0x6B, 0x6B, 0xEB,
+0x8C, 0xEB, 0xB6, 0x35, 0x00, 0x6C, 0xC0, 0xF0,
+0x6E, 0xC2, 0x00, 0x18, 0xAF, 0xCB, 0x05, 0x97,
 0x03, 0x63, 0x00, 0xEF, 0xFD, 0x63, 0x05, 0x62,
-0x30, 0xF0, 0x20, 0x6A, 0xEF, 0xF4, 0x08, 0x4A,
-0xC0, 0xF0, 0x92, 0xA2, 0xC0, 0xF0, 0xA8, 0xA2,
-0x02, 0x6B, 0x6B, 0xEB, 0x8C, 0xEB, 0xB6, 0x35,
-0x00, 0x6C, 0xC0, 0xF0, 0x72, 0xC2, 0x00, 0x18,
-0x97, 0xCB, 0x05, 0x97, 0x03, 0x63, 0x00, 0xEF,
-0xFD, 0x63, 0x05, 0x62, 0x04, 0xD0, 0x30, 0xF0,
-0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A, 0xFF, 0x68,
-0x8C, 0xE8, 0x68, 0xF3, 0x99, 0xA2, 0x03, 0x6B,
-0x6B, 0xEB, 0x41, 0x6D, 0x8C, 0xEB, 0xAB, 0xED,
-0xAC, 0xEB, 0x68, 0xF3, 0xBA, 0xA2, 0x68, 0xF3,
-0x79, 0xC2, 0x11, 0x6B, 0x00, 0x6C, 0x6B, 0xEB,
-0x88, 0xF3, 0x85, 0xC2, 0x68, 0xF3, 0x9D, 0xC2,
-0xAC, 0xEB, 0x88, 0xF3, 0x86, 0xC2, 0x90, 0x67,
-0x68, 0xF3, 0x7A, 0xC2, 0x00, 0x18, 0x79, 0xEC,
-0x90, 0x67, 0x00, 0x18, 0x72, 0xEC, 0x90, 0x67,
-0x00, 0x18, 0x8E, 0xEC, 0x05, 0x97, 0x04, 0x90,
-0x03, 0x63, 0x00, 0xEF, 0xFB, 0x63, 0x09, 0x62,
-0x08, 0xD1, 0x07, 0xD0, 0xFF, 0x6A, 0x8C, 0xEA,
-0x30, 0xF0, 0x20, 0x68, 0x04, 0xD2, 0xC0, 0xF1,
-0x08, 0x48, 0x68, 0xF3, 0x74, 0xA0, 0x00, 0x6A,
-0xE8, 0xF3, 0x42, 0xC0, 0x7F, 0x6A, 0x6C, 0xEA,
-0xFF, 0x6B, 0x6C, 0xEA, 0x47, 0x22, 0x30, 0xF0,
-0x20, 0x69, 0xEF, 0xF4, 0x08, 0x49, 0x30, 0xF0,
-0x20, 0x6A, 0x6E, 0xF5, 0x58, 0x9A, 0xE0, 0xF1,
-0x9D, 0xA1, 0x40, 0xEA, 0x01, 0x72, 0x78, 0x67,
-0x05, 0xD3, 0x38, 0x2B, 0x04, 0x94, 0x88, 0xF3,
-0xA2, 0xA0, 0x00, 0x18, 0x37, 0xED, 0x04, 0x94,
-0x00, 0x6D, 0x00, 0x18, 0xA3, 0xC8, 0x68, 0xF3,
-0x7A, 0xA0, 0xC8, 0xF3, 0x54, 0xD8, 0x20, 0x6A,
-0x6D, 0xEA, 0x9D, 0x67, 0x68, 0xF3, 0x5A, 0xC0,
-0x47, 0x44, 0x0D, 0x4A, 0x80, 0xA2, 0x08, 0xF3,
-0x6A, 0xA0, 0x01, 0x6A, 0x88, 0xF3, 0x83, 0xC0,
-0x4C, 0xEB, 0xFF, 0x6C, 0x8C, 0xEB, 0x05, 0x2B,
-0x80, 0xF6, 0x74, 0xA1, 0x6C, 0xEA, 0x8C, 0xEA,
-0x12, 0x22, 0x30, 0xF0, 0x20, 0x6A, 0xC8, 0xF4,
-0x56, 0xA2, 0x00, 0x68, 0x02, 0x72, 0x07, 0x60,
-0x30, 0xF0, 0x21, 0x6A, 0x90, 0xF3, 0x57, 0xA2,
-0x02, 0x72, 0x01, 0x60, 0x01, 0x68, 0x00, 0x18,
-0x28, 0xF0, 0x04, 0x22, 0x03, 0x20, 0x04, 0x94,
-0x00, 0x18, 0xAC, 0xCA, 0x09, 0x97, 0x08, 0x91,
-0x07, 0x90, 0x05, 0x63, 0x00, 0xEF, 0x00, 0x65,
+0x04, 0xD0, 0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1,
+0x08, 0x4A, 0xFF, 0x68, 0x8C, 0xE8, 0x68, 0xF3,
+0x99, 0xA2, 0x03, 0x6B, 0x6B, 0xEB, 0x41, 0x6D,
+0x8C, 0xEB, 0xAB, 0xED, 0xAC, 0xEB, 0x68, 0xF3,
+0xBA, 0xA2, 0x68, 0xF3, 0x79, 0xC2, 0x11, 0x6B,
+0x00, 0x6C, 0x6B, 0xEB, 0x88, 0xF3, 0x85, 0xC2,
+0x68, 0xF3, 0x9D, 0xC2, 0xAC, 0xEB, 0x88, 0xF3,
+0x86, 0xC2, 0x90, 0x67, 0x68, 0xF3, 0x7A, 0xC2,
+0x00, 0x18, 0x1B, 0xEC, 0x90, 0x67, 0x00, 0x18,
+0x14, 0xEC, 0x90, 0x67, 0x00, 0x18, 0x30, 0xEC,
+0x05, 0x97, 0x04, 0x90, 0x03, 0x63, 0x00, 0xEF,
 0xFB, 0x63, 0x09, 0x62, 0x08, 0xD1, 0x07, 0xD0,
-0x30, 0xF0, 0x20, 0x68, 0xC0, 0xF1, 0x08, 0x48,
-0x68, 0xF3, 0x74, 0xA0, 0x00, 0x6A, 0xE8, 0xF3,
-0x42, 0xC0, 0x7F, 0x6A, 0xFF, 0x69, 0x6C, 0xEA,
-0x2C, 0xEC, 0x2C, 0xEA, 0x04, 0xD4, 0x47, 0x22,
-0x30, 0xF0, 0x20, 0x6B, 0x30, 0xF0, 0x20, 0x6A,
-0x6E, 0xF5, 0x58, 0x9A, 0xEF, 0xF6, 0x85, 0xA3,
-0x40, 0xEA, 0x01, 0x72, 0x3C, 0x61, 0x04, 0x94,
-0x00, 0x6D, 0x00, 0x18, 0xA3, 0xC8, 0x68, 0xF3,
-0x7A, 0xA0, 0xC8, 0xF3, 0x54, 0xD8, 0x20, 0x6A,
-0x6D, 0xEA, 0x68, 0xF3, 0x75, 0xA0, 0x68, 0xF3,
-0x5A, 0xC0, 0x0F, 0x6A, 0x6C, 0xEA, 0x2C, 0xEA,
-0x01, 0x69, 0x06, 0x22, 0x68, 0xF3, 0x3A, 0xA0,
-0x01, 0x6A, 0x32, 0x31, 0x4E, 0xE9, 0x4C, 0xE9,
+0xFF, 0x6A, 0x8C, 0xEA, 0x30, 0xF0, 0x20, 0x68,
+0x04, 0xD2, 0xC0, 0xF1, 0x08, 0x48, 0x68, 0xF3,
+0x74, 0xA0, 0x00, 0x6A, 0xE8, 0xF3, 0x42, 0xC0,
+0x7F, 0x6A, 0x6C, 0xEA, 0xFF, 0x6B, 0x6C, 0xEA,
+0x47, 0x22, 0x30, 0xF0, 0x20, 0x69, 0xEF, 0xF4,
+0x08, 0x49, 0x30, 0xF0, 0x20, 0x6A, 0x6E, 0xF5,
+0x58, 0x9A, 0xE0, 0xF1, 0x99, 0xA1, 0x40, 0xEA,
+0x01, 0x72, 0x78, 0x67, 0x05, 0xD3, 0x38, 0x2B,
+0x04, 0x94, 0x88, 0xF3, 0xA2, 0xA0, 0x00, 0x18,
+0xD9, 0xEC, 0x04, 0x94, 0x00, 0x6D, 0x00, 0x18,
+0xA2, 0xC8, 0x68, 0xF3, 0x7A, 0xA0, 0xC8, 0xF3,
+0x54, 0xD8, 0x20, 0x6A, 0x6D, 0xEA, 0x9D, 0x67,
+0x68, 0xF3, 0x5A, 0xC0, 0x47, 0x44, 0x0D, 0x4A,
+0x80, 0xA2, 0x08, 0xF3, 0x6A, 0xA0, 0x01, 0x6A,
+0x88, 0xF3, 0x83, 0xC0, 0x4C, 0xEB, 0xFF, 0x6C,
+0x8C, 0xEB, 0x05, 0x2B, 0x80, 0xF6, 0x70, 0xA1,
+0x6C, 0xEA, 0x8C, 0xEA, 0x12, 0x22, 0x30, 0xF0,
+0x20, 0x6A, 0xC8, 0xF4, 0x56, 0xA2, 0x00, 0x68,
+0x02, 0x72, 0x07, 0x60, 0x30, 0xF0, 0x21, 0x6A,
+0x90, 0xF3, 0x53, 0xA2, 0x02, 0x72, 0x01, 0x60,
+0x01, 0x68, 0x00, 0x18, 0xCA, 0xEF, 0x04, 0x22,
+0x03, 0x20, 0x04, 0x94, 0x00, 0x18, 0xC2, 0xCA,
+0x09, 0x97, 0x08, 0x91, 0x07, 0x90, 0x05, 0x63,
+0x00, 0xEF, 0x00, 0x65, 0xFB, 0x63, 0x09, 0x62,
+0x08, 0xD1, 0x07, 0xD0, 0x30, 0xF0, 0x20, 0x68,
+0xC0, 0xF1, 0x08, 0x48, 0x68, 0xF3, 0x74, 0xA0,
+0x00, 0x6A, 0xE8, 0xF3, 0x42, 0xC0, 0x7F, 0x6A,
+0xFF, 0x69, 0x6C, 0xEA, 0x2C, 0xEC, 0x2C, 0xEA,
+0x04, 0xD4, 0x47, 0x22, 0x30, 0xF0, 0x20, 0x6B,
+0x30, 0xF0, 0x20, 0x6A, 0x6E, 0xF5, 0x58, 0x9A,
+0xEF, 0xF6, 0x81, 0xA3, 0x40, 0xEA, 0x01, 0x72,
+0x3C, 0x61, 0x04, 0x94, 0x00, 0x6D, 0x00, 0x18,
+0xA2, 0xC8, 0x68, 0xF3, 0x7A, 0xA0, 0xC8, 0xF3,
+0x54, 0xD8, 0x20, 0x6A, 0x6D, 0xEA, 0x68, 0xF3,
+0x75, 0xA0, 0x68, 0xF3, 0x5A, 0xC0, 0x0F, 0x6A,
+0x6C, 0xEA, 0x2C, 0xEA, 0x01, 0x69, 0x06, 0x22,
+0x68, 0xF3, 0x3A, 0xA0, 0x01, 0x6A, 0x32, 0x31,
+0x4E, 0xE9, 0x4C, 0xE9, 0x30, 0xF0, 0x20, 0x6A,
+0xC8, 0xF4, 0x72, 0xA2, 0x01, 0x6A, 0x4C, 0xEB,
+0x08, 0x2B, 0x30, 0xF0, 0x21, 0x6B, 0x70, 0xF3,
+0x78, 0xA3, 0x6C, 0xEA, 0xFF, 0x6B, 0x6C, 0xEA,
+0x10, 0x22, 0x30, 0xF0, 0x20, 0x6A, 0xC8, 0xF4,
+0x56, 0xA2, 0x02, 0x72, 0x06, 0x60, 0x30, 0xF0,
+0x21, 0x6A, 0x90, 0xF3, 0x53, 0xA2, 0x02, 0x72,
+0x01, 0x61, 0x00, 0x69, 0x00, 0x18, 0xCA, 0xEF,
+0x04, 0x22, 0x03, 0x21, 0x04, 0x94, 0x00, 0x18,
+0xC2, 0xCA, 0x09, 0x97, 0x08, 0x91, 0x07, 0x90,
+0x05, 0x63, 0x00, 0xEF, 0xFD, 0x63, 0x05, 0x62,
+0x30, 0xF0, 0x20, 0x6B, 0xC0, 0xF1, 0x08, 0x4B,
+0x08, 0xF3, 0xAA, 0xA3, 0xC4, 0x67, 0x01, 0x6C,
+0xFF, 0x6A, 0x8C, 0xED, 0x4C, 0xED, 0x4C, 0xEE,
+0x07, 0x2D, 0x30, 0xF0, 0x21, 0x6D, 0x70, 0xF3,
+0xB8, 0xA5, 0xAC, 0xEC, 0x4C, 0xEC, 0x07, 0x24,
+0x30, 0xF0, 0x20, 0x6A, 0x48, 0xF5, 0x80, 0xA2,
+0x00, 0x18, 0xE1, 0xF0, 0x08, 0x10, 0x30, 0xF0,
+0x20, 0x6A, 0x2E, 0xF4, 0x48, 0x9A, 0x68, 0xF3,
+0x98, 0xA3, 0x01, 0x6D, 0x40, 0xEA, 0x05, 0x97,
+0x03, 0x63, 0x00, 0xEF, 0xFD, 0x63, 0x05, 0x62,
+0xF0, 0x6D, 0x01, 0x6C, 0x00, 0x18, 0xE4, 0xC8,
+0x00, 0x6C, 0x00, 0x18, 0xBC, 0xF5, 0x00, 0x18,
+0xDD, 0xE7, 0x00, 0x18, 0x14, 0xE8, 0x01, 0x6C,
+0x00, 0x18, 0xBC, 0xF5, 0x01, 0x6C, 0x00, 0x6D,
+0x00, 0x18, 0xE4, 0xC8, 0x05, 0x97, 0x03, 0x63,
+0x00, 0xEF, 0x00, 0x65, 0xFD, 0x63, 0x05, 0x62,
+0x30, 0xF0, 0x20, 0x6A, 0x48, 0xF5, 0x44, 0xA2,
+0x02, 0x22, 0x08, 0x72, 0x06, 0x61, 0x00, 0x18,
+0x79, 0xCA, 0x01, 0x72, 0x02, 0x61, 0x00, 0x18,
+0x95, 0xCC, 0x05, 0x97, 0x03, 0x63, 0x00, 0xEF,
+0xFD, 0x63, 0x05, 0x62, 0x30, 0xF0, 0x20, 0x6A,
+0xC0, 0xF1, 0x08, 0x4A, 0x68, 0xF3, 0xB9, 0xA2,
+0x01, 0x6B, 0xFF, 0x6C, 0x6C, 0xED, 0x21, 0x25,
+0x08, 0xF3, 0x4A, 0xA2, 0x6C, 0xEA, 0x8C, 0xEA,
+0x07, 0x2A, 0x30, 0xF0, 0x21, 0x6A, 0x70, 0xF3,
+0x58, 0xA2, 0x4C, 0xEB, 0x8C, 0xEB, 0x13, 0x23,
 0x30, 0xF0, 0x20, 0x6A, 0xC8, 0xF4, 0x72, 0xA2,
-0x01, 0x6A, 0x4C, 0xEB, 0x08, 0x2B, 0x30, 0xF0,
-0x21, 0x6B, 0x70, 0xF3, 0x7C, 0xA3, 0x6C, 0xEA,
-0xFF, 0x6B, 0x6C, 0xEA, 0x10, 0x22, 0x30, 0xF0,
-0x20, 0x6A, 0xC8, 0xF4, 0x56, 0xA2, 0x02, 0x72,
-0x06, 0x60, 0x30, 0xF0, 0x21, 0x6A, 0x90, 0xF3,
-0x57, 0xA2, 0x02, 0x72, 0x01, 0x61, 0x00, 0x69,
-0x00, 0x18, 0x28, 0xF0, 0x04, 0x22, 0x03, 0x21,
-0x04, 0x94, 0x00, 0x18, 0xAC, 0xCA, 0x09, 0x97,
-0x08, 0x91, 0x07, 0x90, 0x05, 0x63, 0x00, 0xEF,
-0xFD, 0x63, 0x05, 0x62, 0x30, 0xF0, 0x20, 0x6B,
-0xC0, 0xF1, 0x08, 0x4B, 0x08, 0xF3, 0xAA, 0xA3,
-0xC4, 0x67, 0x01, 0x6C, 0xFF, 0x6A, 0x8C, 0xED,
-0x4C, 0xED, 0x4C, 0xEE, 0x07, 0x2D, 0x30, 0xF0,
-0x21, 0x6D, 0x70, 0xF3, 0xBC, 0xA5, 0xAC, 0xEC,
-0x4C, 0xEC, 0x07, 0x24, 0x30, 0xF0, 0x20, 0x6A,
-0x48, 0xF5, 0x80, 0xA2, 0x00, 0x18, 0x3F, 0xF1,
-0x08, 0x10, 0x30, 0xF0, 0x20, 0x6A, 0x2E, 0xF4,
-0x48, 0x9A, 0x68, 0xF3, 0x98, 0xA3, 0x01, 0x6D,
-0x40, 0xEA, 0x05, 0x97, 0x03, 0x63, 0x00, 0xEF,
-0xFD, 0x63, 0x05, 0x62, 0xF0, 0x6D, 0x01, 0x6C,
-0x00, 0x18, 0xE5, 0xC8, 0x00, 0x6C, 0x00, 0x18,
-0x1A, 0xF6, 0x00, 0x18, 0x3B, 0xE8, 0x00, 0x18,
-0x72, 0xE8, 0x01, 0x6C, 0x00, 0x18, 0x1A, 0xF6,
-0x01, 0x6C, 0x00, 0x6D, 0x00, 0x18, 0xE5, 0xC8,
-0x05, 0x97, 0x03, 0x63, 0x00, 0xEF, 0x00, 0x65,
+0x02, 0x6A, 0x4C, 0xEB, 0x08, 0x2B, 0x30, 0xF0,
+0x21, 0x6B, 0x70, 0xF3, 0x78, 0xA3, 0x6C, 0xEA,
+0xFF, 0x6B, 0x6C, 0xEA, 0x04, 0x22, 0x00, 0x18,
+0xD1, 0xF0, 0x01, 0x72, 0x02, 0x61, 0x00, 0x18,
+0xA1, 0xCC, 0x05, 0x97, 0x03, 0x63, 0x00, 0xEF,
 0xFD, 0x63, 0x05, 0x62, 0x04, 0xD0, 0x30, 0xF0,
 0x20, 0x6A, 0x6E, 0xF2, 0x58, 0x9A, 0x00, 0x6D,
 0xC5, 0x67, 0xFF, 0x6C, 0x40, 0xEA, 0x04, 0x6D,
-0x01, 0x6C, 0x00, 0x18, 0xE5, 0xC8, 0x30, 0xF0,
-0x21, 0x6A, 0x70, 0xF3, 0x1E, 0xA2, 0x90, 0x67,
-0x00, 0x18, 0x0C, 0xF0, 0x40, 0x6B, 0x4D, 0xEB,
+0x01, 0x6C, 0x00, 0x18, 0xE4, 0xC8, 0x30, 0xF0,
+0x21, 0x6A, 0x70, 0xF3, 0x1A, 0xA2, 0x90, 0x67,
+0x00, 0x18, 0xAE, 0xEF, 0x40, 0x6B, 0x4D, 0xEB,
 0xFF, 0x6D, 0x90, 0x67, 0x6C, 0xED, 0x00, 0x18,
-0xFF, 0xEF, 0x04, 0x6C, 0x00, 0x18, 0xF0, 0xF1,
+0xA1, 0xEF, 0x04, 0x6C, 0x00, 0x18, 0x92, 0xF1,
 0x05, 0x97, 0x04, 0x90, 0x03, 0x63, 0x00, 0xEF,
 0xFD, 0x63, 0x05, 0x62, 0x04, 0xD0, 0x30, 0xF0,
 0x20, 0x6A, 0x6E, 0xF2, 0x58, 0x9A, 0x2E, 0x6E,
 0xFF, 0x6C, 0x6F, 0x6D, 0x40, 0xEA, 0x02, 0x6D,
-0x01, 0x6C, 0x00, 0x18, 0xE5, 0xC8, 0x30, 0xF0,
-0x21, 0x6A, 0x70, 0xF3, 0x1E, 0xA2, 0x90, 0x67,
-0x00, 0x18, 0x0C, 0xF0, 0xBF, 0x6D, 0x90, 0x67,
-0x4C, 0xED, 0x00, 0x18, 0xFF, 0xEF, 0x02, 0x6C,
-0x00, 0x18, 0xF0, 0xF1, 0x05, 0x97, 0x04, 0x90,
+0x01, 0x6C, 0x00, 0x18, 0xE4, 0xC8, 0x30, 0xF0,
+0x21, 0x6A, 0x70, 0xF3, 0x1A, 0xA2, 0x90, 0x67,
+0x00, 0x18, 0xAE, 0xEF, 0xBF, 0x6D, 0x90, 0x67,
+0x4C, 0xED, 0x00, 0x18, 0xA1, 0xEF, 0x02, 0x6C,
+0x00, 0x18, 0x92, 0xF1, 0x05, 0x97, 0x04, 0x90,
 0x03, 0x63, 0x00, 0xEF, 0xFB, 0x63, 0x09, 0x62,
 0x08, 0xD1, 0x07, 0xD0, 0x10, 0xF0, 0x24, 0x6B,
-0x5C, 0xF3, 0x6C, 0x9B, 0xFF, 0x6A, 0x24, 0x67,
+0x3B, 0xF7, 0x7C, 0x9B, 0xFF, 0x6A, 0x24, 0x67,
 0x60, 0xA3, 0x4C, 0xE9, 0x30, 0xF0, 0x20, 0x68,
 0x6C, 0xEA, 0x04, 0xD2, 0x6E, 0xF2, 0x58, 0x98,
 0xFF, 0x6C, 0xA4, 0x67, 0x2D, 0x6E, 0x40, 0xEA,
@@ -20105,41 +20100,41 @@ u8 array_mp_8821c_fw_nic[] = {
 0x40, 0xEA, 0x07, 0x2A, 0x6E, 0xF2, 0x58, 0x98,
 0x04, 0x95, 0xFF, 0x6C, 0x2D, 0x6E, 0x40, 0xEA,
 0x2F, 0x10, 0x05, 0x59, 0x24, 0x60, 0x10, 0xF0,
-0x24, 0x6A, 0x28, 0x31, 0x7B, 0xF5, 0x0C, 0x4A,
+0x24, 0x6A, 0x28, 0x31, 0x5B, 0xF1, 0x08, 0x4A,
 0x29, 0xE2, 0x40, 0x9A, 0x00, 0xEA, 0x00, 0x6C,
 0x08, 0x6D, 0x17, 0x10, 0x10, 0xF0, 0x24, 0x6A,
-0x04, 0x6C, 0x5C, 0xF3, 0xB0, 0x9A, 0x11, 0x10,
-0x10, 0xF0, 0x24, 0x6A, 0x04, 0x6C, 0x5C, 0xF3,
-0xB4, 0x9A, 0x0B, 0x10, 0x10, 0xF0, 0x24, 0x6A,
-0x04, 0x6C, 0x5C, 0xF3, 0xB8, 0x9A, 0x05, 0x10,
-0x10, 0xF0, 0x24, 0x6A, 0x5C, 0xF3, 0xBC, 0x9A,
-0x04, 0x6C, 0x00, 0x18, 0x17, 0xE1, 0x00, 0x18,
-0x42, 0xED, 0x01, 0x6C, 0x00, 0x6D, 0x00, 0x18,
-0xE5, 0xC8, 0x00, 0x6C, 0x00, 0x18, 0xF0, 0xF1,
+0x04, 0x6C, 0x5B, 0xF7, 0xA0, 0x9A, 0x11, 0x10,
+0x10, 0xF0, 0x24, 0x6A, 0x04, 0x6C, 0x5B, 0xF7,
+0xA4, 0x9A, 0x0B, 0x10, 0x10, 0xF0, 0x24, 0x6A,
+0x04, 0x6C, 0x5B, 0xF7, 0xA8, 0x9A, 0x05, 0x10,
+0x10, 0xF0, 0x24, 0x6A, 0x5B, 0xF7, 0xAC, 0x9A,
+0x04, 0x6C, 0x00, 0x18, 0xC1, 0xE0, 0x00, 0x18,
+0xE4, 0xEC, 0x01, 0x6C, 0x00, 0x6D, 0x00, 0x18,
+0xE4, 0xC8, 0x00, 0x6C, 0x00, 0x18, 0x92, 0xF1,
 0x09, 0x97, 0x08, 0x91, 0x07, 0x90, 0x05, 0x63,
 0x00, 0xEF, 0x00, 0x65, 0xFC, 0x63, 0x07, 0x62,
 0x06, 0xD1, 0x05, 0xD0, 0x30, 0xF0, 0x20, 0x68,
 0xC0, 0xF1, 0x08, 0x48, 0x68, 0xF3, 0x7A, 0xA0,
 0x08, 0x6A, 0xFF, 0x69, 0x6C, 0xEA, 0x2C, 0xEA,
 0x2C, 0xEC, 0x05, 0x2A, 0x01, 0x6C, 0x0C, 0x6D,
-0x00, 0x18, 0xE5, 0xC8, 0x43, 0x10, 0x01, 0x6D,
-0x00, 0x18, 0x50, 0xD1, 0x01, 0x6C, 0x04, 0x6D,
-0x00, 0x18, 0xE5, 0xC8, 0x08, 0xF3, 0x6A, 0xA0,
+0x00, 0x18, 0xE4, 0xC8, 0x43, 0x10, 0x01, 0x6D,
+0x00, 0x18, 0x3E, 0xD1, 0x01, 0x6C, 0x04, 0x6D,
+0x00, 0x18, 0xE4, 0xC8, 0x08, 0xF3, 0x6A, 0xA0,
 0x01, 0x6A, 0x4C, 0xEB, 0x2C, 0xEB, 0x07, 0x2B,
-0x30, 0xF0, 0x21, 0x6B, 0x70, 0xF3, 0x7C, 0xA3,
+0x30, 0xF0, 0x21, 0x6B, 0x70, 0xF3, 0x78, 0xA3,
 0x6C, 0xEA, 0x2C, 0xEA, 0x2C, 0x22, 0x30, 0xF0,
 0x20, 0x6A, 0xC8, 0xF4, 0x72, 0xA2, 0x04, 0x6A,
 0x4C, 0xEB, 0x08, 0x2B, 0x30, 0xF0, 0x21, 0x6B,
-0x70, 0xF3, 0x7C, 0xA3, 0x6C, 0xEA, 0xFF, 0x6B,
+0x70, 0xF3, 0x78, 0xA3, 0x6C, 0xEA, 0xFF, 0x6B,
 0x6C, 0xEA, 0x1D, 0x22, 0x30, 0xF0, 0x20, 0x68,
-0xEF, 0xF4, 0x08, 0x48, 0x80, 0xF6, 0x36, 0xA0,
-0x91, 0x67, 0x00, 0x18, 0x0C, 0xF0, 0x80, 0x6D,
+0xEF, 0xF4, 0x08, 0x48, 0x80, 0xF6, 0x32, 0xA0,
+0x91, 0x67, 0x00, 0x18, 0xAE, 0xEF, 0x80, 0x6D,
 0xAB, 0xED, 0x4D, 0xED, 0xFF, 0x6A, 0x4C, 0xED,
-0x91, 0x67, 0x00, 0x18, 0xFF, 0xEF, 0x80, 0xF6,
-0x16, 0xA0, 0x90, 0x67, 0x00, 0x18, 0x0C, 0xF0,
+0x91, 0x67, 0x00, 0x18, 0xA1, 0xEF, 0x80, 0xF6,
+0x12, 0xA0, 0x90, 0x67, 0x00, 0x18, 0xAE, 0xEF,
 0x20, 0x6D, 0x4D, 0xED, 0xFF, 0x6A, 0x90, 0x67,
-0x4C, 0xED, 0x00, 0x18, 0xFF, 0xEF, 0x04, 0x6C,
-0x00, 0x18, 0xF0, 0xF1, 0x30, 0xF0, 0x20, 0x6A,
+0x4C, 0xED, 0x00, 0x18, 0xA1, 0xEF, 0x04, 0x6C,
+0x00, 0x18, 0x92, 0xF1, 0x30, 0xF0, 0x20, 0x6A,
 0x6E, 0xF2, 0x58, 0x9A, 0x00, 0x6D, 0xFF, 0x6C,
 0xC5, 0x67, 0x40, 0xEA, 0x07, 0x97, 0x06, 0x91,
 0x05, 0x90, 0x04, 0x63, 0x00, 0xEF, 0x00, 0x65,
@@ -20147,42 +20142,42 @@ u8 array_mp_8821c_fw_nic[] = {
 0x30, 0xF0, 0x20, 0x6B, 0x48, 0xF5, 0xA2, 0xA3,
 0x04, 0x6B, 0xFF, 0x6A, 0xAC, 0xEB, 0x4C, 0xEB,
 0x4C, 0xEC, 0x08, 0x2B, 0x03, 0x6D, 0x00, 0x18,
-0x50, 0xD1, 0x01, 0x6C, 0x04, 0x6D, 0x00, 0x18,
-0xE5, 0xC8, 0x22, 0x10, 0x00, 0x6D, 0x30, 0xF0,
-0x20, 0x69, 0x00, 0x18, 0x50, 0xD1, 0xEF, 0xF4,
+0x3E, 0xD1, 0x01, 0x6C, 0x04, 0x6D, 0x00, 0x18,
+0xE4, 0xC8, 0x22, 0x10, 0x00, 0x6D, 0x30, 0xF0,
+0x20, 0x69, 0x00, 0x18, 0x3E, 0xD1, 0xEF, 0xF4,
 0x08, 0x49, 0x0C, 0x6D, 0x01, 0x6C, 0x00, 0x18,
-0xE5, 0xC8, 0x80, 0xF6, 0x16, 0xA1, 0x90, 0x67,
-0x00, 0x18, 0x0C, 0xF0, 0x7F, 0x6D, 0x90, 0x67,
-0x4C, 0xED, 0x00, 0x18, 0xFF, 0xEF, 0x80, 0xF6,
-0x16, 0xA1, 0x90, 0x67, 0x00, 0x18, 0x0C, 0xF0,
+0xE4, 0xC8, 0x80, 0xF6, 0x12, 0xA1, 0x90, 0x67,
+0x00, 0x18, 0xAE, 0xEF, 0x7F, 0x6D, 0x90, 0x67,
+0x4C, 0xED, 0x00, 0x18, 0xA1, 0xEF, 0x80, 0xF6,
+0x12, 0xA1, 0x90, 0x67, 0x00, 0x18, 0xAE, 0xEF,
 0xDF, 0x6D, 0x90, 0x67, 0x4C, 0xED, 0x00, 0x18,
-0xFF, 0xEF, 0x0C, 0x6C, 0x00, 0x18, 0xF0, 0xF1,
+0xA1, 0xEF, 0x0C, 0x6C, 0x00, 0x18, 0x92, 0xF1,
 0x30, 0xF0, 0x20, 0x6A, 0x6E, 0xF2, 0x58, 0x9A,
 0x00, 0x6D, 0xFF, 0x6C, 0xC5, 0x67, 0x40, 0xEA,
 0x07, 0x97, 0x06, 0x91, 0x05, 0x90, 0x04, 0x63,
 0x00, 0xEF, 0x00, 0x65, 0xFD, 0x63, 0x05, 0x62,
 0xFF, 0x6A, 0x4C, 0xEC, 0x00, 0x6D, 0x00, 0x18,
-0x50, 0xD1, 0x30, 0xF0, 0x20, 0x6A, 0x6E, 0xF2,
+0x3E, 0xD1, 0x30, 0xF0, 0x20, 0x6A, 0x6E, 0xF2,
 0x58, 0x9A, 0x00, 0x6D, 0xC5, 0x67, 0xFF, 0x6C,
 0x40, 0xEA, 0x01, 0x6C, 0x0C, 0x6D, 0x00, 0x18,
-0xE5, 0xC8, 0x05, 0x97, 0x03, 0x63, 0x00, 0xEF,
+0xE4, 0xC8, 0x05, 0x97, 0x03, 0x63, 0x00, 0xEF,
 0xFC, 0x63, 0x07, 0x62, 0x06, 0xD1, 0x05, 0xD0,
 0xFF, 0x69, 0x2C, 0xEC, 0xAC, 0xE9, 0x3B, 0x24,
 0x30, 0xF0, 0x20, 0x6B, 0x30, 0xF0, 0x20, 0x6A,
-0x6E, 0xF5, 0x58, 0x9A, 0xEF, 0xF6, 0x85, 0xA3,
+0x6E, 0xF5, 0x58, 0x9A, 0xEF, 0xF6, 0x81, 0xA3,
 0x40, 0xEA, 0x01, 0x72, 0x30, 0x61, 0x30, 0xF0,
 0x20, 0x68, 0xC0, 0xF1, 0x08, 0x48, 0x68, 0xF3,
 0x7A, 0xA0, 0x05, 0x6A, 0x4B, 0xEA, 0x6C, 0xEA,
 0x68, 0xF3, 0x5A, 0xC0, 0x30, 0xF0, 0x20, 0x6A,
 0x6E, 0xF2, 0x58, 0x9A, 0x2B, 0x6E, 0xFF, 0x6C,
 0x0F, 0x6D, 0x40, 0xEA, 0x91, 0x67, 0x02, 0x6D,
-0x00, 0x18, 0x50, 0xD1, 0x30, 0xF0, 0x20, 0x6A,
+0x00, 0x18, 0x3E, 0xD1, 0x30, 0xF0, 0x20, 0x6A,
 0x2E, 0xF4, 0x50, 0x9A, 0xC8, 0xF2, 0x9F, 0xA0,
 0x00, 0x6D, 0x08, 0x6E, 0xF1, 0x67, 0x40, 0xEA,
 0x01, 0x72, 0x0D, 0x61, 0x68, 0xF3, 0x7A, 0xA0,
 0x01, 0x6A, 0x01, 0x6C, 0x6D, 0xEA, 0x06, 0x6D,
-0x68, 0xF3, 0x5A, 0xC0, 0x00, 0x18, 0xE5, 0xC8,
-0x06, 0x6C, 0x00, 0x18, 0xF0, 0xF1, 0x07, 0x97,
+0x68, 0xF3, 0x5A, 0xC0, 0x00, 0x18, 0xE4, 0xC8,
+0x06, 0x6C, 0x00, 0x18, 0x92, 0xF1, 0x07, 0x97,
 0x06, 0x91, 0x05, 0x90, 0x04, 0x63, 0x00, 0xEF,
 0xFC, 0x63, 0x07, 0x62, 0x06, 0xD1, 0x05, 0xD0,
 0x25, 0x67, 0x30, 0xF0, 0x20, 0x6D, 0xC0, 0xF1,
@@ -20192,98 +20187,69 @@ u8 array_mp_8821c_fw_nic[] = {
 0x03, 0x2B, 0x68, 0xF3, 0x5C, 0xA5, 0x8E, 0xEA,
 0xC0, 0xF0, 0x1E, 0x22, 0x0D, 0x5C, 0xC0, 0xF0,
 0x1B, 0x60, 0x10, 0xF0, 0x24, 0x6A, 0x88, 0x34,
-0x9B, 0xF5, 0x00, 0x4A, 0x89, 0xE2, 0x40, 0x9A,
+0x5B, 0xF1, 0x1C, 0x4A, 0x89, 0xE2, 0x40, 0x9A,
 0x00, 0xEA, 0x30, 0xF0, 0x20, 0x6A, 0x48, 0xF5,
 0x44, 0xA2, 0x0E, 0x72, 0x03, 0x61, 0x90, 0x67,
-0x00, 0x18, 0xE9, 0xCC, 0x30, 0xF0, 0x20, 0x6A,
+0x00, 0x18, 0x11, 0xCD, 0x30, 0xF0, 0x20, 0x6A,
 0x48, 0xF5, 0x44, 0xA2, 0x03, 0x2A, 0x01, 0x6C,
-0x00, 0x18, 0x4D, 0xCB, 0x30, 0xF0, 0x20, 0x6A,
+0x00, 0x18, 0x65, 0xCB, 0x30, 0xF0, 0x20, 0x6A,
 0x48, 0xF5, 0x44, 0xA2, 0x06, 0x72, 0x03, 0x61,
-0x90, 0x67, 0x00, 0x18, 0x1C, 0xCD, 0x30, 0xF0,
+0x90, 0x67, 0x00, 0x18, 0x44, 0xCD, 0x30, 0xF0,
 0x20, 0x6A, 0x48, 0xF5, 0x44, 0xA2, 0x04, 0x72,
 0x09, 0x61, 0x05, 0x21, 0x91, 0x67, 0xB0, 0x67,
-0x00, 0x18, 0x4A, 0xCD, 0x03, 0x10, 0x90, 0x67,
-0x00, 0x18, 0x3F, 0xCD, 0x30, 0xF0, 0x20, 0x6A,
+0x00, 0x18, 0x72, 0xCD, 0x03, 0x10, 0x90, 0x67,
+0x00, 0x18, 0x67, 0xCD, 0x30, 0xF0, 0x20, 0x6A,
 0x48, 0xF5, 0x44, 0xA2, 0x08, 0x72, 0xA0, 0xF0,
-0x03, 0x61, 0x00, 0x18, 0x34, 0xCB, 0xA0, 0x10,
+0x03, 0x61, 0x00, 0x18, 0x4C, 0xCB, 0xA0, 0x10,
 0x30, 0xF0, 0x20, 0x6A, 0x48, 0xF5, 0x44, 0xA2,
-0x03, 0x2A, 0x01, 0x6C, 0x00, 0x18, 0x4D, 0xCB,
+0x03, 0x2A, 0x01, 0x6C, 0x00, 0x18, 0x65, 0xCB,
 0x30, 0xF0, 0x20, 0x6A, 0x48, 0xF5, 0x44, 0xA2,
 0x06, 0x72, 0x03, 0x61, 0x90, 0x67, 0x00, 0x18,
-0x1C, 0xCD, 0x30, 0xF0, 0x20, 0x6A, 0x48, 0xF5,
+0x44, 0xCD, 0x30, 0xF0, 0x20, 0x6A, 0x48, 0xF5,
 0x44, 0xA2, 0x0E, 0x72, 0x07, 0x61, 0x00, 0x18,
-0x2E, 0xC9, 0x01, 0x72, 0x03, 0x61, 0x90, 0x67,
-0x00, 0x18, 0xE9, 0xCC, 0x30, 0xF0, 0x20, 0x6A,
+0x2D, 0xC9, 0x01, 0x72, 0x03, 0x61, 0x90, 0x67,
+0x00, 0x18, 0x11, 0xCD, 0x30, 0xF0, 0x20, 0x6A,
 0x48, 0xF5, 0x44, 0xA2, 0x0C, 0x72, 0x7C, 0x61,
-0x00, 0x18, 0x2E, 0xC9, 0x01, 0x72, 0x78, 0x61,
-0x90, 0x67, 0x00, 0x18, 0x5B, 0xCB, 0x74, 0x10,
+0x00, 0x18, 0x2D, 0xC9, 0x01, 0x72, 0x78, 0x61,
+0x90, 0x67, 0x00, 0x18, 0x73, 0xCB, 0x74, 0x10,
 0x30, 0xF0, 0x20, 0x6A, 0x48, 0xF5, 0x44, 0xA2,
-0x0E, 0x72, 0x07, 0x61, 0x00, 0x18, 0x2E, 0xC9,
+0x0E, 0x72, 0x07, 0x61, 0x00, 0x18, 0x2D, 0xC9,
 0x01, 0x72, 0x03, 0x61, 0x90, 0x67, 0x00, 0x18,
-0xE9, 0xCC, 0x30, 0xF0, 0x20, 0x6A, 0x48, 0xF5,
+0x11, 0xCD, 0x30, 0xF0, 0x20, 0x6A, 0x48, 0xF5,
 0x44, 0xA2, 0x06, 0x72, 0x03, 0x61, 0x90, 0x67,
-0x00, 0x18, 0x1C, 0xCD, 0x30, 0xF0, 0x20, 0x6A,
+0x00, 0x18, 0x44, 0xCD, 0x30, 0xF0, 0x20, 0x6A,
 0x48, 0xF5, 0x44, 0xA2, 0x0C, 0x72, 0x07, 0x61,
-0x00, 0x18, 0x2E, 0xC9, 0x01, 0x72, 0x03, 0x61,
-0x90, 0x67, 0x00, 0x18, 0x5B, 0xCB, 0x30, 0xF0,
+0x00, 0x18, 0x2D, 0xC9, 0x01, 0x72, 0x03, 0x61,
+0x90, 0x67, 0x00, 0x18, 0x73, 0xCB, 0x30, 0xF0,
 0x20, 0x6A, 0x48, 0xF5, 0x44, 0xA2, 0x04, 0x72,
-0x4B, 0x61, 0x00, 0x18, 0x8C, 0xCA, 0x01, 0x72,
-0x47, 0x61, 0x90, 0x67, 0x00, 0x18, 0xBD, 0xCC,
+0x4B, 0x61, 0x00, 0x18, 0xA2, 0xCA, 0x01, 0x72,
+0x47, 0x61, 0x90, 0x67, 0x00, 0x18, 0xE5, 0xCC,
 0x43, 0x10, 0x30, 0xF0, 0x20, 0x6A, 0x48, 0xF5,
 0x44, 0xA2, 0x0E, 0x72, 0x07, 0x61, 0x00, 0x18,
-0x2E, 0xC9, 0x01, 0x72, 0x03, 0x61, 0x90, 0x67,
-0x00, 0x18, 0xE9, 0xCC, 0x30, 0xF0, 0x20, 0x6A,
+0x2D, 0xC9, 0x01, 0x72, 0x03, 0x61, 0x90, 0x67,
+0x00, 0x18, 0x11, 0xCD, 0x30, 0xF0, 0x20, 0x6A,
 0x48, 0xF5, 0x44, 0xA2, 0x06, 0x72, 0x03, 0x61,
-0x90, 0x67, 0x00, 0x18, 0x1C, 0xCD, 0x30, 0xF0,
+0x90, 0x67, 0x00, 0x18, 0x44, 0xCD, 0x30, 0xF0,
 0x20, 0x6A, 0x48, 0xF5, 0x44, 0xA2, 0x0C, 0x72,
-0x07, 0x61, 0x00, 0x18, 0x2E, 0xC9, 0x01, 0x72,
-0x03, 0x61, 0x90, 0x67, 0x00, 0x18, 0x5B, 0xCB,
+0x07, 0x61, 0x00, 0x18, 0x2D, 0xC9, 0x01, 0x72,
+0x03, 0x61, 0x90, 0x67, 0x00, 0x18, 0x73, 0xCB,
 0x30, 0xF0, 0x20, 0x6A, 0x48, 0xF5, 0x44, 0xA2,
-0x03, 0x2A, 0x01, 0x6C, 0x00, 0x18, 0x4D, 0xCB,
+0x03, 0x2A, 0x01, 0x6C, 0x00, 0x18, 0x65, 0xCB,
 0x30, 0xF0, 0x20, 0x6A, 0x48, 0xF5, 0x44, 0xA2,
-0x04, 0x72, 0x12, 0x61, 0x00, 0x18, 0xAC, 0xCC,
+0x04, 0x72, 0x12, 0x61, 0x00, 0x18, 0xD4, 0xCC,
 0x0F, 0x10, 0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1,
 0x08, 0x4A, 0x68, 0xF3, 0x7C, 0xA2, 0x0C, 0x73,
 0x07, 0x61, 0x68, 0xF3, 0x79, 0xA2, 0x20, 0x6A,
-0x6C, 0xEA, 0x02, 0x22, 0x00, 0x18, 0x7C, 0xCB,
+0x6C, 0xEA, 0x02, 0x22, 0x00, 0x18, 0x94, 0xCB,
 0x07, 0x97, 0x06, 0x91, 0x05, 0x90, 0x04, 0x63,
-0x00, 0xEF, 0x00, 0x65, 0xFD, 0x63, 0x05, 0x62,
-0x00, 0x18, 0x76, 0xCA, 0x14, 0x2A, 0x10, 0xF0,
-0x24, 0x6A, 0x7C, 0xF3, 0x40, 0x9A, 0x40, 0xA2,
-0x23, 0x2A, 0x10, 0xF0, 0x24, 0x6A, 0x7C, 0xF3,
-0x44, 0x9A, 0x40, 0xA2, 0x1D, 0x2A, 0x10, 0xF0,
-0x24, 0x6A, 0x7C, 0xF3, 0x48, 0x9A, 0x60, 0xA2,
-0x02, 0x6A, 0x6C, 0xEA, 0x15, 0x22, 0x00, 0x18,
-0x0C, 0xC9, 0x01, 0x72, 0x0C, 0x60, 0x10, 0xF0,
-0x24, 0x6A, 0x7C, 0xF3, 0x6C, 0x9A, 0x10, 0xF0,
-0x24, 0x6C, 0x7C, 0xF3, 0x90, 0x9C, 0x40, 0x9B,
-0x8D, 0xEA, 0x40, 0xDB, 0x05, 0x10, 0x00, 0x18,
-0xF2, 0xF6, 0x01, 0x5A, 0x58, 0x67, 0x01, 0x10,
-0x00, 0x6A, 0x05, 0x97, 0x03, 0x63, 0x00, 0xEF,
-0xFD, 0x63, 0x05, 0x62, 0x30, 0xF0, 0x20, 0x6A,
-0x48, 0xF5, 0x44, 0xA2, 0x02, 0x22, 0x08, 0x72,
-0x06, 0x61, 0x00, 0x18, 0xED, 0xCD, 0x01, 0x72,
-0x02, 0x61, 0x00, 0x18, 0x8E, 0xCC, 0x05, 0x97,
-0x03, 0x63, 0x00, 0xEF, 0xFD, 0x63, 0x05, 0x62,
-0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A,
-0x68, 0xF3, 0xB9, 0xA2, 0x01, 0x6B, 0xFF, 0x6C,
-0x6C, 0xED, 0x21, 0x25, 0x08, 0xF3, 0x4A, 0xA2,
-0x6C, 0xEA, 0x8C, 0xEA, 0x07, 0x2A, 0x30, 0xF0,
-0x21, 0x6A, 0x70, 0xF3, 0x5C, 0xA2, 0x4C, 0xEB,
-0x8C, 0xEB, 0x13, 0x23, 0x30, 0xF0, 0x20, 0x6A,
-0xC8, 0xF4, 0x72, 0xA2, 0x02, 0x6A, 0x4C, 0xEB,
-0x08, 0x2B, 0x30, 0xF0, 0x21, 0x6B, 0x70, 0xF3,
-0x7C, 0xA3, 0x6C, 0xEA, 0xFF, 0x6B, 0x6C, 0xEA,
-0x04, 0x22, 0x00, 0x18, 0x2F, 0xF1, 0x01, 0x72,
-0x02, 0x61, 0x00, 0x18, 0x06, 0xCE, 0x05, 0x97,
-0x03, 0x63, 0x00, 0xEF, 0xFC, 0x63, 0x07, 0x62,
+0x00, 0xEF, 0x00, 0x65, 0xFC, 0x63, 0x07, 0x62,
 0x06, 0xD1, 0x05, 0xD0, 0x30, 0xF0, 0x20, 0x6B,
 0x48, 0xF5, 0xA1, 0xA3, 0x04, 0x6B, 0xFF, 0x6A,
 0xAC, 0xEB, 0x4C, 0xEB, 0x4C, 0xEC, 0x06, 0x23,
-0x10, 0xF0, 0x24, 0x6A, 0x5C, 0xF3, 0x44, 0x9A,
+0x10, 0xF0, 0x24, 0x6A, 0x3B, 0xF7, 0x54, 0x9A,
 0x00, 0x6B, 0x60, 0xC2, 0x02, 0x6D, 0x00, 0x18,
-0x83, 0xE8, 0x10, 0xF0, 0x24, 0x6A, 0x5C, 0xF3,
-0x48, 0x9A, 0x04, 0x69, 0x30, 0xF0, 0x20, 0x68,
+0x25, 0xE8, 0x10, 0xF0, 0x24, 0x6A, 0x3B, 0xF7,
+0x58, 0x9A, 0x04, 0x69, 0x30, 0xF0, 0x20, 0x68,
 0x20, 0xDA, 0xC0, 0xF1, 0x08, 0x48, 0xE8, 0xF3,
 0xC6, 0xA0, 0x30, 0xF0, 0x20, 0x6A, 0xAE, 0xF2,
 0x50, 0x9A, 0xFF, 0x6C, 0x59, 0x4C, 0x00, 0x6D,
@@ -20300,7 +20266,7 @@ u8 array_mp_8821c_fw_nic[] = {
 0xD0, 0x67, 0x0C, 0x6C, 0x00, 0x6D, 0x40, 0xEA,
 0x30, 0xF0, 0x20, 0x6A, 0x6E, 0xF2, 0x58, 0x9A,
 0x00, 0x6D, 0xFF, 0x6C, 0xC5, 0x67, 0x40, 0xEA,
-0x90, 0x67, 0x00, 0x18, 0x27, 0xCE, 0x0D, 0x10,
+0x90, 0x67, 0x00, 0x18, 0x15, 0xCE, 0x0D, 0x10,
 0x02, 0x74, 0x0B, 0x61, 0x68, 0xF3, 0x5C, 0xA3,
 0x08, 0x2A, 0x30, 0xF0, 0x20, 0x6A, 0x2E, 0xF4,
 0x48, 0x9A, 0x04, 0x6C, 0x01, 0x6D, 0xD0, 0x67,
@@ -20308,12 +20274,12 @@ u8 array_mp_8821c_fw_nic[] = {
 0x00, 0xEF, 0x00, 0x65, 0xFD, 0x63, 0x05, 0x62,
 0x30, 0xF0, 0x20, 0x6B, 0x69, 0xF2, 0xB0, 0xA3,
 0x01, 0x6B, 0xFF, 0x6A, 0xAC, 0xEB, 0x4C, 0xEB,
-0x4C, 0xEC, 0x02, 0x2B, 0x00, 0x18, 0x42, 0xCE,
+0x4C, 0xEC, 0x02, 0x2B, 0x00, 0x18, 0x30, 0xCE,
 0x05, 0x97, 0x03, 0x63, 0x00, 0xEF, 0x00, 0x65,
 0xFC, 0x63, 0x07, 0x62, 0x06, 0xD1, 0x05, 0xD0,
 0xFF, 0x69, 0x8C, 0xE9, 0x30, 0xF0, 0x20, 0x68,
 0x91, 0x67, 0xC0, 0xF1, 0x08, 0x48, 0x00, 0x18,
-0x27, 0xCE, 0x68, 0xF3, 0x5C, 0xA0, 0x0C, 0x72,
+0x15, 0xCE, 0x68, 0xF3, 0x5C, 0xA0, 0x0C, 0x72,
 0x20, 0x60, 0x30, 0xF0, 0x20, 0x6A, 0x2E, 0xF4,
 0x48, 0x9A, 0x0C, 0x6C, 0x00, 0x6D, 0xD1, 0x67,
 0x40, 0xEA, 0x30, 0xF0, 0x20, 0x6A, 0x6E, 0xF2,
@@ -20329,15 +20295,15 @@ u8 array_mp_8821c_fw_nic[] = {
 0xB9, 0xA4, 0x40, 0x6B, 0xFF, 0x6A, 0xAC, 0xEB,
 0x4C, 0xEB, 0x4C, 0xE8, 0x0C, 0x23, 0x68, 0xF3,
 0x9A, 0xA4, 0x10, 0x6B, 0x8C, 0xEB, 0x4C, 0xEB,
-0x06, 0x23, 0x00, 0x18, 0x7A, 0xCA, 0x03, 0x2A,
-0x90, 0x67, 0x00, 0x18, 0x98, 0xEC, 0x30, 0xF0,
+0x06, 0x23, 0x00, 0x18, 0x90, 0xCA, 0x03, 0x2A,
+0x90, 0x67, 0x00, 0x18, 0x3A, 0xEC, 0x30, 0xF0,
 0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A, 0x68, 0xF3,
 0x99, 0xA2, 0x02, 0x6B, 0x8C, 0xEB, 0x10, 0x23,
 0x03, 0x6B, 0x6B, 0xEB, 0x6C, 0xEC, 0x68, 0xF3,
 0x99, 0xC2, 0x68, 0xF3, 0x9D, 0xA2, 0x8C, 0xEB,
 0x68, 0xF3, 0x7D, 0xC2, 0x68, 0xF3, 0x5D, 0xA2,
 0x07, 0x6B, 0x6C, 0xEA, 0x6A, 0x2A, 0x66, 0x10,
-0x10, 0xF0, 0x24, 0x6B, 0x7C, 0xF3, 0x98, 0x9B,
+0x10, 0xF0, 0x24, 0x6B, 0x5B, 0xF7, 0x94, 0x9B,
 0xFF, 0xF7, 0x1F, 0x6D, 0x60, 0xAC, 0xAC, 0xEB,
 0x01, 0x4B, 0xAC, 0xEB, 0x60, 0xCC, 0x88, 0xF3,
 0x65, 0xA2, 0x68, 0xF3, 0x9D, 0xA2, 0x01, 0x4B,
@@ -20346,10 +20312,10 @@ u8 array_mp_8821c_fw_nic[] = {
 0x65, 0xA2, 0xE8, 0xF3, 0x44, 0xA2, 0x63, 0xEA,
 0x49, 0x60, 0x30, 0xF0, 0x20, 0x69, 0x71, 0x67,
 0xEF, 0xF4, 0x08, 0x4B, 0x30, 0xF0, 0x20, 0x6A,
-0x6E, 0xF5, 0x58, 0x9A, 0xE0, 0xF1, 0x9D, 0xA3,
+0x6E, 0xF5, 0x58, 0x9A, 0xE0, 0xF1, 0x99, 0xA3,
 0x40, 0xEA, 0x01, 0x72, 0x3E, 0x61, 0xEF, 0xF4,
 0x68, 0xA1, 0x01, 0x6A, 0x6C, 0xEA, 0xFF, 0x6B,
-0x6C, 0xEA, 0x02, 0x2A, 0x00, 0x18, 0x95, 0xC9,
+0x6C, 0xEA, 0x02, 0x2A, 0x00, 0x18, 0x94, 0xC9,
 0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A,
 0x68, 0xF3, 0x95, 0xA2, 0x10, 0x6B, 0x6B, 0xEB,
 0x8C, 0xEB, 0xFF, 0x6C, 0x8C, 0xEB, 0x07, 0x2B,
@@ -20360,28 +20326,28 @@ u8 array_mp_8821c_fw_nic[] = {
 0x68, 0xF3, 0x99, 0xA2, 0x21, 0x6B, 0x6B, 0xEB,
 0x8C, 0xEB, 0x68, 0xF3, 0x79, 0xC2, 0x00, 0x6B,
 0x88, 0xF3, 0x66, 0xC2, 0x03, 0x10, 0x90, 0x67,
-0x00, 0x18, 0x6A, 0xCE, 0x30, 0xF0, 0x20, 0x6A,
+0x00, 0x18, 0x58, 0xCE, 0x30, 0xF0, 0x20, 0x6A,
 0xC0, 0xF1, 0x08, 0x4A, 0x00, 0x6B, 0x88, 0xF3,
 0x65, 0xC2, 0x03, 0x10, 0x90, 0x67, 0x00, 0x18,
-0x7A, 0xCC, 0x07, 0x97, 0x06, 0x91, 0x05, 0x90,
+0x81, 0xCC, 0x07, 0x97, 0x06, 0x91, 0x05, 0x90,
 0x04, 0x63, 0x00, 0xEF, 0xFC, 0x63, 0x07, 0x62,
 0x06, 0xD1, 0x05, 0xD0, 0xFF, 0x6A, 0x8C, 0xEA,
 0x05, 0x5A, 0x00, 0x68, 0x24, 0x60, 0x10, 0xF0,
-0x24, 0x6B, 0x48, 0x34, 0xBB, 0xF5, 0x14, 0x4B,
+0x24, 0x6B, 0x48, 0x34, 0x9B, 0xF1, 0x10, 0x4B,
 0x8D, 0xE3, 0x60, 0x9B, 0x00, 0xEB, 0x10, 0xF0,
-0x24, 0x6B, 0x7C, 0xF3, 0x7C, 0x9B, 0x13, 0x10,
-0x10, 0xF0, 0x24, 0x6B, 0x9C, 0xF3, 0x60, 0x9B,
-0x0E, 0x10, 0x10, 0xF0, 0x24, 0x6B, 0x9C, 0xF3,
-0x64, 0x9B, 0x09, 0x10, 0x10, 0xF0, 0x24, 0x6B,
-0x9C, 0xF3, 0x68, 0x9B, 0x04, 0x10, 0x10, 0xF0,
-0x24, 0x6B, 0x9C, 0xF3, 0x6C, 0x9B, 0x60, 0xAB,
+0x24, 0x6B, 0x5B, 0xF7, 0x78, 0x9B, 0x13, 0x10,
+0x10, 0xF0, 0x24, 0x6B, 0x5B, 0xF7, 0x7C, 0x9B,
+0x0E, 0x10, 0x10, 0xF0, 0x24, 0x6B, 0x7B, 0xF7,
+0x60, 0x9B, 0x09, 0x10, 0x10, 0xF0, 0x24, 0x6B,
+0x7B, 0xF7, 0x64, 0x9B, 0x04, 0x10, 0x10, 0xF0,
+0x24, 0x6B, 0x7B, 0xF7, 0x68, 0x9B, 0x60, 0xAB,
 0xFF, 0xF7, 0x1F, 0x68, 0x6C, 0xE8, 0x18, 0xF0,
 0x00, 0x6B, 0x0C, 0xEB, 0x13, 0x2B, 0x30, 0xF0,
 0x20, 0x6C, 0xC0, 0xF1, 0x08, 0x4C, 0x68, 0xF3,
 0xBD, 0xA4, 0xFE, 0x4B, 0xAC, 0xEB, 0x05, 0x6D,
 0xAB, 0xED, 0xAC, 0xEB, 0x02, 0x4D, 0xAC, 0xEB,
 0x68, 0xF3, 0x7D, 0xC4, 0x82, 0x67, 0x00, 0x18,
-0x7A, 0xCC, 0x7D, 0x10, 0x08, 0xF0, 0x00, 0x6B,
+0x81, 0xCC, 0x7D, 0x10, 0x08, 0xF0, 0x00, 0x6B,
 0x0C, 0xEB, 0x43, 0x23, 0x30, 0xF0, 0x20, 0x6B,
 0xC0, 0xF1, 0x08, 0x4B, 0x68, 0xF3, 0xD4, 0xA3,
 0x7F, 0x6C, 0xFF, 0x6D, 0xCC, 0xEC, 0x01, 0x74,
@@ -20389,7 +20355,7 @@ u8 array_mp_8821c_fw_nic[] = {
 0xCD, 0xEC, 0x68, 0xF3, 0x9D, 0xC3, 0x68, 0xF3,
 0x95, 0xA3, 0x10, 0x6B, 0x6B, 0xEB, 0x8C, 0xEB,
 0xAC, 0xEB, 0x20, 0x73, 0x11, 0x61, 0x82, 0x67,
-0x00, 0x18, 0x6A, 0xCE, 0x34, 0x10, 0x02, 0x74,
+0x00, 0x18, 0x58, 0xCE, 0x34, 0x10, 0x02, 0x74,
 0x32, 0x61, 0x68, 0xF3, 0x57, 0xA3, 0x01, 0x6C,
 0x8C, 0xEA, 0xAC, 0xEA, 0x0B, 0x2A, 0x68, 0xF3,
 0x5D, 0xA3, 0x4D, 0xEC, 0x68, 0xF3, 0x9D, 0xC3,
@@ -20398,7 +20364,7 @@ u8 array_mp_8821c_fw_nic[] = {
 0x10, 0x6A, 0x4B, 0xEA, 0x8C, 0xEA, 0xAC, 0xEA,
 0x10, 0x72, 0x19, 0x61, 0x68, 0xF3, 0x9D, 0xA3,
 0x04, 0x6A, 0x00, 0x6D, 0x8D, 0xEA, 0x68, 0xF3,
-0x5D, 0xC3, 0x01, 0x6C, 0x00, 0x18, 0x42, 0xD2,
+0x5D, 0xC3, 0x01, 0x6C, 0x00, 0x18, 0x30, 0xD2,
 0x0E, 0x10, 0x30, 0xF0, 0x20, 0x6B, 0xC0, 0xF1,
 0x08, 0x4B, 0x68, 0xF3, 0x9D, 0xA3, 0x02, 0x6A,
 0x4B, 0xEA, 0x8C, 0xEA, 0x05, 0x6C, 0x8B, 0xEC,
@@ -20417,56 +20383,56 @@ u8 array_mp_8821c_fw_nic[] = {
 0xFB, 0x63, 0x09, 0x62, 0x08, 0xD1, 0x07, 0xD0,
 0x30, 0xF0, 0x20, 0x6B, 0x30, 0xF0, 0x20, 0x6A,
 0x24, 0x67, 0x6E, 0xF5, 0x58, 0x9A, 0xEF, 0xF6,
-0x85, 0xA3, 0xFF, 0x68, 0x0C, 0xE9, 0x40, 0xEA,
+0x81, 0xA3, 0xFF, 0x68, 0x0C, 0xE9, 0x40, 0xEA,
 0x01, 0x72, 0x20, 0xF1, 0x0C, 0x61, 0x30, 0xF0,
 0x20, 0x6B, 0xC0, 0xF1, 0x08, 0x4B, 0x68, 0xF3,
 0x94, 0xA3, 0x7F, 0x6A, 0x8C, 0xEA, 0x0C, 0xEA,
 0x20, 0xF1, 0x01, 0x22, 0x68, 0xF3, 0x75, 0xA3,
 0x0F, 0x6A, 0x6C, 0xEA, 0x01, 0x72, 0x69, 0x61,
 0x05, 0x59, 0x5A, 0x60, 0x10, 0xF0, 0x24, 0x6A,
-0x28, 0x33, 0xDB, 0xF5, 0x08, 0x4A, 0x69, 0xE2,
+0x28, 0x33, 0xBB, 0xF1, 0x04, 0x4A, 0x69, 0xE2,
 0x40, 0x9A, 0x00, 0xEA, 0x10, 0xF0, 0x24, 0x6A,
-0x9C, 0xF3, 0x50, 0x9A, 0x60, 0xA2, 0x30, 0xF0,
+0x7B, 0xF7, 0x4C, 0x9A, 0x60, 0xA2, 0x30, 0xF0,
 0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A, 0x88, 0xF3,
-0x63, 0xC2, 0x10, 0xF0, 0x24, 0x6B, 0x9C, 0xF3,
-0x74, 0x9B, 0x3F, 0x10, 0x10, 0xF0, 0x24, 0x6A,
-0x9C, 0xF3, 0x58, 0x9A, 0x60, 0xA2, 0x30, 0xF0,
+0x63, 0xC2, 0x10, 0xF0, 0x24, 0x6B, 0x7B, 0xF7,
+0x70, 0x9B, 0x3F, 0x10, 0x10, 0xF0, 0x24, 0x6A,
+0x7B, 0xF7, 0x54, 0x9A, 0x60, 0xA2, 0x30, 0xF0,
 0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A, 0x88, 0xF3,
-0x63, 0xC2, 0x10, 0xF0, 0x24, 0x6B, 0x9C, 0xF3,
-0x7C, 0x9B, 0x2F, 0x10, 0x10, 0xF0, 0x24, 0x6A,
-0xBC, 0xF3, 0x40, 0x9A, 0x60, 0xA2, 0x30, 0xF0,
+0x63, 0xC2, 0x10, 0xF0, 0x24, 0x6B, 0x7B, 0xF7,
+0x78, 0x9B, 0x2F, 0x10, 0x10, 0xF0, 0x24, 0x6A,
+0x7B, 0xF7, 0x5C, 0x9A, 0x60, 0xA2, 0x30, 0xF0,
 0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A, 0x88, 0xF3,
-0x63, 0xC2, 0x10, 0xF0, 0x24, 0x6B, 0xBC, 0xF3,
-0x64, 0x9B, 0x1F, 0x10, 0x10, 0xF0, 0x24, 0x6A,
-0xBC, 0xF3, 0x48, 0x9A, 0x60, 0xA2, 0x30, 0xF0,
+0x63, 0xC2, 0x10, 0xF0, 0x24, 0x6B, 0x9B, 0xF7,
+0x60, 0x9B, 0x1F, 0x10, 0x10, 0xF0, 0x24, 0x6A,
+0x9B, 0xF7, 0x44, 0x9A, 0x60, 0xA2, 0x30, 0xF0,
 0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A, 0x88, 0xF3,
-0x63, 0xC2, 0x10, 0xF0, 0x24, 0x6B, 0xBC, 0xF3,
-0x6C, 0x9B, 0x0F, 0x10, 0x10, 0xF0, 0x24, 0x6A,
-0xBC, 0xF3, 0x50, 0x9A, 0x60, 0xA2, 0x30, 0xF0,
+0x63, 0xC2, 0x10, 0xF0, 0x24, 0x6B, 0x9B, 0xF7,
+0x68, 0x9B, 0x0F, 0x10, 0x10, 0xF0, 0x24, 0x6A,
+0x9B, 0xF7, 0x4C, 0x9A, 0x60, 0xA2, 0x30, 0xF0,
 0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A, 0x88, 0xF3,
-0x63, 0xC2, 0x10, 0xF0, 0x24, 0x6B, 0xBC, 0xF3,
-0x74, 0x9B, 0x60, 0xA3, 0x88, 0xF3, 0x62, 0xC2,
+0x63, 0xC2, 0x10, 0xF0, 0x24, 0x6B, 0x9B, 0xF7,
+0x70, 0x9B, 0x60, 0xA3, 0x88, 0xF3, 0x62, 0xC2,
 0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A,
 0x88, 0xF3, 0x63, 0xA2, 0x02, 0x2B, 0x88, 0xF3,
 0x62, 0xA2, 0x30, 0xF0, 0x20, 0x6A, 0x48, 0xF5,
-0x6B, 0xC2, 0x91, 0x67, 0x00, 0x18, 0xBF, 0xC9,
-0x10, 0xF0, 0x24, 0x6C, 0xBC, 0xF3, 0xB8, 0x9C,
+0x6B, 0xC2, 0x91, 0x67, 0x00, 0x18, 0xBE, 0xC9,
+0x10, 0xF0, 0x24, 0x6C, 0x9B, 0xF7, 0xB4, 0x9C,
 0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A,
 0x00, 0x6B, 0x88, 0xF3, 0x65, 0xC2, 0x88, 0xF3,
 0x66, 0xC2, 0x80, 0xAD, 0xFF, 0xF7, 0x1F, 0x6E,
 0xCC, 0xEC, 0x01, 0x4C, 0xCC, 0xEC, 0x80, 0xCD,
 0x10, 0xF0, 0x24, 0x6C, 0x88, 0xF3, 0xAA, 0xA2,
-0x3C, 0xF3, 0x98, 0x9C, 0xA0, 0xC4, 0x10, 0xF0,
-0x24, 0x6C, 0xBC, 0xF3, 0x9C, 0x9C, 0x60, 0xC4,
-0x10, 0xF0, 0x24, 0x6B, 0x5C, 0xF3, 0x68, 0x9B,
+0x1B, 0xF7, 0x94, 0x9C, 0xA0, 0xC4, 0x10, 0xF0,
+0x24, 0x6C, 0x9B, 0xF7, 0x98, 0x9C, 0x60, 0xC4,
+0x10, 0xF0, 0x24, 0x6B, 0x3B, 0xF7, 0x78, 0x9B,
 0x02, 0x6C, 0x80, 0xC3, 0x68, 0xF3, 0x9D, 0xA2,
 0x03, 0x6B, 0x6B, 0xEB, 0x8C, 0xEB, 0x11, 0x6C,
 0x8B, 0xEC, 0x8C, 0xEB, 0x68, 0xF3, 0x7D, 0xC2,
 0x08, 0xF3, 0x6A, 0xA2, 0x01, 0x6A, 0x4C, 0xEB,
 0x08, 0x2B, 0x30, 0xF0, 0x21, 0x6B, 0x70, 0xF3,
-0x7C, 0xA3, 0x6C, 0xEA, 0xFF, 0x6B, 0x6C, 0xEA,
+0x78, 0xA3, 0x6C, 0xEA, 0xFF, 0x6B, 0x6C, 0xEA,
 0x04, 0x22, 0x91, 0x67, 0x00, 0x18, 0x06, 0xC5,
-0x03, 0x10, 0x91, 0x67, 0x00, 0x18, 0xD7, 0xCE,
+0x03, 0x10, 0x91, 0x67, 0x00, 0x18, 0xC5, 0xCE,
 0x30, 0xF0, 0x20, 0x68, 0xC0, 0xF1, 0x08, 0x48,
 0x68, 0xF3, 0x79, 0xA0, 0x40, 0x6A, 0x6C, 0xEA,
 0x55, 0x22, 0x68, 0xF3, 0x9A, 0xA0, 0x10, 0x6B,
@@ -20474,29 +20440,29 @@ u8 array_mp_8821c_fw_nic[] = {
 0x22, 0x2A, 0x88, 0xF3, 0x43, 0xA0, 0x88, 0xF3,
 0xA2, 0xA0, 0xAE, 0xEA, 0x47, 0x2A, 0x8D, 0xEB,
 0x68, 0xF3, 0x7A, 0xC0, 0x91, 0x67, 0x00, 0x18,
-0x37, 0xED, 0x91, 0x67, 0x00, 0x18, 0x68, 0xEC,
-0x00, 0x18, 0x7A, 0xCA, 0x06, 0x2A, 0x91, 0x67,
-0x00, 0x18, 0x9F, 0xEC, 0x91, 0x67, 0x00, 0x18,
-0x98, 0xEC, 0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1,
+0xD9, 0xEC, 0x91, 0x67, 0x00, 0x18, 0x0A, 0xEC,
+0x00, 0x18, 0x90, 0xCA, 0x06, 0x2A, 0x91, 0x67,
+0x00, 0x18, 0x41, 0xEC, 0x91, 0x67, 0x00, 0x18,
+0x3A, 0xEC, 0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1,
 0x08, 0x4A, 0x88, 0xF3, 0x63, 0xA2, 0xFF, 0x4B,
 0x88, 0xF3, 0x63, 0xC2, 0x2B, 0x10, 0x68, 0xF3,
 0x75, 0xA0, 0x0F, 0x6A, 0x6C, 0xEA, 0x01, 0x72,
 0x25, 0x61, 0x88, 0xF3, 0x43, 0xA0, 0x04, 0xD2,
 0x04, 0x93, 0x88, 0xF3, 0x42, 0xA0, 0x6E, 0xEA,
-0x1D, 0x22, 0x91, 0x67, 0x00, 0x18, 0x2C, 0xED,
+0x1D, 0x22, 0x91, 0x67, 0x00, 0x18, 0xCE, 0xEC,
 0x04, 0x95, 0xAE, 0xEA, 0x17, 0x22, 0x68, 0xF3,
 0x79, 0xA0, 0x20, 0x6A, 0x6C, 0xEA, 0xFF, 0x6B,
 0x6C, 0xEA, 0x10, 0x22, 0x68, 0xF3, 0x7A, 0xA0,
 0x11, 0x6A, 0x4B, 0xEA, 0x6C, 0xEA, 0x68, 0xF3,
-0x5A, 0xC0, 0x91, 0x67, 0x00, 0x18, 0x8E, 0xEC,
-0x91, 0x67, 0x00, 0x18, 0x79, 0xEC, 0x91, 0x67,
-0x00, 0x18, 0x72, 0xEC, 0x30, 0xF0, 0x20, 0x6A,
+0x5A, 0xC0, 0x91, 0x67, 0x00, 0x18, 0x30, 0xEC,
+0x91, 0x67, 0x00, 0x18, 0x1B, 0xEC, 0x91, 0x67,
+0x00, 0x18, 0x14, 0xEC, 0x30, 0xF0, 0x20, 0x6A,
 0xC0, 0xF1, 0x08, 0x4A, 0x68, 0xF3, 0x99, 0xA2,
 0x01, 0x6B, 0xE8, 0xF3, 0x62, 0xC2, 0x20, 0x6B,
 0x8D, 0xEB, 0x68, 0xF3, 0x79, 0xC2, 0x30, 0xF0,
 0x20, 0x6A, 0xC8, 0xF4, 0x72, 0xA2, 0x02, 0x6A,
 0x4C, 0xEB, 0x08, 0x23, 0x30, 0xF0, 0x21, 0x6B,
-0x70, 0xF3, 0x7C, 0xA3, 0x6C, 0xEA, 0xFF, 0x6B,
+0x70, 0xF3, 0x78, 0xA3, 0x6C, 0xEA, 0xFF, 0x6B,
 0x6C, 0xEA, 0x0A, 0x2A, 0x30, 0xF0, 0x20, 0x6A,
 0xC0, 0xF1, 0x08, 0x4A, 0x68, 0xF3, 0x99, 0xA2,
 0x20, 0x6B, 0x8D, 0xEB, 0x68, 0xF3, 0x79, 0xC2,
@@ -20505,85 +20471,85 @@ u8 array_mp_8821c_fw_nic[] = {
 0xFF, 0x6A, 0x4C, 0xED, 0x4C, 0xEC, 0xCC, 0xEA,
 0xA0, 0xF0, 0x1D, 0x25, 0x05, 0x5C, 0xA0, 0xF0,
 0x10, 0x60, 0x10, 0xF0, 0x24, 0x6B, 0x88, 0x34,
-0xDB, 0xF5, 0x1C, 0x4B, 0x8D, 0xE3, 0x60, 0x9B,
+0xBB, 0xF1, 0x18, 0x4B, 0x8D, 0xE3, 0x60, 0x9B,
 0x00, 0xEB, 0x02, 0x72, 0x0A, 0x60, 0x10, 0xF0,
-0x24, 0x6A, 0xDC, 0xF3, 0xA0, 0x9A, 0x01, 0x6C,
-0x00, 0x18, 0x17, 0xE1, 0x00, 0x6C, 0x08, 0x6D,
-0x1D, 0x10, 0x10, 0xF0, 0x24, 0x6A, 0xDC, 0xF3,
-0xA4, 0x9A, 0x01, 0x6C, 0x00, 0x18, 0x17, 0xE1,
-0x00, 0x6C, 0x08, 0x6D, 0x00, 0x18, 0x17, 0xE1,
+0x24, 0x6A, 0x9B, 0xF7, 0xBC, 0x9A, 0x01, 0x6C,
+0x00, 0x18, 0xC1, 0xE0, 0x00, 0x6C, 0x08, 0x6D,
+0x1D, 0x10, 0x10, 0xF0, 0x24, 0x6A, 0xBB, 0xF7,
+0xA0, 0x9A, 0x01, 0x6C, 0x00, 0x18, 0xC1, 0xE0,
+0x00, 0x6C, 0x08, 0x6D, 0x00, 0x18, 0xC1, 0xE0,
 0x30, 0xF0, 0x20, 0x6A, 0x4E, 0xF2, 0x54, 0x9A,
 0x01, 0x6C, 0x0C, 0x6D, 0x89, 0x10, 0x02, 0x72,
 0x0C, 0x60, 0x04, 0x6C, 0x0F, 0x6D, 0x00, 0x18,
-0x17, 0xE1, 0x10, 0xF0, 0x24, 0x6A, 0x5C, 0xF3,
-0xB0, 0x9A, 0x04, 0x6C, 0x00, 0x18, 0x17, 0xE1,
+0xC1, 0xE0, 0x10, 0xF0, 0x24, 0x6A, 0x5B, 0xF7,
+0xA0, 0x9A, 0x04, 0x6C, 0x00, 0x18, 0xC1, 0xE0,
 0x7C, 0x10, 0x04, 0x6C, 0x03, 0x6D, 0x00, 0x18,
-0x17, 0xE1, 0x10, 0xF0, 0x24, 0x6A, 0x5C, 0xF3,
-0xB0, 0x9A, 0x04, 0x6C, 0x00, 0x18, 0x17, 0xE1,
+0xC1, 0xE0, 0x10, 0xF0, 0x24, 0x6A, 0x5B, 0xF7,
+0xA0, 0x9A, 0x04, 0x6C, 0x00, 0x18, 0xC1, 0xE0,
 0x30, 0xF0, 0x20, 0x6A, 0x10, 0xF0, 0x24, 0x6B,
-0x4E, 0xF2, 0x54, 0x9A, 0x02, 0x6C, 0xDC, 0xF3,
-0xA8, 0x9B, 0x66, 0x10, 0x02, 0x72, 0x0A, 0x60,
-0x04, 0x6C, 0xF0, 0x6D, 0x00, 0x18, 0x17, 0xE1,
-0x10, 0xF0, 0x24, 0x6A, 0x04, 0x6C, 0x5C, 0xF3,
-0xB4, 0x9A, 0xDC, 0x17, 0x04, 0x6C, 0x30, 0x6D,
-0x00, 0x18, 0x17, 0xE1, 0x10, 0xF0, 0x24, 0x6A,
-0x5C, 0xF3, 0xB4, 0x9A, 0x04, 0x6C, 0x00, 0x18,
-0x17, 0xE1, 0x30, 0xF0, 0x20, 0x6A, 0x10, 0xF0,
+0x4E, 0xF2, 0x54, 0x9A, 0x02, 0x6C, 0xBB, 0xF7,
+0xA4, 0x9B, 0x66, 0x10, 0x02, 0x72, 0x0A, 0x60,
+0x04, 0x6C, 0xF0, 0x6D, 0x00, 0x18, 0xC1, 0xE0,
+0x10, 0xF0, 0x24, 0x6A, 0x04, 0x6C, 0x5B, 0xF7,
+0xA4, 0x9A, 0xDC, 0x17, 0x04, 0x6C, 0x30, 0x6D,
+0x00, 0x18, 0xC1, 0xE0, 0x10, 0xF0, 0x24, 0x6A,
+0x5B, 0xF7, 0xA4, 0x9A, 0x04, 0x6C, 0x00, 0x18,
+0xC1, 0xE0, 0x30, 0xF0, 0x20, 0x6A, 0x10, 0xF0,
 0x24, 0x6B, 0x4E, 0xF2, 0x54, 0x9A, 0x02, 0x6C,
-0xDC, 0xF3, 0xAC, 0x9B, 0x45, 0x10, 0x02, 0x72,
+0xBB, 0xF7, 0xA8, 0x9B, 0x45, 0x10, 0x02, 0x72,
 0x0B, 0x60, 0x04, 0x6C, 0x01, 0xF7, 0x00, 0x6D,
-0x00, 0x18, 0x17, 0xE1, 0x10, 0xF0, 0x24, 0x6A,
-0x04, 0x6C, 0x5C, 0xF3, 0xB8, 0x9A, 0xBA, 0x17,
+0x00, 0x18, 0xC1, 0xE0, 0x10, 0xF0, 0x24, 0x6A,
+0x04, 0x6C, 0x5B, 0xF7, 0xA8, 0x9A, 0xBA, 0x17,
 0x04, 0x6C, 0x00, 0xF3, 0x00, 0x6D, 0x00, 0x18,
-0x17, 0xE1, 0x10, 0xF0, 0x24, 0x6A, 0x5C, 0xF3,
-0xB8, 0x9A, 0x04, 0x6C, 0x00, 0x18, 0x17, 0xE1,
+0xC1, 0xE0, 0x10, 0xF0, 0x24, 0x6A, 0x5B, 0xF7,
+0xA8, 0x9A, 0x04, 0x6C, 0x00, 0x18, 0xC1, 0xE0,
 0x30, 0xF0, 0x20, 0x6A, 0x10, 0xF0, 0x24, 0x6B,
-0x4E, 0xF2, 0x54, 0x9A, 0x02, 0x6C, 0xDC, 0xF3,
-0xB0, 0x9B, 0x22, 0x10, 0x02, 0x72, 0x0B, 0x60,
+0x4E, 0xF2, 0x54, 0x9A, 0x02, 0x6C, 0xBB, 0xF7,
+0xAC, 0x9B, 0x22, 0x10, 0x02, 0x72, 0x0B, 0x60,
 0x04, 0x6C, 0x1E, 0xF0, 0x00, 0x6D, 0x00, 0x18,
-0x17, 0xE1, 0x10, 0xF0, 0x24, 0x6A, 0x04, 0x6C,
-0x5C, 0xF3, 0xBC, 0x9A, 0x97, 0x17, 0x04, 0x6C,
-0x06, 0xF0, 0x00, 0x6D, 0x00, 0x18, 0x17, 0xE1,
-0x10, 0xF0, 0x24, 0x6A, 0x5C, 0xF3, 0xBC, 0x9A,
-0x04, 0x6C, 0x00, 0x18, 0x17, 0xE1, 0x30, 0xF0,
+0xC1, 0xE0, 0x10, 0xF0, 0x24, 0x6A, 0x04, 0x6C,
+0x5B, 0xF7, 0xAC, 0x9A, 0x97, 0x17, 0x04, 0x6C,
+0x06, 0xF0, 0x00, 0x6D, 0x00, 0x18, 0xC1, 0xE0,
+0x10, 0xF0, 0x24, 0x6A, 0x5B, 0xF7, 0xAC, 0x9A,
+0x04, 0x6C, 0x00, 0x18, 0xC1, 0xE0, 0x30, 0xF0,
 0x20, 0x6A, 0x10, 0xF0, 0x24, 0x6B, 0x4E, 0xF2,
-0x54, 0x9A, 0x1C, 0xF3, 0xB4, 0x9B, 0x02, 0x6C,
-0x40, 0xEA, 0x10, 0xF0, 0x24, 0x6A, 0x7C, 0xF3,
-0x74, 0x9A, 0xFF, 0x6C, 0x07, 0x6D, 0x40, 0xA3,
+0x54, 0x9A, 0xFB, 0xF6, 0xB0, 0x9B, 0x02, 0x6C,
+0x40, 0xEA, 0x10, 0xF0, 0x24, 0x6A, 0x5B, 0xF7,
+0x70, 0x9A, 0xFF, 0x6C, 0x07, 0x6D, 0x40, 0xA3,
 0x8C, 0xEA, 0xAD, 0xEA, 0x65, 0x10, 0x05, 0x5C,
 0x5D, 0x60, 0x10, 0xF0, 0x24, 0x6A, 0x88, 0x34,
-0xFB, 0xF5, 0x10, 0x4A, 0x89, 0xE2, 0x40, 0x9A,
-0x00, 0xEA, 0x10, 0xF0, 0x24, 0x6A, 0xDC, 0xF3,
-0xA0, 0x9A, 0x01, 0x6C, 0x00, 0x18, 0x48, 0xE1,
-0x00, 0x6C, 0x08, 0x6D, 0x00, 0x18, 0x48, 0xE1,
+0xDB, 0xF1, 0x0C, 0x4A, 0x89, 0xE2, 0x40, 0x9A,
+0x00, 0xEA, 0x10, 0xF0, 0x24, 0x6A, 0x9B, 0xF7,
+0xBC, 0x9A, 0x01, 0x6C, 0x00, 0x18, 0xF2, 0xE0,
+0x00, 0x6C, 0x08, 0x6D, 0x00, 0x18, 0xF2, 0xE0,
 0x01, 0x6C, 0x0C, 0x6D, 0x45, 0x10, 0x04, 0x6C,
-0x0F, 0x6D, 0x00, 0x18, 0x48, 0xE1, 0x10, 0xF0,
-0x24, 0x6A, 0x5C, 0xF3, 0xB0, 0x9A, 0x04, 0x6C,
-0x00, 0x18, 0x48, 0xE1, 0x10, 0xF0, 0x24, 0x6A,
-0x02, 0x6C, 0xDC, 0xF3, 0xA8, 0x9A, 0x34, 0x10,
-0x04, 0x6C, 0xF0, 0x6D, 0x00, 0x18, 0x48, 0xE1,
-0x10, 0xF0, 0x24, 0x6A, 0x5C, 0xF3, 0xB4, 0x9A,
-0x04, 0x6C, 0x00, 0x18, 0x48, 0xE1, 0x10, 0xF0,
-0x24, 0x6A, 0x02, 0x6C, 0xDC, 0xF3, 0xAC, 0x9A,
+0x0F, 0x6D, 0x00, 0x18, 0xF2, 0xE0, 0x10, 0xF0,
+0x24, 0x6A, 0x5B, 0xF7, 0xA0, 0x9A, 0x04, 0x6C,
+0x00, 0x18, 0xF2, 0xE0, 0x10, 0xF0, 0x24, 0x6A,
+0x02, 0x6C, 0xBB, 0xF7, 0xA4, 0x9A, 0x34, 0x10,
+0x04, 0x6C, 0xF0, 0x6D, 0x00, 0x18, 0xF2, 0xE0,
+0x10, 0xF0, 0x24, 0x6A, 0x5B, 0xF7, 0xA4, 0x9A,
+0x04, 0x6C, 0x00, 0x18, 0xF2, 0xE0, 0x10, 0xF0,
+0x24, 0x6A, 0x02, 0x6C, 0xBB, 0xF7, 0xA8, 0x9A,
 0x23, 0x10, 0x04, 0x6C, 0x01, 0xF7, 0x00, 0x6D,
-0x00, 0x18, 0x48, 0xE1, 0x10, 0xF0, 0x24, 0x6A,
-0x5C, 0xF3, 0xB8, 0x9A, 0x04, 0x6C, 0x00, 0x18,
-0x48, 0xE1, 0x10, 0xF0, 0x24, 0x6A, 0x02, 0x6C,
-0xDC, 0xF3, 0xB0, 0x9A, 0x11, 0x10, 0x04, 0x6C,
-0x1E, 0xF0, 0x00, 0x6D, 0x00, 0x18, 0x48, 0xE1,
-0x10, 0xF0, 0x24, 0x6A, 0x5C, 0xF3, 0xBC, 0x9A,
-0x04, 0x6C, 0x00, 0x18, 0x48, 0xE1, 0x10, 0xF0,
-0x24, 0x6A, 0x1C, 0xF3, 0xB4, 0x9A, 0x02, 0x6C,
-0x00, 0x18, 0x98, 0xE1, 0x10, 0xF0, 0x24, 0x6A,
-0x7C, 0xF3, 0x74, 0x9A, 0xF8, 0x6A, 0x80, 0xA3,
+0x00, 0x18, 0xF2, 0xE0, 0x10, 0xF0, 0x24, 0x6A,
+0x5B, 0xF7, 0xA8, 0x9A, 0x04, 0x6C, 0x00, 0x18,
+0xF2, 0xE0, 0x10, 0xF0, 0x24, 0x6A, 0x02, 0x6C,
+0xBB, 0xF7, 0xAC, 0x9A, 0x11, 0x10, 0x04, 0x6C,
+0x1E, 0xF0, 0x00, 0x6D, 0x00, 0x18, 0xF2, 0xE0,
+0x10, 0xF0, 0x24, 0x6A, 0x5B, 0xF7, 0xAC, 0x9A,
+0x04, 0x6C, 0x00, 0x18, 0xF2, 0xE0, 0x10, 0xF0,
+0x24, 0x6A, 0xFB, 0xF6, 0xB0, 0x9A, 0x02, 0x6C,
+0x00, 0x18, 0x42, 0xE1, 0x10, 0xF0, 0x24, 0x6A,
+0x5B, 0xF7, 0x70, 0x9A, 0xF8, 0x6A, 0x80, 0xA3,
 0x8C, 0xEA, 0x40, 0xC3, 0x05, 0x97, 0x03, 0x63,
 0x00, 0xEF, 0x00, 0x65, 0xFB, 0x63, 0x09, 0x62,
 0x08, 0xD1, 0x07, 0xD0, 0x30, 0xF0, 0x20, 0x68,
 0xC0, 0xF1, 0x08, 0x48, 0x68, 0xF3, 0x54, 0xA0,
 0x7F, 0x6E, 0xFF, 0x69, 0x4C, 0xEE, 0x2C, 0xEC,
 0x01, 0x6D, 0x2C, 0xEE, 0x04, 0xD4, 0x00, 0x18,
-0xE9, 0xCF, 0x88, 0xF3, 0x6A, 0xA8, 0x10, 0xF0,
-0x24, 0x6A, 0x3C, 0xF3, 0x58, 0x9A, 0x2C, 0xEB,
+0xD7, 0xCF, 0x88, 0xF3, 0x6A, 0xA8, 0x10, 0xF0,
+0x24, 0x6A, 0x1B, 0xF7, 0x54, 0x9A, 0x2C, 0xEB,
 0x60, 0xC2, 0xC8, 0xF3, 0x99, 0xA0, 0x80, 0x6A,
 0x4B, 0xEA, 0x1F, 0x6B, 0x8C, 0xEA, 0x8C, 0xEB,
 0x2C, 0xEA, 0x2C, 0xEB, 0x11, 0x22, 0x6F, 0x32,
@@ -20593,9 +20559,9 @@ u8 array_mp_8821c_fw_nic[] = {
 0x6C, 0x33, 0x6D, 0xEA, 0x2C, 0xEA, 0x06, 0x10,
 0x04, 0x6B, 0xC8, 0xF3, 0x7C, 0xC0, 0x03, 0x6B,
 0xC8, 0xF3, 0x7D, 0xC0, 0x10, 0xF0, 0x24, 0x6B,
-0xDC, 0xF3, 0x74, 0x9B, 0x40, 0xC3, 0x30, 0xF0,
+0xBB, 0xF7, 0x70, 0x9B, 0x40, 0xC3, 0x30, 0xF0,
 0x20, 0x6B, 0x30, 0xF0, 0x20, 0x6A, 0x6E, 0xF5,
-0x58, 0x9A, 0xEF, 0xF6, 0x85, 0xA3, 0x40, 0xEA,
+0x58, 0x9A, 0xEF, 0xF6, 0x81, 0xA3, 0x40, 0xEA,
 0x01, 0x72, 0x19, 0x61, 0x30, 0xF0, 0x20, 0x6A,
 0xC0, 0xF1, 0x08, 0x4A, 0x68, 0xF3, 0x99, 0xA2,
 0x21, 0x6B, 0x6B, 0xEB, 0x8C, 0xEB, 0x68, 0xF3,
@@ -20611,8 +20577,8 @@ u8 array_mp_8821c_fw_nic[] = {
 0xC0, 0xF1, 0x08, 0x48, 0x68, 0xF3, 0x54, 0xA0,
 0x7F, 0x6E, 0xFF, 0x69, 0x4C, 0xEE, 0x2C, 0xEC,
 0x01, 0x6D, 0x2C, 0xEE, 0x04, 0xD4, 0x00, 0x18,
-0xE9, 0xCF, 0x88, 0xF3, 0x6A, 0xA8, 0x10, 0xF0,
-0x24, 0x6A, 0x3C, 0xF3, 0x58, 0x9A, 0x2C, 0xEB,
+0xD7, 0xCF, 0x88, 0xF3, 0x6A, 0xA8, 0x10, 0xF0,
+0x24, 0x6A, 0x1B, 0xF7, 0x54, 0x9A, 0x2C, 0xEB,
 0x60, 0xC2, 0xC8, 0xF3, 0x99, 0xA0, 0x80, 0x6A,
 0x4B, 0xEA, 0x1F, 0x6B, 0x8C, 0xEA, 0x8C, 0xEB,
 0x2C, 0xEA, 0x2C, 0xEB, 0x11, 0x22, 0x6F, 0x32,
@@ -20622,9 +20588,9 @@ u8 array_mp_8821c_fw_nic[] = {
 0x6C, 0x33, 0x6D, 0xEA, 0x2C, 0xEA, 0x06, 0x10,
 0x04, 0x6B, 0xC8, 0xF3, 0x7C, 0xC0, 0x03, 0x6B,
 0xC8, 0xF3, 0x7D, 0xC0, 0x10, 0xF0, 0x24, 0x6B,
-0xDC, 0xF3, 0x74, 0x9B, 0x40, 0xC3, 0x30, 0xF0,
+0xBB, 0xF7, 0x70, 0x9B, 0x40, 0xC3, 0x30, 0xF0,
 0x20, 0x6B, 0x30, 0xF0, 0x20, 0x6A, 0x6E, 0xF5,
-0x58, 0x9A, 0xEF, 0xF6, 0x85, 0xA3, 0x40, 0xEA,
+0x58, 0x9A, 0xEF, 0xF6, 0x81, 0xA3, 0x40, 0xEA,
 0x01, 0x72, 0x19, 0x61, 0x30, 0xF0, 0x20, 0x6A,
 0xC0, 0xF1, 0x08, 0x4A, 0x68, 0xF3, 0x99, 0xA2,
 0x21, 0x6B, 0x6B, 0xEB, 0x8C, 0xEB, 0x68, 0xF3,
@@ -20641,14 +20607,14 @@ u8 array_mp_8821c_fw_nic[] = {
 0x30, 0xF0, 0x20, 0x68, 0xC0, 0xF1, 0x08, 0x48,
 0x68, 0xF3, 0x74, 0xA0, 0x7F, 0x6E, 0x91, 0x67,
 0x6C, 0xEE, 0x4C, 0xEE, 0x00, 0x6D, 0x00, 0x18,
-0xE9, 0xCF, 0x7D, 0x67, 0x87, 0x43, 0x09, 0x4C,
-0x10, 0xF0, 0x24, 0x6A, 0x60, 0xA4, 0xBC, 0xF3,
-0x5C, 0x9A, 0x60, 0xC2, 0x10, 0xF0, 0x24, 0x6A,
-0x5C, 0xF3, 0x48, 0x9A, 0x02, 0x6B, 0x60, 0xDA,
+0xD7, 0xCF, 0x7D, 0x67, 0x87, 0x43, 0x09, 0x4C,
+0x10, 0xF0, 0x24, 0x6A, 0x60, 0xA4, 0x9B, 0xF7,
+0x58, 0x9A, 0x60, 0xC2, 0x10, 0xF0, 0x24, 0x6A,
+0x3B, 0xF7, 0x58, 0x9A, 0x02, 0x6B, 0x60, 0xDA,
 0x30, 0xF0, 0x20, 0x6A, 0x30, 0xF0, 0x20, 0x6B,
-0x6E, 0xF5, 0x58, 0x9A, 0xEF, 0xF6, 0x85, 0xA3,
-0x40, 0xEA, 0x10, 0x2A, 0x00, 0x18, 0x6F, 0xED,
-0x91, 0x67, 0x00, 0x18, 0x3F, 0xCD, 0x68, 0xF3,
+0x6E, 0xF5, 0x58, 0x9A, 0xEF, 0xF6, 0x81, 0xA3,
+0x40, 0xEA, 0x10, 0x2A, 0x00, 0x18, 0x11, 0xED,
+0x91, 0x67, 0x00, 0x18, 0x67, 0xCD, 0x68, 0xF3,
 0x7A, 0xA0, 0x02, 0x6A, 0x4B, 0xEA, 0x6C, 0xEA,
 0x03, 0x6B, 0x6B, 0xEB, 0x6C, 0xEA, 0x68, 0xF3,
 0x5A, 0xC0, 0x08, 0x10, 0x30, 0xF0, 0x20, 0x6A,
@@ -20658,144 +20624,144 @@ u8 array_mp_8821c_fw_nic[] = {
 0x05, 0x6B, 0x6B, 0xEB, 0x8C, 0xEB, 0x68, 0xF3,
 0x79, 0xC2, 0x30, 0xF0, 0x20, 0x6A, 0xEF, 0xF4,
 0x68, 0xA2, 0x01, 0x6A, 0x6C, 0xEA, 0x1C, 0x22,
-0x10, 0xF0, 0x24, 0x6A, 0x5C, 0xF3, 0x44, 0x9A,
+0x10, 0xF0, 0x24, 0x6A, 0x3B, 0xF7, 0x54, 0x9A,
 0x00, 0x6B, 0x60, 0xC2, 0x10, 0xF0, 0x24, 0x6A,
-0x5C, 0xF3, 0x48, 0x9A, 0x04, 0x6B, 0x60, 0xC2,
+0x3B, 0xF7, 0x58, 0x9A, 0x04, 0x6B, 0x60, 0xC2,
 0x0F, 0x10, 0x04, 0x94, 0x01, 0x74, 0x06, 0x61,
-0x91, 0x67, 0x00, 0x18, 0xBB, 0xD0, 0x80, 0x18,
+0x91, 0x67, 0x00, 0x18, 0xA9, 0xD0, 0x80, 0x18,
 0x76, 0x13, 0x06, 0x10, 0x04, 0x92, 0x02, 0x72,
-0x03, 0x61, 0x91, 0x67, 0x00, 0x18, 0x81, 0xD0,
+0x03, 0x61, 0x91, 0x67, 0x00, 0x18, 0x6F, 0xD0,
 0x09, 0x97, 0x08, 0x91, 0x07, 0x90, 0x05, 0x63,
 0x00, 0xEF, 0x00, 0x65, 0xFB, 0x63, 0x09, 0x62,
 0x08, 0xD1, 0x07, 0xD0, 0xFF, 0x69, 0x2C, 0xED,
 0x30, 0xF0, 0x20, 0x68, 0x0A, 0xD4, 0xC0, 0xF1,
 0x08, 0x48, 0x85, 0x67, 0x04, 0xD5, 0x00, 0x18,
-0x02, 0xCC, 0x68, 0xF3, 0x94, 0xA0, 0x7F, 0x6A,
+0x09, 0xCC, 0x68, 0xF3, 0x94, 0xA0, 0x7F, 0x6A,
 0x04, 0x95, 0x4C, 0xEC, 0x2C, 0xEC, 0x00, 0x18,
-0xF5, 0xD0, 0x68, 0xF3, 0x54, 0xA0, 0x7F, 0x6B,
+0xE3, 0xD0, 0x68, 0xF3, 0x54, 0xA0, 0x7F, 0x6B,
 0x6C, 0xEA, 0x2C, 0xEA, 0x18, 0x22, 0x0A, 0x93,
 0x0F, 0x6C, 0x41, 0xA3, 0xA2, 0xA3, 0x4C, 0xEC,
-0x2C, 0xEC, 0x00, 0x18, 0x17, 0xC9, 0x28, 0xF1,
+0x2C, 0xEC, 0x00, 0x18, 0x16, 0xC9, 0x28, 0xF1,
 0x54, 0xA0, 0x03, 0x72, 0x0C, 0x61, 0x10, 0xF0,
-0x24, 0x6A, 0xDC, 0xF3, 0x78, 0x9A, 0x40, 0xA3,
+0x24, 0x6A, 0xBB, 0xF7, 0x74, 0x9A, 0x40, 0xA3,
 0x4C, 0xE9, 0x02, 0x6A, 0x2C, 0xEA, 0x03, 0x22,
 0xFD, 0x6A, 0x2C, 0xEA, 0x40, 0xC3, 0x09, 0x97,
 0x08, 0x91, 0x07, 0x90, 0x05, 0x63, 0x00, 0xEF,
 0xFF, 0x6A, 0x4C, 0xEC, 0xAC, 0xEA, 0x0B, 0x2A,
-0x10, 0xF0, 0x24, 0x6B, 0xDC, 0xF3, 0xBC, 0x9B,
-0x10, 0xF0, 0x24, 0x6E, 0xFC, 0xF3, 0xC0, 0x9E,
+0x10, 0xF0, 0x24, 0x6B, 0xBB, 0xF7, 0xB8, 0x9B,
+0x10, 0xF0, 0x24, 0x6E, 0xBB, 0xF7, 0xDC, 0x9E,
 0x60, 0x9D, 0xCC, 0xEB, 0x0C, 0x10, 0x01, 0x72,
-0x0B, 0x61, 0x10, 0xF0, 0x24, 0x6B, 0xDC, 0xF3,
-0xBC, 0x9B, 0x10, 0xF0, 0x24, 0x6E, 0xFC, 0xF3,
-0xC4, 0x9E, 0x60, 0x9D, 0xCD, 0xEB, 0x60, 0xDD,
+0x0B, 0x61, 0x10, 0xF0, 0x24, 0x6B, 0xBB, 0xF7,
+0xB8, 0x9B, 0x10, 0xF0, 0x24, 0x6E, 0xDB, 0xF7,
+0xC0, 0x9E, 0x60, 0x9D, 0xCD, 0xEB, 0x60, 0xDD,
 0x05, 0x5C, 0x60, 0xF1, 0x06, 0x60, 0x10, 0xF0,
-0x24, 0x6B, 0x88, 0x34, 0x1B, 0xF6, 0x10, 0x4B,
+0x24, 0x6B, 0x88, 0x34, 0xFB, 0xF1, 0x0C, 0x4B,
 0x8D, 0xE3, 0x60, 0x9B, 0x00, 0xEB, 0x05, 0x2A,
-0x10, 0xF0, 0x24, 0x6A, 0xDC, 0xF3, 0x7C, 0x9A,
+0x10, 0xF0, 0x24, 0x6A, 0xBB, 0xF7, 0x78, 0x9A,
 0x0D, 0x11, 0x01, 0x72, 0x10, 0x61, 0x10, 0xF0,
-0x24, 0x6A, 0xDC, 0xF3, 0x7C, 0x9A, 0xFF, 0x6C,
+0x24, 0x6A, 0xBB, 0xF7, 0x78, 0x9A, 0xFF, 0x6C,
 0x40, 0x6D, 0x40, 0xA3, 0x8C, 0xEA, 0xAD, 0xEA,
 0x8C, 0xEA, 0x40, 0xC3, 0x40, 0xA3, 0x80, 0x4D,
 0xC0, 0x4D, 0x8C, 0xEA, 0x14, 0x10, 0x02, 0x72,
-0x07, 0x61, 0x10, 0xF0, 0x24, 0x6A, 0xDC, 0xF3,
-0x7C, 0x9A, 0xBF, 0x6A, 0x80, 0xA3, 0xF4, 0x10,
+0x07, 0x61, 0x10, 0xF0, 0x24, 0x6A, 0xBB, 0xF7,
+0x78, 0x9A, 0xBF, 0x6A, 0x80, 0xA3, 0xF4, 0x10,
 0x03, 0x72, 0x20, 0xF1, 0x1A, 0x61, 0x10, 0xF0,
-0x24, 0x6A, 0xDC, 0xF3, 0x7C, 0x9A, 0xFF, 0x6C,
+0x24, 0x6A, 0xBB, 0xF7, 0x78, 0x9A, 0xFF, 0x6C,
 0x40, 0x6D, 0x40, 0xA3, 0x8C, 0xEA, 0xAD, 0xEA,
 0xE7, 0x10, 0x07, 0x2A, 0x10, 0xF0, 0x24, 0x6A,
-0xFC, 0xF3, 0x68, 0x9A, 0xFD, 0x6A, 0x80, 0xA3,
+0xDB, 0xF7, 0x64, 0x9A, 0xFD, 0x6A, 0x80, 0xA3,
 0xDF, 0x10, 0x01, 0x72, 0x19, 0x61, 0x10, 0xF0,
-0x24, 0x6A, 0xDC, 0xF3, 0x9C, 0x9A, 0xFF, 0x6A,
+0x24, 0x6A, 0xBB, 0xF7, 0x98, 0x9A, 0xFF, 0x6A,
 0x40, 0x6D, 0x60, 0xA4, 0x4C, 0xEB, 0xAD, 0xEB,
 0x4C, 0xEB, 0x60, 0xC4, 0x10, 0xF0, 0x24, 0x6B,
-0xFC, 0xF3, 0x88, 0x9B, 0x01, 0x6D, 0x60, 0xA4,
+0xDB, 0xF7, 0x84, 0x9B, 0x01, 0x6D, 0x60, 0xA4,
 0x4C, 0xEB, 0xAD, 0xEB, 0x4C, 0xEB, 0x60, 0xC4,
 0x60, 0xA4, 0x02, 0x6D, 0x4C, 0xEB, 0xE1, 0x10,
 0x02, 0x72, 0x0F, 0x61, 0x10, 0xF0, 0x24, 0x6A,
-0xDC, 0xF3, 0x7C, 0x9A, 0xBF, 0x6A, 0x80, 0xA3,
+0xBB, 0xF7, 0x78, 0x9A, 0xBF, 0x6A, 0x80, 0xA3,
 0x8C, 0xEA, 0x40, 0xC3, 0x10, 0xF0, 0x24, 0x6A,
-0xFC, 0xF3, 0x68, 0x9A, 0xFE, 0x6A, 0x80, 0xA3,
+0xDB, 0xF7, 0x64, 0x9A, 0xFE, 0x6A, 0x80, 0xA3,
 0xB3, 0x10, 0x03, 0x72, 0xE0, 0xF0, 0x19, 0x61,
-0x10, 0xF0, 0x24, 0x6A, 0xDC, 0xF3, 0x9C, 0x9A,
+0x10, 0xF0, 0x24, 0x6A, 0xBB, 0xF7, 0x98, 0x9A,
 0xFF, 0x6B, 0x40, 0x6D, 0x40, 0xA4, 0x6C, 0xEA,
 0xAD, 0xEA, 0x6C, 0xEA, 0x40, 0xC4, 0x10, 0xF0,
-0x24, 0x6A, 0xFC, 0xF3, 0x88, 0x9A, 0x01, 0x6D,
+0x24, 0x6A, 0xDB, 0xF7, 0x84, 0x9A, 0x01, 0x6D,
 0x40, 0xA4, 0x6C, 0xEA, 0x92, 0x10, 0x07, 0x2A,
-0x10, 0xF0, 0x24, 0x6A, 0xFC, 0xF3, 0x68, 0x9A,
+0x10, 0xF0, 0x24, 0x6A, 0xDB, 0xF7, 0x64, 0x9A,
 0xF7, 0x6A, 0x80, 0xA3, 0x95, 0x10, 0x01, 0x72,
-0x19, 0x61, 0x10, 0xF0, 0x24, 0x6A, 0xDC, 0xF3,
-0x9C, 0x9A, 0xFF, 0x6A, 0x40, 0x6D, 0x60, 0xA4,
+0x19, 0x61, 0x10, 0xF0, 0x24, 0x6A, 0xBB, 0xF7,
+0x98, 0x9A, 0xFF, 0x6A, 0x40, 0x6D, 0x60, 0xA4,
 0x4C, 0xEB, 0xAD, 0xEB, 0x4C, 0xEB, 0x60, 0xC4,
-0x10, 0xF0, 0x24, 0x6B, 0xFC, 0xF3, 0x88, 0x9B,
+0x10, 0xF0, 0x24, 0x6B, 0xDB, 0xF7, 0x84, 0x9B,
 0x04, 0x6D, 0x60, 0xA4, 0x4C, 0xEB, 0xAD, 0xEB,
 0x4C, 0xEB, 0x60, 0xC4, 0x60, 0xA4, 0x08, 0x6D,
 0x4C, 0xEB, 0x97, 0x10, 0x02, 0x72, 0x0F, 0x61,
-0x10, 0xF0, 0x24, 0x6A, 0xDC, 0xF3, 0x7C, 0x9A,
+0x10, 0xF0, 0x24, 0x6A, 0xBB, 0xF7, 0x78, 0x9A,
 0xBF, 0x6A, 0x80, 0xA3, 0x8C, 0xEA, 0x40, 0xC3,
-0x10, 0xF0, 0x24, 0x6A, 0xFC, 0xF3, 0x68, 0x9A,
+0x10, 0xF0, 0x24, 0x6A, 0xDB, 0xF7, 0x64, 0x9A,
 0xFB, 0x6A, 0x80, 0xA3, 0x69, 0x10, 0x03, 0x72,
 0xA0, 0xF0, 0x0F, 0x61, 0x10, 0xF0, 0x24, 0x6A,
-0xDC, 0xF3, 0x9C, 0x9A, 0xFF, 0x6B, 0x40, 0x6D,
+0xBB, 0xF7, 0x98, 0x9A, 0xFF, 0x6B, 0x40, 0x6D,
 0x40, 0xA4, 0x6C, 0xEA, 0xAD, 0xEA, 0x6C, 0xEA,
-0x40, 0xC4, 0x10, 0xF0, 0x24, 0x6A, 0xFC, 0xF3,
-0x88, 0x9A, 0x04, 0x6D, 0x40, 0xA4, 0x6C, 0xEA,
+0x40, 0xC4, 0x10, 0xF0, 0x24, 0x6A, 0xDB, 0xF7,
+0x84, 0x9A, 0x04, 0x6D, 0x40, 0xA4, 0x6C, 0xEA,
 0x48, 0x10, 0x07, 0x2A, 0x10, 0xF0, 0x24, 0x6A,
-0xFC, 0xF3, 0x68, 0x9A, 0xDF, 0x6A, 0x80, 0xA3,
+0xDB, 0xF7, 0x64, 0x9A, 0xDF, 0x6A, 0x80, 0xA3,
 0x4B, 0x10, 0x01, 0x72, 0x19, 0x61, 0x10, 0xF0,
-0x24, 0x6A, 0xDC, 0xF3, 0x9C, 0x9A, 0xFF, 0x6A,
+0x24, 0x6A, 0xBB, 0xF7, 0x98, 0x9A, 0xFF, 0x6A,
 0x40, 0x6D, 0x60, 0xA4, 0x4C, 0xEB, 0xAD, 0xEB,
 0x4C, 0xEB, 0x60, 0xC4, 0x10, 0xF0, 0x24, 0x6B,
-0xFC, 0xF3, 0x88, 0x9B, 0x10, 0x6D, 0x60, 0xA4,
+0xDB, 0xF7, 0x84, 0x9B, 0x10, 0x6D, 0x60, 0xA4,
 0x4C, 0xEB, 0xAD, 0xEB, 0x4C, 0xEB, 0x60, 0xC4,
 0x60, 0xA4, 0x20, 0x6D, 0x4C, 0xEB, 0x4D, 0x10,
 0x02, 0x72, 0x0F, 0x61, 0x10, 0xF0, 0x24, 0x6A,
-0xDC, 0xF3, 0x7C, 0x9A, 0xBF, 0x6A, 0x80, 0xA3,
+0xBB, 0xF7, 0x78, 0x9A, 0xBF, 0x6A, 0x80, 0xA3,
 0x8C, 0xEA, 0x40, 0xC3, 0x10, 0xF0, 0x24, 0x6A,
-0xFC, 0xF3, 0x68, 0x9A, 0xEF, 0x6A, 0x80, 0xA3,
+0xDB, 0xF7, 0x64, 0x9A, 0xEF, 0x6A, 0x80, 0xA3,
 0x1F, 0x10, 0x03, 0x72, 0x66, 0x61, 0x10, 0xF0,
-0x24, 0x6A, 0xDC, 0xF3, 0x9C, 0x9A, 0xFF, 0x6B,
+0x24, 0x6A, 0xBB, 0xF7, 0x98, 0x9A, 0xFF, 0x6B,
 0x40, 0x6D, 0x40, 0xA4, 0x6C, 0xEA, 0xAD, 0xEA,
 0x6C, 0xEA, 0x40, 0xC4, 0x10, 0xF0, 0x24, 0x6A,
-0xFC, 0xF3, 0x88, 0x9A, 0x10, 0x6D, 0x40, 0xA4,
+0xDB, 0xF7, 0x84, 0x9A, 0x10, 0x6D, 0x40, 0xA4,
 0x6C, 0xEA, 0xAD, 0xEA, 0x6C, 0xEA, 0x40, 0xC4,
 0x20, 0xE8, 0x09, 0x2A, 0x10, 0xF0, 0x24, 0x6A,
-0xFC, 0xF3, 0x68, 0x9A, 0x80, 0xA3, 0x7F, 0x6A,
+0xDB, 0xF7, 0x64, 0x9A, 0x80, 0xA3, 0x7F, 0x6A,
 0x8C, 0xEA, 0x40, 0xC3, 0x20, 0xE8, 0x01, 0x72,
-0x1C, 0x61, 0x10, 0xF0, 0x24, 0x6A, 0xDC, 0xF3,
-0x9C, 0x9A, 0xFF, 0x6A, 0x40, 0x6D, 0x60, 0xA4,
+0x1C, 0x61, 0x10, 0xF0, 0x24, 0x6A, 0xBB, 0xF7,
+0x98, 0x9A, 0xFF, 0x6A, 0x40, 0x6D, 0x60, 0xA4,
 0x4C, 0xEB, 0xAD, 0xEB, 0x4C, 0xEB, 0x60, 0xC4,
-0x10, 0xF0, 0x24, 0x6B, 0xFC, 0xF3, 0x88, 0x9B,
+0x10, 0xF0, 0x24, 0x6B, 0xDB, 0xF7, 0x84, 0x9B,
 0x60, 0xA4, 0x4C, 0xEB, 0xAD, 0xEB, 0x4C, 0xEB,
 0x60, 0xC4, 0x60, 0xA4, 0x80, 0x4D, 0xC0, 0x4D,
 0x4C, 0xEB, 0xAD, 0xEB, 0x4C, 0xEB, 0x60, 0xC4,
 0x20, 0xE8, 0x02, 0x72, 0x10, 0x61, 0x10, 0xF0,
-0x24, 0x6A, 0xDC, 0xF3, 0x5C, 0x9A, 0xBF, 0x6B,
+0x24, 0x6A, 0xBB, 0xF7, 0x58, 0x9A, 0xBF, 0x6B,
 0x80, 0xA2, 0x6C, 0xEC, 0x80, 0xC2, 0x10, 0xF0,
-0x24, 0x6A, 0xFC, 0xF3, 0x48, 0x9A, 0x80, 0xA2,
+0x24, 0x6A, 0xDB, 0xF7, 0x44, 0x9A, 0x80, 0xA2,
 0x8C, 0xEB, 0x60, 0xC2, 0x20, 0xE8, 0x03, 0x72,
-0x14, 0x61, 0x10, 0xF0, 0x24, 0x6A, 0xDC, 0xF3,
-0x9C, 0x9A, 0xFF, 0x6B, 0x40, 0x6D, 0x40, 0xA4,
+0x14, 0x61, 0x10, 0xF0, 0x24, 0x6A, 0xBB, 0xF7,
+0x98, 0x9A, 0xFF, 0x6B, 0x40, 0x6D, 0x40, 0xA4,
 0x6C, 0xEA, 0xAD, 0xEA, 0x6C, 0xEA, 0x40, 0xC4,
-0x10, 0xF0, 0x24, 0x6A, 0xFC, 0xF3, 0x88, 0x9A,
+0x10, 0xF0, 0x24, 0x6A, 0xDB, 0xF7, 0x84, 0x9A,
 0x40, 0xA4, 0x6C, 0xEA, 0xAD, 0xEA, 0x6C, 0xEA,
 0x40, 0xC4, 0x20, 0xE8, 0xFF, 0x63, 0x01, 0xD0,
-0x10, 0xF0, 0x24, 0x6B, 0xFC, 0xF3, 0x6C, 0x9B,
+0x10, 0xF0, 0x24, 0x6B, 0xDB, 0xF7, 0x68, 0x9B,
 0xFF, 0x6A, 0x4C, 0xEC, 0x6D, 0xE5, 0x00, 0xA3,
 0x3F, 0x6F, 0x01, 0x74, 0x0C, 0xEF, 0x4C, 0xEE,
 0xE0, 0xC3, 0x10, 0x61, 0x10, 0xF0, 0x24, 0x6C,
-0xFC, 0xF3, 0xF0, 0x9C, 0x10, 0x68, 0xFD, 0xE5,
+0xDB, 0xF7, 0xEC, 0x9C, 0x10, 0x68, 0xFD, 0xE5,
 0x80, 0xA7, 0x4C, 0xEC, 0x0D, 0xEC, 0x4C, 0xEC,
 0x80, 0xC7, 0x80, 0xA3, 0x80, 0x6F, 0xEB, 0xEF,
 0x4C, 0xEC, 0x0D, 0x10, 0x0F, 0x2C, 0x10, 0xF0,
-0x24, 0x6C, 0xFC, 0xF3, 0xF0, 0x9C, 0xEF, 0x6C,
+0x24, 0x6C, 0xDB, 0xF7, 0xEC, 0x9C, 0xEF, 0x6C,
 0xFD, 0xE5, 0x00, 0xA7, 0x0C, 0xEC, 0x80, 0xC7,
 0x80, 0xA3, 0x40, 0x6F, 0x4C, 0xEC, 0xED, 0xEC,
 0x4C, 0xEC, 0x80, 0xC3, 0x10, 0xF0, 0x24, 0x6A,
-0xFC, 0xF3, 0x54, 0x9A, 0x80, 0xF4, 0xC0, 0x36,
+0xDB, 0xF7, 0x50, 0x9A, 0x80, 0xF4, 0xC0, 0x36,
 0x55, 0xE5, 0x40, 0x9D, 0x4D, 0xEE, 0xC0, 0xDD,
 0x01, 0x90, 0x01, 0x63, 0x20, 0xE8, 0x00, 0x65,
 0xFD, 0x63, 0x05, 0x62, 0x10, 0xF0, 0x24, 0x6A,
-0xFC, 0xF3, 0x58, 0x9A, 0xFF, 0x6B, 0x40, 0xA2,
+0xDB, 0xF7, 0x54, 0x9A, 0xFF, 0x6B, 0x40, 0xA2,
 0x6C, 0xEA, 0x52, 0x32, 0x6C, 0xEA, 0x11, 0x2A,
 0x30, 0xF0, 0x20, 0x6B, 0x30, 0xF0, 0x20, 0x6A,
 0x6E, 0xF2, 0x5C, 0x9A, 0xA8, 0xF4, 0x86, 0xA3,
@@ -20806,10 +20772,10 @@ u8 array_mp_8821c_fw_nic[] = {
 0x30, 0xF0, 0x20, 0x68, 0xC0, 0xF1, 0x08, 0x48,
 0x28, 0xF1, 0x70, 0xA0, 0xFF, 0x6A, 0x4C, 0xED,
 0x01, 0x4B, 0x28, 0xF1, 0x70, 0xC0, 0x10, 0xF0,
-0x24, 0x6B, 0xFC, 0xF3, 0x78, 0x9B, 0x04, 0xD5,
+0x24, 0x6B, 0xDB, 0xF7, 0x74, 0x9B, 0x04, 0xD5,
 0x24, 0x67, 0x60, 0xA3, 0x4C, 0xE9, 0x4C, 0xEB,
 0x72, 0x33, 0x4C, 0xEB, 0x31, 0x23, 0x10, 0xF0,
-0x24, 0x6B, 0x5C, 0xF3, 0x6C, 0x9B, 0x00, 0x6C,
+0x24, 0x6B, 0x3B, 0xF7, 0x7C, 0x9B, 0x00, 0x6C,
 0xFF, 0x6D, 0x60, 0xA3, 0x29, 0x6E, 0x6C, 0xEA,
 0x05, 0xD2, 0x30, 0xF0, 0x20, 0x6A, 0x6E, 0xF2,
 0x58, 0x9A, 0x40, 0xEA, 0x30, 0xF0, 0x20, 0x6A,
@@ -20830,15 +20796,15 @@ u8 array_mp_8821c_fw_nic[] = {
 0x08, 0x91, 0x07, 0x90, 0x05, 0x63, 0x00, 0xEF,
 0xFF, 0xF7, 0x1F, 0x6A, 0xAC, 0xEA, 0xFF, 0x6B,
 0xA2, 0x67, 0x42, 0x32, 0x6C, 0xED, 0x6C, 0xEA,
-0x10, 0xF0, 0x24, 0x6B, 0xFC, 0xF3, 0x7C, 0x9B,
+0x10, 0xF0, 0x24, 0x6B, 0xDB, 0xF7, 0x78, 0x9B,
 0x6D, 0xE4, 0xA0, 0xC3, 0x10, 0xF0, 0x24, 0x6B,
-0x1C, 0xF4, 0x60, 0x9B, 0x71, 0xE4, 0x40, 0xC4,
+0xDB, 0xF7, 0x7C, 0x9B, 0x71, 0xE4, 0x40, 0xC4,
 0x20, 0xE8, 0x00, 0x65, 0xFB, 0x63, 0x09, 0x62,
 0x08, 0xD1, 0x07, 0xD0, 0x10, 0xF0, 0x24, 0x6B,
-0xFF, 0xF7, 0x1F, 0x68, 0xFC, 0xF3, 0x78, 0x9B,
+0xFF, 0xF7, 0x1F, 0x68, 0xDB, 0xF7, 0x74, 0x9B,
 0x0C, 0xED, 0x04, 0xD5, 0x60, 0xA3, 0xFF, 0x6A,
 0x24, 0x67, 0x4C, 0xE9, 0x2D, 0x23, 0x10, 0xF0,
-0x24, 0x6B, 0x5C, 0xF3, 0x6C, 0x9B, 0x00, 0x6C,
+0x24, 0x6B, 0x3B, 0xF7, 0x7C, 0x9B, 0x00, 0x6C,
 0xFF, 0x6D, 0x60, 0xA3, 0x36, 0x6E, 0x6C, 0xEA,
 0x05, 0xD2, 0x30, 0xF0, 0x20, 0x6A, 0x6E, 0xF2,
 0x58, 0x9A, 0x40, 0xEA, 0x30, 0xF0, 0x20, 0x6A,
@@ -20846,14 +20812,14 @@ u8 array_mp_8821c_fw_nic[] = {
 0x0E, 0x61, 0x30, 0xF0, 0x20, 0x6A, 0x6E, 0xF2,
 0x5C, 0x9A, 0x00, 0x6E, 0x91, 0x67, 0x01, 0x6D,
 0xE6, 0x67, 0x40, 0xEA, 0x04, 0x95, 0x82, 0x67,
-0x0C, 0xEC, 0x00, 0x18, 0x76, 0xD2, 0x30, 0xF0,
+0x0C, 0xEC, 0x00, 0x18, 0x64, 0xD2, 0x30, 0xF0,
 0x20, 0x6A, 0x6E, 0xF2, 0x58, 0x9A, 0x05, 0x95,
 0x00, 0x6C, 0x37, 0x6E, 0x40, 0xEA, 0x0E, 0x10,
 0x30, 0xF0, 0x20, 0x6A, 0x6E, 0xF2, 0x5C, 0x9A,
 0x00, 0x6E, 0x91, 0x67, 0x01, 0x6D, 0xE6, 0x67,
 0x40, 0xEA, 0x04, 0x95, 0x82, 0x67, 0x0C, 0xEC,
-0x00, 0x18, 0x76, 0xD2, 0x10, 0xF0, 0x24, 0x6A,
-0x5C, 0xF3, 0x4C, 0x9A, 0x6F, 0x6D, 0x90, 0x6C,
+0x00, 0x18, 0x64, 0xD2, 0x10, 0xF0, 0x24, 0x6A,
+0x3B, 0xF7, 0x5C, 0x9A, 0x6F, 0x6D, 0x90, 0x6C,
 0x60, 0xA2, 0x30, 0xF0, 0x20, 0x6A, 0x6E, 0xF2,
 0x58, 0x9A, 0x6C, 0xED, 0x38, 0x6E, 0x40, 0xEA,
 0x30, 0xF0, 0x20, 0x6A, 0x8E, 0xF2, 0x5C, 0x9A,
@@ -20861,31 +20827,31 @@ u8 array_mp_8821c_fw_nic[] = {
 0x05, 0x63, 0x00, 0xEF, 0xFD, 0x63, 0x05, 0x62,
 0x04, 0xD0, 0xFF, 0x6A, 0x64, 0x67, 0x4C, 0xEB,
 0x85, 0x67, 0x02, 0x5B, 0x4C, 0xEC, 0x43, 0x60,
-0x10, 0xF0, 0x24, 0x6D, 0x1C, 0xF4, 0xA4, 0x9D,
+0x10, 0xF0, 0x24, 0x6D, 0xFB, 0xF7, 0xA0, 0x9D,
 0xFF, 0xF7, 0x1F, 0x6E, 0x30, 0xF0, 0x20, 0x68,
-0xE0, 0xAD, 0x10, 0xF0, 0x24, 0x6D, 0x1C, 0xF4,
-0xA8, 0x9D, 0xCC, 0xEF, 0xC0, 0xF1, 0x08, 0x48,
+0xE0, 0xAD, 0x10, 0xF0, 0x24, 0x6D, 0xFB, 0xF7,
+0xA4, 0x9D, 0xCC, 0xEF, 0xC0, 0xF1, 0x08, 0x48,
 0xA0, 0xAD, 0xAC, 0xEE, 0xD7, 0xE7, 0xC8, 0xF2,
 0xDF, 0xA0, 0x4C, 0xED, 0xCE, 0xED, 0x2B, 0x2D,
 0x68, 0xF3, 0x5C, 0xA0, 0x0E, 0x72, 0x0F, 0x61,
 0x26, 0x2B, 0x68, 0xF3, 0x7A, 0xA0, 0x03, 0x6A,
 0x4B, 0xEA, 0x6C, 0xEA, 0x68, 0xF3, 0x5A, 0xC0,
-0x00, 0x18, 0x50, 0xD1, 0x01, 0x6C, 0x0C, 0x6D,
-0x00, 0x18, 0xE5, 0xC8, 0x10, 0x10, 0x06, 0x72,
+0x00, 0x18, 0x3E, 0xD1, 0x01, 0x6C, 0x0C, 0x6D,
+0x00, 0x18, 0xE4, 0xC8, 0x10, 0x10, 0x06, 0x72,
 0x16, 0x61, 0x15, 0x23, 0x68, 0xF3, 0x7A, 0xA0,
 0x02, 0x6A, 0x4B, 0xEA, 0x6C, 0xEA, 0x01, 0x6D,
-0x68, 0xF3, 0x5A, 0xC0, 0x00, 0x18, 0x50, 0xD1,
+0x68, 0xF3, 0x5A, 0xC0, 0x00, 0x18, 0x3E, 0xD1,
 0x04, 0x6A, 0x68, 0xF3, 0x5C, 0xC0, 0x30, 0xF0,
 0x20, 0x6A, 0x6E, 0xF2, 0x58, 0x9A, 0x00, 0x6D,
 0xFF, 0x6C, 0xC5, 0x67, 0x40, 0xEA, 0x05, 0x97,
 0x04, 0x90, 0x03, 0x63, 0x00, 0xEF, 0x00, 0x65,
 0xFA, 0x63, 0x0B, 0x62, 0x0A, 0xD1, 0x09, 0xD0,
-0x10, 0xF0, 0x24, 0x6B, 0xFF, 0x6A, 0xFC, 0xF3,
-0x78, 0x9B, 0x4C, 0xEE, 0x4C, 0xEF, 0x05, 0xD6,
+0x10, 0xF0, 0x24, 0x6B, 0xFF, 0x6A, 0xDB, 0xF7,
+0x74, 0x9B, 0x4C, 0xEE, 0x4C, 0xEF, 0x05, 0xD6,
 0x04, 0xD7, 0x60, 0xA3, 0xFF, 0xF7, 0x1F, 0x68,
 0x25, 0x67, 0x4C, 0xEB, 0x72, 0x33, 0x4C, 0xEB,
 0x8C, 0xE8, 0x4C, 0xE9, 0x34, 0x23, 0x10, 0xF0,
-0x24, 0x6B, 0x5C, 0xF3, 0x6C, 0x9B, 0x00, 0x6C,
+0x24, 0x6B, 0x3B, 0xF7, 0x7C, 0x9B, 0x00, 0x6C,
 0xFF, 0x6D, 0x60, 0xA3, 0x26, 0x6E, 0x6C, 0xEA,
 0x06, 0xD2, 0x30, 0xF0, 0x20, 0x6A, 0x6E, 0xF2,
 0x58, 0x9A, 0x40, 0xEA, 0x30, 0xF0, 0x20, 0x6A,
@@ -20897,8 +20863,8 @@ u8 array_mp_8821c_fw_nic[] = {
 0xA2, 0x67, 0x40, 0xEB, 0x30, 0xF0, 0x20, 0x6A,
 0x06, 0x95, 0x6E, 0xF2, 0x58, 0x9A, 0x00, 0x6C,
 0x27, 0x6E, 0x40, 0xEA, 0x04, 0x95, 0x91, 0x67,
-0x00, 0x18, 0xB3, 0xD2, 0x15, 0x10, 0x04, 0x95,
-0x91, 0x67, 0x00, 0x18, 0xB3, 0xD2, 0x30, 0xF0,
+0x00, 0x18, 0xA1, 0xD2, 0x15, 0x10, 0x04, 0x95,
+0x91, 0x67, 0x00, 0x18, 0xA1, 0xD2, 0x30, 0xF0,
 0x20, 0x6A, 0x05, 0x96, 0x6E, 0xF2, 0x5C, 0x9A,
 0x90, 0x67, 0x01, 0x6D, 0x00, 0x6F, 0x40, 0xEA,
 0x30, 0xF0, 0x20, 0x6B, 0x2E, 0xF4, 0x6C, 0x9B,
@@ -20906,25 +20872,25 @@ u8 array_mp_8821c_fw_nic[] = {
 0x30, 0xF0, 0x20, 0x6A, 0x8E, 0xF2, 0x5C, 0x9A,
 0x40, 0xEA, 0x0B, 0x97, 0x0A, 0x91, 0x09, 0x90,
 0x06, 0x63, 0x00, 0xEF, 0x10, 0xF0, 0x24, 0x6A,
-0x3C, 0xF4, 0x50, 0x9A, 0xFF, 0x6B, 0x80, 0xA2,
+0x1C, 0xF0, 0x4C, 0x9A, 0xFF, 0x6B, 0x80, 0xA2,
 0x00, 0xF6, 0x80, 0x34, 0x00, 0xF6, 0x83, 0x34,
 0x00, 0x54, 0x24, 0x60, 0xA0, 0xA2, 0x7F, 0x6C,
 0xAC, 0xEC, 0x80, 0xC2, 0x80, 0xA2, 0x40, 0x6D,
 0x6C, 0xEC, 0xAD, 0xEC, 0x6C, 0xEC, 0x80, 0xC2,
-0x80, 0xA2, 0x10, 0xF0, 0x24, 0x6C, 0x3C, 0xF3,
-0x80, 0x9C, 0x3F, 0x6D, 0x80, 0xA4, 0x10, 0xF0,
-0x24, 0x6C, 0x3C, 0xF3, 0x84, 0x9C, 0x80, 0xA4,
-0x10, 0xF0, 0x24, 0x6C, 0x3C, 0xF4, 0x94, 0x9C,
+0x80, 0xA2, 0x10, 0xF0, 0x24, 0x6C, 0xFB, 0xF6,
+0x9C, 0x9C, 0x3F, 0x6D, 0x80, 0xA4, 0x10, 0xF0,
+0x24, 0x6C, 0x1B, 0xF7, 0x80, 0x9C, 0x80, 0xA4,
+0x10, 0xF0, 0x24, 0x6C, 0x1C, 0xF0, 0x90, 0x9C,
 0x80, 0xA4, 0x80, 0xA2, 0x6C, 0xEC, 0xAD, 0xEC,
 0x6C, 0xEC, 0x80, 0xC2, 0x80, 0xA2, 0xBF, 0x6B,
 0x8C, 0xEB, 0x60, 0xC2, 0x20, 0xE8, 0x00, 0x65,
-0x10, 0xF0, 0x24, 0x6B, 0x3C, 0xF4, 0x78, 0x9B,
+0x10, 0xF0, 0x24, 0x6B, 0x1C, 0xF0, 0x74, 0x9B,
 0xFF, 0x6A, 0x4C, 0xEC, 0xC0, 0xA3, 0x4C, 0xED,
-0x0C, 0x26, 0x10, 0xF0, 0x24, 0x6A, 0x7C, 0xF3,
-0x6C, 0x9A, 0x10, 0xF0, 0x24, 0x6C, 0x3C, 0xF4,
-0x9C, 0x9C, 0x40, 0x9B, 0x8D, 0xEA, 0x40, 0xDB,
+0x0C, 0x26, 0x10, 0xF0, 0x24, 0x6A, 0x3B, 0xF7,
+0x6C, 0x9A, 0x10, 0xF0, 0x24, 0x6C, 0x1C, 0xF0,
+0x98, 0x9C, 0x40, 0x9B, 0x8D, 0xEA, 0x40, 0xDB,
 0x20, 0xE8, 0x80, 0xC3, 0x0B, 0x25, 0x10, 0xF0,
-0x24, 0x6B, 0x5C, 0xF4, 0x80, 0x9B, 0x80, 0x6D,
+0x24, 0x6B, 0x1C, 0xF0, 0x9C, 0x9B, 0x80, 0x6D,
 0xAB, 0xED, 0x60, 0xA4, 0x4C, 0xEB, 0xAE, 0xEB,
 0x4C, 0xEB, 0x60, 0xC4, 0x20, 0xE8, 0x00, 0x65,
 0xFB, 0x63, 0x09, 0x62, 0x08, 0xD1, 0x07, 0xD0,
@@ -20936,34 +20902,34 @@ u8 array_mp_8821c_fw_nic[] = {
 0x0A, 0x6C, 0x40, 0xEA, 0x40, 0xA8, 0x01, 0x4A,
 0x40, 0xC8, 0x1F, 0xF7, 0x00, 0x6A, 0x2C, 0xEA,
 0x02, 0xF0, 0x00, 0x72, 0x01, 0x60, 0x05, 0x2A,
-0x10, 0xF0, 0x24, 0x6A, 0xFC, 0xF2, 0x40, 0x9A,
-0x04, 0x10, 0x10, 0xF0, 0x24, 0x6A, 0xFC, 0xF2,
-0x44, 0x9A, 0x49, 0xE1, 0x0B, 0x93, 0x40, 0x9A,
+0x10, 0xF0, 0x24, 0x6A, 0xBB, 0xF6, 0x5C, 0x9A,
+0x04, 0x10, 0x10, 0xF0, 0x24, 0x6A, 0xDB, 0xF6,
+0x40, 0x9A, 0x49, 0xE1, 0x0B, 0x93, 0x40, 0x9A,
 0x6C, 0xEA, 0x0C, 0x93, 0x6E, 0xEA, 0x04, 0x22,
 0x40, 0xA8, 0x04, 0x93, 0x63, 0xEA, 0xDC, 0x61,
 0x40, 0xA8, 0x04, 0x93, 0x63, 0xEA, 0x58, 0x67,
 0x09, 0x97, 0x08, 0x91, 0x07, 0x90, 0x05, 0x63,
 0x00, 0xEF, 0x00, 0x65, 0x10, 0xF0, 0x24, 0x6B,
-0x5C, 0xF4, 0x64, 0x9B, 0xFF, 0x6A, 0xCC, 0xEA,
+0x3C, 0xF0, 0x60, 0x9B, 0xFF, 0x6A, 0xCC, 0xEA,
 0x6D, 0xEA, 0xE0, 0xF1, 0x1F, 0x6B, 0xAC, 0xEB,
-0x10, 0xF0, 0x24, 0x6C, 0x5C, 0xF4, 0x88, 0x9C,
+0x10, 0xF0, 0x24, 0x6C, 0x3C, 0xF0, 0x84, 0x9C,
 0x60, 0x33, 0x60, 0x33, 0x6D, 0xEA, 0x40, 0xDC,
-0x10, 0xF0, 0x24, 0x6A, 0x1C, 0xF3, 0x50, 0x9A,
+0x10, 0xF0, 0x24, 0x6A, 0xFB, 0xF6, 0x4C, 0x9A,
 0x6D, 0xEA, 0x40, 0xDC, 0x20, 0xE8, 0x00, 0x65,
 0xE0, 0xF1, 0x1F, 0x6A, 0x10, 0xF0, 0x24, 0x6B,
-0x1C, 0xF3, 0x70, 0x9B, 0xAC, 0xEA, 0x40, 0x32,
+0xFB, 0xF6, 0x6C, 0x9B, 0xAC, 0xEA, 0x40, 0x32,
 0x40, 0x32, 0x6D, 0xEA, 0x10, 0xF0, 0x24, 0x6B,
-0x5C, 0xF4, 0x68, 0x9B, 0x40, 0xDB, 0x10, 0xF0,
-0x24, 0x6A, 0x5C, 0xF4, 0x4C, 0x9A, 0xFF, 0x6B,
+0x3C, 0xF0, 0x64, 0x9B, 0x40, 0xDB, 0x10, 0xF0,
+0x24, 0x6A, 0x3C, 0xF0, 0x48, 0x9A, 0xFF, 0x6B,
 0x40, 0xA2, 0x6C, 0xEA, 0x20, 0xE8, 0x00, 0x65,
 0xFC, 0x63, 0x07, 0x62, 0x06, 0xD1, 0x05, 0xD0,
 0x01, 0x68, 0x04, 0xEC, 0x04, 0xF7, 0x10, 0x69,
 0x13, 0x10, 0x30, 0xF0, 0x20, 0x6A, 0xCE, 0xF4,
 0x5C, 0x9A, 0x01, 0x6C, 0xFF, 0x49, 0x40, 0xEA,
-0x0B, 0x29, 0x10, 0xF0, 0x24, 0x6A, 0x7C, 0xF3,
+0x0B, 0x29, 0x10, 0xF0, 0x24, 0x6A, 0x3B, 0xF7,
 0x6C, 0x9A, 0x08, 0xF0, 0x00, 0x6C, 0x40, 0x9B,
 0x8D, 0xEA, 0x40, 0xDB, 0x00, 0x6A, 0x0B, 0x10,
-0x10, 0xF0, 0x24, 0x6A, 0x5C, 0xF4, 0x50, 0x9A,
+0x10, 0xF0, 0x24, 0x6A, 0x3C, 0xF0, 0x4C, 0x9A,
 0x60, 0xAA, 0xFF, 0xF7, 0x1F, 0x6A, 0x6C, 0xEA,
 0x0C, 0xEA, 0xE3, 0x2A, 0x01, 0x6A, 0x07, 0x97,
 0x06, 0x91, 0x05, 0x90, 0x04, 0x63, 0x00, 0xEF,
@@ -20971,141 +20937,141 @@ u8 array_mp_8821c_fw_nic[] = {
 0x0E, 0x92, 0x04, 0x67, 0x0F, 0x91, 0x04, 0xD2,
 0x04, 0x93, 0xFF, 0x6A, 0x4C, 0xE8, 0x4C, 0xEB,
 0x90, 0x67, 0x0B, 0xD5, 0x0C, 0xD6, 0x0D, 0xD7,
-0x04, 0xD3, 0x4C, 0xE9, 0x00, 0x18, 0x76, 0xD3,
+0x04, 0xD3, 0x4C, 0xE9, 0x00, 0x18, 0x64, 0xD3,
 0x80, 0xF0, 0x07, 0x22, 0x06, 0x58, 0x80, 0xF0,
 0x04, 0x60, 0x10, 0xF0, 0x24, 0x6A, 0x08, 0x30,
-0x3B, 0xF6, 0x18, 0x4A, 0x09, 0xE2, 0x40, 0x9A,
+0x1B, 0xF2, 0x14, 0x4A, 0x09, 0xE2, 0x40, 0x9A,
 0x00, 0xEA, 0x02, 0xF2, 0x10, 0x6A, 0x0E, 0x10,
 0x02, 0xF2, 0x00, 0x6A, 0x0B, 0x10, 0x22, 0xF2,
 0x00, 0x6A, 0x08, 0x10, 0x22, 0xF2, 0x10, 0x6A,
 0x05, 0x10, 0x42, 0xF2, 0x00, 0x6A, 0x02, 0x10,
 0x42, 0xF2, 0x10, 0x6A, 0x10, 0xF0, 0x24, 0x6B,
-0x0D, 0x94, 0x5C, 0xF4, 0x74, 0x9B, 0x8C, 0xEB,
-0x10, 0xF0, 0x24, 0x6C, 0x5C, 0xF4, 0x98, 0x9C,
+0x0D, 0x94, 0x3C, 0xF0, 0x70, 0x9B, 0x8C, 0xEB,
+0x10, 0xF0, 0x24, 0x6C, 0x3C, 0xF0, 0x94, 0x9C,
 0x8D, 0xEB, 0x06, 0x21, 0x10, 0xF0, 0x24, 0x6C,
-0x5C, 0xF4, 0x9C, 0x9C, 0x6D, 0xEC, 0x05, 0x10,
-0x10, 0xF0, 0x24, 0x6C, 0x7C, 0xF4, 0x80, 0x9C,
+0x3C, 0xF0, 0x98, 0x9C, 0x6D, 0xEC, 0x05, 0x10,
+0x10, 0xF0, 0x24, 0x6C, 0x3C, 0xF0, 0x9C, 0x9C,
 0x6C, 0xEC, 0x04, 0x96, 0x06, 0x26, 0x10, 0xF0,
-0x24, 0x6B, 0x1C, 0xF3, 0x70, 0x9B, 0x8D, 0xEB,
-0x05, 0x10, 0x10, 0xF0, 0x24, 0x6B, 0x7C, 0xF4,
-0x64, 0x9B, 0x8C, 0xEB, 0x1F, 0xF7, 0x00, 0x6C,
+0x24, 0x6B, 0xFB, 0xF6, 0x6C, 0x9B, 0x8D, 0xEB,
+0x05, 0x10, 0x10, 0xF0, 0x24, 0x6B, 0x5C, 0xF0,
+0x60, 0x9B, 0x8C, 0xEB, 0x1F, 0xF7, 0x00, 0x6C,
 0x4C, 0xEC, 0x02, 0xF0, 0x00, 0x74, 0x01, 0x60,
-0x05, 0x2C, 0x10, 0xF0, 0x24, 0x6C, 0xFC, 0xF2,
-0xA0, 0x9C, 0x04, 0x10, 0x10, 0xF0, 0x24, 0x6C,
-0xFC, 0xF2, 0xA4, 0x9C, 0x10, 0xF0, 0x24, 0x6C,
-0x0B, 0x96, 0x7C, 0xF4, 0x88, 0x9C, 0xB5, 0xE2,
+0x05, 0x2C, 0x10, 0xF0, 0x24, 0x6C, 0xBB, 0xF6,
+0xBC, 0x9C, 0x04, 0x10, 0x10, 0xF0, 0x24, 0x6C,
+0xDB, 0xF6, 0xA0, 0x9C, 0x10, 0xF0, 0x24, 0x6C,
+0x0B, 0x96, 0x5C, 0xF0, 0x84, 0x9C, 0xB5, 0xE2,
 0xCC, 0xEC, 0x80, 0xDD, 0x84, 0x42, 0x1F, 0xF7,
 0x00, 0x6D, 0xAC, 0xEC, 0x02, 0xF0, 0x00, 0x74,
 0x01, 0x60, 0x05, 0x2C, 0x10, 0xF0, 0x24, 0x6C,
-0x7C, 0xF4, 0xAC, 0x9C, 0x04, 0x10, 0x10, 0xF0,
-0x24, 0x6C, 0x7C, 0xF4, 0xB0, 0x9C, 0x10, 0xF0,
-0x24, 0x6C, 0x0C, 0x96, 0x7C, 0xF4, 0x88, 0x9C,
+0x5C, 0xF0, 0xA8, 0x9C, 0x04, 0x10, 0x10, 0xF0,
+0x24, 0x6C, 0x5C, 0xF0, 0xAC, 0x9C, 0x10, 0xF0,
+0x24, 0x6C, 0x0C, 0x96, 0x5C, 0xF0, 0x84, 0x9C,
 0xB5, 0xE2, 0xCC, 0xEC, 0x80, 0xDD, 0x87, 0x42,
 0x01, 0x4C, 0x1F, 0xF7, 0x00, 0x6D, 0xAC, 0xEC,
 0x02, 0xF0, 0x00, 0x74, 0x01, 0x60, 0x05, 0x2C,
-0x10, 0xF0, 0x24, 0x6C, 0x7C, 0xF4, 0x94, 0x9C,
-0x04, 0x10, 0x10, 0xF0, 0x24, 0x6C, 0x7C, 0xF4,
-0x98, 0x9C, 0x89, 0xE2, 0x60, 0xDA, 0x01, 0x6A,
+0x10, 0xF0, 0x24, 0x6C, 0x5C, 0xF0, 0x90, 0x9C,
+0x04, 0x10, 0x10, 0xF0, 0x24, 0x6C, 0x5C, 0xF0,
+0x94, 0x9C, 0x89, 0xE2, 0x60, 0xDA, 0x01, 0x6A,
 0x01, 0x10, 0x00, 0x6A, 0x09, 0x97, 0x08, 0x91,
 0x07, 0x90, 0x05, 0x63, 0x00, 0xEF, 0x00, 0x65,
 0xFD, 0x63, 0x05, 0x62, 0x04, 0xD0, 0x04, 0xF7,
 0x10, 0x68, 0x13, 0x10, 0x30, 0xF0, 0x20, 0x6A,
 0xCE, 0xF4, 0x5C, 0x9A, 0x05, 0x6C, 0xFF, 0x48,
 0x40, 0xEA, 0x0B, 0x28, 0x10, 0xF0, 0x24, 0x6A,
-0x7C, 0xF3, 0x6C, 0x9A, 0x08, 0xF0, 0x00, 0x6C,
+0x3B, 0xF7, 0x6C, 0x9A, 0x08, 0xF0, 0x00, 0x6C,
 0x40, 0x9B, 0x8D, 0xEA, 0x40, 0xDB, 0x00, 0x6A,
-0x09, 0x10, 0x10, 0xF0, 0x24, 0x6A, 0x5C, 0xF4,
-0x50, 0x9A, 0x60, 0xAA, 0x3F, 0x6A, 0x6C, 0xEA,
+0x09, 0x10, 0x10, 0xF0, 0x24, 0x6A, 0x3C, 0xF0,
+0x4C, 0x9A, 0x60, 0xAA, 0x3F, 0x6A, 0x6C, 0xEA,
 0xE5, 0x2A, 0x01, 0x6A, 0x05, 0x97, 0x04, 0x90,
 0x03, 0x63, 0x00, 0xEF, 0x10, 0xF0, 0x24, 0x6A,
-0x5C, 0xF4, 0x50, 0x9A, 0x40, 0xAA, 0x20, 0xE8,
-0x10, 0xF0, 0x24, 0x6A, 0x5C, 0xF4, 0x50, 0x9A,
+0x3C, 0xF0, 0x4C, 0x9A, 0x40, 0xAA, 0x20, 0xE8,
+0x10, 0xF0, 0x24, 0x6A, 0x3C, 0xF0, 0x4C, 0x9A,
 0x40, 0xAA, 0x20, 0xE8, 0xFD, 0x63, 0x05, 0x62,
-0x00, 0x6A, 0x10, 0xF0, 0x24, 0x6C, 0xBC, 0xF2,
-0x90, 0x9C, 0x10, 0xF0, 0x23, 0x6B, 0xC9, 0xF7,
-0x1D, 0x4B, 0x0A, 0x72, 0x60, 0xDC, 0x0C, 0x61,
+0x00, 0x6A, 0x10, 0xF0, 0x24, 0x6C, 0x9B, 0xF6,
+0x8C, 0x9C, 0x10, 0xF0, 0x23, 0x6B, 0x89, 0xF7,
+0x15, 0x4B, 0x0A, 0x72, 0x60, 0xDC, 0x0C, 0x61,
 0x30, 0xF0, 0x21, 0x6B, 0x30, 0xF0, 0x20, 0x6A,
-0xEE, 0xF7, 0x54, 0x9A, 0xF0, 0xF4, 0x84, 0x9B,
+0xEE, 0xF7, 0x54, 0x9A, 0xD0, 0xF4, 0x94, 0x9B,
 0x01, 0x6D, 0xAB, 0xED, 0x40, 0xEA, 0x00, 0x6A,
 0x10, 0xF0, 0x24, 0x6C, 0xFF, 0x6B, 0x01, 0x4A,
-0xBC, 0xF2, 0x90, 0x9C, 0x6C, 0xEA, 0x10, 0xF0,
-0x23, 0x6B, 0xC9, 0xF7, 0x1E, 0x4B, 0x60, 0xDC,
+0x9B, 0xF6, 0x8C, 0x9C, 0x6C, 0xEA, 0x10, 0xF0,
+0x23, 0x6B, 0x89, 0xF7, 0x16, 0x4B, 0x60, 0xDC,
 0xDC, 0x17, 0x00, 0x65, 0xFB, 0x63, 0x09, 0x62,
 0x08, 0xD1, 0x07, 0xD0, 0x00, 0x6A, 0x04, 0xD2,
 0x04, 0x92, 0x01, 0x72, 0x58, 0x67, 0x04, 0xD2,
-0x10, 0xF0, 0x23, 0x6A, 0x78, 0x67, 0x2A, 0xF0,
-0x0D, 0x4A, 0x69, 0xE2, 0x10, 0xF0, 0x24, 0x6B,
-0xBC, 0xF2, 0x70, 0x9B, 0x40, 0xDB, 0x00, 0x1C,
-0x96, 0x45, 0x00, 0x18, 0x11, 0xD3, 0x00, 0x1C,
+0x10, 0xF0, 0x23, 0x6A, 0x78, 0x67, 0xE9, 0xF7,
+0x05, 0x4A, 0x69, 0xE2, 0x10, 0xF0, 0x24, 0x6B,
+0x9B, 0xF6, 0x6C, 0x9B, 0x40, 0xDB, 0x00, 0x1C,
+0x96, 0x45, 0x00, 0x18, 0xFF, 0xD2, 0x00, 0x1C,
 0x95, 0x45, 0x00, 0x1C, 0x96, 0x45, 0x30, 0xF0,
 0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A, 0x80, 0xF0,
 0x8C, 0x9A, 0x02, 0x6B, 0x8C, 0xEB, 0x09, 0x23,
 0x03, 0x6B, 0x6B, 0xEB, 0x8C, 0xEB, 0x80, 0xF0,
-0x6C, 0xDA, 0x00, 0x18, 0x4F, 0xDD, 0x00, 0x18,
-0xB1, 0xDD, 0x00, 0x1C, 0x95, 0x45, 0x00, 0x1C,
+0x6C, 0xDA, 0x00, 0x18, 0xF9, 0xDC, 0x00, 0x18,
+0x5B, 0xDD, 0x00, 0x1C, 0x95, 0x45, 0x00, 0x1C,
 0x96, 0x45, 0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1,
 0x08, 0x4A, 0x80, 0xF0, 0x8C, 0x9A, 0x04, 0x6B,
 0x8C, 0xEB, 0x09, 0x23, 0x05, 0x6B, 0x6B, 0xEB,
 0x8C, 0xEB, 0x80, 0xF0, 0x6C, 0xDA, 0x00, 0x18,
-0x7C, 0xD9, 0x00, 0x18, 0xC5, 0xD8, 0x00, 0x1C,
+0x2B, 0xD9, 0x00, 0x18, 0x9C, 0xD8, 0x00, 0x1C,
 0x95, 0x45, 0x00, 0x1C, 0x96, 0x45, 0x30, 0xF0,
 0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A, 0x68, 0xF3,
 0x94, 0xA2, 0x7F, 0x6B, 0x8C, 0xEB, 0x0D, 0x23,
 0x68, 0xF3, 0x98, 0xA2, 0x68, 0xF3, 0x7C, 0xA2,
 0x8E, 0xEB, 0x07, 0x23, 0x68, 0xF3, 0x97, 0xA2,
 0xFF, 0x6A, 0x96, 0x34, 0x4C, 0xEC, 0x00, 0x18,
-0x7A, 0xCC, 0x30, 0xF0, 0x20, 0x6A, 0x40, 0xF2,
-0x54, 0x9A, 0x02, 0x2A, 0x00, 0x18, 0x0F, 0xCE,
+0x81, 0xCC, 0x30, 0xF0, 0x20, 0x6A, 0x40, 0xF2,
+0x54, 0x9A, 0x02, 0x2A, 0x00, 0x18, 0xAA, 0xCC,
 0x00, 0x1C, 0x95, 0x45, 0x00, 0x1C, 0x96, 0x45,
 0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A,
 0x80, 0xF0, 0x8C, 0x9A, 0x10, 0x6B, 0x8C, 0xEB,
 0x0C, 0x23, 0x11, 0x6B, 0x6B, 0xEB, 0x8C, 0xEB,
 0x80, 0xF0, 0x6C, 0xDA, 0x30, 0xF0, 0x20, 0x6A,
-0xEF, 0xF6, 0x4B, 0xA2, 0x02, 0x2A, 0x80, 0x18,
+0xEF, 0xF6, 0x47, 0xA2, 0x02, 0x2A, 0x80, 0x18,
 0xE1, 0x1F, 0x00, 0x1C, 0x95, 0x45, 0x00, 0x1C,
 0x96, 0x45, 0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1,
 0x08, 0x4A, 0x80, 0xF0, 0x8C, 0x9A, 0xFF, 0x6B,
 0x01, 0x4B, 0x8C, 0xEB, 0x08, 0x23, 0xFF, 0x6B,
 0x02, 0x4B, 0x6B, 0xEB, 0x8C, 0xEB, 0x80, 0xF0,
-0x6C, 0xDA, 0x00, 0x18, 0x8F, 0xD7, 0x00, 0x1C,
+0x6C, 0xDA, 0x00, 0x18, 0x66, 0xD7, 0x00, 0x1C,
 0x95, 0x45, 0x00, 0x1C, 0x96, 0x45, 0x30, 0xF0,
 0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A, 0x80, 0xF0,
 0x8C, 0x9A, 0x02, 0xF0, 0x00, 0x6B, 0x8C, 0xEB,
 0x08, 0x23, 0x02, 0xF0, 0x01, 0x6B, 0x6B, 0xEB,
 0x8C, 0xEB, 0x80, 0xF0, 0x6C, 0xDA, 0x00, 0x18,
-0xAD, 0xEA, 0x00, 0x1C, 0x95, 0x45, 0x00, 0x1C,
+0x4F, 0xEA, 0x00, 0x1C, 0x95, 0x45, 0x00, 0x1C,
 0x96, 0x45, 0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1,
-0x08, 0x4A, 0x10, 0xF0, 0x24, 0x6B, 0x5C, 0xF3,
-0x74, 0x9B, 0x80, 0xF0, 0x8C, 0x9A, 0x8C, 0xEB,
-0x20, 0x23, 0x10, 0xF0, 0x24, 0x6B, 0x9C, 0xF4,
-0x64, 0x9B, 0x8C, 0xEB, 0x68, 0xF3, 0x94, 0xA2,
+0x08, 0x4A, 0x10, 0xF0, 0x24, 0x6B, 0x5B, 0xF7,
+0x64, 0x9B, 0x80, 0xF0, 0x8C, 0x9A, 0x8C, 0xEB,
+0x20, 0x23, 0x10, 0xF0, 0x24, 0x6B, 0x7C, 0xF0,
+0x60, 0x9B, 0x8C, 0xEB, 0x68, 0xF3, 0x94, 0xA2,
 0x80, 0xF0, 0x6C, 0xDA, 0x7F, 0x6B, 0x8C, 0xEB,
 0x07, 0x2B, 0x68, 0xF3, 0x5C, 0xA2, 0x0C, 0x72,
-0x03, 0x61, 0x00, 0x18, 0xE4, 0xDA, 0x0D, 0x10,
+0x03, 0x61, 0x00, 0x18, 0x93, 0xDA, 0x0D, 0x10,
 0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A,
 0x10, 0xF0, 0x24, 0x6C, 0x80, 0xF0, 0x6C, 0x9A,
-0x5C, 0xF3, 0x94, 0x9C, 0x8D, 0xEB, 0x80, 0xF0,
+0x5B, 0xF7, 0x84, 0x9C, 0x8D, 0xEB, 0x80, 0xF0,
 0x6C, 0xDA, 0x00, 0x1C, 0x95, 0x45, 0x30, 0xF0,
 0x20, 0x6A, 0xCC, 0xF1, 0x53, 0xA2, 0x0F, 0x2A,
-0x10, 0xF0, 0x24, 0x6A, 0x9C, 0xF4, 0x48, 0x9A,
+0x10, 0xF0, 0x24, 0x6A, 0x7C, 0xF0, 0x44, 0x9A,
 0x01, 0x6B, 0x80, 0xA2, 0x8C, 0xEB, 0x07, 0x23,
 0x80, 0xA2, 0xFE, 0x6B, 0x8C, 0xEB, 0x60, 0xC2,
-0x03, 0x6C, 0x00, 0x18, 0x88, 0xDE, 0x30, 0xF0,
+0x03, 0x6C, 0x00, 0x18, 0x32, 0xDE, 0x30, 0xF0,
 0x20, 0x69, 0xEF, 0xF4, 0x08, 0x49, 0x00, 0xF2,
-0x04, 0xA1, 0x01, 0x6A, 0x4E, 0xE8, 0x05, 0x28,
-0x0B, 0x6C, 0x00, 0x18, 0x88, 0xDE, 0x00, 0xF2,
-0x04, 0xC1, 0x30, 0xF0, 0x21, 0x6B, 0x30, 0xF0,
-0x20, 0x6A, 0xF0, 0xF4, 0x84, 0x9B, 0xEE, 0xF7,
+0x00, 0xA1, 0x01, 0x6A, 0x4E, 0xE8, 0x05, 0x28,
+0x0B, 0x6C, 0x00, 0x18, 0x32, 0xDE, 0x00, 0xF2,
+0x00, 0xC1, 0x30, 0xF0, 0x21, 0x6B, 0x30, 0xF0,
+0x20, 0x6A, 0xD0, 0xF4, 0x94, 0x9B, 0xEE, 0xF7,
 0x58, 0x9A, 0x40, 0xEA, 0xFD, 0x16, 0x00, 0x65,
-0x10, 0xF0, 0x24, 0x6A, 0x9C, 0xF4, 0x6C, 0x9A,
+0x10, 0xF0, 0x24, 0x6A, 0x7C, 0xF0, 0x68, 0x9A,
 0xDF, 0x6A, 0x80, 0xA3, 0x8C, 0xEA, 0x40, 0xC3,
 0x20, 0xE8, 0x00, 0x65, 0x10, 0xF0, 0x24, 0x6B,
-0x9C, 0xF4, 0xAC, 0x9B, 0xFF, 0x6A, 0x20, 0x6E,
+0x7C, 0xF0, 0xA8, 0x9B, 0xFF, 0x6A, 0x20, 0x6E,
 0x60, 0xA5, 0x4C, 0xEC, 0x4C, 0xEB, 0xCD, 0xEB,
 0x4C, 0xEB, 0x07, 0xF7, 0x01, 0x4A, 0x4D, 0xEC,
-0x10, 0xF0, 0x24, 0x6A, 0x9C, 0xF4, 0x50, 0x9A,
+0x10, 0xF0, 0x24, 0x6A, 0x7C, 0xF0, 0x4C, 0x9A,
 0x60, 0xC5, 0x80, 0xCA, 0x20, 0xE8, 0x00, 0x65,
-0x10, 0xF0, 0x24, 0x6A, 0x9C, 0xF4, 0x50, 0x9A,
+0x10, 0xF0, 0x24, 0x6A, 0x7C, 0xF0, 0x4C, 0x9A,
 0x68, 0xF0, 0x04, 0x6B, 0x60, 0xCA, 0x20, 0xE8,
 0x03, 0x6F, 0x8C, 0xEF, 0x64, 0x67, 0x46, 0x67,
 0x04, 0x27, 0x07, 0x10, 0xA0, 0xDB, 0xFC, 0x4A,
@@ -21122,49 +21088,49 @@ u8 array_mp_8821c_fw_nic[] = {
 0x4B, 0xE3, 0x20, 0xE8, 0x01, 0x4C, 0x01, 0x4D,
 0xF6, 0x2E, 0x00, 0x6A, 0x20, 0xE8, 0x00, 0x65,
 0x06, 0x2C, 0x64, 0x6B, 0x30, 0xF0, 0x21, 0x6A,
-0xB0, 0xF3, 0x64, 0xDA, 0x04, 0x10, 0x30, 0xF0,
-0x21, 0x6A, 0xB0, 0xF3, 0x84, 0xDA, 0x30, 0xF0,
-0x21, 0x6A, 0xB0, 0xF3, 0x44, 0x9A, 0x28, 0x72,
+0xB0, 0xF3, 0x60, 0xDA, 0x04, 0x10, 0x30, 0xF0,
+0x21, 0x6A, 0xB0, 0xF3, 0x80, 0xDA, 0x30, 0xF0,
+0x21, 0x6A, 0xB0, 0xF3, 0x40, 0x9A, 0x28, 0x72,
 0x2D, 0x60, 0x29, 0x5A, 0x07, 0x60, 0x14, 0x72,
 0x19, 0x60, 0x19, 0x72, 0x1F, 0x60, 0x0A, 0x72,
 0x0D, 0x60, 0x20, 0xE8, 0x50, 0x72, 0x32, 0x60,
 0x51, 0x5A, 0x03, 0x60, 0x32, 0x72, 0x26, 0x60,
 0x20, 0xE8, 0x64, 0x72, 0x33, 0x60, 0xC8, 0x72,
 0x39, 0x60, 0x20, 0xE8, 0x02, 0x6B, 0x30, 0xF0,
-0x21, 0x6A, 0xB0, 0xF3, 0x68, 0xDA, 0xE0, 0xF7,
+0x21, 0x6A, 0xB0, 0xF3, 0x64, 0xDA, 0xE0, 0xF7,
 0x1E, 0x4B, 0x39, 0x10, 0x03, 0x6B, 0x30, 0xF0,
-0x21, 0x6A, 0xB0, 0xF3, 0x68, 0xDA, 0xE1, 0xF3,
+0x21, 0x6A, 0xB0, 0xF3, 0x64, 0xDA, 0xE1, 0xF3,
 0x1D, 0x4B, 0x31, 0x10, 0x09, 0x6B, 0x30, 0xF0,
-0x21, 0x6A, 0xB0, 0xF3, 0x68, 0xDA, 0xE4, 0xF3,
+0x21, 0x6A, 0xB0, 0xF3, 0x64, 0xDA, 0xE4, 0xF3,
 0x17, 0x4B, 0x29, 0x10, 0x05, 0x6B, 0x30, 0xF0,
-0x21, 0x6A, 0xB0, 0xF3, 0x68, 0xDA, 0xE2, 0xF3,
+0x21, 0x6A, 0xB0, 0xF3, 0x64, 0xDA, 0xE2, 0xF3,
 0x1B, 0x4B, 0x21, 0x10, 0x11, 0x6B, 0x30, 0xF0,
-0x21, 0x6A, 0xB0, 0xF3, 0x68, 0xDA, 0xE8, 0xF3,
+0x21, 0x6A, 0xB0, 0xF3, 0x64, 0xDA, 0xE8, 0xF3,
 0x0F, 0x4B, 0x19, 0x10, 0x0A, 0x6B, 0x30, 0xF0,
-0x21, 0x6A, 0xB0, 0xF3, 0x68, 0xDA, 0xE4, 0xF7,
+0x21, 0x6A, 0xB0, 0xF3, 0x64, 0xDA, 0xE4, 0xF7,
 0x16, 0x4B, 0x11, 0x10, 0x22, 0x6B, 0x30, 0xF0,
-0x21, 0x6A, 0xB0, 0xF3, 0x68, 0xDA, 0x11, 0xF0,
+0x21, 0x6A, 0xB0, 0xF3, 0x64, 0xDA, 0x11, 0xF0,
 0x00, 0x6B, 0x09, 0x10, 0x43, 0x6B, 0x30, 0xF0,
-0x21, 0x6A, 0xB0, 0xF3, 0x68, 0xDA, 0x10, 0xF0,
-0x24, 0x6A, 0x9C, 0xF4, 0x74, 0x9A, 0x30, 0xF0,
-0x21, 0x6A, 0xB0, 0xF3, 0x6C, 0xDA, 0x20, 0xE8,
-0x30, 0xF0, 0x21, 0x6A, 0xB0, 0xF3, 0x44, 0x9A,
+0x21, 0x6A, 0xB0, 0xF3, 0x64, 0xDA, 0x10, 0xF0,
+0x24, 0x6A, 0x7C, 0xF0, 0x70, 0x9A, 0x30, 0xF0,
+0x21, 0x6A, 0xB0, 0xF3, 0x68, 0xDA, 0x20, 0xE8,
+0x30, 0xF0, 0x21, 0x6A, 0xB0, 0xF3, 0x40, 0x9A,
 0x20, 0xE8, 0x00, 0x65, 0xFF, 0x63, 0x0C, 0x24,
-0x30, 0xF0, 0x21, 0x6A, 0xB0, 0xF3, 0x4C, 0x9A,
+0x30, 0xF0, 0x21, 0x6A, 0xB0, 0xF3, 0x48, 0x9A,
 0x58, 0xEC, 0x12, 0xEC, 0x00, 0xD4, 0x00, 0x92,
 0xFF, 0x4A, 0x00, 0xD2, 0x00, 0x92, 0xFB, 0x2A,
 0x01, 0x63, 0x20, 0xE8, 0xFF, 0x63, 0x0D, 0x24,
-0x30, 0xF0, 0x21, 0x6A, 0xB0, 0xF3, 0x48, 0x9A,
+0x30, 0xF0, 0x21, 0x6A, 0xB0, 0xF3, 0x44, 0x9A,
 0x58, 0xEC, 0x12, 0xEC, 0x00, 0xD4, 0x00, 0x92,
 0x04, 0x22, 0x00, 0x92, 0xFF, 0x4A, 0x00, 0xD2,
 0xFA, 0x17, 0x01, 0x63, 0x20, 0xE8, 0x00, 0x65,
-0xFD, 0x63, 0x05, 0x62, 0x00, 0x18, 0xB9, 0xD4,
+0xFD, 0x63, 0x05, 0x62, 0x00, 0x18, 0xA7, 0xD4,
 0x05, 0x97, 0x03, 0x63, 0x00, 0xEF, 0x00, 0x65,
 0xFD, 0x63, 0x05, 0x62, 0xFF, 0x6A, 0x4C, 0xED,
-0x00, 0x18, 0xAE, 0xD4, 0x05, 0x97, 0x00, 0x6A,
+0x00, 0x18, 0x9C, 0xD4, 0x05, 0x97, 0x00, 0x6A,
 0x03, 0x63, 0x00, 0xEF, 0xFD, 0x63, 0x05, 0x62,
 0x04, 0xD0, 0xFF, 0x6A, 0x04, 0x67, 0x4C, 0xEE,
-0x00, 0x18, 0xB3, 0xD4, 0x50, 0x67, 0x05, 0x97,
+0x00, 0x18, 0xA1, 0xD4, 0x50, 0x67, 0x05, 0x97,
 0x04, 0x90, 0x03, 0x63, 0x00, 0xEF, 0x00, 0x65,
 0xFA, 0x63, 0x0B, 0x62, 0x0A, 0xD1, 0x09, 0xD0,
 0x30, 0xF0, 0x20, 0x6A, 0x05, 0xD2, 0x05, 0x93,
@@ -21174,36 +21140,36 @@ u8 array_mp_8821c_fw_nic[] = {
 0x8C, 0xEA, 0x04, 0xD2, 0x0C, 0x32, 0x69, 0xE2,
 0xA7, 0xF6, 0xD3, 0xA2, 0xEF, 0xF4, 0x08, 0x49,
 0x29, 0xE0, 0x8C, 0xEE, 0xD0, 0x36, 0x07, 0xD6,
-0x60, 0xF6, 0xD4, 0xA2, 0x03, 0x6A, 0x05, 0xD3,
+0x60, 0xF6, 0xD0, 0xA2, 0x03, 0x6A, 0x05, 0xD3,
 0x4C, 0xEE, 0x30, 0xF0, 0x20, 0x6A, 0xCE, 0xF4,
 0x70, 0x9A, 0xC0, 0x36, 0x10, 0xF0, 0x24, 0x6A,
-0x06, 0xD6, 0x9C, 0xF4, 0xD8, 0x9A, 0x01, 0x6D,
+0x06, 0xD6, 0x7C, 0xF0, 0xD4, 0x9A, 0x01, 0x6D,
 0xE3, 0xF2, 0x1F, 0x4C, 0xAB, 0xED, 0x40, 0xEB,
 0x06, 0x93, 0x07, 0x96, 0x30, 0xF0, 0x20, 0x6C,
 0xCE, 0xF4, 0x50, 0x9C, 0x6D, 0xEE, 0x04, 0x93,
 0xE3, 0xF3, 0x10, 0x6C, 0xFF, 0xF7, 0x1F, 0x6D,
 0x6D, 0xEE, 0x40, 0xEA, 0x05, 0x94, 0x30, 0xF3,
 0x40, 0x40, 0x10, 0x30, 0x01, 0xE4, 0x08, 0xF1,
-0xD0, 0x98, 0x44, 0x32, 0x29, 0xE2, 0x63, 0xAA,
+0xD0, 0x98, 0x44, 0x32, 0x29, 0xE2, 0x61, 0xAA,
 0x30, 0xF0, 0x20, 0x6C, 0x04, 0xD2, 0xC0, 0x36,
 0xCE, 0xF4, 0x50, 0x9C, 0xC0, 0x36, 0x01, 0x6D,
 0x6D, 0xEE, 0xE3, 0xF3, 0x08, 0x6C, 0xAB, 0xED,
-0x40, 0xEA, 0x04, 0x93, 0x43, 0xAB, 0x01, 0x72,
-0x04, 0x61, 0x01, 0x6C, 0x60, 0xF6, 0x97, 0xC1,
-0x03, 0x10, 0x00, 0x6A, 0x60, 0xF6, 0x57, 0xC1,
+0x40, 0xEA, 0x04, 0x93, 0x41, 0xAB, 0x01, 0x72,
+0x04, 0x61, 0x01, 0x6C, 0x60, 0xF6, 0x93, 0xC1,
+0x03, 0x10, 0x00, 0x6A, 0x60, 0xF6, 0x53, 0xC1,
 0x0B, 0x97, 0x0A, 0x91, 0x09, 0x90, 0x06, 0x63,
 0x00, 0xEF, 0x00, 0x65, 0xF9, 0x63, 0x0D, 0x62,
 0x0C, 0xD1, 0x0B, 0xD0, 0xFF, 0x6A, 0x8C, 0xEA,
 0x04, 0xD2, 0x00, 0x69, 0x30, 0xF0, 0x20, 0x68,
-0x10, 0xF0, 0x24, 0x6B, 0x9C, 0xF4, 0xD8, 0x9B,
+0x10, 0xF0, 0x24, 0x6B, 0x7C, 0xF0, 0xD4, 0x9B,
 0xCE, 0xF4, 0x50, 0x98, 0x01, 0x6D, 0x03, 0xF3,
 0x00, 0x6C, 0xAB, 0xED, 0x40, 0xEA, 0xCE, 0xF4,
 0x50, 0x98, 0x01, 0x6D, 0x23, 0xF3, 0x0C, 0x6C,
 0xAB, 0xED, 0x07, 0x6E, 0x40, 0xEA, 0x10, 0xF0,
-0x24, 0x6B, 0x1C, 0xF3, 0x10, 0x4B, 0xC0, 0x9B,
+0x24, 0x6B, 0xFB, 0xF6, 0x0C, 0x4B, 0xC0, 0x9B,
 0xCE, 0xF4, 0x50, 0x98, 0x01, 0x6D, 0x23, 0xF3,
 0x18, 0x6C, 0xAB, 0xED, 0x40, 0xEA, 0x10, 0xF0,
-0x24, 0x6B, 0x1C, 0xF3, 0x10, 0x4B, 0xC0, 0x9B,
+0x24, 0x6B, 0xFB, 0xF6, 0x0C, 0x4B, 0xC0, 0x9B,
 0xCE, 0xF4, 0x50, 0x98, 0x01, 0x6D, 0x23, 0xF3,
 0x1C, 0x6C, 0xAB, 0xED, 0x40, 0xEA, 0xCE, 0xF4,
 0x50, 0x98, 0x01, 0x6D, 0xC3, 0xF3, 0x0C, 0x6C,
@@ -21213,10 +21179,10 @@ u8 array_mp_8821c_fw_nic[] = {
 0x03, 0x6E, 0x07, 0x10, 0xCE, 0xF4, 0x50, 0x98,
 0x03, 0xF3, 0x0C, 0x6C, 0x06, 0xF0, 0x00, 0x6D,
 0x01, 0x6E, 0x40, 0xEA, 0x10, 0xF0, 0x24, 0x6B,
-0x30, 0xF0, 0x20, 0x6A, 0xBC, 0xF4, 0xA4, 0x9B,
+0x30, 0xF0, 0x20, 0x6A, 0x9C, 0xF0, 0xA0, 0x9B,
 0xCE, 0xF4, 0x50, 0x9A, 0xC3, 0xF3, 0x14, 0x6C,
 0x10, 0x6E, 0x40, 0xEA, 0x04, 0x95, 0x10, 0xF0,
-0x24, 0x6A, 0xBC, 0xF4, 0x48, 0x9A, 0xAC, 0x34,
+0x24, 0x6A, 0x9C, 0xF0, 0x44, 0x9A, 0xAC, 0x34,
 0x91, 0xE1, 0x30, 0xF0, 0x20, 0x6B, 0x90, 0x35,
 0xC0, 0xF1, 0x08, 0x4B, 0x90, 0x34, 0xB5, 0xE3,
 0x8D, 0xE3, 0x46, 0xE9, 0xE7, 0xF6, 0x0C, 0x4D,
@@ -21251,8 +21217,8 @@ u8 array_mp_8821c_fw_nic[] = {
 0x0C, 0x91, 0x0B, 0x90, 0x07, 0x63, 0x00, 0xEF,
 0xFB, 0x63, 0x09, 0x62, 0x08, 0xD1, 0x07, 0xD0,
 0xFF, 0x6A, 0x30, 0xF0, 0x20, 0x68, 0x10, 0xF0,
-0x24, 0x6B, 0x4C, 0xEC, 0x4C, 0xED, 0x5C, 0xF3,
-0x10, 0x4B, 0x00, 0x6A, 0xC0, 0xF1, 0x08, 0x48,
+0x24, 0x6B, 0x4C, 0xEC, 0x4C, 0xED, 0x5B, 0xF7,
+0x00, 0x4B, 0x00, 0x6A, 0xC0, 0xF1, 0x08, 0x48,
 0x30, 0xF0, 0x20, 0x69, 0x05, 0xD5, 0x28, 0xF1,
 0x4D, 0xC0, 0xA0, 0x9B, 0xCE, 0xF4, 0x50, 0x99,
 0x04, 0xD4, 0x00, 0x6E, 0xE3, 0xF3, 0x10, 0x6C,
@@ -21261,655 +21227,623 @@ u8 array_mp_8821c_fw_nic[] = {
 0x51, 0x10, 0x28, 0xF1, 0x4C, 0xA0, 0x4E, 0x22,
 0x87, 0xF6, 0x70, 0x98, 0xE7, 0xF6, 0x44, 0x98,
 0x4E, 0xEB, 0x04, 0xD3, 0x1F, 0x2B, 0x05, 0x95,
-0x00, 0x6C, 0x00, 0x18, 0x4F, 0xD5, 0x00, 0x6C,
-0x00, 0x18, 0x1A, 0xD5, 0x10, 0xF0, 0x24, 0x6B,
-0x5C, 0xF3, 0x10, 0x4B, 0xCE, 0xF4, 0x50, 0x99,
+0x00, 0x6C, 0x00, 0x18, 0x3D, 0xD5, 0x00, 0x6C,
+0x00, 0x18, 0x08, 0xD5, 0x10, 0xF0, 0x24, 0x6B,
+0x5B, 0xF7, 0x00, 0x4B, 0xCE, 0xF4, 0x50, 0x99,
 0xA0, 0x9B, 0xE3, 0xF3, 0x10, 0x6C, 0x01, 0x6E,
 0x40, 0xEA, 0x30, 0xF0, 0x21, 0x6A, 0x50, 0xF3,
-0x5F, 0xA2, 0x05, 0x22, 0x5D, 0x67, 0x67, 0x42,
+0x5B, 0xA2, 0x05, 0x22, 0x5D, 0x67, 0x67, 0x42,
 0x09, 0x4B, 0x40, 0xA3, 0x01, 0x10, 0x01, 0x6A,
 0x28, 0xF1, 0x4D, 0xC0, 0x30, 0xF0, 0x20, 0x68,
 0xC0, 0xF1, 0x08, 0x48, 0x87, 0xF6, 0x30, 0x98,
 0xE7, 0xF6, 0x48, 0x98, 0x4E, 0xE9, 0x1E, 0x29,
-0x05, 0x95, 0x01, 0x6C, 0x00, 0x18, 0x4F, 0xD5,
-0x01, 0x6C, 0x00, 0x18, 0x1A, 0xD5, 0x10, 0xF0,
+0x05, 0x95, 0x01, 0x6C, 0x00, 0x18, 0x3D, 0xD5,
+0x01, 0x6C, 0x00, 0x18, 0x08, 0xD5, 0x10, 0xF0,
 0x24, 0x6B, 0x30, 0xF0, 0x20, 0x6A, 0xCE, 0xF4,
-0x50, 0x9A, 0x5C, 0xF3, 0xB0, 0x9B, 0xE3, 0xF3,
+0x50, 0x9A, 0x5B, 0xF7, 0xA0, 0x9B, 0xE3, 0xF3,
 0x10, 0x6C, 0x01, 0x6E, 0x40, 0xEA, 0x30, 0xF0,
-0x21, 0x6A, 0x50, 0xF3, 0x5F, 0xA2, 0x04, 0x2A,
+0x21, 0x6A, 0x50, 0xF3, 0x5B, 0xA2, 0x04, 0x2A,
 0x01, 0x6A, 0x28, 0xF1, 0x4D, 0xC0, 0x02, 0x10,
 0x28, 0xF1, 0x2D, 0xC0, 0x30, 0xF0, 0x20, 0x6A,
 0xE8, 0xF2, 0x55, 0xA2, 0x09, 0x97, 0x08, 0x91,
 0x07, 0x90, 0x05, 0x63, 0x00, 0xEF, 0x00, 0x65,
 0xFD, 0x63, 0x05, 0x62, 0x30, 0xF0, 0x20, 0x6A,
 0xE8, 0xF2, 0x56, 0xA2, 0x05, 0x22, 0x00, 0x6C,
-0x01, 0x6D, 0x00, 0x18, 0xC0, 0xD5, 0x04, 0x10,
-0x00, 0x6C, 0x01, 0x6D, 0x00, 0x18, 0x4F, 0xD5,
+0x01, 0x6D, 0x00, 0x18, 0xAE, 0xD5, 0x04, 0x10,
+0x00, 0x6C, 0x01, 0x6D, 0x00, 0x18, 0x3D, 0xD5,
 0x05, 0x97, 0x03, 0x63, 0x00, 0xEF, 0x00, 0x65,
 0xFC, 0x63, 0x07, 0x62, 0x06, 0xD1, 0x05, 0xD0,
-0x10, 0xF0, 0x24, 0x6A, 0x25, 0x67, 0x5C, 0xF3,
-0xB0, 0x9A, 0xFF, 0x68, 0x8C, 0xE8, 0xA1, 0xF4,
-0x18, 0x6C, 0x00, 0x18, 0x42, 0xE7, 0x28, 0x22,
+0x10, 0xF0, 0x24, 0x6A, 0x25, 0x67, 0x5B, 0xF7,
+0xA0, 0x9A, 0xFF, 0x68, 0x8C, 0xE8, 0xA1, 0xF4,
+0x18, 0x6C, 0x00, 0x18, 0xE4, 0xE6, 0x28, 0x22,
 0x27, 0x20, 0x03, 0x21, 0x01, 0x71, 0x12, 0x60,
-0x34, 0x10, 0x10, 0xF0, 0x24, 0x6A, 0xDC, 0xF4,
-0x14, 0x9A, 0x00, 0x6C, 0x01, 0x6D, 0xD0, 0x67,
-0x00, 0x18, 0x8D, 0xE7, 0x0E, 0x6B, 0x6B, 0xEB,
+0x34, 0x10, 0x10, 0xF0, 0x24, 0x6A, 0xBC, 0xF0,
+0x10, 0x9A, 0x00, 0x6C, 0x01, 0x6D, 0xD0, 0x67,
+0x00, 0x18, 0x2F, 0xE7, 0x0E, 0x6B, 0x6B, 0xEB,
 0x4C, 0xEB, 0x00, 0x6C, 0x01, 0x6D, 0xD0, 0x67,
 0x09, 0x6F, 0x10, 0x10, 0x10, 0xF0, 0x24, 0x6A,
-0xDC, 0xF4, 0x14, 0x9A, 0x00, 0x6C, 0x01, 0x6D,
-0xD0, 0x67, 0x00, 0x18, 0x8D, 0xE7, 0x0E, 0x6B,
+0xBC, 0xF0, 0x10, 0x9A, 0x00, 0x6C, 0x01, 0x6D,
+0xD0, 0x67, 0x00, 0x18, 0x2F, 0xE7, 0x0E, 0x6B,
 0x6B, 0xEB, 0x4C, 0xEB, 0x00, 0x6C, 0x01, 0x6D,
 0xD0, 0x67, 0x05, 0x6F, 0x6D, 0xEF, 0x0F, 0x10,
-0x10, 0xF0, 0x24, 0x6A, 0xDC, 0xF4, 0x14, 0x9A,
+0x10, 0xF0, 0x24, 0x6A, 0xBC, 0xF0, 0x10, 0x9A,
 0x00, 0x6C, 0x01, 0x6D, 0xD0, 0x67, 0x00, 0x18,
-0x8D, 0xE7, 0x02, 0x6F, 0xEB, 0xEF, 0x00, 0x6C,
+0x2F, 0xE7, 0x02, 0x6F, 0xEB, 0xEF, 0x00, 0x6C,
 0x01, 0x6D, 0xD0, 0x67, 0x4C, 0xEF, 0x00, 0x18,
-0xA0, 0xE7, 0x07, 0x97, 0x06, 0x91, 0x05, 0x90,
+0x42, 0xE7, 0x07, 0x97, 0x06, 0x91, 0x05, 0x90,
 0x04, 0x63, 0x00, 0xEF, 0xFB, 0x63, 0x09, 0x62,
 0x27, 0x6A, 0x7D, 0x67, 0x50, 0xC3, 0x09, 0x6A,
 0x4F, 0xCB, 0x08, 0x6A, 0x52, 0xC3, 0x30, 0xF0,
 0x20, 0x6A, 0xEF, 0xF4, 0x08, 0x4A, 0xC0, 0xF0,
-0x7E, 0xA2, 0x9D, 0x67, 0x73, 0xC4, 0xC0, 0xF0,
-0x7F, 0xA2, 0x74, 0xC4, 0xE0, 0xF0, 0x66, 0xA2,
-0x75, 0xC4, 0xE0, 0xF0, 0x65, 0xA2, 0x76, 0xC4,
-0xE0, 0xF0, 0x64, 0xA2, 0x77, 0xC4, 0xE0, 0xF0,
-0x6D, 0xA2, 0x78, 0xC4, 0xE0, 0xF0, 0x6E, 0xA2,
-0xE0, 0xF0, 0x4F, 0xA2, 0x79, 0xC4, 0x5A, 0xC4,
+0x7A, 0xA2, 0x9D, 0x67, 0x73, 0xC4, 0xC0, 0xF0,
+0x7B, 0xA2, 0x74, 0xC4, 0xE0, 0xF0, 0x62, 0xA2,
+0x75, 0xC4, 0xE0, 0xF0, 0x61, 0xA2, 0x76, 0xC4,
+0xE0, 0xF0, 0x60, 0xA2, 0x77, 0xC4, 0xE0, 0xF0,
+0x69, 0xA2, 0x78, 0xC4, 0xE0, 0xF0, 0x6A, 0xA2,
+0xE0, 0xF0, 0x4B, 0xA2, 0x79, 0xC4, 0x5A, 0xC4,
 0x30, 0xF0, 0x20, 0x6A, 0xAE, 0xF2, 0x58, 0x9A,
 0x04, 0x04, 0x40, 0xEA, 0x09, 0x97, 0x05, 0x63,
 0x00, 0xEF, 0x00, 0x65, 0xFD, 0x63, 0x05, 0x62,
-0x30, 0xF0, 0x21, 0x6A, 0xD0, 0xF4, 0x69, 0xA2,
-0x0C, 0x23, 0x00, 0x6B, 0xD0, 0xF4, 0x69, 0xC2,
 0x30, 0xF0, 0x20, 0x6A, 0xAE, 0xF3, 0x48, 0x9A,
-0x30, 0xF0, 0x21, 0x6C, 0xD0, 0xF4, 0x04, 0x4C,
 0x40, 0xEA, 0x05, 0x97, 0x03, 0x63, 0x00, 0xEF,
-0xFD, 0x63, 0x05, 0x62, 0x04, 0xD0, 0x30, 0xF0,
-0x20, 0x6A, 0x4E, 0xF2, 0x50, 0x9A, 0x04, 0x67,
-0x30, 0xF0, 0x21, 0x6C, 0xD0, 0xF4, 0x04, 0x4C,
-0xB0, 0x67, 0x05, 0x6E, 0x40, 0xEA, 0x60, 0xA0,
-0x01, 0x6A, 0x4C, 0xEB, 0x05, 0x23, 0x30, 0xF0,
-0x21, 0x6B, 0xD0, 0xF4, 0x49, 0xC3, 0x06, 0x10,
-0x30, 0xF0, 0x20, 0x6A, 0xAE, 0xF3, 0x48, 0x9A,
-0x90, 0x67, 0x40, 0xEA, 0x05, 0x97, 0x04, 0x90,
-0x03, 0x63, 0x00, 0xEF, 0xFD, 0x63, 0x05, 0x62,
+0xFD, 0x63, 0x05, 0x62, 0x30, 0xF0, 0x20, 0x6A,
+0xCE, 0xF3, 0x44, 0x9A, 0xC4, 0x67, 0x01, 0x6D,
+0x23, 0x6C, 0x40, 0xEA, 0x05, 0x97, 0x03, 0x63,
+0x00, 0xEF, 0x00, 0x65, 0xFD, 0x63, 0x05, 0x62,
 0x30, 0xF0, 0x20, 0x6A, 0xCE, 0xF3, 0x44, 0x9A,
-0xC4, 0x67, 0x01, 0x6D, 0x23, 0x6C, 0x40, 0xEA,
+0xC4, 0x67, 0x01, 0x6D, 0x17, 0x6C, 0x40, 0xEA,
 0x05, 0x97, 0x03, 0x63, 0x00, 0xEF, 0x00, 0x65,
 0xFD, 0x63, 0x05, 0x62, 0x30, 0xF0, 0x20, 0x6A,
 0xCE, 0xF3, 0x44, 0x9A, 0xC4, 0x67, 0x01, 0x6D,
-0x17, 0x6C, 0x40, 0xEA, 0x05, 0x97, 0x03, 0x63,
+0x1B, 0x6C, 0x40, 0xEA, 0x05, 0x97, 0x03, 0x63,
+0x00, 0xEF, 0x00, 0x65, 0x30, 0xF0, 0x20, 0x6B,
+0xC0, 0xF1, 0x08, 0x4B, 0xC0, 0xA4, 0xA9, 0xF0,
+0xEF, 0xA3, 0x02, 0x6A, 0x01, 0x6D, 0x4B, 0xEA,
+0xAC, 0xEE, 0xEC, 0xEA, 0xCD, 0xEA, 0xA9, 0xF0,
+0x4F, 0xC3, 0x80, 0xA4, 0x86, 0x34, 0xAC, 0xEC,
+0x84, 0x35, 0x03, 0x6C, 0x8B, 0xEC, 0x4C, 0xEC,
+0xAD, 0xEC, 0xA9, 0xF0, 0x8F, 0xC3, 0x20, 0xE8,
+0xFD, 0x63, 0x05, 0x62, 0x30, 0xF0, 0x20, 0x6A,
+0xCE, 0xF3, 0x44, 0x9A, 0xC4, 0x67, 0x03, 0x6D,
+0x11, 0x6C, 0x40, 0xEA, 0x05, 0x97, 0x03, 0x63,
+0x00, 0xEF, 0x00, 0x65, 0xFC, 0x63, 0x07, 0x62,
+0x40, 0xA4, 0x7D, 0x67, 0x07, 0x6D, 0x50, 0xC3,
+0x41, 0xA4, 0x04, 0x06, 0x51, 0xC3, 0x42, 0xA4,
+0x52, 0xC3, 0x43, 0xA4, 0x53, 0xC3, 0x44, 0xA4,
+0x30, 0x6C, 0x54, 0xC3, 0x00, 0x6A, 0x55, 0xC3,
+0x56, 0xC3, 0x30, 0xF0, 0x20, 0x6A, 0xCE, 0xF3,
+0x44, 0x9A, 0x40, 0xEA, 0x07, 0x97, 0x04, 0x63,
 0x00, 0xEF, 0x00, 0x65, 0xFD, 0x63, 0x05, 0x62,
 0x30, 0xF0, 0x20, 0x6A, 0xCE, 0xF3, 0x44, 0x9A,
-0xC4, 0x67, 0x01, 0x6D, 0x1B, 0x6C, 0x40, 0xEA,
+0xC4, 0x67, 0x01, 0x6D, 0x28, 0x6C, 0x40, 0xEA,
 0x05, 0x97, 0x03, 0x63, 0x00, 0xEF, 0x00, 0x65,
-0x30, 0xF0, 0x20, 0x6B, 0xC0, 0xF1, 0x08, 0x4B,
-0xC0, 0xA4, 0xA9, 0xF0, 0xEF, 0xA3, 0x02, 0x6A,
-0x01, 0x6D, 0x4B, 0xEA, 0xAC, 0xEE, 0xEC, 0xEA,
-0xCD, 0xEA, 0xA9, 0xF0, 0x4F, 0xC3, 0x80, 0xA4,
-0x86, 0x34, 0xAC, 0xEC, 0x84, 0x35, 0x03, 0x6C,
-0x8B, 0xEC, 0x4C, 0xEC, 0xAD, 0xEC, 0xA9, 0xF0,
-0x8F, 0xC3, 0x20, 0xE8, 0xFD, 0x63, 0x05, 0x62,
+0xFC, 0x63, 0x07, 0x62, 0x61, 0xA4, 0xBD, 0x67,
+0x40, 0xA4, 0x70, 0xC5, 0x62, 0xA4, 0x0D, 0x5A,
+0x71, 0xC5, 0x63, 0xA4, 0x72, 0xC5, 0x64, 0xA4,
+0x73, 0xC5, 0x65, 0xA4, 0x74, 0xC5, 0x66, 0xA4,
+0xFF, 0x6C, 0x75, 0xC5, 0x80, 0xF0, 0x14, 0x60,
+0x10, 0xF0, 0x24, 0x6B, 0x48, 0x32, 0xFB, 0xF4,
+0x08, 0x4B, 0x4D, 0xE3, 0x40, 0x9B, 0x00, 0xEA,
+0x2A, 0x6C, 0x08, 0x10, 0x29, 0x6C, 0x02, 0x6D,
+0x88, 0x10, 0x31, 0x6C, 0x85, 0x10, 0x32, 0x6C,
+0x83, 0x10, 0x33, 0x6C, 0x06, 0x6D, 0x81, 0x10,
+0x30, 0xF0, 0x20, 0x6A, 0xCE, 0xF3, 0x50, 0x9A,
+0x04, 0x04, 0x40, 0xEA, 0x80, 0x10, 0x9D, 0x67,
+0x70, 0xA4, 0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1,
+0x08, 0x4A, 0xC9, 0xF0, 0x74, 0xC2, 0x71, 0xA4,
+0xC9, 0xF0, 0x75, 0xC2, 0x72, 0xA4, 0xC9, 0xF0,
+0x76, 0xC2, 0x73, 0xA4, 0xC9, 0xF0, 0x77, 0xC2,
+0x74, 0xA4, 0xC9, 0xF0, 0x78, 0xC2, 0x6B, 0x10,
+0xBD, 0x67, 0x50, 0xA5, 0x30, 0xF0, 0x20, 0x6B,
+0xEF, 0xF4, 0x08, 0x4B, 0x93, 0xA5, 0xC0, 0xF0,
+0x58, 0xC3, 0x54, 0xA5, 0x80, 0x34, 0x80, 0x34,
+0x00, 0xF6, 0x40, 0x32, 0x8D, 0xEA, 0x91, 0xA5,
+0x8D, 0xEA, 0x92, 0xA5, 0x80, 0x34, 0x8D, 0xEA,
+0xC0, 0xF0, 0x54, 0xDB, 0x54, 0x10, 0x00, 0x18,
+0x1F, 0xD6, 0x51, 0x10, 0x7D, 0x67, 0x90, 0xA3,
+0x30, 0xF0, 0x20, 0x6A, 0x01, 0x6B, 0x84, 0x34,
+0xEF, 0xF4, 0x08, 0x4A, 0x6D, 0xEC, 0xE0, 0xF0,
+0x83, 0xC2, 0xE0, 0xF0, 0x83, 0xA2, 0x86, 0x35,
+0x1E, 0x55, 0x05, 0x60, 0x8C, 0xEB, 0x3C, 0x6C,
+0x8D, 0xEB, 0xE0, 0xF0, 0x63, 0xC2, 0x30, 0xF0,
+0x20, 0x6A, 0xEF, 0xF4, 0x08, 0x4A, 0xE0, 0xF0,
+0x63, 0xA2, 0x66, 0x34, 0x51, 0x54, 0x33, 0x61,
+0x01, 0x6C, 0x6C, 0xEC, 0x60, 0x6B, 0x6B, 0xEB,
+0x6D, 0xEC, 0xE0, 0xF0, 0x83, 0xC2, 0x2B, 0x10,
+0x9D, 0x67, 0x70, 0xA4, 0x30, 0xF0, 0x20, 0x6A,
+0xCF, 0xF5, 0x6C, 0xC2, 0x24, 0x10, 0xBD, 0x67,
+0x50, 0xA5, 0x3F, 0x6B, 0x4C, 0xEB, 0x68, 0x33,
+0x5A, 0x32, 0x6D, 0xEA, 0x30, 0xF0, 0x20, 0x6B,
+0xCF, 0xF5, 0x4E, 0xC3, 0x18, 0x10, 0xBD, 0x67,
+0x50, 0xA5, 0x30, 0xF0, 0x20, 0x6B, 0xEF, 0xF4,
+0x08, 0x4B, 0xE0, 0xF0, 0xA7, 0xA3, 0x01, 0x6C,
+0x4C, 0xEC, 0x02, 0x6A, 0x4B, 0xEA, 0xAC, 0xEA,
+0x8D, 0xEA, 0xE0, 0xF0, 0x47, 0xC3, 0x07, 0x10,
+0x01, 0x6D, 0x30, 0xF0, 0x20, 0x6A, 0xCE, 0xF3,
+0x44, 0x9A, 0x04, 0x06, 0x40, 0xEA, 0x07, 0x97,
+0x04, 0x63, 0x00, 0xEF, 0x60, 0xA4, 0x30, 0xF0,
+0x20, 0x6A, 0xEF, 0xF4, 0x08, 0x4A, 0xC0, 0xF0,
+0xB9, 0xA2, 0x07, 0x6C, 0x6C, 0xEC, 0x08, 0x6B,
+0x6B, 0xEB, 0xAC, 0xEB, 0x8D, 0xEB, 0xC0, 0xF0,
+0x79, 0xC2, 0x20, 0xE8, 0xFD, 0x63, 0x05, 0x62,
 0x30, 0xF0, 0x20, 0x6A, 0xCE, 0xF3, 0x44, 0x9A,
-0xC4, 0x67, 0x03, 0x6D, 0x11, 0x6C, 0x40, 0xEA,
+0xC4, 0x67, 0x02, 0x6D, 0x38, 0x6C, 0x40, 0xEA,
 0x05, 0x97, 0x03, 0x63, 0x00, 0xEF, 0x00, 0x65,
-0xFC, 0x63, 0x07, 0x62, 0x40, 0xA4, 0x7D, 0x67,
-0x07, 0x6D, 0x50, 0xC3, 0x41, 0xA4, 0x04, 0x06,
-0x51, 0xC3, 0x42, 0xA4, 0x52, 0xC3, 0x43, 0xA4,
-0x53, 0xC3, 0x44, 0xA4, 0x30, 0x6C, 0x54, 0xC3,
-0x00, 0x6A, 0x55, 0xC3, 0x56, 0xC3, 0x30, 0xF0,
-0x20, 0x6A, 0xCE, 0xF3, 0x44, 0x9A, 0x40, 0xEA,
-0x07, 0x97, 0x04, 0x63, 0x00, 0xEF, 0x00, 0x65,
-0xFD, 0x63, 0x05, 0x62, 0x30, 0xF0, 0x20, 0x6A,
-0xCE, 0xF3, 0x44, 0x9A, 0xC4, 0x67, 0x01, 0x6D,
-0x28, 0x6C, 0x40, 0xEA, 0x05, 0x97, 0x03, 0x63,
-0x00, 0xEF, 0x00, 0x65, 0xFC, 0x63, 0x07, 0x62,
-0x61, 0xA4, 0xBD, 0x67, 0x40, 0xA4, 0x70, 0xC5,
-0x62, 0xA4, 0x0D, 0x5A, 0x71, 0xC5, 0x63, 0xA4,
-0x72, 0xC5, 0x64, 0xA4, 0x73, 0xC5, 0x65, 0xA4,
-0x74, 0xC5, 0x66, 0xA4, 0xFF, 0x6C, 0x75, 0xC5,
-0x80, 0xF0, 0x14, 0x60, 0x10, 0xF0, 0x24, 0x6B,
-0x48, 0x32, 0x1C, 0xF1, 0x0C, 0x4B, 0x4D, 0xE3,
-0x40, 0x9B, 0x00, 0xEA, 0x2A, 0x6C, 0x08, 0x10,
-0x29, 0x6C, 0x02, 0x6D, 0x88, 0x10, 0x31, 0x6C,
-0x85, 0x10, 0x32, 0x6C, 0x83, 0x10, 0x33, 0x6C,
-0x06, 0x6D, 0x81, 0x10, 0x30, 0xF0, 0x20, 0x6A,
-0xCE, 0xF3, 0x50, 0x9A, 0x04, 0x04, 0x40, 0xEA,
-0x80, 0x10, 0x9D, 0x67, 0x70, 0xA4, 0x30, 0xF0,
-0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A, 0xC9, 0xF0,
-0x74, 0xC2, 0x71, 0xA4, 0xC9, 0xF0, 0x75, 0xC2,
-0x72, 0xA4, 0xC9, 0xF0, 0x76, 0xC2, 0x73, 0xA4,
-0xC9, 0xF0, 0x77, 0xC2, 0x74, 0xA4, 0xC9, 0xF0,
-0x78, 0xC2, 0x6B, 0x10, 0xBD, 0x67, 0x50, 0xA5,
-0x30, 0xF0, 0x20, 0x6B, 0xEF, 0xF4, 0x08, 0x4B,
-0x93, 0xA5, 0xC0, 0xF0, 0x5C, 0xC3, 0x54, 0xA5,
-0x80, 0x34, 0x80, 0x34, 0x00, 0xF6, 0x40, 0x32,
-0x8D, 0xEA, 0x91, 0xA5, 0x8D, 0xEA, 0x92, 0xA5,
-0x80, 0x34, 0x8D, 0xEA, 0xC0, 0xF0, 0x58, 0xDB,
-0x54, 0x10, 0x00, 0x18, 0x31, 0xD6, 0x51, 0x10,
-0x7D, 0x67, 0x90, 0xA3, 0x30, 0xF0, 0x20, 0x6A,
-0x01, 0x6B, 0x84, 0x34, 0xEF, 0xF4, 0x08, 0x4A,
-0x6D, 0xEC, 0xE0, 0xF0, 0x87, 0xC2, 0xE0, 0xF0,
-0x87, 0xA2, 0x86, 0x35, 0x1E, 0x55, 0x05, 0x60,
-0x8C, 0xEB, 0x3C, 0x6C, 0x8D, 0xEB, 0xE0, 0xF0,
-0x67, 0xC2, 0x30, 0xF0, 0x20, 0x6A, 0xEF, 0xF4,
-0x08, 0x4A, 0xE0, 0xF0, 0x67, 0xA2, 0x66, 0x34,
-0x51, 0x54, 0x33, 0x61, 0x01, 0x6C, 0x6C, 0xEC,
-0x60, 0x6B, 0x6B, 0xEB, 0x6D, 0xEC, 0xE0, 0xF0,
-0x87, 0xC2, 0x2B, 0x10, 0x9D, 0x67, 0x70, 0xA4,
-0x30, 0xF0, 0x20, 0x6A, 0xCF, 0xF5, 0x70, 0xC2,
-0x24, 0x10, 0xBD, 0x67, 0x50, 0xA5, 0x3F, 0x6B,
-0x4C, 0xEB, 0x68, 0x33, 0x5A, 0x32, 0x6D, 0xEA,
-0x30, 0xF0, 0x20, 0x6B, 0xCF, 0xF5, 0x52, 0xC3,
-0x18, 0x10, 0xBD, 0x67, 0x50, 0xA5, 0x30, 0xF0,
-0x20, 0x6B, 0xEF, 0xF4, 0x08, 0x4B, 0xE0, 0xF0,
-0xAB, 0xA3, 0x01, 0x6C, 0x4C, 0xEC, 0x02, 0x6A,
-0x4B, 0xEA, 0xAC, 0xEA, 0x8D, 0xEA, 0xE0, 0xF0,
-0x4B, 0xC3, 0x07, 0x10, 0x01, 0x6D, 0x30, 0xF0,
-0x20, 0x6A, 0xCE, 0xF3, 0x44, 0x9A, 0x04, 0x06,
-0x40, 0xEA, 0x07, 0x97, 0x04, 0x63, 0x00, 0xEF,
-0x60, 0xA4, 0x30, 0xF0, 0x20, 0x6A, 0xEF, 0xF4,
-0x08, 0x4A, 0xC0, 0xF0, 0xBD, 0xA2, 0x07, 0x6C,
-0x6C, 0xEC, 0x08, 0x6B, 0x6B, 0xEB, 0xAC, 0xEB,
-0x8D, 0xEB, 0xC0, 0xF0, 0x7D, 0xC2, 0x20, 0xE8,
+0xFF, 0x63, 0x01, 0xD1, 0x00, 0xD0, 0x30, 0xF0,
+0x20, 0x6A, 0x60, 0xA4, 0xC0, 0xF1, 0x08, 0x4A,
+0xC9, 0xF0, 0x85, 0xA2, 0x01, 0x6E, 0x11, 0x6D,
+0xCC, 0xEB, 0xAB, 0xED, 0x70, 0x33, 0x8C, 0xED,
+0x6D, 0xED, 0x10, 0xF0, 0x24, 0x6B, 0xBB, 0xF6,
+0x64, 0x9B, 0xC9, 0xF0, 0xA5, 0xC2, 0xFE, 0x6F,
+0x80, 0xA3, 0x10, 0x68, 0xAC, 0xE8, 0xEC, 0xEC,
+0x80, 0xC3, 0xFF, 0x6C, 0x27, 0x20, 0x10, 0xF0,
+0x24, 0x6D, 0x5C, 0xF2, 0x1C, 0x9D, 0x08, 0x69,
+0x2B, 0xE9, 0xA0, 0xA0, 0x8C, 0xED, 0x2C, 0xED,
+0x05, 0x69, 0x2D, 0xED, 0x8C, 0xED, 0xA0, 0xC0,
+0x10, 0xF0, 0x24, 0x6D, 0x7C, 0xF2, 0xA0, 0x9D,
+0x00, 0xA5, 0x0F, 0x6D, 0x0C, 0xED, 0x04, 0x75,
+0x0B, 0x61, 0xC9, 0xF0, 0x04, 0xA2, 0x08, 0x6D,
+0x0C, 0xED, 0x8C, 0xED, 0x0B, 0x2D, 0xC9, 0xF0,
+0x5E, 0xAA, 0xA6, 0xF5, 0x0D, 0x72, 0x06, 0x60,
+0x40, 0xA3, 0x8C, 0xEA, 0xCD, 0xEA, 0x8C, 0xEA,
+0x40, 0xC3, 0x03, 0x10, 0x40, 0xA3, 0x4C, 0xEF,
+0xE0, 0xC3, 0x01, 0x91, 0x00, 0x90, 0x01, 0x63,
+0x20, 0xE8, 0x00, 0x65, 0x40, 0xA4, 0x0C, 0x22,
+0x10, 0xF0, 0x24, 0x6A, 0x7C, 0xF2, 0x64, 0x9A,
+0xFF, 0x6C, 0x18, 0x6D, 0x40, 0xA3, 0x8C, 0xEA,
+0xAD, 0xEA, 0x8C, 0xEA, 0x40, 0xC3, 0x20, 0xE8,
+0x30, 0xF0, 0x20, 0x6A, 0x89, 0xF2, 0x6C, 0xA2,
+0x08, 0x6A, 0x6C, 0xEA, 0x08, 0x2A, 0x10, 0xF0,
+0x24, 0x6A, 0x7C, 0xF2, 0x64, 0x9A, 0xE7, 0x6A,
+0x80, 0xA3, 0x8C, 0xEA, 0x40, 0xC3, 0x20, 0xE8,
+0x80, 0xA4, 0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1,
+0x08, 0x4A, 0x01, 0x6B, 0xC9, 0xF0, 0xA5, 0xA2,
+0x8C, 0xEB, 0x6C, 0x34, 0x09, 0x6B, 0x6B, 0xEB,
+0xAC, 0xEB, 0x8D, 0xEB, 0xC9, 0xF0, 0x65, 0xC2,
+0x08, 0x6A, 0x6C, 0xEA, 0x07, 0x22, 0x10, 0xF0,
+0x24, 0x6A, 0x7C, 0xF2, 0x44, 0x9A, 0x18, 0x6B,
+0x60, 0xC2, 0x20, 0xE8, 0x10, 0xF0, 0x24, 0x6B,
+0x7C, 0xF2, 0x64, 0x9B, 0x40, 0xC3, 0x20, 0xE8,
 0xFD, 0x63, 0x05, 0x62, 0x30, 0xF0, 0x20, 0x6A,
-0xCE, 0xF3, 0x44, 0x9A, 0xC4, 0x67, 0x02, 0x6D,
-0x38, 0x6C, 0x40, 0xEA, 0x05, 0x97, 0x03, 0x63,
-0x00, 0xEF, 0x00, 0x65, 0xFF, 0x63, 0x01, 0xD1,
-0x00, 0xD0, 0x30, 0xF0, 0x20, 0x6A, 0x60, 0xA4,
-0xC0, 0xF1, 0x08, 0x4A, 0xC9, 0xF0, 0x85, 0xA2,
-0x01, 0x6E, 0x11, 0x6D, 0xCC, 0xEB, 0xAB, 0xED,
-0x70, 0x33, 0x8C, 0xED, 0x6D, 0xED, 0x10, 0xF0,
-0x24, 0x6B, 0xDC, 0xF2, 0x68, 0x9B, 0xC9, 0xF0,
-0xA5, 0xC2, 0xFE, 0x6F, 0x80, 0xA3, 0x10, 0x68,
-0xAC, 0xE8, 0xEC, 0xEC, 0x80, 0xC3, 0xFF, 0x6C,
-0x27, 0x20, 0x10, 0xF0, 0x24, 0x6D, 0x9C, 0xF6,
-0x00, 0x9D, 0x08, 0x69, 0x2B, 0xE9, 0xA0, 0xA0,
-0x8C, 0xED, 0x2C, 0xED, 0x05, 0x69, 0x2D, 0xED,
-0x8C, 0xED, 0xA0, 0xC0, 0x10, 0xF0, 0x24, 0x6D,
-0x9C, 0xF6, 0xA4, 0x9D, 0x00, 0xA5, 0x0F, 0x6D,
-0x0C, 0xED, 0x04, 0x75, 0x0B, 0x61, 0xC9, 0xF0,
-0x04, 0xA2, 0x08, 0x6D, 0x0C, 0xED, 0x8C, 0xED,
-0x0B, 0x2D, 0xC9, 0xF0, 0x5E, 0xAA, 0xA6, 0xF5,
-0x0D, 0x72, 0x06, 0x60, 0x40, 0xA3, 0x8C, 0xEA,
-0xCD, 0xEA, 0x8C, 0xEA, 0x40, 0xC3, 0x03, 0x10,
-0x40, 0xA3, 0x4C, 0xEF, 0xE0, 0xC3, 0x01, 0x91,
-0x00, 0x90, 0x01, 0x63, 0x20, 0xE8, 0x00, 0x65,
-0x40, 0xA4, 0x0C, 0x22, 0x10, 0xF0, 0x24, 0x6A,
-0x9C, 0xF6, 0x68, 0x9A, 0xFF, 0x6C, 0x18, 0x6D,
-0x40, 0xA3, 0x8C, 0xEA, 0xAD, 0xEA, 0x8C, 0xEA,
-0x40, 0xC3, 0x20, 0xE8, 0x30, 0xF0, 0x20, 0x6A,
-0x89, 0xF2, 0x6C, 0xA2, 0x08, 0x6A, 0x6C, 0xEA,
-0x08, 0x2A, 0x10, 0xF0, 0x24, 0x6A, 0x9C, 0xF6,
-0x68, 0x9A, 0xE7, 0x6A, 0x80, 0xA3, 0x8C, 0xEA,
-0x40, 0xC3, 0x20, 0xE8, 0x80, 0xA4, 0x30, 0xF0,
-0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A, 0x01, 0x6B,
-0xC9, 0xF0, 0xA5, 0xA2, 0x8C, 0xEB, 0x6C, 0x34,
-0x09, 0x6B, 0x6B, 0xEB, 0xAC, 0xEB, 0x8D, 0xEB,
-0xC9, 0xF0, 0x65, 0xC2, 0x08, 0x6A, 0x6C, 0xEA,
-0x07, 0x22, 0x10, 0xF0, 0x24, 0x6A, 0x9C, 0xF6,
-0x48, 0x9A, 0x18, 0x6B, 0x60, 0xC2, 0x20, 0xE8,
-0x10, 0xF0, 0x24, 0x6B, 0x9C, 0xF6, 0x68, 0x9B,
-0x40, 0xC3, 0x20, 0xE8, 0xFD, 0x63, 0x05, 0x62,
-0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A,
-0xA0, 0xA4, 0xA9, 0xF0, 0xDD, 0xA2, 0x02, 0x6B,
-0x01, 0x6C, 0x6B, 0xEB, 0x8C, 0xED, 0xCC, 0xEB,
-0xAD, 0xEB, 0xA9, 0xF0, 0x7D, 0xC2, 0x8C, 0xEB,
-0xFF, 0x6A, 0x45, 0x23, 0x10, 0xF0, 0x24, 0x6B,
-0x9C, 0xF6, 0x8C, 0x9B, 0xE5, 0x6D, 0xAB, 0xED,
-0x60, 0xA4, 0x4C, 0xEB, 0xAC, 0xEB, 0xA4, 0x6D,
-0xAD, 0xEB, 0x60, 0xDC, 0x10, 0xF0, 0x24, 0x6B,
-0x9C, 0xF6, 0x70, 0x9B, 0x80, 0xA3, 0x8C, 0xEA,
-0x40, 0xDB, 0x10, 0xF0, 0x24, 0x6A, 0x9C, 0xF6,
-0x54, 0x9A, 0x42, 0xF2, 0x15, 0x6B, 0x01, 0x6C,
-0x60, 0xCA, 0x30, 0xF0, 0x20, 0x6A, 0x6E, 0xF3,
-0x44, 0x9A, 0x40, 0xEA, 0x10, 0xF0, 0x24, 0x6A,
-0x7C, 0xF6, 0x7C, 0x9A, 0x03, 0x6C, 0x40, 0x9B,
-0x8D, 0xEA, 0x40, 0xDB, 0x10, 0xF0, 0x24, 0x6A,
-0x9C, 0xF6, 0x78, 0x9A, 0xFE, 0xF5, 0x1C, 0x4C,
-0x40, 0x9B, 0x8C, 0xEA, 0x40, 0xDB, 0x10, 0xF0,
-0x24, 0x6A, 0x9C, 0xF6, 0x7C, 0x9A, 0x81, 0xF1,
-0x00, 0x4C, 0x40, 0x9B, 0x8C, 0xEA, 0x40, 0xDB,
-0x10, 0xF0, 0x24, 0x6A, 0xBC, 0xF6, 0x60, 0x9A,
-0x10, 0xF0, 0x24, 0x6C, 0xBC, 0xF6, 0x84, 0x9C,
-0x40, 0x9B, 0x8C, 0xEA, 0x40, 0xDB, 0x05, 0x97,
-0x03, 0x63, 0x00, 0xEF, 0xFD, 0x63, 0x05, 0x62,
-0x04, 0xD0, 0x01, 0x6D, 0x04, 0x67, 0xAB, 0xED,
-0x41, 0xF4, 0x18, 0x6C, 0x00, 0x18, 0x42, 0xE7,
-0x30, 0xF0, 0x20, 0x6B, 0xC0, 0xF1, 0x08, 0x4B,
-0xC9, 0xF0, 0x50, 0xDB, 0x10, 0xF0, 0x24, 0x6D,
-0x80, 0xA0, 0xBC, 0xF6, 0xA8, 0x9D, 0x05, 0x97,
-0x04, 0x90, 0x4C, 0xED, 0x00, 0xF6, 0x80, 0x34,
-0xAD, 0xEC, 0xC9, 0xF0, 0x8C, 0xDB, 0x03, 0x63,
-0x00, 0xEF, 0x00, 0x65, 0xFB, 0x63, 0x09, 0x62,
-0x08, 0xD1, 0x07, 0xD0, 0x30, 0xF0, 0x20, 0x68,
-0xC0, 0xF1, 0x08, 0x48, 0xC9, 0xF0, 0x5C, 0xA0,
-0x27, 0x72, 0x50, 0x60, 0x28, 0x5A, 0x05, 0x60,
-0x15, 0x72, 0x0B, 0x60, 0x23, 0x72, 0x44, 0x60,
-0xDE, 0x10, 0x34, 0x72, 0x57, 0x60, 0x39, 0x72,
-0x80, 0xF0, 0x18, 0x60, 0x30, 0x72, 0x49, 0x60,
-0xD6, 0x10, 0xC9, 0xF0, 0x9E, 0xA0, 0x40, 0x6A,
-0x8C, 0xEA, 0x0E, 0x22, 0x10, 0xF0, 0x24, 0x6A,
-0xBC, 0xF6, 0x4C, 0x9A, 0x3F, 0x6D, 0xAF, 0xEB,
-0x40, 0x9A, 0x8D, 0xEB, 0x46, 0x32, 0xAC, 0xEA,
-0x49, 0xE3, 0xFF, 0x6B, 0x6C, 0xEA, 0x0A, 0x10,
-0x10, 0xF0, 0x24, 0x6A, 0xBC, 0xF6, 0x4C, 0x9A,
-0x60, 0x9A, 0x3F, 0x6A, 0x66, 0x33, 0x4C, 0xEB,
-0x8C, 0xEA, 0x49, 0xE3, 0x40, 0x5A, 0x78, 0x67,
-0x6B, 0xEB, 0x6C, 0xEA, 0x10, 0xF0, 0x24, 0x6B,
-0x7C, 0xF4, 0xBC, 0x9B, 0x10, 0xF0, 0x24, 0x6E,
-0xBC, 0xF6, 0xD0, 0x9E, 0x80, 0x9D, 0x40, 0xF6,
-0x40, 0x33, 0x44, 0x32, 0xCC, 0xEC, 0x8D, 0xEB,
-0x60, 0xDD, 0x10, 0xF0, 0x24, 0x6B, 0xBC, 0xF6,
-0x8C, 0x9B, 0x7F, 0x6D, 0xAB, 0xED, 0x60, 0x9C,
-0xAC, 0xEB, 0x6D, 0xEA, 0x40, 0xDC, 0x9B, 0x10,
+0xC0, 0xF1, 0x08, 0x4A, 0xA0, 0xA4, 0xA9, 0xF0,
+0xDD, 0xA2, 0x02, 0x6B, 0x01, 0x6C, 0x6B, 0xEB,
+0x8C, 0xED, 0xCC, 0xEB, 0xAD, 0xEB, 0xA9, 0xF0,
+0x7D, 0xC2, 0x8C, 0xEB, 0xFF, 0x6A, 0x45, 0x23,
+0x10, 0xF0, 0x24, 0x6B, 0x7C, 0xF2, 0x88, 0x9B,
+0xE5, 0x6D, 0xAB, 0xED, 0x60, 0xA4, 0x4C, 0xEB,
+0xAC, 0xEB, 0xA4, 0x6D, 0xAD, 0xEB, 0x60, 0xDC,
+0x10, 0xF0, 0x24, 0x6B, 0x7C, 0xF2, 0x6C, 0x9B,
+0x80, 0xA3, 0x8C, 0xEA, 0x40, 0xDB, 0x10, 0xF0,
+0x24, 0x6A, 0x7C, 0xF2, 0x50, 0x9A, 0x42, 0xF2,
+0x15, 0x6B, 0x01, 0x6C, 0x60, 0xCA, 0x30, 0xF0,
+0x20, 0x6A, 0x6E, 0xF3, 0x44, 0x9A, 0x40, 0xEA,
+0x10, 0xF0, 0x24, 0x6A, 0x5C, 0xF2, 0x78, 0x9A,
+0x03, 0x6C, 0x40, 0x9B, 0x8D, 0xEA, 0x40, 0xDB,
+0x10, 0xF0, 0x24, 0x6A, 0x7C, 0xF2, 0x74, 0x9A,
+0xFE, 0xF5, 0x1C, 0x4C, 0x40, 0x9B, 0x8C, 0xEA,
+0x40, 0xDB, 0x10, 0xF0, 0x24, 0x6A, 0x7C, 0xF2,
+0x78, 0x9A, 0x81, 0xF1, 0x00, 0x4C, 0x40, 0x9B,
+0x8C, 0xEA, 0x40, 0xDB, 0x10, 0xF0, 0x24, 0x6A,
+0x7C, 0xF2, 0x7C, 0x9A, 0x10, 0xF0, 0x24, 0x6C,
+0x9C, 0xF2, 0x80, 0x9C, 0x40, 0x9B, 0x8C, 0xEA,
+0x40, 0xDB, 0x05, 0x97, 0x03, 0x63, 0x00, 0xEF,
+0xFD, 0x63, 0x05, 0x62, 0x04, 0xD0, 0x01, 0x6D,
+0x04, 0x67, 0xAB, 0xED, 0x41, 0xF4, 0x18, 0x6C,
+0x00, 0x18, 0xE4, 0xE6, 0x30, 0xF0, 0x20, 0x6B,
+0xC0, 0xF1, 0x08, 0x4B, 0xC9, 0xF0, 0x50, 0xDB,
+0x10, 0xF0, 0x24, 0x6D, 0x80, 0xA0, 0x9C, 0xF2,
+0xA4, 0x9D, 0x05, 0x97, 0x04, 0x90, 0x4C, 0xED,
+0x00, 0xF6, 0x80, 0x34, 0xAD, 0xEC, 0xC9, 0xF0,
+0x8C, 0xDB, 0x03, 0x63, 0x00, 0xEF, 0x00, 0x65,
+0xFB, 0x63, 0x09, 0x62, 0x08, 0xD1, 0x07, 0xD0,
+0x30, 0xF0, 0x20, 0x68, 0xC0, 0xF1, 0x08, 0x48,
+0xC9, 0xF0, 0x5C, 0xA0, 0x27, 0x72, 0x50, 0x60,
+0x28, 0x5A, 0x05, 0x60, 0x15, 0x72, 0x0B, 0x60,
+0x23, 0x72, 0x44, 0x60, 0xDE, 0x10, 0x34, 0x72,
+0x57, 0x60, 0x39, 0x72, 0x80, 0xF0, 0x18, 0x60,
+0x30, 0x72, 0x49, 0x60, 0xD6, 0x10, 0xC9, 0xF0,
+0x9E, 0xA0, 0x40, 0x6A, 0x8C, 0xEA, 0x0E, 0x22,
+0x10, 0xF0, 0x24, 0x6A, 0x9C, 0xF2, 0x48, 0x9A,
+0x3F, 0x6D, 0xAF, 0xEB, 0x40, 0x9A, 0x8D, 0xEB,
+0x46, 0x32, 0xAC, 0xEA, 0x49, 0xE3, 0xFF, 0x6B,
+0x6C, 0xEA, 0x0A, 0x10, 0x10, 0xF0, 0x24, 0x6A,
+0x9C, 0xF2, 0x48, 0x9A, 0x60, 0x9A, 0x3F, 0x6A,
+0x66, 0x33, 0x4C, 0xEB, 0x8C, 0xEA, 0x49, 0xE3,
+0x40, 0x5A, 0x78, 0x67, 0x6B, 0xEB, 0x6C, 0xEA,
+0x10, 0xF0, 0x24, 0x6B, 0x5C, 0xF0, 0xB8, 0x9B,
+0x10, 0xF0, 0x24, 0x6E, 0x9C, 0xF2, 0xCC, 0x9E,
+0x80, 0x9D, 0x40, 0xF6, 0x40, 0x33, 0x44, 0x32,
+0xCC, 0xEC, 0x8D, 0xEB, 0x60, 0xDD, 0x10, 0xF0,
+0x24, 0x6B, 0x9C, 0xF2, 0x88, 0x9B, 0x7F, 0x6D,
+0xAB, 0xED, 0x60, 0x9C, 0xAC, 0xEB, 0x6D, 0xEA,
+0x40, 0xDC, 0x9B, 0x10, 0x30, 0xF0, 0x20, 0x6A,
+0xCE, 0xF3, 0x4C, 0x9A, 0x01, 0x6C, 0x05, 0x10,
 0x30, 0xF0, 0x20, 0x6A, 0xCE, 0xF3, 0x4C, 0x9A,
-0x01, 0x6C, 0x05, 0x10, 0x30, 0xF0, 0x20, 0x6A,
-0xCE, 0xF3, 0x4C, 0x9A, 0x02, 0x6C, 0x40, 0xEA,
-0x8E, 0x10, 0x30, 0xF0, 0x20, 0x6A, 0xCE, 0xF3,
-0x54, 0x9A, 0x00, 0x6D, 0x01, 0x6C, 0xC5, 0x67,
-0x40, 0xEA, 0x85, 0x10, 0xC9, 0xF0, 0x5E, 0xA0,
-0x01, 0x6B, 0x6C, 0xEA, 0x27, 0x22, 0xC9, 0xF0,
-0x45, 0xA0, 0x10, 0x69, 0x2C, 0xEA, 0x7B, 0x2A,
-0x5D, 0x67, 0x70, 0xC2, 0x30, 0xF0, 0x20, 0x6A,
-0xCE, 0xF3, 0x44, 0x9A, 0xA3, 0x67, 0x34, 0x6C,
-0x04, 0x06, 0x40, 0xEA, 0x02, 0x6C, 0x00, 0x18,
-0x39, 0xEE, 0xC9, 0xF0, 0x64, 0xA0, 0x08, 0x6A,
-0xFF, 0x6C, 0x6D, 0xEA, 0x2D, 0xEA, 0x30, 0x6B,
-0xC9, 0xF0, 0x44, 0xC0, 0x10, 0xF0, 0x24, 0x6A,
-0xC9, 0xF0, 0x6A, 0xC0, 0xDC, 0xF2, 0x68, 0x9A,
-0x40, 0xA3, 0x8C, 0xEA, 0x02, 0x6C, 0x8D, 0xEA,
-0xFF, 0x6C, 0x15, 0x10, 0x03, 0x6C, 0x00, 0x18,
-0x39, 0xEE, 0x30, 0xF0, 0x20, 0x6A, 0xAE, 0xF3,
-0x50, 0x9A, 0x40, 0xEA, 0xC9, 0xF0, 0x64, 0xA0,
-0x09, 0x6A, 0x4B, 0xEA, 0x6C, 0xEA, 0xC9, 0xF0,
-0x44, 0xC0, 0x10, 0xF0, 0x24, 0x6A, 0xDC, 0xF2,
-0x68, 0x9A, 0xFD, 0x6A, 0x80, 0xA3, 0x8C, 0xEA,
-0x40, 0xC3, 0x41, 0x10, 0xA9, 0xF0, 0x88, 0xA0,
-0x01, 0x6A, 0xFF, 0x6B, 0x8C, 0xEA, 0x3B, 0x22,
-0xA9, 0xF0, 0x4C, 0xA0, 0x04, 0x6D, 0xAC, 0xEA,
-0x6C, 0xEA, 0x35, 0x22, 0xC9, 0xF0, 0x84, 0xA0,
-0x80, 0x6A, 0x4B, 0xEA, 0x8C, 0xEA, 0x6C, 0xEA,
-0x2E, 0x22, 0x30, 0xF0, 0x20, 0x6A, 0xEF, 0xF4,
-0x08, 0x4A, 0xE0, 0xF0, 0xC5, 0xA2, 0x01, 0x4E,
-0xE0, 0xF0, 0xC5, 0xC2, 0xA9, 0xF0, 0x4A, 0xA0,
-0xAC, 0xEA, 0x0B, 0x22, 0xC9, 0xF0, 0xA5, 0xA0,
-0x20, 0x6A, 0xAC, 0xEA, 0x6C, 0xEA, 0x05, 0x22,
-0x7F, 0x6A, 0x8C, 0xEA, 0xC9, 0xF0, 0x44, 0xC0,
-0x16, 0x10, 0x30, 0xF0, 0x20, 0x6A, 0x89, 0xF2,
-0x51, 0xA2, 0x02, 0x22, 0x03, 0x72, 0x0F, 0x61,
-0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A,
-0xC9, 0xF0, 0x84, 0xA2, 0x7F, 0x6B, 0x8C, 0xEB,
-0xC9, 0xF0, 0x64, 0xC2, 0x30, 0xF0, 0x20, 0x6A,
-0x8E, 0xF3, 0x50, 0x9A, 0x40, 0xEA, 0x09, 0x97,
-0x08, 0x91, 0x07, 0x90, 0x05, 0x63, 0x00, 0xEF,
-0xFD, 0x63, 0x05, 0x62, 0x04, 0xD0, 0x00, 0x68,
-0x17, 0x10, 0xE0, 0xF3, 0x08, 0x70, 0x0A, 0x61,
-0x10, 0xF0, 0x24, 0x6A, 0x7C, 0xF3, 0x6C, 0x9A,
-0x80, 0x6C, 0x40, 0x9B, 0x8D, 0xEA, 0x40, 0xDB,
-0x00, 0x6A, 0x13, 0x10, 0xFF, 0xF7, 0x1F, 0x6A,
-0x01, 0x48, 0x4C, 0xE8, 0x30, 0xF0, 0x20, 0x6A,
-0xCE, 0xF4, 0x5C, 0x9A, 0x0A, 0x6C, 0x40, 0xEA,
-0x10, 0xF0, 0x24, 0x6A, 0x7C, 0xF3, 0x44, 0x9A,
-0x60, 0xA2, 0x01, 0x6A, 0x6C, 0xEA, 0xE1, 0x2A,
-0x01, 0x6A, 0x05, 0x97, 0x04, 0x90, 0x03, 0x63,
-0x00, 0xEF, 0x00, 0x65, 0xFF, 0xF7, 0x1F, 0x6A,
-0x8C, 0xEA, 0x10, 0xF0, 0x24, 0x6B, 0x10, 0xF0,
-0x24, 0x6C, 0xBC, 0xF6, 0x74, 0x9B, 0xBC, 0xF6,
-0x98, 0x9C, 0x6D, 0xE5, 0x91, 0xE5, 0x00, 0x6E,
-0xC0, 0xDB, 0x04, 0x4B, 0x8A, 0xEB, 0xFB, 0x61,
-0xE7, 0xF7, 0x1F, 0x6B, 0x4C, 0xEB, 0x10, 0xF0,
-0x24, 0x6A, 0x5C, 0xF4, 0x58, 0x9A, 0x10, 0x6C,
-0x4D, 0xEB, 0x10, 0xF0, 0x24, 0x6A, 0xBC, 0xF6,
-0x54, 0x9A, 0x49, 0xE5, 0x60, 0xDA, 0x10, 0xF0,
-0x24, 0x6A, 0xBC, 0xF6, 0x5C, 0x9A, 0xFF, 0x6B,
-0x55, 0xE5, 0x40, 0xA5, 0x6C, 0xEA, 0x8D, 0xEA,
-0x6C, 0xEA, 0x40, 0xC5, 0x20, 0xE8, 0x00, 0x65,
-0xFC, 0x63, 0x07, 0x62, 0x06, 0xD1, 0x05, 0xD0,
-0x30, 0xF0, 0x21, 0x6A, 0xD0, 0xF4, 0x6D, 0xA2,
-0x08, 0xD4, 0x30, 0xF0, 0x20, 0x69, 0x61, 0xC5,
-0x01, 0x4B, 0xD0, 0xF4, 0x6D, 0xC2, 0x10, 0xF0,
-0x24, 0x6B, 0xBC, 0xF6, 0x94, 0x9B, 0x08, 0x93,
-0x4E, 0xF2, 0x50, 0x99, 0x02, 0x6E, 0x91, 0xE3,
-0x05, 0x67, 0x40, 0xEA, 0x10, 0xF0, 0x24, 0x6B,
-0xDC, 0xF6, 0x80, 0x9B, 0x08, 0x93, 0xCE, 0xA0,
-0x4E, 0xF2, 0x50, 0x99, 0xA2, 0x40, 0x91, 0xE3,
-0x40, 0xEA, 0x07, 0x97, 0x06, 0x91, 0x05, 0x90,
-0x04, 0x63, 0x00, 0xEF, 0xFC, 0x63, 0x07, 0x62,
-0x06, 0xD1, 0x05, 0xD0, 0x24, 0x67, 0x00, 0x18,
-0x0A, 0xD8, 0x00, 0x6B, 0x36, 0x22, 0x10, 0xF0,
-0x24, 0x6A, 0xDC, 0xF6, 0x44, 0x9A, 0xFF, 0xF7,
-0x1F, 0x6E, 0xFF, 0x6F, 0x00, 0x9A, 0x10, 0xF0,
-0x24, 0x6A, 0x5C, 0xF4, 0x54, 0x9A, 0x10, 0x6C,
-0x8B, 0xEC, 0x4C, 0xE8, 0x10, 0xF0, 0x24, 0x6A,
-0xA1, 0x40, 0xDC, 0xF6, 0x48, 0x9A, 0x65, 0x67,
-0xCC, 0xEB, 0x60, 0xCA, 0x10, 0xF0, 0x24, 0x6A,
-0xDC, 0xF6, 0x4C, 0x9A, 0x60, 0xA2, 0xFA, 0x65,
-0xA2, 0x32, 0xEC, 0xEB, 0x8C, 0xEB, 0x42, 0x32,
-0x6D, 0xEA, 0xEC, 0xEA, 0x7F, 0x67, 0x40, 0xC3,
-0x87, 0xA9, 0x02, 0x4C, 0xCC, 0xEC, 0x00, 0x18,
-0x1F, 0xD8, 0x87, 0x40, 0x12, 0x4C, 0xB1, 0x67,
-0x00, 0x18, 0x36, 0xD8, 0x10, 0xF0, 0x24, 0x6A,
-0x7C, 0xF3, 0x44, 0x9A, 0x01, 0x6B, 0x60, 0xC2,
-0x01, 0x6B, 0x07, 0x97, 0x06, 0x91, 0x05, 0x90,
-0x43, 0x67, 0x04, 0x63, 0x00, 0xEF, 0x00, 0x65,
-0xFD, 0x63, 0x05, 0x62, 0x04, 0xD0, 0x30, 0xF0,
-0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A, 0x80, 0xF0,
-0x6C, 0x9A, 0xA4, 0x67, 0x04, 0x6C, 0x8D, 0xEB,
-0x30, 0xF0, 0x20, 0x68, 0x80, 0xF0, 0x6C, 0xDA,
-0xEF, 0xF4, 0x08, 0x48, 0xA0, 0xF0, 0x4C, 0xA8,
-0x01, 0xF1, 0x00, 0x72, 0x07, 0x60, 0xA0, 0xF0,
-0x6C, 0xA0, 0xA0, 0xF0, 0x4D, 0xA0, 0xFF, 0x4B,
-0x4E, 0xEB, 0x0A, 0x2B, 0x10, 0xF0, 0x24, 0x6A,
-0x7C, 0xF3, 0x6C, 0x9A, 0x00, 0xF2, 0x00, 0x6C,
-0x40, 0x9B, 0x8D, 0xEA, 0x40, 0xDB, 0x12, 0x10,
-0x50, 0x32, 0x51, 0xE0, 0x0C, 0x4C, 0x10, 0x6E,
-0x00, 0x18, 0xB3, 0xD4, 0xA0, 0xF0, 0x4D, 0xA0,
-0x0A, 0x6B, 0x01, 0x4A, 0xA0, 0xF0, 0x4D, 0xC0,
-0xA0, 0xF0, 0x4D, 0xA0, 0x6E, 0xEA, 0x02, 0x2A,
-0xA0, 0xF0, 0x4D, 0xC0, 0x05, 0x97, 0x04, 0x90,
-0x03, 0x63, 0x00, 0xEF, 0xFD, 0x63, 0x05, 0x62,
-0x04, 0xD0, 0x30, 0xF0, 0x21, 0x6B, 0xD0, 0xF4,
-0x4C, 0xA3, 0xFF, 0x6F, 0xE0, 0xF0, 0xC7, 0xA5,
-0x41, 0xC5, 0x43, 0xA5, 0xD0, 0xF4, 0x6C, 0xA3,
-0x03, 0x4A, 0xEC, 0xEA, 0x09, 0x10, 0xED, 0x42,
-0xFF, 0x68, 0x0C, 0xEF, 0xFD, 0xE5, 0x64, 0xC7,
-0xE6, 0xA7, 0x03, 0x4F, 0xE9, 0xE2, 0x0C, 0xEA,
-0xEF, 0x46, 0xE2, 0xEA, 0xF4, 0x61, 0x30, 0xF0,
-0x21, 0x6A, 0xD0, 0xF4, 0x6C, 0xA2, 0x01, 0x4B,
-0xD0, 0xF4, 0x6C, 0xC2, 0x10, 0xF0, 0x24, 0x6B,
-0xBC, 0xF6, 0x74, 0x9B, 0x30, 0xF0, 0x20, 0x6A,
-0x4E, 0xF2, 0x50, 0x9A, 0x71, 0xE4, 0x40, 0xEA,
-0x05, 0x97, 0x04, 0x90, 0x03, 0x63, 0x00, 0xEF,
+0x02, 0x6C, 0x40, 0xEA, 0x8E, 0x10, 0x30, 0xF0,
+0x20, 0x6A, 0xCE, 0xF3, 0x54, 0x9A, 0x00, 0x6D,
+0x01, 0x6C, 0xC5, 0x67, 0x40, 0xEA, 0x85, 0x10,
+0xC9, 0xF0, 0x5E, 0xA0, 0x01, 0x6B, 0x6C, 0xEA,
+0x27, 0x22, 0xC9, 0xF0, 0x45, 0xA0, 0x10, 0x69,
+0x2C, 0xEA, 0x7B, 0x2A, 0x5D, 0x67, 0x70, 0xC2,
+0x30, 0xF0, 0x20, 0x6A, 0xCE, 0xF3, 0x44, 0x9A,
+0xA3, 0x67, 0x34, 0x6C, 0x04, 0x06, 0x40, 0xEA,
+0x02, 0x6C, 0x00, 0x18, 0xDB, 0xED, 0xC9, 0xF0,
+0x64, 0xA0, 0x08, 0x6A, 0xFF, 0x6C, 0x6D, 0xEA,
+0x2D, 0xEA, 0x30, 0x6B, 0xC9, 0xF0, 0x44, 0xC0,
+0x10, 0xF0, 0x24, 0x6A, 0xC9, 0xF0, 0x6A, 0xC0,
+0xBB, 0xF6, 0x64, 0x9A, 0x40, 0xA3, 0x8C, 0xEA,
+0x02, 0x6C, 0x8D, 0xEA, 0xFF, 0x6C, 0x15, 0x10,
+0x03, 0x6C, 0x00, 0x18, 0xDB, 0xED, 0x30, 0xF0,
+0x20, 0x6A, 0xAE, 0xF3, 0x50, 0x9A, 0x40, 0xEA,
+0xC9, 0xF0, 0x64, 0xA0, 0x09, 0x6A, 0x4B, 0xEA,
+0x6C, 0xEA, 0xC9, 0xF0, 0x44, 0xC0, 0x10, 0xF0,
+0x24, 0x6A, 0xBB, 0xF6, 0x64, 0x9A, 0xFD, 0x6A,
+0x80, 0xA3, 0x8C, 0xEA, 0x40, 0xC3, 0x41, 0x10,
+0xA9, 0xF0, 0x88, 0xA0, 0x01, 0x6A, 0xFF, 0x6B,
+0x8C, 0xEA, 0x3B, 0x22, 0xA9, 0xF0, 0x4C, 0xA0,
+0x04, 0x6D, 0xAC, 0xEA, 0x6C, 0xEA, 0x35, 0x22,
+0xC9, 0xF0, 0x84, 0xA0, 0x80, 0x6A, 0x4B, 0xEA,
+0x8C, 0xEA, 0x6C, 0xEA, 0x2E, 0x22, 0x30, 0xF0,
+0x20, 0x6A, 0xEF, 0xF4, 0x08, 0x4A, 0xE0, 0xF0,
+0xC1, 0xA2, 0x01, 0x4E, 0xE0, 0xF0, 0xC1, 0xC2,
+0xA9, 0xF0, 0x4A, 0xA0, 0xAC, 0xEA, 0x0B, 0x22,
+0xC9, 0xF0, 0xA5, 0xA0, 0x20, 0x6A, 0xAC, 0xEA,
+0x6C, 0xEA, 0x05, 0x22, 0x7F, 0x6A, 0x8C, 0xEA,
+0xC9, 0xF0, 0x44, 0xC0, 0x16, 0x10, 0x30, 0xF0,
+0x20, 0x6A, 0x89, 0xF2, 0x51, 0xA2, 0x02, 0x22,
+0x03, 0x72, 0x0F, 0x61, 0x30, 0xF0, 0x20, 0x6A,
+0xC0, 0xF1, 0x08, 0x4A, 0xC9, 0xF0, 0x84, 0xA2,
+0x7F, 0x6B, 0x8C, 0xEB, 0xC9, 0xF0, 0x64, 0xC2,
+0x30, 0xF0, 0x20, 0x6A, 0x8E, 0xF3, 0x50, 0x9A,
+0x40, 0xEA, 0x09, 0x97, 0x08, 0x91, 0x07, 0x90,
+0x05, 0x63, 0x00, 0xEF, 0xFD, 0x63, 0x05, 0x62,
+0x04, 0xD0, 0x00, 0x68, 0x17, 0x10, 0xE0, 0xF3,
+0x08, 0x70, 0x0A, 0x61, 0x10, 0xF0, 0x24, 0x6A,
+0x3B, 0xF7, 0x6C, 0x9A, 0x80, 0x6C, 0x40, 0x9B,
+0x8D, 0xEA, 0x40, 0xDB, 0x00, 0x6A, 0x13, 0x10,
+0xFF, 0xF7, 0x1F, 0x6A, 0x01, 0x48, 0x4C, 0xE8,
+0x30, 0xF0, 0x20, 0x6A, 0xCE, 0xF4, 0x5C, 0x9A,
+0x0A, 0x6C, 0x40, 0xEA, 0x10, 0xF0, 0x24, 0x6A,
+0x3B, 0xF7, 0x44, 0x9A, 0x60, 0xA2, 0x01, 0x6A,
+0x6C, 0xEA, 0xE1, 0x2A, 0x01, 0x6A, 0x05, 0x97,
+0x04, 0x90, 0x03, 0x63, 0x00, 0xEF, 0x00, 0x65,
+0xFF, 0xF7, 0x1F, 0x6A, 0x8C, 0xEA, 0x10, 0xF0,
+0x24, 0x6B, 0x10, 0xF0, 0x24, 0x6C, 0x9C, 0xF2,
+0x70, 0x9B, 0x9C, 0xF2, 0x94, 0x9C, 0x6D, 0xE5,
+0x91, 0xE5, 0x00, 0x6E, 0xC0, 0xDB, 0x04, 0x4B,
+0x8A, 0xEB, 0xFB, 0x61, 0xE7, 0xF7, 0x1F, 0x6B,
+0x4C, 0xEB, 0x10, 0xF0, 0x24, 0x6A, 0x3C, 0xF0,
+0x54, 0x9A, 0x10, 0x6C, 0x4D, 0xEB, 0x10, 0xF0,
+0x24, 0x6A, 0x9C, 0xF2, 0x50, 0x9A, 0x49, 0xE5,
+0x60, 0xDA, 0x10, 0xF0, 0x24, 0x6A, 0x9C, 0xF2,
+0x58, 0x9A, 0xFF, 0x6B, 0x55, 0xE5, 0x40, 0xA5,
+0x6C, 0xEA, 0x8D, 0xEA, 0x6C, 0xEA, 0x40, 0xC5,
+0x20, 0xE8, 0x00, 0x65, 0xFC, 0x63, 0x07, 0x62,
+0x06, 0xD1, 0x05, 0xD0, 0x30, 0xF0, 0x21, 0x6A,
+0xD0, 0xF4, 0x61, 0xA2, 0x08, 0xD4, 0x30, 0xF0,
+0x20, 0x69, 0x61, 0xC5, 0x01, 0x4B, 0xD0, 0xF4,
+0x61, 0xC2, 0x10, 0xF0, 0x24, 0x6B, 0x9C, 0xF2,
+0x90, 0x9B, 0x08, 0x93, 0x4E, 0xF2, 0x50, 0x99,
+0x02, 0x6E, 0x91, 0xE3, 0x05, 0x67, 0x40, 0xEA,
+0x10, 0xF0, 0x24, 0x6B, 0x9C, 0xF2, 0x9C, 0x9B,
+0x08, 0x93, 0xCE, 0xA0, 0x4E, 0xF2, 0x50, 0x99,
+0xA2, 0x40, 0x91, 0xE3, 0x40, 0xEA, 0x07, 0x97,
+0x06, 0x91, 0x05, 0x90, 0x04, 0x63, 0x00, 0xEF,
 0xFC, 0x63, 0x07, 0x62, 0x06, 0xD1, 0x05, 0xD0,
-0x24, 0x67, 0x00, 0x18, 0x0A, 0xD8, 0x00, 0x6B,
-0x2E, 0x22, 0x10, 0xF0, 0x24, 0x6A, 0xDC, 0xF6,
-0x44, 0x9A, 0x0F, 0x6C, 0xFF, 0xF7, 0x1F, 0x6B,
-0x00, 0x9A, 0x10, 0xF0, 0x24, 0x6A, 0x5C, 0xF4,
-0x54, 0x9A, 0x4C, 0xE8, 0xA1, 0x40, 0xA2, 0x32,
-0x42, 0x32, 0x8C, 0xEA, 0x10, 0xF0, 0x24, 0x6C,
-0xDC, 0xF6, 0x88, 0x9C, 0xC5, 0x67, 0x6C, 0xEE,
-0xC0, 0xCC, 0x10, 0xF0, 0x24, 0x6C, 0xDC, 0xF6,
-0x8C, 0x9C, 0x40, 0xC4, 0xE0, 0xF0, 0x87, 0xA1,
-0x6C, 0xEC, 0x00, 0x18, 0x1F, 0xD8, 0x87, 0x40,
-0x12, 0x4C, 0xB1, 0x67, 0x00, 0x18, 0x8D, 0xD8,
-0x10, 0xF0, 0x24, 0x6A, 0x7C, 0xF3, 0x44, 0x9A,
+0x24, 0x67, 0x00, 0x18, 0xE1, 0xD7, 0x00, 0x6B,
+0x36, 0x22, 0x10, 0xF0, 0x24, 0x6A, 0xBC, 0xF2,
+0x40, 0x9A, 0xFF, 0xF7, 0x1F, 0x6E, 0xFF, 0x6F,
+0x00, 0x9A, 0x10, 0xF0, 0x24, 0x6A, 0x3C, 0xF0,
+0x50, 0x9A, 0x10, 0x6C, 0x8B, 0xEC, 0x4C, 0xE8,
+0x10, 0xF0, 0x24, 0x6A, 0xA1, 0x40, 0xBC, 0xF2,
+0x44, 0x9A, 0x65, 0x67, 0xCC, 0xEB, 0x60, 0xCA,
+0x10, 0xF0, 0x24, 0x6A, 0xBC, 0xF2, 0x48, 0x9A,
+0x60, 0xA2, 0xFA, 0x65, 0xA2, 0x32, 0xEC, 0xEB,
+0x8C, 0xEB, 0x42, 0x32, 0x6D, 0xEA, 0xEC, 0xEA,
+0x7F, 0x67, 0x40, 0xC3, 0x87, 0xA9, 0x02, 0x4C,
+0xCC, 0xEC, 0x00, 0x18, 0xF6, 0xD7, 0x87, 0x40,
+0x12, 0x4C, 0xB1, 0x67, 0x00, 0x18, 0x0D, 0xD8,
+0x10, 0xF0, 0x24, 0x6A, 0x3B, 0xF7, 0x44, 0x9A,
 0x01, 0x6B, 0x60, 0xC2, 0x01, 0x6B, 0x07, 0x97,
 0x06, 0x91, 0x05, 0x90, 0x43, 0x67, 0x04, 0x63,
 0x00, 0xEF, 0x00, 0x65, 0xFD, 0x63, 0x05, 0x62,
-0x04, 0xD0, 0x10, 0xF0, 0x24, 0x6B, 0xBC, 0xF2,
-0x70, 0x9B, 0x10, 0xF0, 0x23, 0x6A, 0x0C, 0xF3,
-0x15, 0x4A, 0x10, 0xF0, 0x30, 0x68, 0x40, 0xDB,
-0x00, 0xF0, 0x00, 0x48, 0xC1, 0xF6, 0x62, 0xA0,
-0xC1, 0xF6, 0x43, 0xA0, 0x6E, 0xEA, 0x39, 0x22,
-0x10, 0xF0, 0x24, 0x6A, 0xDC, 0xF6, 0x50, 0x9A,
-0x10, 0xF0, 0x24, 0x6C, 0x5C, 0xF3, 0x98, 0x9C,
-0x40, 0x9A, 0x8C, 0xEA, 0x2E, 0x2A, 0xE8, 0x6A,
-0x58, 0xEB, 0x87, 0x40, 0x3B, 0x4C, 0x12, 0xEB,
-0x71, 0xE4, 0x00, 0x18, 0xA6, 0xD8, 0x16, 0x22,
-0xC1, 0xF6, 0x42, 0xA0, 0x10, 0x6B, 0x01, 0x4A,
-0xC1, 0xF6, 0x42, 0xC0, 0xC1, 0xF6, 0x42, 0xA0,
-0x6E, 0xEA, 0x02, 0x2A, 0xC1, 0xF6, 0x42, 0xC0,
-0x10, 0xF0, 0x30, 0x6A, 0x00, 0xF0, 0x00, 0x4A,
-0xC1, 0xF6, 0x82, 0xA2, 0xC1, 0xF6, 0x63, 0xA2,
-0x8E, 0xEB, 0x0B, 0x23, 0x30, 0xF0, 0x20, 0x6A,
-0xC0, 0xF1, 0x08, 0x4A, 0x80, 0xF0, 0x6C, 0x9A,
-0x04, 0x6C, 0x8D, 0xEB, 0x80, 0xF0, 0x6C, 0xDA,
-0x04, 0x10, 0xC1, 0xF6, 0x84, 0xC2, 0xC1, 0xF6,
-0x65, 0xC2, 0x05, 0x97, 0x04, 0x90, 0x03, 0x63,
-0x00, 0xEF, 0x00, 0x65, 0xFC, 0x63, 0x07, 0x62,
-0x06, 0xD1, 0x05, 0xD0, 0x10, 0xF0, 0x30, 0x68,
-0x00, 0xF0, 0x00, 0x48, 0xC1, 0xF6, 0x42, 0xA8,
-0xA4, 0x67, 0x01, 0xF7, 0x00, 0x72, 0x07, 0x60,
-0xC1, 0xF6, 0x42, 0xA0, 0xC1, 0xF6, 0x83, 0xA0,
-0xFF, 0x4A, 0x8E, 0xEA, 0x09, 0x2A, 0x10, 0xF0,
-0x24, 0x6A, 0x7C, 0xF3, 0x6C, 0x9A, 0xFF, 0x6A,
-0x80, 0xA3, 0x8C, 0xEA, 0x40, 0xC3, 0xA7, 0x10,
-0x23, 0xA5, 0xC1, 0xF6, 0x45, 0xA0, 0xFF, 0x6B,
-0x04, 0x49, 0x6C, 0xE9, 0x1F, 0x2A, 0xE8, 0x6A,
-0x58, 0xEC, 0x30, 0xF0, 0x20, 0x6A, 0x67, 0x40,
-0x4E, 0xF2, 0x50, 0x9A, 0x3B, 0x4B, 0xD1, 0x67,
-0x12, 0xEC, 0x91, 0xE3, 0x40, 0xEA, 0xC1, 0xF6,
-0x43, 0xA0, 0xC1, 0xF6, 0x62, 0xA0, 0xC1, 0xF6,
-0x25, 0xC0, 0x4E, 0xEB, 0x74, 0x2B, 0x01, 0x4A,
-0xC1, 0xF6, 0x43, 0xC0, 0xC1, 0xF6, 0x43, 0xA0,
-0x10, 0x6B, 0x6E, 0xEA, 0x6C, 0x2A, 0xC1, 0xF6,
-0x43, 0xC0, 0x69, 0x10, 0x82, 0xA5, 0x37, 0x2C,
-0x51, 0xE1, 0xE3, 0x54, 0x34, 0x60, 0xC1, 0xF6,
-0x84, 0xA0, 0xE8, 0x6E, 0xD8, 0xEC, 0x12, 0xEC,
-0x11, 0xE4, 0x40, 0xF0, 0xC4, 0xA4, 0x2B, 0x2E,
-0x40, 0xF0, 0xC5, 0xA4, 0xFC, 0x4A, 0x6C, 0xEA,
-0xFF, 0x4E, 0x40, 0xF0, 0xC5, 0xC4, 0xC1, 0xF6,
-0x85, 0xA0, 0xE8, 0x6E, 0xFF, 0x4C, 0xC1, 0xF6,
-0x85, 0xC0, 0xC1, 0xF6, 0x84, 0xA0, 0xD8, 0xEC,
-0xD1, 0x67, 0x12, 0xEC, 0x91, 0xE0, 0x51, 0xE4,
-0x30, 0xF0, 0x20, 0x6A, 0x4E, 0xF2, 0x50, 0x9A,
-0x45, 0x4C, 0x40, 0xEA, 0xC1, 0xF6, 0x44, 0xA0,
-0xE8, 0x6B, 0x78, 0xEA, 0x12, 0xEA, 0x09, 0xE2,
-0x40, 0xF0, 0x65, 0xA2, 0x6D, 0xE1, 0x40, 0xF0,
-0x65, 0xC2, 0xC1, 0xF6, 0x45, 0xA0, 0x45, 0xE1,
-0xC1, 0xF6, 0x25, 0xC0, 0x30, 0x10, 0x10, 0xF0,
-0x30, 0x68, 0x00, 0xF0, 0x00, 0x48, 0xC1, 0xF6,
-0x63, 0xA0, 0xE8, 0x6A, 0x87, 0x40, 0x58, 0xEB,
-0x30, 0xF0, 0x20, 0x6A, 0x4E, 0xF2, 0x50, 0x9A,
-0x3B, 0x4C, 0xD1, 0x67, 0x12, 0xEB, 0x71, 0xE4,
-0x40, 0xEA, 0xC1, 0xF6, 0x43, 0xA0, 0x10, 0x6B,
-0xC1, 0xF6, 0x25, 0xC0, 0x01, 0x4A, 0xC1, 0xF6,
-0x43, 0xC0, 0xC1, 0xF6, 0x43, 0xA0, 0x6E, 0xEA,
-0x02, 0x2A, 0xC1, 0xF6, 0x43, 0xC0, 0x10, 0xF0,
-0x30, 0x6A, 0x00, 0xF0, 0x00, 0x4A, 0xC1, 0xF6,
-0x64, 0xA2, 0x10, 0x6C, 0x01, 0x4B, 0xC1, 0xF6,
-0x64, 0xC2, 0xC1, 0xF6, 0x64, 0xA2, 0x8E, 0xEB,
-0x02, 0x2B, 0xC1, 0xF6, 0x64, 0xC2, 0x10, 0xF0,
-0x30, 0x6A, 0x00, 0xF0, 0x00, 0x4A, 0xC1, 0xF6,
-0x84, 0xA2, 0xE8, 0x6B, 0x78, 0xEC, 0x04, 0x6C,
-0x12, 0xEB, 0x4D, 0xE3, 0xC1, 0xF6, 0x45, 0xA2,
-0x20, 0xF1, 0x49, 0xC3, 0x30, 0xF0, 0x20, 0x6A,
-0xC0, 0xF1, 0x08, 0x4A, 0x80, 0xF0, 0x6C, 0x9A,
-0x8D, 0xEB, 0x80, 0xF0, 0x6C, 0xDA, 0x07, 0x97,
-0x06, 0x91, 0x05, 0x90, 0x04, 0x63, 0x00, 0xEF,
-0xFC, 0x63, 0x07, 0x62, 0x06, 0xD1, 0x05, 0xD0,
-0xFF, 0xF7, 0x1F, 0x68, 0x0C, 0xED, 0x08, 0xD4,
-0xA0, 0xCC, 0x08, 0x92, 0xCC, 0xE8, 0x22, 0x67,
-0x01, 0xCA, 0x04, 0x49, 0x0B, 0x27, 0x0A, 0x20,
+0x04, 0xD0, 0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1,
+0x08, 0x4A, 0x80, 0xF0, 0x6C, 0x9A, 0xA4, 0x67,
+0x04, 0x6C, 0x8D, 0xEB, 0x30, 0xF0, 0x20, 0x68,
+0x80, 0xF0, 0x6C, 0xDA, 0xEF, 0xF4, 0x08, 0x48,
+0xA0, 0xF0, 0x4A, 0xA8, 0x01, 0xF1, 0x00, 0x72,
+0x07, 0x60, 0xA0, 0xF0, 0x6A, 0xA0, 0xA0, 0xF0,
+0x4B, 0xA0, 0xFF, 0x4B, 0x4E, 0xEB, 0x0A, 0x2B,
+0x10, 0xF0, 0x24, 0x6A, 0x3B, 0xF7, 0x6C, 0x9A,
+0x00, 0xF2, 0x00, 0x6C, 0x40, 0x9B, 0x8D, 0xEA,
+0x40, 0xDB, 0x12, 0x10, 0x50, 0x32, 0x51, 0xE0,
+0x0A, 0x4C, 0x10, 0x6E, 0x00, 0x18, 0xA1, 0xD4,
+0xA0, 0xF0, 0x4B, 0xA0, 0x0A, 0x6B, 0x01, 0x4A,
+0xA0, 0xF0, 0x4B, 0xC0, 0xA0, 0xF0, 0x4B, 0xA0,
+0x6E, 0xEA, 0x02, 0x2A, 0xA0, 0xF0, 0x4B, 0xC0,
+0x05, 0x97, 0x04, 0x90, 0x03, 0x63, 0x00, 0xEF,
+0xFD, 0x63, 0x05, 0x62, 0x04, 0xD0, 0x30, 0xF0,
+0x21, 0x6B, 0xD0, 0xF4, 0x40, 0xA3, 0xFF, 0x6F,
+0xE0, 0xF0, 0xC7, 0xA5, 0x41, 0xC5, 0x43, 0xA5,
+0xD0, 0xF4, 0x60, 0xA3, 0x03, 0x4A, 0xEC, 0xEA,
+0x09, 0x10, 0xED, 0x42, 0xFF, 0x68, 0x0C, 0xEF,
+0xFD, 0xE5, 0x64, 0xC7, 0xE6, 0xA7, 0x03, 0x4F,
+0xE9, 0xE2, 0x0C, 0xEA, 0xEF, 0x46, 0xE2, 0xEA,
+0xF4, 0x61, 0x30, 0xF0, 0x21, 0x6A, 0xD0, 0xF4,
+0x60, 0xA2, 0x01, 0x4B, 0xD0, 0xF4, 0x60, 0xC2,
+0x10, 0xF0, 0x24, 0x6B, 0x9C, 0xF2, 0x70, 0x9B,
 0x30, 0xF0, 0x20, 0x6A, 0x4E, 0xF2, 0x50, 0x9A,
-0xFF, 0x6E, 0x91, 0x67, 0xA7, 0x67, 0x0C, 0xEE,
-0x40, 0xEA, 0x05, 0xE1, 0x08, 0x92, 0x07, 0x97,
-0x05, 0x90, 0x47, 0xE1, 0xFF, 0xF7, 0x1F, 0x6A,
-0x2C, 0xEA, 0x06, 0x91, 0x04, 0x63, 0x00, 0xEF,
-0xDF, 0x63, 0x41, 0x62, 0x40, 0xD1, 0x3F, 0xD0,
-0x30, 0xF0, 0x20, 0x6A, 0x4E, 0xF2, 0x4C, 0x9A,
-0xFF, 0x68, 0xCC, 0xE8, 0x24, 0x67, 0x43, 0xD5,
-0x04, 0x04, 0x00, 0x6D, 0xE8, 0x6E, 0x40, 0xEA,
-0x01, 0x6A, 0x7D, 0x67, 0x4B, 0xEA, 0x50, 0xC3,
-0x1B, 0x6A, 0x52, 0xC3, 0x44, 0x40, 0x53, 0xC3,
-0x30, 0xF0, 0x20, 0x6A, 0x43, 0x95, 0x4E, 0xF2,
-0x50, 0x9A, 0xD0, 0x67, 0x05, 0xD1, 0x06, 0x04,
-0x40, 0xEA, 0x30, 0xF0, 0x20, 0x6A, 0xAE, 0xF2,
-0x5C, 0x9A, 0x04, 0x04, 0x40, 0xEA, 0x41, 0x97,
-0x40, 0x91, 0x3F, 0x90, 0x21, 0x63, 0x00, 0xEF,
+0x71, 0xE4, 0x40, 0xEA, 0x05, 0x97, 0x04, 0x90,
+0x03, 0x63, 0x00, 0xEF, 0xFC, 0x63, 0x07, 0x62,
+0x06, 0xD1, 0x05, 0xD0, 0x24, 0x67, 0x00, 0x18,
+0xE1, 0xD7, 0x00, 0x6B, 0x2E, 0x22, 0x10, 0xF0,
+0x24, 0x6A, 0xBC, 0xF2, 0x40, 0x9A, 0x0F, 0x6C,
+0xFF, 0xF7, 0x1F, 0x6B, 0x00, 0x9A, 0x10, 0xF0,
+0x24, 0x6A, 0x3C, 0xF0, 0x50, 0x9A, 0x4C, 0xE8,
+0xA1, 0x40, 0xA2, 0x32, 0x42, 0x32, 0x8C, 0xEA,
+0x10, 0xF0, 0x24, 0x6C, 0xBC, 0xF2, 0x84, 0x9C,
+0xC5, 0x67, 0x6C, 0xEE, 0xC0, 0xCC, 0x10, 0xF0,
+0x24, 0x6C, 0xBC, 0xF2, 0x88, 0x9C, 0x40, 0xC4,
+0xE0, 0xF0, 0x87, 0xA1, 0x6C, 0xEC, 0x00, 0x18,
+0xF6, 0xD7, 0x87, 0x40, 0x12, 0x4C, 0xB1, 0x67,
+0x00, 0x18, 0x64, 0xD8, 0x10, 0xF0, 0x24, 0x6A,
+0x3B, 0xF7, 0x44, 0x9A, 0x01, 0x6B, 0x60, 0xC2,
+0x01, 0x6B, 0x07, 0x97, 0x06, 0x91, 0x05, 0x90,
+0x43, 0x67, 0x04, 0x63, 0x00, 0xEF, 0x00, 0x65,
 0xFD, 0x63, 0x05, 0x62, 0x04, 0xD0, 0x10, 0xF0,
-0x24, 0x6B, 0xBC, 0xF2, 0x70, 0x9B, 0x10, 0xF0,
-0x23, 0x6A, 0xEC, 0xF5, 0x11, 0x4A, 0x30, 0xF0,
-0x20, 0x68, 0x40, 0xDB, 0xEF, 0xF4, 0x08, 0x48,
-0xA0, 0xF0, 0x8C, 0xA0, 0xA0, 0xF0, 0x4D, 0xA0,
-0x8E, 0xEA, 0x3D, 0x22, 0x10, 0xF0, 0x24, 0x6A,
-0xDC, 0xF6, 0x50, 0x9A, 0x10, 0xF0, 0x24, 0x6B,
-0x5C, 0xF3, 0x78, 0x9B, 0x40, 0x9A, 0x6C, 0xEA,
-0x32, 0x2A, 0x47, 0x40, 0x90, 0x34, 0x05, 0x4A,
-0x91, 0xE2, 0x00, 0x18, 0x4B, 0xD8, 0x0B, 0x2A,
+0x24, 0x6B, 0x9B, 0xF6, 0x6C, 0x9B, 0x10, 0xF0,
+0x23, 0x6A, 0x6C, 0xF2, 0x11, 0x4A, 0x10, 0xF0,
+0x30, 0x68, 0x40, 0xDB, 0x00, 0xF0, 0x00, 0x48,
+0xC1, 0xF6, 0x62, 0xA0, 0xC1, 0xF6, 0x43, 0xA0,
+0x6E, 0xEA, 0x39, 0x22, 0x10, 0xF0, 0x24, 0x6A,
+0xBC, 0xF2, 0x4C, 0x9A, 0x10, 0xF0, 0x24, 0x6C,
+0x5B, 0xF7, 0x88, 0x9C, 0x40, 0x9A, 0x8C, 0xEA,
+0x2E, 0x2A, 0xE8, 0x6A, 0x58, 0xEB, 0x87, 0x40,
+0x3B, 0x4C, 0x12, 0xEB, 0x71, 0xE4, 0x00, 0x18,
+0x7D, 0xD8, 0x16, 0x22, 0xC1, 0xF6, 0x42, 0xA0,
+0x10, 0x6B, 0x01, 0x4A, 0xC1, 0xF6, 0x42, 0xC0,
+0xC1, 0xF6, 0x42, 0xA0, 0x6E, 0xEA, 0x02, 0x2A,
+0xC1, 0xF6, 0x42, 0xC0, 0x10, 0xF0, 0x30, 0x6A,
+0x00, 0xF0, 0x00, 0x4A, 0xC1, 0xF6, 0x82, 0xA2,
+0xC1, 0xF6, 0x63, 0xA2, 0x8E, 0xEB, 0x0B, 0x23,
 0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A,
 0x80, 0xF0, 0x6C, 0x9A, 0x04, 0x6C, 0x8D, 0xEB,
-0x80, 0xF0, 0x6C, 0xDA, 0x22, 0x10, 0xA0, 0xF0,
-0x4C, 0xA0, 0x01, 0x4A, 0xA0, 0xF0, 0x4C, 0xC0,
-0xA0, 0xF0, 0x6C, 0xA0, 0xA0, 0xF0, 0x4D, 0xA0,
-0x6E, 0xEA, 0x0A, 0x22, 0x30, 0xF0, 0x20, 0x6A,
+0x80, 0xF0, 0x6C, 0xDA, 0x04, 0x10, 0xC1, 0xF6,
+0x84, 0xC2, 0xC1, 0xF6, 0x65, 0xC2, 0x05, 0x97,
+0x04, 0x90, 0x03, 0x63, 0x00, 0xEF, 0x00, 0x65,
+0xFC, 0x63, 0x07, 0x62, 0x06, 0xD1, 0x05, 0xD0,
+0x10, 0xF0, 0x30, 0x68, 0x00, 0xF0, 0x00, 0x48,
+0xC1, 0xF6, 0x42, 0xA8, 0xA4, 0x67, 0x01, 0xF7,
+0x00, 0x72, 0x07, 0x60, 0xC1, 0xF6, 0x42, 0xA0,
+0xC1, 0xF6, 0x83, 0xA0, 0xFF, 0x4A, 0x8E, 0xEA,
+0x09, 0x2A, 0x10, 0xF0, 0x24, 0x6A, 0x3B, 0xF7,
+0x6C, 0x9A, 0xFF, 0x6A, 0x80, 0xA3, 0x8C, 0xEA,
+0x40, 0xC3, 0xA7, 0x10, 0x23, 0xA5, 0xC1, 0xF6,
+0x45, 0xA0, 0xFF, 0x6B, 0x04, 0x49, 0x6C, 0xE9,
+0x1F, 0x2A, 0xE8, 0x6A, 0x58, 0xEC, 0x30, 0xF0,
+0x20, 0x6A, 0x67, 0x40, 0x4E, 0xF2, 0x50, 0x9A,
+0x3B, 0x4B, 0xD1, 0x67, 0x12, 0xEC, 0x91, 0xE3,
+0x40, 0xEA, 0xC1, 0xF6, 0x43, 0xA0, 0xC1, 0xF6,
+0x62, 0xA0, 0xC1, 0xF6, 0x25, 0xC0, 0x4E, 0xEB,
+0x74, 0x2B, 0x01, 0x4A, 0xC1, 0xF6, 0x43, 0xC0,
+0xC1, 0xF6, 0x43, 0xA0, 0x10, 0x6B, 0x6E, 0xEA,
+0x6C, 0x2A, 0xC1, 0xF6, 0x43, 0xC0, 0x69, 0x10,
+0x82, 0xA5, 0x37, 0x2C, 0x51, 0xE1, 0xE3, 0x54,
+0x34, 0x60, 0xC1, 0xF6, 0x84, 0xA0, 0xE8, 0x6E,
+0xD8, 0xEC, 0x12, 0xEC, 0x11, 0xE4, 0x40, 0xF0,
+0xC4, 0xA4, 0x2B, 0x2E, 0x40, 0xF0, 0xC5, 0xA4,
+0xFC, 0x4A, 0x6C, 0xEA, 0xFF, 0x4E, 0x40, 0xF0,
+0xC5, 0xC4, 0xC1, 0xF6, 0x85, 0xA0, 0xE8, 0x6E,
+0xFF, 0x4C, 0xC1, 0xF6, 0x85, 0xC0, 0xC1, 0xF6,
+0x84, 0xA0, 0xD8, 0xEC, 0xD1, 0x67, 0x12, 0xEC,
+0x91, 0xE0, 0x51, 0xE4, 0x30, 0xF0, 0x20, 0x6A,
+0x4E, 0xF2, 0x50, 0x9A, 0x45, 0x4C, 0x40, 0xEA,
+0xC1, 0xF6, 0x44, 0xA0, 0xE8, 0x6B, 0x78, 0xEA,
+0x12, 0xEA, 0x09, 0xE2, 0x40, 0xF0, 0x65, 0xA2,
+0x6D, 0xE1, 0x40, 0xF0, 0x65, 0xC2, 0xC1, 0xF6,
+0x45, 0xA0, 0x45, 0xE1, 0xC1, 0xF6, 0x25, 0xC0,
+0x30, 0x10, 0x10, 0xF0, 0x30, 0x68, 0x00, 0xF0,
+0x00, 0x48, 0xC1, 0xF6, 0x63, 0xA0, 0xE8, 0x6A,
+0x87, 0x40, 0x58, 0xEB, 0x30, 0xF0, 0x20, 0x6A,
+0x4E, 0xF2, 0x50, 0x9A, 0x3B, 0x4C, 0xD1, 0x67,
+0x12, 0xEB, 0x71, 0xE4, 0x40, 0xEA, 0xC1, 0xF6,
+0x43, 0xA0, 0x10, 0x6B, 0xC1, 0xF6, 0x25, 0xC0,
+0x01, 0x4A, 0xC1, 0xF6, 0x43, 0xC0, 0xC1, 0xF6,
+0x43, 0xA0, 0x6E, 0xEA, 0x02, 0x2A, 0xC1, 0xF6,
+0x43, 0xC0, 0x10, 0xF0, 0x30, 0x6A, 0x00, 0xF0,
+0x00, 0x4A, 0xC1, 0xF6, 0x64, 0xA2, 0x10, 0x6C,
+0x01, 0x4B, 0xC1, 0xF6, 0x64, 0xC2, 0xC1, 0xF6,
+0x64, 0xA2, 0x8E, 0xEB, 0x02, 0x2B, 0xC1, 0xF6,
+0x64, 0xC2, 0x10, 0xF0, 0x30, 0x6A, 0x00, 0xF0,
+0x00, 0x4A, 0xC1, 0xF6, 0x84, 0xA2, 0xE8, 0x6B,
+0x78, 0xEC, 0x04, 0x6C, 0x12, 0xEB, 0x4D, 0xE3,
+0xC1, 0xF6, 0x45, 0xA2, 0x20, 0xF1, 0x49, 0xC3,
+0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A,
+0x80, 0xF0, 0x6C, 0x9A, 0x8D, 0xEB, 0x80, 0xF0,
+0x6C, 0xDA, 0x07, 0x97, 0x06, 0x91, 0x05, 0x90,
+0x04, 0x63, 0x00, 0xEF, 0xFD, 0x63, 0x05, 0x62,
+0x04, 0xD0, 0x10, 0xF0, 0x24, 0x6B, 0x9B, 0xF6,
+0x6C, 0x9B, 0x10, 0xF0, 0x23, 0x6A, 0xAC, 0xF4,
+0x0D, 0x4A, 0x30, 0xF0, 0x20, 0x68, 0x40, 0xDB,
+0xEF, 0xF4, 0x08, 0x48, 0xA0, 0xF0, 0x8A, 0xA0,
+0xA0, 0xF0, 0x4B, 0xA0, 0x8E, 0xEA, 0x3D, 0x22,
+0x10, 0xF0, 0x24, 0x6A, 0xBC, 0xF2, 0x4C, 0x9A,
+0x10, 0xF0, 0x24, 0x6B, 0x5B, 0xF7, 0x68, 0x9B,
+0x40, 0x9A, 0x6C, 0xEA, 0x32, 0x2A, 0x47, 0x40,
+0x90, 0x34, 0x03, 0x4A, 0x91, 0xE2, 0x00, 0x18,
+0x22, 0xD8, 0x0B, 0x2A, 0x30, 0xF0, 0x20, 0x6A,
 0xC0, 0xF1, 0x08, 0x4A, 0x80, 0xF0, 0x6C, 0x9A,
 0x04, 0x6C, 0x8D, 0xEB, 0x80, 0xF0, 0x6C, 0xDA,
-0x30, 0xF0, 0x20, 0x6A, 0xEF, 0xF4, 0x08, 0x4A,
-0xA0, 0xF0, 0x6C, 0xA2, 0x0A, 0x6C, 0x8E, 0xEB,
-0x02, 0x2B, 0xA0, 0xF0, 0x6C, 0xC2, 0x00, 0x18,
-0xDF, 0xD9, 0x05, 0x97, 0x04, 0x90, 0x03, 0x63,
-0x00, 0xEF, 0x00, 0x65, 0xFB, 0x63, 0x09, 0x62,
-0x08, 0xD0, 0x10, 0xF0, 0x24, 0x6A, 0x3C, 0xF4,
-0x60, 0x9A, 0x10, 0xF0, 0x24, 0x6C, 0x1C, 0xF3,
-0x10, 0x9C, 0x40, 0x9B, 0x00, 0xF4, 0x1D, 0x6C,
-0x10, 0x6D, 0x0D, 0xEA, 0x40, 0xDB, 0x06, 0x02,
-0x04, 0xD2, 0x30, 0xF0, 0x20, 0x6A, 0xAE, 0xF4,
-0x54, 0x9A, 0x00, 0x6E, 0x82, 0xF3, 0x08, 0x6F,
-0x40, 0xEA, 0x07, 0x2A, 0x10, 0xF0, 0x24, 0x6B,
-0x7C, 0xF3, 0x8C, 0x9B, 0x60, 0x9C, 0x0D, 0xEB,
-0x60, 0xDC, 0x09, 0x97, 0x08, 0x90, 0x05, 0x63,
-0x00, 0xEF, 0x00, 0x65, 0x60, 0xA4, 0x30, 0xF0,
-0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A, 0xC8, 0xF2,
-0x7D, 0xC2, 0x61, 0xA4, 0xC8, 0xF2, 0x7E, 0xC2,
-0x62, 0xA4, 0xC8, 0xF2, 0x7F, 0xC2, 0x63, 0xA4,
-0xE8, 0xF2, 0x60, 0xC2, 0x64, 0xA4, 0xE8, 0xF2,
-0x61, 0xC2, 0x65, 0xA4, 0xE8, 0xF2, 0x62, 0xC2,
-0x66, 0xA4, 0xE8, 0xF2, 0x63, 0xC2, 0x20, 0xE8,
-0xFC, 0x63, 0x07, 0x62, 0x06, 0xD1, 0x05, 0xD0,
-0x30, 0xF0, 0x20, 0x69, 0x30, 0xF0, 0x20, 0x6A,
-0x11, 0x67, 0x4E, 0xF2, 0x50, 0x9A, 0xEF, 0xF4,
-0x08, 0x48, 0xA4, 0x67, 0x04, 0x6E, 0x90, 0x67,
-0x40, 0xEA, 0xEF, 0xF4, 0x68, 0xA1, 0x01, 0x6A,
-0x6C, 0xEA, 0x0E, 0x22, 0x42, 0xA0, 0xFF, 0x72,
-0x0B, 0x60, 0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1,
-0x08, 0x4A, 0x81, 0xA0, 0x88, 0xF3, 0x7B, 0xA2,
-0x6D, 0xE4, 0x04, 0x4B, 0x88, 0xF3, 0x6A, 0xCA,
-0x07, 0x97, 0x06, 0x91, 0x05, 0x90, 0x04, 0x63,
-0x00, 0xEF, 0x00, 0x65, 0xFB, 0x63, 0x09, 0x62,
-0x08, 0xD1, 0x07, 0xD0, 0x10, 0xF0, 0x24, 0x6A,
-0xDC, 0xF6, 0x54, 0x9A, 0x60, 0xA2, 0x03, 0x6A,
-0x6C, 0xEA, 0x10, 0x6B, 0x64, 0xEA, 0xFF, 0x6A,
-0x4C, 0xEB, 0x10, 0xF0, 0x24, 0x6A, 0xDC, 0xF6,
-0x58, 0x9A, 0x04, 0xD3, 0x40, 0x9A, 0x05, 0xD2,
-0x10, 0xF0, 0x24, 0x6A, 0xDC, 0xF6, 0x5C, 0x9A,
-0x00, 0x9A, 0x05, 0x92, 0x0A, 0xEA, 0xA0, 0xF0,
-0x15, 0x60, 0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1,
-0x08, 0x4A, 0x80, 0xF0, 0x6C, 0x9A, 0x02, 0x6C,
-0x8D, 0xEB, 0x80, 0xF0, 0x6C, 0xDA, 0x10, 0xF0,
-0x30, 0x69, 0x00, 0xF0, 0x00, 0x49, 0xC1, 0xF7,
-0x46, 0xA9, 0x00, 0xF7, 0x00, 0x72, 0x07, 0x60,
-0xC1, 0xF7, 0x66, 0xA1, 0xC1, 0xF7, 0x87, 0xA1,
-0xAF, 0x43, 0x8E, 0xED, 0x0A, 0x2D, 0x10, 0xF0,
-0x24, 0x6A, 0x7C, 0xF3, 0x6C, 0x9A, 0xFF, 0x6C,
-0x01, 0x4C, 0x40, 0x9B, 0x8D, 0xEA, 0x40, 0xDB,
-0x91, 0x10, 0x10, 0xF0, 0x24, 0x6D, 0xFC, 0xF6,
-0xA0, 0x9D, 0x7F, 0x6E, 0xB5, 0xE0, 0xE0, 0xA5,
-0xCC, 0xEF, 0x44, 0x2F, 0x00, 0xF4, 0x00, 0x72,
-0x80, 0xF0, 0x04, 0x60, 0xAC, 0x43, 0x8E, 0xED,
-0x80, 0xF0, 0x00, 0x25, 0x00, 0xF5, 0x01, 0x72,
-0x7D, 0x60, 0x00, 0xF6, 0x02, 0x72, 0x7A, 0x60,
-0x00, 0xF7, 0x03, 0x72, 0x77, 0x60, 0x00, 0xF5,
-0x00, 0x72, 0x74, 0x60, 0xFD, 0x4B, 0x6E, 0xEC,
-0x71, 0x24, 0x10, 0xF0, 0x30, 0x69, 0x00, 0xF0,
-0x00, 0x49, 0xC1, 0xF7, 0x46, 0xA9, 0x00, 0xF6,
-0x01, 0x72, 0x68, 0x60, 0x00, 0xF7, 0x02, 0x72,
-0x65, 0x60, 0x00, 0xF6, 0x00, 0x72, 0x62, 0x60,
-0xC1, 0xF7, 0x66, 0xA1, 0xC1, 0xF7, 0x87, 0xA1,
-0xFE, 0x4B, 0x8E, 0xEB, 0x5B, 0x23, 0x00, 0xF7,
-0x01, 0x72, 0x58, 0x60, 0x10, 0xF0, 0x24, 0x6A,
-0xFC, 0xF6, 0x44, 0x9A, 0x10, 0xF0, 0x24, 0x6D,
-0x76, 0x4C, 0xFC, 0xF6, 0xA0, 0x9D, 0x49, 0xE0,
-0x94, 0x34, 0x60, 0xAA, 0x91, 0xE1, 0x30, 0xF0,
-0x20, 0x6A, 0x4E, 0xF2, 0x50, 0x9A, 0x06, 0x4C,
-0xB5, 0xE0, 0x12, 0x10, 0x40, 0xA5, 0x4C, 0xEE,
-0x01, 0x76, 0x1E, 0x61, 0x10, 0xF0, 0x24, 0x6A,
-0xFC, 0xF6, 0x44, 0x9A, 0x76, 0x4C, 0x94, 0x34,
-0x49, 0xE0, 0x60, 0xAA, 0x30, 0xF0, 0x20, 0x6A,
-0x4E, 0xF2, 0x50, 0x9A, 0x91, 0xE1, 0x06, 0x4C,
-0xFF, 0x6E, 0x6C, 0xEE, 0x40, 0xEA, 0xC1, 0xF7,
-0x47, 0xA1, 0x08, 0x6B, 0x01, 0x4A, 0xC1, 0xF7,
-0x47, 0xC1, 0xC1, 0xF7, 0x47, 0xA1, 0x6E, 0xEA,
-0x0E, 0x2A, 0xC1, 0xF7, 0x47, 0xC1, 0x0B, 0x10,
-0x10, 0xF0, 0x24, 0x6A, 0x7C, 0xF3, 0x6C, 0x9A,
-0x10, 0xF0, 0x24, 0x6C, 0xFC, 0xF3, 0x84, 0x9C,
-0x40, 0x9B, 0x8D, 0xEA, 0x40, 0xDB, 0x10, 0xF0,
-0x24, 0x6A, 0xFC, 0xF6, 0x48, 0x9A, 0x04, 0x93,
-0x40, 0x9A, 0x0E, 0xEA, 0x61, 0xE0, 0x05, 0x2A,
-0x10, 0xF0, 0x24, 0x6A, 0xFC, 0xF6, 0x4C, 0x9A,
-0x00, 0x9A, 0x10, 0xF0, 0x24, 0x6A, 0xDC, 0xF6,
-0x5C, 0x9A, 0x00, 0xDA, 0x05, 0x92, 0x4A, 0xE8,
-0x5F, 0xF7, 0x15, 0x61, 0x09, 0x97, 0x08, 0x91,
-0x07, 0x90, 0x05, 0x63, 0x00, 0xEF, 0x00, 0x65,
-0xFE, 0x63, 0x03, 0xD1, 0x02, 0xD0, 0x10, 0xF0,
-0x24, 0x6A, 0xFC, 0xF6, 0x50, 0x9A, 0x0F, 0x6B,
-0x40, 0xA2, 0x4C, 0xEB, 0x0A, 0x23, 0x30, 0xF0,
+0x22, 0x10, 0xA0, 0xF0, 0x4A, 0xA0, 0x01, 0x4A,
+0xA0, 0xF0, 0x4A, 0xC0, 0xA0, 0xF0, 0x6A, 0xA0,
+0xA0, 0xF0, 0x4B, 0xA0, 0x6E, 0xEA, 0x0A, 0x22,
+0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A,
+0x80, 0xF0, 0x6C, 0x9A, 0x04, 0x6C, 0x8D, 0xEB,
+0x80, 0xF0, 0x6C, 0xDA, 0x30, 0xF0, 0x20, 0x6A,
+0xEF, 0xF4, 0x08, 0x4A, 0xA0, 0xF0, 0x6A, 0xA2,
+0x0A, 0x6C, 0x8E, 0xEB, 0x02, 0x2B, 0xA0, 0xF0,
+0x6A, 0xC2, 0x00, 0x18, 0x8E, 0xD9, 0x05, 0x97,
+0x04, 0x90, 0x03, 0x63, 0x00, 0xEF, 0x00, 0x65,
+0xFB, 0x63, 0x09, 0x62, 0x08, 0xD0, 0x10, 0xF0,
+0x24, 0x6A, 0xFB, 0xF7, 0x7C, 0x9A, 0x10, 0xF0,
+0x24, 0x6C, 0xFB, 0xF6, 0x0C, 0x9C, 0x40, 0x9B,
+0x00, 0xF4, 0x1D, 0x6C, 0x10, 0x6D, 0x0D, 0xEA,
+0x40, 0xDB, 0x06, 0x02, 0x04, 0xD2, 0x30, 0xF0,
+0x20, 0x6A, 0xAE, 0xF4, 0x54, 0x9A, 0x00, 0x6E,
+0x82, 0xF3, 0x08, 0x6F, 0x40, 0xEA, 0x07, 0x2A,
+0x10, 0xF0, 0x24, 0x6B, 0x3B, 0xF7, 0x8C, 0x9B,
+0x60, 0x9C, 0x0D, 0xEB, 0x60, 0xDC, 0x09, 0x97,
+0x08, 0x90, 0x05, 0x63, 0x00, 0xEF, 0x00, 0x65,
+0x60, 0xA4, 0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1,
+0x08, 0x4A, 0xC8, 0xF2, 0x7D, 0xC2, 0x61, 0xA4,
+0xC8, 0xF2, 0x7E, 0xC2, 0x62, 0xA4, 0xC8, 0xF2,
+0x7F, 0xC2, 0x63, 0xA4, 0xE8, 0xF2, 0x60, 0xC2,
+0x64, 0xA4, 0xE8, 0xF2, 0x61, 0xC2, 0x65, 0xA4,
+0xE8, 0xF2, 0x62, 0xC2, 0x66, 0xA4, 0xE8, 0xF2,
+0x63, 0xC2, 0x20, 0xE8, 0xFC, 0x63, 0x07, 0x62,
+0x06, 0xD1, 0x05, 0xD0, 0x30, 0xF0, 0x20, 0x69,
+0x30, 0xF0, 0x20, 0x6A, 0x11, 0x67, 0x4E, 0xF2,
+0x50, 0x9A, 0xEF, 0xF4, 0x08, 0x48, 0xA4, 0x67,
+0x04, 0x6E, 0x90, 0x67, 0x40, 0xEA, 0xEF, 0xF4,
+0x68, 0xA1, 0x01, 0x6A, 0x6C, 0xEA, 0x0E, 0x22,
+0x42, 0xA0, 0xFF, 0x72, 0x0B, 0x60, 0x30, 0xF0,
+0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A, 0x81, 0xA0,
+0x88, 0xF3, 0x7B, 0xA2, 0x6D, 0xE4, 0x04, 0x4B,
+0x88, 0xF3, 0x6A, 0xCA, 0x07, 0x97, 0x06, 0x91,
+0x05, 0x90, 0x04, 0x63, 0x00, 0xEF, 0x00, 0x65,
+0xFB, 0x63, 0x09, 0x62, 0x08, 0xD1, 0x07, 0xD0,
+0x10, 0xF0, 0x24, 0x6A, 0xBC, 0xF2, 0x50, 0x9A,
+0x60, 0xA2, 0x03, 0x6A, 0x6C, 0xEA, 0x10, 0x6B,
+0x64, 0xEA, 0xFF, 0x6A, 0x4C, 0xEB, 0x10, 0xF0,
+0x24, 0x6A, 0xBC, 0xF2, 0x54, 0x9A, 0x04, 0xD3,
+0x40, 0x9A, 0x05, 0xD2, 0x10, 0xF0, 0x24, 0x6A,
+0xBC, 0xF2, 0x58, 0x9A, 0x00, 0x9A, 0x05, 0x92,
+0x0A, 0xEA, 0xA0, 0xF0, 0x15, 0x60, 0x30, 0xF0,
 0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A, 0x80, 0xF0,
-0x8C, 0x9A, 0x02, 0x6D, 0xAD, 0xEC, 0x80, 0xF0,
-0x8C, 0xDA, 0x10, 0xF0, 0x30, 0x6A, 0x40, 0xF0,
-0x40, 0xA2, 0xFF, 0x4A, 0x00, 0xD2, 0xE2, 0x10,
-0x10, 0xF0, 0x30, 0x6A, 0x00, 0xF0, 0x00, 0x4A,
-0x40, 0xF0, 0x80, 0xAA, 0x00, 0xF7, 0x00, 0x74,
-0x05, 0x60, 0x40, 0xF0, 0x01, 0xA2, 0x00, 0x94,
-0x8A, 0xE8, 0x0A, 0x61, 0x10, 0xF0, 0x24, 0x6A,
-0x7C, 0xF3, 0x6C, 0x9A, 0xFF, 0x6C, 0x01, 0x4C,
-0x40, 0x9B, 0x8D, 0xEA, 0x40, 0xDB, 0xCC, 0x10,
-0x30, 0xF0, 0x21, 0x6D, 0xD0, 0xF4, 0x8E, 0xA5,
-0xC3, 0x67, 0xC7, 0xEC, 0x86, 0x67, 0x01, 0x6E,
-0xCC, 0xEC, 0xA0, 0xF0, 0x08, 0x24, 0x0C, 0x35,
-0x04, 0x4D, 0xB5, 0xE2, 0x00, 0x6A, 0x30, 0xF0,
-0x21, 0x6E, 0xD0, 0xF4, 0xEE, 0xA6, 0xFF, 0x6C,
-0x1F, 0xF7, 0x00, 0x69, 0x8C, 0xEF, 0x74, 0x4F,
-0xE8, 0x37, 0xFD, 0xE2, 0x2C, 0xEF, 0x02, 0xF0,
-0x00, 0x77, 0x08, 0x60, 0xD0, 0xF4, 0xEE, 0xA6,
+0x6C, 0x9A, 0x02, 0x6C, 0x8D, 0xEB, 0x80, 0xF0,
+0x6C, 0xDA, 0x10, 0xF0, 0x30, 0x69, 0x00, 0xF0,
+0x00, 0x49, 0xC1, 0xF7, 0x46, 0xA9, 0x00, 0xF7,
+0x00, 0x72, 0x07, 0x60, 0xC1, 0xF7, 0x66, 0xA1,
+0xC1, 0xF7, 0x87, 0xA1, 0xAF, 0x43, 0x8E, 0xED,
+0x0A, 0x2D, 0x10, 0xF0, 0x24, 0x6A, 0x3B, 0xF7,
+0x6C, 0x9A, 0xFF, 0x6C, 0x01, 0x4C, 0x40, 0x9B,
+0x8D, 0xEA, 0x40, 0xDB, 0x91, 0x10, 0x10, 0xF0,
+0x24, 0x6D, 0xBC, 0xF2, 0xBC, 0x9D, 0x7F, 0x6E,
+0xB5, 0xE0, 0xE0, 0xA5, 0xCC, 0xEF, 0x44, 0x2F,
+0x00, 0xF4, 0x00, 0x72, 0x80, 0xF0, 0x04, 0x60,
+0xAC, 0x43, 0x8E, 0xED, 0x80, 0xF0, 0x00, 0x25,
+0x00, 0xF5, 0x01, 0x72, 0x7D, 0x60, 0x00, 0xF6,
+0x02, 0x72, 0x7A, 0x60, 0x00, 0xF7, 0x03, 0x72,
+0x77, 0x60, 0x00, 0xF5, 0x00, 0x72, 0x74, 0x60,
+0xFD, 0x4B, 0x6E, 0xEC, 0x71, 0x24, 0x10, 0xF0,
+0x30, 0x69, 0x00, 0xF0, 0x00, 0x49, 0xC1, 0xF7,
+0x46, 0xA9, 0x00, 0xF6, 0x01, 0x72, 0x68, 0x60,
+0x00, 0xF7, 0x02, 0x72, 0x65, 0x60, 0x00, 0xF6,
+0x00, 0x72, 0x62, 0x60, 0xC1, 0xF7, 0x66, 0xA1,
+0xC1, 0xF7, 0x87, 0xA1, 0xFE, 0x4B, 0x8E, 0xEB,
+0x5B, 0x23, 0x00, 0xF7, 0x01, 0x72, 0x58, 0x60,
+0x10, 0xF0, 0x24, 0x6A, 0xDC, 0xF2, 0x40, 0x9A,
+0x10, 0xF0, 0x24, 0x6D, 0x76, 0x4C, 0xBC, 0xF2,
+0xBC, 0x9D, 0x49, 0xE0, 0x94, 0x34, 0x60, 0xAA,
+0x91, 0xE1, 0x30, 0xF0, 0x20, 0x6A, 0x4E, 0xF2,
+0x50, 0x9A, 0x06, 0x4C, 0xB5, 0xE0, 0x12, 0x10,
+0x40, 0xA5, 0x4C, 0xEE, 0x01, 0x76, 0x1E, 0x61,
+0x10, 0xF0, 0x24, 0x6A, 0xDC, 0xF2, 0x40, 0x9A,
+0x76, 0x4C, 0x94, 0x34, 0x49, 0xE0, 0x60, 0xAA,
+0x30, 0xF0, 0x20, 0x6A, 0x4E, 0xF2, 0x50, 0x9A,
+0x91, 0xE1, 0x06, 0x4C, 0xFF, 0x6E, 0x6C, 0xEE,
+0x40, 0xEA, 0xC1, 0xF7, 0x47, 0xA1, 0x08, 0x6B,
+0x01, 0x4A, 0xC1, 0xF7, 0x47, 0xC1, 0xC1, 0xF7,
+0x47, 0xA1, 0x6E, 0xEA, 0x0E, 0x2A, 0xC1, 0xF7,
+0x47, 0xC1, 0x0B, 0x10, 0x10, 0xF0, 0x24, 0x6A,
+0x3B, 0xF7, 0x6C, 0x9A, 0x10, 0xF0, 0x24, 0x6C,
+0xDB, 0xF7, 0x80, 0x9C, 0x40, 0x9B, 0x8D, 0xEA,
+0x40, 0xDB, 0x10, 0xF0, 0x24, 0x6A, 0xDC, 0xF2,
+0x44, 0x9A, 0x04, 0x93, 0x40, 0x9A, 0x0E, 0xEA,
+0x61, 0xE0, 0x05, 0x2A, 0x10, 0xF0, 0x24, 0x6A,
+0xDC, 0xF2, 0x48, 0x9A, 0x00, 0x9A, 0x10, 0xF0,
+0x24, 0x6A, 0xBC, 0xF2, 0x58, 0x9A, 0x00, 0xDA,
+0x05, 0x92, 0x4A, 0xE8, 0x5F, 0xF7, 0x15, 0x61,
+0x09, 0x97, 0x08, 0x91, 0x07, 0x90, 0x05, 0x63,
+0x00, 0xEF, 0x00, 0x65, 0xFE, 0x63, 0x03, 0xD1,
+0x02, 0xD0, 0x10, 0xF0, 0x24, 0x6A, 0xDC, 0xF2,
+0x4C, 0x9A, 0x0F, 0x6B, 0x40, 0xA2, 0x4C, 0xEB,
+0x0A, 0x23, 0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1,
+0x08, 0x4A, 0x80, 0xF0, 0x8C, 0x9A, 0x02, 0x6D,
+0xAD, 0xEC, 0x80, 0xF0, 0x8C, 0xDA, 0x10, 0xF0,
+0x30, 0x6A, 0x40, 0xF0, 0x40, 0xA2, 0xFF, 0x4A,
+0x00, 0xD2, 0xE2, 0x10, 0x10, 0xF0, 0x30, 0x6A,
+0x00, 0xF0, 0x00, 0x4A, 0x40, 0xF0, 0x80, 0xAA,
+0x00, 0xF7, 0x00, 0x74, 0x05, 0x60, 0x40, 0xF0,
+0x01, 0xA2, 0x00, 0x94, 0x8A, 0xE8, 0x0A, 0x61,
+0x10, 0xF0, 0x24, 0x6A, 0x3B, 0xF7, 0x6C, 0x9A,
+0xFF, 0x6C, 0x01, 0x4C, 0x40, 0x9B, 0x8D, 0xEA,
+0x40, 0xDB, 0xCC, 0x10, 0x30, 0xF0, 0x21, 0x6D,
+0xD0, 0xF4, 0x82, 0xA5, 0xC3, 0x67, 0xC7, 0xEC,
+0x86, 0x67, 0x01, 0x6E, 0xCC, 0xEC, 0xA0, 0xF0,
+0x08, 0x24, 0x0C, 0x35, 0x04, 0x4D, 0xB5, 0xE2,
+0x00, 0x6A, 0x30, 0xF0, 0x21, 0x6E, 0xD0, 0xF4,
+0xE2, 0xA6, 0xFF, 0x6C, 0x1F, 0xF7, 0x00, 0x69,
 0x8C, 0xEF, 0x74, 0x4F, 0xE8, 0x37, 0xFD, 0xE2,
-0x2C, 0xEF, 0x0F, 0x2F, 0x30, 0xF0, 0x21, 0x6C,
-0xD0, 0xF4, 0x2E, 0xA4, 0xFF, 0x6C, 0x10, 0xF0,
-0x24, 0x6E, 0x8C, 0xE9, 0x74, 0x49, 0x28, 0x31,
-0xE2, 0x67, 0x25, 0xE2, 0xFC, 0xF2, 0xC0, 0x9E,
-0x0B, 0x10, 0xD0, 0xF4, 0x2E, 0xA6, 0x10, 0xF0,
-0x24, 0x6E, 0xFC, 0xF2, 0xC4, 0x9E, 0x8C, 0xE9,
+0x2C, 0xEF, 0x02, 0xF0, 0x00, 0x77, 0x08, 0x60,
+0xD0, 0xF4, 0xE2, 0xA6, 0x8C, 0xEF, 0x74, 0x4F,
+0xE8, 0x37, 0xFD, 0xE2, 0x2C, 0xEF, 0x0F, 0x2F,
+0x30, 0xF0, 0x21, 0x6C, 0xD0, 0xF4, 0x22, 0xA4,
+0xFF, 0x6C, 0x10, 0xF0, 0x24, 0x6E, 0x8C, 0xE9,
 0x74, 0x49, 0x28, 0x31, 0xE2, 0x67, 0x25, 0xE2,
-0xD9, 0xE1, 0xC0, 0xA6, 0x0C, 0x31, 0xFD, 0xE1,
-0xCC, 0xEC, 0x10, 0xF0, 0x30, 0x6E, 0x00, 0xF0,
-0x00, 0x4E, 0xD9, 0xE7, 0x80, 0xC6, 0x30, 0xF0,
-0x21, 0x6E, 0xD0, 0xF4, 0xEE, 0xA6, 0xFF, 0x6C,
-0x1F, 0xF7, 0x00, 0x69, 0x8C, 0xEF, 0x7C, 0x4F,
-0xE8, 0x37, 0xFD, 0xE2, 0x2C, 0xEF, 0x02, 0xF0,
-0x00, 0x77, 0x08, 0x60, 0xD0, 0xF4, 0xEE, 0xA6,
+0xBB, 0xF6, 0xDC, 0x9E, 0x0B, 0x10, 0xD0, 0xF4,
+0x22, 0xA6, 0x10, 0xF0, 0x24, 0x6E, 0xDB, 0xF6,
+0xC0, 0x9E, 0x8C, 0xE9, 0x74, 0x49, 0x28, 0x31,
+0xE2, 0x67, 0x25, 0xE2, 0xD9, 0xE1, 0xC0, 0xA6,
+0x0C, 0x31, 0xFD, 0xE1, 0xCC, 0xEC, 0x10, 0xF0,
+0x30, 0x6E, 0x00, 0xF0, 0x00, 0x4E, 0xD9, 0xE7,
+0x80, 0xC6, 0x30, 0xF0, 0x21, 0x6E, 0xD0, 0xF4,
+0xE2, 0xA6, 0xFF, 0x6C, 0x1F, 0xF7, 0x00, 0x69,
 0x8C, 0xEF, 0x7C, 0x4F, 0xE8, 0x37, 0xFD, 0xE2,
-0x2C, 0xEF, 0x0E, 0x2F, 0x30, 0xF0, 0x21, 0x6C,
-0xD0, 0xF4, 0xCE, 0xA4, 0xFF, 0x6C, 0x10, 0xF0,
-0x24, 0x6F, 0x8C, 0xEE, 0x7C, 0x4E, 0xC8, 0x36,
-0xD9, 0xE2, 0xFC, 0xF2, 0xE0, 0x9F, 0x0A, 0x10,
-0xD0, 0xF4, 0xCE, 0xA6, 0x10, 0xF0, 0x24, 0x6F,
-0xFC, 0xF2, 0xE4, 0x9F, 0x8C, 0xEE, 0x7C, 0x4E,
-0xC8, 0x36, 0xD9, 0xE2, 0xF9, 0xE6, 0xC0, 0xA6,
-0x01, 0x4A, 0x04, 0x72, 0xCC, 0xEC, 0x80, 0xC5,
-0x01, 0x4D, 0x8D, 0x61, 0x30, 0xF0, 0x21, 0x6A,
-0xD0, 0xF4, 0xAE, 0xA2, 0x01, 0x6C, 0xC4, 0x67,
-0xC4, 0xED, 0xCF, 0xED, 0xD0, 0xF4, 0xCE, 0xA2,
-0xAC, 0xEB, 0xFF, 0x6D, 0x84, 0xEE, 0x10, 0xF0,
-0x24, 0x6E, 0xFC, 0xF6, 0xD0, 0x9E, 0xAC, 0xEC,
-0x80, 0xC6, 0xD0, 0xF4, 0x8E, 0xA2, 0xAC, 0xEC,
-0x01, 0x4C, 0xAC, 0xEC, 0xD0, 0xF4, 0x8E, 0xC2,
-0xD0, 0xF4, 0xAE, 0xA2, 0x03, 0x6C, 0xAC, 0xEC,
-0xD0, 0xF4, 0x8E, 0xC2, 0x10, 0xF0, 0x30, 0x6A,
-0x00, 0xF0, 0x00, 0x4A, 0x40, 0xF0, 0x81, 0xA2,
-0x08, 0x6D, 0x01, 0x4C, 0x40, 0xF0, 0x81, 0xC2,
-0x40, 0xF0, 0x81, 0xA2, 0xAE, 0xEC, 0x1A, 0x2C,
-0x40, 0xF0, 0x81, 0xC2, 0x17, 0x10, 0x10, 0xF0,
-0x24, 0x6A, 0x7C, 0xF3, 0x8C, 0x9A, 0x02, 0x6E,
-0x40, 0x9C, 0xCD, 0xEA, 0x40, 0xDC, 0x10, 0xF0,
-0x24, 0x6A, 0xFC, 0xF6, 0x54, 0x9A, 0x60, 0xC2,
-0xD0, 0xF4, 0x6E, 0xA5, 0xFF, 0x6A, 0x4C, 0xEB,
-0x10, 0xF0, 0x24, 0x6A, 0xFC, 0xF6, 0x58, 0x9A,
-0x60, 0xC2, 0x02, 0x10, 0x1F, 0xF7, 0x1C, 0x2B,
-0x03, 0x91, 0x02, 0x90, 0x02, 0x63, 0x20, 0xE8,
-0xFD, 0x63, 0x05, 0x62, 0x04, 0xD0, 0x10, 0xF0,
-0x24, 0x6A, 0x1C, 0xF7, 0x54, 0x9A, 0xFF, 0x68,
-0x60, 0xA2, 0x6C, 0xE8, 0x1D, 0x20, 0x00, 0x6B,
-0x60, 0xC2, 0x30, 0xF0, 0x20, 0x6A, 0xCE, 0xF4,
-0x5C, 0x9A, 0x01, 0x6C, 0x40, 0xEA, 0x10, 0xF0,
-0x24, 0x6A, 0x1C, 0xF7, 0x58, 0x9A, 0x20, 0x6B,
-0x20, 0x70, 0x60, 0xC2, 0x0D, 0x61, 0x30, 0xF0,
-0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A, 0x10, 0xF0,
-0x24, 0x6C, 0x80, 0xF0, 0x6C, 0x9A, 0x5C, 0xF3,
-0x94, 0x9C, 0x8D, 0xEB, 0x80, 0xF0, 0x6C, 0xDA,
-0x05, 0x97, 0x04, 0x90, 0x03, 0x63, 0x00, 0xEF,
-0xFD, 0x63, 0x05, 0x62, 0x00, 0x1C, 0x96, 0x45,
-0x00, 0x18, 0xB7, 0xE1, 0x05, 0x6C, 0x01, 0x6D,
-0x00, 0x18, 0x2A, 0xD3, 0x00, 0x65, 0x00, 0x65,
+0x2C, 0xEF, 0x02, 0xF0, 0x00, 0x77, 0x08, 0x60,
+0xD0, 0xF4, 0xE2, 0xA6, 0x8C, 0xEF, 0x7C, 0x4F,
+0xE8, 0x37, 0xFD, 0xE2, 0x2C, 0xEF, 0x0E, 0x2F,
+0x30, 0xF0, 0x21, 0x6C, 0xD0, 0xF4, 0xC2, 0xA4,
+0xFF, 0x6C, 0x10, 0xF0, 0x24, 0x6F, 0x8C, 0xEE,
+0x7C, 0x4E, 0xC8, 0x36, 0xD9, 0xE2, 0xBB, 0xF6,
+0xFC, 0x9F, 0x0A, 0x10, 0xD0, 0xF4, 0xC2, 0xA6,
+0x10, 0xF0, 0x24, 0x6F, 0xDB, 0xF6, 0xE0, 0x9F,
+0x8C, 0xEE, 0x7C, 0x4E, 0xC8, 0x36, 0xD9, 0xE2,
+0xF9, 0xE6, 0xC0, 0xA6, 0x01, 0x4A, 0x04, 0x72,
+0xCC, 0xEC, 0x80, 0xC5, 0x01, 0x4D, 0x8D, 0x61,
+0x30, 0xF0, 0x21, 0x6A, 0xD0, 0xF4, 0xA2, 0xA2,
+0x01, 0x6C, 0xC4, 0x67, 0xC4, 0xED, 0xCF, 0xED,
+0xD0, 0xF4, 0xC2, 0xA2, 0xAC, 0xEB, 0xFF, 0x6D,
+0x84, 0xEE, 0x10, 0xF0, 0x24, 0x6E, 0xDC, 0xF2,
+0xCC, 0x9E, 0xAC, 0xEC, 0x80, 0xC6, 0xD0, 0xF4,
+0x82, 0xA2, 0xAC, 0xEC, 0x01, 0x4C, 0xAC, 0xEC,
+0xD0, 0xF4, 0x82, 0xC2, 0xD0, 0xF4, 0xA2, 0xA2,
+0x03, 0x6C, 0xAC, 0xEC, 0xD0, 0xF4, 0x82, 0xC2,
+0x10, 0xF0, 0x30, 0x6A, 0x00, 0xF0, 0x00, 0x4A,
+0x40, 0xF0, 0x81, 0xA2, 0x08, 0x6D, 0x01, 0x4C,
+0x40, 0xF0, 0x81, 0xC2, 0x40, 0xF0, 0x81, 0xA2,
+0xAE, 0xEC, 0x1A, 0x2C, 0x40, 0xF0, 0x81, 0xC2,
+0x17, 0x10, 0x10, 0xF0, 0x24, 0x6A, 0x3B, 0xF7,
+0x8C, 0x9A, 0x02, 0x6E, 0x40, 0x9C, 0xCD, 0xEA,
+0x40, 0xDC, 0x10, 0xF0, 0x24, 0x6A, 0xDC, 0xF2,
+0x50, 0x9A, 0x60, 0xC2, 0xD0, 0xF4, 0x62, 0xA5,
+0xFF, 0x6A, 0x4C, 0xEB, 0x10, 0xF0, 0x24, 0x6A,
+0xDC, 0xF2, 0x54, 0x9A, 0x60, 0xC2, 0x02, 0x10,
+0x1F, 0xF7, 0x1C, 0x2B, 0x03, 0x91, 0x02, 0x90,
+0x02, 0x63, 0x20, 0xE8, 0xFD, 0x63, 0x05, 0x62,
+0x04, 0xD0, 0x10, 0xF0, 0x24, 0x6A, 0xFC, 0xF2,
+0x50, 0x9A, 0xFF, 0x68, 0x60, 0xA2, 0x6C, 0xE8,
+0x1D, 0x20, 0x00, 0x6B, 0x60, 0xC2, 0x30, 0xF0,
+0x20, 0x6A, 0xCE, 0xF4, 0x5C, 0x9A, 0x01, 0x6C,
+0x40, 0xEA, 0x10, 0xF0, 0x24, 0x6A, 0xFC, 0xF2,
+0x54, 0x9A, 0x20, 0x6B, 0x20, 0x70, 0x60, 0xC2,
+0x0D, 0x61, 0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1,
+0x08, 0x4A, 0x10, 0xF0, 0x24, 0x6C, 0x80, 0xF0,
+0x6C, 0x9A, 0x5B, 0xF7, 0x84, 0x9C, 0x8D, 0xEB,
+0x80, 0xF0, 0x6C, 0xDA, 0x05, 0x97, 0x04, 0x90,
+0x03, 0x63, 0x00, 0xEF, 0xFD, 0x63, 0x05, 0x62,
+0x00, 0x1C, 0x96, 0x45, 0x00, 0x18, 0x61, 0xE1,
+0x05, 0x6C, 0x01, 0x6D, 0x00, 0x18, 0x18, 0xD3,
 0x00, 0x65, 0x00, 0x65, 0x00, 0x65, 0x00, 0x65,
 0x00, 0x65, 0x00, 0x65, 0x00, 0x65, 0x00, 0x65,
 0x00, 0x65, 0x00, 0x65, 0x00, 0x65, 0x00, 0x65,
@@ -21923,307 +21857,305 @@ u8 array_mp_8821c_fw_nic[] = {
 0x00, 0x65, 0x00, 0x65, 0x00, 0x65, 0x00, 0x65,
 0x00, 0x65, 0x00, 0x65, 0x00, 0x65, 0x00, 0x65,
 0x00, 0x65, 0x00, 0x65, 0x00, 0x65, 0x00, 0x65,
-0x00, 0x65, 0xFF, 0x17, 0xDE, 0x63, 0x43, 0x62,
-0x42, 0xD1, 0x41, 0xD0, 0x01, 0x6A, 0x7D, 0x67,
-0x4B, 0xEA, 0x58, 0xC3, 0x01, 0x6A, 0x5A, 0xC3,
-0x08, 0x6A, 0x5B, 0xC3, 0x10, 0xF0, 0x30, 0x6A,
-0x00, 0xF0, 0x00, 0x4A, 0xC1, 0xF7, 0x66, 0xA2,
-0x76, 0x4B, 0x74, 0x33, 0x49, 0xE3, 0x66, 0xA2,
-0x7F, 0x6A, 0x6C, 0xEA, 0x01, 0x72, 0x7E, 0x30,
-0x80, 0xF0, 0x1C, 0x61, 0x48, 0xA4, 0xBD, 0x67,
-0x5C, 0xC5, 0x41, 0xA4, 0x5D, 0xC5, 0x42, 0xA4,
-0x5E, 0xC5, 0x46, 0xA4, 0x20, 0xF0, 0x40, 0xC5,
-0x43, 0xA4, 0x5F, 0xC5, 0x47, 0xA4, 0x20, 0xF0,
-0x41, 0xC5, 0x5C, 0xA5, 0x80, 0xF0, 0x04, 0x2A,
-0x7D, 0x67, 0x5F, 0xA3, 0x7E, 0xA3, 0x40, 0x32,
-0x6D, 0xEA, 0x03, 0x72, 0x05, 0x60, 0x08, 0x72,
-0x21, 0x60, 0x02, 0x72, 0x37, 0x60, 0x78, 0x10,
-0x06, 0x20, 0x30, 0xF0, 0x20, 0x6A, 0xAE, 0xF2,
-0x5C, 0x9A, 0x06, 0x04, 0x40, 0xEA, 0x9D, 0x67,
-0x20, 0xF0, 0xE1, 0xA4, 0x20, 0xF0, 0x40, 0xA4,
-0xFF, 0xF7, 0x1F, 0x6B, 0xE0, 0x37, 0x5D, 0xE7,
-0x30, 0xF0, 0x20, 0x6A, 0xCE, 0xF5, 0x50, 0x9A,
-0x30, 0xF0, 0x20, 0x6D, 0x05, 0x6C, 0xEC, 0xF6,
-0x06, 0x4D, 0x00, 0xF2, 0x00, 0x6E, 0x6C, 0xEF,
-0x40, 0xEA, 0x75, 0x10, 0xBD, 0x67, 0x30, 0xF0,
-0x20, 0x6B, 0x10, 0x6A, 0x5B, 0xC5, 0x30, 0xF0,
-0x20, 0x69, 0x4E, 0xF2, 0x50, 0x9B, 0x09, 0xF6,
-0x04, 0x49, 0x09, 0x04, 0xB1, 0x67, 0x04, 0x6E,
-0x40, 0xEA, 0x30, 0xF0, 0x20, 0x6C, 0x4E, 0xF2,
-0x50, 0x9C, 0xA4, 0x41, 0x0A, 0x04, 0x04, 0x6E,
-0x40, 0xEA, 0x42, 0x10, 0x06, 0x20, 0x30, 0xF0,
+0x00, 0x65, 0x00, 0x65, 0x00, 0x65, 0xFF, 0x17,
+0xDE, 0x63, 0x43, 0x62, 0x42, 0xD1, 0x41, 0xD0,
+0x01, 0x6A, 0x7D, 0x67, 0x4B, 0xEA, 0x58, 0xC3,
+0x01, 0x6A, 0x5A, 0xC3, 0x08, 0x6A, 0x5B, 0xC3,
+0x10, 0xF0, 0x30, 0x6A, 0x00, 0xF0, 0x00, 0x4A,
+0xC1, 0xF7, 0x66, 0xA2, 0x76, 0x4B, 0x74, 0x33,
+0x49, 0xE3, 0x66, 0xA2, 0x7F, 0x6A, 0x6C, 0xEA,
+0x01, 0x72, 0x7E, 0x30, 0x80, 0xF0, 0x1C, 0x61,
+0x48, 0xA4, 0xBD, 0x67, 0x5C, 0xC5, 0x41, 0xA4,
+0x5D, 0xC5, 0x42, 0xA4, 0x5E, 0xC5, 0x46, 0xA4,
+0x20, 0xF0, 0x40, 0xC5, 0x43, 0xA4, 0x5F, 0xC5,
+0x47, 0xA4, 0x20, 0xF0, 0x41, 0xC5, 0x5C, 0xA5,
+0x80, 0xF0, 0x04, 0x2A, 0x7D, 0x67, 0x5F, 0xA3,
+0x7E, 0xA3, 0x40, 0x32, 0x6D, 0xEA, 0x03, 0x72,
+0x05, 0x60, 0x08, 0x72, 0x21, 0x60, 0x02, 0x72,
+0x37, 0x60, 0x78, 0x10, 0x06, 0x20, 0x30, 0xF0,
 0x20, 0x6A, 0xAE, 0xF2, 0x5C, 0x9A, 0x06, 0x04,
-0x40, 0xEA, 0x30, 0xF0, 0x20, 0x68, 0xC0, 0xF1,
-0x08, 0x48, 0xEB, 0xF6, 0x74, 0xA0, 0x01, 0x6A,
-0x6C, 0xEA, 0x27, 0x22, 0x30, 0xF0, 0x20, 0x6A,
-0xEE, 0xF4, 0x50, 0x9A, 0x40, 0xEA, 0xEB, 0xF6,
-0x60, 0xA0, 0x04, 0x6A, 0x6C, 0xEA, 0xFF, 0x6B,
-0x6C, 0xEA, 0x18, 0x22, 0x10, 0xF0, 0x24, 0x6A,
-0x1C, 0xF7, 0x5C, 0x9A, 0xEB, 0xF6, 0xCC, 0x98,
-0x00, 0x6B, 0x40, 0x9A, 0x10, 0xF0, 0x24, 0x6A,
-0x1C, 0xF3, 0x48, 0x9A, 0x10, 0xF0, 0x24, 0x6C,
-0xB5, 0xF4, 0x01, 0x4C, 0x40, 0x9A, 0xA3, 0x67,
-0x01, 0x6F, 0x5B, 0xE6, 0x04, 0xD3, 0x00, 0x18,
-0xFC, 0xE9, 0x29, 0x10, 0x00, 0x18, 0x28, 0xEB,
-0x26, 0x10, 0x30, 0xF0, 0x20, 0x6A, 0xEE, 0xF4,
-0x54, 0x9A, 0x40, 0xEA, 0xEB, 0xF6, 0xB2, 0xA8,
-0x00, 0x6C, 0x00, 0x18, 0xD5, 0xEA, 0x1B, 0x10,
-0x1A, 0x20, 0x30, 0xF0, 0x20, 0x6A, 0xAE, 0xF2,
-0x5C, 0x9A, 0x13, 0x10, 0x14, 0x2A, 0x69, 0xA4,
-0xBD, 0x67, 0x7C, 0xC5, 0x68, 0xA4, 0x5E, 0xC5,
-0x5F, 0xC5, 0x7D, 0xC5, 0x46, 0xA4, 0x20, 0xF0,
-0x40, 0xC5, 0x67, 0xA4, 0x08, 0x20, 0x30, 0xF0,
-0x20, 0x6A, 0xAE, 0xF2, 0x5C, 0x9A, 0x20, 0xF0,
-0x61, 0xC5, 0x06, 0x04, 0x40, 0xEA, 0x43, 0x97,
-0x42, 0x91, 0x41, 0x90, 0x22, 0x63, 0x00, 0xEF,
-0xFD, 0x63, 0x05, 0x62, 0xFF, 0x6A, 0x4C, 0xEC,
-0x68, 0x44, 0xFA, 0x4B, 0x4C, 0xEB, 0x04, 0x5B,
-0x03, 0x60, 0x80, 0x18, 0xE3, 0x18, 0x4C, 0x10,
-0x09, 0x74, 0x30, 0x60, 0x0A, 0x5C, 0x07, 0x60,
-0x03, 0x74, 0x21, 0x60, 0x08, 0x74, 0x25, 0x60,
-0x02, 0x74, 0x12, 0x60, 0x35, 0x10, 0x0C, 0x74,
-0x13, 0x60, 0x0D, 0x5C, 0x03, 0x60, 0x0A, 0x74,
-0x26, 0x60, 0x2E, 0x10, 0x0D, 0x74, 0x03, 0x60,
-0x24, 0x74, 0x26, 0x60, 0x29, 0x10, 0x30, 0xF0,
-0x20, 0x6A, 0xCE, 0xF5, 0x48, 0x9A, 0x08, 0x10,
-0x85, 0x67, 0x00, 0x18, 0xEB, 0xEA, 0x2C, 0x10,
-0x30, 0xF0, 0x20, 0x6A, 0xEE, 0xF5, 0x44, 0x9A,
-0x85, 0x67, 0x40, 0xEA, 0x25, 0x10, 0x30, 0xF0,
-0x20, 0x6A, 0xCE, 0xF5, 0x54, 0x9A, 0x40, 0xEA,
-0x1F, 0x10, 0x30, 0xF0, 0x20, 0x6A, 0xCE, 0xF5,
-0x58, 0x9A, 0xF2, 0x17, 0x30, 0xF0, 0x20, 0x6A,
-0xCE, 0xF5, 0x5C, 0x9A, 0xED, 0x17, 0x30, 0xF0,
-0x20, 0x6A, 0xEE, 0xF5, 0x40, 0x9A, 0xE8, 0x17,
-0x85, 0x67, 0x00, 0x18, 0xF8, 0xF3, 0x0C, 0x10,
-0x10, 0xF0, 0x24, 0x6A, 0x7C, 0xF3, 0x6C, 0x9A,
-0x10, 0xF0, 0x24, 0x6C, 0x5C, 0xF3, 0x94, 0x9C,
-0x40, 0x9B, 0x8D, 0xEA, 0x40, 0xDB, 0xFF, 0x6A,
-0x05, 0x97, 0x03, 0x63, 0x00, 0xEF, 0x00, 0x65,
-0xFA, 0x63, 0x0B, 0x62, 0x0A, 0xD1, 0x09, 0xD0,
-0x30, 0xF0, 0x20, 0x6A, 0xEF, 0xF4, 0x08, 0x4A,
-0xA0, 0xA4, 0xC7, 0xA2, 0x02, 0x6B, 0x01, 0x68,
-0x6B, 0xEB, 0x0C, 0xED, 0xCC, 0xEB, 0xAD, 0xEB,
-0x67, 0xC2, 0xA1, 0xA4, 0x0C, 0xEB, 0xA8, 0xC2,
-0x82, 0xA4, 0x89, 0xC2, 0x49, 0xA2, 0x06, 0xD2,
-0x20, 0x23, 0x01, 0x69, 0x2B, 0xE9, 0xD1, 0x67,
-0x00, 0x6C, 0x42, 0x6D, 0x00, 0x18, 0x8D, 0xE7,
-0x10, 0xF0, 0x24, 0x6B, 0xDC, 0xF3, 0xE8, 0x9B,
-0xD1, 0x67, 0x00, 0x6C, 0x4D, 0xEF, 0x42, 0x6D,
-0x00, 0x18, 0xA0, 0xE7, 0x06, 0x96, 0x64, 0x6A,
-0x10, 0xF0, 0x24, 0x6C, 0x01, 0x4E, 0x58, 0xEE,
-0xFB, 0xF1, 0x15, 0x4C, 0x00, 0x6D, 0xF1, 0x67,
-0x04, 0xD0, 0x12, 0xEE, 0x00, 0x18, 0xFC, 0xE9,
-0x06, 0x10, 0x10, 0xF0, 0x24, 0x6C, 0xFB, 0xF1,
-0x15, 0x4C, 0x00, 0x18, 0xE9, 0xE9, 0x0B, 0x97,
+0x40, 0xEA, 0x9D, 0x67, 0x20, 0xF0, 0xE1, 0xA4,
+0x20, 0xF0, 0x40, 0xA4, 0xFF, 0xF7, 0x1F, 0x6B,
+0xE0, 0x37, 0x5D, 0xE7, 0x30, 0xF0, 0x20, 0x6A,
+0xCE, 0xF5, 0x50, 0x9A, 0x30, 0xF0, 0x20, 0x6D,
+0x05, 0x6C, 0xEC, 0xF6, 0x06, 0x4D, 0x00, 0xF2,
+0x00, 0x6E, 0x6C, 0xEF, 0x40, 0xEA, 0x75, 0x10,
+0xBD, 0x67, 0x30, 0xF0, 0x20, 0x6B, 0x10, 0x6A,
+0x5B, 0xC5, 0x30, 0xF0, 0x20, 0x69, 0x4E, 0xF2,
+0x50, 0x9B, 0x09, 0xF6, 0x04, 0x49, 0x09, 0x04,
+0xB1, 0x67, 0x04, 0x6E, 0x40, 0xEA, 0x30, 0xF0,
+0x20, 0x6C, 0x4E, 0xF2, 0x50, 0x9C, 0xA4, 0x41,
+0x0A, 0x04, 0x04, 0x6E, 0x40, 0xEA, 0x42, 0x10,
+0x06, 0x20, 0x30, 0xF0, 0x20, 0x6A, 0xAE, 0xF2,
+0x5C, 0x9A, 0x06, 0x04, 0x40, 0xEA, 0x30, 0xF0,
+0x20, 0x68, 0xC0, 0xF1, 0x08, 0x48, 0xEB, 0xF6,
+0x74, 0xA0, 0x01, 0x6A, 0x6C, 0xEA, 0x27, 0x22,
+0x30, 0xF0, 0x20, 0x6A, 0xEE, 0xF4, 0x50, 0x9A,
+0x40, 0xEA, 0xEB, 0xF6, 0x60, 0xA0, 0x04, 0x6A,
+0x6C, 0xEA, 0xFF, 0x6B, 0x6C, 0xEA, 0x18, 0x22,
+0x10, 0xF0, 0x24, 0x6A, 0xFC, 0xF2, 0x58, 0x9A,
+0xEB, 0xF6, 0xCC, 0x98, 0x00, 0x6B, 0x40, 0x9A,
+0x10, 0xF0, 0x24, 0x6A, 0xFB, 0xF6, 0x44, 0x9A,
+0x10, 0xF0, 0x24, 0x6C, 0x35, 0xF3, 0x09, 0x4C,
+0x40, 0x9A, 0xA3, 0x67, 0x01, 0x6F, 0x5B, 0xE6,
+0x04, 0xD3, 0x00, 0x18, 0x9E, 0xE9, 0x29, 0x10,
+0x00, 0x18, 0xCA, 0xEA, 0x26, 0x10, 0x30, 0xF0,
+0x20, 0x6A, 0xEE, 0xF4, 0x54, 0x9A, 0x40, 0xEA,
+0xEB, 0xF6, 0xB2, 0xA8, 0x00, 0x6C, 0x00, 0x18,
+0x77, 0xEA, 0x1B, 0x10, 0x1A, 0x20, 0x30, 0xF0,
+0x20, 0x6A, 0xAE, 0xF2, 0x5C, 0x9A, 0x13, 0x10,
+0x14, 0x2A, 0x69, 0xA4, 0xBD, 0x67, 0x7C, 0xC5,
+0x68, 0xA4, 0x5E, 0xC5, 0x5F, 0xC5, 0x7D, 0xC5,
+0x46, 0xA4, 0x20, 0xF0, 0x40, 0xC5, 0x67, 0xA4,
+0x08, 0x20, 0x30, 0xF0, 0x20, 0x6A, 0xAE, 0xF2,
+0x5C, 0x9A, 0x20, 0xF0, 0x61, 0xC5, 0x06, 0x04,
+0x40, 0xEA, 0x43, 0x97, 0x42, 0x91, 0x41, 0x90,
+0x22, 0x63, 0x00, 0xEF, 0xFD, 0x63, 0x05, 0x62,
+0xFF, 0x6A, 0x4C, 0xEC, 0x68, 0x44, 0xFA, 0x4B,
+0x4C, 0xEB, 0x04, 0x5B, 0x03, 0x60, 0x80, 0x18,
+0xE3, 0x18, 0x4C, 0x10, 0x09, 0x74, 0x30, 0x60,
+0x0A, 0x5C, 0x07, 0x60, 0x03, 0x74, 0x21, 0x60,
+0x08, 0x74, 0x25, 0x60, 0x02, 0x74, 0x12, 0x60,
+0x35, 0x10, 0x0C, 0x74, 0x13, 0x60, 0x0D, 0x5C,
+0x03, 0x60, 0x0A, 0x74, 0x26, 0x60, 0x2E, 0x10,
+0x0D, 0x74, 0x03, 0x60, 0x24, 0x74, 0x26, 0x60,
+0x29, 0x10, 0x30, 0xF0, 0x20, 0x6A, 0xCE, 0xF5,
+0x48, 0x9A, 0x08, 0x10, 0x85, 0x67, 0x00, 0x18,
+0x8D, 0xEA, 0x2C, 0x10, 0x30, 0xF0, 0x20, 0x6A,
+0xEE, 0xF5, 0x44, 0x9A, 0x85, 0x67, 0x40, 0xEA,
+0x25, 0x10, 0x30, 0xF0, 0x20, 0x6A, 0xCE, 0xF5,
+0x54, 0x9A, 0x40, 0xEA, 0x1F, 0x10, 0x30, 0xF0,
+0x20, 0x6A, 0xCE, 0xF5, 0x58, 0x9A, 0xF2, 0x17,
+0x30, 0xF0, 0x20, 0x6A, 0xCE, 0xF5, 0x5C, 0x9A,
+0xED, 0x17, 0x30, 0xF0, 0x20, 0x6A, 0xEE, 0xF5,
+0x40, 0x9A, 0xE8, 0x17, 0x85, 0x67, 0x00, 0x18,
+0x9A, 0xF3, 0x0C, 0x10, 0x10, 0xF0, 0x24, 0x6A,
+0x3B, 0xF7, 0x6C, 0x9A, 0x10, 0xF0, 0x24, 0x6C,
+0x5B, 0xF7, 0x84, 0x9C, 0x40, 0x9B, 0x8D, 0xEA,
+0x40, 0xDB, 0xFF, 0x6A, 0x05, 0x97, 0x03, 0x63,
+0x00, 0xEF, 0x00, 0x65, 0xFA, 0x63, 0x0B, 0x62,
+0x0A, 0xD1, 0x09, 0xD0, 0x30, 0xF0, 0x20, 0x6A,
+0xEF, 0xF4, 0x08, 0x4A, 0xA0, 0xA4, 0xC7, 0xA2,
+0x02, 0x6B, 0x01, 0x68, 0x6B, 0xEB, 0x0C, 0xED,
+0xCC, 0xEB, 0xAD, 0xEB, 0x67, 0xC2, 0xA1, 0xA4,
+0x0C, 0xEB, 0xA8, 0xC2, 0x82, 0xA4, 0x89, 0xC2,
+0x49, 0xA2, 0x06, 0xD2, 0x20, 0x23, 0x01, 0x69,
+0x2B, 0xE9, 0xD1, 0x67, 0x00, 0x6C, 0x42, 0x6D,
+0x00, 0x18, 0x2F, 0xE7, 0x10, 0xF0, 0x24, 0x6B,
+0xBB, 0xF7, 0xE4, 0x9B, 0xD1, 0x67, 0x00, 0x6C,
+0x4D, 0xEF, 0x42, 0x6D, 0x00, 0x18, 0x42, 0xE7,
+0x06, 0x96, 0x64, 0x6A, 0x10, 0xF0, 0x24, 0x6C,
+0x01, 0x4E, 0x58, 0xEE, 0x7B, 0xF0, 0x1D, 0x4C,
+0x00, 0x6D, 0xF1, 0x67, 0x04, 0xD0, 0x12, 0xEE,
+0x00, 0x18, 0x9E, 0xE9, 0x06, 0x10, 0x10, 0xF0,
+0x24, 0x6C, 0x7B, 0xF0, 0x1D, 0x4C, 0x00, 0x18,
+0x8B, 0xE9, 0x0B, 0x97, 0x0A, 0x91, 0x09, 0x90,
+0x06, 0x63, 0x00, 0xEF, 0xFA, 0x63, 0x0B, 0x62,
+0x0A, 0xD1, 0x09, 0xD0, 0x60, 0xA4, 0x01, 0x6A,
+0x04, 0x67, 0x4C, 0xEB, 0x68, 0x23, 0x61, 0xA4,
+0x08, 0x5B, 0x17, 0x60, 0x10, 0xF0, 0x24, 0x6C,
+0xFC, 0xF2, 0xBC, 0x9C, 0xC7, 0x43, 0x22, 0x67,
+0xE0, 0x9D, 0x10, 0x4B, 0x01, 0x4E, 0x82, 0x67,
+0x24, 0xEB, 0x84, 0xEE, 0x71, 0x67, 0xED, 0xEB,
+0x8F, 0xEC, 0x6C, 0xEC, 0x60, 0xA0, 0x66, 0x33,
+0x4C, 0xEB, 0x64, 0xEE, 0x6D, 0xEC, 0x80, 0xDD,
+0x15, 0x10, 0x10, 0xF0, 0x24, 0x6C, 0x1C, 0xF3,
+0xC0, 0x9C, 0x87, 0x43, 0x01, 0x4C, 0xA0, 0x9E,
+0xE2, 0x67, 0xE4, 0xEC, 0x87, 0x67, 0xAD, 0xEC,
+0xA2, 0x67, 0xA4, 0xEB, 0xAF, 0xED, 0xAC, 0xEC,
+0xA0, 0xA0, 0xA6, 0x35, 0x4C, 0xED, 0xA4, 0xEB,
+0xAD, 0xEC, 0x80, 0xDE, 0x41, 0xA0, 0x08, 0x5A,
+0x07, 0x60, 0x10, 0xF0, 0x24, 0x6B, 0xFC, 0xF2,
+0x9C, 0x9B, 0x08, 0x4A, 0xA0, 0x9C, 0x05, 0x10,
+0x10, 0xF0, 0x24, 0x6B, 0x1C, 0xF3, 0x80, 0x9B,
+0xA0, 0x9C, 0x01, 0x6B, 0x64, 0xEA, 0xAE, 0xEB,
+0x60, 0xDC, 0x80, 0xA0, 0x00, 0x6D, 0x92, 0x34,
+0x00, 0x18, 0xA2, 0xC8, 0x80, 0xA0, 0x01, 0x6D,
+0x22, 0x67, 0x92, 0x34, 0x00, 0x18, 0xA2, 0xC8,
+0x9D, 0x67, 0x24, 0x6B, 0x70, 0xC4, 0x08, 0x6B,
+0x6F, 0xCC, 0x22, 0x33, 0x73, 0xC4, 0x62, 0x33,
+0x74, 0xC4, 0x56, 0xC4, 0x42, 0x33, 0x00, 0xF6,
+0x42, 0x32, 0x59, 0xC4, 0x30, 0xF0, 0x20, 0x6A,
+0xAE, 0xF2, 0x58, 0x9A, 0x32, 0xC4, 0x77, 0xC4,
+0x00, 0xF6, 0x22, 0x31, 0x62, 0x33, 0x35, 0xC4,
+0x78, 0xC4, 0x04, 0x04, 0x40, 0xEA, 0x0B, 0x97,
 0x0A, 0x91, 0x09, 0x90, 0x06, 0x63, 0x00, 0xEF,
-0xFA, 0x63, 0x0B, 0x62, 0x0A, 0xD1, 0x09, 0xD0,
-0x60, 0xA4, 0x01, 0x6A, 0x04, 0x67, 0x4C, 0xEB,
-0x68, 0x23, 0x61, 0xA4, 0x08, 0x5B, 0x17, 0x60,
-0x10, 0xF0, 0x24, 0x6C, 0x3C, 0xF7, 0xA0, 0x9C,
-0xC7, 0x43, 0x22, 0x67, 0xE0, 0x9D, 0x10, 0x4B,
-0x01, 0x4E, 0x82, 0x67, 0x24, 0xEB, 0x84, 0xEE,
-0x71, 0x67, 0xED, 0xEB, 0x8F, 0xEC, 0x6C, 0xEC,
-0x60, 0xA0, 0x66, 0x33, 0x4C, 0xEB, 0x64, 0xEE,
-0x6D, 0xEC, 0x80, 0xDD, 0x15, 0x10, 0x10, 0xF0,
-0x24, 0x6C, 0x3C, 0xF7, 0xC4, 0x9C, 0x87, 0x43,
-0x01, 0x4C, 0xA0, 0x9E, 0xE2, 0x67, 0xE4, 0xEC,
-0x87, 0x67, 0xAD, 0xEC, 0xA2, 0x67, 0xA4, 0xEB,
-0xAF, 0xED, 0xAC, 0xEC, 0xA0, 0xA0, 0xA6, 0x35,
-0x4C, 0xED, 0xA4, 0xEB, 0xAD, 0xEC, 0x80, 0xDE,
-0x41, 0xA0, 0x08, 0x5A, 0x07, 0x60, 0x10, 0xF0,
-0x24, 0x6B, 0x3C, 0xF7, 0x80, 0x9B, 0x08, 0x4A,
-0xA0, 0x9C, 0x05, 0x10, 0x10, 0xF0, 0x24, 0x6B,
-0x3C, 0xF7, 0x84, 0x9B, 0xA0, 0x9C, 0x01, 0x6B,
-0x64, 0xEA, 0xAE, 0xEB, 0x60, 0xDC, 0x80, 0xA0,
-0x00, 0x6D, 0x92, 0x34, 0x00, 0x18, 0xA3, 0xC8,
-0x80, 0xA0, 0x01, 0x6D, 0x22, 0x67, 0x92, 0x34,
-0x00, 0x18, 0xA3, 0xC8, 0x9D, 0x67, 0x24, 0x6B,
-0x70, 0xC4, 0x08, 0x6B, 0x6F, 0xCC, 0x22, 0x33,
-0x73, 0xC4, 0x62, 0x33, 0x74, 0xC4, 0x56, 0xC4,
-0x42, 0x33, 0x00, 0xF6, 0x42, 0x32, 0x59, 0xC4,
-0x30, 0xF0, 0x20, 0x6A, 0xAE, 0xF2, 0x58, 0x9A,
-0x32, 0xC4, 0x77, 0xC4, 0x00, 0xF6, 0x22, 0x31,
-0x62, 0x33, 0x35, 0xC4, 0x78, 0xC4, 0x04, 0x04,
-0x40, 0xEA, 0x0B, 0x97, 0x0A, 0x91, 0x09, 0x90,
-0x06, 0x63, 0x00, 0xEF, 0xFC, 0x63, 0x07, 0x62,
-0x06, 0xD1, 0x05, 0xD0, 0x30, 0xF0, 0x20, 0x6A,
-0x4E, 0xF2, 0x50, 0x9A, 0x24, 0x67, 0x30, 0xF0,
-0x20, 0x6C, 0x28, 0xF5, 0x1C, 0x4C, 0xB1, 0x67,
-0x05, 0x6E, 0x30, 0xF0, 0x20, 0x68, 0x40, 0xEA,
-0xC0, 0xF1, 0x08, 0x48, 0x46, 0xA1, 0xC8, 0xF3,
-0x99, 0xA0, 0x7F, 0x6B, 0x5E, 0x32, 0x5C, 0x32,
-0x8C, 0xEB, 0x4D, 0xEB, 0xC8, 0xF3, 0x79, 0xC0,
-0x46, 0xA1, 0x1F, 0x6C, 0x68, 0xF3, 0xB7, 0xA0,
-0x4C, 0xEC, 0x20, 0x6A, 0x4B, 0xEA, 0x6C, 0xEA,
-0x8D, 0xEA, 0xC8, 0xF3, 0x59, 0xC0, 0x66, 0xA1,
-0x03, 0x6C, 0xB6, 0x35, 0x76, 0x33, 0x8C, 0xEB,
-0x74, 0x34, 0x61, 0x6B, 0x6B, 0xEB, 0x4C, 0xEB,
-0x8D, 0xEB, 0x91, 0x67, 0xC8, 0xF3, 0x79, 0xC0,
-0x00, 0x18, 0x33, 0xD1, 0x68, 0xF3, 0x58, 0xA0,
-0x0C, 0x72, 0x04, 0x61, 0x00, 0x6C, 0x01, 0x6D,
-0x00, 0x18, 0x0A, 0xD6, 0x07, 0x97, 0x06, 0x91,
-0x05, 0x90, 0x04, 0x63, 0x00, 0xEF, 0x00, 0x65,
-0xF9, 0x63, 0x0D, 0x62, 0x0C, 0xD1, 0x0B, 0xD0,
-0x10, 0xF0, 0x24, 0x6B, 0xBC, 0xF2, 0x70, 0x9B,
-0x10, 0xF0, 0x23, 0x6A, 0x6E, 0xF0, 0x11, 0x4A,
-0x08, 0xD4, 0x40, 0xDB, 0x41, 0xA4, 0x24, 0x67,
-0x06, 0xD2, 0x60, 0xA4, 0x02, 0x6A, 0x6C, 0xEA,
-0x06, 0x93, 0x07, 0xD3, 0x02, 0x22, 0x42, 0xA4,
-0x07, 0xD2, 0x06, 0x90, 0x1C, 0x10, 0x08, 0x93,
-0x01, 0x6D, 0x90, 0x67, 0x40, 0xA3, 0x4C, 0xED,
-0x00, 0x18, 0x23, 0xC8, 0x30, 0xF0, 0x20, 0x6A,
-0x6E, 0xF5, 0x58, 0x9A, 0x90, 0x67, 0x40, 0xEA,
-0x05, 0x2A, 0x30, 0xF0, 0x20, 0x6A, 0x6E, 0xF5,
-0x54, 0x9A, 0x04, 0x10, 0x30, 0xF0, 0x20, 0x6A,
-0x6E, 0xF5, 0x50, 0x9A, 0x90, 0x67, 0x40, 0xEA,
-0x01, 0x48, 0xFF, 0x6A, 0x4C, 0xE8, 0x07, 0x92,
-0x03, 0xEA, 0xE1, 0x60, 0x30, 0xF0, 0x20, 0x6A,
-0xEF, 0xF6, 0x85, 0xA2, 0x06, 0x92, 0x8E, 0xEA,
-0x22, 0x2A, 0x30, 0xF0, 0x20, 0x6A, 0x6E, 0xF5,
-0x58, 0x9A, 0x40, 0xEA, 0x1C, 0x2A, 0x30, 0xF0,
-0x20, 0x68, 0xC0, 0xF1, 0x08, 0x48, 0x00, 0x18,
-0x6F, 0xED, 0x68, 0xF3, 0x97, 0xA0, 0x96, 0x34,
-0x00, 0x18, 0x3F, 0xCD, 0x68, 0xF3, 0x79, 0xA0,
-0x05, 0x6A, 0x4B, 0xEA, 0x6C, 0xEA, 0x68, 0xF3,
-0x7A, 0xA0, 0x68, 0xF3, 0x59, 0xC0, 0x02, 0x6A,
-0x4B, 0xEA, 0x6C, 0xEA, 0x03, 0x6B, 0x6B, 0xEB,
-0x6C, 0xEA, 0x68, 0xF3, 0x5A, 0xC0, 0x30, 0xF0,
-0x20, 0x6A, 0x60, 0xA1, 0xCC, 0xF1, 0x50, 0xA2,
-0x72, 0x34, 0x15, 0x2A, 0x04, 0x6A, 0x6C, 0xEA,
-0xFF, 0x6B, 0x6C, 0xEA, 0x10, 0x22, 0x10, 0xF0,
-0x24, 0x6A, 0xBC, 0xF5, 0x44, 0x9A, 0x00, 0x6B,
-0x60, 0xC2, 0x10, 0xF0, 0x24, 0x6A, 0x5C, 0xF7,
-0x68, 0x9A, 0x10, 0xF0, 0x24, 0x6A, 0xBC, 0xF2,
-0x50, 0x9A, 0x60, 0xDA, 0xF0, 0x17, 0x05, 0x74,
-0x15, 0x61, 0x30, 0xF0, 0x20, 0x6A, 0xCC, 0xF1,
-0x52, 0xA2, 0x10, 0x2A, 0x10, 0xF0, 0x24, 0x6A,
-0xBC, 0xF5, 0x44, 0x9A, 0x00, 0x6B, 0x60, 0xC2,
-0x10, 0xF0, 0x24, 0x6A, 0x5C, 0xF7, 0x6C, 0x9A,
-0x10, 0xF0, 0x24, 0x6A, 0xBC, 0xF2, 0x50, 0x9A,
-0x60, 0xDA, 0xF0, 0x17, 0x63, 0xA1, 0x07, 0x6A,
-0x01, 0x6C, 0x6C, 0xEA, 0x60, 0xA1, 0x8C, 0xEB,
-0x1E, 0x2B, 0x30, 0xF0, 0x20, 0x6B, 0xC0, 0xF1,
-0x08, 0x4B, 0x69, 0xF3, 0xC8, 0xA3, 0x84, 0xEA,
-0x1F, 0x6F, 0xCA, 0x35, 0x8F, 0xEC, 0xEC, 0xED,
-0x8C, 0xED, 0x7D, 0x6C, 0x8B, 0xEC, 0xA8, 0x35,
-0xCC, 0xEC, 0xAD, 0xEC, 0x69, 0xF3, 0x88, 0xC3,
-0x30, 0xF0, 0x20, 0x6C, 0xEF, 0xF6, 0x84, 0xA4,
-0x8E, 0xEA, 0x20, 0x2A, 0x01, 0x6A, 0x4B, 0xEA,
-0x69, 0xF3, 0x49, 0xC3, 0x1B, 0x10, 0x30, 0xF0,
+0xFC, 0x63, 0x07, 0x62, 0x06, 0xD1, 0x05, 0xD0,
+0x30, 0xF0, 0x20, 0x6A, 0x4E, 0xF2, 0x50, 0x9A,
+0x24, 0x67, 0x30, 0xF0, 0x20, 0x6C, 0x28, 0xF5,
+0x1C, 0x4C, 0xB1, 0x67, 0x05, 0x6E, 0x30, 0xF0,
+0x20, 0x68, 0x40, 0xEA, 0xC0, 0xF1, 0x08, 0x48,
+0x46, 0xA1, 0xC8, 0xF3, 0x99, 0xA0, 0x7F, 0x6B,
+0x5E, 0x32, 0x5C, 0x32, 0x8C, 0xEB, 0x4D, 0xEB,
+0xC8, 0xF3, 0x79, 0xC0, 0x46, 0xA1, 0x1F, 0x6C,
+0x68, 0xF3, 0xB7, 0xA0, 0x4C, 0xEC, 0x20, 0x6A,
+0x4B, 0xEA, 0x6C, 0xEA, 0x8D, 0xEA, 0xC8, 0xF3,
+0x59, 0xC0, 0x66, 0xA1, 0x03, 0x6C, 0xB6, 0x35,
+0x76, 0x33, 0x8C, 0xEB, 0x74, 0x34, 0x61, 0x6B,
+0x6B, 0xEB, 0x4C, 0xEB, 0x8D, 0xEB, 0x91, 0x67,
+0xC8, 0xF3, 0x79, 0xC0, 0x00, 0x18, 0x21, 0xD1,
+0x68, 0xF3, 0x58, 0xA0, 0x0C, 0x72, 0x04, 0x61,
+0x00, 0x6C, 0x01, 0x6D, 0x00, 0x18, 0xF8, 0xD5,
+0x07, 0x97, 0x06, 0x91, 0x05, 0x90, 0x04, 0x63,
+0x00, 0xEF, 0x00, 0x65, 0xF9, 0x63, 0x0D, 0x62,
+0x0C, 0xD1, 0x0B, 0xD0, 0x10, 0xF0, 0x24, 0x6B,
+0x9B, 0xF6, 0x6C, 0x9B, 0x10, 0xF0, 0x23, 0x6A,
+0x2D, 0xF7, 0x0D, 0x4A, 0x08, 0xD4, 0x40, 0xDB,
+0x41, 0xA4, 0x24, 0x67, 0x06, 0xD2, 0x60, 0xA4,
+0x02, 0x6A, 0x6C, 0xEA, 0x06, 0x93, 0x07, 0xD3,
+0x02, 0x22, 0x42, 0xA4, 0x07, 0xD2, 0x06, 0x90,
+0x1C, 0x10, 0x08, 0x93, 0x01, 0x6D, 0x90, 0x67,
+0x40, 0xA3, 0x4C, 0xED, 0x00, 0x18, 0x22, 0xC8,
+0x30, 0xF0, 0x20, 0x6A, 0x6E, 0xF5, 0x58, 0x9A,
+0x90, 0x67, 0x40, 0xEA, 0x05, 0x2A, 0x30, 0xF0,
+0x20, 0x6A, 0x6E, 0xF5, 0x54, 0x9A, 0x04, 0x10,
+0x30, 0xF0, 0x20, 0x6A, 0x6E, 0xF5, 0x50, 0x9A,
+0x90, 0x67, 0x40, 0xEA, 0x01, 0x48, 0xFF, 0x6A,
+0x4C, 0xE8, 0x07, 0x92, 0x03, 0xEA, 0xE1, 0x60,
+0x30, 0xF0, 0x20, 0x6A, 0xEF, 0xF6, 0x81, 0xA2,
+0x06, 0x92, 0x8E, 0xEA, 0x22, 0x2A, 0x30, 0xF0,
+0x20, 0x6A, 0x6E, 0xF5, 0x58, 0x9A, 0x40, 0xEA,
+0x1C, 0x2A, 0x30, 0xF0, 0x20, 0x68, 0xC0, 0xF1,
+0x08, 0x48, 0x00, 0x18, 0x11, 0xED, 0x68, 0xF3,
+0x97, 0xA0, 0x96, 0x34, 0x00, 0x18, 0x67, 0xCD,
+0x68, 0xF3, 0x79, 0xA0, 0x05, 0x6A, 0x4B, 0xEA,
+0x6C, 0xEA, 0x68, 0xF3, 0x7A, 0xA0, 0x68, 0xF3,
+0x59, 0xC0, 0x02, 0x6A, 0x4B, 0xEA, 0x6C, 0xEA,
+0x03, 0x6B, 0x6B, 0xEB, 0x6C, 0xEA, 0x68, 0xF3,
+0x5A, 0xC0, 0x30, 0xF0, 0x20, 0x6A, 0x60, 0xA1,
+0xCC, 0xF1, 0x50, 0xA2, 0x72, 0x34, 0x15, 0x2A,
+0x04, 0x6A, 0x6C, 0xEA, 0xFF, 0x6B, 0x6C, 0xEA,
+0x10, 0x22, 0x10, 0xF0, 0x24, 0x6A, 0x9C, 0xF1,
+0x40, 0x9A, 0x00, 0x6B, 0x60, 0xC2, 0x10, 0xF0,
+0x24, 0x6A, 0x3C, 0xF3, 0x64, 0x9A, 0x10, 0xF0,
+0x24, 0x6A, 0x9B, 0xF6, 0x4C, 0x9A, 0x60, 0xDA,
+0xF0, 0x17, 0x05, 0x74, 0x15, 0x61, 0x30, 0xF0,
+0x20, 0x6A, 0xCC, 0xF1, 0x52, 0xA2, 0x10, 0x2A,
+0x10, 0xF0, 0x24, 0x6A, 0x9C, 0xF1, 0x40, 0x9A,
+0x00, 0x6B, 0x60, 0xC2, 0x10, 0xF0, 0x24, 0x6A,
+0x3C, 0xF3, 0x68, 0x9A, 0x10, 0xF0, 0x24, 0x6A,
+0x9B, 0xF6, 0x4C, 0x9A, 0x60, 0xDA, 0xF0, 0x17,
+0x63, 0xA1, 0x07, 0x6A, 0x01, 0x6C, 0x6C, 0xEA,
+0x60, 0xA1, 0x8C, 0xEB, 0x1E, 0x2B, 0x30, 0xF0,
 0x20, 0x6B, 0xC0, 0xF1, 0x08, 0x4B, 0x69, 0xF3,
-0xC8, 0xA3, 0x1F, 0x6F, 0x84, 0xEA, 0xCA, 0x35,
-0xEC, 0xED, 0xAD, 0xEC, 0xEC, 0xEC, 0x88, 0x35,
-0x7D, 0x6C, 0x8B, 0xEC, 0xCC, 0xEC, 0xAD, 0xEC,
+0xC8, 0xA3, 0x84, 0xEA, 0x1F, 0x6F, 0xCA, 0x35,
+0x8F, 0xEC, 0xEC, 0xED, 0x8C, 0xED, 0x7D, 0x6C,
+0x8B, 0xEC, 0xA8, 0x35, 0xCC, 0xEC, 0xAD, 0xEC,
 0x69, 0xF3, 0x88, 0xC3, 0x30, 0xF0, 0x20, 0x6C,
-0xEF, 0xF6, 0x84, 0xA4, 0x8E, 0xEA, 0x02, 0x2A,
-0x69, 0xF3, 0x89, 0xC3, 0x30, 0xF0, 0x20, 0x6A,
-0xC0, 0xF1, 0x08, 0x4A, 0x69, 0xF3, 0x88, 0xA2,
-0x02, 0x6B, 0x8C, 0xEB, 0x1C, 0x23, 0x03, 0x6B,
-0x6B, 0xEB, 0x8C, 0xEB, 0x69, 0xF3, 0x68, 0xC2,
-0x00, 0x18, 0x3F, 0xE9, 0x04, 0xD2, 0x30, 0xF0,
-0x20, 0x6A, 0x04, 0x93, 0xCF, 0xF5, 0x5C, 0x9A,
-0x6E, 0xEA, 0x03, 0x22, 0x04, 0x94, 0x00, 0x18,
-0x60, 0xE9, 0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1,
-0x08, 0x4A, 0x69, 0xF3, 0x88, 0xA2, 0x02, 0x6B,
-0x8D, 0xEB, 0x69, 0xF3, 0x68, 0xC2, 0x0D, 0x97,
-0x0C, 0x91, 0x0B, 0x90, 0x07, 0x63, 0x00, 0xEF,
-0xFD, 0x63, 0x05, 0x62, 0x04, 0xD0, 0xFF, 0x6A,
-0x4C, 0xEC, 0x68, 0x44, 0xC8, 0x4B, 0x4C, 0xEB,
-0x20, 0x5B, 0x05, 0x67, 0x09, 0x60, 0x30, 0xF0,
-0x20, 0x6A, 0xEF, 0xF6, 0x4B, 0xA2, 0x40, 0xF1,
-0x0F, 0x2A, 0x80, 0x18, 0x9F, 0x1B, 0x4C, 0x11,
-0x2F, 0x74, 0x40, 0xF1, 0x09, 0x60, 0x30, 0x5C,
-0x48, 0x60, 0x1D, 0x74, 0xA0, 0xF0, 0x1E, 0x60,
-0x1E, 0x5C, 0x1E, 0x60, 0x15, 0x74, 0xA0, 0xF0,
-0x05, 0x60, 0x16, 0x5C, 0x0C, 0x60, 0x01, 0x74,
-0x80, 0xF0, 0x14, 0x60, 0x80, 0xF0, 0x0E, 0x24,
-0x09, 0x74, 0x80, 0xF0, 0x13, 0x60, 0x10, 0x74,
-0x80, 0xF0, 0x14, 0x60, 0x22, 0x11, 0x17, 0x74,
-0x80, 0xF0, 0x1C, 0x60, 0x17, 0x5C, 0x80, 0xF0,
-0x15, 0x61, 0x19, 0x74, 0x80, 0xF0, 0x1A, 0x60,
-0x1C, 0x74, 0x80, 0xF0, 0x1B, 0x60, 0x15, 0x11,
-0x23, 0x74, 0x20, 0xF1, 0x01, 0x60, 0x24, 0x5C,
-0x0D, 0x60, 0x1F, 0x74, 0x80, 0xF0, 0x19, 0x60,
-0x1F, 0x5C, 0x80, 0xF0, 0x1A, 0x61, 0x20, 0x74,
-0x80, 0xF0, 0x1B, 0x60, 0x21, 0x74, 0x00, 0xF1,
-0x13, 0x60, 0x03, 0x11, 0x2C, 0x74, 0xA0, 0xF0,
-0x00, 0x60, 0x2D, 0x5C, 0x07, 0x60, 0x24, 0x74,
-0x80, 0xF0, 0x13, 0x60, 0x27, 0x74, 0x80, 0xF0,
-0x14, 0x60, 0xF7, 0x10, 0x2D, 0x74, 0x80, 0xF0,
-0x18, 0x60, 0x2E, 0x74, 0x80, 0xF0, 0x19, 0x60,
-0xF0, 0x10, 0x69, 0x74, 0xC0, 0xF0, 0x01, 0x60,
-0x6A, 0x5C, 0x28, 0x60, 0x63, 0x74, 0xA0, 0xF0,
-0x04, 0x60, 0x64, 0x5C, 0x10, 0x60, 0x60, 0x74,
-0x80, 0xF0, 0x13, 0x60, 0x61, 0x5C, 0x04, 0x60,
-0x30, 0x74, 0x80, 0xF0, 0x0A, 0x60, 0xDD, 0x10,
-0x61, 0x74, 0x80, 0xF0, 0x0E, 0x60, 0x62, 0x74,
-0x80, 0xF0, 0x0F, 0x60, 0xD6, 0x10, 0x66, 0x74,
-0x80, 0xF0, 0x1B, 0x60, 0x67, 0x5C, 0x07, 0x60,
-0x64, 0x74, 0x80, 0xF0, 0x0E, 0x60, 0x65, 0x74,
-0x80, 0xF0, 0x0F, 0x60, 0xCA, 0x10, 0x67, 0x74,
-0x80, 0xF0, 0x13, 0x60, 0x68, 0x74, 0x80, 0xF0,
-0x14, 0x60, 0xC3, 0x10, 0x71, 0x74, 0xA0, 0xF0,
-0x08, 0x60, 0x72, 0x5C, 0x10, 0x60, 0x6E, 0x74,
-0x80, 0xF0, 0x17, 0x60, 0x6F, 0x5C, 0x04, 0x60,
-0x6D, 0x74, 0x80, 0xF0, 0x0E, 0x60, 0xB5, 0x10,
-0x6F, 0x74, 0x80, 0xF0, 0x12, 0x60, 0x70, 0x74,
-0x80, 0xF0, 0x13, 0x60, 0xAE, 0x10, 0xC9, 0x74,
-0x80, 0xF0, 0x1B, 0x60, 0xCA, 0x5C, 0x07, 0x60,
-0xBA, 0x74, 0x80, 0xF0, 0x12, 0x60, 0xC3, 0x74,
-0x80, 0xF0, 0x1F, 0x60, 0xA2, 0x10, 0xCB, 0x74,
-0x80, 0xF0, 0x13, 0x60, 0xD1, 0x74, 0x80, 0xF0,
-0x14, 0x60, 0x9B, 0x10, 0x85, 0x67, 0x00, 0x18,
-0xBD, 0xD9, 0xA6, 0x10, 0x85, 0x67, 0x00, 0x18,
-0x1C, 0xDC, 0xA2, 0x10, 0x85, 0x67, 0x00, 0x18,
-0x7E, 0xC5, 0x9E, 0x10, 0x85, 0x67, 0x80, 0x18,
-0xE9, 0x08, 0x9A, 0x10, 0x85, 0x67, 0x80, 0x18,
-0x40, 0x09, 0x96, 0x10, 0x85, 0x67, 0x80, 0x18,
-0x58, 0x09, 0x92, 0x10, 0x85, 0x67, 0x80, 0x18,
-0xB0, 0x09, 0x8E, 0x10, 0x85, 0x67, 0x80, 0x18,
-0x64, 0x09, 0x8A, 0x10, 0x85, 0x67, 0x80, 0x18,
-0x49, 0x0B, 0x86, 0x10, 0x85, 0x67, 0x80, 0x18,
+0xEF, 0xF6, 0x80, 0xA4, 0x8E, 0xEA, 0x20, 0x2A,
+0x01, 0x6A, 0x4B, 0xEA, 0x69, 0xF3, 0x49, 0xC3,
+0x1B, 0x10, 0x30, 0xF0, 0x20, 0x6B, 0xC0, 0xF1,
+0x08, 0x4B, 0x69, 0xF3, 0xC8, 0xA3, 0x1F, 0x6F,
+0x84, 0xEA, 0xCA, 0x35, 0xEC, 0xED, 0xAD, 0xEC,
+0xEC, 0xEC, 0x88, 0x35, 0x7D, 0x6C, 0x8B, 0xEC,
+0xCC, 0xEC, 0xAD, 0xEC, 0x69, 0xF3, 0x88, 0xC3,
+0x30, 0xF0, 0x20, 0x6C, 0xEF, 0xF6, 0x80, 0xA4,
+0x8E, 0xEA, 0x02, 0x2A, 0x69, 0xF3, 0x89, 0xC3,
+0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A,
+0x69, 0xF3, 0x88, 0xA2, 0x02, 0x6B, 0x8C, 0xEB,
+0x1C, 0x23, 0x03, 0x6B, 0x6B, 0xEB, 0x8C, 0xEB,
+0x69, 0xF3, 0x68, 0xC2, 0x00, 0x18, 0xE1, 0xE8,
+0x04, 0xD2, 0x30, 0xF0, 0x20, 0x6A, 0x04, 0x93,
+0xCF, 0xF5, 0x58, 0x9A, 0x6E, 0xEA, 0x03, 0x22,
+0x04, 0x94, 0x00, 0x18, 0x02, 0xE9, 0x30, 0xF0,
+0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A, 0x69, 0xF3,
+0x88, 0xA2, 0x02, 0x6B, 0x8D, 0xEB, 0x69, 0xF3,
+0x68, 0xC2, 0x0D, 0x97, 0x0C, 0x91, 0x0B, 0x90,
+0x07, 0x63, 0x00, 0xEF, 0xFD, 0x63, 0x05, 0x62,
+0x04, 0xD0, 0xFF, 0x6A, 0x4C, 0xEC, 0x68, 0x44,
+0xC8, 0x4B, 0x4C, 0xEB, 0x20, 0x5B, 0x05, 0x67,
+0x09, 0x60, 0x30, 0xF0, 0x20, 0x6A, 0xEF, 0xF6,
+0x47, 0xA2, 0x40, 0xF1, 0x05, 0x2A, 0x80, 0x18,
+0x9F, 0x1B, 0x42, 0x11, 0x2F, 0x74, 0x20, 0xF1,
+0x1F, 0x60, 0x30, 0x5C, 0x48, 0x60, 0x1D, 0x74,
+0xA0, 0xF0, 0x18, 0x60, 0x1E, 0x5C, 0x1E, 0x60,
+0x15, 0x74, 0x80, 0xF0, 0x1F, 0x60, 0x16, 0x5C,
+0x0C, 0x60, 0x01, 0x74, 0x80, 0xF0, 0x0E, 0x60,
+0x80, 0xF0, 0x08, 0x24, 0x09, 0x74, 0x80, 0xF0,
+0x0D, 0x60, 0x10, 0x74, 0x80, 0xF0, 0x0E, 0x60,
+0x18, 0x11, 0x17, 0x74, 0x80, 0xF0, 0x16, 0x60,
+0x17, 0x5C, 0x80, 0xF0, 0x0F, 0x61, 0x19, 0x74,
+0x80, 0xF0, 0x14, 0x60, 0x1C, 0x74, 0x80, 0xF0,
+0x15, 0x60, 0x0B, 0x11, 0x23, 0x74, 0x00, 0xF1,
+0x17, 0x60, 0x24, 0x5C, 0x0D, 0x60, 0x1F, 0x74,
+0x80, 0xF0, 0x13, 0x60, 0x1F, 0x5C, 0x80, 0xF0,
+0x14, 0x61, 0x20, 0x74, 0x80, 0xF0, 0x15, 0x60,
+0x21, 0x74, 0x00, 0xF1, 0x09, 0x60, 0xF9, 0x10,
+0x2C, 0x74, 0x80, 0xF0, 0x1A, 0x60, 0x2D, 0x5C,
+0x07, 0x60, 0x24, 0x74, 0x80, 0xF0, 0x0D, 0x60,
+0x27, 0x74, 0x80, 0xF0, 0x0E, 0x60, 0xED, 0x10,
+0x2D, 0x74, 0x80, 0xF0, 0x12, 0x60, 0x2E, 0x74,
+0x80, 0xF0, 0x13, 0x60, 0xE6, 0x10, 0x68, 0x74,
+0xA0, 0xF0, 0x17, 0x60, 0x69, 0x5C, 0x22, 0x60,
+0x63, 0x74, 0x80, 0xF0, 0x1E, 0x60, 0x64, 0x5C,
+0x10, 0x60, 0x60, 0x74, 0x80, 0xF0, 0x0D, 0x60,
+0x61, 0x5C, 0x04, 0x60, 0x30, 0x74, 0x80, 0xF0,
+0x04, 0x60, 0xD3, 0x10, 0x61, 0x74, 0x80, 0xF0,
+0x08, 0x60, 0x62, 0x74, 0x80, 0xF0, 0x09, 0x60,
+0xCC, 0x10, 0x65, 0x74, 0x80, 0xF0, 0x11, 0x60,
+0x65, 0x5C, 0x80, 0xF0, 0x0A, 0x61, 0x66, 0x74,
+0x80, 0xF0, 0x0F, 0x60, 0x67, 0x74, 0x80, 0xF0,
+0x10, 0x60, 0xBF, 0x10, 0x70, 0x74, 0xA0, 0xF0,
+0x04, 0x60, 0x71, 0x5C, 0x10, 0x60, 0x6D, 0x74,
+0x80, 0xF0, 0x13, 0x60, 0x6E, 0x5C, 0x04, 0x60,
+0x69, 0x74, 0x80, 0xF0, 0x0A, 0x60, 0xB1, 0x10,
+0x6E, 0x74, 0x80, 0xF0, 0x0E, 0x60, 0x6F, 0x74,
+0x80, 0xF0, 0x0F, 0x60, 0xAA, 0x10, 0xC3, 0x74,
+0xA0, 0xF0, 0x03, 0x60, 0xC4, 0x5C, 0x07, 0x60,
+0x71, 0x74, 0x80, 0xF0, 0x0E, 0x60, 0xBA, 0x74,
+0x80, 0xF0, 0x0F, 0x60, 0x9E, 0x10, 0xC9, 0x74,
+0x80, 0xF0, 0x0F, 0x60, 0xCB, 0x74, 0x80, 0xF0,
+0x10, 0x60, 0x97, 0x10, 0x85, 0x67, 0x00, 0x18,
+0x6C, 0xD9, 0xA2, 0x10, 0x85, 0x67, 0x00, 0x18,
+0xCB, 0xDB, 0x9E, 0x10, 0x85, 0x67, 0x00, 0x18,
+0x7E, 0xC5, 0x9A, 0x10, 0x85, 0x67, 0x80, 0x18,
+0xE9, 0x08, 0x96, 0x10, 0x85, 0x67, 0x80, 0x18,
+0x40, 0x09, 0x92, 0x10, 0x85, 0x67, 0x80, 0x18,
+0x58, 0x09, 0x8E, 0x10, 0x85, 0x67, 0x80, 0x18,
+0xB0, 0x09, 0x8A, 0x10, 0x85, 0x67, 0x80, 0x18,
+0x64, 0x09, 0x86, 0x10, 0x85, 0x67, 0x80, 0x18,
+0x49, 0x0B, 0x82, 0x10, 0x85, 0x67, 0x80, 0x18,
 0x4A, 0x0B, 0x90, 0x67, 0x00, 0x18, 0xBE, 0xC5,
-0x7F, 0x10, 0x85, 0x67, 0x00, 0x18, 0x27, 0xC6,
-0x7B, 0x10, 0x85, 0x67, 0x00, 0x18, 0xF9, 0xDB,
-0x77, 0x10, 0x85, 0x67, 0x00, 0x18, 0x7D, 0xC6,
-0x73, 0x10, 0x85, 0x67, 0x00, 0x18, 0x74, 0xC6,
-0x6F, 0x10, 0x85, 0x67, 0x00, 0x18, 0x41, 0xC6,
-0x6B, 0x10, 0x85, 0x67, 0x00, 0x18, 0xCA, 0xD9,
-0x67, 0x10, 0x85, 0x67, 0x00, 0x18, 0xEE, 0xDF,
-0x63, 0x10, 0x85, 0x67, 0x00, 0x18, 0x74, 0xE0,
-0x5F, 0x10, 0x85, 0x67, 0x00, 0x18, 0x54, 0xD6,
-0x5B, 0x10, 0x85, 0x67, 0x00, 0x18, 0x65, 0xD6,
-0x57, 0x10, 0x85, 0x67, 0x00, 0x18, 0x6C, 0xD6,
-0x53, 0x10, 0x85, 0x67, 0x00, 0x18, 0x73, 0xD6,
-0x4F, 0x10, 0x85, 0x67, 0x00, 0x18, 0x7F, 0xD7,
-0x4B, 0x10, 0x85, 0x67, 0x00, 0x18, 0x7A, 0xD6,
-0x47, 0x10, 0x85, 0x67, 0x00, 0x18, 0x87, 0xD6,
-0x43, 0x10, 0x85, 0x67, 0x00, 0x18, 0x8E, 0xD6,
-0x3F, 0x10, 0x85, 0x67, 0x00, 0x18, 0x9C, 0xD6,
-0x3B, 0x10, 0x85, 0x67, 0x00, 0x18, 0xA3, 0xD6,
-0x37, 0x10, 0x85, 0x67, 0x00, 0x18, 0x0B, 0xD7,
-0x33, 0x10, 0x85, 0x67, 0x00, 0x18, 0x32, 0xD7,
-0x2F, 0x10, 0x85, 0x67, 0x00, 0x18, 0x41, 0xD7,
-0x2B, 0x10, 0x85, 0x67, 0x00, 0x18, 0x51, 0xD7,
-0x27, 0x10, 0x85, 0x67, 0x00, 0x18, 0xFC, 0xD6,
-0x23, 0x10, 0x85, 0x67, 0x80, 0x18, 0x80, 0x08,
-0x1F, 0x10, 0x85, 0x67, 0x00, 0x18, 0xBE, 0xDB,
-0x1B, 0x10, 0x85, 0x67, 0x00, 0x18, 0x9C, 0xDB,
-0x17, 0x10, 0x85, 0x67, 0x00, 0x18, 0xC4, 0xF6,
-0x13, 0x10, 0x85, 0x67, 0x00, 0x18, 0xA5, 0xDE,
-0x0F, 0x10, 0x10, 0xF0, 0x24, 0x6A, 0x7C, 0xF3,
+0x7B, 0x10, 0x85, 0x67, 0x00, 0x18, 0x27, 0xC6,
+0x77, 0x10, 0x85, 0x67, 0x00, 0x18, 0xA8, 0xDB,
+0x73, 0x10, 0x85, 0x67, 0x00, 0x18, 0x7D, 0xC6,
+0x6F, 0x10, 0x85, 0x67, 0x00, 0x18, 0x74, 0xC6,
+0x6B, 0x10, 0x85, 0x67, 0x00, 0x18, 0x41, 0xC6,
+0x67, 0x10, 0x85, 0x67, 0x00, 0x18, 0x79, 0xD9,
+0x63, 0x10, 0x85, 0x67, 0x00, 0x18, 0x98, 0xDF,
+0x5F, 0x10, 0x85, 0x67, 0x00, 0x18, 0x1E, 0xE0,
+0x5B, 0x10, 0x85, 0x67, 0x00, 0x18, 0x37, 0xD6,
+0x57, 0x10, 0x85, 0x67, 0x00, 0x18, 0x3C, 0xD6,
+0x53, 0x10, 0x85, 0x67, 0x00, 0x18, 0x43, 0xD6,
+0x4F, 0x10, 0x85, 0x67, 0x00, 0x18, 0x4A, 0xD6,
+0x4B, 0x10, 0x85, 0x67, 0x00, 0x18, 0x56, 0xD7,
+0x47, 0x10, 0x85, 0x67, 0x00, 0x18, 0x51, 0xD6,
+0x43, 0x10, 0x85, 0x67, 0x00, 0x18, 0x5E, 0xD6,
+0x3F, 0x10, 0x85, 0x67, 0x00, 0x18, 0x65, 0xD6,
+0x3B, 0x10, 0x85, 0x67, 0x00, 0x18, 0x73, 0xD6,
+0x37, 0x10, 0x85, 0x67, 0x00, 0x18, 0x7A, 0xD6,
+0x33, 0x10, 0x85, 0x67, 0x00, 0x18, 0xE2, 0xD6,
+0x2F, 0x10, 0x85, 0x67, 0x00, 0x18, 0x09, 0xD7,
+0x2B, 0x10, 0x85, 0x67, 0x00, 0x18, 0x18, 0xD7,
+0x27, 0x10, 0x85, 0x67, 0x00, 0x18, 0x28, 0xD7,
+0x23, 0x10, 0x85, 0x67, 0x00, 0x18, 0xD3, 0xD6,
+0x1F, 0x10, 0x85, 0x67, 0x80, 0x18, 0x80, 0x08,
+0x1B, 0x10, 0x85, 0x67, 0x00, 0x18, 0x6D, 0xDB,
+0x17, 0x10, 0x85, 0x67, 0x00, 0x18, 0x4B, 0xDB,
+0x13, 0x10, 0x85, 0x67, 0x00, 0x18, 0x4F, 0xDE,
+0x0F, 0x10, 0x10, 0xF0, 0x24, 0x6A, 0x3B, 0xF7,
 0x6C, 0x9A, 0x01, 0x6D, 0x40, 0x9B, 0xAD, 0xEA,
-0x40, 0xDB, 0x10, 0xF0, 0x24, 0x6A, 0xBC, 0xF2,
-0x58, 0x9A, 0x80, 0xC2, 0x0E, 0x6A, 0x01, 0x10,
+0x40, 0xDB, 0x10, 0xF0, 0x24, 0x6A, 0x9B, 0xF6,
+0x54, 0x9A, 0x80, 0xC2, 0x0E, 0x6A, 0x01, 0x10,
 0x00, 0x6A, 0x40, 0xC0, 0x05, 0x97, 0x04, 0x90,
 0x03, 0x63, 0x00, 0xEF, 0xFD, 0x63, 0x05, 0x62,
-0x04, 0xD0, 0x10, 0xF0, 0x24, 0x6B, 0xBC, 0xF2,
-0x70, 0x9B, 0x10, 0xF0, 0x23, 0x6A, 0x2E, 0xF5,
-0x1D, 0x4A, 0x10, 0xF0, 0x30, 0x68, 0x40, 0xDB,
+0x04, 0xD0, 0x10, 0xF0, 0x24, 0x6B, 0x9B, 0xF6,
+0x6C, 0x9B, 0x10, 0xF0, 0x23, 0x6A, 0xEE, 0xF3,
+0x05, 0x4A, 0x10, 0xF0, 0x30, 0x68, 0x40, 0xDB,
 0x00, 0xF0, 0x00, 0x48, 0x40, 0xF0, 0x40, 0xA0,
 0x40, 0xF0, 0x61, 0xA0, 0x4E, 0xEB, 0x29, 0x23,
 0x4C, 0x32, 0x0D, 0xE2, 0x80, 0xA3, 0xA1, 0x42,
-0xB5, 0xE0, 0x00, 0x18, 0x9C, 0xDC, 0x40, 0xF0,
+0xB5, 0xE0, 0x00, 0x18, 0x4B, 0xDC, 0x40, 0xF0,
 0x40, 0xA0, 0x01, 0x4A, 0x40, 0xF0, 0x40, 0xC0,
 0x40, 0xF0, 0x60, 0xA0, 0x40, 0xF0, 0x41, 0xA0,
 0x6E, 0xEA, 0x0A, 0x22, 0x30, 0xF0, 0x20, 0x6A,
@@ -22232,55 +22164,55 @@ u8 array_mp_8821c_fw_nic[] = {
 0x10, 0xF0, 0x30, 0x6A, 0x00, 0xF0, 0x00, 0x4A,
 0x40, 0xF0, 0x60, 0xA2, 0x08, 0x6C, 0x8E, 0xEB,
 0x02, 0x2B, 0x40, 0xF0, 0x60, 0xC2, 0x00, 0x18,
-0x4C, 0xDA, 0x05, 0x97, 0x04, 0x90, 0x03, 0x63,
+0xFB, 0xD9, 0x05, 0x97, 0x04, 0x90, 0x03, 0x63,
 0x00, 0xEF, 0x00, 0x65, 0xFD, 0x63, 0x05, 0x62,
 0x04, 0xD0, 0x10, 0xF0, 0x30, 0x68, 0x00, 0xF0,
 0x00, 0x48, 0xC1, 0xF7, 0x66, 0xA0, 0x7F, 0x6C,
 0xA7, 0x43, 0x6F, 0x4D, 0xB4, 0x35, 0x15, 0xE5,
 0x46, 0xA5, 0x8C, 0xEA, 0x20, 0x2A, 0x74, 0x33,
 0x09, 0xE3, 0xC1, 0xF6, 0x8E, 0xA2, 0xA2, 0x67,
-0xC1, 0xF6, 0x0F, 0x4D, 0x00, 0x18, 0x9C, 0xDC,
+0xC1, 0xF6, 0x0F, 0x4D, 0x00, 0x18, 0x4B, 0xDC,
 0xC1, 0xF7, 0x46, 0xA0, 0x10, 0xF0, 0x24, 0x6C,
-0x5C, 0xF7, 0x90, 0x9C, 0x54, 0x33, 0x0D, 0xE3,
+0x3C, 0xF3, 0x8C, 0x9C, 0x54, 0x33, 0x0D, 0xE3,
 0xC1, 0xF6, 0xAC, 0xA3, 0x76, 0x4A, 0x54, 0x32,
 0xA0, 0xC4, 0xC1, 0xF6, 0x8D, 0xA3, 0x10, 0xF0,
-0x24, 0x6B, 0x5C, 0xF7, 0x74, 0x9B, 0x41, 0xE0,
+0x24, 0x6B, 0x3C, 0xF3, 0x70, 0x9B, 0x41, 0xE0,
 0x80, 0xC3, 0x86, 0x40, 0x49, 0x10, 0x01, 0x72,
 0x49, 0x61, 0x74, 0x33, 0x0D, 0xE3, 0xC1, 0xF6,
 0x47, 0xA3, 0xFF, 0x72, 0x0C, 0x61, 0xC1, 0xF6,
-0x88, 0xA3, 0x06, 0x4D, 0x00, 0x18, 0x6E, 0xDB,
+0x88, 0xA3, 0x06, 0x4D, 0x00, 0x18, 0x1D, 0xDB,
 0xC1, 0xF7, 0x66, 0xA0, 0x74, 0x33, 0x01, 0xE3,
 0xC1, 0xF6, 0x4E, 0xC0, 0x04, 0x10, 0x01, 0x6A,
 0x4B, 0xEA, 0xC1, 0xF6, 0x4E, 0xC3, 0x10, 0xF0,
 0x30, 0x6A, 0x00, 0xF0, 0x00, 0x4A, 0xC1, 0xF7,
-0x66, 0xA2, 0x10, 0xF0, 0x24, 0x6D, 0x5C, 0xF7,
-0xB0, 0x9D, 0x74, 0x34, 0x51, 0xE4, 0xC1, 0xF6,
+0x66, 0xA2, 0x10, 0xF0, 0x24, 0x6D, 0x3C, 0xF3,
+0xAC, 0x9D, 0x74, 0x34, 0x51, 0xE4, 0xC1, 0xF6,
 0xCC, 0xA4, 0x76, 0x4B, 0x74, 0x33, 0xC0, 0xC5,
 0xC1, 0xF6, 0xAD, 0xA4, 0x10, 0xF0, 0x24, 0x6C,
-0x5C, 0xF7, 0x94, 0x9C, 0x49, 0xE3, 0xA0, 0xC4,
+0x3C, 0xF3, 0x90, 0x9C, 0x49, 0xE3, 0xA0, 0xC4,
 0x46, 0x82, 0x00, 0x52, 0x0B, 0x60, 0x10, 0xF0,
-0x24, 0x6A, 0x7C, 0xF3, 0x6C, 0x9A, 0x10, 0xF0,
-0x24, 0x6C, 0x1C, 0xF3, 0x8C, 0x9C, 0x40, 0x9B,
+0x24, 0x6A, 0x3B, 0xF7, 0x6C, 0x9A, 0x10, 0xF0,
+0x24, 0x6C, 0xFB, 0xF6, 0x88, 0x9C, 0x40, 0x9B,
 0x8D, 0xEA, 0x40, 0xDB, 0x10, 0xF0, 0x30, 0x6A,
 0x00, 0xF0, 0x00, 0x4A, 0xC1, 0xF7, 0x66, 0xA2,
 0x76, 0x4B, 0x74, 0x33, 0x69, 0xE2, 0x86, 0x42,
-0x00, 0x18, 0x05, 0xDB, 0x05, 0x97, 0x04, 0x90,
+0x00, 0x18, 0xB4, 0xDA, 0x05, 0x97, 0x04, 0x90,
 0x03, 0x63, 0x00, 0xEF, 0xFD, 0x63, 0x05, 0x62,
-0x04, 0xD0, 0x10, 0xF0, 0x24, 0x6B, 0xBC, 0xF2,
-0x70, 0x9B, 0x10, 0xF0, 0x23, 0x6A, 0xCE, 0xF6,
-0x05, 0x4A, 0x10, 0xF0, 0x30, 0x68, 0x40, 0xDB,
+0x04, 0xD0, 0x10, 0xF0, 0x24, 0x6B, 0x9B, 0xF6,
+0x6C, 0x9B, 0x10, 0xF0, 0x23, 0x6A, 0x6E, 0xF5,
+0x0D, 0x4A, 0x10, 0xF0, 0x30, 0x68, 0x40, 0xDB,
 0x00, 0xF0, 0x00, 0x48, 0xC1, 0xF7, 0x66, 0xA0,
 0xC1, 0xF7, 0x47, 0xA0, 0x6E, 0xEA, 0x4A, 0x22,
 0x30, 0xF0, 0x20, 0x6A, 0xEF, 0xF4, 0x08, 0x4A,
-0xA0, 0xF0, 0x6C, 0xAA, 0x01, 0xF0, 0x00, 0x73,
-0x10, 0x60, 0xA0, 0xF0, 0x8D, 0xA2, 0xA0, 0xF0,
-0x4C, 0xA2, 0xAE, 0x42, 0x8E, 0xED, 0x09, 0x25,
+0xA0, 0xF0, 0x6A, 0xAA, 0x01, 0xF0, 0x00, 0x73,
+0x10, 0x60, 0xA0, 0xF0, 0x8B, 0xA2, 0xA0, 0xF0,
+0x4A, 0xA2, 0xAE, 0x42, 0x8E, 0xED, 0x09, 0x25,
 0x01, 0xF1, 0x01, 0x73, 0x06, 0x60, 0x01, 0xF1,
 0x00, 0x73, 0x03, 0x60, 0xFF, 0x4A, 0x4E, 0xEC,
 0x0D, 0x2C, 0x30, 0xF0, 0x20, 0x6B, 0xC0, 0xF1,
 0x08, 0x4B, 0x80, 0xF0, 0x4C, 0x9B, 0x04, 0x6C,
 0x8D, 0xEA, 0x02, 0x6C, 0x8D, 0xEA, 0x80, 0xF0,
-0x4C, 0xDB, 0x24, 0x10, 0x00, 0x18, 0x71, 0xDD,
+0x4C, 0xDB, 0x24, 0x10, 0x00, 0x18, 0x1B, 0xDD,
 0xC1, 0xF7, 0x46, 0xA0, 0x01, 0x4A, 0xC1, 0xF7,
 0x46, 0xC0, 0xC1, 0xF7, 0x66, 0xA0, 0xC1, 0xF7,
 0x47, 0xA0, 0x6E, 0xEA, 0x0A, 0x22, 0x30, 0xF0,
@@ -22289,16 +22221,16 @@ u8 array_mp_8821c_fw_nic[] = {
 0x6C, 0xDA, 0x10, 0xF0, 0x30, 0x6A, 0x00, 0xF0,
 0x00, 0x4A, 0xC1, 0xF7, 0x66, 0xA2, 0x08, 0x6C,
 0x8E, 0xEB, 0x02, 0x2B, 0xC1, 0xF7, 0x66, 0xC2,
-0x00, 0x18, 0xDF, 0xD9, 0x05, 0x97, 0x04, 0x90,
+0x00, 0x18, 0x8E, 0xD9, 0x05, 0x97, 0x04, 0x90,
 0x03, 0x63, 0x00, 0xEF, 0xFD, 0x63, 0x05, 0x62,
 0x30, 0xF0, 0x20, 0x6A, 0xEE, 0xF4, 0x44, 0x9A,
 0xFF, 0xF7, 0x1F, 0x6B, 0x6C, 0xEC, 0x40, 0xEA,
 0x05, 0x2A, 0x01, 0x6B, 0x30, 0xF0, 0x20, 0x6A,
-0xEF, 0xF6, 0x6C, 0xC2, 0x05, 0x97, 0x03, 0x63,
+0xEF, 0xF6, 0x68, 0xC2, 0x05, 0x97, 0x03, 0x63,
 0x00, 0xEF, 0x00, 0x65, 0xFB, 0x63, 0x09, 0x62,
 0x08, 0xD1, 0x07, 0xD0, 0xE0, 0xF1, 0x14, 0x68,
 0x0A, 0xD4, 0x24, 0x67, 0x90, 0x67, 0x04, 0x05,
-0x00, 0x18, 0xE3, 0xDD, 0x7D, 0x67, 0x50, 0xA3,
+0x00, 0x18, 0x8D, 0xDD, 0x7D, 0x67, 0x50, 0xA3,
 0x01, 0x48, 0xE0, 0xF1, 0x1A, 0x70, 0x40, 0xC1,
 0x01, 0x49, 0xF4, 0x61, 0x30, 0xF0, 0x20, 0x6A,
 0xC0, 0xF1, 0x08, 0x4A, 0x0C, 0xF0, 0x6D, 0xA2,
@@ -22311,48 +22243,48 @@ u8 array_mp_8821c_fw_nic[] = {
 0x00, 0xEF, 0x00, 0x65, 0xFB, 0x63, 0x09, 0x62,
 0x08, 0xD1, 0x07, 0xD0, 0xE0, 0xF1, 0x10, 0x68,
 0x0A, 0xD4, 0x24, 0x67, 0x90, 0x67, 0x04, 0x05,
-0x00, 0x18, 0xE3, 0xDD, 0x7D, 0x67, 0x50, 0xA3,
+0x00, 0x18, 0x8D, 0xDD, 0x7D, 0x67, 0x50, 0xA3,
 0x01, 0x48, 0xE0, 0xF1, 0x14, 0x70, 0x40, 0xC1,
 0x01, 0x49, 0xF4, 0x61, 0xE0, 0xF1, 0x1C, 0x6C,
-0x04, 0x05, 0x00, 0x18, 0xE3, 0xDD, 0x7D, 0x67,
+0x04, 0x05, 0x00, 0x18, 0x8D, 0xDD, 0x7D, 0x67,
 0x50, 0xA3, 0x0A, 0x93, 0x44, 0xC3, 0x09, 0x97,
 0x08, 0x91, 0x07, 0x90, 0x05, 0x63, 0x00, 0xEF,
 0xFB, 0x63, 0x09, 0x62, 0x08, 0xD0, 0x04, 0x00,
-0x90, 0x67, 0x00, 0x18, 0xED, 0xDD, 0xA0, 0xF1,
+0x90, 0x67, 0x00, 0x18, 0x97, 0xDD, 0xA0, 0xF1,
 0x02, 0x6A, 0x1F, 0xF7, 0x00, 0x6B, 0x4C, 0xEB,
 0x02, 0xF0, 0x00, 0x73, 0x01, 0x60, 0x05, 0x2B,
-0x10, 0xF0, 0x24, 0x6B, 0xFC, 0xF2, 0x60, 0x9B,
-0x04, 0x10, 0x10, 0xF0, 0x24, 0x6B, 0xFC, 0xF2,
-0x64, 0x9B, 0x80, 0xA0, 0x6D, 0xE2, 0x01, 0x4A,
+0x10, 0xF0, 0x24, 0x6B, 0xBB, 0xF6, 0x7C, 0x9B,
+0x04, 0x10, 0x10, 0xF0, 0x24, 0x6B, 0xDB, 0xF6,
+0x60, 0x9B, 0x80, 0xA0, 0x6D, 0xE2, 0x01, 0x4A,
 0xA0, 0xF1, 0x0A, 0x72, 0x80, 0xC3, 0x01, 0x48,
 0xE8, 0x61, 0x04, 0x00, 0x90, 0x67, 0x00, 0x18,
-0x07, 0xDE, 0xA0, 0xF1, 0x0A, 0x6A, 0x1F, 0xF7,
+0xB1, 0xDD, 0xA0, 0xF1, 0x0A, 0x6A, 0x1F, 0xF7,
 0x00, 0x6B, 0x4C, 0xEB, 0x02, 0xF0, 0x00, 0x73,
 0x01, 0x60, 0x05, 0x2B, 0x10, 0xF0, 0x24, 0x6B,
-0xFC, 0xF2, 0x60, 0x9B, 0x04, 0x10, 0x10, 0xF0,
-0x24, 0x6B, 0xFC, 0xF2, 0x64, 0x9B, 0x80, 0xA0,
+0xBB, 0xF6, 0x7C, 0x9B, 0x04, 0x10, 0x10, 0xF0,
+0x24, 0x6B, 0xDB, 0xF6, 0x60, 0x9B, 0x80, 0xA0,
 0x6D, 0xE2, 0x01, 0x4A, 0xA0, 0xF1, 0x0F, 0x72,
 0x80, 0xC3, 0x01, 0x48, 0xE8, 0x61, 0x10, 0xF0,
-0x24, 0x6A, 0x5C, 0xF7, 0x58, 0x9A, 0x19, 0x6B,
+0x24, 0x6A, 0x3C, 0xF3, 0x54, 0x9A, 0x19, 0x6B,
 0x60, 0xC2, 0x09, 0x97, 0x08, 0x90, 0x05, 0x63,
 0x00, 0xEF, 0x00, 0x65, 0xFC, 0x63, 0x07, 0x62,
 0x06, 0xD0, 0x30, 0xF0, 0x20, 0x68, 0xC0, 0xF1,
 0x08, 0x48, 0x0C, 0xF0, 0x4C, 0xA0, 0x0B, 0x2A,
 0xE0, 0xF1, 0x1A, 0x6C, 0x04, 0x05, 0x00, 0x18,
-0xE3, 0xDD, 0x9D, 0x67, 0x70, 0xA4, 0x07, 0x6A,
+0x8D, 0xDD, 0x9D, 0x67, 0x70, 0xA4, 0x07, 0x6A,
 0x6C, 0xEA, 0x0C, 0xF0, 0x4C, 0xC0, 0x30, 0xF0,
 0x20, 0x68, 0xC0, 0xF1, 0x08, 0x48, 0x0C, 0xF0,
 0x4E, 0xA0, 0x0A, 0x2A, 0xE0, 0xF1, 0x1A, 0x6C,
-0x04, 0x05, 0x00, 0x18, 0xE3, 0xDD, 0x7D, 0x67,
+0x04, 0x05, 0x00, 0x18, 0x8D, 0xDD, 0x7D, 0x67,
 0x50, 0xA3, 0x56, 0x32, 0x0C, 0xF0, 0x4E, 0xC0,
 0x30, 0xF0, 0x20, 0x68, 0xC0, 0xF1, 0x08, 0x48,
 0x0C, 0xF0, 0x4F, 0xA0, 0x0B, 0x2A, 0xE0, 0xF1,
-0x1D, 0x6C, 0x04, 0x05, 0x00, 0x18, 0xE3, 0xDD,
+0x1D, 0x6C, 0x04, 0x05, 0x00, 0x18, 0x8D, 0xDD,
 0x9D, 0x67, 0x70, 0xA4, 0x03, 0x6A, 0x6C, 0xEA,
 0x0C, 0xF0, 0x4F, 0xC0, 0x30, 0xF0, 0x20, 0x68,
 0xC0, 0xF1, 0x08, 0x48, 0x0C, 0xF0, 0x50, 0xA0,
 0x0C, 0x2A, 0xE0, 0xF1, 0x1D, 0x6C, 0x04, 0x05,
-0x00, 0x18, 0xE3, 0xDD, 0x7D, 0x67, 0x50, 0xA3,
+0x00, 0x18, 0x8D, 0xDD, 0x7D, 0x67, 0x50, 0xA3,
 0x30, 0x6B, 0x6C, 0xEA, 0x53, 0x32, 0x0C, 0xF0,
 0x50, 0xC0, 0x07, 0x97, 0x06, 0x90, 0x04, 0x63,
 0x00, 0xEF, 0x00, 0x65, 0xFB, 0x63, 0x09, 0x62,
@@ -22361,17 +22293,17 @@ u8 array_mp_8821c_fw_nic[] = {
 0xE0, 0xF1, 0x1B, 0x6C, 0xB1, 0x67, 0x0C, 0xF0,
 0x48, 0xC0, 0x0C, 0xF0, 0x49, 0xC0, 0x0C, 0xF0,
 0x4A, 0xC0, 0x0C, 0xF0, 0x4B, 0xC0, 0x00, 0x18,
-0xE3, 0xDD, 0x9D, 0x67, 0x70, 0xA4, 0x07, 0x6A,
+0x8D, 0xDD, 0x9D, 0x67, 0x70, 0xA4, 0x07, 0x6A,
 0xE0, 0xF1, 0x1D, 0x6C, 0x6C, 0xEA, 0x0C, 0xF0,
 0x4C, 0xC0, 0x18, 0x6A, 0x6C, 0xEA, 0x4F, 0x32,
 0x76, 0x33, 0xB1, 0x67, 0x0C, 0xF0, 0x4D, 0xC0,
-0x0C, 0xF0, 0x6E, 0xC0, 0x00, 0x18, 0xE3, 0xDD,
+0x0C, 0xF0, 0x6E, 0xC0, 0x00, 0x18, 0x8D, 0xDD,
 0x5D, 0x67, 0x70, 0xA2, 0x0C, 0x6A, 0x6C, 0xEA,
 0x4B, 0x32, 0x7A, 0x33, 0x0C, 0xF0, 0x4F, 0xC0,
-0x0C, 0xF0, 0x70, 0xC0, 0x00, 0x18, 0x3D, 0xDE,
-0x10, 0xF0, 0x24, 0x6A, 0x5C, 0xF7, 0x58, 0x9A,
+0x0C, 0xF0, 0x70, 0xC0, 0x00, 0x18, 0xE7, 0xDD,
+0x10, 0xF0, 0x24, 0x6A, 0x3C, 0xF3, 0x54, 0x9A,
 0x60, 0xA2, 0xFF, 0x6A, 0x6C, 0xEA, 0xFD, 0x72,
-0x02, 0x61, 0x00, 0x18, 0x18, 0xDE, 0x09, 0x97,
+0x02, 0x61, 0x00, 0x18, 0xC2, 0xDD, 0x09, 0x97,
 0x08, 0x91, 0x07, 0x90, 0x05, 0x63, 0x00, 0xEF,
 0xFB, 0x63, 0x09, 0x62, 0x22, 0x6A, 0x7D, 0x67,
 0x50, 0xC3, 0x01, 0x6A, 0x4F, 0xCB, 0x30, 0xF0,
@@ -22380,147 +22312,147 @@ u8 array_mp_8821c_fw_nic[] = {
 0x00, 0xEF, 0x00, 0x65, 0xFB, 0x63, 0x09, 0x62,
 0x1A, 0x6A, 0x7D, 0x67, 0x50, 0xC3, 0x00, 0xF0,
 0x12, 0x04, 0x05, 0x6A, 0x4F, 0xCB, 0x00, 0x18,
-0x07, 0xDE, 0x30, 0xF0, 0x20, 0x6A, 0xAE, 0xF2,
+0xB1, 0xDD, 0x30, 0xF0, 0x20, 0x6A, 0xAE, 0xF2,
 0x58, 0x9A, 0x04, 0x04, 0x40, 0xEA, 0x09, 0x97,
 0x05, 0x63, 0x00, 0xEF, 0xFB, 0x63, 0x09, 0x62,
 0x19, 0x6A, 0x7D, 0x67, 0x50, 0xC3, 0x00, 0xF0,
 0x12, 0x04, 0x08, 0x6A, 0x4F, 0xCB, 0x00, 0x18,
-0xED, 0xDD, 0x30, 0xF0, 0x20, 0x6A, 0xAE, 0xF2,
+0x97, 0xDD, 0x30, 0xF0, 0x20, 0x6A, 0xAE, 0xF2,
 0x58, 0x9A, 0x04, 0x04, 0x40, 0xEA, 0x09, 0x97,
 0x05, 0x63, 0x00, 0xEF, 0xFD, 0x63, 0x05, 0x62,
 0x40, 0xA4, 0x01, 0x72, 0x04, 0x61, 0x00, 0x18,
-0x9B, 0xDE, 0x00, 0x18, 0x91, 0xDE, 0x05, 0x97,
+0x45, 0xDE, 0x00, 0x18, 0x3B, 0xDE, 0x05, 0x97,
 0x03, 0x63, 0x00, 0xEF, 0x30, 0xF0, 0x20, 0x6A,
 0xC0, 0xF1, 0x08, 0x4A, 0x00, 0x6B, 0x0C, 0xF5,
 0x7A, 0xC2, 0x00, 0x6B, 0x0C, 0xF5, 0x78, 0xC2,
 0x20, 0xE8, 0x00, 0x65, 0xFF, 0x63, 0x01, 0xD0,
-0x10, 0xF0, 0x24, 0x6B, 0x5C, 0xF7, 0x7C, 0x9B,
-0x10, 0xF0, 0x24, 0x68, 0x7C, 0xF7, 0x00, 0x98,
+0x10, 0xF0, 0x24, 0x6B, 0x3C, 0xF3, 0x78, 0x9B,
+0x10, 0xF0, 0x24, 0x68, 0x3C, 0xF3, 0x1C, 0x98,
 0xE0, 0x9B, 0xFF, 0x6A, 0x4C, 0xEC, 0x0C, 0xEF,
 0x08, 0x5C, 0x4C, 0xED, 0x4C, 0xEE, 0xE0, 0xDB,
 0x46, 0x60, 0xB0, 0x75, 0x2E, 0x61, 0xB2, 0x76,
-0x13, 0x61, 0x10, 0xF0, 0x24, 0x6A, 0x3C, 0xF7,
-0xA0, 0x9A, 0x01, 0x6A, 0x44, 0xEC, 0xC0, 0x9D,
+0x13, 0x61, 0x10, 0xF0, 0x24, 0x6A, 0xFC, 0xF2,
+0xBC, 0x9A, 0x01, 0x6A, 0x44, 0xEC, 0xC0, 0x9D,
 0x00, 0xF6, 0x40, 0x34, 0xCD, 0xEC, 0x80, 0xDD,
 0xC0, 0x9D, 0x40, 0x34, 0x80, 0x34, 0x8F, 0xEC,
 0xCC, 0xEC, 0x80, 0xDD, 0x80, 0x9B, 0x4E, 0x10,
 0xB1, 0x76, 0x80, 0xF0, 0x13, 0x61, 0x10, 0xF0,
-0x24, 0x6A, 0x3C, 0xF7, 0xA0, 0x9A, 0x01, 0x6A,
+0x24, 0x6A, 0xFC, 0xF2, 0xBC, 0x9A, 0x01, 0x6A,
 0x44, 0xEC, 0xC0, 0x9D, 0x00, 0xF6, 0x40, 0x34,
 0xCD, 0xEC, 0x80, 0xDD, 0xC0, 0x9D, 0x40, 0x34,
 0x80, 0x34, 0x8F, 0xEC, 0xCC, 0xEC, 0x80, 0xDD,
 0x80, 0x9B, 0x4F, 0xEA, 0x8C, 0xEA, 0x40, 0xDB,
 0x7B, 0x10, 0xA0, 0x75, 0x7D, 0x61, 0xA1, 0x76,
-0x08, 0x61, 0x10, 0xF0, 0x24, 0x6A, 0x3C, 0xF7,
-0x40, 0x9A, 0x01, 0x6B, 0x64, 0xEC, 0xA0, 0x9A,
+0x08, 0x61, 0x10, 0xF0, 0x24, 0x6A, 0xFC, 0xF2,
+0x5C, 0x9A, 0x01, 0x6B, 0x64, 0xEC, 0xA0, 0x9A,
 0x51, 0x10, 0xA2, 0x76, 0x6F, 0x61, 0x10, 0xF0,
-0x24, 0x6A, 0x3C, 0xF7, 0x40, 0x9A, 0x01, 0x6B,
+0x24, 0x6A, 0xFC, 0xF2, 0x5C, 0x9A, 0x01, 0x6B,
 0x64, 0xEC, 0xA0, 0x9A, 0x5A, 0x10, 0xE8, 0x44,
 0x4C, 0xEF, 0x08, 0x5F, 0xE0, 0x6A, 0x65, 0x60,
 0xB0, 0x75, 0x35, 0x61, 0xB2, 0x76, 0x18, 0x61,
-0x10, 0xF0, 0x24, 0x6A, 0x3C, 0xF7, 0x44, 0x9A,
+0x10, 0xF0, 0x24, 0x6A, 0x1C, 0xF3, 0x40, 0x9A,
 0x01, 0x6E, 0xA6, 0x67, 0x00, 0x9A, 0xA4, 0xEF,
 0xE5, 0x67, 0x00, 0xF6, 0xA0, 0x35, 0x0D, 0xED,
 0xA0, 0xDA, 0xA0, 0x9A, 0xE0, 0x37, 0xE0, 0x37,
 0xEF, 0xEF, 0xAC, 0xEF, 0xE0, 0xDA, 0x40, 0x9B,
 0xC4, 0xEC, 0x86, 0x67, 0x4D, 0xEC, 0x19, 0x10,
 0xB1, 0x76, 0x44, 0x61, 0x10, 0xF0, 0x24, 0x6A,
-0x3C, 0xF7, 0x44, 0x9A, 0x01, 0x6E, 0xA6, 0x67,
+0x1C, 0xF3, 0x40, 0x9A, 0x01, 0x6E, 0xA6, 0x67,
 0x00, 0x9A, 0xA4, 0xEF, 0xE5, 0x67, 0x00, 0xF6,
 0xA0, 0x35, 0x0D, 0xED, 0xA0, 0xDA, 0xA0, 0x9A,
 0xE0, 0x37, 0xE0, 0x37, 0xEF, 0xEF, 0xAC, 0xEF,
 0xE0, 0xDA, 0x40, 0x9B, 0xC4, 0xEC, 0xCF, 0xEC,
 0x4C, 0xEC, 0x80, 0xDB, 0x29, 0x10, 0xA0, 0x75,
 0x2B, 0x61, 0xA1, 0x76, 0x11, 0x61, 0x10, 0xF0,
-0x24, 0x6A, 0x3C, 0xF7, 0x44, 0x9A, 0x01, 0x6B,
+0x24, 0x6A, 0x1C, 0xF3, 0x40, 0x9A, 0x01, 0x6B,
 0x64, 0xEF, 0xA0, 0x9A, 0x00, 0xF6, 0x60, 0x34,
 0x8F, 0xEC, 0xAC, 0xEC, 0x80, 0xDA, 0x80, 0x9A,
 0x60, 0x33, 0x60, 0x33, 0x8D, 0xEB, 0x13, 0x10,
 0xA2, 0x76, 0x14, 0x61, 0x10, 0xF0, 0x24, 0x6A,
-0x3C, 0xF7, 0x44, 0x9A, 0x01, 0x6B, 0x64, 0xEF,
+0x1C, 0xF3, 0x40, 0x9A, 0x01, 0x6B, 0x64, 0xEF,
 0xA0, 0x9A, 0x00, 0xF6, 0x60, 0x34, 0x8F, 0xEC,
 0xAC, 0xEC, 0x80, 0xDA, 0x80, 0x9A, 0x60, 0x33,
 0x60, 0x33, 0x6F, 0xEB, 0x8C, 0xEB, 0x60, 0xDA,
 0xF0, 0x6A, 0x03, 0x10, 0xE2, 0x6A, 0x01, 0x10,
 0xE1, 0x6A, 0x01, 0x90, 0x01, 0x63, 0x20, 0xE8,
 0xFF, 0x6B, 0x6C, 0xEC, 0x08, 0x5C, 0x6C, 0xED,
-0x20, 0x60, 0x10, 0xF0, 0x24, 0x6A, 0x7C, 0xF7,
-0x44, 0x9A, 0x01, 0x6E, 0x40, 0xA2, 0x6C, 0xEA,
+0x20, 0x60, 0x10, 0xF0, 0x24, 0x6A, 0x5C, 0xF3,
+0x40, 0x9A, 0x01, 0x6E, 0x40, 0xA2, 0x6C, 0xEA,
 0x47, 0xEC, 0xCC, 0xEA, 0x48, 0x2A, 0x10, 0xF0,
-0x24, 0x6A, 0x7C, 0xF7, 0x48, 0x9A, 0xC4, 0xEC,
+0x24, 0x6A, 0x5C, 0xF3, 0x44, 0x9A, 0xC4, 0xEC,
 0x86, 0x67, 0x40, 0xA2, 0x6C, 0xEA, 0xCC, 0xEA,
 0xCE, 0xEA, 0x3B, 0x2A, 0x05, 0x25, 0x10, 0xF0,
-0x24, 0x6A, 0x7C, 0xF7, 0xAC, 0x9A, 0x24, 0x10,
-0x10, 0xF0, 0x24, 0x6A, 0x7C, 0xF7, 0x4C, 0x9A,
+0x24, 0x6A, 0x5C, 0xF3, 0xA8, 0x9A, 0x24, 0x10,
+0x10, 0xF0, 0x24, 0x6A, 0x5C, 0xF3, 0x48, 0x9A,
 0x29, 0x10, 0xF8, 0x4C, 0x6C, 0xEC, 0x08, 0x5C,
 0xE0, 0x6A, 0x2E, 0x60, 0x10, 0xF0, 0x24, 0x6A,
-0x7C, 0xF7, 0x50, 0x9A, 0x01, 0x6E, 0x40, 0xA2,
+0x5C, 0xF3, 0x4C, 0x9A, 0x01, 0x6E, 0x40, 0xA2,
 0x6C, 0xEA, 0x47, 0xEC, 0xCC, 0xEA, 0x23, 0x2A,
-0x10, 0xF0, 0x24, 0x6A, 0x7C, 0xF7, 0x54, 0x9A,
+0x10, 0xF0, 0x24, 0x6A, 0x5C, 0xF3, 0x50, 0x9A,
 0xC4, 0xEC, 0x86, 0x67, 0x40, 0xA2, 0x6C, 0xEA,
 0xCC, 0xEA, 0xCE, 0xEA, 0x16, 0x2A, 0x0A, 0x25,
-0x10, 0xF0, 0x24, 0x6A, 0x7C, 0xF7, 0xB8, 0x9A,
+0x10, 0xF0, 0x24, 0x6A, 0x5C, 0xF3, 0xB4, 0x9A,
 0x40, 0xA5, 0x6C, 0xEA, 0x8D, 0xEA, 0x6C, 0xEA,
 0x40, 0xC5, 0x09, 0x10, 0x10, 0xF0, 0x24, 0x6A,
-0x7C, 0xF7, 0x58, 0x9A, 0xA0, 0xA2, 0x8F, 0xEC,
+0x5C, 0xF3, 0x54, 0x9A, 0xA0, 0xA2, 0x8F, 0xEC,
 0x6C, 0xEC, 0xAC, 0xEC, 0x80, 0xC2, 0xF0, 0x6A,
 0x20, 0xE8, 0xE5, 0x6A, 0x20, 0xE8, 0xE4, 0x6A,
 0x20, 0xE8, 0x00, 0x65, 0xFC, 0x63, 0x07, 0x62,
 0x06, 0xD1, 0x05, 0xD0, 0xFF, 0x68, 0x24, 0x67,
 0x0C, 0xE9, 0x91, 0x67, 0xAC, 0xE8, 0xA1, 0x6E,
-0xA0, 0x6D, 0x00, 0x18, 0xB1, 0xDE, 0x91, 0x67,
-0xB0, 0x67, 0x00, 0x18, 0x14, 0xDF, 0x07, 0x97,
+0xA0, 0x6D, 0x00, 0x18, 0x5B, 0xDE, 0x91, 0x67,
+0xB0, 0x67, 0x00, 0x18, 0xBE, 0xDE, 0x07, 0x97,
 0x06, 0x91, 0x05, 0x90, 0x04, 0x63, 0x00, 0xEF,
 0xFD, 0x63, 0x05, 0x62, 0x10, 0xF0, 0x24, 0x6A,
-0x5C, 0xF7, 0x7C, 0x9A, 0x10, 0xF0, 0x24, 0x6D,
-0x7C, 0xF7, 0xA0, 0x9D, 0x40, 0x9B, 0xA2, 0x6E,
+0x3C, 0xF3, 0x78, 0x9A, 0x10, 0xF0, 0x24, 0x6D,
+0x3C, 0xF3, 0xBC, 0x9D, 0x40, 0x9B, 0xA2, 0x6E,
 0xAC, 0xEA, 0x40, 0xDB, 0xFF, 0x6A, 0x4C, 0xEC,
-0xA0, 0x6D, 0x00, 0x18, 0xB1, 0xDE, 0x05, 0x97,
+0xA0, 0x6D, 0x00, 0x18, 0x5B, 0xDE, 0x05, 0x97,
 0x03, 0x63, 0x00, 0xEF, 0xFF, 0x6B, 0x6C, 0xEC,
 0x08, 0x5C, 0x0F, 0x60, 0x10, 0xF0, 0x24, 0x6A,
-0x7C, 0xF7, 0x44, 0x9A, 0x01, 0x6D, 0x40, 0xA2,
+0x5C, 0xF3, 0x40, 0x9A, 0x01, 0x6D, 0x40, 0xA2,
 0x6C, 0xEA, 0x47, 0xEC, 0xAC, 0xEA, 0x1F, 0x2A,
-0x10, 0xF0, 0x24, 0x6A, 0x7C, 0xF7, 0x48, 0x9A,
+0x10, 0xF0, 0x24, 0x6A, 0x5C, 0xF3, 0x44, 0x9A,
 0x13, 0x10, 0xF8, 0x4C, 0x6C, 0xEC, 0x08, 0x5C,
 0xE0, 0x6A, 0x16, 0x60, 0x10, 0xF0, 0x24, 0x6A,
-0x7C, 0xF7, 0x50, 0x9A, 0x01, 0x6D, 0x40, 0xA2,
+0x5C, 0xF3, 0x4C, 0x9A, 0x01, 0x6D, 0x40, 0xA2,
 0x6C, 0xEA, 0x47, 0xEC, 0xAC, 0xEA, 0x0B, 0x2A,
-0x10, 0xF0, 0x24, 0x6A, 0x7C, 0xF7, 0x54, 0x9A,
+0x10, 0xF0, 0x24, 0x6A, 0x5C, 0xF3, 0x50, 0x9A,
 0x40, 0xA2, 0x4C, 0xEB, 0x67, 0xEC, 0x45, 0x67,
 0x6E, 0xEA, 0xAC, 0xEA, 0x20, 0xE8, 0x00, 0x6A,
 0x20, 0xE8, 0x00, 0x65, 0xFF, 0x6B, 0x6C, 0xEC,
 0x08, 0x5C, 0x1A, 0x60, 0x10, 0xF0, 0x24, 0x6A,
-0x7C, 0xF7, 0x44, 0x9A, 0x01, 0x6E, 0x40, 0xA2,
+0x5C, 0xF3, 0x40, 0x9A, 0x01, 0x6E, 0x40, 0xA2,
 0x6C, 0xEA, 0x47, 0xEC, 0xCC, 0xEA, 0x35, 0x2A,
-0x10, 0xF0, 0x24, 0x6A, 0x7C, 0xF7, 0x48, 0x9A,
+0x10, 0xF0, 0x24, 0x6A, 0x5C, 0xF3, 0x44, 0x9A,
 0xC4, 0xEC, 0x86, 0x67, 0xA0, 0xA2, 0x6C, 0xED,
 0xCC, 0xED, 0xCE, 0xED, 0x2A, 0x2D, 0x10, 0xF0,
-0x24, 0x6A, 0x7C, 0xF7, 0x4C, 0x9A, 0x1E, 0x10,
+0x24, 0x6A, 0x5C, 0xF3, 0x48, 0x9A, 0x1E, 0x10,
 0xF8, 0x4C, 0x6C, 0xEC, 0x08, 0x5C, 0xE0, 0x6A,
-0x21, 0x60, 0x10, 0xF0, 0x24, 0x6A, 0x7C, 0xF7,
-0x50, 0x9A, 0x01, 0x6E, 0x40, 0xA2, 0x6C, 0xEA,
+0x21, 0x60, 0x10, 0xF0, 0x24, 0x6A, 0x5C, 0xF3,
+0x4C, 0x9A, 0x01, 0x6E, 0x40, 0xA2, 0x6C, 0xEA,
 0x47, 0xEC, 0xCC, 0xEA, 0x16, 0x2A, 0x10, 0xF0,
-0x24, 0x6A, 0x7C, 0xF7, 0x54, 0x9A, 0xC4, 0xEC,
+0x24, 0x6A, 0x5C, 0xF3, 0x50, 0x9A, 0xC4, 0xEC,
 0x86, 0x67, 0xA0, 0xA2, 0x6C, 0xED, 0xCC, 0xED,
 0xCE, 0xED, 0x0B, 0x2D, 0x10, 0xF0, 0x24, 0x6A,
-0x7C, 0xF7, 0x58, 0x9A, 0x40, 0xA2, 0x4C, 0xEB,
+0x5C, 0xF3, 0x54, 0x9A, 0x40, 0xA2, 0x4C, 0xEB,
 0x8C, 0xEB, 0x6E, 0xEC, 0x01, 0x5C, 0x58, 0x67,
 0x20, 0xE8, 0x00, 0x6A, 0x20, 0xE8, 0x00, 0x65,
 0xFD, 0x63, 0x05, 0x62, 0x04, 0xD0, 0xFF, 0x6A,
 0x04, 0x67, 0x4C, 0xE8, 0xAC, 0xEA, 0xA4, 0x72,
-0x0C, 0x61, 0x90, 0x67, 0x00, 0x18, 0x57, 0xDF,
+0x0C, 0x61, 0x90, 0x67, 0x00, 0x18, 0x01, 0xDF,
 0x01, 0x72, 0x04, 0x61, 0x90, 0x67, 0x00, 0x18,
-0x4C, 0xDF, 0x1F, 0x10, 0x90, 0x67, 0x00, 0x6D,
+0xF6, 0xDE, 0x1F, 0x10, 0x90, 0x67, 0x00, 0x6D,
 0x0D, 0x10, 0xA5, 0x72, 0x11, 0x61, 0x90, 0x67,
-0x00, 0x18, 0x57, 0xDF, 0x01, 0x72, 0x04, 0x61,
-0x90, 0x67, 0x00, 0x18, 0x4C, 0xDF, 0x18, 0x10,
-0x90, 0x67, 0x01, 0x6D, 0x00, 0x18, 0x41, 0xDF,
-0x90, 0x67, 0x00, 0x18, 0x4C, 0xDF, 0x14, 0x10,
-0x90, 0x67, 0x00, 0x18, 0x6F, 0xDF, 0x01, 0x72,
+0x00, 0x18, 0x01, 0xDF, 0x01, 0x72, 0x04, 0x61,
+0x90, 0x67, 0x00, 0x18, 0xF6, 0xDE, 0x18, 0x10,
+0x90, 0x67, 0x01, 0x6D, 0x00, 0x18, 0xEB, 0xDE,
+0x90, 0x67, 0x00, 0x18, 0xF6, 0xDE, 0x14, 0x10,
+0x90, 0x67, 0x00, 0x18, 0x19, 0xDF, 0x01, 0x72,
 0x07, 0x61, 0x90, 0x67, 0x01, 0x6D, 0x00, 0x18,
-0x41, 0xDF, 0x90, 0x67, 0x00, 0x6D, 0x06, 0x10,
-0x90, 0x67, 0x00, 0x6D, 0x00, 0x18, 0x41, 0xDF,
-0x90, 0x67, 0x01, 0x6D, 0x00, 0x18, 0x41, 0xDF,
+0xEB, 0xDE, 0x90, 0x67, 0x00, 0x6D, 0x06, 0x10,
+0x90, 0x67, 0x00, 0x6D, 0x00, 0x18, 0xEB, 0xDE,
+0x90, 0x67, 0x01, 0x6D, 0x00, 0x18, 0xEB, 0xDE,
 0x05, 0x97, 0x04, 0x90, 0x03, 0x63, 0x00, 0xEF,
 0xFD, 0x63, 0x05, 0x62, 0xFF, 0x6A, 0x8C, 0xEA,
 0x01, 0x72, 0xFF, 0xF7, 0x1F, 0x6C, 0xAC, 0xEC,
@@ -22529,36 +22461,36 @@ u8 array_mp_8821c_fw_nic[] = {
 0xCE, 0xF4, 0x5C, 0x9A, 0x40, 0xEA, 0x05, 0x97,
 0x03, 0x63, 0x00, 0xEF, 0xFD, 0x63, 0x05, 0x62,
 0x30, 0xF0, 0x20, 0x6A, 0xEF, 0xF4, 0x08, 0x4A,
-0x40, 0xF2, 0x6E, 0xA2, 0x0B, 0x23, 0x40, 0xF2,
-0x6F, 0xA2, 0x04, 0x23, 0x40, 0xF2, 0x8C, 0xA2,
-0xA5, 0x6D, 0x07, 0x10, 0x40, 0xF2, 0x8C, 0xA2,
-0xA4, 0x6D, 0x03, 0x10, 0x40, 0xF2, 0x8C, 0xA2,
-0xA3, 0x6D, 0x00, 0x18, 0x92, 0xDF, 0x05, 0x97,
+0x40, 0xF2, 0x6A, 0xA2, 0x0B, 0x23, 0x40, 0xF2,
+0x6B, 0xA2, 0x04, 0x23, 0x40, 0xF2, 0x88, 0xA2,
+0xA5, 0x6D, 0x07, 0x10, 0x40, 0xF2, 0x88, 0xA2,
+0xA4, 0x6D, 0x03, 0x10, 0x40, 0xF2, 0x88, 0xA2,
+0xA3, 0x6D, 0x00, 0x18, 0x3C, 0xDF, 0x05, 0x97,
 0x03, 0x63, 0x00, 0xEF, 0xFB, 0x63, 0x09, 0x62,
 0x08, 0xD1, 0x07, 0xD0, 0xFF, 0x6A, 0x30, 0xF0,
 0x20, 0x69, 0x4C, 0xEC, 0x4C, 0xEE, 0xFF, 0xF7,
 0x1F, 0x68, 0xEF, 0xF4, 0x08, 0x49, 0x04, 0xD4,
-0xAC, 0xE8, 0x05, 0xD6, 0x00, 0x18, 0xBD, 0xDF,
-0x40, 0xF2, 0x50, 0xA1, 0x2B, 0x22, 0x04, 0x94,
-0xB0, 0x67, 0x00, 0x18, 0xB2, 0xDF, 0x00, 0x18,
-0xBD, 0xDF, 0x40, 0xF2, 0x51, 0xA1, 0x01, 0x69,
-0x1E, 0x22, 0x10, 0xF0, 0x24, 0x6A, 0x7C, 0xF7,
-0x5C, 0x9A, 0x60, 0xA2, 0x10, 0x6A, 0x6C, 0xEA,
+0xAC, 0xE8, 0x05, 0xD6, 0x00, 0x18, 0x67, 0xDF,
+0x40, 0xF2, 0x4C, 0xA1, 0x2B, 0x22, 0x04, 0x94,
+0xB0, 0x67, 0x00, 0x18, 0x5C, 0xDF, 0x00, 0x18,
+0x67, 0xDF, 0x40, 0xF2, 0x4D, 0xA1, 0x01, 0x69,
+0x1E, 0x22, 0x10, 0xF0, 0x24, 0x6A, 0x5C, 0xF3,
+0x58, 0x9A, 0x60, 0xA2, 0x10, 0x6A, 0x6C, 0xEA,
 0x19, 0x2A, 0x04, 0x94, 0xB0, 0x67, 0x00, 0x18,
-0xB2, 0xDF, 0x00, 0x18, 0xBD, 0xDF, 0xF1, 0x17,
+0x5C, 0xDF, 0x00, 0x18, 0x67, 0xDF, 0xF1, 0x17,
 0x04, 0x94, 0xB0, 0x67, 0x01, 0x49, 0x00, 0x18,
-0xB2, 0xDF, 0x00, 0x18, 0xBD, 0xDF, 0x04, 0x94,
-0xB0, 0x67, 0x00, 0x18, 0xB2, 0xDF, 0x00, 0x18,
-0xBD, 0xDF, 0xFF, 0x6A, 0x4C, 0xE9, 0x05, 0x92,
+0x5C, 0xDF, 0x00, 0x18, 0x67, 0xDF, 0x04, 0x94,
+0xB0, 0x67, 0x00, 0x18, 0x5C, 0xDF, 0x00, 0x18,
+0x67, 0xDF, 0xFF, 0x6A, 0x4C, 0xE9, 0x05, 0x92,
 0x43, 0xE9, 0xEE, 0x61, 0x09, 0x97, 0x08, 0x91,
 0x07, 0x90, 0x05, 0x63, 0x00, 0xEF, 0x00, 0x65,
 0xFD, 0x63, 0x05, 0x62, 0x30, 0xF0, 0x20, 0x6A,
 0x4E, 0xF2, 0x50, 0x9A, 0xA4, 0x67, 0x30, 0xF0,
-0x20, 0x6C, 0xEF, 0xF6, 0x0D, 0x4C, 0x07, 0x6E,
+0x20, 0x6C, 0xEF, 0xF6, 0x09, 0x4C, 0x07, 0x6E,
 0x40, 0xEA, 0x30, 0xF0, 0x20, 0x6B, 0xEF, 0xF4,
-0x08, 0x4B, 0x00, 0xF2, 0x85, 0xA3, 0x01, 0x6F,
+0x08, 0x4B, 0x00, 0xF2, 0x81, 0xA3, 0x01, 0x6F,
 0xFF, 0x6A, 0xEC, 0xEC, 0x12, 0x24, 0x00, 0xF2,
-0xC5, 0xA3, 0x00, 0xF2, 0x66, 0xA3, 0xC6, 0x34,
+0xC1, 0xA3, 0x00, 0xF2, 0x62, 0xA3, 0xC6, 0x34,
 0xCA, 0x35, 0xCE, 0x36, 0xEC, 0xEC, 0xEC, 0xED,
 0xEC, 0xEE, 0x7F, 0x6F, 0x6C, 0xEF, 0x4C, 0xEC,
 0x4C, 0xED, 0x4C, 0xEE, 0x4C, 0xEF, 0x00, 0x18,
@@ -22576,294 +22508,294 @@ u8 array_mp_8821c_fw_nic[] = {
 0x40, 0xEA, 0x09, 0x97, 0x08, 0x90, 0x05, 0x63,
 0x00, 0xEF, 0x00, 0x65, 0xFA, 0x63, 0x0B, 0x62,
 0x0A, 0xD1, 0x09, 0xD0, 0x30, 0xF0, 0x20, 0x6A,
-0xEF, 0xF4, 0x08, 0x4A, 0x00, 0xF2, 0xD4, 0xA2,
+0xEF, 0xF4, 0x08, 0x4A, 0x00, 0xF2, 0xD0, 0xA2,
 0x1F, 0x6B, 0xFF, 0x6D, 0xCC, 0xEB, 0x8E, 0xEB,
 0xAC, 0xEB, 0x80, 0xF0, 0x1B, 0x2B, 0x00, 0xF2,
-0x93, 0xA2, 0x01, 0x6B, 0x8C, 0xEB, 0xAC, 0xEB,
-0x07, 0x23, 0x00, 0xF2, 0x7C, 0x9A, 0x20, 0xF2,
-0x54, 0x9A, 0x6E, 0xEA, 0x80, 0xF0, 0x0E, 0x22,
+0x8F, 0xA2, 0x01, 0x6B, 0x8C, 0xEB, 0xAC, 0xEB,
+0x07, 0x23, 0x00, 0xF2, 0x78, 0x9A, 0x20, 0xF2,
+0x50, 0x9A, 0x6E, 0xEA, 0x80, 0xF0, 0x0E, 0x22,
 0x30, 0xF0, 0x20, 0x6A, 0xEF, 0xF4, 0x08, 0x4A,
-0x00, 0xF2, 0x93, 0xA2, 0x10, 0x6B, 0x8C, 0xEB,
-0x06, 0x23, 0x20, 0xF2, 0x64, 0x9A, 0x20, 0xF2,
-0x5C, 0x9A, 0x6E, 0xEA, 0x7F, 0x22, 0x10, 0xF0,
-0x24, 0x6A, 0x9C, 0xF7, 0x40, 0x9A, 0x30, 0xF0,
+0x00, 0xF2, 0x8F, 0xA2, 0x10, 0x6B, 0x8C, 0xEB,
+0x06, 0x23, 0x20, 0xF2, 0x60, 0x9A, 0x20, 0xF2,
+0x58, 0x9A, 0x6E, 0xEA, 0x7F, 0x22, 0x10, 0xF0,
+0x24, 0x6A, 0x5C, 0xF3, 0x5C, 0x9A, 0x30, 0xF0,
 0x20, 0x68, 0xEF, 0xF4, 0x08, 0x48, 0x40, 0x9A,
 0xFF, 0x69, 0x07, 0xD2, 0x10, 0xF0, 0x24, 0x6A,
-0x9C, 0xF7, 0x44, 0x9A, 0x40, 0x9A, 0x06, 0xD2,
-0x10, 0xF0, 0x24, 0x6A, 0x9C, 0xF7, 0x68, 0x9A,
+0x7C, 0xF3, 0x40, 0x9A, 0x40, 0x9A, 0x06, 0xD2,
+0x10, 0xF0, 0x24, 0x6A, 0x7C, 0xF3, 0x64, 0x9A,
 0x8F, 0x6A, 0x80, 0xA3, 0x8C, 0xEA, 0x40, 0xC3,
-0x10, 0xF0, 0x24, 0x6A, 0x1C, 0xF3, 0x48, 0x9A,
+0x10, 0xF0, 0x24, 0x6A, 0xFB, 0xF6, 0x44, 0x9A,
 0x00, 0x6C, 0xA4, 0x67, 0x40, 0x9A, 0x05, 0xD2,
-0x10, 0xF0, 0x24, 0x6A, 0x1C, 0xF7, 0x5C, 0x9A,
+0x10, 0xF0, 0x24, 0x6A, 0xFC, 0xF2, 0x58, 0x9A,
 0x40, 0x9A, 0x04, 0xD2, 0x07, 0x96, 0x06, 0x97,
-0x00, 0x18, 0x04, 0xE0, 0x05, 0x96, 0x04, 0x97,
-0x01, 0x6C, 0x00, 0x6D, 0x00, 0x18, 0x04, 0xE0,
-0x00, 0xF2, 0x73, 0xA0, 0x10, 0x6A, 0x6C, 0xEA,
-0x22, 0x22, 0x20, 0xF2, 0xC4, 0x98, 0x20, 0xF2,
-0xE8, 0x98, 0x76, 0x35, 0x02, 0x6C, 0x2C, 0xED,
-0x00, 0x18, 0x04, 0xE0, 0x00, 0xF2, 0xB3, 0xA0,
-0x20, 0xF2, 0xCC, 0x98, 0x20, 0xF2, 0xF0, 0x98,
+0x00, 0x18, 0xAE, 0xDF, 0x05, 0x96, 0x04, 0x97,
+0x01, 0x6C, 0x00, 0x6D, 0x00, 0x18, 0xAE, 0xDF,
+0x00, 0xF2, 0x6F, 0xA0, 0x10, 0x6A, 0x6C, 0xEA,
+0x22, 0x22, 0x20, 0xF2, 0xC0, 0x98, 0x20, 0xF2,
+0xE4, 0x98, 0x76, 0x35, 0x02, 0x6C, 0x2C, 0xED,
+0x00, 0x18, 0xAE, 0xDF, 0x00, 0xF2, 0xAF, 0xA0,
+0x20, 0xF2, 0xC8, 0x98, 0x20, 0xF2, 0xEC, 0x98,
 0xB6, 0x35, 0x04, 0x6C, 0x2C, 0xED, 0x00, 0x18,
-0x04, 0xE0, 0x30, 0xF0, 0x20, 0x6A, 0x4E, 0xF2,
+0xAE, 0xDF, 0x30, 0xF0, 0x20, 0x6A, 0x4E, 0xF2,
 0x50, 0x9A, 0x30, 0xF0, 0x20, 0x6C, 0x30, 0xF0,
-0x20, 0x6D, 0x2F, 0xF7, 0x04, 0x4C, 0x0F, 0xF7,
-0x0C, 0x4D, 0x10, 0x6E, 0x40, 0xEA, 0x30, 0xF0,
+0x20, 0x6D, 0x2F, 0xF7, 0x00, 0x4C, 0x0F, 0xF7,
+0x08, 0x4D, 0x10, 0x6E, 0x40, 0xEA, 0x30, 0xF0,
 0x20, 0x6A, 0xEF, 0xF4, 0x08, 0x4A, 0x00, 0xF2,
-0x93, 0xA2, 0x01, 0x6B, 0x8C, 0xEB, 0x1E, 0x23,
-0x00, 0xF2, 0xDC, 0x9A, 0x20, 0xF2, 0x74, 0x9A,
+0x8F, 0xA2, 0x01, 0x6B, 0x8C, 0xEB, 0x1E, 0x23,
+0x00, 0xF2, 0xD8, 0x9A, 0x20, 0xF2, 0x70, 0x9A,
 0xCE, 0xEB, 0x18, 0x23, 0x86, 0x35, 0x07, 0x6B,
-0x20, 0xF2, 0xE0, 0x9A, 0x6C, 0xED, 0xFF, 0x6B,
-0x03, 0x6C, 0x6C, 0xED, 0x00, 0x18, 0x04, 0xE0,
+0x00, 0xF2, 0xFC, 0x9A, 0x6C, 0xED, 0xFF, 0x6B,
+0x03, 0x6C, 0x6C, 0xED, 0x00, 0x18, 0xAE, 0xDF,
 0x30, 0xF0, 0x20, 0x6A, 0x4E, 0xF2, 0x50, 0x9A,
 0x30, 0xF0, 0x20, 0x6C, 0x30, 0xF0, 0x20, 0x6D,
-0x0F, 0xF7, 0x1C, 0x4C, 0x0F, 0xF7, 0x04, 0x4D,
+0x0F, 0xF7, 0x18, 0x4C, 0x0F, 0xF7, 0x00, 0x4D,
 0x08, 0x6E, 0x40, 0xEA, 0x0B, 0x97, 0x0A, 0x91,
 0x09, 0x90, 0x06, 0x63, 0x00, 0xEF, 0x00, 0x65,
 0xFD, 0x63, 0x05, 0x62, 0x04, 0xD0, 0x30, 0xF0,
 0x20, 0x6A, 0x4E, 0xF2, 0x50, 0x9A, 0xA4, 0x67,
-0x30, 0xF0, 0x20, 0x6C, 0xEF, 0xF6, 0x1B, 0x4C,
+0x30, 0xF0, 0x20, 0x6C, 0xEF, 0xF6, 0x17, 0x4C,
 0x07, 0x6E, 0x40, 0xEA, 0x30, 0xF0, 0x20, 0x6A,
-0xEF, 0xF4, 0x08, 0x4A, 0x00, 0xF2, 0x93, 0xA2,
+0xEF, 0xF4, 0x08, 0x4A, 0x00, 0xF2, 0x8F, 0xA2,
 0x10, 0x6B, 0x8C, 0xEB, 0x05, 0x23, 0x96, 0x34,
-0xFF, 0x6A, 0x4C, 0xEC, 0x00, 0x18, 0x80, 0xEC,
-0x30, 0xF0, 0x20, 0x6A, 0xEF, 0xF6, 0x5C, 0xA2,
+0xFF, 0x6A, 0x4C, 0xEC, 0x00, 0x18, 0x22, 0xEC,
+0x30, 0xF0, 0x20, 0x6A, 0xEF, 0xF6, 0x58, 0xA2,
 0x1F, 0x6C, 0xFF, 0x68, 0x4C, 0xEC, 0x0C, 0x4C,
 0x01, 0x6A, 0x44, 0xEC, 0x82, 0x67, 0x00, 0x18,
-0xD6, 0xE0, 0x10, 0xF0, 0x24, 0x6A, 0x9C, 0xF7,
-0x6C, 0x9A, 0x08, 0x6C, 0x40, 0xA3, 0x0C, 0xEA,
+0x80, 0xE0, 0x10, 0xF0, 0x24, 0x6A, 0x7C, 0xF3,
+0x68, 0x9A, 0x08, 0x6C, 0x40, 0xA3, 0x0C, 0xEA,
 0x8D, 0xEA, 0x0C, 0xEA, 0x40, 0xC3, 0x05, 0x97,
 0x04, 0x90, 0x03, 0x63, 0x00, 0xEF, 0x00, 0x65,
 0xFF, 0xF7, 0x1F, 0x6A, 0x10, 0xF0, 0x24, 0x6B,
-0x8C, 0xEA, 0x9C, 0xF7, 0x70, 0x9B, 0x10, 0xF0,
-0x24, 0x6C, 0x9C, 0xF7, 0x94, 0x9C, 0xCC, 0xEB,
+0x8C, 0xEA, 0x7C, 0xF3, 0x6C, 0x9B, 0x10, 0xF0,
+0x24, 0x6C, 0x7C, 0xF3, 0x90, 0x9C, 0xCC, 0xEB,
 0x40, 0xF6, 0xA0, 0x35, 0x8D, 0xEB, 0x1F, 0xF7,
 0x00, 0x6C, 0x4C, 0xEC, 0x02, 0xF0, 0x00, 0x74,
 0xAD, 0xEB, 0x01, 0x60, 0x05, 0x2C, 0x10, 0xF0,
-0x24, 0x6C, 0xFC, 0xF2, 0x80, 0x9C, 0x04, 0x10,
-0x10, 0xF0, 0x24, 0x6C, 0xFC, 0xF2, 0x84, 0x9C,
+0x24, 0x6C, 0xBB, 0xF6, 0x9C, 0x9C, 0x04, 0x10,
+0x10, 0xF0, 0x24, 0x6C, 0xDB, 0xF6, 0x80, 0x9C,
 0x89, 0xE2, 0x60, 0xDA, 0x20, 0xE8, 0x00, 0x65,
 0xFF, 0xF7, 0x1F, 0x6A, 0x8C, 0xEA, 0x1F, 0xF7,
 0x00, 0x6C, 0x4C, 0xEC, 0xFF, 0x6B, 0x02, 0xF0,
 0x00, 0x74, 0xAC, 0xEB, 0x01, 0x60, 0x05, 0x2C,
-0x10, 0xF0, 0x24, 0x6C, 0xFC, 0xF2, 0x80, 0x9C,
-0x04, 0x10, 0x10, 0xF0, 0x24, 0x6C, 0xFC, 0xF2,
-0x84, 0x9C, 0x91, 0xE2, 0x00, 0x6D, 0xA0, 0xDC,
-0x10, 0xF0, 0x24, 0x6C, 0x9C, 0xF7, 0x90, 0x9C,
+0x10, 0xF0, 0x24, 0x6C, 0xBB, 0xF6, 0x9C, 0x9C,
+0x04, 0x10, 0x10, 0xF0, 0x24, 0x6C, 0xDB, 0xF6,
+0x80, 0x9C, 0x91, 0xE2, 0x00, 0x6D, 0xA0, 0xDC,
+0x10, 0xF0, 0x24, 0x6C, 0x7C, 0xF3, 0x8C, 0x9C,
 0xD4, 0x36, 0x40, 0xF6, 0x60, 0x33, 0x8C, 0xEE,
-0x6D, 0xEE, 0x10, 0xF0, 0x24, 0x6B, 0x9C, 0xF7,
-0x74, 0x9B, 0x6D, 0xEE, 0x1F, 0xF7, 0x00, 0x6B,
+0x6D, 0xEE, 0x10, 0xF0, 0x24, 0x6B, 0x7C, 0xF3,
+0x70, 0x9B, 0x6D, 0xEE, 0x1F, 0xF7, 0x00, 0x6B,
 0x4C, 0xEB, 0x02, 0xF0, 0x00, 0x73, 0x01, 0x60,
-0x05, 0x2B, 0x10, 0xF0, 0x24, 0x6B, 0xFC, 0xF2,
-0x60, 0x9B, 0x04, 0x10, 0x10, 0xF0, 0x24, 0x6B,
-0xFC, 0xF2, 0x64, 0x9B, 0x69, 0xE2, 0xC0, 0xDA,
+0x05, 0x2B, 0x10, 0xF0, 0x24, 0x6B, 0xBB, 0xF6,
+0x7C, 0x9B, 0x04, 0x10, 0x10, 0xF0, 0x24, 0x6B,
+0xDB, 0xF6, 0x60, 0x9B, 0x69, 0xE2, 0xC0, 0xDA,
 0x20, 0xE8, 0x00, 0x65, 0x0F, 0xF5, 0x00, 0x6B,
 0x78, 0xEE, 0xFF, 0xF7, 0x1F, 0x6A, 0x8C, 0xEA,
-0x10, 0xF0, 0x24, 0x6C, 0x9C, 0xF7, 0x90, 0x9C,
+0x10, 0xF0, 0x24, 0x6C, 0x7C, 0xF3, 0x8C, 0x9C,
 0x40, 0xF6, 0xA0, 0x35, 0x12, 0xEB, 0x8C, 0xEB,
-0x10, 0xF0, 0x24, 0x6C, 0x9C, 0xF7, 0x94, 0x9C,
+0x10, 0xF0, 0x24, 0x6C, 0x7C, 0xF3, 0x90, 0x9C,
 0xAD, 0xEB, 0x8D, 0xEB, 0x1F, 0xF7, 0x00, 0x6C,
 0x4C, 0xEC, 0x02, 0xF0, 0x00, 0x74, 0x01, 0x60,
-0x05, 0x2C, 0x10, 0xF0, 0x24, 0x6C, 0xFC, 0xF2,
-0x80, 0x9C, 0x04, 0x10, 0x10, 0xF0, 0x24, 0x6C,
-0xFC, 0xF2, 0x84, 0x9C, 0x89, 0xE2, 0x60, 0xDA,
+0x05, 0x2C, 0x10, 0xF0, 0x24, 0x6C, 0xBB, 0xF6,
+0x9C, 0x9C, 0x04, 0x10, 0x10, 0xF0, 0x24, 0x6C,
+0xDB, 0xF6, 0x80, 0x9C, 0x89, 0xE2, 0x60, 0xDA,
 0x20, 0xE8, 0x00, 0x65, 0x10, 0xF0, 0x24, 0x6A,
-0x9C, 0xF7, 0x40, 0x9A, 0x40, 0x9A, 0x20, 0xE8,
+0x5C, 0xF3, 0x5C, 0x9A, 0x40, 0x9A, 0x20, 0xE8,
 0x30, 0xF0, 0x20, 0x6B, 0xC0, 0xF1, 0x08, 0x4B,
 0x4C, 0x9B, 0x8D, 0xEA, 0x4C, 0xDB, 0x10, 0xF0,
-0x24, 0x6B, 0xBC, 0xF7, 0x68, 0x9B, 0x80, 0xDB,
-0x10, 0xF0, 0x24, 0x6B, 0xBC, 0xF7, 0x6C, 0x9B,
+0x24, 0x6B, 0x9C, 0xF3, 0x64, 0x9B, 0x80, 0xDB,
+0x10, 0xF0, 0x24, 0x6B, 0x9C, 0xF3, 0x68, 0x9B,
 0x40, 0xDB, 0x20, 0xE8, 0xFD, 0x63, 0x05, 0x62,
-0x04, 0xD0, 0x10, 0xF0, 0x24, 0x6A, 0xBC, 0xF7,
-0x70, 0x9A, 0xC0, 0x6A, 0xFF, 0x68, 0x80, 0xA3,
+0x04, 0xD0, 0x10, 0xF0, 0x24, 0x6A, 0x9C, 0xF3,
+0x6C, 0x9A, 0xC0, 0x6A, 0xFF, 0x68, 0x80, 0xA3,
 0x8C, 0xEA, 0x40, 0xC3, 0x30, 0xF0, 0x20, 0x6A,
 0xCE, 0xF4, 0x5C, 0x9A, 0x0A, 0x6C, 0x40, 0xEA,
-0x10, 0xF0, 0x24, 0x6A, 0xBC, 0xF7, 0x54, 0x9A,
+0x10, 0xF0, 0x24, 0x6A, 0x9C, 0xF3, 0x50, 0x9A,
 0x01, 0x6B, 0x05, 0x97, 0x40, 0xA2, 0x0C, 0xEA,
 0x5E, 0x32, 0x6E, 0xEA, 0x6C, 0xEA, 0x0C, 0xEA,
 0x04, 0x90, 0x03, 0x63, 0x00, 0xEF, 0x00, 0x65,
 0xFD, 0x63, 0x05, 0x62, 0x04, 0xD0, 0x10, 0xF0,
-0x24, 0x6B, 0xBC, 0xF2, 0x70, 0x9B, 0x10, 0xF0,
-0x24, 0x6A, 0xD0, 0xF3, 0x01, 0x4A, 0x40, 0xDB,
+0x24, 0x6B, 0x9B, 0xF6, 0x6C, 0x9B, 0x10, 0xF0,
+0x24, 0x6A, 0x70, 0xF2, 0x09, 0x4A, 0x40, 0xDB,
 0x00, 0x68, 0x28, 0x10, 0x82, 0xF3, 0x08, 0x70,
-0x11, 0x61, 0x10, 0xF0, 0x24, 0x6A, 0x7C, 0xF3,
+0x11, 0x61, 0x10, 0xF0, 0x24, 0x6A, 0x3B, 0xF7,
 0x6C, 0x9A, 0x02, 0xF0, 0x00, 0x6C, 0x40, 0x9B,
 0x8D, 0xEA, 0x40, 0xDB, 0x10, 0xF0, 0x24, 0x6A,
-0xBC, 0xF7, 0x58, 0x9A, 0x03, 0x6B, 0x6B, 0xEB,
+0x9C, 0xF3, 0x54, 0x9A, 0x03, 0x6B, 0x6B, 0xEB,
 0x60, 0xC2, 0x18, 0x10, 0xFF, 0xF7, 0x1F, 0x6A,
 0x01, 0x48, 0x4C, 0xE8, 0x30, 0xF0, 0x20, 0x6A,
 0xCE, 0xF4, 0x5C, 0x9A, 0x14, 0x6C, 0x40, 0xEA,
 0x33, 0x58, 0x08, 0x61, 0x10, 0xF0, 0x24, 0x6A,
-0x7C, 0xF7, 0x5C, 0x9A, 0x60, 0xA2, 0x08, 0x6A,
-0x6C, 0xEA, 0x04, 0x2A, 0x00, 0x18, 0xDF, 0xE0,
+0x5C, 0xF3, 0x58, 0x9A, 0x60, 0xA2, 0x08, 0x6A,
+0x6C, 0xEA, 0x04, 0x2A, 0x00, 0x18, 0x89, 0xE0,
 0x01, 0x72, 0xD4, 0x61, 0x10, 0xF0, 0x24, 0x6A,
-0xBC, 0xF7, 0x58, 0x9A, 0x02, 0x6B, 0x6B, 0xEB,
-0x60, 0xC2, 0x10, 0xF0, 0x24, 0x6B, 0xBC, 0xF2,
-0x70, 0x9B, 0x10, 0xF0, 0x24, 0x6A, 0xD0, 0xF3,
-0x02, 0x4A, 0x40, 0xDB, 0x05, 0x97, 0x04, 0x90,
+0x9C, 0xF3, 0x54, 0x9A, 0x02, 0x6B, 0x6B, 0xEB,
+0x60, 0xC2, 0x10, 0xF0, 0x24, 0x6B, 0x9B, 0xF6,
+0x6C, 0x9B, 0x10, 0xF0, 0x24, 0x6A, 0x70, 0xF2,
+0x0A, 0x4A, 0x40, 0xDB, 0x05, 0x97, 0x04, 0x90,
 0x03, 0x63, 0x00, 0xEF, 0x05, 0x5C, 0x5E, 0x60,
-0x10, 0xF0, 0x24, 0x6A, 0x88, 0x34, 0x9C, 0xF1,
-0x10, 0x4A, 0x89, 0xE2, 0x40, 0x9A, 0x00, 0xEA,
+0x10, 0xF0, 0x24, 0x6A, 0x88, 0x34, 0x7B, 0xF5,
+0x0C, 0x4A, 0x89, 0xE2, 0x40, 0x9A, 0x00, 0xEA,
 0x30, 0xF0, 0x20, 0x6B, 0xC0, 0xF1, 0x48, 0x9B,
 0xAD, 0xEA, 0xC0, 0xF1, 0x48, 0xDB, 0x10, 0xF0,
-0x24, 0x6B, 0x1C, 0xF7, 0x78, 0x9B, 0xA0, 0xDB,
-0x10, 0xF0, 0x24, 0x6B, 0xBC, 0xF7, 0x7C, 0x9B,
+0x24, 0x6B, 0xFC, 0xF2, 0x74, 0x9B, 0xA0, 0xDB,
+0x10, 0xF0, 0x24, 0x6B, 0x9C, 0xF3, 0x78, 0x9B,
 0x32, 0x10, 0x30, 0xF0, 0x20, 0x6B, 0xC0, 0xF1,
 0x08, 0x4B, 0x41, 0x9B, 0xAD, 0xEA, 0x41, 0xDB,
-0x10, 0xF0, 0x24, 0x6B, 0xDC, 0xF7, 0x60, 0x9B,
-0xA0, 0xDB, 0x10, 0xF0, 0x24, 0x6B, 0xDC, 0xF7,
-0x64, 0x9B, 0x21, 0x10, 0x30, 0xF0, 0x20, 0x6B,
+0x10, 0xF0, 0x24, 0x6B, 0x9C, 0xF3, 0x7C, 0x9B,
+0xA0, 0xDB, 0x10, 0xF0, 0x24, 0x6B, 0xBC, 0xF3,
+0x60, 0x9B, 0x21, 0x10, 0x30, 0xF0, 0x20, 0x6B,
 0xC0, 0xF1, 0x08, 0x4B, 0x42, 0x9B, 0xAD, 0xEA,
-0x42, 0xDB, 0x10, 0xF0, 0x24, 0x6B, 0xDC, 0xF7,
-0x68, 0x9B, 0xA0, 0xDB, 0x10, 0xF0, 0x24, 0x6B,
-0xDC, 0xF7, 0x6C, 0x9B, 0x10, 0x10, 0x30, 0xF0,
+0x42, 0xDB, 0x10, 0xF0, 0x24, 0x6B, 0xBC, 0xF3,
+0x64, 0x9B, 0xA0, 0xDB, 0x10, 0xF0, 0x24, 0x6B,
+0xBC, 0xF3, 0x68, 0x9B, 0x10, 0x10, 0x30, 0xF0,
 0x20, 0x6B, 0xC0, 0xF1, 0x08, 0x4B, 0x43, 0x9B,
 0xAD, 0xEA, 0x43, 0xDB, 0x10, 0xF0, 0x24, 0x6B,
-0xDC, 0xF7, 0x70, 0x9B, 0xA0, 0xDB, 0x10, 0xF0,
-0x24, 0x6B, 0xDC, 0xF7, 0x74, 0x9B, 0x40, 0xDB,
+0xBC, 0xF3, 0x6C, 0x9B, 0xA0, 0xDB, 0x10, 0xF0,
+0x24, 0x6B, 0xBC, 0xF3, 0x70, 0x9B, 0x40, 0xDB,
 0x20, 0xE8, 0x30, 0xF0, 0x20, 0x6B, 0xC0, 0xF1,
 0x08, 0x4B, 0x44, 0x9B, 0xAD, 0xEA, 0x44, 0xDB,
-0x10, 0xF0, 0x24, 0x6B, 0xDC, 0xF7, 0x78, 0x9B,
-0xA0, 0xDB, 0x10, 0xF0, 0x24, 0x6B, 0xDC, 0xF7,
-0x7C, 0x9B, 0x40, 0xDB, 0x20, 0xE8, 0x00, 0x65,
+0x10, 0xF0, 0x24, 0x6B, 0xBC, 0xF3, 0x74, 0x9B,
+0xA0, 0xDB, 0x10, 0xF0, 0x24, 0x6B, 0xBC, 0xF3,
+0x78, 0x9B, 0x40, 0xDB, 0x20, 0xE8, 0x00, 0x65,
 0x05, 0x5C, 0x63, 0x60, 0x10, 0xF0, 0x24, 0x6A,
-0x88, 0x34, 0xBC, 0xF1, 0x04, 0x4A, 0x89, 0xE2,
+0x88, 0x34, 0x9B, 0xF5, 0x00, 0x4A, 0x89, 0xE2,
 0x40, 0x9A, 0x00, 0xEA, 0x30, 0xF0, 0x20, 0x6B,
 0xC0, 0xF1, 0x88, 0x9B, 0xAF, 0xEA, 0x8C, 0xEA,
 0xC0, 0xF1, 0x48, 0xDB, 0x10, 0xF0, 0x24, 0x6B,
-0xBC, 0xF7, 0x7C, 0x9B, 0x40, 0xDB, 0x10, 0xF0,
-0x24, 0x6A, 0x1C, 0xF7, 0x58, 0x9A, 0x35, 0x10,
+0x9C, 0xF3, 0x78, 0x9B, 0x40, 0xDB, 0x10, 0xF0,
+0x24, 0x6A, 0xFC, 0xF2, 0x54, 0x9A, 0x35, 0x10,
 0x30, 0xF0, 0x20, 0x6B, 0xC0, 0xF1, 0x08, 0x4B,
 0x81, 0x9B, 0xAF, 0xEA, 0x8C, 0xEA, 0x41, 0xDB,
-0x10, 0xF0, 0x24, 0x6B, 0xDC, 0xF7, 0x64, 0x9B,
-0x40, 0xDB, 0x10, 0xF0, 0x24, 0x6A, 0xDC, 0xF7,
-0x40, 0x9A, 0x23, 0x10, 0x30, 0xF0, 0x20, 0x6B,
+0x10, 0xF0, 0x24, 0x6B, 0xBC, 0xF3, 0x60, 0x9B,
+0x40, 0xDB, 0x10, 0xF0, 0x24, 0x6A, 0x9C, 0xF3,
+0x5C, 0x9A, 0x23, 0x10, 0x30, 0xF0, 0x20, 0x6B,
 0xC0, 0xF1, 0x08, 0x4B, 0x82, 0x9B, 0xAF, 0xEA,
 0x8C, 0xEA, 0x42, 0xDB, 0x10, 0xF0, 0x24, 0x6B,
-0xDC, 0xF7, 0x6C, 0x9B, 0x40, 0xDB, 0x10, 0xF0,
-0x24, 0x6A, 0xDC, 0xF7, 0x48, 0x9A, 0x11, 0x10,
+0xBC, 0xF3, 0x68, 0x9B, 0x40, 0xDB, 0x10, 0xF0,
+0x24, 0x6A, 0xBC, 0xF3, 0x44, 0x9A, 0x11, 0x10,
 0x30, 0xF0, 0x20, 0x6B, 0xC0, 0xF1, 0x08, 0x4B,
 0x83, 0x9B, 0xAF, 0xEA, 0x8C, 0xEA, 0x43, 0xDB,
-0x10, 0xF0, 0x24, 0x6B, 0xDC, 0xF7, 0x74, 0x9B,
-0x40, 0xDB, 0x10, 0xF0, 0x24, 0x6A, 0xDC, 0xF7,
-0x50, 0x9A, 0xA0, 0xDA, 0x20, 0xE8, 0x30, 0xF0,
+0x10, 0xF0, 0x24, 0x6B, 0xBC, 0xF3, 0x70, 0x9B,
+0x40, 0xDB, 0x10, 0xF0, 0x24, 0x6A, 0xBC, 0xF3,
+0x4C, 0x9A, 0xA0, 0xDA, 0x20, 0xE8, 0x30, 0xF0,
 0x20, 0x6B, 0xC0, 0xF1, 0x08, 0x4B, 0x84, 0x9B,
 0xAF, 0xEA, 0x8C, 0xEA, 0x44, 0xDB, 0x10, 0xF0,
-0x24, 0x6B, 0xDC, 0xF7, 0x7C, 0x9B, 0x40, 0xDB,
-0x10, 0xF0, 0x24, 0x6A, 0xDC, 0xF7, 0x58, 0x9A,
+0x24, 0x6B, 0xBC, 0xF3, 0x78, 0x9B, 0x40, 0xDB,
+0x10, 0xF0, 0x24, 0x6A, 0xBC, 0xF3, 0x54, 0x9A,
 0xA0, 0xDA, 0x20, 0xE8, 0x01, 0x74, 0x15, 0x60,
 0x03, 0x24, 0x02, 0x74, 0x23, 0x60, 0x20, 0xE8,
 0x30, 0xF0, 0x20, 0x6B, 0xC0, 0xF1, 0x08, 0x4B,
 0x4E, 0x9B, 0xAD, 0xEA, 0x4E, 0xDB, 0x10, 0xF0,
-0x24, 0x6B, 0x5C, 0xF3, 0x68, 0x9B, 0xA0, 0xDB,
-0x10, 0xF0, 0x24, 0x6B, 0xFC, 0xF7, 0x60, 0x9B,
+0x24, 0x6B, 0x3B, 0xF7, 0x78, 0x9B, 0xA0, 0xDB,
+0x10, 0xF0, 0x24, 0x6B, 0xBC, 0xF3, 0x7C, 0x9B,
 0x21, 0x10, 0x30, 0xF0, 0x20, 0x6B, 0xC0, 0xF1,
 0x08, 0x4B, 0x4F, 0x9B, 0xAD, 0xEA, 0x4F, 0xDB,
-0x10, 0xF0, 0x24, 0x6B, 0x5C, 0xF7, 0x60, 0x9B,
-0xA0, 0xDB, 0x10, 0xF0, 0x24, 0x6B, 0xFC, 0xF7,
-0x64, 0x9B, 0x10, 0x10, 0x30, 0xF0, 0x20, 0x6B,
+0x10, 0xF0, 0x24, 0x6B, 0x1C, 0xF3, 0x7C, 0x9B,
+0xA0, 0xDB, 0x10, 0xF0, 0x24, 0x6B, 0xDC, 0xF3,
+0x60, 0x9B, 0x10, 0x10, 0x30, 0xF0, 0x20, 0x6B,
 0xC0, 0xF1, 0x08, 0x4B, 0x50, 0x9B, 0xAD, 0xEA,
-0x50, 0xDB, 0x10, 0xF0, 0x24, 0x6B, 0xFC, 0xF7,
-0x68, 0x9B, 0xA0, 0xDB, 0x10, 0xF0, 0x24, 0x6B,
-0xFC, 0xF7, 0x6C, 0x9B, 0x40, 0xDB, 0x20, 0xE8,
+0x50, 0xDB, 0x10, 0xF0, 0x24, 0x6B, 0xDC, 0xF3,
+0x64, 0x9B, 0xA0, 0xDB, 0x10, 0xF0, 0x24, 0x6B,
+0xDC, 0xF3, 0x68, 0x9B, 0x40, 0xDB, 0x20, 0xE8,
 0x01, 0x74, 0x16, 0x60, 0x03, 0x24, 0x02, 0x74,
 0x25, 0x60, 0x20, 0xE8, 0x30, 0xF0, 0x20, 0x6B,
 0xC0, 0xF1, 0x08, 0x4B, 0x8E, 0x9B, 0xAF, 0xEA,
 0x8C, 0xEA, 0x4E, 0xDB, 0x10, 0xF0, 0x24, 0x6B,
-0xFC, 0xF7, 0x60, 0x9B, 0x40, 0xDB, 0x10, 0xF0,
-0x24, 0x6A, 0x5C, 0xF3, 0x48, 0x9A, 0x23, 0x10,
+0xBC, 0xF3, 0x7C, 0x9B, 0x40, 0xDB, 0x10, 0xF0,
+0x24, 0x6A, 0x3B, 0xF7, 0x58, 0x9A, 0x23, 0x10,
 0x30, 0xF0, 0x20, 0x6B, 0xC0, 0xF1, 0x08, 0x4B,
 0x8F, 0x9B, 0xAF, 0xEA, 0x8C, 0xEA, 0x4F, 0xDB,
-0x10, 0xF0, 0x24, 0x6B, 0xFC, 0xF7, 0x64, 0x9B,
-0x40, 0xDB, 0x10, 0xF0, 0x24, 0x6A, 0x5C, 0xF7,
-0x40, 0x9A, 0x11, 0x10, 0x30, 0xF0, 0x20, 0x6B,
+0x10, 0xF0, 0x24, 0x6B, 0xDC, 0xF3, 0x60, 0x9B,
+0x40, 0xDB, 0x10, 0xF0, 0x24, 0x6A, 0x1C, 0xF3,
+0x5C, 0x9A, 0x11, 0x10, 0x30, 0xF0, 0x20, 0x6B,
 0xC0, 0xF1, 0x08, 0x4B, 0x90, 0x9B, 0xAF, 0xEA,
 0x8C, 0xEA, 0x50, 0xDB, 0x10, 0xF0, 0x24, 0x6B,
-0xFC, 0xF7, 0x6C, 0x9B, 0x40, 0xDB, 0x10, 0xF0,
-0x24, 0x6A, 0xFC, 0xF7, 0x48, 0x9A, 0xA0, 0xDA,
+0xDC, 0xF3, 0x68, 0x9B, 0x40, 0xDB, 0x10, 0xF0,
+0x24, 0x6A, 0xDC, 0xF3, 0x44, 0x9A, 0xA0, 0xDA,
 0x20, 0xE8, 0x00, 0x65, 0x10, 0xF0, 0x24, 0x6C,
-0xBC, 0xF7, 0x9C, 0x9C, 0x00, 0x6A, 0x30, 0xF0,
+0x9C, 0xF3, 0x98, 0x9C, 0x00, 0x6A, 0x30, 0xF0,
 0x20, 0x6B, 0xC0, 0xF1, 0x48, 0xDB, 0xC0, 0xF1,
 0x08, 0x4B, 0x41, 0xDB, 0x42, 0xDB, 0x43, 0xDB,
 0x44, 0xDB, 0x40, 0xDC, 0x10, 0xF0, 0x24, 0x6C,
-0xDC, 0xF7, 0x84, 0x9C, 0x40, 0xDC, 0x10, 0xF0,
-0x24, 0x6C, 0xDC, 0xF7, 0x8C, 0x9C, 0x40, 0xDC,
-0x10, 0xF0, 0x24, 0x6C, 0xDC, 0xF7, 0x94, 0x9C,
-0x40, 0xDC, 0x10, 0xF0, 0x24, 0x6C, 0xDC, 0xF7,
-0x9C, 0x9C, 0x40, 0xDC, 0x10, 0xF0, 0x24, 0x6C,
-0xFC, 0xF7, 0x80, 0x9C, 0x4E, 0xDB, 0x4F, 0xDB,
-0x40, 0xDC, 0x10, 0xF0, 0x24, 0x6C, 0xFC, 0xF7,
-0x84, 0x9C, 0x40, 0xDC, 0x10, 0xF0, 0x24, 0x6C,
-0xFC, 0xF7, 0x8C, 0x9C, 0x50, 0xDB, 0x40, 0xDC,
-0x4C, 0xDB, 0x10, 0xF0, 0x24, 0x6B, 0xBC, 0xF7,
-0x6C, 0x9B, 0x40, 0xDB, 0x20, 0xE8, 0x00, 0x65,
-0x10, 0xF0, 0x24, 0x6B, 0x1C, 0xF7, 0x78, 0x9B,
-0x01, 0x6A, 0x4B, 0xEA, 0x40, 0xDB, 0x10, 0xF0,
-0x24, 0x6B, 0xDC, 0xF7, 0x60, 0x9B, 0x40, 0xDB,
-0x10, 0xF0, 0x24, 0x6B, 0xDC, 0xF7, 0x68, 0x9B,
-0x40, 0xDB, 0x10, 0xF0, 0x24, 0x6B, 0xDC, 0xF7,
-0x70, 0x9B, 0x40, 0xDB, 0x10, 0xF0, 0x24, 0x6B,
-0x5C, 0xF3, 0x68, 0x9B, 0x40, 0xDB, 0x10, 0xF0,
-0x24, 0x6B, 0x5C, 0xF7, 0x60, 0x9B, 0x40, 0xDB,
-0x10, 0xF0, 0x24, 0x6B, 0xFC, 0xF7, 0x6C, 0x9B,
-0x40, 0xDB, 0x10, 0xF0, 0x24, 0x6B, 0xBC, 0xF7,
+0xBC, 0xF3, 0x80, 0x9C, 0x40, 0xDC, 0x10, 0xF0,
+0x24, 0x6C, 0xBC, 0xF3, 0x88, 0x9C, 0x40, 0xDC,
+0x10, 0xF0, 0x24, 0x6C, 0xBC, 0xF3, 0x90, 0x9C,
+0x40, 0xDC, 0x10, 0xF0, 0x24, 0x6C, 0xBC, 0xF3,
+0x98, 0x9C, 0x40, 0xDC, 0x10, 0xF0, 0x24, 0x6C,
+0xBC, 0xF3, 0x9C, 0x9C, 0x4E, 0xDB, 0x4F, 0xDB,
+0x40, 0xDC, 0x10, 0xF0, 0x24, 0x6C, 0xDC, 0xF3,
+0x80, 0x9C, 0x40, 0xDC, 0x10, 0xF0, 0x24, 0x6C,
+0xDC, 0xF3, 0x88, 0x9C, 0x50, 0xDB, 0x40, 0xDC,
+0x4C, 0xDB, 0x10, 0xF0, 0x24, 0x6B, 0x9C, 0xF3,
 0x68, 0x9B, 0x40, 0xDB, 0x20, 0xE8, 0x00, 0x65,
+0x10, 0xF0, 0x24, 0x6B, 0xFC, 0xF2, 0x74, 0x9B,
+0x01, 0x6A, 0x4B, 0xEA, 0x40, 0xDB, 0x10, 0xF0,
+0x24, 0x6B, 0x9C, 0xF3, 0x7C, 0x9B, 0x40, 0xDB,
+0x10, 0xF0, 0x24, 0x6B, 0xBC, 0xF3, 0x64, 0x9B,
+0x40, 0xDB, 0x10, 0xF0, 0x24, 0x6B, 0xBC, 0xF3,
+0x6C, 0x9B, 0x40, 0xDB, 0x10, 0xF0, 0x24, 0x6B,
+0x3B, 0xF7, 0x78, 0x9B, 0x40, 0xDB, 0x10, 0xF0,
+0x24, 0x6B, 0x1C, 0xF3, 0x7C, 0x9B, 0x40, 0xDB,
+0x10, 0xF0, 0x24, 0x6B, 0xDC, 0xF3, 0x68, 0x9B,
+0x40, 0xDB, 0x10, 0xF0, 0x24, 0x6B, 0x9C, 0xF3,
+0x64, 0x9B, 0x40, 0xDB, 0x20, 0xE8, 0x00, 0x65,
 0xFF, 0x6A, 0x4C, 0xEC, 0x05, 0x5C, 0x4C, 0xED,
 0x00, 0x6A, 0x61, 0x60, 0x10, 0xF0, 0x24, 0x6A,
-0x88, 0x34, 0xBC, 0xF1, 0x18, 0x4A, 0x89, 0xE2,
+0x88, 0x34, 0x9B, 0xF5, 0x14, 0x4A, 0x89, 0xE2,
 0x40, 0x9A, 0x00, 0xEA, 0x05, 0x2D, 0x10, 0xF0,
-0x24, 0x6A, 0xFC, 0xF7, 0x58, 0x9A, 0x0A, 0x10,
-0x10, 0xF0, 0x24, 0x6A, 0xFC, 0xF7, 0x58, 0x9A,
+0x24, 0x6A, 0xDC, 0xF3, 0x54, 0x9A, 0x0A, 0x10,
+0x10, 0xF0, 0x24, 0x6A, 0xDC, 0xF3, 0x54, 0x9A,
 0x0C, 0x10, 0x07, 0x2D, 0x10, 0xF0, 0x24, 0x6A,
-0xFC, 0xF7, 0x5C, 0x9A, 0x60, 0xA2, 0x01, 0x6A,
-0x39, 0x10, 0x10, 0xF0, 0x24, 0x6A, 0xFC, 0xF7,
-0x5C, 0x9A, 0x60, 0xA2, 0xFF, 0x6A, 0x6C, 0xEA,
+0xDC, 0xF3, 0x58, 0x9A, 0x60, 0xA2, 0x01, 0x6A,
+0x39, 0x10, 0x10, 0xF0, 0x24, 0x6A, 0xDC, 0xF3,
+0x58, 0x9A, 0x60, 0xA2, 0xFF, 0x6A, 0x6C, 0xEA,
 0x46, 0x32, 0x2F, 0x10, 0x09, 0x2D, 0x10, 0xF0,
-0x24, 0x6A, 0xFC, 0xF7, 0x5C, 0x9A, 0x60, 0xA2,
+0x24, 0x6A, 0xDC, 0xF3, 0x58, 0x9A, 0x60, 0xA2,
 0xFF, 0x6A, 0x6C, 0xEA, 0x4A, 0x32, 0x25, 0x10,
-0x10, 0xF0, 0x24, 0x6A, 0xFC, 0xF7, 0x5C, 0x9A,
+0x10, 0xF0, 0x24, 0x6A, 0xDC, 0xF3, 0x58, 0x9A,
 0x60, 0xA2, 0xFF, 0x6A, 0x6C, 0xEA, 0x4E, 0x32,
 0x1C, 0x10, 0x09, 0x2D, 0x10, 0xF0, 0x24, 0x6A,
-0xFC, 0xF7, 0x5C, 0x9A, 0x60, 0xA2, 0xFF, 0x6A,
+0xDC, 0xF3, 0x58, 0x9A, 0x60, 0xA2, 0xFF, 0x6A,
 0x6C, 0xEA, 0x52, 0x32, 0x12, 0x10, 0x10, 0xF0,
-0x24, 0x6A, 0xFC, 0xF7, 0x5C, 0x9A, 0x60, 0xA2,
+0x24, 0x6A, 0xDC, 0xF3, 0x58, 0x9A, 0x60, 0xA2,
 0xFF, 0x6A, 0x6C, 0xEA, 0x56, 0x32, 0x09, 0x10,
-0x0B, 0x2D, 0x10, 0xF0, 0x24, 0x6A, 0xFC, 0xF7,
-0x5C, 0x9A, 0x60, 0xA2, 0xFF, 0x6A, 0x6C, 0xEA,
+0x0B, 0x2D, 0x10, 0xF0, 0x24, 0x6A, 0xDC, 0xF3,
+0x58, 0x9A, 0x60, 0xA2, 0xFF, 0x6A, 0x6C, 0xEA,
 0x5A, 0x32, 0x01, 0x6B, 0x6C, 0xEA, 0x20, 0xE8,
-0x10, 0xF0, 0x24, 0x6A, 0xFC, 0xF7, 0x5C, 0x9A,
+0x10, 0xF0, 0x24, 0x6A, 0xDC, 0xF3, 0x58, 0x9A,
 0x40, 0xA2, 0x00, 0xF6, 0x40, 0x32, 0x00, 0xF6,
 0x43, 0x32, 0xC0, 0xF7, 0x42, 0x32, 0x20, 0xE8,
 0xFC, 0x63, 0x07, 0x62, 0x06, 0xD1, 0x05, 0xD0,
 0xFF, 0x69, 0x8C, 0xE9, 0x00, 0x68, 0xFF, 0x6A,
 0x0C, 0xEA, 0x2E, 0xEA, 0x10, 0x2A, 0x91, 0x67,
-0x00, 0x18, 0x72, 0xEC, 0x91, 0x67, 0x00, 0x18,
-0x61, 0xEC, 0x91, 0x67, 0x00, 0x18, 0x79, 0xEC,
-0x91, 0x67, 0x00, 0x18, 0x33, 0xEC, 0x91, 0x67,
-0x00, 0x18, 0x40, 0xEC, 0x0F, 0x10, 0x90, 0x67,
-0x00, 0x18, 0x98, 0xEC, 0x90, 0x67, 0x00, 0x18,
-0x87, 0xEC, 0x90, 0x67, 0x00, 0x18, 0x9F, 0xEC,
-0x90, 0x67, 0x00, 0x18, 0x57, 0xEC, 0x90, 0x67,
-0x00, 0x18, 0x4D, 0xEC, 0x01, 0x48, 0x05, 0x70,
+0x00, 0x18, 0x14, 0xEC, 0x91, 0x67, 0x00, 0x18,
+0x03, 0xEC, 0x91, 0x67, 0x00, 0x18, 0x1B, 0xEC,
+0x91, 0x67, 0x00, 0x18, 0xD5, 0xEB, 0x91, 0x67,
+0x00, 0x18, 0xE2, 0xEB, 0x0F, 0x10, 0x90, 0x67,
+0x00, 0x18, 0x3A, 0xEC, 0x90, 0x67, 0x00, 0x18,
+0x29, 0xEC, 0x90, 0x67, 0x00, 0x18, 0x41, 0xEC,
+0x90, 0x67, 0x00, 0x18, 0xF9, 0xEB, 0x90, 0x67,
+0x00, 0x18, 0xEF, 0xEB, 0x01, 0x48, 0x05, 0x70,
 0xDA, 0x61, 0x07, 0x97, 0x06, 0x91, 0x05, 0x90,
 0x04, 0x63, 0x00, 0xEF, 0xFC, 0x63, 0x07, 0x62,
 0x06, 0xD1, 0x05, 0xD0, 0x10, 0xF0, 0x24, 0x6A,
-0xFF, 0xF7, 0x1F, 0x69, 0x8C, 0xE9, 0x1D, 0xF0,
-0x84, 0x9A, 0xFF, 0x6B, 0x8E, 0x6A, 0xA0, 0xA4,
+0xFF, 0xF7, 0x1F, 0x69, 0x8C, 0xE9, 0xFC, 0xF3,
+0x80, 0x9A, 0xFF, 0x6B, 0x8E, 0x6A, 0xA0, 0xA4,
 0x00, 0x68, 0x6C, 0xED, 0xAC, 0xEA, 0x40, 0xC4,
 0x71, 0x6A, 0xAD, 0xEA, 0x6C, 0xEA, 0x40, 0xC4,
-0x10, 0xF0, 0x24, 0x6A, 0x1D, 0xF0, 0x88, 0x9A,
+0x10, 0xF0, 0x24, 0x6A, 0xFC, 0xF3, 0x84, 0x9A,
 0x01, 0x6D, 0x40, 0xA4, 0x6C, 0xEA, 0xAD, 0xEA,
 0x6C, 0xEA, 0x40, 0xC4, 0x19, 0x10, 0x64, 0x70,
-0x0D, 0x61, 0x10, 0xF0, 0x24, 0x6A, 0x7C, 0xF3,
-0x6C, 0x9A, 0x10, 0xF0, 0x24, 0x6C, 0x5C, 0xF3,
-0x98, 0x9C, 0x40, 0x9B, 0x8D, 0xEA, 0x40, 0xDB,
+0x0D, 0x61, 0x10, 0xF0, 0x24, 0x6A, 0x3B, 0xF7,
+0x6C, 0x9A, 0x10, 0xF0, 0x24, 0x6C, 0x5B, 0xF7,
+0x88, 0x9C, 0x40, 0x9B, 0x8D, 0xEA, 0x40, 0xDB,
 0x00, 0x6A, 0x1C, 0x10, 0xFF, 0xF7, 0x1F, 0x6A,
 0x01, 0x48, 0x4C, 0xE8, 0x30, 0xF0, 0x20, 0x6A,
 0xCE, 0xF4, 0x5C, 0x9A, 0x0A, 0x6C, 0x40, 0xEA,
-0x10, 0xF0, 0x24, 0x6A, 0x1D, 0xF0, 0x48, 0x9A,
+0x10, 0xF0, 0x24, 0x6A, 0xFC, 0xF3, 0x44, 0x9A,
 0x60, 0xA2, 0x01, 0x6A, 0x6C, 0xEA, 0xDF, 0x2A,
 0xFF, 0xF7, 0x1F, 0x6A, 0x01, 0x49, 0x4C, 0xE9,
-0x10, 0xF0, 0x24, 0x6A, 0x1C, 0xF4, 0x48, 0x9A,
+0x10, 0xF0, 0x24, 0x6A, 0xFB, 0xF7, 0x44, 0x9A,
 0x20, 0xCA, 0x01, 0x6A, 0x07, 0x97, 0x06, 0x91,
 0x05, 0x90, 0x04, 0x63, 0x00, 0xEF, 0x00, 0x65,
 0xF9, 0x63, 0x0D, 0x62, 0x0C, 0xD1, 0x0B, 0xD0,
@@ -22881,16 +22813,16 @@ u8 array_mp_8821c_fw_nic[] = {
 0x40, 0x40, 0xFF, 0xF7, 0x1F, 0x6B, 0x6C, 0xEA,
 0x00, 0xF1, 0x00, 0x5A, 0x39, 0x60, 0x08, 0x92,
 0x04, 0x72, 0x11, 0x61, 0x10, 0xF0, 0x24, 0x6A,
-0xFC, 0xF2, 0x40, 0x9A, 0xFF, 0x6B, 0x49, 0xE0,
+0xBB, 0xF6, 0x5C, 0x9A, 0xFF, 0x6B, 0x49, 0xE0,
 0x40, 0xA2, 0x4C, 0xEB, 0x5F, 0x21, 0x06, 0x94,
 0x8F, 0xEA, 0x6C, 0xEA, 0x04, 0x93, 0x8C, 0xEB,
 0x6D, 0xEA, 0x04, 0xD2, 0x57, 0x10, 0x08, 0x92,
 0x05, 0x72, 0x12, 0x61, 0x10, 0xF0, 0x24, 0x6A,
-0xFC, 0xF2, 0x40, 0x9A, 0xFF, 0xF7, 0x1F, 0x6B,
+0xBB, 0xF6, 0x5C, 0x9A, 0xFF, 0xF7, 0x1F, 0x6B,
 0x49, 0xE0, 0x40, 0xAA, 0x4C, 0xEB, 0x7F, 0x21,
 0x06, 0x94, 0x8F, 0xEA, 0x6C, 0xEA, 0x04, 0x93,
 0x8C, 0xEB, 0x6D, 0xEA, 0x04, 0xD2, 0x77, 0x10,
-0x10, 0xF0, 0x24, 0x6A, 0xFC, 0xF2, 0x40, 0x9A,
+0x10, 0xF0, 0x24, 0x6A, 0xBB, 0xF6, 0x5C, 0x9A,
 0x49, 0xE0, 0x60, 0x9A, 0x80, 0xF0, 0x1E, 0x21,
 0x06, 0x94, 0x8F, 0xEA, 0x6C, 0xEA, 0x04, 0x93,
 0x8C, 0xEB, 0x6D, 0xEA, 0x04, 0xD2, 0x96, 0x10,
@@ -22900,43 +22832,43 @@ u8 array_mp_8821c_fw_nic[] = {
 0x08, 0x92, 0x04, 0x72, 0x31, 0x61, 0x1F, 0xF7,
 0x00, 0x6A, 0x0C, 0xEA, 0x02, 0xF0, 0x00, 0x72,
 0x01, 0x60, 0x05, 0x2A, 0x10, 0xF0, 0x24, 0x6A,
-0xFC, 0xF2, 0x40, 0x9A, 0x04, 0x10, 0x10, 0xF0,
-0x24, 0x6A, 0xFC, 0xF2, 0x44, 0x9A, 0x49, 0xE0,
+0xBB, 0xF6, 0x5C, 0x9A, 0x04, 0x10, 0x10, 0xF0,
+0x24, 0x6A, 0xDB, 0xF6, 0x40, 0x9A, 0x49, 0xE0,
 0x60, 0xA2, 0xFF, 0x6A, 0x6C, 0xEA, 0x07, 0x21,
 0x06, 0x94, 0x8F, 0xEB, 0x4C, 0xEB, 0x04, 0x92,
 0x8C, 0xEA, 0x4D, 0xEB, 0x04, 0xD3, 0x1F, 0xF7,
 0x00, 0x6A, 0x0C, 0xEA, 0x02, 0xF0, 0x00, 0x72,
 0x01, 0x60, 0x05, 0x2A, 0x10, 0xF0, 0x24, 0x6A,
-0xFC, 0xF2, 0x40, 0x9A, 0x04, 0x10, 0x10, 0xF0,
-0x24, 0x6A, 0xFC, 0xF2, 0x44, 0x9A, 0x7D, 0x67,
+0xBB, 0xF6, 0x5C, 0x9A, 0x04, 0x10, 0x10, 0xF0,
+0x24, 0x6A, 0xDB, 0xF6, 0x40, 0x9A, 0x7D, 0x67,
 0x41, 0xE0, 0x50, 0xA3, 0x40, 0xC0, 0x7E, 0x10,
 0x08, 0x92, 0x05, 0x72, 0x32, 0x61, 0x1F, 0xF7,
 0x00, 0x6A, 0x0C, 0xEA, 0x02, 0xF0, 0x00, 0x72,
 0x01, 0x60, 0x05, 0x2A, 0x10, 0xF0, 0x24, 0x6A,
-0xFC, 0xF2, 0x40, 0x9A, 0x04, 0x10, 0x10, 0xF0,
-0x24, 0x6A, 0xFC, 0xF2, 0x44, 0x9A, 0x49, 0xE0,
+0xBB, 0xF6, 0x5C, 0x9A, 0x04, 0x10, 0x10, 0xF0,
+0x24, 0x6A, 0xDB, 0xF6, 0x40, 0x9A, 0x49, 0xE0,
 0x60, 0xAA, 0xFF, 0xF7, 0x1F, 0x6A, 0x6C, 0xEA,
 0x07, 0x21, 0x06, 0x94, 0x8F, 0xEB, 0x4C, 0xEB,
 0x04, 0x92, 0x8C, 0xEA, 0x4D, 0xEB, 0x04, 0xD3,
 0x1F, 0xF7, 0x00, 0x6A, 0x0C, 0xEA, 0x02, 0xF0,
 0x00, 0x72, 0x01, 0x60, 0x05, 0x2A, 0x10, 0xF0,
-0x24, 0x6A, 0xFC, 0xF2, 0x40, 0x9A, 0x04, 0x10,
-0x10, 0xF0, 0x24, 0x6A, 0xFC, 0xF2, 0x44, 0x9A,
+0x24, 0x6A, 0xBB, 0xF6, 0x5C, 0x9A, 0x04, 0x10,
+0x10, 0xF0, 0x24, 0x6A, 0xDB, 0xF6, 0x40, 0x9A,
 0x7D, 0x67, 0x41, 0xE0, 0x48, 0xAB, 0x40, 0xC8,
 0x49, 0x10, 0x1F, 0xF7, 0x00, 0x6A, 0x0C, 0xEA,
 0x02, 0xF0, 0x00, 0x72, 0x01, 0x60, 0x05, 0x2A,
-0x10, 0xF0, 0x24, 0x6A, 0xFC, 0xF2, 0x40, 0x9A,
-0x04, 0x10, 0x10, 0xF0, 0x24, 0x6A, 0xFC, 0xF2,
-0x44, 0x9A, 0x49, 0xE0, 0x60, 0x9A, 0x07, 0x21,
+0x10, 0xF0, 0x24, 0x6A, 0xBB, 0xF6, 0x5C, 0x9A,
+0x04, 0x10, 0x10, 0xF0, 0x24, 0x6A, 0xDB, 0xF6,
+0x40, 0x9A, 0x49, 0xE0, 0x60, 0x9A, 0x07, 0x21,
 0x06, 0x94, 0x8F, 0xEA, 0x6C, 0xEA, 0x04, 0x93,
 0x8C, 0xEB, 0x6D, 0xEA, 0x04, 0xD2, 0x1F, 0xF7,
 0x00, 0x6A, 0x0C, 0xEA, 0x02, 0xF0, 0x00, 0x72,
 0x01, 0x60, 0x05, 0x2A, 0x10, 0xF0, 0x24, 0x6A,
-0xFC, 0xF2, 0x40, 0x9A, 0x04, 0x10, 0x10, 0xF0,
-0x24, 0x6A, 0xFC, 0xF2, 0x44, 0x9A, 0x41, 0xE0,
+0xBB, 0xF6, 0x5C, 0x9A, 0x04, 0x10, 0x10, 0xF0,
+0x24, 0x6A, 0xDB, 0xF6, 0x40, 0x9A, 0x41, 0xE0,
 0x04, 0x92, 0x40, 0xD8, 0x1B, 0x10, 0xFF, 0xF7,
 0x1C, 0x6A, 0x0C, 0xEA, 0x01, 0x6D, 0x82, 0x67,
-0xAB, 0xED, 0x08, 0xD2, 0x00, 0x18, 0x42, 0xE7,
+0xAB, 0xED, 0x08, 0xD2, 0x00, 0x18, 0xE4, 0xE6,
 0x05, 0xD2, 0x07, 0x21, 0x06, 0x94, 0x8F, 0xEB,
 0x4C, 0xEB, 0x04, 0x92, 0x8C, 0xEA, 0x4D, 0xEB,
 0x04, 0xD3, 0x30, 0xF0, 0x20, 0x6A, 0xCE, 0xF4,
@@ -22948,20 +22880,20 @@ u8 array_mp_8821c_fw_nic[] = {
 0x42, 0x9C, 0xFF, 0x73, 0x07, 0xD2, 0x00, 0x6A,
 0x59, 0x60, 0x7F, 0x6D, 0x6C, 0xED, 0x4C, 0x45,
 0xFF, 0x6B, 0x6C, 0xEA, 0x0E, 0x5A, 0x08, 0x60,
-0x10, 0xF0, 0x24, 0x6B, 0x48, 0x32, 0xDC, 0xF1,
-0x0C, 0x4B, 0x4D, 0xE3, 0x40, 0x9B, 0x00, 0xEA,
+0x10, 0xF0, 0x24, 0x6B, 0x48, 0x32, 0xBB, 0xF5,
+0x08, 0x4B, 0x4D, 0xE3, 0x40, 0x9B, 0x00, 0xEA,
 0x03, 0x6A, 0x48, 0x10, 0x61, 0xA4, 0x80, 0x6A,
 0x4B, 0xEA, 0x6C, 0xEA, 0xFF, 0x6E, 0x07, 0x03,
 0x90, 0x67, 0x4C, 0xEE, 0x06, 0x07, 0x04, 0xD3,
-0x00, 0x18, 0x62, 0xE2, 0x1F, 0x10, 0x81, 0xA4,
+0x00, 0x18, 0x0C, 0xE2, 0x1F, 0x10, 0x81, 0xA4,
 0x80, 0x6A, 0xFF, 0x69, 0x64, 0x67, 0x4C, 0xEB,
 0x0C, 0xE9, 0x02, 0x32, 0x01, 0x6E, 0x82, 0x67,
 0xB1, 0x67, 0xCB, 0xEE, 0x08, 0xD3, 0x09, 0xD2,
-0x00, 0x18, 0x8D, 0xE7, 0x08, 0x93, 0x07, 0x23,
+0x00, 0x18, 0x2F, 0xE7, 0x08, 0x93, 0x07, 0x23,
 0x07, 0x94, 0x8F, 0xEB, 0x4C, 0xEB, 0x06, 0x92,
 0x8C, 0xEA, 0x4D, 0xEB, 0x06, 0xD3, 0x09, 0x94,
 0x06, 0x97, 0x01, 0x6E, 0xB1, 0x67, 0xCB, 0xEE,
-0x00, 0x18, 0xA0, 0xE7, 0x30, 0xF0, 0x20, 0x6A,
+0x00, 0x18, 0x42, 0xE7, 0x30, 0xF0, 0x20, 0x6A,
 0xC0, 0xF1, 0x08, 0x4A, 0x29, 0xF4, 0x7C, 0x9A,
 0x06, 0x94, 0x61, 0xE0, 0x49, 0xF4, 0x60, 0x9A,
 0x29, 0xF4, 0x1C, 0xDA, 0x6D, 0xE4, 0x49, 0xF4,
@@ -22970,17 +22902,17 @@ u8 array_mp_8821c_fw_nic[] = {
 0x20, 0x6A, 0xCE, 0xF4, 0x58, 0x9A, 0x90, 0x67,
 0x40, 0xEA, 0x01, 0x6A, 0x0D, 0x97, 0x0C, 0x91,
 0x0B, 0x90, 0x07, 0x63, 0x00, 0xEF, 0x00, 0x65,
-0x10, 0xF0, 0x24, 0x6A, 0xBC, 0xF7, 0x88, 0x9A,
+0x10, 0xF0, 0x24, 0x6A, 0x9C, 0xF3, 0x84, 0x9A,
 0x30, 0xF0, 0x20, 0x6B, 0xC0, 0xF1, 0x08, 0x4B,
 0xA0, 0x9C, 0x4C, 0x9B, 0xAC, 0xEA, 0x4D, 0xDB,
 0x40, 0xDC, 0x20, 0xE8, 0xFD, 0x63, 0x05, 0xD1,
-0x04, 0xD0, 0x10, 0xF0, 0x24, 0x6A, 0x1C, 0xF7,
-0x38, 0x9A, 0x10, 0xF0, 0x24, 0x6A, 0xDC, 0xF7,
-0x00, 0x4A, 0x40, 0x9A, 0x60, 0x99, 0x10, 0xF0,
+0x04, 0xD0, 0x10, 0xF0, 0x24, 0x6A, 0xFC, 0xF2,
+0x34, 0x9A, 0x10, 0xF0, 0x24, 0x6A, 0x9C, 0xF3,
+0x1C, 0x4A, 0x40, 0x9A, 0x60, 0x99, 0x10, 0xF0,
 0x24, 0x6C, 0xA0, 0x9A, 0x10, 0xF0, 0x24, 0x6A,
-0xDC, 0xF7, 0x48, 0x9A, 0xDC, 0xF7, 0x10, 0x4C,
+0xBC, 0xF3, 0x44, 0x9A, 0xBC, 0xF3, 0x0C, 0x4C,
 0x80, 0x9C, 0x00, 0x9A, 0x1A, 0x65, 0x10, 0xF0,
-0x24, 0x6A, 0x80, 0x9C, 0xDC, 0xF7, 0x18, 0x4A,
+0x24, 0x6A, 0x80, 0x9C, 0xBC, 0xF3, 0x14, 0x4A,
 0x40, 0x9A, 0x01, 0xD4, 0x30, 0xF0, 0x20, 0x6C,
 0x40, 0x9A, 0xC0, 0xF1, 0xE8, 0x9C, 0x00, 0xD2,
 0x44, 0x67, 0xC0, 0xF1, 0x08, 0x4A, 0xC1, 0x9A,
@@ -22988,16 +22920,16 @@ u8 array_mp_8821c_fw_nic[] = {
 0xA2, 0x9A, 0xE5, 0xDA, 0x6C, 0xEC, 0x0C, 0xED,
 0x64, 0x9A, 0x00, 0x90, 0x88, 0xDA, 0xC6, 0xDA,
 0x0C, 0xEB, 0xA7, 0xDA, 0x69, 0xDA, 0x10, 0xF0,
-0x24, 0x6A, 0xDC, 0xF7, 0x00, 0x4A, 0x40, 0x9A,
+0x24, 0x6A, 0x9C, 0xF3, 0x1C, 0x4A, 0x40, 0x9A,
 0xE0, 0xD9, 0x18, 0x67, 0xC0, 0xDA, 0x10, 0xF0,
-0x24, 0x6A, 0xDC, 0xF7, 0x10, 0x4A, 0x40, 0x9A,
+0x24, 0x6A, 0xBC, 0xF3, 0x0C, 0x4A, 0x40, 0x9A,
 0xA0, 0xD8, 0x80, 0xDA, 0x10, 0xF0, 0x24, 0x6C,
-0xDC, 0xF7, 0x18, 0x4C, 0x80, 0x9C, 0x60, 0xDC,
+0xBC, 0xF3, 0x14, 0x4C, 0x80, 0x9C, 0x60, 0xDC,
 0x05, 0x91, 0x04, 0x90, 0x03, 0x63, 0x20, 0xE8,
 0xFF, 0x63, 0x01, 0xD1, 0x00, 0xD0, 0x10, 0xF0,
-0x24, 0x6A, 0x5C, 0xF3, 0x08, 0x9A, 0x10, 0xF0,
-0x24, 0x6A, 0x5C, 0xF7, 0xE0, 0x9A, 0x10, 0xF0,
-0x24, 0x6A, 0xFC, 0xF7, 0xC8, 0x9A, 0x30, 0xF0,
+0x24, 0x6A, 0x3B, 0xF7, 0x18, 0x9A, 0x10, 0xF0,
+0x24, 0x6A, 0x1C, 0xF3, 0xFC, 0x9A, 0x10, 0xF0,
+0x24, 0x6A, 0xDC, 0xF3, 0xC4, 0x9A, 0x30, 0xF0,
 0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A, 0x80, 0x98,
 0xAE, 0x9A, 0x60, 0x9F, 0x20, 0x9E, 0x8C, 0xED,
 0x8F, 0x9A, 0xB1, 0xDA, 0x6C, 0xEC, 0x70, 0x9A,
@@ -23013,7 +22945,7 @@ u8 array_mp_8821c_fw_nic[] = {
 0xA5, 0xA4, 0xCC, 0xED, 0x1D, 0x25, 0xE9, 0xF0,
 0xA6, 0xA4, 0x29, 0xF1, 0x60, 0x9B, 0xE9, 0xF0,
 0x85, 0xA4, 0x75, 0xE5, 0x10, 0xF0, 0x24, 0x6B,
-0xFC, 0xF6, 0x60, 0x9B, 0xBC, 0x35, 0x21, 0x4D,
+0xBC, 0xF2, 0x7C, 0x9B, 0xBC, 0x35, 0x21, 0x4D,
 0x75, 0xE5, 0xE0, 0xA5, 0x9E, 0x33, 0x9A, 0x34,
 0xCC, 0xEC, 0x78, 0x33, 0x9C, 0x34, 0x4C, 0xEF,
 0x8D, 0xEB, 0xED, 0xEB, 0x00, 0xF6, 0x60, 0x33,
@@ -23027,16 +22959,16 @@ u8 array_mp_8821c_fw_nic[] = {
 0x68, 0xF3, 0x9D, 0xA2, 0x04, 0x6B, 0x8D, 0xEB,
 0x68, 0xF3, 0x7D, 0xC2, 0x20, 0xE8, 0x00, 0x65,
 0x20, 0xE8, 0x00, 0x65, 0x20, 0xE8, 0x00, 0x65,
-0x10, 0xF0, 0x24, 0x6A, 0x1D, 0xF0, 0x4C, 0x9A,
-0x40, 0xA2, 0x10, 0xF0, 0x24, 0x6A, 0x1D, 0xF0,
-0x50, 0x9A, 0x40, 0xA2, 0x10, 0xF0, 0x24, 0x6A,
-0x1D, 0xF0, 0x54, 0x9A, 0x40, 0xA2, 0x10, 0xF0,
-0x24, 0x6A, 0x1C, 0xF7, 0x5C, 0x9A, 0x40, 0xA2,
-0x10, 0xF0, 0x24, 0x6A, 0x1D, 0xF0, 0x58, 0x9A,
-0x40, 0xA2, 0x10, 0xF0, 0x24, 0x6A, 0x1D, 0xF0,
-0x5C, 0x9A, 0x40, 0xA2, 0x10, 0xF0, 0x24, 0x6A,
-0x3D, 0xF0, 0x40, 0x9A, 0x40, 0xA2, 0x10, 0xF0,
-0x24, 0x6A, 0x1C, 0xF3, 0x48, 0x9A, 0x40, 0xA2,
+0x10, 0xF0, 0x24, 0x6A, 0xFC, 0xF3, 0x48, 0x9A,
+0x40, 0xA2, 0x10, 0xF0, 0x24, 0x6A, 0xFC, 0xF3,
+0x4C, 0x9A, 0x40, 0xA2, 0x10, 0xF0, 0x24, 0x6A,
+0xFC, 0xF3, 0x50, 0x9A, 0x40, 0xA2, 0x10, 0xF0,
+0x24, 0x6A, 0xFC, 0xF2, 0x58, 0x9A, 0x40, 0xA2,
+0x10, 0xF0, 0x24, 0x6A, 0xFC, 0xF3, 0x54, 0x9A,
+0x40, 0xA2, 0x10, 0xF0, 0x24, 0x6A, 0xFC, 0xF3,
+0x58, 0x9A, 0x40, 0xA2, 0x10, 0xF0, 0x24, 0x6A,
+0xFC, 0xF3, 0x5C, 0x9A, 0x40, 0xA2, 0x10, 0xF0,
+0x24, 0x6A, 0xFB, 0xF6, 0x44, 0x9A, 0x40, 0xA2,
 0x20, 0xE8, 0x00, 0x65, 0x30, 0xF0, 0x20, 0x6A,
 0xC0, 0xF1, 0x08, 0x4A, 0x08, 0xF3, 0x8A, 0xA2,
 0x01, 0x6B, 0x8C, 0xEB, 0x05, 0x23, 0x00, 0x6B,
@@ -23050,18 +22982,18 @@ u8 array_mp_8821c_fw_nic[] = {
 0x01, 0x6B, 0x8C, 0xEB, 0x05, 0x23, 0x00, 0x6B,
 0x08, 0xF3, 0x6B, 0xC2, 0x08, 0xF3, 0x6C, 0xC2,
 0x20, 0xE8, 0x00, 0x65, 0x20, 0xE8, 0x00, 0x65,
-0x10, 0xF0, 0x24, 0x6A, 0x7C, 0xF3, 0x6C, 0x9A,
-0x10, 0xF0, 0x24, 0x6C, 0x5C, 0xF3, 0x90, 0x9C,
+0x10, 0xF0, 0x24, 0x6A, 0x3B, 0xF7, 0x6C, 0x9A,
+0x10, 0xF0, 0x24, 0x6C, 0x5B, 0xF7, 0x80, 0x9C,
 0x40, 0x9B, 0x8D, 0xEA, 0x40, 0xDB, 0x20, 0xE8,
 0x20, 0xE8, 0x00, 0x65, 0xFD, 0x63, 0x05, 0x62,
 0x30, 0xF0, 0x20, 0x6B, 0x30, 0xF0, 0x20, 0x6A,
-0xEF, 0xF6, 0x85, 0xA3, 0x6E, 0xF5, 0x58, 0x9A,
+0xEF, 0xF6, 0x81, 0xA3, 0x6E, 0xF5, 0x58, 0x9A,
 0x40, 0xEA, 0x01, 0x6B, 0x6E, 0xEA, 0x1E, 0x2A,
 0x30, 0xF0, 0x20, 0x6B, 0xC0, 0xF1, 0x08, 0x4B,
 0x68, 0xF3, 0xB4, 0xA3, 0x7F, 0x6C, 0xAC, 0xEC,
-0x15, 0x24, 0x10, 0xF0, 0x24, 0x6C, 0xBC, 0xF3,
-0x9C, 0x9C, 0x00, 0x6D, 0x40, 0xC4, 0x10, 0xF0,
-0x24, 0x6A, 0x5C, 0xF3, 0x48, 0x9A, 0x02, 0x6C,
+0x15, 0x24, 0x10, 0xF0, 0x24, 0x6C, 0x9B, 0xF7,
+0x98, 0x9C, 0x00, 0x6D, 0x40, 0xC4, 0x10, 0xF0,
+0x24, 0x6A, 0x3B, 0xF7, 0x58, 0x9A, 0x02, 0x6C,
 0x80, 0xC2, 0x30, 0xF0, 0x20, 0x6A, 0xAE, 0xF2,
 0x50, 0x9A, 0xE8, 0xF3, 0xC5, 0xA3, 0xFF, 0x6C,
 0x55, 0x4C, 0x40, 0xEA, 0x05, 0x97, 0x03, 0x63,
@@ -23073,18 +23005,18 @@ u8 array_mp_8821c_fw_nic[] = {
 0x7F, 0x6B, 0xFF, 0x6A, 0xCC, 0xEB, 0x4C, 0xEB,
 0x4C, 0xEC, 0x0D, 0x2B, 0x08, 0xF3, 0xAA, 0xA5,
 0x01, 0x6B, 0x6C, 0xED, 0x4C, 0xED, 0x07, 0x2D,
-0x30, 0xF0, 0x21, 0x6D, 0x70, 0xF3, 0xBC, 0xA5,
+0x30, 0xF0, 0x21, 0x6D, 0x70, 0xF3, 0xB8, 0xA5,
 0xAC, 0xEB, 0x4C, 0xEB, 0x18, 0x23, 0x30, 0xF0,
 0x20, 0x6A, 0xC8, 0xF4, 0x72, 0xA2, 0x01, 0x6A,
 0x4C, 0xEB, 0x08, 0x2B, 0x30, 0xF0, 0x21, 0x6B,
-0x70, 0xF3, 0x7C, 0xA3, 0x6C, 0xEA, 0xFF, 0x6B,
-0x6C, 0xEA, 0x07, 0x22, 0x00, 0x18, 0x28, 0xF0,
-0x01, 0x72, 0x05, 0x61, 0x00, 0x18, 0xFD, 0xF1,
-0x02, 0x10, 0x00, 0x18, 0x61, 0xCE, 0x05, 0x97,
+0x70, 0xF3, 0x78, 0xA3, 0x6C, 0xEA, 0xFF, 0x6B,
+0x6C, 0xEA, 0x07, 0x22, 0x00, 0x18, 0xCA, 0xEF,
+0x01, 0x72, 0x05, 0x61, 0x00, 0x18, 0x9F, 0xF1,
+0x02, 0x10, 0x00, 0x18, 0x4F, 0xCE, 0x05, 0x97,
 0x03, 0x63, 0x00, 0xEF, 0xFC, 0x63, 0x07, 0x62,
 0x06, 0xD1, 0x05, 0xD0, 0x30, 0xF0, 0x20, 0x6B,
 0x30, 0xF0, 0x20, 0x6A, 0x24, 0x67, 0x6E, 0xF5,
-0x58, 0x9A, 0xEF, 0xF6, 0x85, 0xA3, 0xFF, 0x68,
+0x58, 0x9A, 0xEF, 0xF6, 0x81, 0xA3, 0xFF, 0x68,
 0x0C, 0xE9, 0x40, 0xEA, 0x01, 0x72, 0x19, 0x61,
 0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A,
 0x68, 0xF3, 0x94, 0xA2, 0x7F, 0x6B, 0x8C, 0xEB,
@@ -23092,33 +23024,33 @@ u8 array_mp_8821c_fw_nic[] = {
 0x02, 0x6B, 0x6B, 0xEB, 0x8C, 0xEB, 0x68, 0xF3,
 0x7D, 0xC2, 0x68, 0xF3, 0x5D, 0xA2, 0x07, 0x6B,
 0x6C, 0xEA, 0x03, 0x2A, 0x91, 0x67, 0x00, 0x18,
-0x7A, 0xCC, 0x07, 0x97, 0x06, 0x91, 0x05, 0x90,
+0x81, 0xCC, 0x07, 0x97, 0x06, 0x91, 0x05, 0x90,
 0x04, 0x63, 0x00, 0xEF, 0xFC, 0x63, 0x07, 0x62,
 0x06, 0xD1, 0x05, 0xD0, 0x30, 0xF0, 0x20, 0x6B,
 0x30, 0xF0, 0x20, 0x6A, 0x24, 0x67, 0x6E, 0xF5,
-0x58, 0x9A, 0xEF, 0xF6, 0x85, 0xA3, 0xFF, 0x68,
+0x58, 0x9A, 0xEF, 0xF6, 0x81, 0xA3, 0xFF, 0x68,
 0x0C, 0xE9, 0x40, 0xEA, 0x01, 0x6B, 0x6E, 0xEA,
 0x29, 0x2A, 0x30, 0xF0, 0x20, 0x6B, 0xC0, 0xF1,
 0x08, 0x4B, 0x68, 0xF3, 0xB4, 0xA3, 0x7F, 0x6C,
 0xAC, 0xEC, 0x0C, 0xEC, 0x1F, 0x24, 0x10, 0xF0,
-0x24, 0x6C, 0xBC, 0xF3, 0x9C, 0x9C, 0x40, 0xC4,
-0x10, 0xF0, 0x24, 0x6A, 0x5C, 0xF3, 0x48, 0x9A,
+0x24, 0x6C, 0x9B, 0xF7, 0x98, 0x9C, 0x40, 0xC4,
+0x10, 0xF0, 0x24, 0x6A, 0x3B, 0xF7, 0x58, 0x9A,
 0x02, 0x6C, 0x80, 0xC2, 0x68, 0xF3, 0x99, 0xA3,
 0x03, 0x6A, 0x4B, 0xEA, 0x4C, 0xEC, 0x68, 0xF3,
 0x99, 0xC3, 0x68, 0xF3, 0x9D, 0xA3, 0x8C, 0xEA,
 0x68, 0xF3, 0x5D, 0xC3, 0x68, 0xF3, 0x5D, 0xA3,
 0x07, 0x6B, 0x6C, 0xEA, 0x03, 0x2A, 0x91, 0x67,
-0x00, 0x18, 0x7A, 0xCC, 0x07, 0x97, 0x06, 0x91,
+0x00, 0x18, 0x81, 0xCC, 0x07, 0x97, 0x06, 0x91,
 0x05, 0x90, 0x04, 0x63, 0x00, 0xEF, 0x00, 0x65,
 0xFD, 0x63, 0x05, 0x62, 0x30, 0xF0, 0x20, 0x6A,
 0xC0, 0xF1, 0x08, 0x4A, 0x68, 0xF3, 0xBD, 0xA2,
 0x05, 0x6B, 0x6B, 0xEB, 0xAC, 0xEB, 0x68, 0xF3,
 0x7D, 0xC2, 0xFF, 0x6A, 0x4C, 0xEC, 0x00, 0x18,
-0x7A, 0xCC, 0x05, 0x97, 0x03, 0x63, 0x00, 0xEF,
+0x81, 0xCC, 0x05, 0x97, 0x03, 0x63, 0x00, 0xEF,
 0xFC, 0x63, 0x07, 0x62, 0x06, 0xD1, 0x05, 0xD0,
 0x30, 0xF0, 0x20, 0x6B, 0x30, 0xF0, 0x20, 0x6A,
 0x24, 0x67, 0x6E, 0xF5, 0x58, 0x9A, 0xEF, 0xF6,
-0x85, 0xA3, 0xFF, 0x68, 0x0C, 0xE9, 0x40, 0xEA,
+0x81, 0xA3, 0xFF, 0x68, 0x0C, 0xE9, 0x40, 0xEA,
 0x01, 0x72, 0x1B, 0x61, 0x30, 0xF0, 0x20, 0x6B,
 0xC0, 0xF1, 0x08, 0x4B, 0x68, 0xF3, 0x94, 0xA3,
 0x7F, 0x6A, 0x8C, 0xEA, 0x0C, 0xEA, 0x11, 0x22,
@@ -23126,83 +23058,83 @@ u8 array_mp_8821c_fw_nic[] = {
 0x6C, 0xEA, 0x0C, 0xEA, 0x20, 0x72, 0x06, 0x60,
 0x30, 0xF0, 0x20, 0x6A, 0x2E, 0xF4, 0x54, 0x9A,
 0x40, 0xEA, 0x03, 0x10, 0x91, 0x67, 0x00, 0x18,
-0x6A, 0xCE, 0x30, 0xF0, 0x20, 0x6A, 0xEF, 0xF4,
-0x08, 0x4A, 0x00, 0xF2, 0x63, 0xA2, 0x08, 0x2B,
-0xC0, 0xF0, 0x7D, 0xA2, 0x07, 0x6A, 0x6C, 0xEA,
-0x4E, 0xE9, 0x02, 0x29, 0x00, 0x18, 0xE2, 0xEE,
+0x58, 0xCE, 0x30, 0xF0, 0x20, 0x6A, 0xEF, 0xF4,
+0x08, 0x4A, 0xE0, 0xF1, 0x7F, 0xA2, 0x08, 0x2B,
+0xC0, 0xF0, 0x79, 0xA2, 0x07, 0x6A, 0x6C, 0xEA,
+0x4E, 0xE9, 0x02, 0x29, 0x00, 0x18, 0x84, 0xEE,
 0x07, 0x97, 0x06, 0x91, 0x05, 0x90, 0x04, 0x63,
 0x00, 0xEF, 0x00, 0x65, 0xFD, 0x63, 0x05, 0x62,
 0x04, 0xD0, 0x30, 0xF0, 0x20, 0x6B, 0xEF, 0xF4,
-0x08, 0x4B, 0x00, 0xF2, 0xB3, 0xA3, 0x04, 0x67,
+0x08, 0x4B, 0x00, 0xF2, 0xAF, 0xA3, 0x04, 0x67,
 0x01, 0x6C, 0xFF, 0x6A, 0xAC, 0xEC, 0x4C, 0xEC,
 0x4C, 0xE8, 0x13, 0x24, 0xA6, 0x32, 0x07, 0x6C,
 0x8C, 0xEA, 0x0E, 0xEA, 0x0E, 0x2A, 0x10, 0xF0,
-0x24, 0x6A, 0x9C, 0xF7, 0x44, 0x9A, 0x40, 0x9A,
-0x20, 0xF2, 0x40, 0xDB, 0x10, 0xF0, 0x24, 0x6A,
-0x9C, 0xF7, 0x40, 0x9A, 0x40, 0x9A, 0x00, 0xF2,
-0x5C, 0xDB, 0x90, 0x67, 0x00, 0x18, 0x42, 0xCA,
+0x24, 0x6A, 0x7C, 0xF3, 0x40, 0x9A, 0x40, 0x9A,
+0x00, 0xF2, 0x5C, 0xDB, 0x10, 0xF0, 0x24, 0x6A,
+0x5C, 0xF3, 0x5C, 0x9A, 0x40, 0x9A, 0x00, 0xF2,
+0x58, 0xDB, 0x90, 0x67, 0x00, 0x18, 0x41, 0xCA,
 0x80, 0xF0, 0x0E, 0x22, 0x30, 0xF0, 0x20, 0x6A,
 0xC8, 0xF4, 0x72, 0xA2, 0x01, 0x6A, 0x4C, 0xEB,
 0x08, 0x2B, 0x30, 0xF0, 0x21, 0x6B, 0x70, 0xF3,
-0x7C, 0xA3, 0x6C, 0xEA, 0xFF, 0x6B, 0x6C, 0xEA,
+0x78, 0xA3, 0x6C, 0xEA, 0xFF, 0x6B, 0x6C, 0xEA,
 0x0C, 0x22, 0x30, 0xF0, 0x20, 0x6A, 0xC8, 0xF4,
 0x56, 0xA2, 0x02, 0x72, 0x36, 0x60, 0x30, 0xF0,
-0x21, 0x6A, 0x90, 0xF3, 0x57, 0xA2, 0x02, 0x72,
+0x21, 0x6A, 0x90, 0xF3, 0x53, 0xA2, 0x02, 0x72,
 0x30, 0x60, 0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1,
 0x08, 0x4A, 0x68, 0xF3, 0xB4, 0xA2, 0x7F, 0x6B,
 0xFF, 0x6C, 0xAC, 0xEB, 0x0D, 0x2B, 0x08, 0xF3,
 0x6A, 0xA2, 0x01, 0x6A, 0x4C, 0xEB, 0x8C, 0xEB,
 0x07, 0x2B, 0x30, 0xF0, 0x21, 0x6B, 0x70, 0xF3,
-0x7C, 0xA3, 0x6C, 0xEA, 0x8C, 0xEA, 0x09, 0x22,
+0x78, 0xA3, 0x6C, 0xEA, 0x8C, 0xEA, 0x09, 0x22,
 0x30, 0xF0, 0x20, 0x6A, 0x48, 0xF5, 0x44, 0xA2,
 0x02, 0x72, 0x13, 0x60, 0x90, 0x67, 0x00, 0x18,
-0x3A, 0xCF, 0x30, 0xF0, 0x20, 0x6A, 0xEF, 0xF4,
-0x08, 0x4A, 0x00, 0xF2, 0x63, 0xA2, 0x09, 0x2B,
-0xC0, 0xF0, 0x7D, 0xA2, 0x07, 0x6A, 0x6C, 0xEA,
+0x28, 0xCF, 0x30, 0xF0, 0x20, 0x6A, 0xEF, 0xF4,
+0x08, 0x4A, 0xE0, 0xF1, 0x7F, 0xA2, 0x09, 0x2B,
+0xC0, 0xF0, 0x79, 0xA2, 0x07, 0x6A, 0x6C, 0xEA,
 0x0E, 0xEA, 0x03, 0x2A, 0x90, 0x67, 0x80, 0x18,
 0x6B, 0x0E, 0x30, 0xF0, 0x20, 0x6A, 0xEF, 0xF4,
-0x08, 0x4A, 0x00, 0xF2, 0xA5, 0xA2, 0x01, 0x6C,
+0x08, 0x4A, 0x00, 0xF2, 0xA1, 0xA2, 0x01, 0x6C,
 0xFF, 0x6B, 0xAC, 0xEC, 0x39, 0x24, 0xB6, 0x34,
-0x8E, 0xE8, 0x36, 0x28, 0x00, 0xF2, 0xA8, 0xA2,
-0x00, 0xF2, 0xC7, 0xA2, 0x7F, 0x6C, 0x8C, 0xED,
-0x8C, 0xEE, 0x00, 0xF2, 0x88, 0xA2, 0x6C, 0xED,
+0x8E, 0xE8, 0x36, 0x28, 0x00, 0xF2, 0xA4, 0xA2,
+0x00, 0xF2, 0xC3, 0xA2, 0x7F, 0x6C, 0x8C, 0xED,
+0x8C, 0xEE, 0x00, 0xF2, 0x84, 0xA2, 0x6C, 0xED,
 0x6C, 0xEE, 0x9E, 0x34, 0x6C, 0xEC, 0x05, 0x2C,
 0xB4, 0x35, 0xD0, 0x4D, 0xFF, 0xF7, 0x1F, 0x6A,
 0x4C, 0xED, 0x30, 0xF0, 0x20, 0x6A, 0xEF, 0xF4,
-0x08, 0x4A, 0x00, 0xF2, 0xE6, 0xA2, 0x7F, 0x6B,
-0xEC, 0xEB, 0x40, 0xF2, 0x6C, 0xC2, 0x00, 0xF2,
-0x65, 0xA2, 0x01, 0x6F, 0x66, 0x30, 0xEC, 0xE8,
-0x40, 0xF2, 0x0D, 0xC2, 0x00, 0xF2, 0x07, 0xA2,
-0x1E, 0x30, 0x40, 0xF2, 0x10, 0xC2, 0x6A, 0x30,
+0x08, 0x4A, 0x00, 0xF2, 0xE2, 0xA2, 0x7F, 0x6B,
+0xEC, 0xEB, 0x40, 0xF2, 0x68, 0xC2, 0x00, 0xF2,
+0x61, 0xA2, 0x01, 0x6F, 0x66, 0x30, 0xEC, 0xE8,
+0x40, 0xF2, 0x09, 0xC2, 0x00, 0xF2, 0x03, 0xA2,
+0x1E, 0x30, 0x40, 0xF2, 0x0C, 0xC2, 0x6A, 0x30,
 0x6E, 0x33, 0xEC, 0xEB, 0xEC, 0xE8, 0x40, 0xF2,
-0x6F, 0xC2, 0x00, 0x6B, 0x40, 0xF2, 0x0E, 0xC2,
-0x40, 0xF2, 0x71, 0xC2, 0x00, 0x18, 0xCB, 0xDF,
+0x6B, 0xC2, 0x00, 0x6B, 0x40, 0xF2, 0x0A, 0xC2,
+0x40, 0xF2, 0x6D, 0xC2, 0x00, 0x18, 0x75, 0xDF,
 0x05, 0x97, 0x04, 0x90, 0x03, 0x63, 0x00, 0xEF,
 0xF9, 0x63, 0x0D, 0x62, 0x0C, 0xD1, 0x0B, 0xD0,
-0x10, 0xF0, 0x24, 0x6A, 0x3D, 0xF0, 0x44, 0x9A,
+0x10, 0xF0, 0x24, 0x6A, 0x1C, 0xF4, 0x40, 0x9A,
 0xFF, 0x69, 0x8C, 0xE9, 0x60, 0xA2, 0x03, 0x6A,
 0x6C, 0xEA, 0x03, 0x72, 0x08, 0x61, 0x10, 0xF0,
-0x24, 0x6A, 0x3D, 0xF0, 0x68, 0x9A, 0x7F, 0x6A,
+0x24, 0x6A, 0x1C, 0xF4, 0x64, 0x9A, 0x7F, 0x6A,
 0x80, 0xA3, 0x8C, 0xEA, 0x40, 0xC3, 0x30, 0xF0,
 0x20, 0x6A, 0xEF, 0xF4, 0x08, 0x4A, 0x00, 0xF2,
-0x93, 0xA2, 0x10, 0x6B, 0x8C, 0xEB, 0x27, 0x23,
+0x8F, 0xA2, 0x10, 0x6B, 0x8C, 0xEB, 0x27, 0x23,
 0x96, 0x33, 0x2E, 0xEB, 0x24, 0x2B, 0x10, 0xF0,
-0x24, 0x6B, 0x9C, 0xF7, 0x88, 0x9B, 0x8F, 0x6B,
+0x24, 0x6B, 0x7C, 0xF3, 0x84, 0x9B, 0x8F, 0x6B,
 0xA0, 0xA4, 0xAC, 0xEB, 0x60, 0xC4, 0x10, 0xF0,
-0x24, 0x6B, 0x9C, 0xF7, 0x64, 0x9B, 0x60, 0x9B,
-0x20, 0xF2, 0x68, 0xDA, 0x10, 0xF0, 0x24, 0x6B,
-0x9C, 0xF7, 0x60, 0x9B, 0x60, 0x9B, 0x20, 0xF2,
-0x64, 0xDA, 0x10, 0xF0, 0x24, 0x6B, 0x1C, 0xF7,
-0x7C, 0x9B, 0x60, 0x9B, 0x20, 0xF2, 0x70, 0xDA,
-0x10, 0xF0, 0x24, 0x6B, 0x1C, 0xF3, 0x68, 0x9B,
-0x60, 0x9B, 0x20, 0xF2, 0x6C, 0xDA, 0x30, 0xF0,
+0x24, 0x6B, 0x7C, 0xF3, 0x60, 0x9B, 0x60, 0x9B,
+0x20, 0xF2, 0x64, 0xDA, 0x10, 0xF0, 0x24, 0x6B,
+0x5C, 0xF3, 0x7C, 0x9B, 0x60, 0x9B, 0x20, 0xF2,
+0x60, 0xDA, 0x10, 0xF0, 0x24, 0x6B, 0xFC, 0xF2,
+0x78, 0x9B, 0x60, 0x9B, 0x20, 0xF2, 0x6C, 0xDA,
+0x10, 0xF0, 0x24, 0x6B, 0xFB, 0xF6, 0x64, 0x9B,
+0x60, 0x9B, 0x20, 0xF2, 0x68, 0xDA, 0x30, 0xF0,
 0x20, 0x68, 0xEF, 0xF4, 0x08, 0x48, 0x00, 0xF2,
-0x6C, 0xA0, 0x01, 0x6A, 0x6C, 0xEA, 0x66, 0x22,
+0x68, 0xA0, 0x01, 0x6A, 0x6C, 0xEA, 0x66, 0x22,
 0x76, 0x32, 0x2E, 0xEA, 0x63, 0x2A, 0x10, 0xF0,
-0x24, 0x6A, 0x1C, 0xF3, 0x48, 0x9A, 0x7D, 0x67,
+0x24, 0x6A, 0xFB, 0xF6, 0x44, 0x9A, 0x7D, 0x67,
 0x00, 0xF0, 0x1A, 0x04, 0x40, 0x9A, 0x05, 0x05,
 0x04, 0x6E, 0x05, 0xD2, 0x10, 0xF0, 0x24, 0x6A,
-0x1C, 0xF7, 0x5C, 0x9A, 0x40, 0x9A, 0x04, 0xD2,
+0xFC, 0xF2, 0x58, 0x9A, 0x40, 0x9A, 0x04, 0xD2,
 0x2D, 0x6A, 0x58, 0xC3, 0x09, 0x6A, 0x53, 0xCB,
 0x30, 0xF0, 0x20, 0x6B, 0x4E, 0xF2, 0x50, 0x9B,
 0x40, 0xEA, 0x30, 0xF0, 0x20, 0x6B, 0x4E, 0xF2,
@@ -23210,22 +23142,22 @@ u8 array_mp_8821c_fw_nic[] = {
 0x1E, 0x04, 0x40, 0xEA, 0x5D, 0x67, 0x20, 0xF0,
 0x22, 0xC2, 0x30, 0xF0, 0x20, 0x6A, 0xAE, 0xF2,
 0x58, 0x9A, 0x06, 0x04, 0x40, 0xEA, 0x00, 0xF2,
-0x8F, 0xA0, 0x00, 0xF2, 0xAF, 0xA0, 0x00, 0xF2,
-0xCE, 0xA0, 0xFF, 0x6B, 0x7F, 0x6A, 0x9E, 0x34,
+0x8B, 0xA0, 0x00, 0xF2, 0xAB, 0xA0, 0x00, 0xF2,
+0xCA, 0xA0, 0xFF, 0x6B, 0x7F, 0x6A, 0x9E, 0x34,
 0x4C, 0xED, 0x4C, 0xEE, 0x6C, 0xEC, 0x6C, 0xED,
 0x6C, 0xEE, 0x05, 0x2C, 0xB4, 0x35, 0xD0, 0x4D,
 0xFF, 0xF7, 0x1F, 0x6A, 0x4C, 0xED, 0x30, 0xF0,
 0x20, 0x6A, 0xEF, 0xF4, 0x08, 0x4A, 0x00, 0xF2,
-0xED, 0xA2, 0x7F, 0x6B, 0xEC, 0xEB, 0x40, 0xF2,
-0x6C, 0xC2, 0x00, 0xF2, 0x6C, 0xA2, 0x01, 0x6F,
-0x66, 0x30, 0xEC, 0xE8, 0x40, 0xF2, 0x0D, 0xC2,
-0x00, 0xF2, 0x0E, 0xA2, 0x1E, 0x30, 0x40, 0xF2,
-0x10, 0xC2, 0x6A, 0x30, 0x6E, 0x33, 0xEC, 0xEB,
-0xEC, 0xE8, 0x40, 0xF2, 0x6F, 0xC2, 0x00, 0x6B,
-0x40, 0xF2, 0x0E, 0xC2, 0x40, 0xF2, 0x71, 0xC2,
-0x00, 0x18, 0xCB, 0xDF, 0x0D, 0x97, 0x0C, 0x91,
+0xE9, 0xA2, 0x7F, 0x6B, 0xEC, 0xEB, 0x40, 0xF2,
+0x68, 0xC2, 0x00, 0xF2, 0x68, 0xA2, 0x01, 0x6F,
+0x66, 0x30, 0xEC, 0xE8, 0x40, 0xF2, 0x09, 0xC2,
+0x00, 0xF2, 0x0A, 0xA2, 0x1E, 0x30, 0x40, 0xF2,
+0x0C, 0xC2, 0x6A, 0x30, 0x6E, 0x33, 0xEC, 0xEB,
+0xEC, 0xE8, 0x40, 0xF2, 0x6B, 0xC2, 0x00, 0x6B,
+0x40, 0xF2, 0x0A, 0xC2, 0x40, 0xF2, 0x6D, 0xC2,
+0x00, 0x18, 0x75, 0xDF, 0x0D, 0x97, 0x0C, 0x91,
 0x0B, 0x90, 0x07, 0x63, 0x00, 0xEF, 0x00, 0x65,
-0xFD, 0x63, 0x05, 0x62, 0x00, 0x18, 0xDF, 0xD9,
+0xFD, 0x63, 0x05, 0x62, 0x00, 0x18, 0x8E, 0xD9,
 0x05, 0x97, 0x03, 0x63, 0x00, 0xEF, 0x00, 0x65,
 0xFB, 0x63, 0x09, 0x62, 0x08, 0xD1, 0x07, 0xD0,
 0x30, 0xF0, 0x20, 0x68, 0xC0, 0xF1, 0x08, 0x48,
@@ -23233,11 +23165,11 @@ u8 array_mp_8821c_fw_nic[] = {
 0x6C, 0xEA, 0x2C, 0xEC, 0x2C, 0xEA, 0x04, 0xD4,
 0x19, 0x22, 0x02, 0x6A, 0x4B, 0xEA, 0x6C, 0xEA,
 0x00, 0x6D, 0x68, 0xF3, 0x5A, 0xC0, 0x00, 0x18,
-0xEC, 0xE1, 0x68, 0xF3, 0x9A, 0xA0, 0x01, 0x6B,
+0x96, 0xE1, 0x68, 0xF3, 0x9A, 0xA0, 0x01, 0x6B,
 0x6C, 0xEA, 0xFA, 0x4B, 0x48, 0x32, 0x8C, 0xEB,
 0x4D, 0xEB, 0x04, 0x6A, 0x6C, 0xEA, 0x2C, 0xEA,
 0x68, 0xF3, 0x7A, 0xC0, 0x03, 0x22, 0x04, 0x94,
-0x00, 0x18, 0x7A, 0xCC, 0x09, 0x97, 0x08, 0x91,
+0x00, 0x18, 0x81, 0xCC, 0x09, 0x97, 0x08, 0x91,
 0x07, 0x90, 0x05, 0x63, 0x00, 0xEF, 0x00, 0x65,
 0xFB, 0x63, 0x09, 0x62, 0x08, 0xD1, 0x07, 0xD0,
 0x30, 0xF0, 0x20, 0x68, 0xC0, 0xF1, 0x08, 0x48,
@@ -23245,26 +23177,26 @@ u8 array_mp_8821c_fw_nic[] = {
 0x6C, 0xEA, 0x2C, 0xEC, 0x2C, 0xEA, 0x04, 0xD4,
 0x20, 0x22, 0x03, 0x6A, 0x4B, 0xEA, 0x6C, 0xEA,
 0x01, 0x6D, 0x68, 0xF3, 0x5A, 0xC0, 0x00, 0x18,
-0xEC, 0xE1, 0x68, 0xF3, 0x9A, 0xA0, 0x01, 0x6B,
+0x96, 0xE1, 0x68, 0xF3, 0x9A, 0xA0, 0x01, 0x6B,
 0x4C, 0xEB, 0x09, 0x6A, 0x4B, 0xEA, 0x8C, 0xEA,
 0x68, 0xF3, 0x94, 0xA0, 0x6C, 0x33, 0x6D, 0xEA,
 0x7F, 0x6B, 0x8C, 0xEB, 0x2C, 0xEB, 0x68, 0xF3,
 0x5A, 0xC0, 0x07, 0x23, 0x08, 0x6B, 0x4C, 0xEB,
 0x2C, 0xEB, 0x03, 0x23, 0x04, 0x94, 0x00, 0x18,
-0x7A, 0xCC, 0x30, 0xF0, 0x20, 0x68, 0xC0, 0xF1,
+0x81, 0xCC, 0x30, 0xF0, 0x20, 0x68, 0xC0, 0xF1,
 0x08, 0x48, 0xA9, 0xF0, 0x68, 0xA0, 0x11, 0x6A,
 0xFF, 0x69, 0x6C, 0xEA, 0x11, 0x72, 0x27, 0x61,
 0xC9, 0xF0, 0x64, 0xA0, 0x02, 0x6A, 0x6C, 0xEA,
 0x2C, 0xEA, 0x21, 0x22, 0x04, 0x94, 0x03, 0x6A,
 0x4B, 0xEA, 0x6C, 0xEA, 0x01, 0x6D, 0xC9, 0xF0,
-0x44, 0xC0, 0x00, 0x18, 0xEC, 0xE1, 0xC9, 0xF0,
+0x44, 0xC0, 0x00, 0x18, 0x96, 0xE1, 0xC9, 0xF0,
 0x84, 0xA0, 0x01, 0x6B, 0x4C, 0xEB, 0x05, 0x6A,
 0x4B, 0xEA, 0x68, 0x33, 0x8C, 0xEA, 0x6D, 0xEA,
 0x04, 0x6B, 0x4C, 0xEB, 0x2C, 0xEB, 0xC9, 0xF0,
 0x44, 0xC0, 0x09, 0x23, 0x30, 0xF0, 0x20, 0x6A,
-0xEF, 0xF4, 0x08, 0x4A, 0xE0, 0xF0, 0x66, 0xA2,
-0x01, 0x4B, 0xE0, 0xF0, 0x66, 0xC2, 0x30, 0xF0,
-0x20, 0x6A, 0xEF, 0xF6, 0x4B, 0xA2, 0x03, 0x2A,
+0xEF, 0xF4, 0x08, 0x4A, 0xE0, 0xF0, 0x62, 0xA2,
+0x01, 0x4B, 0xE0, 0xF0, 0x62, 0xC2, 0x30, 0xF0,
+0x20, 0x6A, 0xEF, 0xF6, 0x47, 0xA2, 0x03, 0x2A,
 0x04, 0x94, 0x80, 0x18, 0x94, 0x0D, 0x09, 0x97,
 0x08, 0x91, 0x07, 0x90, 0x05, 0x63, 0x00, 0xEF,
 0xFD, 0x63, 0x05, 0x62, 0x04, 0xD0, 0x30, 0xF0,
@@ -23274,7 +23206,7 @@ u8 array_mp_8821c_fw_nic[] = {
 0x08, 0xF3, 0x4E, 0xA0, 0x02, 0x72, 0x1D, 0x60,
 0x02, 0x6A, 0x6C, 0xEA, 0xFF, 0x6B, 0x6C, 0xEA,
 0x03, 0x22, 0x00, 0x18, 0x6D, 0xC5, 0x15, 0x10,
-0x00, 0x18, 0x1C, 0xF2, 0x08, 0xF3, 0x4E, 0xA0,
+0x00, 0x18, 0xBE, 0xF1, 0x08, 0xF3, 0x4E, 0xA0,
 0x08, 0x72, 0x06, 0x61, 0x30, 0xF0, 0x20, 0x6A,
 0x2E, 0xF4, 0x48, 0x9A, 0x0C, 0x6C, 0x06, 0x10,
 0x08, 0x2A, 0x30, 0xF0, 0x20, 0x6A, 0x2E, 0xF4,
@@ -23287,7 +23219,7 @@ u8 array_mp_8821c_fw_nic[] = {
 0x04, 0x72, 0x21, 0x60, 0x08, 0xF3, 0x4E, 0xA0,
 0x02, 0x72, 0x1D, 0x60, 0x02, 0x6A, 0x6C, 0xEA,
 0xFF, 0x6B, 0x6C, 0xEA, 0x03, 0x22, 0x00, 0x18,
-0x6D, 0xC5, 0x15, 0x10, 0x00, 0x18, 0x1C, 0xF2,
+0x6D, 0xC5, 0x15, 0x10, 0x00, 0x18, 0xBE, 0xF1,
 0x08, 0xF3, 0x4E, 0xA0, 0x08, 0x72, 0x06, 0x61,
 0x30, 0xF0, 0x20, 0x6A, 0x2E, 0xF4, 0x48, 0x9A,
 0x0C, 0x6C, 0x06, 0x10, 0x08, 0x2A, 0x30, 0xF0,
@@ -23301,7 +23233,7 @@ u8 array_mp_8821c_fw_nic[] = {
 0x08, 0xF3, 0x4E, 0xA0, 0x02, 0x72, 0x1D, 0x60,
 0x02, 0x6A, 0x6C, 0xEA, 0xFF, 0x6B, 0x6C, 0xEA,
 0x03, 0x22, 0x00, 0x18, 0x6D, 0xC5, 0x15, 0x10,
-0x00, 0x18, 0x1C, 0xF2, 0x08, 0xF3, 0x4E, 0xA0,
+0x00, 0x18, 0xBE, 0xF1, 0x08, 0xF3, 0x4E, 0xA0,
 0x08, 0x72, 0x06, 0x61, 0x30, 0xF0, 0x20, 0x6A,
 0x2E, 0xF4, 0x48, 0x9A, 0x0C, 0x6C, 0x06, 0x10,
 0x08, 0x2A, 0x30, 0xF0, 0x20, 0x6A, 0x2E, 0xF4,
@@ -23356,142 +23288,138 @@ u8 array_mp_8821c_fw_nic[] = {
 0x48, 0x9A, 0x00, 0x6C, 0xA4, 0x67, 0xC5, 0x67,
 0x40, 0xEA, 0x05, 0x97, 0x04, 0x90, 0x03, 0x63,
 0x00, 0xEF, 0x00, 0x65, 0xFD, 0x63, 0x05, 0x62,
-0x04, 0xD0, 0x00, 0x18, 0xF5, 0xE7, 0x02, 0x67,
-0x01, 0x6A, 0x0C, 0xEA, 0x11, 0x22, 0x00, 0x6C,
-0x01, 0x6D, 0x00, 0x18, 0xE5, 0xC8, 0x10, 0xF0,
-0x24, 0x6A, 0x3D, 0xF0, 0x4C, 0x9A, 0xFF, 0x6C,
-0x01, 0x4C, 0x60, 0x9A, 0x8C, 0xEB, 0x08, 0x23,
-0x60, 0x9A, 0x8D, 0xEB, 0x60, 0xDA, 0x04, 0x10,
-0x00, 0x6C, 0xA4, 0x67, 0x00, 0x18, 0xE5, 0xC8,
-0x40, 0x6A, 0x0C, 0xEA, 0x0F, 0x22, 0x10, 0xF0,
-0x24, 0x6A, 0x3D, 0xF0, 0x50, 0x9A, 0x60, 0xA2,
-0x00, 0xF6, 0x60, 0x33, 0x00, 0xF6, 0x63, 0x33,
-0x00, 0x53, 0x00, 0x6B, 0x02, 0x61, 0x80, 0x6B,
-0x6B, 0xEB, 0x60, 0xC2, 0x30, 0xF0, 0x20, 0x6A,
-0xC0, 0xF1, 0x08, 0x4A, 0x88, 0xF3, 0x90, 0xA2,
-0x88, 0xF3, 0xB1, 0xA2, 0x88, 0xF3, 0xD7, 0xA2,
-0x02, 0x6F, 0x00, 0x18, 0x3A, 0xC9, 0x05, 0x97,
-0x04, 0x90, 0x03, 0x63, 0x00, 0xEF, 0x00, 0x65,
-0xFD, 0x63, 0x05, 0x62, 0x30, 0xF0, 0x20, 0x6A,
-0x29, 0xF5, 0x70, 0xA2, 0x02, 0x6A, 0x6C, 0xEA,
-0x03, 0x22, 0x01, 0x6C, 0x00, 0x18, 0x51, 0xEA,
-0x05, 0x97, 0x03, 0x63, 0x00, 0xEF, 0x00, 0x65,
-0xFD, 0x63, 0x05, 0x62, 0x00, 0x18, 0x4C, 0xC1,
-0x05, 0x97, 0x03, 0x63, 0x00, 0xEF, 0x00, 0x65,
-0xFC, 0x63, 0x07, 0x62, 0x06, 0xD1, 0x05, 0xD0,
-0x30, 0xF0, 0x20, 0x68, 0xC0, 0xF1, 0x08, 0x48,
-0x68, 0xF3, 0x74, 0xA0, 0x7F, 0x6A, 0xFF, 0x69,
-0x6C, 0xEA, 0x1E, 0x22, 0x68, 0xF3, 0x97, 0xA0,
-0x96, 0x34, 0x2C, 0xEC, 0x00, 0x18, 0x89, 0xE8,
-0x02, 0x6B, 0x4C, 0xEB, 0x2C, 0xEB, 0x07, 0x23,
+0x04, 0xD0, 0x00, 0x18, 0x97, 0xE7, 0x02, 0x67,
+0x01, 0x6A, 0x0C, 0xEA, 0x03, 0x22, 0x00, 0x6C,
+0x01, 0x6D, 0x02, 0x10, 0x00, 0x6C, 0xA4, 0x67,
+0x00, 0x18, 0xE4, 0xC8, 0x40, 0x6A, 0x0C, 0xEA,
+0x0F, 0x22, 0x10, 0xF0, 0x24, 0x6A, 0x1C, 0xF4,
+0x48, 0x9A, 0x60, 0xA2, 0x00, 0xF6, 0x60, 0x33,
+0x00, 0xF6, 0x63, 0x33, 0x00, 0x53, 0x00, 0x6B,
+0x02, 0x61, 0x80, 0x6B, 0x6B, 0xEB, 0x60, 0xC2,
+0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A,
+0x88, 0xF3, 0x90, 0xA2, 0x88, 0xF3, 0xB1, 0xA2,
+0x88, 0xF3, 0xD7, 0xA2, 0x02, 0x6F, 0x00, 0x18,
+0x39, 0xC9, 0x05, 0x97, 0x04, 0x90, 0x03, 0x63,
+0x00, 0xEF, 0x00, 0x65, 0xFD, 0x63, 0x05, 0x62,
+0x30, 0xF0, 0x20, 0x6A, 0x29, 0xF5, 0x70, 0xA2,
+0x02, 0x6A, 0x6C, 0xEA, 0x03, 0x22, 0x01, 0x6C,
+0x00, 0x18, 0xF3, 0xE9, 0x05, 0x97, 0x03, 0x63,
+0x00, 0xEF, 0x00, 0x65, 0xFD, 0x63, 0x05, 0x62,
+0x00, 0x18, 0x4C, 0xC1, 0x05, 0x97, 0x03, 0x63,
+0x00, 0xEF, 0x00, 0x65, 0xFC, 0x63, 0x07, 0x62,
+0x06, 0xD1, 0x05, 0xD0, 0x30, 0xF0, 0x20, 0x68,
+0xC0, 0xF1, 0x08, 0x48, 0x68, 0xF3, 0x74, 0xA0,
+0x7F, 0x6A, 0xFF, 0x69, 0x6C, 0xEA, 0x1E, 0x22,
 0x68, 0xF3, 0x97, 0xA0, 0x96, 0x34, 0x2C, 0xEC,
-0x00, 0x18, 0x27, 0xCE, 0x0D, 0x10, 0x68, 0xF3,
-0x97, 0xA0, 0x68, 0xF3, 0x79, 0xA0, 0x05, 0x6A,
-0x4B, 0xEA, 0x96, 0x34, 0x6C, 0xEA, 0x2C, 0xEC,
-0x68, 0xF3, 0x59, 0xC0, 0x00, 0x18, 0x7A, 0xCC,
-0x07, 0x97, 0x06, 0x91, 0x05, 0x90, 0x04, 0x63,
+0x00, 0x18, 0x2B, 0xE8, 0x02, 0x6B, 0x4C, 0xEB,
+0x2C, 0xEB, 0x07, 0x23, 0x68, 0xF3, 0x97, 0xA0,
+0x96, 0x34, 0x2C, 0xEC, 0x00, 0x18, 0x15, 0xCE,
+0x0D, 0x10, 0x68, 0xF3, 0x97, 0xA0, 0x68, 0xF3,
+0x79, 0xA0, 0x05, 0x6A, 0x4B, 0xEA, 0x96, 0x34,
+0x6C, 0xEA, 0x2C, 0xEC, 0x68, 0xF3, 0x59, 0xC0,
+0x00, 0x18, 0x81, 0xCC, 0x07, 0x97, 0x06, 0x91,
+0x05, 0x90, 0x04, 0x63, 0x00, 0xEF, 0x00, 0x65,
+0xFD, 0x63, 0x05, 0x62, 0x30, 0xF0, 0x20, 0x6A,
+0xC0, 0xF1, 0x08, 0x4A, 0x68, 0xF3, 0x94, 0xA2,
+0x7F, 0x6B, 0x8C, 0xEB, 0x07, 0x23, 0x68, 0xF3,
+0x97, 0xA2, 0xFF, 0x6A, 0x96, 0x34, 0x4C, 0xEC,
+0x00, 0x18, 0x73, 0xCE, 0x05, 0x97, 0x03, 0x63,
 0x00, 0xEF, 0x00, 0x65, 0xFD, 0x63, 0x05, 0x62,
-0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A,
-0x68, 0xF3, 0x94, 0xA2, 0x7F, 0x6B, 0x8C, 0xEB,
-0x07, 0x23, 0x68, 0xF3, 0x97, 0xA2, 0xFF, 0x6A,
-0x96, 0x34, 0x4C, 0xEC, 0x00, 0x18, 0x85, 0xCE,
+0xFF, 0x6A, 0x4C, 0xEC, 0x00, 0x18, 0xC5, 0xDF,
 0x05, 0x97, 0x03, 0x63, 0x00, 0xEF, 0x00, 0x65,
-0xFD, 0x63, 0x05, 0x62, 0xFF, 0x6A, 0x4C, 0xEC,
-0x00, 0x18, 0x1B, 0xE0, 0x05, 0x97, 0x03, 0x63,
+0xFD, 0x63, 0x05, 0x62, 0x30, 0xF0, 0x20, 0x6B,
+0xCF, 0xF6, 0xBD, 0xA3, 0x01, 0x6B, 0xFF, 0x6A,
+0xAC, 0xEB, 0x4C, 0xEB, 0x4C, 0xEC, 0x02, 0x23,
+0x80, 0x18, 0x0D, 0x08, 0x05, 0x97, 0x03, 0x63,
 0x00, 0xEF, 0x00, 0x65, 0xFD, 0x63, 0x05, 0x62,
-0x30, 0xF0, 0x20, 0x6B, 0xEF, 0xF6, 0xA1, 0xA3,
-0x01, 0x6B, 0xFF, 0x6A, 0xAC, 0xEB, 0x4C, 0xEB,
-0x4C, 0xEC, 0x02, 0x23, 0x80, 0x18, 0x0D, 0x08,
-0x05, 0x97, 0x03, 0x63, 0x00, 0xEF, 0x00, 0x65,
-0xFD, 0x63, 0x05, 0x62, 0x04, 0xD0, 0xFF, 0x68,
-0x8C, 0xE8, 0x00, 0x18, 0x45, 0xF2, 0x90, 0x67,
-0x00, 0x18, 0x4A, 0xCC, 0x00, 0x6C, 0x00, 0x18,
-0x34, 0xCA, 0x30, 0xF0, 0x20, 0x6A, 0xEF, 0xF4,
-0x08, 0x4A, 0x00, 0xF2, 0x63, 0xA2, 0x17, 0x2B,
-0xC0, 0xF0, 0x7D, 0xA2, 0x07, 0x6A, 0x6C, 0xEA,
-0x0E, 0xEA, 0x07, 0x2A, 0x00, 0x18, 0x49, 0xD6,
+0x04, 0xD0, 0xFF, 0x68, 0x8C, 0xE8, 0x00, 0x18,
+0xE7, 0xF1, 0x90, 0x67, 0x00, 0x18, 0x51, 0xCC,
+0x00, 0x6C, 0x00, 0x18, 0x33, 0xCA, 0x30, 0xF0,
+0x20, 0x6A, 0xEF, 0xF4, 0x08, 0x4A, 0xE0, 0xF1,
+0x7F, 0xA2, 0x15, 0x2B, 0xC0, 0xF0, 0x79, 0xA2,
+0x07, 0x6A, 0x6C, 0xEA, 0x0E, 0xEA, 0x05, 0x2A,
 0x30, 0xF0, 0x20, 0x6A, 0x8E, 0xF3, 0x5C, 0x9A,
-0x40, 0xEA, 0x30, 0xF0, 0x20, 0x6A, 0xEF, 0xF6,
-0x61, 0xA2, 0x01, 0x6A, 0x6C, 0xEA, 0x03, 0x22,
+0x40, 0xEA, 0x30, 0xF0, 0x20, 0x6A, 0xCF, 0xF6,
+0x7D, 0xA2, 0x01, 0x6A, 0x6C, 0xEA, 0x03, 0x22,
 0x90, 0x67, 0x80, 0x18, 0x0D, 0x08, 0x05, 0x97,
 0x04, 0x90, 0x03, 0x63, 0x00, 0xEF, 0x00, 0x65,
 0xFD, 0x63, 0x05, 0x62, 0x30, 0xF0, 0x20, 0x6A,
 0x69, 0xF2, 0x70, 0xA2, 0x01, 0x6A, 0x4C, 0xEB,
 0x0A, 0x23, 0x30, 0xF0, 0x20, 0x6B, 0xCF, 0xF5,
-0x73, 0xA3, 0x6C, 0xEA, 0xFF, 0x6B, 0x6C, 0xEA,
+0x6F, 0xA3, 0x6C, 0xEA, 0xFF, 0x6B, 0x6C, 0xEA,
 0x02, 0x2A, 0x80, 0x18, 0xD1, 0x0D, 0x05, 0x97,
 0x03, 0x63, 0x00, 0xEF, 0xFD, 0x63, 0x05, 0x62,
-0x00, 0x18, 0xF4, 0xD3, 0x05, 0x97, 0x03, 0x63,
+0x00, 0x18, 0xE2, 0xD3, 0x05, 0x97, 0x03, 0x63,
 0x00, 0xEF, 0x00, 0x65, 0xFD, 0x63, 0x05, 0x62,
-0x00, 0x18, 0xF1, 0xD3, 0x05, 0x97, 0x03, 0x63,
+0x00, 0x18, 0xDF, 0xD3, 0x05, 0x97, 0x03, 0x63,
 0x00, 0xEF, 0x00, 0x65, 0xFD, 0x63, 0x05, 0x62,
-0x00, 0x18, 0xCE, 0xDA, 0x05, 0x97, 0x03, 0x63,
+0x00, 0x18, 0x7D, 0xDA, 0x05, 0x97, 0x03, 0x63,
 0x00, 0xEF, 0x00, 0x65, 0xFD, 0x63, 0x05, 0x62,
-0x00, 0x18, 0x4C, 0xDA, 0x05, 0x97, 0x03, 0x63,
+0x00, 0x18, 0xFB, 0xD9, 0x05, 0x97, 0x03, 0x63,
 0x00, 0xEF, 0x00, 0x65, 0xFD, 0x63, 0x05, 0x62,
-0x00, 0x18, 0x1D, 0xEE, 0x05, 0x97, 0x03, 0x63,
+0x00, 0x18, 0xBF, 0xED, 0x05, 0x97, 0x03, 0x63,
 0x00, 0xEF, 0x00, 0x65, 0xFD, 0x63, 0x05, 0x62,
-0x30, 0xF0, 0x20, 0x6B, 0xEF, 0xF6, 0xA1, 0xA3,
+0x30, 0xF0, 0x20, 0x6B, 0xCF, 0xF6, 0xBD, 0xA3,
 0x01, 0x6B, 0xFF, 0x6A, 0xAC, 0xEB, 0x4C, 0xEB,
 0x4C, 0xEC, 0x02, 0x23, 0x80, 0x18, 0x57, 0x08,
 0x05, 0x97, 0x03, 0x63, 0x00, 0xEF, 0x00, 0x65,
 0xFD, 0x63, 0x05, 0x62, 0xFF, 0x6A, 0x4C, 0xEC,
-0x00, 0x18, 0xCB, 0xE6, 0x05, 0x97, 0x03, 0x63,
+0x00, 0x18, 0x6D, 0xE6, 0x05, 0x97, 0x03, 0x63,
 0x00, 0xEF, 0x00, 0x65, 0xFC, 0x63, 0x07, 0x62,
 0x06, 0xD1, 0x05, 0xD0, 0x30, 0xF0, 0x20, 0x6A,
 0xEF, 0xF4, 0x08, 0x4A, 0x24, 0x67, 0xC0, 0xF0,
-0x9D, 0xA2, 0xFF, 0x6D, 0x07, 0x6B, 0xAC, 0xE9,
+0x99, 0xA2, 0xFF, 0x6D, 0x07, 0x6B, 0xAC, 0xE9,
 0x8C, 0xEB, 0x2E, 0xEB, 0x12, 0x2B, 0xE0, 0xF0,
-0x8A, 0xA2, 0x03, 0x6B, 0x8C, 0xEB, 0xAC, 0xEB,
-0x07, 0x2B, 0xE0, 0xF0, 0xA9, 0xA2, 0x8A, 0x34,
-0x82, 0xED, 0x07, 0x61, 0xE0, 0xF0, 0x69, 0xC2,
+0x86, 0xA2, 0x03, 0x6B, 0x8C, 0xEB, 0xAC, 0xEB,
+0x07, 0x2B, 0xE0, 0xF0, 0xA5, 0xA2, 0x8A, 0x34,
+0x82, 0xED, 0x07, 0x61, 0xE0, 0xF0, 0x65, 0xC2,
 0x30, 0xF0, 0x20, 0x6A, 0xAE, 0xF3, 0x40, 0x9A,
 0x40, 0xEA, 0x30, 0xF0, 0x20, 0x68, 0xC0, 0xF1,
-0x08, 0x48, 0x00, 0x18, 0xE4, 0xF1, 0x68, 0xF3,
+0x08, 0x48, 0x00, 0x18, 0x86, 0xF1, 0x68, 0xF3,
 0x74, 0xA0, 0x7F, 0x6A, 0x6C, 0xEA, 0x32, 0x22,
 0x68, 0xF3, 0x5A, 0xA0, 0x21, 0x6B, 0x6B, 0xEB,
 0x4C, 0xEB, 0x40, 0x6A, 0x6C, 0xEA, 0x68, 0xF3,
 0x7A, 0xC0, 0xFF, 0x6B, 0x6C, 0xEA, 0x10, 0x22,
 0x88, 0xF3, 0x90, 0xA0, 0x88, 0xF3, 0xB1, 0xA0,
 0x88, 0xF3, 0xD7, 0xA0, 0x05, 0x6F, 0x00, 0x18,
-0x3A, 0xC9, 0x68, 0xF3, 0x7A, 0xA0, 0x41, 0x6A,
+0x39, 0xC9, 0x68, 0xF3, 0x7A, 0xA0, 0x41, 0x6A,
 0x4B, 0xEA, 0x6C, 0xEA, 0x68, 0xF3, 0x5A, 0xC0,
 0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A,
 0x68, 0xF3, 0x99, 0xA2, 0x40, 0x6B, 0x8C, 0xEB,
 0x0D, 0x23, 0x68, 0xF3, 0x7A, 0xA2, 0x10, 0x6A,
 0x6C, 0xEA, 0xFF, 0x6B, 0x6C, 0xEA, 0x06, 0x22,
-0x00, 0x18, 0x7A, 0xCA, 0x03, 0x2A, 0x91, 0x67,
-0x00, 0x18, 0x98, 0xEC, 0x30, 0xF0, 0x20, 0x6A,
+0x00, 0x18, 0x90, 0xCA, 0x03, 0x2A, 0x91, 0x67,
+0x00, 0x18, 0x3A, 0xEC, 0x30, 0xF0, 0x20, 0x6A,
 0xC0, 0xF1, 0x08, 0x4A, 0x69, 0xF3, 0x69, 0xA2,
 0x2E, 0xEB, 0x11, 0x2B, 0x69, 0xF3, 0x68, 0xA2,
 0x1F, 0x6C, 0x6A, 0x32, 0x8C, 0xEA, 0x47, 0xE9,
 0x01, 0x6C, 0x8C, 0xEA, 0x08, 0x22, 0x02, 0x6A,
 0x6C, 0xEA, 0xFF, 0x6B, 0x6C, 0xEA, 0x03, 0x22,
-0x00, 0x6C, 0x00, 0x18, 0x51, 0xEA, 0x30, 0xF0,
+0x00, 0x6C, 0x00, 0x18, 0xF3, 0xE9, 0x30, 0xF0,
 0x20, 0x68, 0x91, 0x67, 0xEF, 0xF4, 0x08, 0x48,
-0x00, 0x18, 0xEA, 0xCB, 0x00, 0xF2, 0x43, 0xA0,
+0x00, 0x18, 0xF1, 0xCB, 0xE0, 0xF1, 0x5F, 0xA0,
 0x0B, 0x2A, 0x91, 0x67, 0x80, 0x18, 0xA2, 0x0B,
-0xE0, 0xF1, 0x79, 0xA0, 0x01, 0x6A, 0x6C, 0xEA,
+0xE0, 0xF1, 0x75, 0xA0, 0x01, 0x6A, 0x6C, 0xEA,
 0x03, 0x22, 0x91, 0x67, 0x80, 0x18, 0x57, 0x08,
 0x07, 0x97, 0x06, 0x91, 0x05, 0x90, 0x04, 0x63,
 0x00, 0xEF, 0x00, 0x65, 0xFD, 0x63, 0x05, 0x62,
-0xFF, 0x6A, 0x4C, 0xEC, 0x00, 0x18, 0xD9, 0xE6,
+0xFF, 0x6A, 0x4C, 0xEC, 0x00, 0x18, 0x7B, 0xE6,
 0x05, 0x97, 0x03, 0x63, 0x00, 0xEF, 0x00, 0x65,
 0xFF, 0x63, 0x01, 0xD0, 0x10, 0xF0, 0x24, 0x6B,
-0xFC, 0xF6, 0x60, 0x9B, 0xFF, 0x6A, 0x4C, 0xEE,
+0xBC, 0xF2, 0x7C, 0x9B, 0xFF, 0x6A, 0x4C, 0xEE,
 0x6D, 0xE4, 0x08, 0x68, 0x80, 0xA3, 0xDB, 0xE0,
 0x02, 0x67, 0x4C, 0xED, 0x07, 0xEE, 0xD0, 0x67,
 0x4C, 0xEF, 0x04, 0xED, 0x4C, 0xEC, 0xCC, 0xEF,
 0x0F, 0xE8, 0x8C, 0xE8, 0xE4, 0xED, 0xED, 0xE8,
 0x4C, 0xE8, 0x00, 0xC3, 0x01, 0x90, 0x01, 0x63,
 0x20, 0xE8, 0x00, 0x65, 0x10, 0xF0, 0x24, 0x6A,
-0xFC, 0xF6, 0x40, 0x9A, 0xFF, 0xF7, 0x1F, 0x6B,
+0xBC, 0xF2, 0x5C, 0x9A, 0xFF, 0xF7, 0x1F, 0x6B,
 0x8C, 0xEB, 0x4D, 0xE3, 0x40, 0xA3, 0xFF, 0x6C,
 0x8C, 0xEE, 0x08, 0x6B, 0xDB, 0xE3, 0x8C, 0xED,
 0x8C, 0xEA, 0x64, 0x67, 0x47, 0xED, 0x67, 0xEE,
 0x6C, 0xEA, 0x8C, 0xEA, 0x20, 0xE8, 0x00, 0x65,
 0xFC, 0x63, 0x07, 0x62, 0x06, 0xD1, 0x05, 0xD0,
-0x10, 0xF0, 0x24, 0x6B, 0xFC, 0xF2, 0x64, 0x9B,
+0x10, 0xF0, 0x24, 0x6B, 0xDB, 0xF6, 0x60, 0x9B,
 0xFF, 0xF7, 0x1F, 0x6A, 0x8C, 0xEA, 0x69, 0xE2,
 0x00, 0x9A, 0x41, 0x45, 0x25, 0x67, 0x08, 0x22,
 0x30, 0xF0, 0x20, 0x6A, 0xAE, 0xF4, 0x50, 0x9A,
@@ -23500,39 +23428,39 @@ u8 array_mp_8821c_fw_nic[] = {
 0x04, 0x63, 0x00, 0xEF, 0xFB, 0x63, 0x09, 0x62,
 0x08, 0xD1, 0x07, 0xD0, 0xFF, 0xF7, 0x1F, 0x68,
 0x41, 0x45, 0x25, 0x67, 0x0C, 0xD6, 0x8C, 0xE8,
-0x07, 0x2A, 0x10, 0xF0, 0x24, 0x6A, 0xFC, 0xF2,
-0x44, 0x9A, 0x41, 0xE0, 0xC0, 0xD8, 0x1A, 0x10,
+0x07, 0x2A, 0x10, 0xF0, 0x24, 0x6A, 0xDB, 0xF6,
+0x40, 0x9A, 0x41, 0xE0, 0xC0, 0xD8, 0x1A, 0x10,
 0x01, 0x6D, 0x90, 0x67, 0xAB, 0xED, 0x00, 0x18,
-0x42, 0xE7, 0x04, 0xD2, 0x30, 0xF0, 0x20, 0x6A,
+0xE4, 0xE6, 0x04, 0xD2, 0x30, 0xF0, 0x20, 0x6A,
 0xAE, 0xF4, 0x50, 0x9A, 0x91, 0x67, 0x40, 0xEA,
 0x0C, 0x93, 0x64, 0xEA, 0x43, 0x67, 0x04, 0x93,
 0x2C, 0xEA, 0x2F, 0xE9, 0x6C, 0xE9, 0x10, 0xF0,
-0x24, 0x6B, 0xFC, 0xF2, 0x64, 0x9B, 0x2D, 0xEA,
+0x24, 0x6B, 0xDB, 0xF6, 0x60, 0x9B, 0x2D, 0xEA,
 0x61, 0xE0, 0x40, 0xD8, 0x09, 0x97, 0x08, 0x91,
 0x07, 0x90, 0x05, 0x63, 0x00, 0xEF, 0x00, 0x65,
 0x01, 0x74, 0x0D, 0x60, 0x06, 0x24, 0x02, 0x74,
 0x10, 0x60, 0x03, 0x74, 0x00, 0x6A, 0x1C, 0x61,
 0x14, 0x10, 0x10, 0xF0, 0x24, 0x6A, 0xA8, 0x35,
-0x3D, 0xF0, 0x54, 0x9A, 0x0B, 0x10, 0x10, 0xF0,
-0x24, 0x6A, 0xA8, 0x35, 0x3D, 0xF0, 0x58, 0x9A,
-0x05, 0x10, 0x10, 0xF0, 0x24, 0x6A, 0x3D, 0xF0,
-0x5C, 0x9A, 0xA8, 0x35, 0x55, 0xE5, 0x40, 0x9D,
-0x20, 0xE8, 0x10, 0xF0, 0x24, 0x6A, 0x5D, 0xF0,
-0x40, 0x9A, 0xA8, 0x35, 0x55, 0xE5, 0x40, 0x9D,
+0x1C, 0xF4, 0x4C, 0x9A, 0x0B, 0x10, 0x10, 0xF0,
+0x24, 0x6A, 0xA8, 0x35, 0x1C, 0xF4, 0x50, 0x9A,
+0x05, 0x10, 0x10, 0xF0, 0x24, 0x6A, 0x1C, 0xF4,
+0x54, 0x9A, 0xA8, 0x35, 0x55, 0xE5, 0x40, 0x9D,
+0x20, 0xE8, 0x10, 0xF0, 0x24, 0x6A, 0x1C, 0xF4,
+0x58, 0x9A, 0xA8, 0x35, 0x55, 0xE5, 0x40, 0x9D,
 0x20, 0xE8, 0x00, 0x65, 0xFD, 0x63, 0x05, 0x62,
 0x30, 0xF0, 0x20, 0x6A, 0x08, 0xF3, 0x00, 0x4A,
 0x88, 0x34, 0x91, 0xE2, 0x10, 0xF0, 0x24, 0x6A,
-0xDC, 0xF4, 0x74, 0x9A, 0x30, 0xF0, 0x20, 0x6A,
+0xBC, 0xF0, 0x70, 0x9A, 0x30, 0xF0, 0x20, 0x6A,
 0x00, 0xF5, 0xA0, 0x35, 0xCC, 0xEB, 0x10, 0xF0,
-0x24, 0x6E, 0x3C, 0xF6, 0xD4, 0x9E, 0xCE, 0xF4,
+0x24, 0x6E, 0x1C, 0xF2, 0xD0, 0x9E, 0xCE, 0xF4,
 0x50, 0x9A, 0x80, 0xAC, 0xAD, 0xEB, 0x01, 0x6D,
 0xAB, 0xED, 0x6C, 0xEE, 0x40, 0xEA, 0x05, 0x97,
 0x03, 0x63, 0x00, 0xEF, 0xFC, 0x63, 0x07, 0x62,
 0x06, 0xD1, 0x05, 0xD0, 0xFF, 0x6B, 0x8C, 0xEB,
 0xFF, 0xF7, 0x1F, 0x6A, 0x81, 0x46, 0x06, 0x67,
 0xAC, 0xEA, 0x06, 0x2C, 0x83, 0x67, 0xA2, 0x67,
-0x00, 0x18, 0x6A, 0xE7, 0x02, 0x67, 0x0D, 0x10,
-0x83, 0x67, 0xA2, 0x67, 0x00, 0x18, 0x6A, 0xE7,
+0x00, 0x18, 0x0C, 0xE7, 0x02, 0x67, 0x0D, 0x10,
+0x83, 0x67, 0xA2, 0x67, 0x00, 0x18, 0x0C, 0xE7,
 0x22, 0x67, 0x30, 0xF0, 0x20, 0x6A, 0xAE, 0xF4,
 0x50, 0x9A, 0x90, 0x67, 0x2C, 0xE8, 0x40, 0xEA,
 0x06, 0xEA, 0x50, 0x67, 0x07, 0x97, 0x06, 0x91,
@@ -23542,12 +23470,12 @@ u8 array_mp_8821c_fw_nic[] = {
 0x01, 0x4A, 0x0C, 0xD6, 0x0D, 0xD7, 0x8C, 0xE8,
 0xAC, 0xE9, 0x04, 0x2A, 0x90, 0x67, 0xB1, 0x67,
 0xC7, 0x67, 0x15, 0x10, 0xB1, 0x67, 0x90, 0x67,
-0x00, 0x18, 0x6A, 0xE7, 0x04, 0xD2, 0x30, 0xF0,
+0x00, 0x18, 0x0C, 0xE7, 0x04, 0xD2, 0x30, 0xF0,
 0x20, 0x6A, 0x0C, 0x94, 0xAE, 0xF4, 0x50, 0x9A,
 0x40, 0xEA, 0x0D, 0x96, 0x90, 0x67, 0xB1, 0x67,
 0xC4, 0xEA, 0x0C, 0x92, 0x4C, 0xEE, 0x4F, 0xEB,
 0x04, 0x92, 0x4C, 0xEB, 0x6D, 0xEE, 0x00, 0x18,
-0x7D, 0xE7, 0x30, 0xF0, 0x20, 0x6A, 0xCE, 0xF4,
+0x1F, 0xE7, 0x30, 0xF0, 0x20, 0x6A, 0xCE, 0xF4,
 0x5C, 0x9A, 0x0A, 0x6C, 0x40, 0xEA, 0x09, 0x97,
 0x08, 0x91, 0x07, 0x90, 0x05, 0x63, 0x00, 0xEF,
 0xFB, 0x63, 0x09, 0x62, 0x08, 0xD1, 0x07, 0xD0,
@@ -23557,75 +23485,75 @@ u8 array_mp_8821c_fw_nic[] = {
 0x00, 0x6A, 0x08, 0x10, 0x30, 0xF0, 0x20, 0x6A,
 0xCE, 0xF4, 0x5C, 0x9A, 0x0A, 0x6C, 0x40, 0xEA,
 0x40, 0xA8, 0x01, 0x4A, 0x40, 0xC8, 0x10, 0xF0,
-0x24, 0x6A, 0x04, 0x94, 0x05, 0x95, 0xDC, 0xF4,
-0xD4, 0x9A, 0x00, 0x18, 0x8D, 0xE7, 0x0C, 0x93,
+0x24, 0x6A, 0x04, 0x94, 0x05, 0x95, 0xBC, 0xF0,
+0xD0, 0x9A, 0x00, 0x18, 0x2F, 0xE7, 0x0C, 0x93,
 0x6C, 0xEA, 0x0D, 0x93, 0x6E, 0xEA, 0x03, 0x22,
 0x40, 0xA8, 0x23, 0xEA, 0xE7, 0x61, 0x40, 0xA8,
 0x09, 0x97, 0x07, 0x90, 0x23, 0xEA, 0x08, 0x91,
 0x58, 0x67, 0x05, 0x63, 0x00, 0xEF, 0x00, 0x65,
 0xFD, 0x63, 0x05, 0x62, 0x04, 0xD0, 0x10, 0xF0,
-0x24, 0x6B, 0xBC, 0xF2, 0x70, 0x9B, 0x10, 0xF0,
-0x24, 0x6A, 0x53, 0xF7, 0x11, 0x4A, 0x40, 0xDB,
-0x00, 0x68, 0x10, 0xF0, 0x24, 0x6A, 0x5D, 0xF0,
-0x44, 0x9A, 0x40, 0xA2, 0x12, 0x2A, 0x10, 0xF0,
-0x24, 0x6A, 0x5D, 0xF0, 0x48, 0x9A, 0x40, 0xA2,
-0x0C, 0x2A, 0x10, 0xF0, 0x24, 0x6A, 0x5D, 0xF0,
-0x4C, 0x9A, 0x40, 0xA2, 0x06, 0x2A, 0x10, 0xF0,
-0x24, 0x6A, 0x5D, 0xF0, 0x50, 0x9A, 0x40, 0xA2,
+0x24, 0x6B, 0x9B, 0xF6, 0x6C, 0x9B, 0x10, 0xF0,
+0x24, 0x6A, 0xD3, 0xF5, 0x19, 0x4A, 0x40, 0xDB,
+0x00, 0x68, 0x10, 0xF0, 0x24, 0x6A, 0x1C, 0xF4,
+0x5C, 0x9A, 0x40, 0xA2, 0x12, 0x2A, 0x10, 0xF0,
+0x24, 0x6A, 0x3C, 0xF4, 0x40, 0x9A, 0x40, 0xA2,
+0x0C, 0x2A, 0x10, 0xF0, 0x24, 0x6A, 0x3C, 0xF4,
+0x44, 0x9A, 0x40, 0xA2, 0x06, 0x2A, 0x10, 0xF0,
+0x24, 0x6A, 0x3C, 0xF4, 0x48, 0x9A, 0x40, 0xA2,
 0x18, 0x22, 0xE0, 0xF3, 0x09, 0x70, 0x0A, 0x61,
-0x10, 0xF0, 0x24, 0x6A, 0x7C, 0xF3, 0x6C, 0x9A,
+0x10, 0xF0, 0x24, 0x6A, 0x3B, 0xF7, 0x6C, 0x9A,
 0x20, 0x6C, 0x40, 0x9B, 0x8D, 0xEA, 0x40, 0xDB,
 0x00, 0x6A, 0x0C, 0x10, 0x30, 0xF0, 0x20, 0x6A,
 0xCE, 0xF4, 0x5C, 0x9A, 0x32, 0x6C, 0x01, 0x48,
 0x40, 0xEA, 0xFF, 0xF7, 0x1F, 0x6A, 0x4C, 0xE8,
 0xD0, 0x17, 0x01, 0x6A, 0x05, 0x97, 0x04, 0x90,
 0x03, 0x63, 0x00, 0xEF, 0x10, 0xF0, 0x24, 0x6B,
-0xBC, 0xF2, 0x70, 0x9B, 0x10, 0xF0, 0x24, 0x6A,
-0xD3, 0xF7, 0x15, 0x4A, 0x40, 0xDB, 0x00, 0x6B,
-0x10, 0xF0, 0x24, 0x6A, 0x5D, 0xF0, 0xB4, 0x9A,
+0x9B, 0xF6, 0x6C, 0x9B, 0x10, 0xF0, 0x24, 0x6A,
+0x53, 0xF6, 0x1D, 0x4A, 0x40, 0xDB, 0x00, 0x6B,
+0x10, 0xF0, 0x24, 0x6A, 0x3C, 0xF4, 0xAC, 0x9A,
 0xFF, 0x6C, 0x40, 0xA5, 0xA0, 0xA5, 0x8C, 0xEA,
 0xAC, 0xEC, 0x4E, 0xEC, 0x10, 0x24, 0x64, 0x73,
-0x09, 0x61, 0x10, 0xF0, 0x24, 0x6B, 0x7C, 0xF3,
+0x09, 0x61, 0x10, 0xF0, 0x24, 0x6B, 0x3B, 0xF7,
 0x8C, 0x9B, 0x40, 0x6D, 0x60, 0x9C, 0xAD, 0xEB,
 0x60, 0xDC, 0x20, 0xE8, 0x01, 0x4B, 0xFF, 0xF7,
 0x1F, 0x6A, 0x4C, 0xEB, 0xE5, 0x17, 0x20, 0xE8,
 0xFC, 0x63, 0x07, 0x62, 0x06, 0xD1, 0x05, 0xD0,
-0x10, 0xF0, 0x24, 0x6B, 0xBC, 0xF2, 0x70, 0x9B,
-0x10, 0xF0, 0x24, 0x6A, 0xFF, 0x69, 0x34, 0xF0,
-0x01, 0x4A, 0x8C, 0xE9, 0x40, 0xDB, 0x00, 0x68,
+0x10, 0xF0, 0x24, 0x6B, 0x9B, 0xF6, 0x6C, 0x9B,
+0x10, 0xF0, 0x24, 0x6A, 0xFF, 0x69, 0xB3, 0xF6,
+0x09, 0x4A, 0x8C, 0xE9, 0x40, 0xDB, 0x00, 0x68,
 0x20, 0x10, 0x82, 0xF3, 0x08, 0x70, 0x09, 0x61,
-0x10, 0xF0, 0x24, 0x6A, 0x7C, 0xF3, 0x6C, 0x9A,
+0x10, 0xF0, 0x24, 0x6A, 0x3B, 0xF7, 0x6C, 0x9A,
 0x10, 0x6C, 0x40, 0x9B, 0x8D, 0xEA, 0x40, 0xDB,
 0x1F, 0x10, 0xFF, 0xF7, 0x1F, 0x6A, 0x01, 0x48,
 0x4C, 0xE8, 0x30, 0xF0, 0x20, 0x6A, 0xCE, 0xF4,
 0x5C, 0x9A, 0x14, 0x6C, 0x40, 0xEA, 0x33, 0x58,
-0x08, 0x61, 0x10, 0xF0, 0x24, 0x6A, 0x7C, 0xF7,
-0x5C, 0x9A, 0x01, 0x6B, 0x40, 0xA2, 0x6C, 0xEA,
-0x0B, 0x2A, 0x10, 0xF0, 0x24, 0x6A, 0x5D, 0xF0,
-0x58, 0x9A, 0x01, 0x6B, 0x40, 0x9A, 0x42, 0x32,
+0x08, 0x61, 0x10, 0xF0, 0x24, 0x6A, 0x5C, 0xF3,
+0x58, 0x9A, 0x01, 0x6B, 0x40, 0xA2, 0x6C, 0xEA,
+0x0B, 0x2A, 0x10, 0xF0, 0x24, 0x6A, 0x3C, 0xF4,
+0x50, 0x9A, 0x01, 0x6B, 0x40, 0x9A, 0x42, 0x32,
 0x5E, 0x32, 0x6C, 0xEA, 0x2E, 0xEA, 0xD5, 0x2A,
-0x10, 0xF0, 0x24, 0x6B, 0xBC, 0xF2, 0x70, 0x9B,
-0x10, 0xF0, 0x24, 0x6A, 0x34, 0xF0, 0x02, 0x4A,
+0x10, 0xF0, 0x24, 0x6B, 0x9B, 0xF6, 0x6C, 0x9B,
+0x10, 0xF0, 0x24, 0x6A, 0xB3, 0xF6, 0x0A, 0x4A,
 0x40, 0xDB, 0x07, 0x97, 0x06, 0x91, 0x05, 0x90,
 0x04, 0x63, 0x00, 0xEF, 0x10, 0xF0, 0x24, 0x6B,
-0xBC, 0xF2, 0x70, 0x9B, 0x10, 0xF0, 0x24, 0x6A,
-0xB4, 0xF0, 0x15, 0x4A, 0x40, 0xDB, 0x10, 0xF0,
-0x24, 0x6A, 0x5D, 0xF0, 0x5C, 0x9A, 0x60, 0xA2,
+0x9B, 0xF6, 0x6C, 0x9B, 0x10, 0xF0, 0x24, 0x6A,
+0x33, 0xF7, 0x1D, 0x4A, 0x40, 0xDB, 0x10, 0xF0,
+0x24, 0x6A, 0x3C, 0xF4, 0x54, 0x9A, 0x60, 0xA2,
 0x01, 0x6A, 0x6C, 0xEA, 0xF8, 0x2A, 0x10, 0xF0,
-0x24, 0x6B, 0xBC, 0xF2, 0x70, 0x9B, 0x10, 0xF0,
-0x24, 0x6A, 0xB4, 0xF0, 0x16, 0x4A, 0x40, 0xDB,
+0x24, 0x6B, 0x9B, 0xF6, 0x6C, 0x9B, 0x10, 0xF0,
+0x24, 0x6A, 0x33, 0xF7, 0x1E, 0x4A, 0x40, 0xDB,
 0x20, 0xE8, 0x00, 0x65, 0xFD, 0x63, 0x05, 0x62,
 0x04, 0xD0, 0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1,
 0x08, 0x4A, 0x68, 0xF3, 0x99, 0xA2, 0x80, 0x6B,
 0x6B, 0xEB, 0x8D, 0xEB, 0x68, 0xF3, 0x79, 0xC2,
 0x88, 0xF3, 0x68, 0xAA, 0x10, 0xF0, 0x24, 0x6A,
-0x7D, 0xF0, 0x40, 0x9A, 0xFF, 0x68, 0x10, 0x6C,
-0x60, 0xCA, 0x10, 0xF0, 0x24, 0x6A, 0x7C, 0xF4,
-0x74, 0x9A, 0x40, 0xA3, 0x0C, 0xEA, 0x8D, 0xEA,
+0x3C, 0xF4, 0x58, 0x9A, 0xFF, 0x68, 0x10, 0x6C,
+0x60, 0xCA, 0x10, 0xF0, 0x24, 0x6A, 0x5C, 0xF0,
+0x70, 0x9A, 0x40, 0xA3, 0x0C, 0xEA, 0x8D, 0xEA,
 0x0C, 0xEA, 0x40, 0xC3, 0x01, 0x6C, 0x00, 0x18,
-0x08, 0xE8, 0x10, 0xF0, 0x24, 0x6A, 0xFC, 0xF7,
-0x40, 0x9A, 0x00, 0x6B, 0x01, 0x6C, 0x60, 0xDA,
-0x10, 0xF0, 0x24, 0x6A, 0x5D, 0xF0, 0x7C, 0x9A,
+0xAA, 0xE7, 0x10, 0xF0, 0x24, 0x6A, 0xBC, 0xF3,
+0x5C, 0x9A, 0x00, 0x6B, 0x01, 0x6C, 0x60, 0xDA,
+0x10, 0xF0, 0x24, 0x6A, 0x3C, 0xF4, 0x74, 0x9A,
 0x40, 0xA3, 0x0C, 0xEA, 0x8D, 0xEA, 0x0C, 0xEA,
 0x40, 0xC3, 0x00, 0x65, 0x00, 0x65, 0x00, 0x65,
 0x00, 0x65, 0x00, 0x65, 0x00, 0x65, 0x00, 0x65,
@@ -23642,19 +23570,19 @@ u8 array_mp_8821c_fw_nic[] = {
 0x00, 0x65, 0x00, 0x65, 0x00, 0x65, 0x00, 0x65,
 0x00, 0x65, 0x00, 0x65, 0x00, 0x65, 0x00, 0x65,
 0x05, 0x97, 0x04, 0x90, 0x03, 0x63, 0x00, 0xEF,
-0xFD, 0x63, 0x05, 0x62, 0x00, 0x18, 0x2D, 0xE8,
-0x10, 0xF0, 0x24, 0x6A, 0x7C, 0xF4, 0x74, 0x9A,
+0xFD, 0x63, 0x05, 0x62, 0x00, 0x18, 0xCF, 0xE7,
+0x10, 0xF0, 0x24, 0x6A, 0x5C, 0xF0, 0x70, 0x9A,
 0xEF, 0x6A, 0x80, 0xA3, 0x8C, 0xEA, 0x40, 0xC3,
-0x00, 0x6C, 0x00, 0x18, 0x08, 0xE8, 0x30, 0xF0,
+0x00, 0x6C, 0x00, 0x18, 0xAA, 0xE7, 0x30, 0xF0,
 0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A, 0x10, 0xF0,
-0x24, 0x6B, 0x8E, 0x9A, 0xFC, 0xF7, 0x60, 0x9B,
+0x24, 0x6B, 0x8E, 0x9A, 0xBC, 0xF3, 0x7C, 0x9B,
 0x80, 0xDB, 0x68, 0xF3, 0x99, 0xA2, 0x7F, 0x6B,
 0x8C, 0xEB, 0x68, 0xF3, 0x79, 0xC2, 0x05, 0x97,
 0x03, 0x63, 0x00, 0xEF, 0xFF, 0x6A, 0x4C, 0xEC,
 0x94, 0x34, 0x4C, 0xED, 0x4C, 0xEC, 0x10, 0xF0,
-0x24, 0x6A, 0x7D, 0xF0, 0x44, 0x9A, 0x80, 0xC2,
+0x24, 0x6A, 0x3C, 0xF4, 0x5C, 0x9A, 0x80, 0xC2,
 0xA0, 0xC2, 0x20, 0xE8, 0xFF, 0x6A, 0x10, 0xF0,
-0x24, 0x6B, 0x7D, 0xF0, 0x64, 0x9B, 0x4C, 0xEC,
+0x24, 0x6B, 0x3C, 0xF4, 0x7C, 0x9B, 0x4C, 0xEC,
 0x94, 0x34, 0x4C, 0xEC, 0x80, 0xC3, 0x60, 0xA3,
 0x6C, 0xEA, 0x20, 0xE8, 0xFF, 0x6A, 0x4C, 0xED,
 0xFF, 0x75, 0x4C, 0xEC, 0xCC, 0xEA, 0x06, 0x61,
@@ -23683,21 +23611,21 @@ u8 array_mp_8821c_fw_nic[] = {
 0x2C, 0xF7, 0x9F, 0xA3, 0x2C, 0xF7, 0x7E, 0xA3,
 0x8D, 0xEB, 0x06, 0x10, 0x0C, 0x2C, 0x30, 0xF0,
 0x20, 0x6B, 0x0D, 0xF1, 0x66, 0xA3, 0xAD, 0xEB,
-0x4C, 0xEB, 0x10, 0xF0, 0x24, 0x6A, 0x5C, 0xF3,
-0x4C, 0x9A, 0x60, 0xC2, 0x2C, 0x10, 0x47, 0x70,
+0x4C, 0xEB, 0x10, 0xF0, 0x24, 0x6A, 0x3B, 0xF7,
+0x5C, 0x9A, 0x60, 0xC2, 0x2C, 0x10, 0x47, 0x70,
 0x12, 0x60, 0x48, 0x58, 0x06, 0x60, 0x17, 0x70,
 0x0E, 0x60, 0x44, 0x70, 0x0C, 0x60, 0x01, 0x70,
 0x09, 0x10, 0x4C, 0x70, 0x08, 0x60, 0x4D, 0x58,
 0x02, 0x60, 0x49, 0x70, 0x03, 0x10, 0x4E, 0x70,
 0x02, 0x60, 0x51, 0x70, 0x06, 0x61, 0x30, 0xF0,
 0x20, 0x6A, 0x0D, 0xF1, 0x46, 0xA2, 0xAD, 0xEA,
-0x0D, 0x10, 0x00, 0x18, 0xAB, 0xE8, 0x30, 0xF0,
+0x0D, 0x10, 0x00, 0x18, 0x4D, 0xE8, 0x30, 0xF0,
 0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A, 0x2C, 0xF7,
 0x7F, 0xA2, 0x2C, 0xF7, 0x5E, 0xA2, 0x6D, 0xEA,
 0xFF, 0x6B, 0x6C, 0xEA, 0x10, 0xF0, 0x24, 0x6B,
-0x5C, 0xF3, 0x6C, 0x9B, 0x40, 0xC3, 0x30, 0xF0,
+0x3B, 0xF7, 0x7C, 0x9B, 0x40, 0xC3, 0x30, 0xF0,
 0x20, 0x6A, 0xE8, 0xF2, 0x1A, 0xC2, 0x10, 0xF0,
-0x24, 0x6A, 0x7D, 0xF0, 0x48, 0x9A, 0x00, 0xC2,
+0x24, 0x6A, 0x5C, 0xF4, 0x40, 0x9A, 0x00, 0xC2,
 0x05, 0x97, 0x04, 0x90, 0x03, 0x63, 0x00, 0xEF,
 0xFF, 0x63, 0x01, 0xD1, 0x00, 0xD0, 0x30, 0xF0,
 0x20, 0x68, 0xC0, 0xF1, 0x08, 0x48, 0xFF, 0x6A,
@@ -23705,40 +23633,40 @@ u8 array_mp_8821c_fw_nic[] = {
 0x10, 0xA0, 0x4C, 0xEF, 0x1F, 0x65, 0x01, 0x6F,
 0xEC, 0xED, 0x0C, 0xEF, 0x4C, 0xE9, 0x4C, 0xEE,
 0x4C, 0xED, 0x4C, 0xEF, 0x10, 0xF0, 0x24, 0x6A,
-0x1C, 0xF4, 0x48, 0x9A, 0xFF, 0xF7, 0x1F, 0x6B,
+0xFB, 0xF7, 0x44, 0x9A, 0xFF, 0xF7, 0x1F, 0x6B,
 0x6C, 0xEC, 0x00, 0xAA, 0xE1, 0xF7, 0x1F, 0x6A,
-0x0C, 0xEA, 0x10, 0xF0, 0x24, 0x68, 0x1C, 0xF4,
-0x04, 0x98, 0x51, 0xE4, 0x6C, 0xEC, 0x80, 0xC8,
-0x9C, 0x32, 0x10, 0xF0, 0x24, 0x6C, 0x7D, 0xF0,
-0x8C, 0x9C, 0x10, 0xF0, 0x24, 0x68, 0x7D, 0xF0,
-0x10, 0x98, 0x91, 0xE2, 0x80, 0xAC, 0x01, 0xE2,
+0x0C, 0xEA, 0x10, 0xF0, 0x24, 0x68, 0xFB, 0xF7,
+0x00, 0x98, 0x51, 0xE4, 0x6C, 0xEC, 0x80, 0xC8,
+0x9C, 0x32, 0x10, 0xF0, 0x24, 0x6C, 0x5C, 0xF4,
+0x84, 0x9C, 0x10, 0xF0, 0x24, 0x68, 0x5C, 0xF4,
+0x08, 0x98, 0x91, 0xE2, 0x80, 0xAC, 0x01, 0xE2,
 0x00, 0x98, 0x6C, 0xEC, 0x05, 0x21, 0x10, 0xF0,
 0x00, 0x69, 0x2B, 0xE9, 0x2D, 0xEC, 0x6C, 0xEC,
 0xD8, 0xF0, 0x00, 0x6B, 0x8C, 0xEB, 0x10, 0xF0,
-0x24, 0x6C, 0x7D, 0xF0, 0x8C, 0x9C, 0x91, 0xE2,
-0x60, 0xCC, 0x10, 0xF0, 0x24, 0x6B, 0x7D, 0xF0,
-0x74, 0x9B, 0x6D, 0xE2, 0x80, 0xA3, 0x01, 0x6B,
+0x24, 0x6C, 0x5C, 0xF4, 0x84, 0x9C, 0x91, 0xE2,
+0x60, 0xCC, 0x10, 0xF0, 0x24, 0x6B, 0x5C, 0xF4,
+0x6C, 0x9B, 0x6D, 0xE2, 0x80, 0xA3, 0x01, 0x6B,
 0x8C, 0xEB, 0x05, 0x23, 0x03, 0xF7, 0x01, 0x6B,
 0x6B, 0xEB, 0x0C, 0xEB, 0x07, 0x10, 0x1F, 0xF7,
 0x01, 0x6B, 0x6B, 0xEB, 0x0C, 0xEB, 0x18, 0x67,
 0x00, 0x34, 0x8D, 0xEB, 0xFF, 0x76, 0x13, 0x60,
-0x10, 0xF0, 0x24, 0x6C, 0x7D, 0xF0, 0x98, 0x9C,
+0x10, 0xF0, 0x24, 0x6C, 0x5C, 0xF4, 0x90, 0x9C,
 0x80, 0xF4, 0xC0, 0x36, 0x6C, 0xEC, 0x10, 0xF0,
-0x24, 0x6B, 0x5C, 0xF3, 0x74, 0x9B, 0x6D, 0xEE,
-0x10, 0xF0, 0x24, 0x6B, 0x7D, 0xF0, 0x70, 0x9B,
+0x24, 0x6B, 0x5B, 0xF7, 0x64, 0x9B, 0x6D, 0xEE,
+0x10, 0xF0, 0x24, 0x6B, 0x5C, 0xF4, 0x68, 0x9B,
 0x8D, 0xEE, 0x6D, 0xE2, 0xC0, 0xDB, 0x01, 0x2F,
-0x15, 0x25, 0x10, 0xF0, 0x24, 0x6B, 0x7D, 0xF0,
-0x9C, 0x9B, 0xFF, 0x6D, 0x80, 0x6E, 0x91, 0xE2,
+0x15, 0x25, 0x10, 0xF0, 0x24, 0x6B, 0x5C, 0xF4,
+0x94, 0x9B, 0xFF, 0x6D, 0x80, 0x6E, 0x91, 0xE2,
 0x60, 0xA4, 0xCB, 0xEE, 0xAC, 0xEB, 0xCD, 0xEB,
 0xAC, 0xEB, 0x60, 0xC4, 0x10, 0xF0, 0x24, 0x6B,
-0x9D, 0xF0, 0x60, 0x9B, 0x00, 0x6C, 0x80, 0xC3,
+0x5C, 0xF4, 0x78, 0x9B, 0x00, 0x6C, 0x80, 0xC3,
 0x00, 0x6C, 0x11, 0x10, 0x10, 0xF0, 0x24, 0x6B,
-0x7D, 0xF0, 0x9C, 0x9B, 0x7F, 0x6B, 0x91, 0xE2,
+0x5C, 0xF4, 0x94, 0x9B, 0x7F, 0x6B, 0x91, 0xE2,
 0xA0, 0xA4, 0xAC, 0xEB, 0x60, 0xC4, 0x10, 0xF0,
-0x24, 0x6B, 0x9D, 0xF0, 0x60, 0x9B, 0x1C, 0x6C,
+0x24, 0x6B, 0x5C, 0xF4, 0x78, 0x9B, 0x1C, 0x6C,
 0x80, 0xC3, 0x08, 0xF4, 0x13, 0x6C, 0x10, 0xF0,
-0x24, 0x6B, 0x9D, 0xF0, 0x64, 0x9B, 0x80, 0xCB,
-0x10, 0xF0, 0x24, 0x6B, 0xFC, 0xF3, 0x90, 0x9B,
+0x24, 0x6B, 0x5C, 0xF4, 0x7C, 0x9B, 0x80, 0xCB,
+0x10, 0xF0, 0x24, 0x6B, 0xDB, 0xF7, 0x8C, 0x9B,
 0xF7, 0x6B, 0x91, 0xE2, 0xA0, 0xA4, 0xAC, 0xEB,
 0x60, 0xC4, 0x01, 0x91, 0x00, 0x90, 0x01, 0x63,
 0x20, 0xE8, 0x00, 0x65, 0x30, 0xF0, 0x20, 0x6A,
@@ -23747,30 +23675,30 @@ u8 array_mp_8821c_fw_nic[] = {
 0x20, 0xE8, 0x00, 0x65, 0x30, 0xF0, 0x20, 0x6A,
 0x29, 0xF5, 0x51, 0xA2, 0xFF, 0x63, 0x05, 0x5A,
 0x36, 0x60, 0x10, 0xF0, 0x24, 0x6B, 0x48, 0x32,
-0x5C, 0xF2, 0x04, 0x4B, 0x4D, 0xE3, 0x40, 0x9B,
-0x00, 0xEA, 0x10, 0xF0, 0x24, 0x6A, 0xFC, 0xF2,
-0x48, 0x9A, 0xFF, 0xF7, 0x1F, 0x6B, 0x40, 0x9A,
-0x1A, 0x10, 0x10, 0xF0, 0x24, 0x6A, 0xFC, 0xF2,
-0x48, 0x9A, 0x09, 0x10, 0x10, 0xF0, 0x24, 0x6A,
-0x9D, 0xF0, 0x48, 0x9A, 0x0D, 0x10, 0x10, 0xF0,
-0x24, 0x6A, 0x9D, 0xF0, 0x48, 0x9A, 0x40, 0x9A,
+0x3B, 0xF6, 0x00, 0x4B, 0x4D, 0xE3, 0x40, 0x9B,
+0x00, 0xEA, 0x10, 0xF0, 0x24, 0x6A, 0xDB, 0xF6,
+0x44, 0x9A, 0xFF, 0xF7, 0x1F, 0x6B, 0x40, 0x9A,
+0x1A, 0x10, 0x10, 0xF0, 0x24, 0x6A, 0xDB, 0xF6,
+0x44, 0x9A, 0x09, 0x10, 0x10, 0xF0, 0x24, 0x6A,
+0x7C, 0xF4, 0x40, 0x9A, 0x0D, 0x10, 0x10, 0xF0,
+0x24, 0x6A, 0x7C, 0xF4, 0x40, 0x9A, 0x40, 0x9A,
 0x50, 0x32, 0x00, 0xF5, 0x42, 0x32, 0x08, 0x10,
-0x10, 0xF0, 0x24, 0x6A, 0x9D, 0xF0, 0x4C, 0x9A,
+0x10, 0xF0, 0x24, 0x6A, 0x7C, 0xF4, 0x44, 0x9A,
 0x40, 0x9A, 0xE1, 0xF7, 0x1F, 0x6B, 0x6C, 0xEA,
 0x00, 0xD2, 0x00, 0x93, 0xE0, 0xF3, 0x08, 0x6A,
 0x60, 0x33, 0x68, 0x33, 0x5B, 0xEB, 0x01, 0x2A,
 0xE5, 0xE8, 0x12, 0xEA, 0x01, 0x10, 0x66, 0x6A,
 0x00, 0xD2, 0x00, 0x92, 0x01, 0x63, 0x20, 0xE8,
 0xFF, 0x63, 0x01, 0xD0, 0x0C, 0x2C, 0x10, 0xF0,
-0x24, 0x6A, 0x7C, 0xF3, 0x6C, 0x9A, 0x10, 0xF0,
-0x24, 0x6C, 0x9D, 0xF0, 0x90, 0x9C, 0x40, 0x9B,
+0x24, 0x6A, 0x3B, 0xF7, 0x6C, 0x9A, 0x10, 0xF0,
+0x24, 0x6C, 0x7C, 0xF4, 0x88, 0x9C, 0x40, 0x9B,
 0x8D, 0xEA, 0x40, 0xDB, 0x58, 0x10, 0x30, 0xF0,
-0x20, 0x6A, 0xCF, 0xF5, 0xDC, 0x9A, 0x30, 0xF0,
-0x20, 0x6A, 0xEF, 0xF5, 0x18, 0x4A, 0x00, 0x6D,
+0x20, 0x6A, 0xCF, 0xF5, 0xD8, 0x9A, 0x30, 0xF0,
+0x20, 0x6A, 0xEF, 0xF5, 0x14, 0x4A, 0x00, 0x6D,
 0x18, 0x6F, 0xF8, 0xED, 0x30, 0xF0, 0x20, 0x6B,
 0xEF, 0xF4, 0x08, 0x4B, 0x12, 0xEF, 0x6D, 0xE7,
-0x00, 0xF1, 0x04, 0xA3, 0x01, 0x6F, 0xEC, 0xE8,
-0x23, 0x20, 0x00, 0xF1, 0x64, 0xA3, 0x66, 0x33,
+0x00, 0xF1, 0x00, 0xA3, 0x01, 0x6F, 0xEC, 0xE8,
+0x23, 0x20, 0x00, 0xF1, 0x60, 0xA3, 0x66, 0x33,
 0xEC, 0xEB, 0xFF, 0x6F, 0xEC, 0xEB, 0x1C, 0x23,
 0xFF, 0xF7, 0x78, 0x9A, 0x9B, 0xEB, 0x01, 0x2C,
 0xE5, 0xE8, 0x12, 0xEB, 0xFF, 0xF7, 0x7C, 0xDA,
@@ -23781,26 +23709,26 @@ u8 array_mp_8821c_fw_nic[] = {
 0x01, 0x6F, 0xFF, 0xF7, 0xFC, 0xDA, 0x60, 0xDA,
 0x01, 0x4D, 0x0A, 0x75, 0x18, 0x4A, 0xCC, 0x61,
 0x30, 0xF0, 0x20, 0x6A, 0xEF, 0xF4, 0x08, 0x4A,
-0xE0, 0xF0, 0x78, 0x9A, 0xE0, 0xF0, 0x94, 0xDA,
+0xE0, 0xF0, 0x74, 0x9A, 0xE0, 0xF0, 0x90, 0xDA,
 0x7B, 0xEC, 0x01, 0x2B, 0xE5, 0xE8, 0x12, 0xEB,
-0xE0, 0xF0, 0x7C, 0xDA, 0x78, 0x67, 0x00, 0xF1,
-0x60, 0xDA, 0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1,
+0xE0, 0xF0, 0x78, 0xDA, 0x78, 0x67, 0xE0, 0xF0,
+0x7C, 0xDA, 0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1,
 0x08, 0x4A, 0x69, 0xF3, 0x88, 0xA2, 0x02, 0x6B,
 0x8D, 0xEB, 0x69, 0xF3, 0x68, 0xC2, 0x01, 0x90,
 0x01, 0x63, 0x20, 0xE8, 0xFC, 0x63, 0x07, 0x62,
 0x06, 0xD1, 0x05, 0xD0, 0x30, 0xF0, 0x20, 0x68,
 0xC0, 0xF1, 0x08, 0x48, 0x69, 0xF3, 0x48, 0xA0,
 0x03, 0x6B, 0x4C, 0xEB, 0x00, 0x6A, 0x33, 0x2B,
-0x10, 0xF0, 0x24, 0x6A, 0x9D, 0xF0, 0x54, 0x9A,
+0x10, 0xF0, 0x24, 0x6A, 0x7C, 0xF4, 0x4C, 0x9A,
 0x30, 0xF0, 0x20, 0x69, 0x30, 0xF0, 0x20, 0x6C,
 0x60, 0xC2, 0x4E, 0xF2, 0x4C, 0x99, 0x29, 0xF5,
 0x10, 0x4C, 0x00, 0x6D, 0xD4, 0x6E, 0x40, 0xEA,
 0x4E, 0xF2, 0x4C, 0x99, 0x30, 0xF0, 0x20, 0x6C,
-0xFF, 0x6E, 0xCF, 0xF5, 0x1C, 0x4C, 0x00, 0x6D,
+0xFF, 0x6E, 0xCF, 0xF5, 0x18, 0x4C, 0x00, 0x6D,
 0x01, 0x4E, 0x40, 0xEA, 0x30, 0xF0, 0x20, 0x6A,
 0xEF, 0xF4, 0x08, 0x4A, 0x01, 0x6B, 0x66, 0x6C,
-0xE0, 0xF0, 0x78, 0xDA, 0xE0, 0xF0, 0x94, 0xDA,
-0xE0, 0xF0, 0x9C, 0xDA, 0x01, 0x6A, 0x4B, 0xEA,
+0xE0, 0xF0, 0x74, 0xDA, 0xE0, 0xF0, 0x90, 0xDA,
+0xE0, 0xF0, 0x98, 0xDA, 0x01, 0x6A, 0x4B, 0xEA,
 0x69, 0xF3, 0x88, 0xA0, 0x69, 0xF3, 0x49, 0xC0,
 0x7D, 0x6A, 0x4B, 0xEA, 0x8C, 0xEA, 0x6D, 0xEA,
 0x69, 0xF3, 0x48, 0xC0, 0x43, 0x67, 0x07, 0x97,
@@ -23808,36 +23736,36 @@ u8 array_mp_8821c_fw_nic[] = {
 0xFC, 0x63, 0x07, 0x62, 0x06, 0xD0, 0x30, 0xF0,
 0x20, 0x68, 0xC0, 0xF1, 0x08, 0x48, 0x69, 0xF3,
 0x88, 0xA0, 0x01, 0x6B, 0x00, 0x6A, 0x8C, 0xEB,
-0x24, 0x23, 0x10, 0xF0, 0x24, 0x6A, 0x9D, 0xF0,
-0x54, 0x9A, 0x00, 0x6B, 0x60, 0xC2, 0x03, 0x6A,
+0x24, 0x23, 0x10, 0xF0, 0x24, 0x6A, 0x7C, 0xF4,
+0x4C, 0x9A, 0x00, 0x6B, 0x60, 0xC2, 0x03, 0x6A,
 0x4B, 0xEA, 0x8C, 0xEA, 0x69, 0xF3, 0x48, 0xC0,
-0x00, 0x18, 0x3F, 0xE9, 0x04, 0xD2, 0x04, 0x94,
-0x00, 0x18, 0x60, 0xE9, 0x69, 0xF3, 0x68, 0xA0,
+0x00, 0x18, 0xE1, 0xE8, 0x04, 0xD2, 0x04, 0x94,
+0x00, 0x18, 0x02, 0xE9, 0x69, 0xF3, 0x68, 0xA0,
 0x02, 0x6A, 0x42, 0xF1, 0x1C, 0x6C, 0x6D, 0xEA,
 0x69, 0xF3, 0x48, 0xC0, 0x30, 0xF0, 0x20, 0x6B,
 0x30, 0xF0, 0x20, 0x6A, 0xAE, 0xF2, 0x50, 0x9A,
-0xEF, 0xF5, 0xC0, 0x9B, 0x01, 0x6D, 0x40, 0xEA,
+0xCF, 0xF5, 0xDC, 0x9B, 0x01, 0x6D, 0x40, 0xEA,
 0x01, 0x6A, 0x07, 0x97, 0x06, 0x90, 0x04, 0x63,
 0x00, 0xEF, 0x00, 0x65, 0x30, 0xF0, 0x20, 0x6B,
 0xC0, 0xF1, 0x08, 0x4B, 0x69, 0xF3, 0xA8, 0xA3,
 0x02, 0x6C, 0x00, 0x6A, 0xAC, 0xEC, 0x0C, 0x24,
-0x10, 0xF0, 0x24, 0x6A, 0x9D, 0xF0, 0x54, 0x9A,
+0x10, 0xF0, 0x24, 0x6A, 0x7C, 0xF4, 0x4C, 0x9A,
 0x00, 0x6C, 0x80, 0xC2, 0x03, 0x6A, 0x4B, 0xEA,
 0xAC, 0xEA, 0x69, 0xF3, 0x48, 0xC3, 0x01, 0x6A,
 0x20, 0xE8, 0x00, 0x65, 0x00, 0x6A, 0x18, 0x6C,
 0x98, 0xEA, 0x30, 0xF0, 0x20, 0x6B, 0xEF, 0xF4,
 0x08, 0x4B, 0x01, 0x4A, 0x0A, 0x72, 0x12, 0xEC,
-0x71, 0xE4, 0x00, 0xF1, 0xA4, 0xA4, 0x02, 0x6B,
-0x6B, 0xEB, 0xAC, 0xEB, 0x00, 0xF1, 0x64, 0xC4,
+0x71, 0xE4, 0x00, 0xF1, 0xA0, 0xA4, 0x02, 0x6B,
+0x6B, 0xEB, 0xAC, 0xEB, 0x00, 0xF1, 0x60, 0xC4,
 0xEE, 0x61, 0x20, 0xE8, 0x30, 0xF0, 0x20, 0x6A,
 0x29, 0xF5, 0x50, 0xA2, 0x01, 0x6B, 0x4C, 0xEB,
 0x00, 0x6A, 0x1C, 0x23, 0x30, 0xF0, 0x20, 0x6A,
-0xEF, 0xF5, 0x1C, 0x4A, 0x00, 0x6B, 0xA0, 0x9A,
+0xEF, 0xF5, 0x18, 0x4A, 0x00, 0x6B, 0xA0, 0x9A,
 0x8E, 0xED, 0x0F, 0x2D, 0x18, 0x6E, 0xD8, 0xEB,
 0x30, 0xF0, 0x20, 0x6D, 0xEF, 0xF4, 0x08, 0x4D,
-0x12, 0xEE, 0xB9, 0xE6, 0x00, 0xF1, 0xE4, 0xA6,
+0x12, 0xEE, 0xB9, 0xE6, 0x00, 0xF1, 0xE0, 0xA6,
 0x02, 0x6D, 0xAB, 0xED, 0xEC, 0xED, 0x00, 0xF1,
-0xA4, 0xC6, 0x01, 0x4B, 0x0A, 0x73, 0x18, 0x4A,
+0xA0, 0xC6, 0x01, 0x4B, 0x0A, 0x73, 0x18, 0x4A,
 0xEA, 0x61, 0x01, 0x6A, 0x20, 0xE8, 0x00, 0x65,
 0xFB, 0x63, 0x09, 0x62, 0x08, 0xD1, 0x07, 0xD0,
 0x5D, 0x67, 0x20, 0xF0, 0x78, 0xA2, 0x30, 0xF0,
@@ -23846,103 +23774,103 @@ u8 array_mp_8821c_fw_nic[] = {
 0x0B, 0xD5, 0x0C, 0xD6, 0x00, 0xF6, 0x23, 0x31,
 0x80, 0xF0, 0x0E, 0x22, 0x24, 0x23, 0x01, 0x73,
 0x80, 0xF0, 0x0A, 0x61, 0x0A, 0x93, 0x80, 0xF0,
-0x07, 0x23, 0x10, 0xF0, 0x24, 0x6A, 0x9D, 0xF0,
-0x58, 0x9A, 0xC3, 0xEA, 0x80, 0xF0, 0x00, 0x61,
+0x07, 0x23, 0x10, 0xF0, 0x24, 0x6A, 0x7C, 0xF4,
+0x50, 0x9A, 0xC3, 0xEA, 0x80, 0xF0, 0x00, 0x61,
 0x7F, 0x71, 0x7E, 0x60, 0xFF, 0xF7, 0x1F, 0x51,
 0x7B, 0x61, 0x30, 0xF0, 0x20, 0x6A, 0xCF, 0xF5,
-0x1C, 0x9A, 0x1B, 0xEE, 0x01, 0x28, 0xE5, 0xE8,
+0x18, 0x9A, 0x1B, 0xEE, 0x01, 0x28, 0xE5, 0xE8,
 0x10, 0xEA, 0x12, 0xE8, 0x02, 0x22, 0x01, 0x48,
 0x04, 0x10, 0x03, 0x28, 0x01, 0x68, 0x50, 0x67,
 0x1F, 0x10, 0x01, 0x6B, 0x20, 0x10, 0x0A, 0x95,
-0x67, 0x25, 0x10, 0xF0, 0x24, 0x6A, 0x9D, 0xF0,
-0x58, 0x9A, 0x0C, 0x96, 0xC3, 0xEA, 0x60, 0x61,
+0x67, 0x25, 0x10, 0xF0, 0x24, 0x6A, 0x7C, 0xF4,
+0x50, 0x9A, 0x0C, 0x96, 0xC3, 0xEA, 0x60, 0x61,
 0x7F, 0x71, 0x5E, 0x60, 0xFF, 0xF7, 0x1F, 0x51,
-0x5B, 0x61, 0x30, 0xF0, 0x20, 0x6A, 0xEF, 0xF5,
-0x00, 0x9A, 0x1B, 0xEE, 0x01, 0x28, 0xE5, 0xE8,
+0x5B, 0x61, 0x30, 0xF0, 0x20, 0x6A, 0xCF, 0xF5,
+0x1C, 0x9A, 0x1B, 0xEE, 0x01, 0x28, 0xE5, 0xE8,
 0x10, 0xEA, 0x12, 0xE8, 0x02, 0x22, 0x01, 0x48,
 0x05, 0x10, 0x04, 0x28, 0x01, 0x68, 0x00, 0x6A,
 0x04, 0xD2, 0x02, 0x10, 0x00, 0x6B, 0x04, 0xD3,
-0x0A, 0x94, 0x00, 0x18, 0xE9, 0xE9, 0x00, 0x6C,
+0x0A, 0x94, 0x00, 0x18, 0x8B, 0xE9, 0x00, 0x6C,
 0xFF, 0x6E, 0xA4, 0x67, 0xCC, 0xED, 0x1D, 0x65,
 0x18, 0x6D, 0xB8, 0xEC, 0x30, 0xF0, 0x20, 0x6B,
 0xEF, 0xF4, 0x08, 0x4B, 0x01, 0x6D, 0x12, 0xEA,
-0x69, 0xE2, 0x00, 0xF1, 0x44, 0xA2, 0xAC, 0xEA,
+0x69, 0xE2, 0x00, 0xF1, 0x40, 0xA2, 0xAC, 0xEA,
 0xCC, 0xEA, 0x2F, 0x2A, 0xD8, 0x67, 0x18, 0x6F,
 0xF8, 0xEE, 0x04, 0x96, 0xC4, 0x36, 0x04, 0xD6,
 0x03, 0x6E, 0xCB, 0xEE, 0x12, 0xEC, 0x71, 0xE4,
-0x00, 0xF1, 0xE4, 0xA4, 0xEC, 0xEE, 0x04, 0x97,
-0xED, 0xEE, 0x00, 0xF1, 0xC4, 0xC4, 0x0A, 0x96,
-0x00, 0xF1, 0xD4, 0xDC, 0x0B, 0x97, 0x00, 0xF1,
-0xF8, 0xDC, 0x0C, 0x96, 0x18, 0x6F, 0x00, 0xF1,
-0xC8, 0xDC, 0xD8, 0x67, 0x01, 0x4E, 0xF8, 0xEE,
-0x12, 0xEE, 0xCD, 0xE3, 0xE0, 0xF0, 0x58, 0xDB,
-0xE0, 0xF0, 0x14, 0xDB, 0x00, 0xF1, 0x46, 0xC4,
-0x00, 0xF1, 0x44, 0xA4, 0x00, 0xF1, 0x27, 0xC4,
-0x4D, 0xED, 0x00, 0xF1, 0xA4, 0xC4, 0x01, 0x6A,
+0x00, 0xF1, 0xE0, 0xA4, 0xEC, 0xEE, 0x04, 0x97,
+0xED, 0xEE, 0x00, 0xF1, 0xC0, 0xC4, 0x0A, 0x96,
+0x00, 0xF1, 0xD0, 0xDC, 0x0B, 0x97, 0x00, 0xF1,
+0xF4, 0xDC, 0x0C, 0x96, 0x18, 0x6F, 0x00, 0xF1,
+0xC4, 0xDC, 0xD8, 0x67, 0x01, 0x4E, 0xF8, 0xEE,
+0x12, 0xEE, 0xCD, 0xE3, 0xE0, 0xF0, 0x54, 0xDB,
+0xE0, 0xF0, 0x10, 0xDB, 0x00, 0xF1, 0x42, 0xC4,
+0x00, 0xF1, 0x40, 0xA4, 0x00, 0xF1, 0x23, 0xC4,
+0x4D, 0xED, 0x00, 0xF1, 0xA0, 0xC4, 0x01, 0x6A,
 0x04, 0x10, 0x01, 0x4C, 0x0A, 0x74, 0xBC, 0x61,
 0x00, 0x6A, 0x09, 0x97, 0x08, 0x91, 0x07, 0x90,
 0x05, 0x63, 0x00, 0xEF, 0xFC, 0x63, 0x07, 0x62,
 0xFF, 0x6A, 0x8C, 0xEA, 0x06, 0x22, 0x30, 0xF0,
-0x20, 0x6A, 0xEF, 0xF5, 0x18, 0x4A, 0x00, 0x6C,
+0x20, 0x6A, 0xEF, 0xF5, 0x14, 0x4A, 0x00, 0x6C,
 0x4F, 0x10, 0x30, 0xF0, 0x20, 0x6A, 0xEF, 0xF5,
-0x18, 0x4A, 0x00, 0x6B, 0x18, 0x6D, 0xB8, 0xEB,
+0x14, 0x4A, 0x00, 0x6B, 0x18, 0x6D, 0xB8, 0xEB,
 0x30, 0xF0, 0x20, 0x6C, 0xEF, 0xF4, 0x08, 0x4C,
-0x12, 0xED, 0x91, 0xE5, 0x00, 0xF1, 0xC4, 0xA4,
+0x12, 0xED, 0x91, 0xE5, 0x00, 0xF1, 0xC0, 0xA4,
 0x01, 0x6D, 0xAC, 0xEE, 0x08, 0x26, 0x00, 0xF1,
-0x84, 0xA4, 0x86, 0x34, 0xAC, 0xEC, 0x03, 0x24,
+0x80, 0xA4, 0x86, 0x34, 0xAC, 0xEC, 0x03, 0x24,
 0x80, 0x9A, 0x01, 0x4C, 0x80, 0xDA, 0x01, 0x4B,
 0x0A, 0x73, 0x18, 0x4A, 0xE7, 0x61, 0x00, 0x18,
-0x3F, 0xE9, 0x04, 0xD2, 0x30, 0xF0, 0x20, 0x6A,
+0xE1, 0xE8, 0x04, 0xD2, 0x30, 0xF0, 0x20, 0x6A,
 0xC0, 0xF1, 0x08, 0x4A, 0x68, 0xF3, 0x94, 0xA2,
 0x7F, 0x6B, 0x8C, 0xEB, 0x1A, 0x23, 0x68, 0xF3,
 0x77, 0xA2, 0x69, 0xF3, 0x89, 0xA2, 0x76, 0x33,
 0x8E, 0xEB, 0x13, 0x2B, 0x68, 0xF3, 0x95, 0xA2,
 0x0F, 0x6B, 0x8C, 0xEB, 0xFF, 0x6C, 0x8C, 0xEB,
 0x0C, 0x23, 0x88, 0xF3, 0x82, 0xA2, 0x04, 0x93,
-0x30, 0xF0, 0x20, 0x6A, 0xCF, 0xF5, 0x5C, 0x9A,
+0x30, 0xF0, 0x20, 0x6A, 0xCF, 0xF5, 0x58, 0x9A,
 0x78, 0xEC, 0x12, 0xEC, 0x8E, 0xEA, 0x09, 0x2A,
 0x5B, 0x10, 0x30, 0xF0, 0x20, 0x6A, 0x04, 0x93,
-0xCF, 0xF5, 0x5C, 0x9A, 0x6E, 0xEA, 0x54, 0x22,
-0x04, 0x94, 0x00, 0x18, 0x60, 0xE9, 0x50, 0x10,
+0xCF, 0xF5, 0x58, 0x9A, 0x6E, 0xEA, 0x54, 0x22,
+0x04, 0x94, 0x00, 0x18, 0x02, 0xE9, 0x50, 0x10,
 0x18, 0x6D, 0xB8, 0xEC, 0x30, 0xF0, 0x20, 0x6B,
 0xEF, 0xF4, 0x08, 0x4B, 0x12, 0xED, 0x6D, 0xE5,
-0x00, 0xF1, 0xC4, 0xA3, 0x01, 0x6D, 0xAC, 0xEE,
-0x0A, 0x26, 0x00, 0xF1, 0x64, 0xA3, 0x66, 0x33,
+0x00, 0xF1, 0xC0, 0xA3, 0x01, 0x6D, 0xAC, 0xEE,
+0x0A, 0x26, 0x00, 0xF1, 0x60, 0xA3, 0x66, 0x33,
 0xAC, 0xEB, 0xFF, 0x6D, 0xAC, 0xEB, 0x03, 0x2B,
 0x60, 0x9A, 0x01, 0x4B, 0x60, 0xDA, 0x01, 0x4C,
 0x0A, 0x74, 0x18, 0x4A, 0xE5, 0x61, 0x30, 0xF0,
 0x20, 0x6A, 0x29, 0xF5, 0x51, 0xA2, 0xFF, 0x72,
 0x2F, 0x61, 0x30, 0xF0, 0x20, 0x6A, 0xEF, 0xF4,
-0x08, 0x4A, 0x00, 0xF1, 0x60, 0x9A, 0x01, 0x4B,
-0x00, 0xF1, 0x60, 0xDA, 0xE0, 0xF0, 0x5C, 0x9A,
+0x08, 0x4A, 0xE0, 0xF0, 0x7C, 0x9A, 0x01, 0x4B,
+0xE0, 0xF0, 0x7C, 0xDA, 0x7C, 0x4A, 0x5F, 0x9A,
 0x4E, 0xEB, 0x22, 0x2B, 0x30, 0xF0, 0x20, 0x6A,
-0xEF, 0xF5, 0x18, 0x4A, 0x18, 0x6D, 0xB8, 0xEB,
+0xEF, 0xF5, 0x14, 0x4A, 0x18, 0x6D, 0xB8, 0xEB,
 0x30, 0xF0, 0x20, 0x6C, 0xEF, 0xF4, 0x08, 0x4C,
-0x12, 0xED, 0x91, 0xE5, 0x00, 0xF1, 0xC4, 0xA4,
+0x12, 0xED, 0x91, 0xE5, 0x00, 0xF1, 0xC0, 0xA4,
 0x01, 0x6D, 0xAC, 0xEE, 0x08, 0x26, 0x00, 0xF1,
-0x84, 0xA4, 0x86, 0x34, 0xAC, 0xEC, 0x03, 0x24,
+0x80, 0xA4, 0x86, 0x34, 0xAC, 0xEC, 0x03, 0x24,
 0x80, 0x9A, 0x01, 0x4C, 0x80, 0xDA, 0x01, 0x4B,
 0x0A, 0x73, 0x18, 0x4A, 0xE7, 0x61, 0x30, 0xF0,
-0x20, 0x6A, 0x78, 0x67, 0xEF, 0xF5, 0x68, 0xDA,
+0x20, 0x6A, 0x78, 0x67, 0xEF, 0xF5, 0x64, 0xDA,
 0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A,
 0x80, 0xF0, 0x6C, 0x9A, 0x02, 0xF0, 0x00, 0x6C,
 0x8D, 0xEB, 0x80, 0xF0, 0x6C, 0xDA, 0x07, 0x97,
 0x04, 0x63, 0x00, 0xEF, 0xFB, 0x63, 0x09, 0x62,
 0x08, 0xD1, 0x07, 0xD0, 0x10, 0xF0, 0x24, 0x6B,
-0xBC, 0xF2, 0x70, 0x9B, 0x10, 0xF0, 0x24, 0x6A,
-0xB5, 0xF2, 0x15, 0x4A, 0x30, 0xF0, 0x20, 0x68,
-0x40, 0xDB, 0xEF, 0xF5, 0x0E, 0x48, 0x00, 0x69,
+0x9B, 0xF6, 0x6C, 0x9B, 0x10, 0xF0, 0x24, 0x6A,
+0x35, 0xF1, 0x1D, 0x4A, 0x30, 0xF0, 0x20, 0x68,
+0x40, 0xDB, 0xEF, 0xF5, 0x0A, 0x48, 0x00, 0x69,
 0x18, 0x6A, 0x58, 0xE9, 0x30, 0xF0, 0x20, 0x6B,
 0xEF, 0xF4, 0x08, 0x4B, 0x12, 0xEA, 0x69, 0xE2,
-0x00, 0xF1, 0x84, 0xA2, 0x01, 0x6B, 0x8C, 0xEB,
+0x00, 0xF1, 0x80, 0xA2, 0x01, 0x6B, 0x8C, 0xEB,
 0x27, 0x23, 0x00, 0xF0, 0x8A, 0x98, 0x00, 0xF0,
 0x66, 0x98, 0x63, 0xEC, 0x21, 0x61, 0x61, 0x80,
 0x81, 0x43, 0x04, 0xD4, 0x07, 0x2C, 0x00, 0xF0,
 0x4E, 0x98, 0x00, 0xF0, 0x92, 0x98, 0x40, 0xEA,
 0x04, 0x92, 0x14, 0x10, 0x80, 0xA0, 0x01, 0x4C,
 0x80, 0xC0, 0x80, 0xA0, 0x82, 0xEB, 0x08, 0x60,
-0x00, 0xF1, 0x84, 0xA2, 0x02, 0x6B, 0x6B, 0xEB,
-0x8C, 0xEB, 0x00, 0xF1, 0x64, 0xC2, 0x08, 0x10,
+0x00, 0xF1, 0x80, 0xA2, 0x02, 0x6B, 0x6B, 0xEB,
+0x8C, 0xEB, 0x00, 0xF1, 0x60, 0xC2, 0x08, 0x10,
 0x00, 0xF0, 0x4E, 0x98, 0x00, 0xF0, 0x92, 0x98,
 0x40, 0xEA, 0x00, 0x6A, 0x00, 0xF0, 0x4A, 0xD8,
 0x01, 0x49, 0x0A, 0x71, 0x18, 0x48, 0xC8, 0x61,
@@ -23960,7 +23888,7 @@ u8 array_mp_8821c_fw_nic[] = {
 0x14, 0x6E, 0x40, 0xEA, 0x05, 0x97, 0x03, 0x63,
 0x00, 0xEF, 0x00, 0x65, 0xFB, 0x63, 0x09, 0x62,
 0x08, 0xD1, 0x07, 0xD0, 0x24, 0x67, 0x00, 0x18,
-0xE2, 0xEA, 0x47, 0xA1, 0x66, 0xA1, 0x30, 0xF0,
+0x84, 0xEA, 0x47, 0xA1, 0x66, 0xA1, 0x30, 0xF0,
 0x20, 0x68, 0xC0, 0xF1, 0x08, 0x48, 0x40, 0x32,
 0xEB, 0xF6, 0x80, 0xA0, 0x69, 0xE2, 0x01, 0x69,
 0xEB, 0xF6, 0x52, 0xC8, 0x51, 0x67, 0x8C, 0xEA,
@@ -23977,13 +23905,13 @@ u8 array_mp_8821c_fw_nic[] = {
 0x54, 0xC0, 0x0C, 0x6A, 0x33, 0x60, 0x00, 0x6A,
 0xEB, 0xF6, 0x55, 0xC0, 0xEB, 0xF6, 0x56, 0xC0,
 0x00, 0x6A, 0xEB, 0xF6, 0x58, 0xC8, 0xEB, 0xF6,
-0x5A, 0xC8, 0x10, 0xF0, 0x24, 0x6A, 0x1C, 0xF4,
-0x48, 0x9A, 0xEB, 0xF6, 0xC1, 0xA0, 0x10, 0xF0,
+0x5A, 0xC8, 0x10, 0xF0, 0x24, 0x6A, 0xFB, 0xF7,
+0x44, 0x9A, 0xEB, 0xF6, 0xC1, 0xA0, 0x10, 0xF0,
 0x24, 0x6D, 0x60, 0xAA, 0xFF, 0xF7, 0x1F, 0x6A,
-0x9D, 0xF0, 0xBC, 0x9D, 0x6C, 0xEA, 0xD9, 0xE2,
+0x7C, 0xF4, 0xB4, 0x9D, 0x6C, 0xEA, 0xD9, 0xE2,
 0xDC, 0x36, 0x00, 0x6A, 0xB5, 0xE6, 0x10, 0xF0,
-0x24, 0x6E, 0x04, 0xD2, 0x05, 0xD2, 0x5C, 0xF4,
-0xD8, 0x9E, 0x30, 0xF0, 0x20, 0x6A, 0x30, 0xF0,
+0x24, 0x6E, 0x04, 0xD2, 0x05, 0xD2, 0x3C, 0xF0,
+0xD4, 0x9E, 0x30, 0xF0, 0x20, 0x6A, 0x30, 0xF0,
 0x20, 0x6B, 0xAE, 0xF2, 0x40, 0x9A, 0xCC, 0xF0,
 0x0E, 0x4B, 0x00, 0x6C, 0xD9, 0xE3, 0x40, 0xEA,
 0xEB, 0xF6, 0x54, 0xA0, 0x4D, 0xE9, 0xEB, 0xF6,
@@ -24020,23 +23948,23 @@ u8 array_mp_8821c_fw_nic[] = {
 0x6D, 0xE4, 0xEB, 0xF6, 0x7A, 0xCA, 0xEB, 0xF6,
 0x95, 0xA2, 0xEB, 0xF6, 0x62, 0xA2, 0x8E, 0xEB,
 0x09, 0x2B, 0x10, 0xF0, 0x24, 0x6C, 0x0B, 0xF7,
-0xC2, 0xA2, 0x35, 0xF6, 0x01, 0x4C, 0x04, 0xD3,
+0xC2, 0xA2, 0xB5, 0xF4, 0x09, 0x4C, 0x04, 0xD3,
 0x00, 0x6D, 0x09, 0x10, 0x0B, 0xF7, 0xC2, 0xA2,
 0x10, 0xF0, 0x24, 0x6C, 0x00, 0x6A, 0x04, 0xD2,
-0x15, 0xF6, 0x05, 0x4C, 0xA2, 0x67, 0x64, 0x6A,
+0x95, 0xF4, 0x0D, 0x4C, 0xA2, 0x67, 0x64, 0x6A,
 0x58, 0xEE, 0x01, 0x6F, 0x12, 0xEE, 0x00, 0x18,
-0xFC, 0xE9, 0x1B, 0x10, 0xEB, 0xF6, 0x74, 0xA0,
+0x9E, 0xE9, 0x1B, 0x10, 0xEB, 0xF6, 0x74, 0xA0,
 0x02, 0x6A, 0x4B, 0xEA, 0x6C, 0xEA, 0xEB, 0xF6,
 0x54, 0xC0, 0x02, 0x6C, 0xEB, 0xF6, 0xB2, 0xA8,
 0x0E, 0x10, 0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1,
 0x08, 0x4A, 0xEB, 0xF6, 0x94, 0xA2, 0x02, 0x6B,
 0x6B, 0xEB, 0xEB, 0xF6, 0xB2, 0xAA, 0x8C, 0xEB,
 0xEB, 0xF6, 0x74, 0xC2, 0x03, 0x6C, 0x00, 0x18,
-0xD5, 0xEA, 0x07, 0x97, 0x06, 0x90, 0x04, 0x63,
+0x77, 0xEA, 0x07, 0x97, 0x06, 0x90, 0x04, 0x63,
 0x00, 0xEF, 0x00, 0x65, 0xFD, 0x63, 0x05, 0x62,
 0x30, 0xF0, 0x20, 0x6A, 0xAC, 0xF0, 0x7C, 0xA2,
 0x01, 0x6A, 0x6C, 0xEA, 0x02, 0x22, 0x00, 0x18,
-0x28, 0xEB, 0x05, 0x97, 0x03, 0x63, 0x00, 0xEF,
+0xCA, 0xEA, 0x05, 0x97, 0x03, 0x63, 0x00, 0xEF,
 0xFB, 0x63, 0x09, 0x62, 0x08, 0xD1, 0x07, 0xD0,
 0x30, 0xF0, 0x20, 0x69, 0xC0, 0xF1, 0x08, 0x49,
 0xEB, 0xF6, 0x94, 0xA1, 0x01, 0x6A, 0xFF, 0x6B,
@@ -24051,7 +23979,7 @@ u8 array_mp_8821c_fw_nic[] = {
 0x52, 0x36, 0x30, 0xF0, 0x20, 0x6A, 0xAE, 0xF2,
 0x54, 0x9A, 0x6C, 0xED, 0x6C, 0xEE, 0x40, 0xEA,
 0x01, 0x72, 0x01, 0x6C, 0x01, 0x61, 0x00, 0x6C,
-0xEB, 0xF6, 0xB2, 0xA9, 0x00, 0x18, 0xD5, 0xEA,
+0xEB, 0xF6, 0xB2, 0xA9, 0x00, 0x18, 0x77, 0xEA,
 0x30, 0xF0, 0x20, 0x6A, 0xEE, 0xF4, 0x54, 0x9A,
 0x40, 0xEA, 0xD9, 0x10, 0x02, 0x6A, 0xAC, 0xEA,
 0x6C, 0xEA, 0x11, 0x22, 0xEB, 0xF6, 0x43, 0xA1,
@@ -24059,7 +23987,7 @@ u8 array_mp_8821c_fw_nic[] = {
 0x52, 0x36, 0x30, 0xF0, 0x20, 0x6A, 0xAE, 0xF2,
 0x54, 0x9A, 0x6C, 0xED, 0x6C, 0xEE, 0x40, 0xEA,
 0x01, 0x72, 0xA0, 0xF0, 0x14, 0x61, 0xEB, 0xF6,
-0xB2, 0xA9, 0x00, 0x6C, 0x00, 0x18, 0xD5, 0xEA,
+0xB2, 0xA9, 0x00, 0x6C, 0x00, 0x18, 0x77, 0xEA,
 0x30, 0xF0, 0x20, 0x6A, 0xAC, 0xF0, 0x4D, 0xA2,
 0x5A, 0x33, 0x02, 0x73, 0x0D, 0x60, 0x03, 0x73,
 0x0F, 0x60, 0x01, 0x73, 0x05, 0x60, 0x3F, 0x6E,
@@ -24070,7 +23998,7 @@ u8 array_mp_8821c_fw_nic[] = {
 0xD8, 0xEB, 0x12, 0xEE, 0x0A, 0x6A, 0x58, 0xEE,
 0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A,
 0xEB, 0xF6, 0x7A, 0xAA, 0x10, 0xF0, 0x24, 0x6C,
-0x15, 0xF6, 0x05, 0x4C, 0x12, 0xEE, 0x7B, 0xE6,
+0x95, 0xF4, 0x0D, 0x4C, 0x12, 0xEE, 0x7B, 0xE6,
 0x00, 0x6B, 0xEB, 0xF6, 0x75, 0xC2, 0x00, 0x6B,
 0xEB, 0xF6, 0x7A, 0xCA, 0xEB, 0xF6, 0x78, 0xCA,
 0x00, 0x6A, 0x04, 0xD2, 0xA2, 0x67, 0x64, 0x6A,
@@ -24080,7 +24008,7 @@ u8 array_mp_8821c_fw_nic[] = {
 0x30, 0xF0, 0x20, 0x6A, 0xAE, 0xF2, 0x54, 0x9A,
 0x6C, 0xED, 0x6C, 0xEE, 0x40, 0xEA, 0x01, 0x72,
 0x62, 0x61, 0xEB, 0xF6, 0xB2, 0xA9, 0x00, 0x6C,
-0x00, 0x18, 0xD5, 0xEA, 0x30, 0xF0, 0x20, 0x6A,
+0x00, 0x18, 0x77, 0xEA, 0x30, 0xF0, 0x20, 0x6A,
 0xC0, 0xF1, 0x08, 0x4A, 0xEB, 0xF6, 0x87, 0xA2,
 0xEB, 0xF6, 0x76, 0xA2, 0xFF, 0x4C, 0x6E, 0xEC,
 0x03, 0x2C, 0xEB, 0xF6, 0x66, 0xA2, 0x05, 0x10,
@@ -24098,16 +24026,16 @@ u8 array_mp_8821c_fw_nic[] = {
 0x08, 0x4B, 0xEB, 0xF6, 0x95, 0xC3, 0x00, 0x6C,
 0xEB, 0xF6, 0x9A, 0xCB, 0xEB, 0xF6, 0x98, 0xCB,
 0x00, 0x6B, 0x10, 0xF0, 0x24, 0x6C, 0x04, 0xD3,
-0x15, 0xF6, 0x05, 0x4C, 0xA3, 0x67, 0xD8, 0xEA,
-0x01, 0x6F, 0x12, 0xEE, 0x00, 0x18, 0xFC, 0xE9,
+0x95, 0xF4, 0x0D, 0x4C, 0xA3, 0x67, 0xD8, 0xEA,
+0x01, 0x6F, 0x12, 0xEE, 0x00, 0x18, 0x9E, 0xE9,
 0x1E, 0x10, 0xEB, 0xF6, 0xB2, 0xA9, 0x00, 0x6C,
-0x00, 0x18, 0xD5, 0xEA, 0xEB, 0xF6, 0x15, 0xC1,
+0x00, 0x18, 0x77, 0xEA, 0xEB, 0xF6, 0x15, 0xC1,
 0xEB, 0xF6, 0x1A, 0xC9, 0xEB, 0xF6, 0x18, 0xC9,
-0x00, 0x18, 0x81, 0xEB, 0x10, 0x10, 0x30, 0xF0,
+0x00, 0x18, 0x23, 0xEB, 0x10, 0x10, 0x30, 0xF0,
 0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A, 0xEB, 0xF6,
 0x94, 0xA2, 0x02, 0x6B, 0x6B, 0xEB, 0xEB, 0xF6,
 0xB2, 0xAA, 0x8C, 0xEB, 0xEB, 0xF6, 0x74, 0xC2,
-0x01, 0x6C, 0x00, 0x18, 0xD5, 0xEA, 0x09, 0x97,
+0x01, 0x6C, 0x00, 0x18, 0x77, 0xEA, 0x09, 0x97,
 0x08, 0x91, 0x07, 0x90, 0x05, 0x63, 0x00, 0xEF,
 0xFB, 0x63, 0x09, 0x62, 0x08, 0xD1, 0x07, 0xD0,
 0xFF, 0x6A, 0x04, 0x67, 0x25, 0x67, 0x4C, 0xEE,
@@ -24115,7 +24043,7 @@ u8 array_mp_8821c_fw_nic[] = {
 0xEE, 0xF4, 0x4C, 0x9A, 0x04, 0xD6, 0x90, 0x67,
 0xB1, 0x67, 0x40, 0xEA, 0x90, 0x67, 0x80, 0x18,
 0xB0, 0x2A, 0x30, 0xF0, 0x20, 0x6A, 0xEF, 0xF6,
-0x6B, 0xA2, 0x00, 0x6A, 0x09, 0x2B, 0x04, 0x97,
+0x67, 0xA2, 0x00, 0x6A, 0x09, 0x2B, 0x04, 0x97,
 0x30, 0xF0, 0x20, 0x6C, 0x25, 0xF6, 0x08, 0x4C,
 0xB0, 0x67, 0xD1, 0x67, 0x80, 0x18, 0x39, 0x2A,
 0x09, 0x97, 0x08, 0x91, 0x07, 0x90, 0x05, 0x63,
@@ -24139,62 +24067,62 @@ u8 array_mp_8821c_fw_nic[] = {
 0xFF, 0x6A, 0x8C, 0xEA, 0x04, 0x2A, 0x01, 0x6C,
 0x08, 0xF0, 0x00, 0x6D, 0x05, 0x10, 0x44, 0x32,
 0xFF, 0x4A, 0x01, 0x6D, 0x02, 0x6C, 0xA4, 0xEA,
-0x00, 0x18, 0x98, 0xE1, 0x05, 0x97, 0x03, 0x63,
+0x00, 0x18, 0x42, 0xE1, 0x05, 0x97, 0x03, 0x63,
 0x00, 0xEF, 0x00, 0x65, 0xFD, 0x63, 0x05, 0x62,
 0xFF, 0x6A, 0x8C, 0xEA, 0x04, 0x2A, 0x01, 0x6C,
 0x04, 0xF0, 0x00, 0x6D, 0x05, 0x10, 0xFF, 0x4A,
 0x44, 0x32, 0x01, 0x6D, 0x02, 0x6C, 0xA4, 0xEA,
-0x00, 0x18, 0x98, 0xE1, 0x05, 0x97, 0x03, 0x63,
+0x00, 0x18, 0x42, 0xE1, 0x05, 0x97, 0x03, 0x63,
 0x00, 0xEF, 0x00, 0x65, 0xFD, 0x63, 0x05, 0x62,
 0xFF, 0x6D, 0x8C, 0xED, 0x01, 0x6C, 0x44, 0x67,
 0x15, 0x4D, 0x44, 0xED, 0xA2, 0x67, 0x00, 0x18,
-0x17, 0xE1, 0x05, 0x97, 0x03, 0x63, 0x00, 0xEF,
+0xC1, 0xE0, 0x05, 0x97, 0x03, 0x63, 0x00, 0xEF,
 0xFD, 0x63, 0x05, 0x62, 0xFF, 0x6D, 0x8C, 0xED,
 0x04, 0x2D, 0x03, 0x6C, 0x10, 0xF0, 0x00, 0x6D,
 0x05, 0x10, 0x1B, 0x4D, 0x01, 0x6A, 0x44, 0xED,
-0x03, 0x6C, 0xA2, 0x67, 0x00, 0x18, 0x17, 0xE1,
+0x03, 0x6C, 0xA2, 0x67, 0x00, 0x18, 0xC1, 0xE0,
 0x05, 0x97, 0x03, 0x63, 0x00, 0xEF, 0x00, 0x65,
 0xFD, 0x63, 0x05, 0x62, 0xFF, 0x6A, 0x4C, 0xEC,
-0x00, 0x18, 0x2D, 0xEC, 0x01, 0x6D, 0x02, 0x6C,
-0xA4, 0xEA, 0x00, 0x18, 0x17, 0xE1, 0x05, 0x97,
+0x00, 0x18, 0xCF, 0xEB, 0x01, 0x6D, 0x02, 0x6C,
+0xA4, 0xEA, 0x00, 0x18, 0xC1, 0xE0, 0x05, 0x97,
 0x03, 0x63, 0x00, 0xEF, 0xFD, 0x63, 0x05, 0x62,
-0xFF, 0x6A, 0x4C, 0xEC, 0x00, 0x18, 0x2D, 0xEC,
+0xFF, 0x6A, 0x4C, 0xEC, 0x00, 0x18, 0xCF, 0xEB,
 0x01, 0x6D, 0x03, 0x6C, 0xA4, 0xEA, 0x00, 0x18,
-0x17, 0xE1, 0x05, 0x97, 0x03, 0x63, 0x00, 0xEF,
+0xC1, 0xE0, 0x05, 0x97, 0x03, 0x63, 0x00, 0xEF,
 0xFD, 0x63, 0x05, 0x62, 0xFF, 0x6D, 0x8C, 0xED,
 0x18, 0x4D, 0x01, 0x6A, 0x44, 0xED, 0x00, 0x6C,
-0xA2, 0x67, 0x00, 0x18, 0x17, 0xE1, 0x05, 0x97,
+0xA2, 0x67, 0x00, 0x18, 0xC1, 0xE0, 0x05, 0x97,
 0x03, 0x63, 0x00, 0xEF, 0xFD, 0x63, 0x05, 0x62,
 0xFF, 0x6D, 0x8C, 0xED, 0x01, 0x6C, 0x44, 0x67,
 0x15, 0x4D, 0x44, 0xED, 0xA2, 0x67, 0x00, 0x18,
-0x48, 0xE1, 0x05, 0x97, 0x03, 0x63, 0x00, 0xEF,
+0xF2, 0xE0, 0x05, 0x97, 0x03, 0x63, 0x00, 0xEF,
 0xFD, 0x63, 0x05, 0x62, 0xFF, 0x6D, 0x8C, 0xED,
 0x04, 0x2D, 0x03, 0x6C, 0x10, 0xF0, 0x00, 0x6D,
 0x05, 0x10, 0x1B, 0x4D, 0x01, 0x6A, 0x44, 0xED,
-0x03, 0x6C, 0xA2, 0x67, 0x00, 0x18, 0x48, 0xE1,
+0x03, 0x6C, 0xA2, 0x67, 0x00, 0x18, 0xF2, 0xE0,
 0x05, 0x97, 0x03, 0x63, 0x00, 0xEF, 0x00, 0x65,
 0xFD, 0x63, 0x05, 0x62, 0xFF, 0x6A, 0x4C, 0xEC,
-0x00, 0x18, 0x2D, 0xEC, 0x01, 0x6D, 0x02, 0x6C,
-0xA4, 0xEA, 0x00, 0x18, 0x48, 0xE1, 0x05, 0x97,
+0x00, 0x18, 0xCF, 0xEB, 0x01, 0x6D, 0x02, 0x6C,
+0xA4, 0xEA, 0x00, 0x18, 0xF2, 0xE0, 0x05, 0x97,
 0x03, 0x63, 0x00, 0xEF, 0xFD, 0x63, 0x05, 0x62,
-0xFF, 0x6A, 0x4C, 0xEC, 0x00, 0x18, 0x2D, 0xEC,
+0xFF, 0x6A, 0x4C, 0xEC, 0x00, 0x18, 0xCF, 0xEB,
 0x01, 0x6D, 0x03, 0x6C, 0xA4, 0xEA, 0x00, 0x18,
-0x48, 0xE1, 0x05, 0x97, 0x03, 0x63, 0x00, 0xEF,
+0xF2, 0xE0, 0x05, 0x97, 0x03, 0x63, 0x00, 0xEF,
 0xDE, 0x63, 0x43, 0x62, 0x42, 0xD1, 0x41, 0xD0,
 0x01, 0x6A, 0x7D, 0x67, 0x4B, 0xEA, 0x54, 0xC3,
 0x0F, 0x6A, 0x56, 0xC3, 0x10, 0x6A, 0x57, 0xC3,
-0x10, 0xF0, 0x24, 0x6A, 0xBC, 0xF7, 0x44, 0x9A,
+0x10, 0xF0, 0x24, 0x6A, 0x9C, 0xF3, 0x40, 0x9A,
 0xFF, 0x69, 0x8C, 0xE9, 0x30, 0x31, 0x49, 0xE1,
 0x40, 0x9A, 0x30, 0xF0, 0x20, 0x68, 0x06, 0x04,
 0x04, 0xD2, 0x4E, 0xF2, 0x50, 0x98, 0x04, 0x05,
 0x04, 0x6E, 0x40, 0xEA, 0x10, 0xF0, 0x24, 0x6A,
-0x1C, 0xF6, 0x48, 0x9A, 0x07, 0x04, 0x04, 0x05,
+0xFC, 0xF1, 0x44, 0x9A, 0x07, 0x04, 0x04, 0x05,
 0x49, 0xE1, 0x40, 0x9A, 0x04, 0x6E, 0x04, 0xD2,
 0x4E, 0xF2, 0x50, 0x98, 0x40, 0xEA, 0x10, 0xF0,
-0x24, 0x6A, 0xFC, 0xF5, 0x5C, 0x9A, 0x08, 0x04,
+0x24, 0x6A, 0xDC, 0xF1, 0x58, 0x9A, 0x08, 0x04,
 0x04, 0x05, 0x49, 0xE1, 0x40, 0x9A, 0x04, 0x6E,
 0x04, 0xD2, 0x4E, 0xF2, 0x50, 0x98, 0x40, 0xEA,
-0x10, 0xF0, 0x24, 0x6A, 0x1C, 0xF6, 0x50, 0x9A,
+0x10, 0xF0, 0x24, 0x6A, 0xFC, 0xF1, 0x4C, 0x9A,
 0x09, 0x04, 0x04, 0x05, 0x45, 0xE1, 0x40, 0x99,
 0x04, 0x6E, 0x04, 0xD2, 0x4E, 0xF2, 0x50, 0x98,
 0x40, 0xEA, 0x30, 0xF0, 0x20, 0x6A, 0xAE, 0xF2,
@@ -24202,15 +24130,15 @@ u8 array_mp_8821c_fw_nic[] = {
 0x42, 0x91, 0x41, 0x90, 0x22, 0x63, 0x00, 0xEF,
 0xFC, 0x63, 0x07, 0x62, 0x06, 0xD1, 0x05, 0xD0,
 0x10, 0xF0, 0x24, 0x6A, 0x10, 0xF0, 0x24, 0x6B,
-0xDD, 0xF0, 0x50, 0x9A, 0xDD, 0xF0, 0x74, 0x9B,
+0xBC, 0xF4, 0x48, 0x9A, 0xBC, 0xF4, 0x6C, 0x9B,
 0x00, 0xA2, 0x20, 0xA3, 0xFF, 0x6A, 0x4C, 0xE8,
 0x4C, 0xE9, 0x2A, 0xE8, 0x43, 0x60, 0x10, 0xF0,
-0x24, 0x6A, 0xBC, 0xF7, 0x44, 0x9A, 0x10, 0x33,
+0x24, 0x6A, 0x9C, 0xF3, 0x40, 0x9A, 0x10, 0x33,
 0x49, 0xE3, 0x40, 0xA2, 0xFF, 0x6B, 0x6C, 0xEA,
 0x56, 0x32, 0x6C, 0xEA, 0x07, 0x5A, 0x2C, 0x60,
-0x10, 0xF0, 0x24, 0x6B, 0x48, 0x32, 0x5C, 0xF2,
-0x18, 0x4B, 0x4D, 0xE3, 0x40, 0x9B, 0x00, 0xEA,
-0x30, 0xF0, 0x20, 0x6A, 0xEF, 0xF6, 0x4B, 0xA2,
+0x10, 0xF0, 0x24, 0x6B, 0x48, 0x32, 0x3B, 0xF6,
+0x14, 0x4B, 0x4D, 0xE3, 0x40, 0x9B, 0x00, 0xEA,
+0x30, 0xF0, 0x20, 0x6A, 0xEF, 0xF6, 0x47, 0xA2,
 0x1F, 0x2A, 0x30, 0xF0, 0x20, 0x6A, 0x6E, 0xF2,
 0x54, 0x9A, 0x18, 0x10, 0x30, 0xF0, 0x20, 0x6A,
 0x4E, 0xF2, 0x5C, 0x9A, 0x13, 0x10, 0x30, 0xF0,
@@ -24220,101 +24148,101 @@ u8 array_mp_8821c_fw_nic[] = {
 0x48, 0x9A, 0x04, 0x10, 0x30, 0xF0, 0x20, 0x6A,
 0x6E, 0xF2, 0x4C, 0x9A, 0x90, 0x67, 0x40, 0xEA,
 0x01, 0x48, 0x7F, 0x6A, 0x4C, 0xE8, 0x0A, 0xE9,
-0xC2, 0x61, 0x10, 0xF0, 0x24, 0x6A, 0xDD, 0xF0,
-0x50, 0x9A, 0x20, 0xC2, 0x07, 0x97, 0x06, 0x91,
+0xC2, 0x61, 0x10, 0xF0, 0x24, 0x6A, 0xBC, 0xF4,
+0x48, 0x9A, 0x20, 0xC2, 0x07, 0x97, 0x06, 0x91,
 0x05, 0x90, 0x04, 0x63, 0x00, 0xEF, 0x00, 0x65,
 0xFC, 0x63, 0x07, 0x62, 0x06, 0xD1, 0x05, 0xD0,
-0x10, 0xF0, 0x24, 0x6A, 0x5D, 0xF0, 0x7C, 0x9A,
+0x10, 0xF0, 0x24, 0x6A, 0x3C, 0xF4, 0x74, 0x9A,
 0x02, 0x6C, 0x00, 0xF4, 0x00, 0x6D, 0x40, 0x9B,
 0x30, 0xF0, 0x20, 0x69, 0x8D, 0xEA, 0x40, 0xDB,
-0x10, 0xF0, 0x24, 0x6A, 0x1D, 0xF0, 0x64, 0x9A,
+0x10, 0xF0, 0x24, 0x6A, 0xFC, 0xF3, 0x60, 0x9A,
 0xFF, 0xF7, 0x1F, 0x6C, 0x40, 0xAB, 0x8C, 0xEA,
 0xAD, 0xEA, 0x8C, 0xEA, 0x40, 0xCB, 0x10, 0xF0,
-0x24, 0x6A, 0xDD, 0xF0, 0x18, 0x9A, 0x10, 0xF0,
-0x24, 0x6B, 0xDD, 0xF0, 0x1C, 0x4B, 0x40, 0x98,
+0x24, 0x6A, 0xBC, 0xF4, 0x10, 0x9A, 0x10, 0xF0,
+0x24, 0x6B, 0xBC, 0xF4, 0x14, 0x4B, 0x40, 0x98,
 0x60, 0x9B, 0x0A, 0x6C, 0x6C, 0xEA, 0x10, 0xF0,
-0x24, 0x6B, 0x5C, 0xF3, 0x74, 0x9B, 0x6D, 0xEA,
+0x24, 0x6B, 0x5B, 0xF7, 0x64, 0x9B, 0x6D, 0xEA,
 0x40, 0xD8, 0xCE, 0xF4, 0x5C, 0x99, 0x40, 0xEA,
 0x40, 0x98, 0xDF, 0xF7, 0x01, 0x6B, 0x6B, 0xEB,
-0x6C, 0xEA, 0x10, 0xF0, 0x24, 0x6B, 0xFD, 0xF0,
-0x60, 0x9B, 0x0A, 0x6C, 0x6D, 0xEA, 0x40, 0xD8,
+0x6C, 0xEA, 0x10, 0xF0, 0x24, 0x6B, 0xBC, 0xF4,
+0x78, 0x9B, 0x0A, 0x6C, 0x6D, 0xEA, 0x40, 0xD8,
 0xCE, 0xF4, 0x5C, 0x99, 0x40, 0xEA, 0x10, 0xF0,
-0x24, 0x6C, 0xDD, 0xF0, 0x1C, 0x4C, 0x40, 0x98,
+0x24, 0x6C, 0xBC, 0xF4, 0x14, 0x4C, 0x40, 0x98,
 0x80, 0x9C, 0x8C, 0xEA, 0x40, 0xD8, 0xCE, 0xF4,
 0x5C, 0x99, 0x0A, 0x6C, 0x40, 0xEA, 0x40, 0x98,
 0x1D, 0xF0, 0x01, 0x6B, 0x6B, 0xEB, 0x6C, 0xEA,
-0x10, 0xF0, 0x24, 0x6B, 0xFD, 0xF0, 0x64, 0x9B,
+0x10, 0xF0, 0x24, 0x6B, 0xBC, 0xF4, 0x7C, 0x9B,
 0x0A, 0x6C, 0x6D, 0xEA, 0x40, 0xD8, 0xCE, 0xF4,
 0x5C, 0x99, 0x40, 0xEA, 0x07, 0x97, 0x06, 0x91,
 0x05, 0x90, 0x04, 0x63, 0x00, 0xEF, 0x00, 0x65,
-0x10, 0xF0, 0x24, 0x6B, 0xFD, 0xF0, 0xA8, 0x9B,
+0x10, 0xF0, 0x24, 0x6B, 0xDC, 0xF4, 0xA0, 0x9B,
 0xFF, 0x6A, 0x08, 0x6E, 0x60, 0xA5, 0xCB, 0xEE,
 0x4C, 0xEC, 0x4C, 0xEB, 0xCC, 0xEB, 0x6D, 0xEC,
-0x10, 0xF0, 0x24, 0x6B, 0xFD, 0xF0, 0x6C, 0x9B,
+0x10, 0xF0, 0x24, 0x6B, 0xDC, 0xF4, 0x64, 0x9B,
 0x4C, 0xEC, 0x80, 0xC5, 0x60, 0xA3, 0x6C, 0xEA,
 0x20, 0xE8, 0x00, 0x65, 0x10, 0xF0, 0x24, 0x6B,
-0xFD, 0xF0, 0xC8, 0x9B, 0xFF, 0x6A, 0x08, 0x6F,
+0xDC, 0xF4, 0xC0, 0x9B, 0xFF, 0x6A, 0x08, 0x6F,
 0x60, 0xA6, 0xEB, 0xEF, 0x4C, 0xEC, 0x4C, 0xEB,
 0xEC, 0xEB, 0x6D, 0xEC, 0x4C, 0xED, 0x4C, 0xEC,
-0x10, 0xF0, 0x24, 0x6A, 0xFD, 0xF0, 0x4C, 0x9A,
+0x10, 0xF0, 0x24, 0x6A, 0xDC, 0xF4, 0x44, 0x9A,
 0x80, 0xC6, 0xA0, 0xC2, 0x20, 0xE8, 0x00, 0x65,
 0xFC, 0x63, 0x07, 0x62, 0x06, 0xD1, 0x05, 0xD0,
-0x00, 0x6C, 0x00, 0x18, 0x39, 0xEE, 0x30, 0xF0,
+0x00, 0x6C, 0x00, 0x18, 0xDB, 0xED, 0x30, 0xF0,
 0x20, 0x6A, 0xCE, 0xF2, 0x40, 0x9A, 0x01, 0x68,
 0x0B, 0xE8, 0x40, 0xEA, 0x30, 0xF0, 0x20, 0x69,
 0x01, 0xF4, 0x00, 0x6C, 0xB0, 0x67, 0x00, 0x18,
-0x42, 0xE7, 0xCE, 0xF4, 0x70, 0x99, 0x04, 0x6E,
+0xE4, 0xE6, 0xCE, 0xF4, 0x70, 0x99, 0x04, 0x6E,
 0xCB, 0xEE, 0x4C, 0xEE, 0x01, 0xF4, 0x00, 0x6C,
 0xB0, 0x67, 0x40, 0xEB, 0x00, 0x6C, 0xA4, 0x67,
-0xD0, 0x67, 0x00, 0x18, 0x8D, 0xE7, 0x00, 0x6C,
+0xD0, 0x67, 0x00, 0x18, 0x2F, 0xE7, 0x00, 0x6C,
 0xE4, 0x67, 0x30, 0xF0, 0x20, 0x6B, 0xA4, 0x67,
-0xD0, 0x67, 0x8F, 0xF5, 0x58, 0xCB, 0x00, 0x18,
-0xA0, 0xE7, 0x10, 0xF0, 0x24, 0x6A, 0x1C, 0xF5,
-0x7C, 0x9A, 0xFE, 0x6A, 0xB0, 0x67, 0x80, 0xA3,
+0xD0, 0x67, 0x8F, 0xF5, 0x54, 0xCB, 0x00, 0x18,
+0x42, 0xE7, 0x10, 0xF0, 0x24, 0x6A, 0xFC, 0xF0,
+0x78, 0x9A, 0xFE, 0x6A, 0xB0, 0x67, 0x80, 0xA3,
 0x8C, 0xEA, 0x40, 0xC3, 0xA1, 0xF0, 0x14, 0x6C,
-0x00, 0x18, 0x42, 0xE7, 0xCE, 0xF4, 0x70, 0x99,
+0x00, 0x18, 0xE4, 0xE6, 0xCE, 0xF4, 0x70, 0x99,
 0x40, 0x6E, 0xA1, 0xF0, 0x14, 0x6C, 0xB0, 0x67,
-0x4D, 0xEE, 0x40, 0xEB, 0x00, 0x18, 0x0C, 0xC9,
+0x4D, 0xEE, 0x40, 0xEB, 0x00, 0x18, 0x0B, 0xC9,
 0x01, 0x72, 0x06, 0x61, 0x10, 0xF0, 0x24, 0x6A,
-0x1D, 0xF0, 0x44, 0x9A, 0x3F, 0x6B, 0x60, 0xC2,
-0x10, 0xF0, 0x24, 0x6A, 0xFD, 0xF0, 0x70, 0x9A,
+0xFC, 0xF3, 0x40, 0x9A, 0x3F, 0x6B, 0x60, 0xC2,
+0x10, 0xF0, 0x24, 0x6A, 0xDC, 0xF4, 0x68, 0x9A,
 0xFD, 0x6A, 0x80, 0xA3, 0x8C, 0xEA, 0x40, 0xC3,
 0x07, 0x97, 0x06, 0x91, 0x05, 0x90, 0x04, 0x63,
 0x00, 0xEF, 0x00, 0x65, 0xFC, 0x63, 0x07, 0x62,
 0x06, 0xD1, 0x05, 0xD0, 0x10, 0xF0, 0x24, 0x6A,
-0xFD, 0xF0, 0x70, 0x9A, 0xFF, 0x69, 0x02, 0x6C,
+0xDC, 0xF4, 0x68, 0x9A, 0xFF, 0x69, 0x02, 0x6C,
 0x40, 0xA3, 0x01, 0x68, 0x0B, 0xE8, 0x2C, 0xEA,
 0x8D, 0xEA, 0x2C, 0xEA, 0x40, 0xC3, 0x10, 0xF0,
-0x24, 0x6A, 0x1D, 0xF0, 0x44, 0x9A, 0x01, 0x6B,
+0x24, 0x6A, 0xFC, 0xF3, 0x40, 0x9A, 0x01, 0x6B,
 0x6B, 0xEB, 0x60, 0xC2, 0x10, 0xF0, 0x24, 0x6A,
-0xFD, 0xF0, 0x54, 0x9A, 0x09, 0x6B, 0xB0, 0x67,
-0x60, 0xC2, 0x10, 0xF0, 0x24, 0x6A, 0x3C, 0xF5,
-0x44, 0x9A, 0x7A, 0x6B, 0x6B, 0xEB, 0x60, 0xC2,
-0xA1, 0xF0, 0x12, 0x4C, 0x00, 0x18, 0x42, 0xE7,
+0xDC, 0xF4, 0x4C, 0x9A, 0x09, 0x6B, 0xB0, 0x67,
+0x60, 0xC2, 0x10, 0xF0, 0x24, 0x6A, 0x1C, 0xF1,
+0x40, 0x9A, 0x7A, 0x6B, 0x6B, 0xEB, 0x60, 0xC2,
+0xA1, 0xF0, 0x12, 0x4C, 0x00, 0x18, 0xE4, 0xE6,
 0x30, 0xF0, 0x20, 0x6C, 0xCE, 0xF4, 0x70, 0x9C,
 0x41, 0x6E, 0xCB, 0xEE, 0xB0, 0x67, 0x4C, 0xEE,
 0xA1, 0xF0, 0x14, 0x6C, 0x40, 0xEB, 0x10, 0xF0,
-0x24, 0x6A, 0x1C, 0xF5, 0x7C, 0x9A, 0x01, 0x6C,
+0x24, 0x6A, 0xFC, 0xF0, 0x78, 0x9A, 0x01, 0x6C,
 0x40, 0xA3, 0x2C, 0xEA, 0x8D, 0xEA, 0x2C, 0xEA,
 0x40, 0xC3, 0x30, 0xF0, 0x20, 0x6A, 0xCE, 0xF4,
 0x5C, 0x9A, 0x01, 0xF3, 0x01, 0x49, 0x40, 0xEA,
-0x30, 0xF0, 0x20, 0x6A, 0x8F, 0xF5, 0xF8, 0xAA,
-0x10, 0xF0, 0x24, 0x6A, 0xDC, 0xF3, 0x48, 0x9A,
+0x30, 0xF0, 0x20, 0x6A, 0x8F, 0xF5, 0xF4, 0xAA,
+0x10, 0xF0, 0x24, 0x6A, 0xBB, 0xF7, 0x44, 0x9A,
 0x00, 0x6C, 0xD0, 0x67, 0x4D, 0xEF, 0xA4, 0x67,
-0x00, 0x18, 0xA0, 0xE7, 0x91, 0x67, 0xB0, 0x67,
-0x00, 0x18, 0x42, 0xE7, 0x30, 0xF0, 0x20, 0x6C,
+0x00, 0x18, 0x42, 0xE7, 0x91, 0x67, 0xB0, 0x67,
+0x00, 0x18, 0xE4, 0xE6, 0x30, 0xF0, 0x20, 0x6C,
 0xCE, 0xF4, 0x70, 0x9C, 0x03, 0x6E, 0xB0, 0x67,
 0x4D, 0xEE, 0x91, 0x67, 0x40, 0xEB, 0x01, 0x6C,
-0x00, 0x18, 0x39, 0xEE, 0x00, 0x18, 0x00, 0xD6,
+0x00, 0x18, 0xDB, 0xED, 0x00, 0x18, 0xEE, 0xD5,
 0x07, 0x97, 0x06, 0x91, 0x05, 0x90, 0x04, 0x63,
 0x00, 0xEF, 0x00, 0x65, 0x10, 0xF0, 0x24, 0x6A,
-0x1D, 0xF1, 0x4C, 0x9A, 0x30, 0xF0, 0x20, 0x6B,
+0xFC, 0xF4, 0x44, 0x9A, 0x30, 0xF0, 0x20, 0x6B,
 0xC0, 0xF1, 0x08, 0x4B, 0x80, 0xA2, 0xEB, 0xF6,
 0xD4, 0xA3, 0xEB, 0xF6, 0x9C, 0xC3, 0xA0, 0xAA,
 0x01, 0xF0, 0x00, 0x6C, 0xAC, 0xEC, 0x83, 0x35,
 0x03, 0x6C, 0xAE, 0x35, 0x8B, 0xEC, 0xA4, 0x35,
 0xCC, 0xEC, 0xAD, 0xEC, 0xEB, 0xF6, 0x94, 0xC3,
-0x10, 0xF0, 0x24, 0x6C, 0x1D, 0xF1, 0x90, 0x9C,
+0x10, 0xF0, 0x24, 0x6C, 0xFC, 0xF4, 0x88, 0x9C,
 0xA0, 0xAC, 0xEB, 0xF6, 0xBE, 0xCB, 0xA0, 0xAA,
 0xBF, 0xF7, 0x1F, 0x6B, 0xAC, 0xEB, 0x60, 0xCA,
 0xA0, 0xAA, 0x7F, 0xF7, 0x1F, 0x6B, 0xAC, 0xEB,
@@ -24324,9 +24252,9 @@ u8 array_mp_8821c_fw_nic[] = {
 0x6D, 0xEA, 0xAC, 0xEA, 0x40, 0xCC, 0x20, 0xE8,
 0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A,
 0x10, 0xF0, 0x24, 0x6B, 0xEB, 0xF6, 0x9C, 0xA2,
-0x1D, 0xF1, 0x6C, 0x9B, 0x01, 0x6E, 0x80, 0xC3,
+0xFC, 0xF4, 0x64, 0x9B, 0x01, 0x6E, 0x80, 0xC3,
 0x10, 0xF0, 0x24, 0x6C, 0xEB, 0xF6, 0xBE, 0xAA,
-0x1D, 0xF1, 0x90, 0x9C, 0xA0, 0xCC, 0xEB, 0xF6,
+0xFC, 0xF4, 0x88, 0x9C, 0xA0, 0xCC, 0xEB, 0xF6,
 0x54, 0xA2, 0x80, 0xAB, 0xFF, 0xF7, 0x1F, 0x6D,
 0x46, 0x32, 0xCC, 0xEA, 0xAC, 0xEC, 0x40, 0x32,
 0xFE, 0xF7, 0x1E, 0x4E, 0x4C, 0x32, 0xCC, 0xEC,
@@ -24335,12 +24263,12 @@ u8 array_mp_8821c_fw_nic[] = {
 0xFF, 0x6A, 0x04, 0x67, 0x4C, 0xE8, 0x30, 0x70,
 0x26, 0x67, 0x4C, 0xED, 0x09, 0x61, 0x41, 0xA6,
 0x0C, 0x72, 0x06, 0x61, 0x30, 0xF0, 0x21, 0x6A,
-0xD0, 0xF4, 0x4F, 0xA2, 0x00, 0x6B, 0x44, 0x2A,
-0x10, 0xF0, 0x24, 0x6A, 0x9C, 0xF6, 0x60, 0x9A,
+0xD0, 0xF4, 0x43, 0xA2, 0x00, 0x6B, 0x44, 0x2A,
+0x10, 0xF0, 0x24, 0x6A, 0x5C, 0xF2, 0x7C, 0x9A,
 0xFF, 0x6C, 0x08, 0x6E, 0x40, 0xA3, 0xCB, 0xEE,
 0x8C, 0xEA, 0xCC, 0xEA, 0x05, 0x6E, 0xCD, 0xEA,
 0x8C, 0xEA, 0x40, 0xC3, 0x10, 0xF0, 0x24, 0x6A,
-0x9C, 0xF6, 0x44, 0x9A, 0x60, 0xA2, 0x0F, 0x6A,
+0x7C, 0xF2, 0x40, 0x9A, 0x60, 0xA2, 0x0F, 0x6A,
 0x6C, 0xEA, 0x04, 0x72, 0x1C, 0x61, 0x30, 0xF0,
 0x20, 0x6A, 0xAE, 0xF3, 0x5C, 0x9A, 0x90, 0x67,
 0xD1, 0x67, 0x40, 0xEA, 0x01, 0x72, 0x01, 0x6B,
@@ -24358,9 +24286,9 @@ u8 array_mp_8821c_fw_nic[] = {
 0x20, 0x6A, 0xCE, 0xF3, 0x4C, 0x9A, 0x00, 0x6C,
 0x40, 0xEA, 0x1C, 0x10, 0x41, 0xA1, 0x0D, 0x72,
 0x0E, 0x61, 0x01, 0x6A, 0x6E, 0xEA, 0x06, 0x2A,
-0x30, 0xF0, 0x21, 0x6B, 0xD0, 0xF4, 0x4F, 0xC3,
+0x30, 0xF0, 0x21, 0x6B, 0xD0, 0xF4, 0x43, 0xC3,
 0x01, 0x6D, 0x09, 0x10, 0x01, 0x6C, 0x30, 0xF0,
-0x21, 0x6A, 0xD0, 0xF4, 0x8F, 0xC2, 0x01, 0x6A,
+0x21, 0x6A, 0xD0, 0xF4, 0x83, 0xC2, 0x01, 0x6A,
 0x4E, 0xEB, 0x01, 0x5B, 0xB8, 0x67, 0x30, 0xF0,
 0x20, 0x6A, 0xCE, 0xF3, 0x54, 0x9A, 0xC0, 0xA1,
 0x00, 0x6C, 0x40, 0xEA, 0x30, 0xF0, 0x20, 0x6A,
@@ -24368,52 +24296,52 @@ u8 array_mp_8821c_fw_nic[] = {
 0x04, 0x6C, 0x8D, 0xEB, 0x80, 0xF0, 0x6C, 0xDA,
 0x07, 0x97, 0x06, 0x91, 0x05, 0x90, 0x04, 0x63,
 0x00, 0xEF, 0x00, 0x65, 0xFD, 0x63, 0x05, 0x62,
-0x04, 0xD0, 0x10, 0xF0, 0x24, 0x6A, 0x1D, 0xF1,
-0x54, 0x9A, 0xEF, 0xF7, 0x1F, 0x68, 0x02, 0x6B,
+0x04, 0xD0, 0x10, 0xF0, 0x24, 0x6A, 0xFC, 0xF4,
+0x4C, 0x9A, 0xEF, 0xF7, 0x1F, 0x68, 0x02, 0x6B,
 0x40, 0xAA, 0x4C, 0xE8, 0x30, 0xF0, 0x20, 0x6A,
-0xCF, 0xF5, 0x58, 0xAA, 0x0E, 0xEA, 0x6C, 0xEA,
-0x02, 0x22, 0x00, 0x18, 0xFC, 0xEC, 0x02, 0x6B,
+0xCF, 0xF5, 0x54, 0xAA, 0x0E, 0xEA, 0x6C, 0xEA,
+0x02, 0x22, 0x00, 0x18, 0x9E, 0xEC, 0x02, 0x6B,
 0x50, 0x67, 0x6C, 0xEA, 0x08, 0x2A, 0x30, 0xF0,
-0x20, 0x6A, 0xCF, 0xF5, 0x58, 0xAA, 0x6C, 0xEA,
-0x02, 0x2A, 0x00, 0x18, 0xFC, 0xEC, 0x30, 0xF0,
-0x20, 0x6A, 0xCF, 0xF5, 0x58, 0xAA, 0x80, 0x6B,
+0x20, 0x6A, 0xCF, 0xF5, 0x54, 0xAA, 0x6C, 0xEA,
+0x02, 0x2A, 0x00, 0x18, 0x9E, 0xEC, 0x30, 0xF0,
+0x20, 0x6A, 0xCF, 0xF5, 0x54, 0xAA, 0x80, 0x6B,
 0x0E, 0xEA, 0x6C, 0xEA, 0x06, 0x22, 0x0C, 0xEB,
 0x04, 0x2B, 0x00, 0x6C, 0x01, 0x6D, 0x00, 0x18,
-0x0A, 0xD6, 0x30, 0xF0, 0x20, 0x6A, 0xCF, 0xF5,
-0x18, 0xCA, 0x05, 0x97, 0x04, 0x90, 0x03, 0x63,
+0xF8, 0xD5, 0x30, 0xF0, 0x20, 0x6A, 0xCF, 0xF5,
+0x14, 0xCA, 0x05, 0x97, 0x04, 0x90, 0x03, 0x63,
 0x00, 0xEF, 0x00, 0x65, 0xFD, 0x63, 0x05, 0x62,
 0x04, 0xD0, 0x01, 0x74, 0x1C, 0x60, 0x05, 0x24,
 0x02, 0x74, 0x0E, 0x60, 0x03, 0x74, 0x51, 0x60,
-0x5B, 0x10, 0x10, 0xF0, 0x24, 0x6A, 0x3D, 0xF1,
-0x60, 0x9A, 0x10, 0xF0, 0x24, 0x6C, 0x3D, 0xF1,
-0x84, 0x9C, 0x40, 0x9B, 0x8C, 0xEA, 0x40, 0xDB,
-0x10, 0xF0, 0x24, 0x6A, 0x3D, 0xF1, 0x68, 0x9A,
-0x10, 0xF0, 0x24, 0x6C, 0x7C, 0xF4, 0x80, 0x9C,
+0x5B, 0x10, 0x10, 0xF0, 0x24, 0x6A, 0xFC, 0xF4,
+0x78, 0x9A, 0x10, 0xF0, 0x24, 0x6C, 0xFC, 0xF4,
+0x9C, 0x9C, 0x40, 0x9B, 0x8C, 0xEA, 0x40, 0xDB,
+0x10, 0xF0, 0x24, 0x6A, 0x1C, 0xF5, 0x60, 0x9A,
+0x10, 0xF0, 0x24, 0x6C, 0x3C, 0xF0, 0x9C, 0x9C,
 0x40, 0x9B, 0x8C, 0xEA, 0x44, 0x10, 0x10, 0xF0,
-0x24, 0x6A, 0x3D, 0xF1, 0x60, 0x9A, 0x10, 0xF0,
-0x24, 0x6C, 0x3D, 0xF1, 0x84, 0x9C, 0x40, 0x9B,
-0x8C, 0xEA, 0x10, 0xF0, 0x24, 0x6C, 0xFC, 0xF3,
-0x84, 0x9C, 0x8D, 0xEA, 0x40, 0xDB, 0x30, 0xF0,
-0x20, 0x6A, 0xCF, 0xF5, 0x58, 0xAA, 0x80, 0x6B,
+0x24, 0x6A, 0xFC, 0xF4, 0x78, 0x9A, 0x10, 0xF0,
+0x24, 0x6C, 0xFC, 0xF4, 0x9C, 0x9C, 0x40, 0x9B,
+0x8C, 0xEA, 0x10, 0xF0, 0x24, 0x6C, 0xDB, 0xF7,
+0x80, 0x9C, 0x8D, 0xEA, 0x40, 0xDB, 0x30, 0xF0,
+0x20, 0x6A, 0xCF, 0xF5, 0x54, 0xAA, 0x80, 0x6B,
 0x6C, 0xEA, 0x1F, 0x22, 0x30, 0xF0, 0x20, 0x6A,
 0x48, 0xF5, 0x40, 0xA2, 0x05, 0x5A, 0x19, 0x60,
-0x01, 0x6C, 0xA4, 0x67, 0x00, 0x18, 0x0A, 0xD6,
+0x01, 0x6C, 0xA4, 0x67, 0x00, 0x18, 0xF8, 0xD5,
 0x0A, 0x68, 0x01, 0x6E, 0x00, 0x6C, 0x01, 0x6D,
-0xCB, 0xEE, 0x00, 0x18, 0x8D, 0xE7, 0x04, 0x6B,
+0xCB, 0xEE, 0x00, 0x18, 0x2F, 0xE7, 0x04, 0x6B,
 0x4C, 0xEB, 0x02, 0x23, 0x01, 0x68, 0x04, 0x10,
-0x01, 0x6C, 0xA4, 0x67, 0x00, 0x18, 0x0A, 0xD6,
+0x01, 0x6C, 0xA4, 0x67, 0x00, 0x18, 0xF8, 0xD5,
 0xFF, 0x48, 0xFF, 0x6A, 0x4C, 0xE8, 0xED, 0x28,
 0x04, 0x10, 0x00, 0x6C, 0x01, 0x6D, 0x00, 0x18,
-0x0A, 0xD6, 0x10, 0xF0, 0x24, 0x6A, 0x3D, 0xF1,
-0x68, 0x9A, 0x10, 0xF0, 0x24, 0x6C, 0x5C, 0xF4,
-0x9C, 0x9C, 0x40, 0x9B, 0x8D, 0xEA, 0x40, 0xDB,
+0xF8, 0xD5, 0x10, 0xF0, 0x24, 0x6A, 0x1C, 0xF5,
+0x60, 0x9A, 0x10, 0xF0, 0x24, 0x6C, 0x3C, 0xF0,
+0x98, 0x9C, 0x40, 0x9B, 0x8D, 0xEA, 0x40, 0xDB,
 0x05, 0x97, 0x04, 0x90, 0x03, 0x63, 0x00, 0xEF,
 0xFC, 0x63, 0x07, 0x62, 0x06, 0xD1, 0x05, 0xD0,
 0x30, 0xF0, 0x20, 0x6A, 0x4E, 0xF2, 0x50, 0x9A,
 0x04, 0x67, 0x30, 0xF0, 0x20, 0x6C, 0x69, 0xF2,
 0x10, 0x4C, 0xB0, 0x67, 0x05, 0x6E, 0x40, 0xEA,
 0x40, 0xA0, 0x01, 0x69, 0x2C, 0xEA, 0x56, 0x22,
-0x10, 0xF0, 0x24, 0x6A, 0xFC, 0xF2, 0x48, 0x9A,
+0x10, 0xF0, 0x24, 0x6A, 0xDB, 0xF6, 0x44, 0x9A,
 0x30, 0xF0, 0x20, 0x68, 0xC0, 0xF1, 0x08, 0x48,
 0x40, 0xA2, 0xC9, 0xF0, 0x65, 0xA0, 0x04, 0x6C,
 0xC9, 0xF0, 0x48, 0xC0, 0x00, 0x6A, 0xC9, 0xF0,
@@ -24422,17 +24350,17 @@ u8 array_mp_8821c_fw_nic[] = {
 0x6E, 0xF3, 0x5C, 0x9A, 0x40, 0xEA, 0xA9, 0xF0,
 0x68, 0xA0, 0x04, 0x6A, 0x6C, 0xEA, 0xFF, 0x6B,
 0x6C, 0xEA, 0x0E, 0x22, 0x00, 0x6A, 0xC9, 0xF0,
-0x59, 0xC0, 0x10, 0xF0, 0x24, 0x6A, 0x3D, 0xF1,
-0x4C, 0x9A, 0xC9, 0xF0, 0x2B, 0xC0, 0x60, 0x9A,
-0x30, 0xF0, 0x20, 0x6A, 0xAF, 0xF5, 0x7C, 0xDA,
+0x59, 0xC0, 0x10, 0xF0, 0x24, 0x6A, 0x1C, 0xF5,
+0x44, 0x9A, 0xC9, 0xF0, 0x2B, 0xC0, 0x60, 0x9A,
+0x30, 0xF0, 0x20, 0x6A, 0xAF, 0xF5, 0x78, 0xDA,
 0x30, 0xF0, 0x20, 0x6A, 0x69, 0xF2, 0x52, 0xA2,
 0x04, 0x6B, 0x6C, 0xEA, 0x13, 0x22, 0x30, 0xF0,
 0x20, 0x6A, 0xEF, 0xF4, 0x08, 0x4A, 0xE0, 0xF0,
-0x87, 0xA2, 0x01, 0x6B, 0x8C, 0xEB, 0x05, 0x2B,
-0x64, 0x6C, 0x6D, 0xEC, 0xE0, 0xF0, 0x87, 0xC2,
+0x83, 0xA2, 0x01, 0x6B, 0x8C, 0xEB, 0x05, 0x2B,
+0x64, 0x6C, 0x6D, 0xEC, 0xE0, 0xF0, 0x83, 0xC2,
 0x05, 0x10, 0x02, 0x6B, 0x6B, 0xEB, 0x8C, 0xEB,
-0xE0, 0xF0, 0x67, 0xC2, 0x10, 0xF0, 0x24, 0x6A,
-0x3C, 0xF3, 0x58, 0x9A, 0x03, 0x6B, 0x60, 0xC2,
+0xE0, 0xF0, 0x63, 0xC2, 0x10, 0xF0, 0x24, 0x6A,
+0x1B, 0xF7, 0x54, 0x9A, 0x05, 0x6B, 0x60, 0xC2,
 0x06, 0x6B, 0x30, 0xF0, 0x20, 0x6A, 0x89, 0xF2,
 0x71, 0xC2, 0x1E, 0x10, 0x30, 0xF0, 0x20, 0x6A,
 0x6E, 0xF3, 0x58, 0x9A, 0x03, 0x6C, 0x40, 0xEA,
@@ -24452,19 +24380,19 @@ u8 array_mp_8821c_fw_nic[] = {
 0x01, 0x6C, 0x40, 0xEA, 0x30, 0xF0, 0x20, 0x6A,
 0xC0, 0xF1, 0x08, 0x4A, 0xA9, 0xF0, 0x6A, 0xA2,
 0x08, 0x6C, 0x8C, 0xEB, 0x0C, 0x23, 0x30, 0xF0,
-0x20, 0x6B, 0xCF, 0xF5, 0x65, 0xA3, 0x68, 0xF3,
+0x20, 0x6B, 0xCF, 0xF5, 0x61, 0xA3, 0x68, 0xF3,
 0x54, 0xA2, 0x07, 0x6C, 0x7F, 0x6E, 0x6C, 0xEC,
 0x01, 0x6D, 0x4C, 0xEE, 0x0F, 0x10, 0x68, 0xF3,
 0x74, 0xA2, 0x7F, 0x6A, 0x6C, 0xEA, 0x0C, 0x2A,
-0x30, 0xF0, 0x20, 0x6A, 0xCF, 0xF5, 0x65, 0xA2,
+0x30, 0xF0, 0x20, 0x6A, 0xCF, 0xF5, 0x61, 0xA2,
 0x07, 0x6A, 0xFF, 0x6C, 0x6C, 0xEA, 0x00, 0x6D,
-0x4C, 0xEC, 0xC5, 0x67, 0x00, 0x18, 0xE9, 0xCF,
+0x4C, 0xEC, 0xC5, 0x67, 0x00, 0x18, 0xD7, 0xCF,
 0x30, 0xF0, 0x20, 0x68, 0xEF, 0xF4, 0x08, 0x48,
-0xC0, 0xF0, 0x5D, 0xA0, 0x07, 0x6C, 0x00, 0x6D,
-0x4C, 0xEC, 0x00, 0x18, 0x50, 0xD1, 0x30, 0xF0,
+0xC0, 0xF0, 0x59, 0xA0, 0x07, 0x6C, 0x00, 0x6D,
+0x4C, 0xEC, 0x00, 0x18, 0x3E, 0xD1, 0x30, 0xF0,
 0x20, 0x6A, 0x6E, 0xF3, 0x4C, 0x9A, 0x08, 0x6C,
-0x40, 0xEA, 0xE0, 0xF0, 0x4A, 0xA0, 0x4A, 0x32,
-0xE0, 0xF0, 0x49, 0xC0, 0x07, 0x97, 0x06, 0x91,
+0x40, 0xEA, 0xE0, 0xF0, 0x46, 0xA0, 0x4A, 0x32,
+0xE0, 0xF0, 0x45, 0xC0, 0x07, 0x97, 0x06, 0x91,
 0x05, 0x90, 0x04, 0x63, 0x00, 0xEF, 0x00, 0x65,
 0xFC, 0x63, 0x07, 0x62, 0x30, 0xF0, 0x20, 0x6A,
 0xC0, 0xF1, 0x08, 0x4A, 0xA9, 0xF0, 0x88, 0xA2,
@@ -24474,18 +24402,18 @@ u8 array_mp_8821c_fw_nic[] = {
 0xAC, 0xEC, 0x05, 0x2C, 0xA9, 0xF0, 0x4B, 0xA2,
 0x4C, 0xEB, 0xAC, 0xEB, 0x17, 0x23, 0x30, 0xF0,
 0x20, 0x6A, 0xEF, 0xF4, 0x08, 0x4A, 0xE0, 0xF0,
-0x70, 0xAA, 0xFF, 0x6C, 0x01, 0x4C, 0x8C, 0xEB,
-0x0D, 0x2B, 0xC0, 0xF0, 0x5D, 0xA2, 0x07, 0x6C,
-0x01, 0x6D, 0x4C, 0xEC, 0x00, 0x18, 0x50, 0xD1,
+0x6C, 0xAA, 0xFF, 0x6C, 0x01, 0x4C, 0x8C, 0xEB,
+0x0D, 0x2B, 0xC0, 0xF0, 0x59, 0xA2, 0x07, 0x6C,
+0x01, 0x6D, 0x4C, 0xEC, 0x00, 0x18, 0x3E, 0xD1,
 0x30, 0xF0, 0x20, 0x6A, 0x2E, 0xF4, 0x54, 0x9A,
 0x40, 0xEA, 0x0B, 0x10, 0x00, 0x6A, 0x10, 0xF0,
-0x24, 0x6C, 0x01, 0x6E, 0x97, 0xF3, 0x09, 0x4C,
+0x24, 0x6C, 0x01, 0x6E, 0x17, 0xF2, 0x11, 0x4C,
 0xA2, 0x67, 0xE6, 0x67, 0x04, 0xD2, 0x00, 0x18,
-0xFC, 0xE9, 0x07, 0x97, 0x04, 0x63, 0x00, 0xEF,
+0x9E, 0xE9, 0x07, 0x97, 0x04, 0x63, 0x00, 0xEF,
 0xFC, 0x63, 0x07, 0x62, 0x06, 0xD1, 0x05, 0xD0,
 0xFF, 0x69, 0x2C, 0xEC, 0xAC, 0xE9, 0x21, 0x24,
 0x91, 0x67, 0x01, 0x6D, 0x30, 0xF0, 0x20, 0x68,
-0x00, 0x18, 0x50, 0xD1, 0xC0, 0xF1, 0x08, 0x48,
+0x00, 0x18, 0x3E, 0xD1, 0xC0, 0xF1, 0x08, 0x48,
 0x30, 0xF0, 0x20, 0x6A, 0xC8, 0xF2, 0x9F, 0xA0,
 0x2E, 0xF4, 0x50, 0x9A, 0x01, 0x6D, 0x08, 0x6E,
 0xF1, 0x67, 0x40, 0xEA, 0xC9, 0xF0, 0x84, 0xA0,
@@ -24495,10 +24423,10 @@ u8 array_mp_8821c_fw_nic[] = {
 0x1A, 0x10, 0x30, 0xF0, 0x20, 0x68, 0xC0, 0xF1,
 0x08, 0x48, 0xA9, 0xF0, 0x4A, 0xA0, 0x08, 0x6B,
 0x6C, 0xEA, 0x0F, 0x2A, 0x91, 0x67, 0x00, 0x6D,
-0x00, 0x18, 0x50, 0xD1, 0x30, 0xF0, 0x20, 0x6A,
+0x00, 0x18, 0x3E, 0xD1, 0x30, 0xF0, 0x20, 0x6A,
 0xC8, 0xF2, 0x9F, 0xA0, 0x2E, 0xF4, 0x50, 0x9A,
 0x00, 0x6D, 0x08, 0x6E, 0xF1, 0x67, 0x40, 0xEA,
-0x02, 0x10, 0x00, 0x18, 0xE2, 0xEE, 0x07, 0x97,
+0x02, 0x10, 0x00, 0x18, 0x84, 0xEE, 0x07, 0x97,
 0x06, 0x91, 0x05, 0x90, 0x04, 0x63, 0x00, 0xEF,
 0xFD, 0x63, 0x05, 0x62, 0x04, 0xD0, 0x01, 0x74,
 0xA0, 0xF0, 0x1B, 0x60, 0x03, 0x24, 0x02, 0x74,
@@ -24508,9 +24436,9 @@ u8 array_mp_8821c_fw_nic[] = {
 0x15, 0x2B, 0x10, 0x6B, 0x8C, 0xEB, 0xAC, 0xEB,
 0xC0, 0xF0, 0x10, 0x23, 0xC9, 0xF0, 0x84, 0xA2,
 0x01, 0x6B, 0x8D, 0xEB, 0xC9, 0xF0, 0x64, 0xC2,
-0x30, 0xF0, 0x20, 0x6A, 0xCF, 0xF5, 0x65, 0xA2,
+0x30, 0xF0, 0x20, 0x6A, 0xCF, 0xF5, 0x61, 0xA2,
 0x07, 0x6A, 0x00, 0x6C, 0x6C, 0xEA, 0x4C, 0xED,
-0x00, 0x18, 0x02, 0xEF, 0xBF, 0x10, 0x30, 0xF0,
+0x00, 0x18, 0xA4, 0xEE, 0xBF, 0x10, 0x30, 0xF0,
 0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A, 0xA9, 0xF0,
 0x88, 0xA2, 0x20, 0x6B, 0x8C, 0xEB, 0x07, 0x2B,
 0xA9, 0xF0, 0x6C, 0xA2, 0x08, 0x6A, 0x6C, 0xEA,
@@ -24528,7 +24456,7 @@ u8 array_mp_8821c_fw_nic[] = {
 0xA9, 0xF0, 0xA8, 0xA2, 0x20, 0x6C, 0xFF, 0x6B,
 0x8C, 0xED, 0x16, 0x25, 0xA9, 0xF0, 0x4C, 0xA2,
 0x8C, 0xEA, 0x6C, 0xEA, 0x11, 0x22, 0x30, 0xF0,
-0x20, 0x6A, 0xCF, 0xF5, 0x45, 0xA2, 0x07, 0x6F,
+0x20, 0x6A, 0xCF, 0xF5, 0x41, 0xA2, 0x07, 0x6F,
 0x02, 0x36, 0x4C, 0xEF, 0x30, 0xF0, 0x20, 0x6A,
 0x8E, 0xF3, 0x48, 0x9A, 0xB0, 0x67, 0x00, 0x6C,
 0x6C, 0xED, 0x6C, 0xEE, 0x6C, 0xEF, 0x40, 0xEA,
@@ -24538,10 +24466,10 @@ u8 array_mp_8821c_fw_nic[] = {
 0x4C, 0xEC, 0x18, 0x24, 0xC9, 0xF0, 0xA4, 0xA3,
 0x02, 0x6C, 0x8B, 0xEC, 0xAC, 0xEC, 0x30, 0xF0,
 0x20, 0x68, 0xC9, 0xF0, 0x84, 0xC3, 0xEF, 0xF4,
-0x08, 0x48, 0xC0, 0xF0, 0x7D, 0xA0, 0x07, 0x6D,
+0x08, 0x48, 0xC0, 0xF0, 0x79, 0xA0, 0x07, 0x6D,
 0x01, 0x6C, 0x6C, 0xED, 0x4C, 0xED, 0x00, 0x18,
-0x02, 0xEF, 0xC0, 0xF0, 0x5E, 0xA0, 0x01, 0x4A,
-0xC0, 0xF0, 0x5E, 0xC0, 0x30, 0xF0, 0x20, 0x6A,
+0xA4, 0xEE, 0xC0, 0xF0, 0x5A, 0xA0, 0x01, 0x4A,
+0xC0, 0xF0, 0x5A, 0xC0, 0x30, 0xF0, 0x20, 0x6A,
 0x69, 0xF2, 0x73, 0xA2, 0x01, 0x6A, 0x6C, 0xEA,
 0x08, 0x2A, 0x30, 0xF0, 0x20, 0x6A, 0x6E, 0xF2,
 0x58, 0x9A, 0xFF, 0x6C, 0x6F, 0x6D, 0x06, 0x6E,
@@ -24562,8 +24490,8 @@ u8 array_mp_8821c_fw_nic[] = {
 0x6E, 0xF2, 0x58, 0x9A, 0xFF, 0x6C, 0x00, 0x6D,
 0xC5, 0x67, 0x40, 0xEA, 0x05, 0x97, 0x04, 0x90,
 0x03, 0x63, 0x00, 0xEF, 0xFC, 0x63, 0x07, 0x62,
-0x06, 0xD0, 0x10, 0xF0, 0x24, 0x6B, 0x1C, 0xF4,
-0x68, 0x9B, 0xE9, 0xA4, 0x48, 0xA4, 0xA0, 0xAB,
+0x06, 0xD0, 0x10, 0xF0, 0x24, 0x6B, 0xFB, 0xF7,
+0x64, 0x9B, 0xE9, 0xA4, 0x48, 0xA4, 0xA0, 0xAB,
 0xE0, 0x37, 0x5D, 0xE7, 0xFF, 0xF7, 0x1F, 0x6A,
 0x4C, 0xEF, 0x4C, 0xED, 0x4A, 0xA4, 0xCB, 0xA4,
 0x02, 0x5A, 0x04, 0x61, 0x02, 0x72, 0x0B, 0x6A,
@@ -24574,9 +24502,9 @@ u8 array_mp_8821c_fw_nic[] = {
 0x1F, 0x60, 0x30, 0xF0, 0x20, 0x6B, 0x30, 0xF0,
 0x20, 0x6A, 0xAB, 0xF7, 0x03, 0x4B, 0x2B, 0xF6,
 0xE2, 0xC2, 0xB5, 0xE6, 0x10, 0xF0, 0x24, 0x6E,
-0x00, 0x6A, 0x3D, 0xF1, 0x14, 0x9E, 0x10, 0xF0,
-0x24, 0x6E, 0x04, 0xD2, 0x05, 0xD2, 0x5C, 0xF4,
-0xD8, 0x9E, 0x30, 0xF0, 0x20, 0x6A, 0xAE, 0xF2,
+0x00, 0x6A, 0x1C, 0xF5, 0x0C, 0x9E, 0x10, 0xF0,
+0x24, 0x6E, 0x04, 0xD2, 0x05, 0xD2, 0x3C, 0xF0,
+0xD4, 0x9E, 0x30, 0xF0, 0x20, 0x6A, 0xAE, 0xF2,
 0x40, 0x9A, 0xBC, 0x35, 0x00, 0x6C, 0x15, 0xE5,
 0xD9, 0xE3, 0x40, 0xEA, 0x00, 0x6A, 0x01, 0x10,
 0x0A, 0x6A, 0x07, 0x97, 0x06, 0x90, 0x04, 0x63,
@@ -24585,98 +24513,98 @@ u8 array_mp_8821c_fw_nic[] = {
 0x30, 0xF0, 0x20, 0x6C, 0xC0, 0xF1, 0x08, 0x4C,
 0xCB, 0xF6, 0xDD, 0xA4, 0x38, 0x26, 0x8D, 0xE2,
 0x4B, 0xF4, 0x78, 0xA3, 0x34, 0x23, 0x10, 0xF0,
-0x24, 0x6B, 0x1C, 0xF4, 0x68, 0x9B, 0xFF, 0xF7,
+0x24, 0x6B, 0xFB, 0xF7, 0x64, 0x9B, 0xFF, 0xF7,
 0x1F, 0x6D, 0x01, 0x72, 0x60, 0xAB, 0x6C, 0xED,
 0x03, 0x60, 0x02, 0x72, 0x08, 0x60, 0x27, 0x10,
 0x30, 0xF0, 0x20, 0x6B, 0xAB, 0xF6, 0x03, 0x4B,
 0x4B, 0xF4, 0xF9, 0xA4, 0x06, 0x10, 0x4B, 0xF4,
 0xFA, 0xA4, 0x30, 0xF0, 0x20, 0x6B, 0xAB, 0xF7,
 0x03, 0x4B, 0xE1, 0xF7, 0x1F, 0x6A, 0xAC, 0xEA,
-0x10, 0xF0, 0x24, 0x6D, 0x5C, 0xF4, 0xB8, 0x9D,
+0x10, 0xF0, 0x24, 0x6D, 0x3C, 0xF0, 0xB4, 0x9D,
 0xD9, 0xE2, 0x00, 0x6A, 0xB5, 0xE3, 0x10, 0xF0,
-0x24, 0x6B, 0x04, 0xD2, 0x05, 0xD2, 0x3D, 0xF1,
-0x74, 0x9B, 0x30, 0xF0, 0x20, 0x6A, 0xAE, 0xF2,
+0x24, 0x6B, 0x04, 0xD2, 0x05, 0xD2, 0x1C, 0xF5,
+0x6C, 0x9B, 0x30, 0xF0, 0x20, 0x6A, 0xAE, 0xF2,
 0x40, 0x9A, 0xDC, 0x36, 0x00, 0x6C, 0x79, 0xE6,
 0x40, 0xEA, 0x01, 0x6A, 0x01, 0x10, 0x00, 0x6A,
 0x07, 0x97, 0x04, 0x63, 0x00, 0xEF, 0x00, 0x65,
 0xFD, 0x63, 0x05, 0x62, 0x30, 0xF0, 0x20, 0x6A,
 0x4E, 0xF2, 0x4C, 0x9A, 0x30, 0xF0, 0x21, 0x6C,
-0x70, 0xF3, 0x1C, 0x4C, 0x00, 0x6D, 0x18, 0x6E,
+0x70, 0xF3, 0x18, 0x4C, 0x00, 0x6D, 0x18, 0x6E,
 0x40, 0xEA, 0x30, 0xF0, 0x20, 0x6A, 0xEF, 0xF4,
-0x08, 0x4A, 0x80, 0xF6, 0x94, 0xA2, 0x03, 0x6B,
-0x6B, 0xEB, 0x8C, 0xEB, 0x80, 0xF6, 0x74, 0xC2,
-0x00, 0x6B, 0xA0, 0xF6, 0x6C, 0xC2, 0xA0, 0xF6,
-0x6D, 0xC2, 0xA0, 0xF6, 0x6E, 0xC2, 0x0C, 0x6B,
-0xA0, 0xF6, 0x6F, 0xC2, 0x05, 0x97, 0x03, 0x63,
+0x08, 0x4A, 0x80, 0xF6, 0x90, 0xA2, 0x03, 0x6B,
+0x6B, 0xEB, 0x8C, 0xEB, 0x80, 0xF6, 0x70, 0xC2,
+0x00, 0x6B, 0xA0, 0xF6, 0x68, 0xC2, 0xA0, 0xF6,
+0x69, 0xC2, 0xA0, 0xF6, 0x6A, 0xC2, 0x0C, 0x6B,
+0xA0, 0xF6, 0x6B, 0xC2, 0x05, 0x97, 0x03, 0x63,
 0x00, 0xEF, 0x00, 0x65, 0xFF, 0x6A, 0x4C, 0xEC,
 0x01, 0x74, 0xAC, 0xEA, 0x09, 0x60, 0x03, 0x24,
 0x02, 0x74, 0x0B, 0x60, 0x20, 0xE8, 0x10, 0xF0,
-0x24, 0x6B, 0x3C, 0xF7, 0x68, 0x9B, 0x09, 0x10,
-0x10, 0xF0, 0x24, 0x6B, 0x3D, 0xF1, 0x78, 0x9B,
-0x04, 0x10, 0x10, 0xF0, 0x24, 0x6B, 0x3D, 0xF1,
-0x7C, 0x9B, 0x40, 0xC3, 0x20, 0xE8, 0x00, 0x65,
+0x24, 0x6B, 0x1C, 0xF3, 0x64, 0x9B, 0x09, 0x10,
+0x10, 0xF0, 0x24, 0x6B, 0x1C, 0xF5, 0x70, 0x9B,
+0x04, 0x10, 0x10, 0xF0, 0x24, 0x6B, 0x1C, 0xF5,
+0x74, 0x9B, 0x40, 0xC3, 0x20, 0xE8, 0x00, 0x65,
 0xFF, 0x6B, 0x6C, 0xEC, 0x01, 0x74, 0x0A, 0x60,
 0x04, 0x24, 0x02, 0x74, 0x00, 0x6A, 0x13, 0x61,
-0x0C, 0x10, 0x10, 0xF0, 0x24, 0x6A, 0x3C, 0xF7,
-0x48, 0x9A, 0x04, 0x10, 0x10, 0xF0, 0x24, 0x6A,
-0x3D, 0xF1, 0x58, 0x9A, 0x40, 0xA2, 0x6C, 0xEA,
-0x20, 0xE8, 0x10, 0xF0, 0x24, 0x6A, 0x3D, 0xF1,
-0x5C, 0x9A, 0x40, 0xA2, 0x6C, 0xEA, 0x20, 0xE8,
+0x0C, 0x10, 0x10, 0xF0, 0x24, 0x6A, 0x1C, 0xF3,
+0x44, 0x9A, 0x04, 0x10, 0x10, 0xF0, 0x24, 0x6A,
+0x1C, 0xF5, 0x50, 0x9A, 0x40, 0xA2, 0x6C, 0xEA,
+0x20, 0xE8, 0x10, 0xF0, 0x24, 0x6A, 0x1C, 0xF5,
+0x54, 0x9A, 0x40, 0xA2, 0x6C, 0xEA, 0x20, 0xE8,
 0xFF, 0x6B, 0x6C, 0xEC, 0x01, 0x74, 0x0A, 0x60,
 0x04, 0x24, 0x02, 0x74, 0x00, 0x6A, 0x13, 0x61,
-0x0C, 0x10, 0x10, 0xF0, 0x24, 0x6A, 0x5D, 0xF1,
-0x40, 0x9A, 0x04, 0x10, 0x10, 0xF0, 0x24, 0x6A,
-0x5D, 0xF1, 0x44, 0x9A, 0x40, 0xA2, 0x6C, 0xEA,
-0x20, 0xE8, 0x10, 0xF0, 0x24, 0x6A, 0x5D, 0xF1,
-0x48, 0x9A, 0x40, 0xA2, 0x6C, 0xEA, 0x20, 0xE8,
+0x0C, 0x10, 0x10, 0xF0, 0x24, 0x6A, 0x1C, 0xF5,
+0x58, 0x9A, 0x04, 0x10, 0x10, 0xF0, 0x24, 0x6A,
+0x1C, 0xF5, 0x5C, 0x9A, 0x40, 0xA2, 0x6C, 0xEA,
+0x20, 0xE8, 0x10, 0xF0, 0x24, 0x6A, 0x3C, 0xF5,
+0x40, 0x9A, 0x40, 0xA2, 0x6C, 0xEA, 0x20, 0xE8,
 0xFD, 0x63, 0x05, 0x62, 0x30, 0xF0, 0x20, 0x6A,
 0xC8, 0xF4, 0x52, 0xA2, 0x01, 0x6B, 0x4C, 0xEB,
 0x00, 0x6A, 0x07, 0x23, 0x10, 0xF0, 0x24, 0x6A,
-0x5D, 0xF1, 0x40, 0x9A, 0x60, 0xA2, 0xFF, 0x6A,
+0x1C, 0xF5, 0x58, 0x9A, 0x60, 0xA2, 0xFF, 0x6A,
 0x6C, 0xEA, 0x30, 0xF0, 0x20, 0x6B, 0xEF, 0xF4,
-0x08, 0x4B, 0x80, 0xF6, 0xB4, 0xA3, 0x01, 0x6C,
-0xAC, 0xEC, 0x04, 0x24, 0x80, 0xF6, 0x96, 0xA3,
-0x00, 0x18, 0x1A, 0xF0, 0x05, 0x97, 0xFF, 0x6B,
+0x08, 0x4B, 0x80, 0xF6, 0xB0, 0xA3, 0x01, 0x6C,
+0xAC, 0xEC, 0x04, 0x24, 0x80, 0xF6, 0x92, 0xA3,
+0x00, 0x18, 0xBC, 0xEF, 0x05, 0x97, 0xFF, 0x6B,
 0x5E, 0x32, 0x6C, 0xEA, 0x03, 0x63, 0x00, 0xEF,
 0x30, 0xF0, 0x20, 0x6A, 0xEF, 0xF4, 0x08, 0x4A,
-0x80, 0xF6, 0x94, 0xA2, 0x01, 0x6B, 0x8C, 0xEB,
-0x05, 0x23, 0x00, 0x6B, 0xA0, 0xF6, 0x6C, 0xC2,
-0xA0, 0xF6, 0x6D, 0xC2, 0x20, 0xE8, 0x00, 0x65,
+0x80, 0xF6, 0x90, 0xA2, 0x01, 0x6B, 0x8C, 0xEB,
+0x05, 0x23, 0x00, 0x6B, 0xA0, 0xF6, 0x68, 0xC2,
+0xA0, 0xF6, 0x69, 0xC2, 0x20, 0xE8, 0x00, 0x65,
 0x30, 0xF0, 0x20, 0x6A, 0xEF, 0xF4, 0x08, 0x4A,
-0x80, 0xF6, 0x94, 0xA2, 0x01, 0x6B, 0x8C, 0xEB,
-0x05, 0x23, 0x00, 0x6B, 0xA0, 0xF6, 0x6C, 0xC2,
-0xA0, 0xF6, 0x6D, 0xC2, 0x20, 0xE8, 0x00, 0x65,
+0x80, 0xF6, 0x90, 0xA2, 0x01, 0x6B, 0x8C, 0xEB,
+0x05, 0x23, 0x00, 0x6B, 0xA0, 0xF6, 0x68, 0xC2,
+0xA0, 0xF6, 0x69, 0xC2, 0x20, 0xE8, 0x00, 0x65,
 0x30, 0xF0, 0x20, 0x6A, 0xEF, 0xF4, 0x08, 0x4A,
-0x80, 0xF6, 0x94, 0xA2, 0x01, 0x6B, 0x8C, 0xEB,
-0x05, 0x23, 0x00, 0x6B, 0xA0, 0xF6, 0x6C, 0xC2,
-0xA0, 0xF6, 0x6D, 0xC2, 0x20, 0xE8, 0x00, 0x65,
+0x80, 0xF6, 0x90, 0xA2, 0x01, 0x6B, 0x8C, 0xEB,
+0x05, 0x23, 0x00, 0x6B, 0xA0, 0xF6, 0x68, 0xC2,
+0xA0, 0xF6, 0x69, 0xC2, 0x20, 0xE8, 0x00, 0x65,
 0xFC, 0x63, 0x07, 0x62, 0x06, 0xD1, 0x05, 0xD0,
 0x30, 0xF0, 0x20, 0x6A, 0x6E, 0xF2, 0x58, 0x9A,
 0xFF, 0x6C, 0x6F, 0x6D, 0x1F, 0x6E, 0x40, 0xEA,
 0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A,
 0x08, 0xF3, 0x8A, 0xA2, 0x02, 0x6B, 0x8C, 0xEB,
-0x0B, 0x23, 0x10, 0xF0, 0x24, 0x6B, 0x3C, 0xF7,
-0x88, 0x9B, 0xBF, 0x6B, 0xA0, 0xA4, 0xAC, 0xEB,
+0x0B, 0x23, 0x10, 0xF0, 0x24, 0x6B, 0x1C, 0xF3,
+0x84, 0x9B, 0xBF, 0x6B, 0xA0, 0xA4, 0xAC, 0xEB,
 0x60, 0xC4, 0x04, 0x6B, 0x08, 0xF3, 0x6D, 0xC2,
 0x30, 0xF0, 0x20, 0x69, 0xEF, 0xF4, 0x08, 0x49,
-0x80, 0xF6, 0x74, 0xA1, 0x02, 0x6A, 0x6C, 0xEA,
-0x0D, 0x22, 0x80, 0xF6, 0x16, 0xA1, 0x90, 0x67,
-0x00, 0x18, 0x0C, 0xF0, 0xBF, 0x6D, 0x4C, 0xED,
-0x90, 0x67, 0x00, 0x18, 0xFF, 0xEF, 0x04, 0x6A,
-0xA0, 0xF6, 0x4E, 0xC1, 0x07, 0x97, 0x06, 0x91,
+0x80, 0xF6, 0x70, 0xA1, 0x02, 0x6A, 0x6C, 0xEA,
+0x0D, 0x22, 0x80, 0xF6, 0x12, 0xA1, 0x90, 0x67,
+0x00, 0x18, 0xAE, 0xEF, 0xBF, 0x6D, 0x4C, 0xED,
+0x90, 0x67, 0x00, 0x18, 0xA1, 0xEF, 0x04, 0x6A,
+0xA0, 0xF6, 0x4A, 0xC1, 0x07, 0x97, 0x06, 0x91,
 0x05, 0x90, 0x04, 0x63, 0x00, 0xEF, 0x00, 0x65,
 0xFC, 0x63, 0x07, 0x62, 0x06, 0xD1, 0x05, 0xD0,
 0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A,
 0x08, 0xF3, 0x8A, 0xA2, 0x02, 0x6B, 0x8C, 0xEB,
-0x0B, 0x23, 0x10, 0xF0, 0x24, 0x6B, 0x3C, 0xF7,
-0x88, 0x9B, 0xBF, 0x6B, 0xA0, 0xA4, 0xAC, 0xEB,
+0x0B, 0x23, 0x10, 0xF0, 0x24, 0x6B, 0x1C, 0xF3,
+0x84, 0x9B, 0xBF, 0x6B, 0xA0, 0xA4, 0xAC, 0xEB,
 0x60, 0xC4, 0x00, 0x6B, 0x08, 0xF3, 0x6D, 0xC2,
 0x30, 0xF0, 0x20, 0x69, 0xEF, 0xF4, 0x08, 0x49,
-0x80, 0xF6, 0x74, 0xA1, 0x02, 0x6A, 0x6C, 0xEA,
-0x0D, 0x22, 0x80, 0xF6, 0x16, 0xA1, 0x90, 0x67,
-0x00, 0x18, 0x0C, 0xF0, 0xBF, 0x6D, 0x4C, 0xED,
-0x90, 0x67, 0x00, 0x18, 0xFF, 0xEF, 0x00, 0x6A,
-0xA0, 0xF6, 0x4E, 0xC1, 0x07, 0x97, 0x06, 0x91,
+0x80, 0xF6, 0x70, 0xA1, 0x02, 0x6A, 0x6C, 0xEA,
+0x0D, 0x22, 0x80, 0xF6, 0x12, 0xA1, 0x90, 0x67,
+0x00, 0x18, 0xAE, 0xEF, 0xBF, 0x6D, 0x4C, 0xED,
+0x90, 0x67, 0x00, 0x18, 0xA1, 0xEF, 0x00, 0x6A,
+0xA0, 0xF6, 0x4A, 0xC1, 0x07, 0x97, 0x06, 0x91,
 0x05, 0x90, 0x04, 0x63, 0x00, 0xEF, 0x00, 0x65,
 0xFD, 0x63, 0x05, 0x62, 0x30, 0xF0, 0x20, 0x6A,
 0x6E, 0xF2, 0x58, 0x9A, 0xFF, 0x6C, 0xA4, 0x67,
@@ -24684,20 +24612,20 @@ u8 array_mp_8821c_fw_nic[] = {
 0xC0, 0xF1, 0x08, 0x4A, 0x08, 0xF3, 0x8A, 0xA2,
 0x02, 0x6B, 0x8C, 0xEB, 0x03, 0x23, 0x03, 0x6B,
 0x08, 0xF3, 0x6D, 0xC2, 0x30, 0xF0, 0x20, 0x6A,
-0xEF, 0xF4, 0x08, 0x4A, 0x80, 0xF6, 0x94, 0xA2,
+0xEF, 0xF4, 0x08, 0x4A, 0x80, 0xF6, 0x90, 0xA2,
 0x02, 0x6B, 0x8C, 0xEB, 0x03, 0x23, 0x03, 0x6B,
-0xA0, 0xF6, 0x6E, 0xC2, 0x05, 0x97, 0x03, 0x63,
+0xA0, 0xF6, 0x6A, 0xC2, 0x05, 0x97, 0x03, 0x63,
 0x00, 0xEF, 0x00, 0x65, 0x30, 0xF0, 0x20, 0x6A,
 0xC0, 0xF1, 0x08, 0x4A, 0x08, 0xF3, 0x8A, 0xA2,
 0x02, 0x6B, 0x8C, 0xEB, 0x03, 0x23, 0x01, 0x6B,
 0x08, 0xF3, 0x6D, 0xC2, 0x30, 0xF0, 0x20, 0x6A,
-0xEF, 0xF4, 0x08, 0x4A, 0x80, 0xF6, 0x94, 0xA2,
+0xEF, 0xF4, 0x08, 0x4A, 0x80, 0xF6, 0x90, 0xA2,
 0x02, 0x6B, 0x8C, 0xEB, 0x03, 0x23, 0x01, 0x6B,
-0xA0, 0xF6, 0x6E, 0xC2, 0x20, 0xE8, 0x00, 0x65,
-0xFD, 0x63, 0x05, 0x62, 0x00, 0x18, 0x9D, 0xF0,
-0x00, 0x18, 0x52, 0xF0, 0x05, 0x97, 0x03, 0x63,
+0xA0, 0xF6, 0x6A, 0xC2, 0x20, 0xE8, 0x00, 0x65,
+0xFD, 0x63, 0x05, 0x62, 0x00, 0x18, 0x3F, 0xF0,
+0x00, 0x18, 0xF4, 0xEF, 0x05, 0x97, 0x03, 0x63,
 0x00, 0xEF, 0x00, 0x65, 0xFD, 0x63, 0x05, 0x62,
-0x00, 0x18, 0x9D, 0xF0, 0x00, 0x18, 0x8A, 0xF0,
+0x00, 0x18, 0x3F, 0xF0, 0x00, 0x18, 0x2C, 0xF0,
 0x05, 0x97, 0x03, 0x63, 0x00, 0xEF, 0x00, 0x65,
 0xFC, 0x63, 0x07, 0x62, 0x06, 0xD1, 0x05, 0xD0,
 0x30, 0xF0, 0x20, 0x6A, 0x6E, 0xF2, 0x58, 0x9A,
@@ -24705,34 +24633,34 @@ u8 array_mp_8821c_fw_nic[] = {
 0x30, 0xF0, 0x20, 0x6B, 0xC0, 0xF1, 0x08, 0x4B,
 0x08, 0xF3, 0x8A, 0xA3, 0x02, 0x6A, 0xFF, 0x6D,
 0x8C, 0xEA, 0x0D, 0x22, 0x10, 0xF0, 0x24, 0x6A,
-0x3C, 0xF7, 0x88, 0x9A, 0x40, 0x6E, 0x40, 0xA4,
+0x1C, 0xF3, 0x84, 0x9A, 0x40, 0x6E, 0x40, 0xA4,
 0xAC, 0xEA, 0xCD, 0xEA, 0xAC, 0xEA, 0x40, 0xC4,
 0x01, 0x6A, 0x08, 0xF3, 0x4D, 0xC3, 0x30, 0xF0,
 0x20, 0x68, 0xEF, 0xF4, 0x08, 0x48, 0x80, 0xF6,
-0x74, 0xA0, 0x02, 0x6A, 0x6C, 0xEA, 0x0F, 0x22,
-0x80, 0xF6, 0x36, 0xA0, 0x91, 0x67, 0x00, 0x18,
-0x0C, 0xF0, 0x40, 0x6B, 0x4D, 0xEB, 0xFF, 0x6D,
-0x91, 0x67, 0x6C, 0xED, 0x00, 0x18, 0xFF, 0xEF,
-0x01, 0x6A, 0xA0, 0xF6, 0x4E, 0xC0, 0x07, 0x97,
+0x70, 0xA0, 0x02, 0x6A, 0x6C, 0xEA, 0x0F, 0x22,
+0x80, 0xF6, 0x32, 0xA0, 0x91, 0x67, 0x00, 0x18,
+0xAE, 0xEF, 0x40, 0x6B, 0x4D, 0xEB, 0xFF, 0x6D,
+0x91, 0x67, 0x6C, 0xED, 0x00, 0x18, 0xA1, 0xEF,
+0x01, 0x6A, 0xA0, 0xF6, 0x4A, 0xC0, 0x07, 0x97,
 0x06, 0x91, 0x05, 0x90, 0x04, 0x63, 0x00, 0xEF,
-0xFD, 0x63, 0x05, 0x62, 0x00, 0x18, 0xB4, 0xF0,
-0x00, 0x18, 0x70, 0xF0, 0x05, 0x97, 0x03, 0x63,
+0xFD, 0x63, 0x05, 0x62, 0x00, 0x18, 0x56, 0xF0,
+0x00, 0x18, 0x12, 0xF0, 0x05, 0x97, 0x03, 0x63,
 0x00, 0xEF, 0x00, 0x65, 0xFC, 0x63, 0x07, 0x62,
 0x06, 0xD1, 0x05, 0xD0, 0x30, 0xF0, 0x20, 0x6A,
 0x6E, 0xF2, 0x58, 0x9A, 0xFF, 0x6C, 0xA4, 0x67,
 0x22, 0x6E, 0x40, 0xEA, 0x30, 0xF0, 0x20, 0x6B,
 0xC0, 0xF1, 0x08, 0x4B, 0x08, 0xF3, 0x8A, 0xA3,
 0x02, 0x6A, 0xFF, 0x6D, 0x8C, 0xEA, 0x0D, 0x22,
-0x10, 0xF0, 0x24, 0x6A, 0x3C, 0xF7, 0x88, 0x9A,
+0x10, 0xF0, 0x24, 0x6A, 0x1C, 0xF3, 0x84, 0x9A,
 0x40, 0x6E, 0x40, 0xA4, 0xAC, 0xEA, 0xCD, 0xEA,
 0xAC, 0xEA, 0x40, 0xC4, 0x03, 0x6A, 0x08, 0xF3,
 0x4D, 0xC3, 0x30, 0xF0, 0x20, 0x68, 0xEF, 0xF4,
-0x08, 0x48, 0x80, 0xF6, 0x74, 0xA0, 0x02, 0x6A,
-0x6C, 0xEA, 0x0F, 0x22, 0x80, 0xF6, 0x36, 0xA0,
-0x91, 0x67, 0x00, 0x18, 0x0C, 0xF0, 0x40, 0x6B,
+0x08, 0x48, 0x80, 0xF6, 0x70, 0xA0, 0x02, 0x6A,
+0x6C, 0xEA, 0x0F, 0x22, 0x80, 0xF6, 0x32, 0xA0,
+0x91, 0x67, 0x00, 0x18, 0xAE, 0xEF, 0x40, 0x6B,
 0x4D, 0xEB, 0xFF, 0x6D, 0x91, 0x67, 0x6C, 0xED,
-0x00, 0x18, 0xFF, 0xEF, 0x03, 0x6A, 0xA0, 0xF6,
-0x4E, 0xC0, 0x07, 0x97, 0x06, 0x91, 0x05, 0x90,
+0x00, 0x18, 0xA1, 0xEF, 0x03, 0x6A, 0xA0, 0xF6,
+0x4A, 0xC0, 0x07, 0x97, 0x06, 0x91, 0x05, 0x90,
 0x04, 0x63, 0x00, 0xEF, 0xFD, 0x63, 0x05, 0x62,
 0x30, 0xF0, 0x20, 0x6A, 0x6E, 0xF2, 0x58, 0x9A,
 0x00, 0x6D, 0xFF, 0x6C, 0xC5, 0x67, 0x40, 0xEA,
@@ -24740,33 +24668,33 @@ u8 array_mp_8821c_fw_nic[] = {
 0x08, 0xF3, 0x8A, 0xA2, 0x02, 0x6B, 0x8C, 0xEB,
 0x03, 0x23, 0x01, 0x6B, 0x08, 0xF3, 0x6D, 0xC2,
 0x30, 0xF0, 0x20, 0x6A, 0xEF, 0xF4, 0x08, 0x4A,
-0x80, 0xF6, 0x94, 0xA2, 0x02, 0x6B, 0x8C, 0xEB,
-0x03, 0x23, 0x01, 0x6B, 0xA0, 0xF6, 0x6E, 0xC2,
+0x80, 0xF6, 0x90, 0xA2, 0x02, 0x6B, 0x8C, 0xEB,
+0x03, 0x23, 0x01, 0x6B, 0xA0, 0xF6, 0x6A, 0xC2,
 0x05, 0x97, 0x03, 0x63, 0x00, 0xEF, 0x00, 0x65,
-0xFD, 0x63, 0x05, 0x62, 0x00, 0x18, 0xF9, 0xF0,
-0x00, 0x18, 0x70, 0xF0, 0x05, 0x97, 0x03, 0x63,
+0xFD, 0x63, 0x05, 0x62, 0x00, 0x18, 0x9B, 0xF0,
+0x00, 0x18, 0x12, 0xF0, 0x05, 0x97, 0x03, 0x63,
 0x00, 0xEF, 0x00, 0x65, 0xFC, 0x63, 0x07, 0x62,
 0x06, 0xD1, 0x05, 0xD0, 0x30, 0xF0, 0x20, 0x6A,
 0x6E, 0xF2, 0x58, 0x9A, 0xFF, 0x6C, 0x6F, 0x6D,
 0x25, 0x6E, 0x40, 0xEA, 0x30, 0xF0, 0x20, 0x6A,
 0xC0, 0xF1, 0x08, 0x4A, 0x08, 0xF3, 0x8A, 0xA2,
 0x02, 0x6B, 0x8C, 0xEB, 0x0B, 0x23, 0x10, 0xF0,
-0x24, 0x6B, 0x3C, 0xF7, 0x88, 0x9B, 0xBF, 0x6B,
+0x24, 0x6B, 0x1C, 0xF3, 0x84, 0x9B, 0xBF, 0x6B,
 0xA0, 0xA4, 0xAC, 0xEB, 0x60, 0xC4, 0x04, 0x6B,
 0x08, 0xF3, 0x6D, 0xC2, 0x30, 0xF0, 0x20, 0x69,
-0xEF, 0xF4, 0x08, 0x49, 0x80, 0xF6, 0x74, 0xA1,
+0xEF, 0xF4, 0x08, 0x49, 0x80, 0xF6, 0x70, 0xA1,
 0x02, 0x6A, 0x6C, 0xEA, 0x0D, 0x22, 0x80, 0xF6,
-0x16, 0xA1, 0x90, 0x67, 0x00, 0x18, 0x0C, 0xF0,
+0x12, 0xA1, 0x90, 0x67, 0x00, 0x18, 0xAE, 0xEF,
 0xBF, 0x6D, 0x4C, 0xED, 0x90, 0x67, 0x00, 0x18,
-0xFF, 0xEF, 0x04, 0x6A, 0xA0, 0xF6, 0x4E, 0xC1,
+0xA1, 0xEF, 0x04, 0x6A, 0xA0, 0xF6, 0x4A, 0xC1,
 0x07, 0x97, 0x06, 0x91, 0x05, 0x90, 0x04, 0x63,
 0x00, 0xEF, 0x00, 0x65, 0x30, 0xF0, 0x20, 0x6A,
 0xC0, 0xF1, 0x08, 0x4A, 0x08, 0xF3, 0x8A, 0xA2,
 0x01, 0x6B, 0x8C, 0xEB, 0x05, 0x23, 0x08, 0xF3,
 0x4D, 0xA2, 0x02, 0x72, 0x00, 0x6A, 0x10, 0x61,
 0x30, 0xF0, 0x20, 0x6B, 0xEF, 0xF4, 0x08, 0x4B,
-0x80, 0xF6, 0x54, 0xA3, 0x01, 0x6C, 0x4C, 0xEC,
-0x01, 0x6A, 0x06, 0x24, 0xA0, 0xF6, 0x4E, 0xA3,
+0x80, 0xF6, 0x50, 0xA3, 0x01, 0x6C, 0x4C, 0xEC,
+0x01, 0x6A, 0x06, 0x24, 0xA0, 0xF6, 0x4A, 0xA3,
 0x02, 0x6B, 0x6E, 0xEA, 0x01, 0x5A, 0x58, 0x67,
 0x20, 0xE8, 0x00, 0x65, 0xFC, 0x63, 0x07, 0x62,
 0x06, 0xD1, 0x05, 0xD0, 0x30, 0xF0, 0x20, 0x6B,
@@ -24775,108 +24703,108 @@ u8 array_mp_8821c_fw_nic[] = {
 0x4C, 0xEC, 0x4C, 0xE9, 0x00, 0x68, 0x05, 0x24,
 0x08, 0xF3, 0x0A, 0xA3, 0x1A, 0x30, 0xAC, 0xE8,
 0x4C, 0xE8, 0x30, 0xF0, 0x20, 0x6A, 0xEF, 0xF4,
-0x08, 0x4A, 0x80, 0xF6, 0x94, 0xA2, 0x01, 0x6B,
-0x6C, 0xEC, 0x06, 0x24, 0x80, 0xF6, 0x14, 0xA2,
+0x08, 0x4A, 0x80, 0xF6, 0x90, 0xA2, 0x01, 0x6B,
+0x6C, 0xEC, 0x06, 0x24, 0x80, 0xF6, 0x10, 0xA2,
 0xFF, 0x6A, 0x1A, 0x30, 0x6C, 0xE8, 0x4C, 0xE8,
-0x00, 0x18, 0x28, 0xF0, 0x01, 0x72, 0x25, 0x61,
+0x00, 0x18, 0xCA, 0xEF, 0x01, 0x72, 0x25, 0x61,
 0x24, 0x28, 0x30, 0xF0, 0x20, 0x6A, 0xC8, 0xF4,
 0x72, 0xA2, 0x01, 0x6A, 0x6C, 0xEA, 0x08, 0x22,
 0x30, 0xF0, 0x20, 0x6A, 0x2E, 0xF4, 0x48, 0x9A,
 0x91, 0x67, 0x01, 0x6D, 0x00, 0x6E, 0x40, 0xEA,
 0x30, 0xF0, 0x20, 0x6B, 0xEF, 0xF4, 0x08, 0x4B,
-0x80, 0xF6, 0x54, 0xA3, 0x01, 0x6C, 0x4C, 0xEC,
+0x80, 0xF6, 0x50, 0xA3, 0x01, 0x6C, 0x4C, 0xEC,
 0x01, 0x6A, 0x0C, 0x24, 0x30, 0xF0, 0x20, 0x6A,
-0x2E, 0xF4, 0x48, 0x9A, 0x80, 0xF6, 0xD5, 0xA3,
+0x2E, 0xF4, 0x48, 0x9A, 0x80, 0xF6, 0xD1, 0xA3,
 0x91, 0x67, 0x01, 0x6D, 0x40, 0xEA, 0x01, 0x6A,
 0x01, 0x10, 0x00, 0x6A, 0x07, 0x97, 0x06, 0x91,
 0x05, 0x90, 0x04, 0x63, 0x00, 0xEF, 0x00, 0x65,
-0x30, 0xF0, 0x21, 0x6A, 0x70, 0xF3, 0x5D, 0xA2,
+0x30, 0xF0, 0x21, 0x6A, 0x70, 0xF3, 0x59, 0xA2,
 0x05, 0x5A, 0xE0, 0xF0, 0x0C, 0x60, 0x10, 0xF0,
-0x24, 0x6B, 0x48, 0x32, 0x9C, 0xF2, 0x08, 0x4B,
+0x24, 0x6B, 0x48, 0x32, 0x7B, 0xF6, 0x04, 0x4B,
 0x4D, 0xE3, 0x40, 0x9B, 0x00, 0xEA, 0x30, 0xF0,
 0x20, 0x6B, 0xEF, 0xF4, 0x08, 0x4B, 0x80, 0xF6,
-0x94, 0xA3, 0x04, 0x6A, 0xFF, 0x6D, 0x8C, 0xEA,
-0x19, 0x22, 0x10, 0xF0, 0x24, 0x6A, 0xFC, 0xF2,
-0x8C, 0x9A, 0x02, 0x6E, 0x40, 0xA4, 0xAC, 0xEA,
+0x90, 0xA3, 0x04, 0x6A, 0xFF, 0x6D, 0x8C, 0xEA,
+0x19, 0x22, 0x10, 0xF0, 0x24, 0x6A, 0xDB, 0xF6,
+0x88, 0x9A, 0x02, 0x6E, 0x40, 0xA4, 0xAC, 0xEA,
 0xCD, 0xEA, 0xAC, 0xEA, 0x40, 0xC4, 0x10, 0xF0,
-0x24, 0x6A, 0xFD, 0xF0, 0x88, 0x9A, 0xF8, 0x6A,
+0x24, 0x6A, 0xDC, 0xF4, 0x80, 0x9A, 0xF8, 0x6A,
 0xA0, 0xA4, 0xAC, 0xEA, 0x40, 0xC4, 0x10, 0xF0,
-0x24, 0x6A, 0x80, 0xF6, 0x78, 0xA3, 0x5D, 0xF1,
-0x4C, 0x9A, 0x60, 0xC2, 0x10, 0xF0, 0x24, 0x6A,
-0xFC, 0xF2, 0x6C, 0x9A, 0x83, 0x10, 0x30, 0xF0,
+0x24, 0x6A, 0x80, 0xF6, 0x74, 0xA3, 0x3C, 0xF5,
+0x44, 0x9A, 0x60, 0xC2, 0x10, 0xF0, 0x24, 0x6A,
+0xDB, 0xF6, 0x68, 0x9A, 0x83, 0x10, 0x30, 0xF0,
 0x20, 0x6B, 0xEF, 0xF4, 0x08, 0x4B, 0x80, 0xF6,
-0xB4, 0xA3, 0x04, 0x6A, 0xFF, 0x6C, 0xAC, 0xEA,
-0x1D, 0x22, 0x10, 0xF0, 0x24, 0x6A, 0xFC, 0xF2,
-0xB0, 0x9A, 0x02, 0x6E, 0x40, 0xA5, 0x8C, 0xEA,
+0xB0, 0xA3, 0x04, 0x6A, 0xFF, 0x6C, 0xAC, 0xEA,
+0x1D, 0x22, 0x10, 0xF0, 0x24, 0x6A, 0xDB, 0xF6,
+0xAC, 0x9A, 0x02, 0x6E, 0x40, 0xA5, 0x8C, 0xEA,
 0xCD, 0xEA, 0x8C, 0xEA, 0x40, 0xC5, 0x10, 0xF0,
-0x24, 0x6A, 0xFD, 0xF0, 0xA8, 0x9A, 0xF6, 0x4E,
+0x24, 0x6A, 0xDC, 0xF4, 0xA0, 0x9A, 0xF6, 0x4E,
 0x40, 0xA5, 0x8C, 0xEA, 0xCC, 0xEA, 0x01, 0x6E,
 0xCD, 0xEA, 0x8C, 0xEA, 0x40, 0xC5, 0x10, 0xF0,
-0x24, 0x6A, 0x80, 0xF6, 0x78, 0xA3, 0x5D, 0xF1,
-0x4C, 0x9A, 0x60, 0xC2, 0x10, 0xF0, 0x24, 0x6A,
-0xFC, 0xF2, 0x70, 0x9A, 0x57, 0x10, 0x30, 0xF0,
+0x24, 0x6A, 0x80, 0xF6, 0x74, 0xA3, 0x3C, 0xF5,
+0x44, 0x9A, 0x60, 0xC2, 0x10, 0xF0, 0x24, 0x6A,
+0xDB, 0xF6, 0x6C, 0x9A, 0x57, 0x10, 0x30, 0xF0,
 0x20, 0x6B, 0xEF, 0xF4, 0x08, 0x4B, 0x80, 0xF6,
-0xB4, 0xA3, 0x04, 0x6A, 0xFF, 0x6C, 0xAC, 0xEA,
-0x1D, 0x22, 0x10, 0xF0, 0x24, 0x6A, 0xFC, 0xF2,
-0xB4, 0x9A, 0x02, 0x6E, 0x08, 0x6F, 0x40, 0xA5,
+0xB0, 0xA3, 0x04, 0x6A, 0xFF, 0x6C, 0xAC, 0xEA,
+0x1D, 0x22, 0x10, 0xF0, 0x24, 0x6A, 0xDB, 0xF6,
+0xB0, 0x9A, 0x02, 0x6E, 0x08, 0x6F, 0x40, 0xA5,
 0xEB, 0xEF, 0x8C, 0xEA, 0xCD, 0xEA, 0x8C, 0xEA,
-0x40, 0xC5, 0x10, 0xF0, 0x24, 0x6A, 0xFD, 0xF0,
-0xA8, 0x9A, 0x40, 0xA5, 0x8C, 0xEA, 0xEC, 0xEA,
+0x40, 0xC5, 0x10, 0xF0, 0x24, 0x6A, 0xDC, 0xF4,
+0xA0, 0x9A, 0x40, 0xA5, 0x8C, 0xEA, 0xEC, 0xEA,
 0xCD, 0xEA, 0x8C, 0xEA, 0x40, 0xC5, 0x10, 0xF0,
-0x24, 0x6A, 0x80, 0xF6, 0x78, 0xA3, 0x5D, 0xF1,
-0x4C, 0x9A, 0x60, 0xC2, 0x10, 0xF0, 0x24, 0x6A,
-0xFC, 0xF2, 0x74, 0x9A, 0x2B, 0x10, 0x30, 0xF0,
+0x24, 0x6A, 0x80, 0xF6, 0x74, 0xA3, 0x3C, 0xF5,
+0x44, 0x9A, 0x60, 0xC2, 0x10, 0xF0, 0x24, 0x6A,
+0xDB, 0xF6, 0x70, 0x9A, 0x2B, 0x10, 0x30, 0xF0,
 0x20, 0x6B, 0xEF, 0xF4, 0x08, 0x4B, 0x80, 0xF6,
-0xB4, 0xA3, 0x04, 0x6A, 0xFF, 0x6C, 0xAC, 0xEA,
-0x1D, 0x22, 0x10, 0xF0, 0x24, 0x6A, 0xFC, 0xF2,
-0xB8, 0x9A, 0x02, 0x6E, 0x40, 0xA5, 0x8C, 0xEA,
+0xB0, 0xA3, 0x04, 0x6A, 0xFF, 0x6C, 0xAC, 0xEA,
+0x1D, 0x22, 0x10, 0xF0, 0x24, 0x6A, 0xDB, 0xF6,
+0xB4, 0x9A, 0x02, 0x6E, 0x40, 0xA5, 0x8C, 0xEA,
 0xCD, 0xEA, 0x8C, 0xEA, 0x40, 0xC5, 0x10, 0xF0,
-0x24, 0x6A, 0xFD, 0xF0, 0xA8, 0x9A, 0xF6, 0x4E,
+0x24, 0x6A, 0xDC, 0xF4, 0xA0, 0x9A, 0xF6, 0x4E,
 0x40, 0xA5, 0x8C, 0xEA, 0xCC, 0xEA, 0x03, 0x6E,
 0xCD, 0xEA, 0x8C, 0xEA, 0x40, 0xC5, 0x10, 0xF0,
-0x24, 0x6A, 0x80, 0xF6, 0x78, 0xA3, 0x5D, 0xF1,
-0x4C, 0x9A, 0x60, 0xC2, 0x10, 0xF0, 0x24, 0x6A,
-0xFC, 0xF2, 0x78, 0x9A, 0x40, 0xA3, 0xFF, 0x6C,
+0x24, 0x6A, 0x80, 0xF6, 0x74, 0xA3, 0x3C, 0xF5,
+0x44, 0x9A, 0x60, 0xC2, 0x10, 0xF0, 0x24, 0x6A,
+0xDB, 0xF6, 0x74, 0x9A, 0x40, 0xA3, 0xFF, 0x6C,
 0x01, 0x6D, 0x8C, 0xEA, 0xAD, 0xEA, 0x8C, 0xEA,
 0x40, 0xC3, 0x20, 0xE8, 0x30, 0xF0, 0x20, 0x6B,
-0xEF, 0xF4, 0x08, 0x4B, 0x80, 0xF6, 0x54, 0xA3,
+0xEF, 0xF4, 0x08, 0x4B, 0x80, 0xF6, 0x50, 0xA3,
 0x04, 0x6E, 0xFF, 0x6C, 0xCC, 0xEA, 0x1C, 0x22,
-0x10, 0xF0, 0x24, 0x6A, 0xFC, 0xF2, 0xBC, 0x9A,
+0x10, 0xF0, 0x24, 0x6A, 0xDB, 0xF6, 0xB8, 0x9A,
 0x02, 0x6F, 0x40, 0xA5, 0x8C, 0xEA, 0xED, 0xEA,
 0x8C, 0xEA, 0x40, 0xC5, 0x10, 0xF0, 0x24, 0x6A,
-0xFD, 0xF0, 0xA8, 0x9A, 0xF6, 0x4F, 0x40, 0xA5,
+0xDC, 0xF4, 0xA0, 0x9A, 0xF6, 0x4F, 0x40, 0xA5,
 0x8C, 0xEA, 0xEC, 0xEA, 0xCD, 0xEA, 0x8C, 0xEA,
 0x40, 0xC5, 0x10, 0xF0, 0x24, 0x6A, 0x80, 0xF6,
-0x78, 0xA3, 0x5D, 0xF1, 0x4C, 0x9A, 0x60, 0xC2,
-0x10, 0xF0, 0x24, 0x6A, 0xFC, 0xF2, 0x7C, 0x9A,
+0x74, 0xA3, 0x3C, 0xF5, 0x44, 0x9A, 0x60, 0xC2,
+0x10, 0xF0, 0x24, 0x6A, 0xDB, 0xF6, 0x78, 0x9A,
 0xFF, 0x6C, 0x01, 0x6D, 0x40, 0xA3, 0x8C, 0xEA,
 0xAD, 0xEA, 0x8C, 0xEA, 0x40, 0xC3, 0x20, 0xE8,
 0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A,
 0x08, 0xF3, 0x8A, 0xA2, 0x01, 0x6B, 0x6C, 0xEC,
 0x02, 0x24, 0x08, 0xF3, 0x6C, 0xC2, 0x30, 0xF0,
 0x20, 0x6A, 0xEF, 0xF4, 0x08, 0x4A, 0x80, 0xF6,
-0x94, 0xA2, 0x01, 0x6B, 0x6C, 0xEC, 0x02, 0x24,
-0xA0, 0xF6, 0x6D, 0xC2, 0x20, 0xE8, 0x00, 0x65,
+0x90, 0xA2, 0x01, 0x6B, 0x6C, 0xEC, 0x02, 0x24,
+0xA0, 0xF6, 0x69, 0xC2, 0x20, 0xE8, 0x00, 0x65,
 0x30, 0xF0, 0x20, 0x6D, 0xC0, 0xF1, 0x08, 0x4D,
 0x08, 0xF3, 0xCA, 0xA5, 0x02, 0x6B, 0xFF, 0x6A,
 0xCC, 0xEB, 0x4C, 0xEB, 0x4C, 0xEC, 0x02, 0x2B,
 0x08, 0xF3, 0x8E, 0xC5, 0x30, 0xF0, 0x20, 0x6A,
-0xEF, 0xF4, 0x08, 0x4A, 0x80, 0xF6, 0xB4, 0xA2,
+0xEF, 0xF4, 0x08, 0x4A, 0x80, 0xF6, 0xB0, 0xA2,
 0x02, 0x6B, 0xAC, 0xEB, 0x02, 0x2B, 0xA0, 0xF6,
-0x8F, 0xC2, 0x20, 0xE8, 0xFC, 0x63, 0x07, 0x62,
+0x8B, 0xC2, 0x20, 0xE8, 0xFC, 0x63, 0x07, 0x62,
 0x06, 0xD1, 0x05, 0xD0, 0x30, 0xF0, 0x20, 0x68,
 0xC0, 0xF1, 0x08, 0x48, 0x68, 0xF3, 0x74, 0xA0,
 0x7F, 0x6A, 0xFF, 0x69, 0x6C, 0xEA, 0x02, 0x72,
 0x2A, 0x60, 0x68, 0xF3, 0x75, 0xA0, 0x10, 0x6A,
 0x4B, 0xEA, 0x6C, 0xEA, 0x2C, 0xEA, 0x23, 0x22,
-0x00, 0x18, 0x0C, 0xC9, 0x20, 0x2A, 0x08, 0xF3,
+0x00, 0x18, 0x0B, 0xC9, 0x20, 0x2A, 0x08, 0xF3,
 0x6A, 0xA0, 0x01, 0x6A, 0x6C, 0xEA, 0x2C, 0xEA,
 0x08, 0x22, 0x30, 0xF0, 0x20, 0x6A, 0x2E, 0xF4,
 0x48, 0x9A, 0x00, 0x6D, 0x0C, 0x6C, 0xC5, 0x67,
 0x40, 0xEA, 0x30, 0xF0, 0x20, 0x6B, 0xEF, 0xF4,
-0x08, 0x4B, 0x80, 0xF6, 0x94, 0xA3, 0x01, 0x6A,
+0x08, 0x4B, 0x80, 0xF6, 0x90, 0xA3, 0x01, 0x6A,
 0x8C, 0xEA, 0x09, 0x22, 0x30, 0xF0, 0x20, 0x6A,
-0x2E, 0xF4, 0x48, 0x9A, 0x80, 0xF6, 0xD5, 0xA3,
+0x2E, 0xF4, 0x48, 0x9A, 0x80, 0xF6, 0xD1, 0xA3,
 0x0C, 0x6C, 0x00, 0x6D, 0x40, 0xEA, 0x07, 0x97,
 0x06, 0x91, 0x05, 0x90, 0x04, 0x63, 0x00, 0xEF,
 0xFD, 0x63, 0x05, 0x62, 0x30, 0xF0, 0x20, 0x6B,
@@ -24885,20 +24813,20 @@ u8 array_mp_8821c_fw_nic[] = {
 0x08, 0x10, 0x08, 0xF3, 0x4A, 0xA3, 0x5A, 0x32,
 0x8C, 0xEA, 0xFF, 0x6C, 0x8C, 0xEA, 0x08, 0xF3,
 0x8E, 0xA3, 0x30, 0xF0, 0x20, 0x6B, 0xEF, 0xF4,
-0x08, 0x4B, 0x80, 0xF6, 0xD4, 0xA3, 0x01, 0x6D,
-0xAC, 0xEE, 0x08, 0x26, 0x80, 0xF6, 0x54, 0xA3,
+0x08, 0x4B, 0x80, 0xF6, 0xD0, 0xA3, 0x01, 0x6D,
+0xAC, 0xEE, 0x08, 0x26, 0x80, 0xF6, 0x50, 0xA3,
 0xFF, 0x6C, 0x5A, 0x32, 0xAC, 0xEA, 0x8C, 0xEA,
-0xA0, 0xF6, 0x8F, 0xA3, 0x24, 0x22, 0x02, 0x74,
+0xA0, 0xF6, 0x8B, 0xA3, 0x24, 0x22, 0x02, 0x74,
 0x26, 0x60, 0x30, 0xF0, 0x20, 0x6A, 0xC8, 0xF4,
 0x72, 0xA2, 0x01, 0x6A, 0x6C, 0xEA, 0x08, 0x22,
 0x30, 0xF0, 0x20, 0x6A, 0x2E, 0xF4, 0x48, 0x9A,
 0x02, 0x6C, 0x01, 0x6D, 0x00, 0x6E, 0x40, 0xEA,
 0x30, 0xF0, 0x20, 0x6B, 0xEF, 0xF4, 0x08, 0x4B,
-0x80, 0xF6, 0x94, 0xA3, 0x01, 0x6A, 0x8C, 0xEA,
+0x80, 0xF6, 0x90, 0xA3, 0x01, 0x6A, 0x8C, 0xEA,
 0x0C, 0x22, 0x30, 0xF0, 0x20, 0x6A, 0x2E, 0xF4,
-0x48, 0x9A, 0x80, 0xF6, 0xD5, 0xA3, 0x02, 0x6C,
+0x48, 0x9A, 0x80, 0xF6, 0xD1, 0xA3, 0x02, 0x6C,
 0x01, 0x6D, 0x40, 0xEA, 0x02, 0x10, 0x02, 0x74,
-0x02, 0x60, 0x00, 0x18, 0xFD, 0xF1, 0x05, 0x97,
+0x02, 0x60, 0x00, 0x18, 0x9F, 0xF1, 0x05, 0x97,
 0x03, 0x63, 0x00, 0xEF, 0xFD, 0x63, 0x05, 0x62,
 0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A,
 0x08, 0xF3, 0x6A, 0xA2, 0x01, 0x6C, 0xA4, 0x67,
@@ -24906,28 +24834,28 @@ u8 array_mp_8821c_fw_nic[] = {
 0x02, 0x6A, 0x6C, 0xEA, 0xFF, 0x6B, 0x6C, 0xEA,
 0x02, 0x22, 0x00, 0x18, 0x6D, 0xC5, 0x30, 0xF0,
 0x20, 0x6A, 0xEF, 0xF4, 0x08, 0x4A, 0x80, 0xF6,
-0x74, 0xA2, 0x01, 0x6C, 0xA4, 0x67, 0x6C, 0xED,
-0x09, 0x25, 0xA0, 0xF6, 0x8C, 0xC2, 0x02, 0x6A,
+0x70, 0xA2, 0x01, 0x6C, 0xA4, 0x67, 0x6C, 0xED,
+0x09, 0x25, 0xA0, 0xF6, 0x88, 0xC2, 0x02, 0x6A,
 0x6C, 0xEA, 0xFF, 0x6B, 0x6C, 0xEA, 0x02, 0x22,
 0x00, 0x18, 0x6D, 0xC5, 0x05, 0x97, 0x03, 0x63,
 0x00, 0xEF, 0x00, 0x65, 0xFD, 0x63, 0x05, 0x62,
 0x04, 0xD0, 0x30, 0xF0, 0x20, 0x68, 0xEF, 0xF4,
-0x08, 0x48, 0x80, 0xF6, 0x74, 0xA0, 0x01, 0x6A,
-0x6C, 0xEA, 0x26, 0x22, 0xA0, 0xF6, 0x4E, 0xA0,
-0x04, 0x72, 0x22, 0x60, 0xA0, 0xF6, 0x4F, 0xA0,
+0x08, 0x48, 0x80, 0xF6, 0x70, 0xA0, 0x01, 0x6A,
+0x6C, 0xEA, 0x26, 0x22, 0xA0, 0xF6, 0x4A, 0xA0,
+0x04, 0x72, 0x22, 0x60, 0xA0, 0xF6, 0x4B, 0xA0,
 0x02, 0x72, 0x1E, 0x60, 0x02, 0x6A, 0x6C, 0xEA,
 0xFF, 0x6B, 0x6C, 0xEA, 0x03, 0x22, 0x00, 0x18,
-0x6D, 0xC5, 0x16, 0x10, 0x00, 0x18, 0x1C, 0xF2,
-0xA0, 0xF6, 0x4F, 0xA0, 0x08, 0x72, 0x06, 0x61,
+0x6D, 0xC5, 0x16, 0x10, 0x00, 0x18, 0xBE, 0xF1,
+0xA0, 0xF6, 0x4B, 0xA0, 0x08, 0x72, 0x06, 0x61,
 0x30, 0xF0, 0x20, 0x6A, 0x2E, 0xF4, 0x48, 0x9A,
 0x0C, 0x6C, 0x06, 0x10, 0x09, 0x2A, 0x30, 0xF0,
 0x20, 0x6A, 0x2E, 0xF4, 0x48, 0x9A, 0x04, 0x6C,
-0x80, 0xF6, 0xD5, 0xA0, 0x00, 0x6D, 0x40, 0xEA,
+0x80, 0xF6, 0xD1, 0xA0, 0x00, 0x6D, 0x40, 0xEA,
 0x30, 0xF0, 0x20, 0x6B, 0xEF, 0xF4, 0x08, 0x4B,
-0x00, 0xF2, 0x43, 0xA3, 0x51, 0x2A, 0x30, 0xF0,
+0xE0, 0xF1, 0x5F, 0xA3, 0x51, 0x2A, 0x30, 0xF0,
 0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A, 0x08, 0xF3,
 0xD0, 0xA2, 0x01, 0x6D, 0xFF, 0x6C, 0xAC, 0xEE,
-0x47, 0x26, 0x80, 0xF6, 0x74, 0xA3, 0xAC, 0xEB,
+0x47, 0x26, 0x80, 0xF6, 0x70, 0xA3, 0xAC, 0xEB,
 0x8C, 0xEB, 0x42, 0x23, 0x10, 0xF0, 0x30, 0x6B,
 0x00, 0xF0, 0x00, 0x4B, 0xC1, 0xF7, 0xB0, 0xA3,
 0xFF, 0x75, 0x21, 0x60, 0xFF, 0x4D, 0xC1, 0xF7,
@@ -24938,7 +24866,7 @@ u8 array_mp_8821c_fw_nic[] = {
 0xC1, 0xF7, 0xAE, 0xC3, 0x68, 0xF3, 0xB2, 0xA2,
 0x08, 0xF3, 0xD4, 0xC2, 0x08, 0xF3, 0xB3, 0xC2,
 0xC1, 0xF7, 0x72, 0xA3, 0x0F, 0x6A, 0x6C, 0xEA,
-0x4C, 0xEC, 0x00, 0x18, 0x72, 0xEC, 0x30, 0xF0,
+0x4C, 0xEC, 0x00, 0x18, 0x14, 0xEC, 0x30, 0xF0,
 0x20, 0x6A, 0xC8, 0xF4, 0xB8, 0xA2, 0x30, 0xF0,
 0x20, 0x6A, 0xEE, 0xF5, 0x48, 0x9A, 0x0F, 0x6B,
 0xA6, 0x35, 0x02, 0x6C, 0x6C, 0xED, 0x40, 0xEA,
@@ -24946,194 +24874,194 @@ u8 array_mp_8821c_fw_nic[] = {
 0x40, 0xEA, 0x06, 0x2A, 0x30, 0xF0, 0x20, 0x6A,
 0xEE, 0xF5, 0x50, 0x9A, 0x06, 0x6C, 0x40, 0xEA,
 0x05, 0x97, 0x04, 0x90, 0x03, 0x63, 0x00, 0xEF,
-0xFD, 0x63, 0x05, 0x62, 0x00, 0x18, 0x5B, 0xF2,
+0xFD, 0x63, 0x05, 0x62, 0x00, 0x18, 0xFD, 0xF1,
 0x05, 0x97, 0x03, 0x63, 0x00, 0xEF, 0x00, 0x65,
-0xFD, 0x63, 0x05, 0x62, 0x00, 0x18, 0x5B, 0xF2,
+0xFD, 0x63, 0x05, 0x62, 0x00, 0x18, 0xFD, 0xF1,
 0x05, 0x97, 0x03, 0x63, 0x00, 0xEF, 0x00, 0x65,
-0xFD, 0x63, 0x05, 0x62, 0x00, 0x18, 0x5B, 0xF2,
+0xFD, 0x63, 0x05, 0x62, 0x00, 0x18, 0xFD, 0xF1,
 0x05, 0x97, 0x03, 0x63, 0x00, 0xEF, 0x00, 0x65,
 0xFB, 0x63, 0x09, 0x62, 0x08, 0xD1, 0x07, 0xD0,
 0x30, 0xF0, 0x20, 0x6A, 0xEF, 0xF4, 0x08, 0x4A,
-0x04, 0xD2, 0x80, 0xF6, 0x56, 0xA2, 0xFF, 0x69,
+0x04, 0xD2, 0x80, 0xF6, 0x52, 0xA2, 0xFF, 0x69,
 0x04, 0x67, 0x01, 0x72, 0x2C, 0xE8, 0x31, 0x60,
 0x03, 0x22, 0x02, 0x72, 0x60, 0x60, 0xC3, 0x10,
 0x30, 0xF0, 0x20, 0x6B, 0x4E, 0xF2, 0x54, 0x9B,
 0x01, 0x6C, 0xC0, 0x6D, 0x40, 0xEA, 0x20, 0x6A,
 0x4D, 0xE8, 0x04, 0x92, 0x2C, 0xE8, 0x80, 0xF6,
-0x94, 0xA2, 0x04, 0x6A, 0x8C, 0xEA, 0x2C, 0xEA,
-0x0F, 0x22, 0x10, 0xF0, 0x24, 0x6A, 0x5C, 0xF7,
-0x40, 0x9A, 0x01, 0x6C, 0x10, 0xF0, 0x00, 0x6D,
+0x90, 0xA2, 0x04, 0x6A, 0x8C, 0xEA, 0x2C, 0xEA,
+0x0F, 0x22, 0x10, 0xF0, 0x24, 0x6A, 0x1C, 0xF3,
+0x5C, 0x9A, 0x01, 0x6C, 0x10, 0xF0, 0x00, 0x6D,
 0x60, 0xA2, 0x6C, 0xE9, 0x20, 0xC2, 0x30, 0xF0,
 0x20, 0x6B, 0x4E, 0xF2, 0x54, 0x9B, 0x61, 0x10,
 0x02, 0x6B, 0x8C, 0xEB, 0x2C, 0xEB, 0x05, 0x23,
-0x04, 0x93, 0xA0, 0xF6, 0x4C, 0xC3, 0xA0, 0xF6,
-0x4D, 0xC3, 0x01, 0x6C, 0x10, 0xF0, 0x00, 0x6D,
+0x04, 0x93, 0xA0, 0xF6, 0x48, 0xC3, 0xA0, 0xF6,
+0x49, 0xC3, 0x01, 0x6C, 0x10, 0xF0, 0x00, 0x6D,
 0x64, 0x10, 0x30, 0xF0, 0x20, 0x6B, 0x4E, 0xF2,
 0x54, 0x9B, 0x01, 0x6C, 0x00, 0xF3, 0x00, 0x6D,
 0x40, 0xEA, 0x20, 0x6A, 0x4D, 0xE8, 0x04, 0x92,
-0x2C, 0xE8, 0x80, 0xF6, 0x94, 0xA2, 0x04, 0x6A,
+0x2C, 0xE8, 0x80, 0xF6, 0x90, 0xA2, 0x04, 0x6A,
 0x8C, 0xEA, 0x2C, 0xEA, 0x11, 0x22, 0x10, 0xF0,
-0x24, 0x6A, 0x5C, 0xF7, 0x40, 0x9A, 0x01, 0x6C,
+0x24, 0x6A, 0x1C, 0xF3, 0x5C, 0x9A, 0x01, 0x6C,
 0x60, 0xA2, 0x6C, 0xE9, 0x20, 0xC2, 0x30, 0xF0,
 0x20, 0x6B, 0x4E, 0xF2, 0x54, 0x9B, 0x10, 0xF0,
-0x24, 0x6B, 0x5C, 0xF3, 0xB0, 0x9B, 0x31, 0x10,
+0x24, 0x6B, 0x5B, 0xF7, 0xA0, 0x9B, 0x31, 0x10,
 0x02, 0x6B, 0x8C, 0xEB, 0x2C, 0xEB, 0x05, 0x23,
-0x04, 0x93, 0xA0, 0xF6, 0x4C, 0xC3, 0xA0, 0xF6,
-0x4D, 0xC3, 0x10, 0xF0, 0x24, 0x6A, 0x01, 0x6C,
-0x5C, 0xF3, 0xB0, 0x9A, 0x32, 0x10, 0x30, 0xF0,
+0x04, 0x93, 0xA0, 0xF6, 0x48, 0xC3, 0xA0, 0xF6,
+0x49, 0xC3, 0x10, 0xF0, 0x24, 0x6A, 0x01, 0x6C,
+0x5B, 0xF7, 0xA0, 0x9A, 0x32, 0x10, 0x30, 0xF0,
 0x20, 0x6B, 0x4E, 0xF2, 0x54, 0x9B, 0x01, 0x6C,
 0x01, 0xF4, 0x00, 0x6D, 0x40, 0xEA, 0x20, 0x6A,
 0x4D, 0xE8, 0x04, 0x92, 0x2C, 0xE8, 0x80, 0xF6,
-0x94, 0xA2, 0x04, 0x6A, 0x8C, 0xEA, 0x2C, 0xEA,
-0x12, 0x22, 0x10, 0xF0, 0x24, 0x6A, 0x5C, 0xF7,
-0x40, 0x9A, 0x01, 0x6C, 0x60, 0xA2, 0x6C, 0xE9,
+0x90, 0xA2, 0x04, 0x6A, 0x8C, 0xEA, 0x2C, 0xEA,
+0x12, 0x22, 0x10, 0xF0, 0x24, 0x6A, 0x1C, 0xF3,
+0x5C, 0x9A, 0x01, 0x6C, 0x60, 0xA2, 0x6C, 0xE9,
 0x20, 0xC2, 0x30, 0xF0, 0x20, 0x6B, 0x4E, 0xF2,
-0x54, 0x9B, 0x10, 0xF0, 0x24, 0x6B, 0x5C, 0xF3,
-0xB4, 0x9B, 0x40, 0xEA, 0x10, 0x10, 0x02, 0x6B,
+0x54, 0x9B, 0x10, 0xF0, 0x24, 0x6B, 0x5B, 0xF7,
+0xA4, 0x9B, 0x40, 0xEA, 0x10, 0x10, 0x02, 0x6B,
 0x8C, 0xEB, 0x2C, 0xEB, 0x05, 0x23, 0x04, 0x93,
-0xA0, 0xF6, 0x4C, 0xC3, 0xA0, 0xF6, 0x4D, 0xC3,
-0x10, 0xF0, 0x24, 0x6A, 0x5C, 0xF3, 0xB4, 0x9A,
-0x01, 0x6C, 0x00, 0x18, 0x98, 0xE1, 0x30, 0xF0,
-0x21, 0x6A, 0x70, 0xF3, 0x9C, 0xA2, 0x08, 0x6A,
+0xA0, 0xF6, 0x48, 0xC3, 0xA0, 0xF6, 0x49, 0xC3,
+0x10, 0xF0, 0x24, 0x6A, 0x5B, 0xF7, 0xA4, 0x9A,
+0x01, 0x6C, 0x00, 0x18, 0x42, 0xE1, 0x30, 0xF0,
+0x21, 0x6A, 0x70, 0xF3, 0x98, 0xA2, 0x08, 0x6A,
 0xFF, 0x6B, 0x8C, 0xEA, 0x09, 0x22, 0x10, 0x6A,
 0x8C, 0xEA, 0x6C, 0xEA, 0x02, 0x2A, 0x02, 0x6A,
 0x01, 0x10, 0x04, 0x6A, 0x4D, 0xE8, 0x6C, 0xE8,
-0x30, 0xF0, 0x21, 0x6A, 0x70, 0xF3, 0x9C, 0xA2,
+0x30, 0xF0, 0x21, 0x6A, 0x70, 0xF3, 0x98, 0xA2,
 0x02, 0x6A, 0xFF, 0x6B, 0x8C, 0xEA, 0x08, 0x22,
 0x20, 0x6A, 0x8C, 0xEA, 0x6C, 0xEA, 0x04, 0x22,
 0x80, 0x6A, 0x4B, 0xEA, 0x4D, 0xE8, 0x6C, 0xE8,
-0x30, 0xF0, 0x21, 0x6A, 0x70, 0xF3, 0xBC, 0xA2,
+0x30, 0xF0, 0x21, 0x6A, 0x70, 0xF3, 0xB8, 0xA2,
 0x40, 0x6C, 0x44, 0x67, 0xAC, 0xEA, 0xFF, 0x6B,
 0x06, 0x2A, 0x80, 0x4A, 0xAC, 0xEA, 0x6C, 0xEA,
 0x02, 0x2A, 0x8D, 0xE8, 0x6C, 0xE8, 0x50, 0x67,
 0x09, 0x97, 0x08, 0x91, 0x07, 0x90, 0x05, 0x63,
 0x00, 0xEF, 0x00, 0x65, 0xFD, 0x63, 0x05, 0x62,
-0x00, 0x18, 0x42, 0xED, 0x30, 0xF0, 0x20, 0x6A,
+0x00, 0x18, 0xE4, 0xEC, 0x30, 0xF0, 0x20, 0x6A,
 0xC0, 0xF1, 0x08, 0x4A, 0x08, 0xF3, 0x8A, 0xA2,
 0x02, 0x6B, 0x6C, 0xEC, 0x02, 0x24, 0x08, 0xF3,
 0x6D, 0xC2, 0x30, 0xF0, 0x20, 0x6A, 0xEF, 0xF4,
-0x08, 0x4A, 0x80, 0xF6, 0x94, 0xA2, 0x02, 0x6B,
-0x6C, 0xEC, 0x02, 0x24, 0xA0, 0xF6, 0x6E, 0xC2,
+0x08, 0x4A, 0x80, 0xF6, 0x90, 0xA2, 0x02, 0x6B,
+0x6C, 0xEC, 0x02, 0x24, 0xA0, 0xF6, 0x6A, 0xC2,
 0x05, 0x97, 0x03, 0x63, 0x00, 0xEF, 0x00, 0x65,
 0xFD, 0x63, 0x05, 0x62, 0x04, 0xD0, 0x30, 0xF0,
 0x20, 0x6A, 0xC8, 0xF4, 0x72, 0xA2, 0x02, 0x6A,
 0xFF, 0x6C, 0x6C, 0xEA, 0x0A, 0x22, 0x10, 0xF0,
-0x24, 0x6A, 0x3C, 0xF7, 0x68, 0x9A, 0x40, 0x6D,
+0x24, 0x6A, 0x1C, 0xF3, 0x64, 0x9A, 0x40, 0x6D,
 0x40, 0xA3, 0x8C, 0xEA, 0xAD, 0xEA, 0x8C, 0xEA,
 0x40, 0xC3, 0x30, 0xF0, 0x20, 0x6A, 0xEF, 0xF4,
-0x08, 0x4A, 0x80, 0xF6, 0x94, 0xA2, 0x02, 0x6B,
-0x8C, 0xEB, 0x0C, 0x23, 0x80, 0xF6, 0x16, 0xA2,
-0x90, 0x67, 0x00, 0x18, 0x0C, 0xF0, 0x40, 0x6B,
+0x08, 0x4A, 0x80, 0xF6, 0x90, 0xA2, 0x02, 0x6B,
+0x8C, 0xEB, 0x0C, 0x23, 0x80, 0xF6, 0x12, 0xA2,
+0x90, 0x67, 0x00, 0x18, 0xAE, 0xEF, 0x40, 0x6B,
 0x4D, 0xEB, 0xFF, 0x6D, 0x90, 0x67, 0x6C, 0xED,
-0x00, 0x18, 0xFF, 0xEF, 0x30, 0xF0, 0x20, 0x6A,
+0x00, 0x18, 0xA1, 0xEF, 0x30, 0xF0, 0x20, 0x6A,
 0x6E, 0xF2, 0x58, 0x9A, 0xFF, 0x6C, 0xA4, 0x67,
-0x23, 0x6E, 0x40, 0xEA, 0x00, 0x18, 0x42, 0xED,
+0x23, 0x6E, 0x40, 0xEA, 0x00, 0x18, 0xE4, 0xEC,
 0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A,
 0x08, 0xF3, 0x8A, 0xA2, 0x02, 0x6B, 0x6C, 0xEC,
 0x02, 0x24, 0x08, 0xF3, 0x6D, 0xC2, 0x30, 0xF0,
 0x20, 0x6A, 0xEF, 0xF4, 0x08, 0x4A, 0x80, 0xF6,
-0x94, 0xA2, 0x02, 0x6B, 0x6C, 0xEC, 0x02, 0x24,
-0xA0, 0xF6, 0x6E, 0xC2, 0x05, 0x97, 0x04, 0x90,
+0x90, 0xA2, 0x02, 0x6B, 0x6C, 0xEC, 0x02, 0x24,
+0xA0, 0xF6, 0x6A, 0xC2, 0x05, 0x97, 0x04, 0x90,
 0x03, 0x63, 0x00, 0xEF, 0xFD, 0x63, 0x05, 0x62,
 0x30, 0xF0, 0x20, 0x6A, 0x6E, 0xF2, 0x58, 0x9A,
 0xFF, 0x6C, 0xA4, 0x67, 0x20, 0x6E, 0x40, 0xEA,
-0x00, 0x18, 0x42, 0xED, 0x30, 0xF0, 0x20, 0x6A,
+0x00, 0x18, 0xE4, 0xEC, 0x30, 0xF0, 0x20, 0x6A,
 0xC0, 0xF1, 0x08, 0x4A, 0x08, 0xF3, 0x8A, 0xA2,
 0x02, 0x6B, 0x6C, 0xEC, 0x02, 0x24, 0x08, 0xF3,
 0x6D, 0xC2, 0x30, 0xF0, 0x20, 0x6A, 0xEF, 0xF4,
-0x08, 0x4A, 0x80, 0xF6, 0x94, 0xA2, 0x02, 0x6B,
-0x6C, 0xEC, 0x02, 0x24, 0xA0, 0xF6, 0x6E, 0xC2,
+0x08, 0x4A, 0x80, 0xF6, 0x90, 0xA2, 0x02, 0x6B,
+0x6C, 0xEC, 0x02, 0x24, 0xA0, 0xF6, 0x6A, 0xC2,
 0x05, 0x97, 0x03, 0x63, 0x00, 0xEF, 0x00, 0x65,
-0xFD, 0x63, 0x05, 0x62, 0x00, 0x18, 0x9D, 0xF0,
-0x00, 0x18, 0x53, 0xF3, 0x05, 0x97, 0x03, 0x63,
+0xFD, 0x63, 0x05, 0x62, 0x00, 0x18, 0x3F, 0xF0,
+0x00, 0x18, 0xF5, 0xF2, 0x05, 0x97, 0x03, 0x63,
 0x00, 0xEF, 0x00, 0x65, 0xFD, 0x63, 0x05, 0x62,
-0x00, 0x18, 0x6F, 0xED, 0x30, 0xF0, 0x20, 0x6A,
+0x00, 0x18, 0x11, 0xED, 0x30, 0xF0, 0x20, 0x6A,
 0xC0, 0xF1, 0x08, 0x4A, 0x08, 0xF3, 0x8A, 0xA2,
 0x02, 0x6B, 0x8C, 0xEB, 0x03, 0x23, 0x03, 0x6B,
 0x08, 0xF3, 0x6D, 0xC2, 0x30, 0xF0, 0x20, 0x6A,
-0xEF, 0xF4, 0x08, 0x4A, 0x80, 0xF6, 0x94, 0xA2,
+0xEF, 0xF4, 0x08, 0x4A, 0x80, 0xF6, 0x90, 0xA2,
 0x02, 0x6B, 0x8C, 0xEB, 0x03, 0x23, 0x03, 0x6B,
-0xA0, 0xF6, 0x6E, 0xC2, 0x05, 0x97, 0x03, 0x63,
+0xA0, 0xF6, 0x6A, 0xC2, 0x05, 0x97, 0x03, 0x63,
 0x00, 0xEF, 0x00, 0x65, 0xFC, 0x63, 0x07, 0x62,
-0x06, 0xD1, 0x05, 0xD0, 0x00, 0x18, 0x6F, 0xED,
+0x06, 0xD1, 0x05, 0xD0, 0x00, 0x18, 0x11, 0xED,
 0x30, 0xF0, 0x20, 0x6A, 0x6E, 0xF2, 0x58, 0x9A,
 0xFF, 0x6C, 0x6F, 0x6D, 0x24, 0x6E, 0x40, 0xEA,
 0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A,
 0x08, 0xF3, 0x8A, 0xA2, 0x02, 0x6B, 0x8C, 0xEB,
-0x0B, 0x23, 0x10, 0xF0, 0x24, 0x6B, 0x3C, 0xF7,
-0x88, 0x9B, 0xBF, 0x6B, 0xA0, 0xA4, 0xAC, 0xEB,
+0x0B, 0x23, 0x10, 0xF0, 0x24, 0x6B, 0x1C, 0xF3,
+0x84, 0x9B, 0xBF, 0x6B, 0xA0, 0xA4, 0xAC, 0xEB,
 0x60, 0xC4, 0x04, 0x6B, 0x08, 0xF3, 0x6D, 0xC2,
 0x30, 0xF0, 0x20, 0x69, 0xEF, 0xF4, 0x08, 0x49,
-0x80, 0xF6, 0x74, 0xA1, 0x02, 0x6A, 0x6C, 0xEA,
-0x0D, 0x22, 0x80, 0xF6, 0x16, 0xA1, 0x90, 0x67,
-0x00, 0x18, 0x0C, 0xF0, 0xBF, 0x6D, 0x4C, 0xED,
-0x90, 0x67, 0x00, 0x18, 0xFF, 0xEF, 0x04, 0x6A,
-0xA0, 0xF6, 0x4E, 0xC1, 0x07, 0x97, 0x06, 0x91,
+0x80, 0xF6, 0x70, 0xA1, 0x02, 0x6A, 0x6C, 0xEA,
+0x0D, 0x22, 0x80, 0xF6, 0x12, 0xA1, 0x90, 0x67,
+0x00, 0x18, 0xAE, 0xEF, 0xBF, 0x6D, 0x4C, 0xED,
+0x90, 0x67, 0x00, 0x18, 0xA1, 0xEF, 0x04, 0x6A,
+0xA0, 0xF6, 0x4A, 0xC1, 0x07, 0x97, 0x06, 0x91,
 0x05, 0x90, 0x04, 0x63, 0x00, 0xEF, 0x00, 0x65,
-0xFD, 0x63, 0x05, 0x62, 0x00, 0x18, 0x6F, 0xED,
+0xFD, 0x63, 0x05, 0x62, 0x00, 0x18, 0x11, 0xED,
 0x30, 0xF0, 0x20, 0x6A, 0x6E, 0xF2, 0x58, 0x9A,
 0x00, 0x6D, 0xFF, 0x6C, 0xC5, 0x67, 0x40, 0xEA,
 0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A,
 0x08, 0xF3, 0x8A, 0xA2, 0x02, 0x6B, 0x8C, 0xEB,
 0x03, 0x23, 0x01, 0x6B, 0x08, 0xF3, 0x6D, 0xC2,
 0x30, 0xF0, 0x20, 0x6A, 0xEF, 0xF4, 0x08, 0x4A,
-0x80, 0xF6, 0x94, 0xA2, 0x02, 0x6B, 0x8C, 0xEB,
-0x03, 0x23, 0x01, 0x6B, 0xA0, 0xF6, 0x6E, 0xC2,
+0x80, 0xF6, 0x90, 0xA2, 0x02, 0x6B, 0x8C, 0xEB,
+0x03, 0x23, 0x01, 0x6B, 0xA0, 0xF6, 0x6A, 0xC2,
 0x05, 0x97, 0x03, 0x63, 0x00, 0xEF, 0x00, 0x65,
-0xFD, 0x63, 0x05, 0x62, 0x00, 0x18, 0x9A, 0xF3,
-0x00, 0x18, 0x70, 0xF0, 0x05, 0x97, 0x03, 0x63,
+0xFD, 0x63, 0x05, 0x62, 0x00, 0x18, 0x3C, 0xF3,
+0x00, 0x18, 0x12, 0xF0, 0x05, 0x97, 0x03, 0x63,
 0x00, 0xEF, 0x00, 0x65, 0xFD, 0x63, 0x05, 0x62,
 0x30, 0xF0, 0x20, 0x6D, 0xC0, 0xF1, 0x08, 0x4D,
 0x08, 0xF3, 0xCA, 0xA5, 0x02, 0x6B, 0xFF, 0x6A,
 0xCC, 0xEB, 0x4C, 0xEB, 0x4C, 0xEC, 0x00, 0x6A,
 0x02, 0x23, 0x08, 0xF3, 0x4D, 0xA5, 0x30, 0xF0,
 0x20, 0x6B, 0xEF, 0xF4, 0x08, 0x4B, 0x80, 0xF6,
-0xD4, 0xA3, 0x02, 0x6D, 0xCC, 0xED, 0x02, 0x25,
-0xA0, 0xF6, 0x4E, 0xA3, 0x8A, 0xEA, 0x69, 0x60,
+0xD0, 0xA3, 0x02, 0x6D, 0xCC, 0xED, 0x02, 0x25,
+0xA0, 0xF6, 0x4A, 0xA3, 0x8A, 0xEA, 0x69, 0x60,
 0x05, 0x5C, 0x67, 0x60, 0x10, 0xF0, 0x24, 0x6B,
-0x88, 0x34, 0x9C, 0xF2, 0x1C, 0x4B, 0x8D, 0xE3,
+0x88, 0x34, 0x7B, 0xF6, 0x18, 0x4B, 0x8D, 0xE3,
 0x60, 0x9B, 0x00, 0xEB, 0x04, 0x72, 0x03, 0x61,
-0x00, 0x18, 0xD4, 0xF0, 0x5A, 0x10, 0x02, 0x72,
-0x03, 0x61, 0x00, 0x18, 0xAE, 0xF3, 0x55, 0x10,
-0x03, 0x72, 0x03, 0x61, 0x00, 0x18, 0x0C, 0xF1,
+0x00, 0x18, 0x76, 0xF0, 0x5A, 0x10, 0x02, 0x72,
+0x03, 0x61, 0x00, 0x18, 0x50, 0xF3, 0x55, 0x10,
+0x03, 0x72, 0x03, 0x61, 0x00, 0x18, 0xAE, 0xF0,
 0x50, 0x10, 0x01, 0x72, 0x4E, 0x61, 0x00, 0x18,
-0x70, 0xF0, 0x4B, 0x10, 0x04, 0x72, 0x03, 0x61,
-0x00, 0x18, 0xB4, 0xF0, 0x46, 0x10, 0x02, 0x72,
-0x03, 0x61, 0x00, 0x18, 0x9A, 0xF3, 0x41, 0x10,
-0x03, 0x72, 0x03, 0x61, 0x00, 0x18, 0xF9, 0xF0,
-0x3C, 0x10, 0x3B, 0x2A, 0x00, 0x18, 0x9D, 0xF0,
+0x12, 0xF0, 0x4B, 0x10, 0x04, 0x72, 0x03, 0x61,
+0x00, 0x18, 0x56, 0xF0, 0x46, 0x10, 0x02, 0x72,
+0x03, 0x61, 0x00, 0x18, 0x3C, 0xF3, 0x41, 0x10,
+0x03, 0x72, 0x03, 0x61, 0x00, 0x18, 0x9B, 0xF0,
+0x3C, 0x10, 0x3B, 0x2A, 0x00, 0x18, 0x3F, 0xF0,
 0x38, 0x10, 0x04, 0x72, 0x03, 0x61, 0x00, 0x18,
-0x2C, 0xF3, 0x33, 0x10, 0x01, 0x72, 0x03, 0x61,
-0x00, 0x18, 0x53, 0xF3, 0x2E, 0x10, 0x03, 0x72,
-0x03, 0x61, 0x00, 0x18, 0x1D, 0xF3, 0x29, 0x10,
-0x28, 0x2A, 0x00, 0x18, 0x66, 0xF3, 0x25, 0x10,
-0x04, 0x72, 0x03, 0x61, 0x00, 0x18, 0xD9, 0xF0,
+0xCE, 0xF2, 0x33, 0x10, 0x01, 0x72, 0x03, 0x61,
+0x00, 0x18, 0xF5, 0xF2, 0x2E, 0x10, 0x03, 0x72,
+0x03, 0x61, 0x00, 0x18, 0xBF, 0xF2, 0x29, 0x10,
+0x28, 0x2A, 0x00, 0x18, 0x08, 0xF3, 0x25, 0x10,
+0x04, 0x72, 0x03, 0x61, 0x00, 0x18, 0x7B, 0xF0,
 0x20, 0x10, 0x01, 0x72, 0x03, 0x61, 0x00, 0x18,
-0x8A, 0xF0, 0x1B, 0x10, 0x02, 0x72, 0x03, 0x61,
-0x00, 0x18, 0x6B, 0xF3, 0x16, 0x10, 0x15, 0x2A,
-0x00, 0x18, 0xAF, 0xF0, 0x12, 0x10, 0x03, 0x72,
-0x03, 0x61, 0x00, 0x18, 0x11, 0xF1, 0x0D, 0x10,
-0x01, 0x72, 0x03, 0x61, 0x00, 0x18, 0x52, 0xF0,
+0x2C, 0xF0, 0x1B, 0x10, 0x02, 0x72, 0x03, 0x61,
+0x00, 0x18, 0x0D, 0xF3, 0x16, 0x10, 0x15, 0x2A,
+0x00, 0x18, 0x51, 0xF0, 0x12, 0x10, 0x03, 0x72,
+0x03, 0x61, 0x00, 0x18, 0xB3, 0xF0, 0x0D, 0x10,
+0x01, 0x72, 0x03, 0x61, 0x00, 0x18, 0xF4, 0xEF,
 0x08, 0x10, 0x02, 0x72, 0x03, 0x61, 0x00, 0x18,
-0x7B, 0xF3, 0x03, 0x10, 0x02, 0x2A, 0x00, 0x18,
-0xAA, 0xF0, 0x05, 0x97, 0x03, 0x63, 0x00, 0xEF,
+0x1D, 0xF3, 0x03, 0x10, 0x02, 0x2A, 0x00, 0x18,
+0x4C, 0xF0, 0x05, 0x97, 0x03, 0x63, 0x00, 0xEF,
 0xFB, 0x63, 0x09, 0x62, 0x08, 0xD1, 0x07, 0xD0,
 0x30, 0xF0, 0x20, 0x6A, 0x4E, 0xF2, 0x50, 0x9A,
 0xA7, 0x44, 0x30, 0xF0, 0x21, 0x6C, 0x01, 0x4D,
-0x70, 0xF3, 0x1C, 0x4C, 0x18, 0x6E, 0x40, 0xEA,
+0x70, 0xF3, 0x18, 0x4C, 0x18, 0x6E, 0x40, 0xEA,
 0x30, 0xF0, 0x20, 0x6B, 0xEF, 0xF4, 0x08, 0x4B,
-0x00, 0xF2, 0x43, 0xA3, 0x6A, 0x2A, 0x30, 0xF0,
+0xE0, 0xF1, 0x5F, 0xA3, 0x6A, 0x2A, 0x30, 0xF0,
 0x20, 0x6A, 0xC8, 0xF4, 0x98, 0xA2, 0x01, 0x6A,
-0x4C, 0xEC, 0x15, 0x24, 0x80, 0xF6, 0x94, 0xA3,
+0x4C, 0xEC, 0x15, 0x24, 0x80, 0xF6, 0x90, 0xA3,
 0x8C, 0xEA, 0xFF, 0x6C, 0x8C, 0xEA, 0x0F, 0x22,
 0x10, 0xF0, 0x30, 0x6A, 0x00, 0xF0, 0x00, 0x4A,
 0xC1, 0xF7, 0xAF, 0xA2, 0x02, 0x6C, 0xAD, 0xEC,
-0xC1, 0xF7, 0x8F, 0xC2, 0xA0, 0xF6, 0x68, 0x9B,
+0xC1, 0xF7, 0x8F, 0xC2, 0xA0, 0xF6, 0x64, 0x9B,
 0xC1, 0xF7, 0x70, 0xC2, 0x4E, 0x10, 0x30, 0xF0,
 0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A, 0x08, 0xF3,
 0xF0, 0xA2, 0x01, 0x6C, 0xA4, 0x67, 0xEC, 0xED,
 0xFF, 0x6B, 0x43, 0x25, 0x30, 0xF0, 0x21, 0x6D,
-0x70, 0xF3, 0xBC, 0xA5, 0x8C, 0xED, 0x6C, 0xED,
+0x70, 0xF3, 0xB8, 0xA5, 0x8C, 0xED, 0x6C, 0xED,
 0x3C, 0x2D, 0x10, 0xF0, 0x30, 0x6C, 0x00, 0xF0,
 0x00, 0x4C, 0xC1, 0xF7, 0x0F, 0xA4, 0x02, 0x6E,
 0xCB, 0xEE, 0x0C, 0xEE, 0xC1, 0xF7, 0x0E, 0xA4,
@@ -25149,170 +25077,170 @@ u8 array_mp_8821c_fw_nic[] = {
 0x20, 0x6A, 0xEE, 0xF5, 0x50, 0x9A, 0x06, 0x6C,
 0x40, 0xEA, 0x10, 0xF0, 0x30, 0x6A, 0xC1, 0xF7,
 0x52, 0xA2, 0x0F, 0x6C, 0x4C, 0xEC, 0x00, 0x18,
-0x72, 0xEC, 0x30, 0xF0, 0x20, 0x6B, 0xEF, 0xF4,
-0x08, 0x4B, 0x80, 0xF6, 0x56, 0xA3, 0x01, 0x72,
+0x14, 0xEC, 0x30, 0xF0, 0x20, 0x6B, 0xEF, 0xF4,
+0x08, 0x4B, 0x80, 0xF6, 0x52, 0xA3, 0x01, 0x72,
 0x6C, 0x60, 0x05, 0x22, 0x02, 0x72, 0x00, 0x6C,
 0x20, 0xF1, 0x13, 0x61, 0xC9, 0x10, 0x10, 0xF0,
-0x24, 0x6A, 0x3C, 0xF7, 0x48, 0x9A, 0xFF, 0x6D,
+0x24, 0x6A, 0x1C, 0xF3, 0x44, 0x9A, 0xFF, 0x6D,
 0x08, 0x6F, 0x80, 0xA2, 0x10, 0xF0, 0x24, 0x6A,
-0x3C, 0xF7, 0xCC, 0x9A, 0xEB, 0xEF, 0xAC, 0xEC,
+0x1C, 0xF3, 0xC8, 0x9A, 0xEB, 0xEF, 0xAC, 0xEC,
 0x40, 0xA6, 0xAC, 0xEA, 0xEC, 0xEA, 0x80, 0xF6,
-0xF5, 0xA3, 0xED, 0xEA, 0xAC, 0xEA, 0x40, 0xC6,
-0x80, 0xF6, 0x74, 0xA3, 0x08, 0x6A, 0x6C, 0xEA,
+0xF1, 0xA3, 0xED, 0xEA, 0xAC, 0xEA, 0x40, 0xC6,
+0x80, 0xF6, 0x70, 0xA3, 0x08, 0x6A, 0x6C, 0xEA,
 0xAC, 0xEA, 0x00, 0xF1, 0x16, 0x22, 0x10, 0x6E,
 0x43, 0x67, 0xCC, 0xEA, 0xAC, 0xEA, 0x07, 0x2A,
-0x10, 0xF0, 0x24, 0x6A, 0x5D, 0xF1, 0x70, 0x9A,
+0x10, 0xF0, 0x24, 0x6A, 0x3C, 0xF5, 0x68, 0x9A,
 0x8F, 0x6A, 0xA0, 0xA3, 0x0A, 0x10, 0x10, 0xF0,
-0x24, 0x6A, 0x5D, 0xF1, 0x70, 0x9A, 0x71, 0x6F,
+0x24, 0x6A, 0x3C, 0xF5, 0x68, 0x9A, 0x71, 0x6F,
 0xEB, 0xEF, 0x40, 0xA3, 0xAC, 0xEA, 0xEC, 0xEA,
 0xCD, 0xEA, 0xAC, 0xEA, 0x40, 0xC3, 0x30, 0xF0,
 0x20, 0x6A, 0xEF, 0xF4, 0x08, 0x4A, 0x10, 0xF0,
-0x24, 0x6B, 0x80, 0xF6, 0xBC, 0x9A, 0x5D, 0xF1,
-0x74, 0x9B, 0x01, 0x6E, 0xA0, 0xDB, 0x10, 0xF0,
-0x24, 0x6B, 0xA0, 0xF6, 0xA0, 0x9A, 0x5D, 0xF1,
-0x78, 0x9B, 0xA0, 0xDB, 0x10, 0xF0, 0x24, 0x6B,
-0xA0, 0xF6, 0xA4, 0x9A, 0x5D, 0xF1, 0x7C, 0x9B,
+0x24, 0x6B, 0x80, 0xF6, 0xB8, 0x9A, 0x3C, 0xF5,
+0x6C, 0x9B, 0x01, 0x6E, 0xA0, 0xDB, 0x10, 0xF0,
+0x24, 0x6B, 0x80, 0xF6, 0xBC, 0x9A, 0x3C, 0xF5,
+0x70, 0x9B, 0xA0, 0xDB, 0x10, 0xF0, 0x24, 0x6B,
+0xA0, 0xF6, 0xA0, 0x9A, 0x3C, 0xF5, 0x74, 0x9B,
 0xA0, 0xDB, 0x10, 0xF0, 0x24, 0x6B, 0xA0, 0xF6,
-0xA8, 0x9A, 0x7D, 0xF1, 0x60, 0x9B, 0xA0, 0xDB,
-0x10, 0xF0, 0x24, 0x6B, 0x7D, 0xF1, 0x64, 0x9B,
-0x80, 0xF6, 0x54, 0xA2, 0xFF, 0x6D, 0xE0, 0xA3,
+0xA4, 0x9A, 0x3C, 0xF5, 0x78, 0x9B, 0xA0, 0xDB,
+0x10, 0xF0, 0x24, 0x6B, 0x3C, 0xF5, 0x7C, 0x9B,
+0x80, 0xF6, 0x50, 0xA2, 0xFF, 0x6D, 0xE0, 0xA3,
 0x52, 0x32, 0xCC, 0xEA, 0xC4, 0xEA, 0xAC, 0xEF,
 0x46, 0x67, 0xED, 0xEA, 0xAC, 0xEA, 0x40, 0xC3,
 0xCC, 0x10, 0x10, 0xF0, 0x24, 0x6D, 0x10, 0xF0,
-0x24, 0x6A, 0x3C, 0xF7, 0x0C, 0x9D, 0x3D, 0xF1,
-0x58, 0x9A, 0x80, 0xF6, 0xB5, 0xA3, 0x71, 0x6E,
+0x24, 0x6A, 0x1C, 0xF3, 0x08, 0x9D, 0x1C, 0xF5,
+0x50, 0x9A, 0x80, 0xF6, 0xB1, 0xA3, 0x71, 0x6E,
 0x80, 0xA2, 0xE0, 0xA0, 0xFF, 0x6A, 0xCB, 0xEE,
 0x4C, 0xEF, 0xB0, 0x35, 0xCC, 0xEF, 0xED, 0xED,
-0x4C, 0xED, 0xA0, 0xC0, 0x80, 0xF6, 0xB4, 0xA3,
+0x4C, 0xED, 0xA0, 0xC0, 0x80, 0xF6, 0xB0, 0xA3,
 0x08, 0x6B, 0x4C, 0xEC, 0xAC, 0xEB, 0x4C, 0xEB,
 0xA0, 0xF0, 0x0F, 0x23, 0x10, 0x6B, 0xAC, 0xEB,
 0x4C, 0xEB, 0x09, 0x2B, 0x10, 0xF0, 0x24, 0x6B,
-0x5D, 0xF1, 0xB0, 0x9B, 0x60, 0xA5, 0x4C, 0xEB,
+0x3C, 0xF5, 0xA8, 0x9B, 0x60, 0xA5, 0x4C, 0xEB,
 0xCC, 0xEB, 0x20, 0x6E, 0x08, 0x10, 0x10, 0xF0,
-0x24, 0x6B, 0x5D, 0xF1, 0xB0, 0x9B, 0x60, 0xA5,
+0x24, 0x6B, 0x3C, 0xF5, 0xA8, 0x9B, 0x60, 0xA5,
 0x4C, 0xEB, 0xCC, 0xEB, 0x30, 0x6E, 0xCD, 0xEB,
 0x4C, 0xEB, 0x30, 0xF0, 0x20, 0x6A, 0x60, 0xC5,
 0xEF, 0xF4, 0x08, 0x4A, 0x10, 0xF0, 0x24, 0x6B,
-0x80, 0xF6, 0xBC, 0x9A, 0x5D, 0xF1, 0x74, 0x9B,
+0x80, 0xF6, 0xB8, 0x9A, 0x3C, 0xF5, 0x6C, 0x9B,
 0x01, 0x6F, 0xFF, 0x6E, 0xA0, 0xDB, 0x10, 0xF0,
-0x24, 0x6B, 0xA0, 0xF6, 0xA0, 0x9A, 0x5D, 0xF1,
-0x78, 0x9B, 0xA0, 0xDB, 0x10, 0xF0, 0x24, 0x6B,
-0xA0, 0xF6, 0xA4, 0x9A, 0x5D, 0xF1, 0x7C, 0x9B,
+0x24, 0x6B, 0x80, 0xF6, 0xBC, 0x9A, 0x3C, 0xF5,
+0x70, 0x9B, 0xA0, 0xDB, 0x10, 0xF0, 0x24, 0x6B,
+0xA0, 0xF6, 0xA0, 0x9A, 0x3C, 0xF5, 0x74, 0x9B,
 0xA0, 0xDB, 0x10, 0xF0, 0x24, 0x6B, 0xA0, 0xF6,
-0xA8, 0x9A, 0x7D, 0xF1, 0x60, 0x9B, 0xA0, 0xDB,
-0x10, 0xF0, 0x24, 0x6B, 0x7D, 0xF1, 0xA4, 0x9B,
-0x80, 0xF6, 0x74, 0xA2, 0x00, 0xA5, 0x72, 0x33,
+0xA4, 0x9A, 0x3C, 0xF5, 0x78, 0x9B, 0xA0, 0xDB,
+0x10, 0xF0, 0x24, 0x6B, 0x3C, 0xF5, 0xBC, 0x9B,
+0x80, 0xF6, 0x70, 0xA2, 0x00, 0xA5, 0x72, 0x33,
 0xEC, 0xEB, 0xCC, 0xE8, 0x42, 0x43, 0x64, 0x10,
 0x10, 0xF0, 0x24, 0x6D, 0x10, 0xF0, 0x24, 0x6A,
-0x3D, 0xF1, 0x5C, 0x9A, 0x7D, 0xF1, 0xC8, 0x9D,
+0x1C, 0xF5, 0x54, 0x9A, 0x5C, 0xF5, 0xC0, 0x9D,
 0x08, 0x6F, 0x80, 0xA2, 0xA0, 0xA6, 0xFF, 0x6A,
 0xEB, 0xEF, 0x4C, 0xED, 0xEC, 0xED, 0x80, 0xF6,
-0xF5, 0xA3, 0x4C, 0xEC, 0xED, 0xED, 0x4C, 0xED,
-0xA0, 0xC6, 0x80, 0xF6, 0xB4, 0xA3, 0x08, 0x6B,
+0xF1, 0xA3, 0x4C, 0xEC, 0xED, 0xED, 0x4C, 0xED,
+0xA0, 0xC6, 0x80, 0xF6, 0xB0, 0xA3, 0x08, 0x6B,
 0xAC, 0xEB, 0x4C, 0xEB, 0x4E, 0x23, 0x10, 0x6B,
 0xAC, 0xEB, 0x4C, 0xEB, 0x0B, 0x2B, 0x10, 0xF0,
-0x24, 0x6B, 0x5D, 0xF1, 0xB0, 0x9B, 0x71, 0x6E,
+0x24, 0x6B, 0x3C, 0xF5, 0xA8, 0x9B, 0x71, 0x6E,
 0xCB, 0xEE, 0x60, 0xA5, 0x4C, 0xEB, 0xCC, 0xEB,
 0x40, 0x6E, 0x0A, 0x10, 0x10, 0xF0, 0x24, 0x6B,
-0x5D, 0xF1, 0xB0, 0x9B, 0x71, 0x6E, 0xCB, 0xEE,
+0x3C, 0xF5, 0xA8, 0x9B, 0x71, 0x6E, 0xCB, 0xEE,
 0x60, 0xA5, 0x4C, 0xEB, 0xCC, 0xEB, 0x50, 0x6E,
 0xCD, 0xEB, 0x4C, 0xEB, 0x30, 0xF0, 0x20, 0x6A,
 0x60, 0xC5, 0xEF, 0xF4, 0x08, 0x4A, 0x10, 0xF0,
-0x24, 0x6B, 0x80, 0xF6, 0xBC, 0x9A, 0x5D, 0xF1,
-0x74, 0x9B, 0x01, 0x6F, 0xFF, 0x6E, 0xA0, 0xDB,
-0x10, 0xF0, 0x24, 0x6B, 0xA0, 0xF6, 0xA0, 0x9A,
-0x5D, 0xF1, 0x78, 0x9B, 0xA0, 0xDB, 0x10, 0xF0,
-0x24, 0x6B, 0xA0, 0xF6, 0xA4, 0x9A, 0x5D, 0xF1,
-0x7C, 0x9B, 0xA0, 0xDB, 0x10, 0xF0, 0x24, 0x6B,
-0xA0, 0xF6, 0xA8, 0x9A, 0x7D, 0xF1, 0x60, 0x9B,
-0xA0, 0xDB, 0x10, 0xF0, 0x24, 0x6B, 0x7D, 0xF1,
-0xA4, 0x9B, 0x80, 0xF6, 0x74, 0xA2, 0x00, 0xA5,
+0x24, 0x6B, 0x80, 0xF6, 0xB8, 0x9A, 0x3C, 0xF5,
+0x6C, 0x9B, 0x01, 0x6F, 0xFF, 0x6E, 0xA0, 0xDB,
+0x10, 0xF0, 0x24, 0x6B, 0x80, 0xF6, 0xBC, 0x9A,
+0x3C, 0xF5, 0x70, 0x9B, 0xA0, 0xDB, 0x10, 0xF0,
+0x24, 0x6B, 0xA0, 0xF6, 0xA0, 0x9A, 0x3C, 0xF5,
+0x74, 0x9B, 0xA0, 0xDB, 0x10, 0xF0, 0x24, 0x6B,
+0xA0, 0xF6, 0xA4, 0x9A, 0x3C, 0xF5, 0x78, 0x9B,
+0xA0, 0xDB, 0x10, 0xF0, 0x24, 0x6B, 0x3C, 0xF5,
+0xBC, 0x9B, 0x80, 0xF6, 0x70, 0xA2, 0x00, 0xA5,
 0x72, 0x33, 0xEC, 0xEB, 0xCC, 0xE8, 0x44, 0x43,
 0xE4, 0xEA, 0x47, 0x67, 0x0D, 0xEA, 0xCC, 0xEA,
-0x40, 0xC5, 0x10, 0xF0, 0x24, 0x6A, 0x3C, 0xF3,
-0x58, 0x9A, 0xFF, 0x69, 0x00, 0x6D, 0x60, 0xA2,
-0x10, 0xF0, 0x24, 0x6A, 0x3C, 0xF7, 0x50, 0x9A,
+0x40, 0xC5, 0x10, 0xF0, 0x24, 0x6A, 0x1B, 0xF7,
+0x54, 0x9A, 0xFF, 0x69, 0x00, 0x6D, 0x60, 0xA2,
+0x10, 0xF0, 0x24, 0x6A, 0x1C, 0xF3, 0x4C, 0x9A,
 0x2C, 0xEB, 0x30, 0xF0, 0x20, 0x68, 0x60, 0xC2,
-0x10, 0xF0, 0x24, 0x6B, 0x3C, 0xF7, 0x74, 0x9B,
+0x10, 0xF0, 0x24, 0x6B, 0x1C, 0xF3, 0x70, 0x9B,
 0xEF, 0xF4, 0x08, 0x48, 0xA0, 0xC3, 0x10, 0xF0,
-0x24, 0x6B, 0x3C, 0xF7, 0x78, 0x9B, 0x20, 0x6D,
+0x24, 0x6B, 0x1C, 0xF3, 0x74, 0x9B, 0x20, 0x6D,
 0xA0, 0xC3, 0x40, 0xA2, 0x10, 0xF0, 0x24, 0x6B,
-0x3C, 0xF7, 0x7C, 0x9B, 0x2C, 0xEA, 0x50, 0x32,
+0x1C, 0xF3, 0x78, 0x9B, 0x2C, 0xEA, 0x50, 0x32,
 0x01, 0x4A, 0x2C, 0xEA, 0x40, 0xC3, 0x80, 0xF6,
-0x74, 0xA0, 0x01, 0x6A, 0x6C, 0xEA, 0x2C, 0xEA,
-0x60, 0x22, 0x00, 0x18, 0xAE, 0xF2, 0x04, 0xD2,
-0x00, 0x18, 0x6A, 0xF1, 0x80, 0xF6, 0x96, 0xA0,
-0x04, 0x95, 0x00, 0x18, 0xFF, 0xEF, 0x80, 0xF6,
-0x74, 0xA0, 0x02, 0x6A, 0x6C, 0xEA, 0x2C, 0xEA,
-0x16, 0x22, 0xA0, 0xF6, 0x4E, 0xA0, 0x03, 0x2A,
-0x01, 0x6C, 0x00, 0x18, 0xB3, 0xF3, 0x30, 0xF0,
-0x21, 0x6A, 0x70, 0xF3, 0x7C, 0xA2, 0x40, 0x6A,
+0x70, 0xA0, 0x01, 0x6A, 0x6C, 0xEA, 0x2C, 0xEA,
+0x60, 0x22, 0x00, 0x18, 0x50, 0xF2, 0x04, 0xD2,
+0x00, 0x18, 0x0C, 0xF1, 0x80, 0xF6, 0x92, 0xA0,
+0x04, 0x95, 0x00, 0x18, 0xA1, 0xEF, 0x80, 0xF6,
+0x70, 0xA0, 0x02, 0x6A, 0x6C, 0xEA, 0x2C, 0xEA,
+0x16, 0x22, 0xA0, 0xF6, 0x4A, 0xA0, 0x03, 0x2A,
+0x01, 0x6C, 0x00, 0x18, 0x55, 0xF3, 0x30, 0xF0,
+0x21, 0x6A, 0x70, 0xF3, 0x78, 0xA2, 0x40, 0x6A,
 0x04, 0x6C, 0x6C, 0xEA, 0x05, 0x2A, 0x00, 0x18,
-0x28, 0xF0, 0x01, 0x6C, 0x01, 0x2A, 0x02, 0x6C,
-0x00, 0x18, 0xB3, 0xF3, 0x33, 0x10, 0x40, 0x6A,
+0xCA, 0xEF, 0x01, 0x6C, 0x01, 0x2A, 0x02, 0x6C,
+0x00, 0x18, 0x55, 0xF3, 0x33, 0x10, 0x40, 0x6A,
 0x6C, 0xEA, 0x2C, 0xEA, 0x0B, 0x22, 0xA0, 0xF6,
-0x4F, 0xA0, 0x02, 0x72, 0x2B, 0x60, 0x30, 0xF0,
+0x4B, 0xA0, 0x02, 0x72, 0x2B, 0x60, 0x30, 0xF0,
 0x20, 0x6A, 0x2E, 0xF4, 0x48, 0x9A, 0x02, 0x6C,
-0x00, 0x6D, 0x1A, 0x10, 0xA0, 0xF6, 0x4F, 0xA0,
-0x02, 0x72, 0x1A, 0x61, 0x00, 0x18, 0x9A, 0xCC,
-0x00, 0x18, 0x28, 0xF0, 0x01, 0x72, 0x0A, 0x61,
+0x00, 0x6D, 0x1A, 0x10, 0xA0, 0xF6, 0x4B, 0xA0,
+0x02, 0x72, 0x1A, 0x61, 0x00, 0x18, 0xC2, 0xCC,
+0x00, 0x18, 0xCA, 0xEF, 0x01, 0x72, 0x0A, 0x61,
 0x30, 0xF0, 0x20, 0x6A, 0x30, 0xF0, 0x20, 0x6B,
 0x2E, 0xF4, 0x48, 0x9A, 0x48, 0xF5, 0x80, 0xA3,
 0x01, 0x6D, 0x06, 0x10, 0x30, 0xF0, 0x20, 0x6A,
 0x2E, 0xF4, 0x48, 0x9A, 0x00, 0x6C, 0xA4, 0x67,
-0x80, 0xF6, 0xD5, 0xA0, 0x40, 0xEA, 0x06, 0x10,
+0x80, 0xF6, 0xD1, 0xA0, 0x40, 0xEA, 0x06, 0x10,
 0x30, 0xF0, 0x20, 0x6A, 0x48, 0xF5, 0x44, 0xA2,
-0xA0, 0xF6, 0x4F, 0xC0, 0x10, 0xF0, 0x24, 0x6A,
-0x5C, 0xF7, 0x44, 0x9A, 0x22, 0x6B, 0x60, 0xC2,
-0x3E, 0x10, 0x80, 0xF6, 0x96, 0xA0, 0x00, 0x6D,
-0x00, 0x18, 0xFF, 0xEF, 0x80, 0xF6, 0x74, 0xA0,
+0xA0, 0xF6, 0x4B, 0xC0, 0x10, 0xF0, 0x24, 0x6A,
+0x3C, 0xF3, 0x40, 0x9A, 0x22, 0x6B, 0x60, 0xC2,
+0x3E, 0x10, 0x80, 0xF6, 0x92, 0xA0, 0x00, 0x6D,
+0x00, 0x18, 0xA1, 0xEF, 0x80, 0xF6, 0x70, 0xA0,
 0x02, 0x6A, 0x6C, 0xEA, 0x2C, 0xEA, 0x08, 0x22,
-0xA0, 0xF6, 0x4E, 0xA0, 0x04, 0x72, 0x2F, 0x61,
-0x00, 0x6C, 0x00, 0x18, 0xB3, 0xF3, 0x2B, 0x10,
-0xA0, 0xF6, 0x4F, 0xA0, 0x02, 0x72, 0x06, 0x61,
+0xA0, 0xF6, 0x4A, 0xA0, 0x04, 0x72, 0x2F, 0x61,
+0x00, 0x6C, 0x00, 0x18, 0x55, 0xF3, 0x2B, 0x10,
+0xA0, 0xF6, 0x4B, 0xA0, 0x02, 0x72, 0x06, 0x61,
 0x30, 0xF0, 0x20, 0x6A, 0x2E, 0xF4, 0x48, 0x9A,
 0x04, 0x6C, 0x07, 0x10, 0x08, 0x72, 0x09, 0x61,
 0x30, 0xF0, 0x20, 0x6A, 0x2E, 0xF4, 0x48, 0x9A,
-0x0C, 0x6C, 0x80, 0xF6, 0xD5, 0xA0, 0x01, 0x6D,
+0x0C, 0x6C, 0x80, 0xF6, 0xD1, 0xA0, 0x01, 0x6D,
 0x40, 0xEA, 0x30, 0xF0, 0x20, 0x68, 0xEF, 0xF4,
-0x08, 0x48, 0x80, 0xF6, 0x95, 0xA0, 0x00, 0x18,
+0x08, 0x48, 0x80, 0xF6, 0x91, 0xA0, 0x00, 0x18,
 0x65, 0xC5, 0x30, 0xF0, 0x20, 0x6B, 0x30, 0xF0,
 0x20, 0x6A, 0x2E, 0xF4, 0x48, 0x9A, 0x48, 0xF5,
-0x80, 0xA3, 0x80, 0xF6, 0xD5, 0xA0, 0x01, 0x6D,
-0x40, 0xEA, 0x00, 0x18, 0xEC, 0xEF, 0x09, 0x97,
+0x80, 0xA3, 0x80, 0xF6, 0xD1, 0xA0, 0x01, 0x6D,
+0x40, 0xEA, 0x00, 0x18, 0x8E, 0xEF, 0x09, 0x97,
 0x08, 0x91, 0x07, 0x90, 0x00, 0x6A, 0x05, 0x63,
 0x00, 0xEF, 0x00, 0x65, 0xFC, 0x63, 0x07, 0x62,
 0x06, 0xD1, 0x05, 0xD0, 0x30, 0xF0, 0x20, 0x6A,
-0xEF, 0xF4, 0x08, 0x4A, 0x80, 0xF6, 0x74, 0xA2,
+0xEF, 0xF4, 0x08, 0x4A, 0x80, 0xF6, 0x70, 0xA2,
 0x01, 0x6C, 0xFF, 0x6D, 0x6C, 0xEC, 0x3D, 0x24,
-0xA0, 0xF6, 0x8E, 0xA2, 0x04, 0x74, 0x39, 0x60,
-0xA0, 0xF6, 0x8F, 0xA2, 0x02, 0x74, 0x35, 0x60,
+0xA0, 0xF6, 0x8A, 0xA2, 0x04, 0x74, 0x39, 0x60,
+0xA0, 0xF6, 0x8B, 0xA2, 0x02, 0x74, 0x35, 0x60,
 0x02, 0x6C, 0x6C, 0xEC, 0xAC, 0xEC, 0x03, 0x24,
 0x00, 0x18, 0x6D, 0xC5, 0x2E, 0x10, 0x80, 0x6C,
 0x8B, 0xEC, 0x6C, 0xEC, 0xAC, 0xEC, 0x05, 0x24,
-0x80, 0xF6, 0x97, 0xA2, 0x00, 0x18, 0xDE, 0xC4,
+0x80, 0xF6, 0x93, 0xA2, 0x00, 0x18, 0xDE, 0xC4,
 0x08, 0x10, 0x30, 0xF0, 0x20, 0x6A, 0x6E, 0xF2,
 0x58, 0x9A, 0xFF, 0x6C, 0xA4, 0x67, 0xC4, 0x67,
 0x40, 0xEA, 0x00, 0x18, 0xB6, 0xC4, 0x30, 0xF0,
 0x20, 0x6B, 0xEF, 0xF4, 0x08, 0x4B, 0xA0, 0xF6,
-0x4F, 0xA3, 0x0C, 0x72, 0x07, 0x61, 0x30, 0xF0,
+0x4B, 0xA3, 0x0C, 0x72, 0x07, 0x61, 0x30, 0xF0,
 0x20, 0x6A, 0x2E, 0xF4, 0x48, 0x9A, 0x08, 0x6C,
 0x00, 0x6D, 0x08, 0x10, 0x04, 0x72, 0x09, 0x61,
 0x30, 0xF0, 0x20, 0x6A, 0x2E, 0xF4, 0x48, 0x9A,
-0x00, 0x6C, 0xA4, 0x67, 0x80, 0xF6, 0xD5, 0xA3,
+0x00, 0x6C, 0xA4, 0x67, 0x80, 0xF6, 0xD1, 0xA3,
 0x40, 0xEA, 0x30, 0xF0, 0x20, 0x6A, 0xEF, 0xF4,
-0x08, 0x4A, 0x00, 0xF2, 0x63, 0xA2, 0xA0, 0xF0,
+0x08, 0x4A, 0xE0, 0xF1, 0x7F, 0xA2, 0xA0, 0xF0,
 0x04, 0x2B, 0x30, 0xF0, 0x20, 0x68, 0xC0, 0xF1,
 0x08, 0x48, 0x08, 0xF3, 0x90, 0xA0, 0x01, 0x6B,
 0xFF, 0x69, 0x6C, 0xEC, 0x80, 0xF0, 0x19, 0x24,
-0x80, 0xF6, 0x54, 0xA2, 0x6C, 0xEA, 0x2C, 0xEA,
+0x80, 0xF6, 0x50, 0xA2, 0x6C, 0xEA, 0x2C, 0xEA,
 0x80, 0xF0, 0x13, 0x22, 0x10, 0xF0, 0x30, 0x6C,
 0x00, 0xF0, 0x00, 0x4C, 0xC1, 0xF7, 0xAF, 0xA4,
 0x02, 0x6A, 0xAC, 0xEA, 0x2C, 0xEA, 0x48, 0x22,
 0xAD, 0xEB, 0xC1, 0xF7, 0x6F, 0xC4, 0x10, 0xF0,
 0x30, 0x6C, 0xE6, 0xF1, 0x11, 0x4C, 0x00, 0x18,
-0xE9, 0xE9, 0x30, 0xF0, 0x20, 0x6A, 0x0E, 0xF6,
-0x98, 0x9A, 0x00, 0x18, 0xE9, 0xE9, 0x08, 0xF3,
+0x8B, 0xE9, 0x30, 0xF0, 0x20, 0x6A, 0x0E, 0xF6,
+0x98, 0x9A, 0x00, 0x18, 0x8B, 0xE9, 0x08, 0xF3,
 0x52, 0xA0, 0x0F, 0x6B, 0x4C, 0xEB, 0x2C, 0xEB,
 0x00, 0x6A, 0x11, 0x10, 0x1E, 0x6D, 0xB8, 0xEA,
 0x30, 0xF0, 0x20, 0x6C, 0xC0, 0xF1, 0x08, 0x4C,
@@ -25325,7 +25253,7 @@ u8 array_mp_8821c_fw_nic[] = {
 0xCC, 0xEB, 0x4D, 0xEB, 0x10, 0xF0, 0x30, 0x68,
 0x08, 0xF3, 0x70, 0xC5, 0x00, 0xF0, 0x00, 0x48,
 0xC1, 0xF7, 0x52, 0xA0, 0x4C, 0xEC, 0x00, 0x18,
-0x98, 0xEC, 0xC1, 0xF7, 0x6F, 0xA0, 0x03, 0x6A,
+0x3A, 0xEC, 0xC1, 0xF7, 0x6F, 0xA0, 0x03, 0x6A,
 0x4B, 0xEA, 0x6C, 0xEA, 0xC1, 0xF7, 0x4F, 0xC0,
 0x30, 0xF0, 0x20, 0x6A, 0xC8, 0xF4, 0xB8, 0xA2,
 0x30, 0xF0, 0x20, 0x6A, 0xEE, 0xF5, 0x48, 0x9A,
@@ -25334,22 +25262,22 @@ u8 array_mp_8821c_fw_nic[] = {
 0x48, 0x9A, 0x40, 0xEA, 0x06, 0x2A, 0x30, 0xF0,
 0x20, 0x6A, 0xEE, 0xF5, 0x50, 0x9A, 0x06, 0x6C,
 0x40, 0xEA, 0x30, 0xF0, 0x20, 0x6C, 0xC8, 0xF4,
-0xB8, 0xA4, 0x10, 0xF0, 0x24, 0x6A, 0x3C, 0xF7,
-0x5C, 0x9A, 0x0F, 0x6C, 0xA6, 0x35, 0x8C, 0xED,
+0xB8, 0xA4, 0x10, 0xF0, 0x24, 0x6A, 0x1C, 0xF3,
+0x58, 0x9A, 0x0F, 0x6C, 0xA6, 0x35, 0x8C, 0xED,
 0x10, 0xF0, 0x30, 0x6B, 0xE0, 0xF7, 0x08, 0x4D,
 0xE0, 0xA2, 0xA4, 0x35, 0x30, 0xF0, 0x21, 0x6A,
-0x00, 0xF0, 0x00, 0x4B, 0x90, 0xF3, 0x44, 0x9A,
+0x00, 0xF0, 0x00, 0x4B, 0x90, 0xF3, 0x40, 0x9A,
 0x6D, 0xE5, 0x63, 0xA3, 0xFF, 0x6E, 0x42, 0x32,
 0x4A, 0x32, 0x6C, 0xEC, 0xCC, 0xEF, 0x93, 0xE2,
 0x6F, 0x47, 0x30, 0xF0, 0x20, 0x6A, 0x77, 0x33,
 0xEE, 0xF5, 0x54, 0x9A, 0x73, 0xE4, 0xCC, 0xEC,
 0x40, 0xEA, 0x07, 0x97, 0x06, 0x91, 0x05, 0x90,
 0x04, 0x63, 0x00, 0xEF, 0xFD, 0x63, 0x05, 0x62,
-0x00, 0x18, 0x41, 0xF5, 0x05, 0x97, 0x03, 0x63,
+0x00, 0x18, 0xE3, 0xF4, 0x05, 0x97, 0x03, 0x63,
 0x00, 0xEF, 0x00, 0x65, 0xFD, 0x63, 0x05, 0x62,
-0x00, 0x18, 0x41, 0xF5, 0x05, 0x97, 0x03, 0x63,
+0x00, 0x18, 0xE3, 0xF4, 0x05, 0x97, 0x03, 0x63,
 0x00, 0xEF, 0x00, 0x65, 0xFD, 0x63, 0x05, 0x62,
-0x00, 0x18, 0x41, 0xF5, 0x05, 0x97, 0x03, 0x63,
+0x00, 0x18, 0xE3, 0xF4, 0x05, 0x97, 0x03, 0x63,
 0x00, 0xEF, 0x00, 0x65, 0xFB, 0x63, 0x09, 0x62,
 0x08, 0xD1, 0x07, 0xD0, 0xFF, 0x6A, 0x4C, 0xED,
 0x4C, 0xEC, 0x4C, 0xEE, 0xEC, 0xEA, 0x05, 0x25,
@@ -25383,7 +25311,7 @@ u8 array_mp_8821c_fw_nic[] = {
 0x00, 0x6B, 0x6B, 0xEB, 0x02, 0x10, 0x60, 0xF2,
 0x00, 0x6B, 0x60, 0xCC, 0x30, 0xF0, 0x20, 0x6B,
 0xE8, 0xF2, 0x7C, 0xA3, 0x02, 0x73, 0x0A, 0x61,
-0x10, 0xF0, 0x24, 0x6B, 0x9D, 0xF1, 0x74, 0x9B,
+0x10, 0xF0, 0x24, 0x6B, 0x7C, 0xF5, 0x6C, 0x9B,
 0x74, 0x6D, 0xA0, 0xC3, 0xA0, 0xAC, 0x80, 0x6B,
 0xAD, 0xEB, 0x60, 0xCC, 0x09, 0x22, 0x60, 0xAC,
 0x00, 0xF2, 0x01, 0x6A, 0x4B, 0xEA, 0x6C, 0xEA,
@@ -25393,41 +25321,41 @@ u8 array_mp_8821c_fw_nic[] = {
 0xFF, 0x63, 0x01, 0xD1, 0x00, 0xD0, 0x30, 0xF0,
 0x20, 0x6B, 0xE8, 0xF2, 0x7C, 0xA3, 0xFF, 0x6A,
 0x8C, 0xEA, 0x02, 0x73, 0x70, 0x61, 0x48, 0x2A,
-0x10, 0xF0, 0x24, 0x6A, 0xBC, 0xF6, 0xE0, 0x9A,
+0x10, 0xF0, 0x24, 0x6A, 0x7C, 0xF2, 0xFC, 0x9A,
 0x30, 0xF0, 0x20, 0x6A, 0xEF, 0xF4, 0x08, 0x4A,
-0x60, 0x9F, 0xC0, 0xF0, 0x64, 0xDA, 0x10, 0xF0,
-0x24, 0x6B, 0x9C, 0xF6, 0xCC, 0x9B, 0x60, 0x9E,
-0xA0, 0xF0, 0x78, 0xDA, 0x10, 0xF0, 0x24, 0x6B,
-0x3D, 0xF1, 0xA0, 0x9B, 0x60, 0x9D, 0xA0, 0xF0,
-0x7C, 0xDA, 0x10, 0xF0, 0x24, 0x6B, 0x3C, 0xF7,
-0x80, 0x9B, 0x10, 0xF0, 0x24, 0x6B, 0x3C, 0xF7,
-0x64, 0x9B, 0x20, 0x9C, 0xA0, 0xF0, 0x34, 0xDA,
-0x00, 0x9B, 0xC0, 0xF0, 0x00, 0xDA, 0x10, 0xF0,
-0x24, 0x6A, 0x9D, 0xF1, 0x58, 0x9A, 0x2D, 0xEA,
+0x60, 0x9F, 0xC0, 0xF0, 0x60, 0xDA, 0x10, 0xF0,
+0x24, 0x6B, 0x7C, 0xF2, 0xC8, 0x9B, 0x60, 0x9E,
+0xA0, 0xF0, 0x74, 0xDA, 0x10, 0xF0, 0x24, 0x6B,
+0xFC, 0xF4, 0xB8, 0x9B, 0x60, 0x9D, 0xA0, 0xF0,
+0x78, 0xDA, 0x10, 0xF0, 0x24, 0x6B, 0xFC, 0xF2,
+0x9C, 0x9B, 0x10, 0xF0, 0x24, 0x6B, 0x1C, 0xF3,
+0x60, 0x9B, 0x20, 0x9C, 0xA0, 0xF0, 0x30, 0xDA,
+0x00, 0x9B, 0xA0, 0xF0, 0x1C, 0xDA, 0x10, 0xF0,
+0x24, 0x6A, 0x7C, 0xF5, 0x50, 0x9A, 0x2D, 0xEA,
 0x18, 0xF0, 0x01, 0x69, 0x2B, 0xE9, 0x2C, 0xEA,
-0x10, 0xF0, 0x24, 0x69, 0x3C, 0xF4, 0x2C, 0x99,
+0x10, 0xF0, 0x24, 0x69, 0x1C, 0xF0, 0x28, 0x99,
 0x0D, 0xE9, 0x02, 0xF0, 0x01, 0x68, 0x0B, 0xE8,
-0x0C, 0xE9, 0x10, 0xF0, 0x24, 0x68, 0x9D, 0xF1,
-0x1C, 0x98, 0x00, 0xDF, 0x04, 0x6F, 0xE0, 0xDE,
-0x10, 0xF0, 0x24, 0x6E, 0xBD, 0xF1, 0xC0, 0x9E,
+0x0C, 0xE9, 0x10, 0xF0, 0x24, 0x68, 0x7C, 0xF5,
+0x14, 0x98, 0x00, 0xDF, 0x04, 0x6F, 0xE0, 0xDE,
+0x10, 0xF0, 0x24, 0x6E, 0x7C, 0xF5, 0xD8, 0x9E,
 0xC0, 0xDD, 0x40, 0xDC, 0x20, 0xDB, 0x27, 0x10,
 0x30, 0xF0, 0x20, 0x6A, 0xEF, 0xF4, 0x08, 0x4A,
-0x10, 0xF0, 0x24, 0x6B, 0xC0, 0xF0, 0x84, 0x9A,
-0xBC, 0xF6, 0x60, 0x9B, 0x80, 0xDB, 0x10, 0xF0,
-0x24, 0x6B, 0xA0, 0xF0, 0x98, 0x9A, 0x9C, 0xF6,
-0x6C, 0x9B, 0x80, 0xDB, 0x10, 0xF0, 0x24, 0x6B,
-0xA0, 0xF0, 0x9C, 0x9A, 0x3D, 0xF1, 0x60, 0x9B,
+0x10, 0xF0, 0x24, 0x6B, 0xC0, 0xF0, 0x80, 0x9A,
+0x7C, 0xF2, 0x7C, 0x9B, 0x80, 0xDB, 0x10, 0xF0,
+0x24, 0x6B, 0xA0, 0xF0, 0x94, 0x9A, 0x7C, 0xF2,
+0x68, 0x9B, 0x80, 0xDB, 0x10, 0xF0, 0x24, 0x6B,
+0xA0, 0xF0, 0x98, 0x9A, 0xFC, 0xF4, 0x78, 0x9B,
 0x80, 0xDB, 0x10, 0xF0, 0x24, 0x6B, 0xA0, 0xF0,
-0x94, 0x9A, 0x3C, 0xF7, 0x60, 0x9B, 0x80, 0xDB,
-0xC0, 0xF0, 0x60, 0x9A, 0x10, 0xF0, 0x24, 0x6A,
-0x3C, 0xF7, 0x44, 0x9A, 0x60, 0xDA, 0x01, 0x91,
+0x90, 0x9A, 0xFC, 0xF2, 0x7C, 0x9B, 0x80, 0xDB,
+0xA0, 0xF0, 0x7C, 0x9A, 0x10, 0xF0, 0x24, 0x6A,
+0x1C, 0xF3, 0x40, 0x9A, 0x60, 0xDA, 0x01, 0x91,
 0x00, 0x90, 0x01, 0x63, 0x20, 0xE8, 0x00, 0x65,
 0xFA, 0x63, 0x0B, 0x62, 0x0A, 0xD1, 0x09, 0xD0,
 0xFF, 0xF7, 0x1F, 0x6B, 0xAC, 0xEB, 0x06, 0xD3,
-0x10, 0xF0, 0x24, 0x6B, 0x1C, 0xF4, 0x68, 0x9B,
+0x10, 0xF0, 0x24, 0x6B, 0xFB, 0xF7, 0x64, 0x9B,
 0xFF, 0x6A, 0x8C, 0xEA, 0x80, 0xAB, 0xE1, 0xF7,
 0x1F, 0x6B, 0x00, 0x68, 0x8C, 0xEB, 0x69, 0xE2,
-0x10, 0xF0, 0x24, 0x6B, 0xBD, 0xF1, 0x84, 0x9B,
+0x10, 0xF0, 0x24, 0x6B, 0x7C, 0xF5, 0x9C, 0x9B,
 0x5C, 0x32, 0x91, 0xE2, 0x04, 0xD4, 0x22, 0x10,
 0x04, 0x92, 0x40, 0x9A, 0x05, 0xD2, 0x0D, 0x28,
 0x30, 0xF0, 0x20, 0x69, 0xCE, 0xF4, 0x50, 0x99,
@@ -25443,10 +25371,10 @@ u8 array_mp_8821c_fw_nic[] = {
 0x42, 0xD1, 0x41, 0xD0, 0x01, 0x68, 0x00, 0x6A,
 0x0B, 0xE8, 0x04, 0xD2, 0x00, 0x6C, 0x30, 0xF0,
 0x20, 0x6A, 0x42, 0x6D, 0xD0, 0x67, 0xEF, 0xF4,
-0x30, 0xA2, 0x00, 0x18, 0x8D, 0xE7, 0x10, 0xF0,
-0x24, 0x6B, 0xDC, 0xF3, 0x68, 0x9B, 0x4C, 0xEB,
+0x30, 0xA2, 0x00, 0x18, 0x2F, 0xE7, 0x10, 0xF0,
+0x24, 0x6B, 0xBB, 0xF7, 0x64, 0x9B, 0x4C, 0xEB,
 0x36, 0x2B, 0x00, 0x6C, 0x42, 0x6D, 0xD0, 0x67,
-0x00, 0x18, 0x8D, 0xE7, 0x1F, 0xF4, 0x00, 0x6B,
+0x00, 0x18, 0x2F, 0xE7, 0x1F, 0xF4, 0x00, 0x6B,
 0x4C, 0xEB, 0x62, 0x32, 0x4A, 0x32, 0x43, 0xE9,
 0x04, 0xD2, 0x02, 0x61, 0x4E, 0xE9, 0x16, 0x29,
 0x01, 0x6A, 0x7D, 0x67, 0x4B, 0xEA, 0x54, 0xC3,
@@ -25456,445 +25384,359 @@ u8 array_mp_8821c_fw_nic[] = {
 0x30, 0xF0, 0x20, 0x6A, 0xAE, 0xF2, 0x5C, 0x9A,
 0x05, 0x04, 0x40, 0xEA, 0x01, 0x68, 0x0B, 0xE8,
 0x00, 0x6C, 0x42, 0x6D, 0xD0, 0x67, 0x00, 0x18,
-0x8D, 0xE7, 0x10, 0xF0, 0x24, 0x6B, 0xDC, 0xF3,
-0xE8, 0x9B, 0x00, 0x6C, 0x42, 0x6D, 0xD0, 0x67,
-0x4D, 0xEF, 0x00, 0x18, 0xA0, 0xE7, 0x43, 0x97,
+0x2F, 0xE7, 0x10, 0xF0, 0x24, 0x6B, 0xBB, 0xF7,
+0xE4, 0x9B, 0x00, 0x6C, 0x42, 0x6D, 0xD0, 0x67,
+0x4D, 0xEF, 0x00, 0x18, 0x42, 0xE7, 0x43, 0x97,
 0x42, 0x91, 0x41, 0x90, 0x22, 0x63, 0x00, 0xEF,
-0x30, 0xF0, 0x21, 0x6A, 0xD0, 0xF4, 0x90, 0xC2,
-0x20, 0xE8, 0x00, 0x65, 0x10, 0xF0, 0x24, 0x6A,
-0xBD, 0xF1, 0x48, 0x9A, 0x48, 0x6B, 0x60, 0xC2,
-0x10, 0xF0, 0x24, 0x6A, 0xBD, 0xF1, 0x4C, 0x9A,
-0x01, 0x6B, 0x60, 0xC2, 0x10, 0xF0, 0x24, 0x6A,
-0xBD, 0xF1, 0x50, 0x9A, 0x01, 0x6B, 0x40, 0xA2,
-0x6C, 0xEA, 0x20, 0xE8, 0x10, 0xF0, 0x24, 0x6A,
-0xBD, 0xF1, 0x74, 0x9A, 0x01, 0x6D, 0xFF, 0x6C,
-0x40, 0xA3, 0xAC, 0xEA, 0x0B, 0x22, 0x10, 0xF0,
-0x24, 0x6A, 0x5C, 0xF4, 0x4C, 0x9A, 0x40, 0xA2,
-0x4C, 0xEC, 0x8B, 0xEA, 0x8D, 0xEA, 0xC0, 0xF7,
-0x42, 0x32, 0x20, 0xE8, 0x10, 0xF0, 0x24, 0x6A,
-0x5C, 0xF4, 0x4C, 0x9A, 0xC0, 0xA2, 0x01, 0x6A,
-0x06, 0x26, 0x40, 0xA3, 0x8C, 0xEA, 0xAD, 0xEA,
-0x8C, 0xEA, 0x40, 0xC3, 0x01, 0x6A, 0x20, 0xE8,
-0xFC, 0x63, 0x07, 0x62, 0x06, 0xD0, 0x30, 0xF0,
-0x20, 0x6A, 0x30, 0xF0, 0x20, 0x68, 0x4E, 0xF2,
-0x50, 0x9A, 0xEF, 0xF4, 0x12, 0x48, 0xA4, 0x67,
-0x01, 0x6E, 0x90, 0x67, 0x40, 0xEA, 0x30, 0xF0,
-0x20, 0x6A, 0x05, 0x6B, 0xEC, 0xF1, 0x60, 0xC2,
-0x00, 0xA0, 0x01, 0x6A, 0x4C, 0xE8, 0x19, 0x28,
-0x10, 0xF0, 0x24, 0x6C, 0x7B, 0xF4, 0x1D, 0x4C,
-0x00, 0x18, 0xE9, 0xE9, 0x10, 0xF0, 0x24, 0x6A,
-0xBD, 0xF1, 0x48, 0x9A, 0x00, 0xC2, 0x10, 0xF0,
-0x24, 0x6A, 0xBD, 0xF1, 0x4C, 0x9A, 0x00, 0xC2,
-0x30, 0xF0, 0x21, 0x6A, 0xD0, 0xF4, 0x11, 0xC2,
-0x30, 0xF0, 0x21, 0x6A, 0xD0, 0xF4, 0x12, 0xC2,
-0x27, 0x10, 0x00, 0x6B, 0x30, 0xF0, 0x21, 0x6C,
-0xD0, 0xF4, 0x71, 0xC4, 0x30, 0xF0, 0x21, 0x6C,
-0xD0, 0xF4, 0x72, 0xC4, 0x10, 0xF0, 0x24, 0x6B,
-0xBD, 0xF1, 0x68, 0x9B, 0x48, 0x6C, 0x00, 0x6D,
-0x80, 0xC3, 0x10, 0xF0, 0x24, 0x6B, 0xBD, 0xF1,
-0x6C, 0x9B, 0xC8, 0x6E, 0x01, 0x6F, 0x40, 0xC3,
-0x10, 0xF0, 0x24, 0x6B, 0xBD, 0xF1, 0x98, 0x9B,
-0x10, 0xF0, 0x24, 0x6B, 0x5C, 0xF4, 0x68, 0x9B,
-0x80, 0xDB, 0x10, 0xF0, 0x24, 0x6C, 0x7B, 0xF4,
-0x1D, 0x4C, 0x04, 0xD2, 0x00, 0x18, 0xFC, 0xE9,
-0x07, 0x97, 0x06, 0x90, 0x04, 0x63, 0x00, 0xEF,
-0xFC, 0x63, 0x07, 0x62, 0x06, 0xD0, 0x30, 0xF0,
-0x21, 0x68, 0xD0, 0xF4, 0x71, 0xA0, 0x00, 0x6A,
-0x12, 0x23, 0x00, 0x18, 0xA9, 0xF6, 0x62, 0x67,
-0x01, 0x6A, 0x0D, 0x2B, 0x10, 0xF0, 0x24, 0x6C,
-0x7B, 0xF4, 0x1D, 0x4C, 0x00, 0x6D, 0xC8, 0x6E,
-0xE2, 0x67, 0xD0, 0xF4, 0x71, 0xC0, 0x04, 0xD2,
-0x00, 0x18, 0xFC, 0xE9, 0x00, 0x6A, 0x07, 0x97,
-0x06, 0x90, 0x04, 0x63, 0x00, 0xEF, 0x00, 0x65,
-0xFB, 0x63, 0x09, 0x62, 0x08, 0xD0, 0x5D, 0x67,
-0x20, 0xF0, 0x88, 0xC2, 0x10, 0xF0, 0x24, 0x6A,
-0xBD, 0xF1, 0x5C, 0x9A, 0x41, 0x6B, 0x04, 0x00,
-0x60, 0xC2, 0x45, 0x6B, 0x60, 0xC2, 0x10, 0xF0,
-0x24, 0x6A, 0xBD, 0xF1, 0x74, 0x9A, 0xFE, 0x6A,
-0x01, 0x6D, 0x80, 0xA3, 0x0A, 0x07, 0xC5, 0x67,
-0x8C, 0xEA, 0x40, 0xC3, 0x00, 0x6A, 0x30, 0xF0,
-0x21, 0x6B, 0xD0, 0xF4, 0x50, 0xC3, 0x30, 0xF0,
-0x21, 0x6B, 0xD0, 0xF4, 0x51, 0xC3, 0x30, 0xF0,
-0x21, 0x6B, 0xD0, 0xF4, 0x52, 0xC3, 0x90, 0x67,
-0x00, 0x6A, 0x04, 0xD2, 0x05, 0xD2, 0x06, 0xD2,
-0x07, 0xD2, 0x00, 0x18, 0x54, 0xD9, 0xFF, 0x6E,
-0xB0, 0x67, 0x02, 0x6C, 0x4C, 0xEE, 0x00, 0x18,
-0x66, 0xD9, 0x09, 0x97, 0x08, 0x90, 0x05, 0x63,
-0x00, 0xEF, 0x00, 0x65, 0xFB, 0x63, 0x09, 0x62,
-0x08, 0xD1, 0x07, 0xD0, 0x30, 0xF0, 0x20, 0x6A,
-0xEF, 0xF4, 0x52, 0xA2, 0x01, 0x68, 0x0C, 0xEA,
-0x53, 0x22, 0x30, 0xF0, 0x21, 0x6A, 0xD0, 0xF4,
-0x31, 0xA2, 0x1E, 0x29, 0x00, 0x18, 0xB3, 0xF6,
-0x17, 0x2A, 0x30, 0xF0, 0x21, 0x6A, 0xD0, 0xF4,
-0x72, 0xA2, 0x01, 0x4B, 0xD0, 0xF4, 0x72, 0xC2,
-0xD0, 0xF4, 0x52, 0xA2, 0x06, 0x5A, 0x10, 0x61,
-0x90, 0x67, 0x00, 0x18, 0x02, 0xF7, 0x10, 0xF0,
-0x24, 0x6C, 0x04, 0xD0, 0x7B, 0xF4, 0x1D, 0x4C,
-0x00, 0x6D, 0xC8, 0x6E, 0xF0, 0x67, 0x32, 0x10,
-0x30, 0xF0, 0x21, 0x6A, 0xD0, 0xF4, 0x32, 0xC2,
-0x00, 0x18, 0xA9, 0xF6, 0x0F, 0x22, 0x30, 0xF0,
-0x21, 0x6A, 0xD0, 0xF4, 0x71, 0xA2, 0x01, 0x4B,
-0xD0, 0xF4, 0x71, 0xC2, 0xD0, 0xF4, 0x51, 0xA2,
-0x0B, 0x5A, 0x08, 0x61, 0x03, 0x6C, 0x00, 0x18,
-0x02, 0xF7, 0x04, 0x10, 0x30, 0xF0, 0x21, 0x6B,
-0xD0, 0xF4, 0x51, 0xC3, 0x30, 0xF0, 0x21, 0x6A,
-0xD0, 0xF4, 0x51, 0xA2, 0x0A, 0x2A, 0x01, 0x6A,
-0x10, 0xF0, 0x24, 0x6C, 0x04, 0xD2, 0x7B, 0xF4,
-0x1D, 0x4C, 0x00, 0x6D, 0xC8, 0x6E, 0xE2, 0x67,
-0x09, 0x10, 0x00, 0x6A, 0x10, 0xF0, 0x24, 0x6C,
-0x01, 0x6E, 0x04, 0xD2, 0x7B, 0xF4, 0x1D, 0x4C,
-0xA2, 0x67, 0xE6, 0x67, 0x00, 0x18, 0xFC, 0xE9,
-0x09, 0x97, 0x08, 0x91, 0x07, 0x90, 0x05, 0x63,
-0x00, 0xEF, 0x00, 0x65, 0x03, 0x22, 0x03, 0x80,
-0x19, 0x22, 0x03, 0x80, 0x2F, 0x22, 0x03, 0x80,
-0x45, 0x22, 0x03, 0x80, 0x5F, 0x22, 0x03, 0x80,
-0xB7, 0x22, 0x03, 0x80, 0xCD, 0x22, 0x03, 0x80,
-0xEB, 0x22, 0x03, 0x80, 0x1D, 0x23, 0x03, 0x80,
-0x47, 0x23, 0x03, 0x80, 0x4F, 0x33, 0x03, 0x80,
-0x55, 0x33, 0x03, 0x80, 0x61, 0x33, 0x03, 0x80,
-0x6D, 0x33, 0x03, 0x80, 0x79, 0x33, 0x03, 0x80,
-0xC1, 0x36, 0x03, 0x80, 0xA9, 0x37, 0x03, 0x80,
-0x23, 0x37, 0x03, 0x80, 0xA9, 0x37, 0x03, 0x80,
-0x69, 0x36, 0x03, 0x80, 0xA9, 0x37, 0x03, 0x80,
-0xA9, 0x37, 0x03, 0x80, 0xA9, 0x37, 0x03, 0x80,
-0x8B, 0x37, 0x03, 0x80, 0xA9, 0x37, 0x03, 0x80,
-0xA9, 0x37, 0x03, 0x80, 0xA9, 0x37, 0x03, 0x80,
-0x03, 0x36, 0x03, 0x80, 0x7F, 0x3B, 0x03, 0x80,
-0x89, 0x3B, 0x03, 0x80, 0x93, 0x3B, 0x03, 0x80,
-0x9D, 0x3B, 0x03, 0x80, 0xA7, 0x3B, 0x03, 0x80,
-0x45, 0x3D, 0x03, 0x80, 0x65, 0x3D, 0x03, 0x80,
-0x85, 0x3D, 0x03, 0x80, 0xA5, 0x3D, 0x03, 0x80,
-0xC5, 0x3D, 0x03, 0x80, 0xCB, 0x3F, 0x03, 0x80,
-0x07, 0x40, 0x03, 0x80, 0x4D, 0x40, 0x03, 0x80,
-0x8F, 0x40, 0x03, 0x80, 0xD5, 0x40, 0x03, 0x80,
-0x43, 0x41, 0x03, 0x80, 0x5F, 0x41, 0x03, 0x80,
-0x81, 0x41, 0x03, 0x80, 0xA3, 0x41, 0x03, 0x80,
-0xC7, 0x41, 0x03, 0x80, 0xA8, 0x06, 0x10, 0x07,
-0x00, 0x16, 0x04, 0x16, 0x08, 0x16, 0x00, 0x00,
-0x8F, 0x45, 0x03, 0x80, 0xEB, 0x45, 0x03, 0x80,
-0x7F, 0x46, 0x03, 0x80, 0x13, 0x47, 0x03, 0x80,
-0xAB, 0x47, 0x03, 0x80, 0x3B, 0x14, 0x03, 0x80,
-0x45, 0x14, 0x03, 0x80, 0x4F, 0x14, 0x03, 0x80,
-0x59, 0x14, 0x03, 0x80, 0x63, 0x14, 0x03, 0x80,
-0x79, 0x4E, 0x03, 0x80, 0x73, 0x4E, 0x03, 0x80,
-0x7F, 0x4E, 0x03, 0x80, 0x85, 0x4E, 0x03, 0x80,
-0x8B, 0x4E, 0x03, 0x80, 0x91, 0x4E, 0x03, 0x80,
-0x94, 0x0C, 0x94, 0x0E, 0x94, 0x18, 0x94, 0x1A,
-0x00, 0x01, 0x02, 0x03, 0x05, 0x00, 0x00, 0x00,
-0x00, 0x01, 0x03, 0x04, 0x05, 0x00, 0x00, 0x00,
-0x09, 0x12, 0x1B, 0x24, 0x9D, 0x6E, 0x10, 0x80,
-0xE3, 0x6E, 0x10, 0x80, 0xA5, 0x6E, 0x10, 0x80,
-0xD5, 0x6E, 0x10, 0x80, 0xE3, 0x6E, 0x10, 0x80,
+0xFF, 0x21, 0x03, 0x80, 0x15, 0x22, 0x03, 0x80,
+0x2B, 0x22, 0x03, 0x80, 0x41, 0x22, 0x03, 0x80,
+0x5B, 0x22, 0x03, 0x80, 0xB3, 0x22, 0x03, 0x80,
+0xC9, 0x22, 0x03, 0x80, 0xE7, 0x22, 0x03, 0x80,
+0x19, 0x23, 0x03, 0x80, 0x43, 0x23, 0x03, 0x80,
+0xEF, 0x33, 0x03, 0x80, 0xF5, 0x33, 0x03, 0x80,
+0x01, 0x34, 0x03, 0x80, 0x0D, 0x34, 0x03, 0x80,
+0x19, 0x34, 0x03, 0x80, 0x61, 0x37, 0x03, 0x80,
+0x49, 0x38, 0x03, 0x80, 0xC3, 0x37, 0x03, 0x80,
+0x49, 0x38, 0x03, 0x80, 0x09, 0x37, 0x03, 0x80,
+0x49, 0x38, 0x03, 0x80, 0x49, 0x38, 0x03, 0x80,
+0x49, 0x38, 0x03, 0x80, 0x2B, 0x38, 0x03, 0x80,
+0x49, 0x38, 0x03, 0x80, 0x49, 0x38, 0x03, 0x80,
+0x49, 0x38, 0x03, 0x80, 0xA3, 0x36, 0x03, 0x80,
+0x37, 0x3B, 0x03, 0x80, 0x41, 0x3B, 0x03, 0x80,
+0x4B, 0x3B, 0x03, 0x80, 0x55, 0x3B, 0x03, 0x80,
+0x5F, 0x3B, 0x03, 0x80, 0xFD, 0x3C, 0x03, 0x80,
+0x1D, 0x3D, 0x03, 0x80, 0x3D, 0x3D, 0x03, 0x80,
+0x5D, 0x3D, 0x03, 0x80, 0x7D, 0x3D, 0x03, 0x80,
+0x83, 0x3F, 0x03, 0x80, 0xBF, 0x3F, 0x03, 0x80,
+0x05, 0x40, 0x03, 0x80, 0x47, 0x40, 0x03, 0x80,
+0x8D, 0x40, 0x03, 0x80, 0xFB, 0x40, 0x03, 0x80,
+0x17, 0x41, 0x03, 0x80, 0x39, 0x41, 0x03, 0x80,
+0x5B, 0x41, 0x03, 0x80, 0x7F, 0x41, 0x03, 0x80,
+0xA8, 0x06, 0x10, 0x07, 0x00, 0x16, 0x04, 0x16,
+0x08, 0x16, 0x00, 0x00, 0x47, 0x45, 0x03, 0x80,
+0xA3, 0x45, 0x03, 0x80, 0x37, 0x46, 0x03, 0x80,
+0xCB, 0x46, 0x03, 0x80, 0x63, 0x47, 0x03, 0x80,
+0x3B, 0x14, 0x03, 0x80, 0x45, 0x14, 0x03, 0x80,
+0x4F, 0x14, 0x03, 0x80, 0x59, 0x14, 0x03, 0x80,
+0x63, 0x14, 0x03, 0x80, 0x31, 0x4E, 0x03, 0x80,
+0x2B, 0x4E, 0x03, 0x80, 0x37, 0x4E, 0x03, 0x80,
+0x3D, 0x4E, 0x03, 0x80, 0x43, 0x4E, 0x03, 0x80,
+0x49, 0x4E, 0x03, 0x80, 0x94, 0x0C, 0x94, 0x0E,
+0x94, 0x18, 0x94, 0x1A, 0x00, 0x01, 0x02, 0x03,
+0x05, 0x00, 0x00, 0x00, 0x00, 0x01, 0x03, 0x04,
+0x05, 0x00, 0x00, 0x00, 0x09, 0x12, 0x1B, 0x24,
+0x9D, 0x6E, 0x10, 0x80, 0xE3, 0x6E, 0x10, 0x80,
+0xA5, 0x6E, 0x10, 0x80, 0xD5, 0x6E, 0x10, 0x80,
 0xE3, 0x6E, 0x10, 0x80, 0xE3, 0x6E, 0x10, 0x80,
-0xAD, 0x6E, 0x10, 0x80, 0xB5, 0x6E, 0x10, 0x80,
-0xBD, 0x6E, 0x10, 0x80, 0xE3, 0x6E, 0x10, 0x80,
-0xE3, 0x6E, 0x10, 0x80, 0xDD, 0x6E, 0x10, 0x80,
-0xCD, 0x6E, 0x10, 0x80, 0xC5, 0x6E, 0x10, 0x80,
-0x04, 0x08, 0x08, 0x08, 0x08, 0x08, 0x0A, 0x0A,
-0x0A, 0x00, 0x00, 0x00, 0x00, 0x04, 0x0C, 0x14,
-0x1C, 0x24, 0x2C, 0x36, 0x40, 0x00, 0x00, 0x00,
-0xD7, 0x7D, 0x10, 0x80, 0xED, 0x7D, 0x10, 0x80,
-0xD7, 0x7D, 0x10, 0x80, 0xED, 0x7D, 0x10, 0x80,
-0xD7, 0x7D, 0x10, 0x80, 0xED, 0x7D, 0x10, 0x80,
+0xE3, 0x6E, 0x10, 0x80, 0xAD, 0x6E, 0x10, 0x80,
+0xB5, 0x6E, 0x10, 0x80, 0xBD, 0x6E, 0x10, 0x80,
+0xE3, 0x6E, 0x10, 0x80, 0xE3, 0x6E, 0x10, 0x80,
+0xDD, 0x6E, 0x10, 0x80, 0xCD, 0x6E, 0x10, 0x80,
+0xC5, 0x6E, 0x10, 0x80, 0x04, 0x08, 0x08, 0x08,
+0x08, 0x08, 0x0A, 0x0A, 0x0A, 0x00, 0x00, 0x00,
+0x00, 0x04, 0x0C, 0x14, 0x1C, 0x24, 0x2C, 0x36,
+0x40, 0x00, 0x00, 0x00, 0xD7, 0x7D, 0x10, 0x80,
+0xED, 0x7D, 0x10, 0x80, 0xD7, 0x7D, 0x10, 0x80,
+0xED, 0x7D, 0x10, 0x80, 0xD7, 0x7D, 0x10, 0x80,
+0xED, 0x7D, 0x10, 0x80, 0x1D, 0x7E, 0x10, 0x80,
 0x1D, 0x7E, 0x10, 0x80, 0x1D, 0x7E, 0x10, 0x80,
-0x1D, 0x7E, 0x10, 0x80, 0xDB, 0x7D, 0x10, 0x80,
-0x03, 0x7E, 0x10, 0x80, 0x03, 0x7E, 0x10, 0x80,
-0xDB, 0x7D, 0x10, 0x80, 0x35, 0x7E, 0x10, 0x80,
-0x51, 0x7E, 0x10, 0x80, 0x25, 0x91, 0x10, 0x80,
-0x75, 0x91, 0x10, 0x80, 0xFD, 0x91, 0x10, 0x80,
-0x53, 0x92, 0x10, 0x80, 0x77, 0x92, 0x10, 0x80,
-0x07, 0x08, 0x09, 0x0A, 0x0B, 0x0C, 0x0D, 0x0E,
-0x0F, 0x10, 0x00, 0x00, 0x12, 0x12, 0x14, 0x12,
-0x0F, 0x0F, 0x0C, 0x0C, 0x09, 0x08, 0x08, 0x07,
-0x0A, 0x0A, 0x09, 0x07, 0x07, 0x06, 0x05, 0x04,
-0x0C, 0x0C, 0x0A, 0x0A, 0x09, 0x07, 0x07, 0x06,
-0x0C, 0x0C, 0x0A, 0x0A, 0x09, 0x07, 0x07, 0x06,
-0x0C, 0x0C, 0x0A, 0x0A, 0x09, 0x07, 0x07, 0x06,
-0x0A, 0x0A, 0x08, 0x08, 0x08, 0x07, 0x07, 0x06,
-0x04, 0x04, 0x0C, 0x0C, 0x0A, 0x0A, 0x09, 0x07,
+0xDB, 0x7D, 0x10, 0x80, 0x03, 0x7E, 0x10, 0x80,
+0x03, 0x7E, 0x10, 0x80, 0xDB, 0x7D, 0x10, 0x80,
+0x35, 0x7E, 0x10, 0x80, 0x51, 0x7E, 0x10, 0x80,
+0x25, 0x91, 0x10, 0x80, 0x75, 0x91, 0x10, 0x80,
+0xFD, 0x91, 0x10, 0x80, 0x53, 0x92, 0x10, 0x80,
+0x77, 0x92, 0x10, 0x80, 0x07, 0x08, 0x09, 0x0A,
+0x0B, 0x0C, 0x0D, 0x0E, 0x0F, 0x10, 0x00, 0x00,
+0x12, 0x12, 0x14, 0x12, 0x0F, 0x0F, 0x0C, 0x0C,
+0x09, 0x08, 0x08, 0x07, 0x0A, 0x0A, 0x09, 0x07,
 0x07, 0x06, 0x05, 0x04, 0x0C, 0x0C, 0x0A, 0x0A,
-0x09, 0x07, 0x07, 0x05, 0x04, 0x04, 0x0A, 0x0A,
+0x09, 0x07, 0x07, 0x06, 0x0C, 0x0C, 0x0A, 0x0A,
+0x09, 0x07, 0x07, 0x06, 0x0C, 0x0C, 0x0A, 0x0A,
+0x09, 0x07, 0x07, 0x06, 0x0A, 0x0A, 0x08, 0x08,
+0x08, 0x07, 0x07, 0x06, 0x04, 0x04, 0x0C, 0x0C,
+0x0A, 0x0A, 0x09, 0x07, 0x07, 0x06, 0x05, 0x04,
+0x0C, 0x0C, 0x0A, 0x0A, 0x09, 0x07, 0x07, 0x05,
+0x04, 0x04, 0x0A, 0x0A, 0x0A, 0x0A, 0x0A, 0x0A,
+0x0A, 0x0A, 0x0A, 0x0A, 0x28, 0x28, 0x32, 0x28,
+0x1E, 0x19, 0x19, 0x19, 0x18, 0x18, 0x12, 0x0F,
+0x14, 0x1E, 0x19, 0x1E, 0x18, 0x16, 0x0C, 0x0C,
+0x1E, 0x1E, 0x19, 0x1E, 0x18, 0x16, 0x0C, 0x0C,
+0x1E, 0x1E, 0x19, 0x1C, 0x18, 0x14, 0x0C, 0x0A,
+0x1E, 0x1E, 0x19, 0x1E, 0x19, 0x18, 0x0F, 0x0E,
+0x14, 0x28, 0x21, 0x1E, 0x1A, 0x16, 0x0B, 0x10,
+0x0A, 0x0A, 0x2D, 0x28, 0x21, 0x1E, 0x1A, 0x16,
+0x0B, 0x10, 0x0A, 0x0A, 0x1E, 0x1E, 0x1E, 0x1E,
+0x18, 0x16, 0x0D, 0x0D, 0x0A, 0x08, 0x0A, 0x0A,
 0x0A, 0x0A, 0x0A, 0x0A, 0x0A, 0x0A, 0x0A, 0x0A,
-0x28, 0x28, 0x32, 0x28, 0x1E, 0x19, 0x19, 0x19,
-0x18, 0x18, 0x12, 0x0F, 0x14, 0x1E, 0x19, 0x1E,
-0x18, 0x16, 0x0C, 0x0C, 0x1E, 0x1E, 0x19, 0x1E,
-0x18, 0x16, 0x0C, 0x0C, 0x1E, 0x1E, 0x19, 0x1C,
-0x18, 0x14, 0x0C, 0x0A, 0x1E, 0x1E, 0x19, 0x1E,
-0x19, 0x18, 0x0F, 0x0E, 0x14, 0x28, 0x21, 0x1E,
-0x1A, 0x16, 0x0B, 0x10, 0x0A, 0x0A, 0x2D, 0x28,
-0x21, 0x1E, 0x1A, 0x16, 0x0B, 0x10, 0x0A, 0x0A,
-0x1E, 0x1E, 0x1E, 0x1E, 0x18, 0x16, 0x0D, 0x0D,
-0x0A, 0x08, 0x0A, 0x0A, 0x0A, 0x0A, 0x0A, 0x0A,
-0x0A, 0x0A, 0x0A, 0x0A, 0x4A, 0x40, 0x36, 0x2C,
-0x24, 0x1C, 0x14, 0x0C, 0x04, 0x00, 0x00, 0x00,
-0x4B, 0xA6, 0x10, 0x80, 0x9F, 0xA6, 0x10, 0x80,
-0x2D, 0xA7, 0x10, 0x80, 0x2D, 0xA8, 0x10, 0x80,
-0x93, 0xA7, 0x10, 0x80, 0xC3, 0xA7, 0x10, 0x80,
-0x63, 0x6F, 0x6E, 0x66, 0x69, 0x67, 0x5F, 0x70,
-0x68, 0x79, 0x64, 0x6D, 0x5F, 0x72, 0x65, 0x61,
-0x64, 0x5F, 0x74, 0x78, 0x61, 0x67, 0x63, 0x5F,
-0x38, 0x38, 0x32, 0x31, 0x63, 0x00, 0x00, 0x00,
-0x63, 0x6F, 0x6E, 0x66, 0x69, 0x67, 0x5F, 0x70,
-0x68, 0x79, 0x64, 0x6D, 0x5F, 0x77, 0x72, 0x69,
-0x74, 0x65, 0x5F, 0x74, 0x78, 0x61, 0x67, 0x63,
-0x5F, 0x38, 0x38, 0x32, 0x31, 0x63, 0x00, 0x00,
-0x70, 0x68, 0x79, 0x64, 0x6D, 0x5F, 0x77, 0x72,
-0x69, 0x74, 0x65, 0x5F, 0x74, 0x78, 0x61, 0x67,
-0x63, 0x5F, 0x31, 0x62, 0x79, 0x74, 0x65, 0x5F,
-0x38, 0x38, 0x32, 0x31, 0x63, 0x00, 0x00, 0x00,
-0x63, 0x6F, 0x6E, 0x66, 0x69, 0x67, 0x5F, 0x70,
-0x68, 0x79, 0x64, 0x6D, 0x5F, 0x73, 0x77, 0x69,
-0x74, 0x63, 0x68, 0x5F, 0x62, 0x61, 0x6E, 0x64,
-0x77, 0x69, 0x64, 0x74, 0x68, 0x5F, 0x38, 0x38,
-0x32, 0x31, 0x63, 0x00, 0x63, 0x6F, 0x6E, 0x66,
+0x4A, 0x40, 0x36, 0x2C, 0x24, 0x1C, 0x14, 0x0C,
+0x04, 0x00, 0x00, 0x00, 0x4B, 0xA6, 0x10, 0x80,
+0x9F, 0xA6, 0x10, 0x80, 0x2D, 0xA7, 0x10, 0x80,
+0x2D, 0xA8, 0x10, 0x80, 0x93, 0xA7, 0x10, 0x80,
+0xC3, 0xA7, 0x10, 0x80, 0x63, 0x6F, 0x6E, 0x66,
 0x69, 0x67, 0x5F, 0x70, 0x68, 0x79, 0x64, 0x6D,
-0x5F, 0x73, 0x77, 0x69, 0x74, 0x63, 0x68, 0x5F,
-0x63, 0x68, 0x61, 0x6E, 0x6E, 0x65, 0x6C, 0x5F,
-0x38, 0x38, 0x32, 0x31, 0x63, 0x00, 0x00, 0x00,
-0x63, 0x6F, 0x6E, 0x66, 0x69, 0x67, 0x5F, 0x70,
-0x68, 0x79, 0x64, 0x6D, 0x5F, 0x73, 0x77, 0x69,
-0x74, 0x63, 0x68, 0x5F, 0x62, 0x61, 0x6E, 0x64,
-0x5F, 0x38, 0x38, 0x32, 0x31, 0x63, 0x00, 0x00,
-0x63, 0x6F, 0x6E, 0x66, 0x69, 0x67, 0x5F, 0x70,
-0x68, 0x79, 0x64, 0x6D, 0x5F, 0x77, 0x72, 0x69,
-0x74, 0x65, 0x5F, 0x72, 0x66, 0x5F, 0x72, 0x65,
-0x67, 0x5F, 0x38, 0x38, 0x32, 0x31, 0x63, 0x00,
-0x63, 0x6F, 0x6E, 0x66, 0x69, 0x67, 0x5F, 0x70,
-0x68, 0x79, 0x64, 0x6D, 0x5F, 0x72, 0x65, 0x61,
-0x64, 0x5F, 0x72, 0x66, 0x5F, 0x72, 0x65, 0x67,
-0x5F, 0x38, 0x38, 0x32, 0x31, 0x63, 0x00, 0x00,
-0x6D, 0xA9, 0x10, 0x80, 0x87, 0xA9, 0x10, 0x80,
-0x97, 0xA9, 0x10, 0x80, 0xAD, 0xA9, 0x10, 0x80,
-0xC3, 0xA9, 0x10, 0x80, 0xC3, 0xA9, 0x10, 0x80,
-0xDF, 0xA9, 0x10, 0x80, 0xC9, 0x5A, 0x03, 0x80,
-0xC5, 0x5A, 0x03, 0x80, 0xCF, 0x5A, 0x03, 0x80,
-0xD3, 0x5A, 0x03, 0x80, 0xD7, 0x5A, 0x03, 0x80,
-0xDD, 0x5A, 0x03, 0x80, 0xEB, 0x5A, 0x03, 0x80,
-0x15, 0x5B, 0x03, 0x80, 0x43, 0x5B, 0x03, 0x80,
-0x49, 0x5B, 0x03, 0x80, 0x95, 0x5B, 0x03, 0x80,
-0xA3, 0x5B, 0x03, 0x80, 0xBB, 0x5B, 0x03, 0x80,
-0x91, 0x17, 0x03, 0x80, 0x8D, 0x17, 0x03, 0x80,
-0x91, 0x17, 0x03, 0x80, 0x8D, 0x17, 0x03, 0x80,
-0xB1, 0x17, 0x03, 0x80, 0x8D, 0x17, 0x03, 0x80,
-0xB1, 0x17, 0x03, 0x80, 0x8D, 0x17, 0x03, 0x80,
-0xD1, 0x17, 0x03, 0x80, 0x8D, 0x17, 0x03, 0x80,
-0xD1, 0x17, 0x03, 0x80, 0x8D, 0x17, 0x03, 0x80,
-0xF1, 0x17, 0x03, 0x80, 0x8D, 0x17, 0x03, 0x80,
-0xF1, 0x17, 0x03, 0x80, 0x3B, 0x19, 0x03, 0x80,
-0x3F, 0x19, 0x03, 0x80, 0x43, 0x19, 0x03, 0x80,
-0x47, 0x19, 0x03, 0x80, 0x4B, 0x19, 0x03, 0x80,
-0x71, 0x84, 0x03, 0x80, 0x93, 0x84, 0x03, 0x80,
-0xB5, 0x84, 0x03, 0x80, 0xD7, 0x84, 0x03, 0x80,
-0xFB, 0x84, 0x03, 0x80, 0x35, 0x85, 0x03, 0x80,
-0x59, 0x85, 0x03, 0x80, 0x7D, 0x85, 0x03, 0x80,
-0xA1, 0x85, 0x03, 0x80, 0xC7, 0x85, 0x03, 0x80,
-0xCD, 0x87, 0x03, 0x80, 0xE3, 0x87, 0x03, 0x80,
-0x05, 0x88, 0x03, 0x80, 0x2B, 0x88, 0x03, 0x80,
-0x51, 0x88, 0x03, 0x80, 0x2D, 0x8C, 0x03, 0x80,
-0x2D, 0x8C, 0x03, 0x80, 0x2D, 0x8C, 0x03, 0x80,
-0x47, 0x8C, 0x03, 0x80, 0x2D, 0x8C, 0x03, 0x80,
-0x2D, 0x8C, 0x03, 0x80, 0x2D, 0x8C, 0x03, 0x80,
-0x29, 0x8C, 0x03, 0x80, 0x29, 0x8C, 0x03, 0x80,
-0x29, 0x8C, 0x03, 0x80, 0x29, 0x8C, 0x03, 0x80,
-0x29, 0x8C, 0x03, 0x80, 0xA5, 0x8C, 0x03, 0x80,
-0xAF, 0x8C, 0x03, 0x80, 0x55, 0x1E, 0x03, 0x80,
-0x55, 0x1E, 0x03, 0x80, 0x55, 0x1E, 0x03, 0x80,
-0x55, 0x1E, 0x03, 0x80, 0x75, 0x1E, 0x03, 0x80,
-0x75, 0x1E, 0x03, 0x80, 0x75, 0x1E, 0x03, 0x80,
-0x75, 0x1E, 0x03, 0x80, 0x95, 0x1E, 0x03, 0x80,
-0x95, 0x1E, 0x03, 0x80, 0x95, 0x1E, 0x03, 0x80,
-0x95, 0x1E, 0x03, 0x80, 0xB5, 0x1E, 0x03, 0x80,
-0xB5, 0x1E, 0x03, 0x80, 0xB5, 0x1E, 0x03, 0x80,
-0xB5, 0x1E, 0x03, 0x80, 0x1B, 0xA5, 0x03, 0x80,
-0x2B, 0xA5, 0x03, 0x80, 0x35, 0xA5, 0x03, 0x80,
-0x3F, 0xA5, 0x03, 0x80, 0x51, 0xA5, 0x03, 0x80,
-0x89, 0xB3, 0x03, 0x80, 0xBB, 0xB3, 0x03, 0x80,
-0x9D, 0xB3, 0x03, 0x80, 0xC5, 0xB3, 0x03, 0x80,
-0xA7, 0xB3, 0x03, 0x80, 0xD1, 0xB3, 0x03, 0x80,
-0xB1, 0xB3, 0x03, 0x80, 0xCB, 0x39, 0x10, 0x80,
-0xD5, 0x39, 0x10, 0x80, 0xDF, 0x39, 0x10, 0x80,
-0xE9, 0x39, 0x10, 0x80, 0xF3, 0x39, 0x10, 0x80,
-0xC7, 0xC5, 0x03, 0x80, 0x17, 0xC6, 0x03, 0x80,
-0x6F, 0xC6, 0x03, 0x80, 0xC7, 0xC6, 0x03, 0x80,
-0x2D, 0xC7, 0x03, 0x80, 0x1D, 0xCF, 0x03, 0x80,
-0x45, 0xCF, 0x03, 0x80, 0x6B, 0xCF, 0x03, 0x80,
-0x91, 0xCF, 0x03, 0x80, 0xB7, 0xCF, 0x03, 0x80,
-0xFC, 0x10, 0x60, 0xB8, 0xFA, 0xFA, 0xFA, 0xFA,
-0x8C, 0x04, 0x64, 0xB8, 0x90, 0x04, 0x64, 0xB8,
-0x94, 0x04, 0x64, 0xB8, 0x98, 0x04, 0x64, 0xB8,
-0x9C, 0x04, 0x64, 0xB8, 0xA0, 0x04, 0x64, 0xB8,
-0x01, 0x06, 0x64, 0xB8, 0x00, 0x00, 0x68, 0x18,
-0x48, 0x00, 0x68, 0x18, 0x48, 0x04, 0x68, 0x18,
-0x00, 0x00, 0x60, 0xB8, 0x00, 0x00, 0x64, 0xB8,
-0x54, 0x05, 0x64, 0xB8, 0x50, 0x05, 0x64, 0xB8,
-0x51, 0x05, 0x64, 0xB8, 0x78, 0x05, 0x64, 0xB8,
-0x79, 0x05, 0x64, 0xB8, 0x7A, 0x05, 0x64, 0xB8,
-0xFF, 0xFF, 0xFF, 0x8F, 0x60, 0x05, 0x60, 0xB8,
-0x60, 0x05, 0x64, 0xB8, 0x00, 0x00, 0x00, 0x10,
-0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x30,
-0x00, 0x00, 0x00, 0x40, 0xBF, 0x01, 0x64, 0xB8,
-0x89, 0x00, 0x60, 0xB8, 0x8A, 0x00, 0x60, 0xB8,
-0x1A, 0x04, 0x64, 0xB8, 0x1B, 0x04, 0x64, 0xB8,
-0x01, 0x00, 0xFF, 0x00, 0xF0, 0x11, 0x64, 0xB8,
-0x58, 0x05, 0x64, 0xB8, 0x01, 0x00, 0x60, 0xB8,
-0x01, 0x00, 0x64, 0xB8, 0x5B, 0x01, 0x64, 0xB8,
+0x5F, 0x72, 0x65, 0x61, 0x64, 0x5F, 0x74, 0x78,
+0x61, 0x67, 0x63, 0x5F, 0x38, 0x38, 0x32, 0x31,
+0x63, 0x00, 0x00, 0x00, 0x63, 0x6F, 0x6E, 0x66,
+0x69, 0x67, 0x5F, 0x70, 0x68, 0x79, 0x64, 0x6D,
+0x5F, 0x77, 0x72, 0x69, 0x74, 0x65, 0x5F, 0x74,
+0x78, 0x61, 0x67, 0x63, 0x5F, 0x38, 0x38, 0x32,
+0x31, 0x63, 0x00, 0x00, 0x70, 0x68, 0x79, 0x64,
+0x6D, 0x5F, 0x77, 0x72, 0x69, 0x74, 0x65, 0x5F,
+0x74, 0x78, 0x61, 0x67, 0x63, 0x5F, 0x31, 0x62,
+0x79, 0x74, 0x65, 0x5F, 0x38, 0x38, 0x32, 0x31,
+0x63, 0x00, 0x00, 0x00, 0x63, 0x6F, 0x6E, 0x66,
+0x69, 0x67, 0x5F, 0x70, 0x68, 0x79, 0x64, 0x6D,
+0x5F, 0x73, 0x77, 0x69, 0x74, 0x63, 0x68, 0x5F,
+0x62, 0x61, 0x6E, 0x64, 0x77, 0x69, 0x64, 0x74,
+0x68, 0x5F, 0x38, 0x38, 0x32, 0x31, 0x63, 0x00,
+0x63, 0x6F, 0x6E, 0x66, 0x69, 0x67, 0x5F, 0x70,
+0x68, 0x79, 0x64, 0x6D, 0x5F, 0x73, 0x77, 0x69,
+0x74, 0x63, 0x68, 0x5F, 0x63, 0x68, 0x61, 0x6E,
+0x6E, 0x65, 0x6C, 0x5F, 0x38, 0x38, 0x32, 0x31,
+0x63, 0x00, 0x00, 0x00, 0x63, 0x6F, 0x6E, 0x66,
+0x69, 0x67, 0x5F, 0x70, 0x68, 0x79, 0x64, 0x6D,
+0x5F, 0x73, 0x77, 0x69, 0x74, 0x63, 0x68, 0x5F,
+0x62, 0x61, 0x6E, 0x64, 0x5F, 0x38, 0x38, 0x32,
+0x31, 0x63, 0x00, 0x00, 0x63, 0x6F, 0x6E, 0x66,
+0x69, 0x67, 0x5F, 0x70, 0x68, 0x79, 0x64, 0x6D,
+0x5F, 0x77, 0x72, 0x69, 0x74, 0x65, 0x5F, 0x72,
+0x66, 0x5F, 0x72, 0x65, 0x67, 0x5F, 0x38, 0x38,
+0x32, 0x31, 0x63, 0x00, 0x63, 0x6F, 0x6E, 0x66,
+0x69, 0x67, 0x5F, 0x70, 0x68, 0x79, 0x64, 0x6D,
+0x5F, 0x72, 0x65, 0x61, 0x64, 0x5F, 0x72, 0x66,
+0x5F, 0x72, 0x65, 0x67, 0x5F, 0x38, 0x38, 0x32,
+0x31, 0x63, 0x00, 0x00, 0x6D, 0xA9, 0x10, 0x80,
+0x87, 0xA9, 0x10, 0x80, 0x97, 0xA9, 0x10, 0x80,
+0xAD, 0xA9, 0x10, 0x80, 0xC3, 0xA9, 0x10, 0x80,
+0xC3, 0xA9, 0x10, 0x80, 0xDF, 0xA9, 0x10, 0x80,
+0x25, 0x5A, 0x03, 0x80, 0x21, 0x5A, 0x03, 0x80,
+0x2B, 0x5A, 0x03, 0x80, 0x2F, 0x5A, 0x03, 0x80,
+0x33, 0x5A, 0x03, 0x80, 0x39, 0x5A, 0x03, 0x80,
+0x47, 0x5A, 0x03, 0x80, 0x71, 0x5A, 0x03, 0x80,
+0x9F, 0x5A, 0x03, 0x80, 0xA5, 0x5A, 0x03, 0x80,
+0xF1, 0x5A, 0x03, 0x80, 0xFF, 0x5A, 0x03, 0x80,
+0x17, 0x5B, 0x03, 0x80, 0x91, 0x17, 0x03, 0x80,
+0x8D, 0x17, 0x03, 0x80, 0x91, 0x17, 0x03, 0x80,
+0x8D, 0x17, 0x03, 0x80, 0xB1, 0x17, 0x03, 0x80,
+0x8D, 0x17, 0x03, 0x80, 0xB1, 0x17, 0x03, 0x80,
+0x8D, 0x17, 0x03, 0x80, 0xD1, 0x17, 0x03, 0x80,
+0x8D, 0x17, 0x03, 0x80, 0xD1, 0x17, 0x03, 0x80,
+0x8D, 0x17, 0x03, 0x80, 0xF1, 0x17, 0x03, 0x80,
+0x8D, 0x17, 0x03, 0x80, 0xF1, 0x17, 0x03, 0x80,
+0x3B, 0x19, 0x03, 0x80, 0x3F, 0x19, 0x03, 0x80,
+0x43, 0x19, 0x03, 0x80, 0x47, 0x19, 0x03, 0x80,
+0x4B, 0x19, 0x03, 0x80, 0x19, 0x83, 0x03, 0x80,
+0x3B, 0x83, 0x03, 0x80, 0x5D, 0x83, 0x03, 0x80,
+0x7F, 0x83, 0x03, 0x80, 0xA3, 0x83, 0x03, 0x80,
+0xDD, 0x83, 0x03, 0x80, 0x01, 0x84, 0x03, 0x80,
+0x25, 0x84, 0x03, 0x80, 0x49, 0x84, 0x03, 0x80,
+0x6F, 0x84, 0x03, 0x80, 0x75, 0x86, 0x03, 0x80,
+0x8B, 0x86, 0x03, 0x80, 0xAD, 0x86, 0x03, 0x80,
+0xD3, 0x86, 0x03, 0x80, 0xF9, 0x86, 0x03, 0x80,
+0xD5, 0x8A, 0x03, 0x80, 0xD5, 0x8A, 0x03, 0x80,
+0xD5, 0x8A, 0x03, 0x80, 0xEF, 0x8A, 0x03, 0x80,
+0xD5, 0x8A, 0x03, 0x80, 0xD5, 0x8A, 0x03, 0x80,
+0xD5, 0x8A, 0x03, 0x80, 0xD1, 0x8A, 0x03, 0x80,
+0xD1, 0x8A, 0x03, 0x80, 0xD1, 0x8A, 0x03, 0x80,
+0xD1, 0x8A, 0x03, 0x80, 0xD1, 0x8A, 0x03, 0x80,
+0x4D, 0x8B, 0x03, 0x80, 0x57, 0x8B, 0x03, 0x80,
+0x51, 0x1E, 0x03, 0x80, 0x51, 0x1E, 0x03, 0x80,
+0x51, 0x1E, 0x03, 0x80, 0x51, 0x1E, 0x03, 0x80,
+0x71, 0x1E, 0x03, 0x80, 0x71, 0x1E, 0x03, 0x80,
+0x71, 0x1E, 0x03, 0x80, 0x71, 0x1E, 0x03, 0x80,
+0x91, 0x1E, 0x03, 0x80, 0x91, 0x1E, 0x03, 0x80,
+0x91, 0x1E, 0x03, 0x80, 0x91, 0x1E, 0x03, 0x80,
+0xB1, 0x1E, 0x03, 0x80, 0xB1, 0x1E, 0x03, 0x80,
+0xB1, 0x1E, 0x03, 0x80, 0xB1, 0x1E, 0x03, 0x80,
+0xA3, 0xA3, 0x03, 0x80, 0xB3, 0xA3, 0x03, 0x80,
+0xBD, 0xA3, 0x03, 0x80, 0xC7, 0xA3, 0x03, 0x80,
+0xD9, 0xA3, 0x03, 0x80, 0x11, 0xB2, 0x03, 0x80,
+0x43, 0xB2, 0x03, 0x80, 0x25, 0xB2, 0x03, 0x80,
+0x4D, 0xB2, 0x03, 0x80, 0x2F, 0xB2, 0x03, 0x80,
+0x59, 0xB2, 0x03, 0x80, 0x39, 0xB2, 0x03, 0x80,
+0xCB, 0x39, 0x10, 0x80, 0xD5, 0x39, 0x10, 0x80,
+0xDF, 0x39, 0x10, 0x80, 0xE9, 0x39, 0x10, 0x80,
+0xF3, 0x39, 0x10, 0x80, 0x4F, 0xC4, 0x03, 0x80,
+0x9F, 0xC4, 0x03, 0x80, 0xF7, 0xC4, 0x03, 0x80,
+0x4F, 0xC5, 0x03, 0x80, 0xB5, 0xC5, 0x03, 0x80,
+0xA5, 0xCD, 0x03, 0x80, 0xCD, 0xCD, 0x03, 0x80,
+0xF3, 0xCD, 0x03, 0x80, 0x19, 0xCE, 0x03, 0x80,
+0x3F, 0xCE, 0x03, 0x80, 0xFC, 0x10, 0x60, 0xB8,
+0xFA, 0xFA, 0xFA, 0xFA, 0x8C, 0x04, 0x64, 0xB8,
+0x90, 0x04, 0x64, 0xB8, 0x94, 0x04, 0x64, 0xB8,
+0x98, 0x04, 0x64, 0xB8, 0x9C, 0x04, 0x64, 0xB8,
+0xA0, 0x04, 0x64, 0xB8, 0x01, 0x06, 0x64, 0xB8,
+0x00, 0x00, 0x68, 0x18, 0x48, 0x00, 0x68, 0x18,
+0x48, 0x04, 0x68, 0x18, 0x00, 0x00, 0x60, 0xB8,
+0x00, 0x00, 0x64, 0xB8, 0x54, 0x05, 0x64, 0xB8,
+0x50, 0x05, 0x64, 0xB8, 0x51, 0x05, 0x64, 0xB8,
+0x78, 0x05, 0x64, 0xB8, 0x79, 0x05, 0x64, 0xB8,
+0x7A, 0x05, 0x64, 0xB8, 0xFF, 0xFF, 0xFF, 0x8F,
+0x60, 0x05, 0x60, 0xB8, 0x60, 0x05, 0x64, 0xB8,
+0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x20,
+0x00, 0x00, 0x00, 0x30, 0x00, 0x00, 0x00, 0x40,
+0xBF, 0x01, 0x64, 0xB8, 0x89, 0x00, 0x60, 0xB8,
+0x8A, 0x00, 0x60, 0xB8, 0x1A, 0x04, 0x64, 0xB8,
+0x1B, 0x04, 0x64, 0xB8, 0x01, 0x00, 0xFF, 0x00,
+0xF0, 0x11, 0x64, 0xB8, 0x58, 0x05, 0x64, 0xB8,
+0x01, 0x00, 0x60, 0xB8, 0x01, 0x00, 0x64, 0xB8,
+0x87, 0x02, 0x64, 0xB8, 0x96, 0x02, 0x64, 0xB8,
+0x86, 0x02, 0x64, 0xB8, 0xF8, 0x10, 0x60, 0xB8,
+0x00, 0x00, 0x40, 0x00, 0x5B, 0x01, 0x64, 0xB8,
 0x3C, 0x01, 0x64, 0xB8, 0x22, 0x05, 0x64, 0xB8,
 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x00,
 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x08, 0x00,
-0x87, 0x02, 0x64, 0xB8, 0x96, 0x02, 0x64, 0xB8,
-0x86, 0x02, 0x64, 0xB8, 0xF8, 0x10, 0x60, 0xB8,
-0x00, 0x00, 0x40, 0x00, 0x0A, 0x06, 0x64, 0xB8,
-0xFE, 0x11, 0x64, 0xB8, 0xA8, 0x06, 0x64, 0xB8,
-0x10, 0x07, 0x64, 0xB8, 0x00, 0x16, 0x64, 0xB8,
-0x04, 0x16, 0x64, 0xB8, 0x08, 0x16, 0x64, 0xB8,
-0xAB, 0x06, 0x64, 0xB8, 0xAA, 0x06, 0x64, 0xB8,
-0x13, 0x07, 0x64, 0xB8, 0x12, 0x07, 0x64, 0xB8,
-0x03, 0x16, 0x64, 0xB8, 0x02, 0x16, 0x64, 0xB8,
-0x07, 0x16, 0x64, 0xB8, 0x06, 0x16, 0x64, 0xB8,
-0x0B, 0x16, 0x64, 0xB8, 0x0A, 0x16, 0x64, 0xB8,
-0xFC, 0x11, 0x64, 0xB8, 0x57, 0x01, 0x64, 0xB8,
-0x00, 0x00, 0x1E, 0x00, 0x00, 0x00, 0x06, 0x00,
-0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x30, 0x00,
-0x00, 0x00, 0x00, 0x03, 0xB1, 0x05, 0x64, 0xB8,
-0x22, 0x00, 0x60, 0xB8, 0x04, 0x06, 0x64, 0xB8,
-0xFF, 0xFF, 0xFF, 0xFE, 0x00, 0x00, 0x00, 0x01,
-0x60, 0x16, 0x64, 0xB8, 0x09, 0x00, 0x78, 0xB8,
-0x31, 0x00, 0x78, 0xB8, 0x14, 0x00, 0x78, 0xB8,
-0x1D, 0x04, 0x64, 0xB8, 0x32, 0x00, 0x78, 0xB8,
-0x33, 0x00, 0x78, 0xB8, 0x7A, 0x04, 0x64, 0xB8,
-0x24, 0x04, 0x64, 0xB8, 0xD4, 0x04, 0x64, 0xB8,
-0x88, 0x04, 0x64, 0xB8, 0xD0, 0x04, 0x64, 0xB8,
-0x84, 0x04, 0x64, 0xB8, 0x56, 0x04, 0x64, 0xB8,
-0x1C, 0x04, 0x64, 0xB8, 0x20, 0x04, 0x64, 0xB8,
-0xFF, 0xFF, 0xEF, 0xFF, 0x00, 0x00, 0x10, 0x00,
-0x88, 0x00, 0x60, 0xB8, 0x8B, 0x00, 0x60, 0xB8,
-0x84, 0x00, 0x60, 0xB8, 0x00, 0x00, 0x00, 0x02,
-0xCB, 0x01, 0x64, 0xB8, 0x00, 0x00, 0x00, 0x60,
-0xE0, 0x00, 0x60, 0xB8, 0xE1, 0x00, 0x60, 0xB8,
-0xE8, 0x12, 0x64, 0xB8, 0xFF, 0xFF, 0x03, 0x00,
-0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x04,
-0xFF, 0xFF, 0xFF, 0xFB, 0xFF, 0xFF, 0xFF, 0xDF,
-0xFF, 0xFF, 0xFF, 0x1F, 0x04, 0x00, 0x60, 0xB8,
-0x04, 0x00, 0x64, 0xB8, 0x08, 0x00, 0x60, 0xB8,
-0x08, 0x00, 0x64, 0xB8, 0x24, 0x00, 0x60, 0xB8,
-0x80, 0x00, 0x60, 0xB8, 0xFF, 0xFF, 0xFD, 0xFF,
-0xCC, 0x07, 0x64, 0xB8, 0x82, 0x10, 0x60, 0xB8,
-0x42, 0x34, 0x00, 0xB8, 0x00, 0x0C, 0x01, 0x00,
-0x08, 0x00, 0x00, 0xF8, 0x08, 0x70, 0x0A, 0xF8,
-0x08, 0x50, 0x01, 0xF8, 0x00, 0x00, 0x1F, 0x00,
-0x00, 0x00, 0x00, 0xC0, 0x1A, 0x15, 0x64, 0xB8,
-0x77, 0x77, 0x77, 0x77, 0x17, 0x11, 0x17, 0x77,
-0x01, 0x00, 0x00, 0xE0, 0x00, 0x00, 0xFF, 0x0F,
-0x21, 0x00, 0x00, 0xE0, 0x00, 0x1C, 0x01, 0x88,
-0x00, 0x00, 0x00, 0xFF, 0x08, 0x00, 0x45, 0x01,
-0x88, 0x0C, 0x46, 0x01, 0xFF, 0xFF, 0x0F, 0x00,
-0xBA, 0xCB, 0x08, 0x00, 0x18, 0x80, 0x0A, 0x00,
-0x68, 0x10, 0x46, 0x01, 0xF3, 0x10, 0x05, 0x00,
-0x00, 0x9C, 0x0A, 0x00, 0x08, 0x00, 0x45, 0x00,
-0x68, 0x14, 0x46, 0x00, 0x08, 0x00, 0x84, 0x00,
-0xBA, 0xCB, 0x0B, 0x00, 0x18, 0xC0, 0x0A, 0x00,
-0x08, 0x00, 0x44, 0x01, 0xF3, 0x0E, 0x05, 0x00,
-0x18, 0xDC, 0x0A, 0x00, 0xC8, 0x0E, 0x05, 0x00,
-0x18, 0x9C, 0x0A, 0x00, 0x00, 0x00, 0xF0, 0x0F,
-0x00, 0x00, 0x00, 0x0F, 0x02, 0x00, 0x60, 0xB8,
-0x62, 0x06, 0x64, 0xB8, 0xB4, 0x06, 0x64, 0xB8,
-0x06, 0x00, 0x00, 0x89, 0x00, 0x00, 0x00, 0x50,
-0x40, 0x00, 0x0F, 0x70, 0x02, 0x04, 0x00, 0xD8,
-0x20, 0x01, 0x00, 0xD1, 0x40, 0x80, 0x0B, 0x70,
-0x02, 0x04, 0x02, 0xD8, 0x20, 0x01, 0x00, 0xDE,
-0x03, 0x29, 0x29, 0x00, 0x48, 0x00, 0x46, 0x01,
-0x60, 0x10, 0x05, 0x00, 0xDE, 0x0F, 0x0E, 0x00,
-0xCE, 0xEF, 0x0D, 0x00, 0xCE, 0xEF, 0x05, 0x00,
-0xFF, 0x3F, 0x0E, 0x00, 0x1F, 0xFF, 0x0F, 0x00,
-0xE7, 0x0E, 0x05, 0x00, 0xE8, 0x0E, 0x05, 0x00,
-0x45, 0x23, 0x01, 0x00, 0x08, 0x08, 0x00, 0xF8,
-0x08, 0x07, 0x00, 0xF8, 0x08, 0x02, 0x00, 0xF8,
-0x08, 0x03, 0x00, 0xF8, 0x18, 0x00, 0x00, 0xF8,
-0xDE, 0xBC, 0x0A, 0x00, 0x01, 0x00, 0x66, 0xB8,
-0x00, 0x00, 0x66, 0xB8, 0xCD, 0x9B, 0x78, 0x56,
-0x00, 0x1C, 0x66, 0xB8, 0x04, 0x1C, 0x66, 0xB8,
-0xFF, 0xFF, 0x3F, 0x00, 0x1F, 0x00, 0x60, 0xB8,
-0x04, 0xEA, 0xEF, 0xFD, 0x07, 0xEA, 0xEF, 0xFD,
-0x08, 0xEA, 0xEF, 0xFD, 0x09, 0xEA, 0xEF, 0xFD,
-0x0A, 0xEA, 0xEF, 0xFD, 0x53, 0x04, 0x64, 0xB8,
-0xF0, 0x10, 0x60, 0xB8, 0xCA, 0x04, 0x64, 0xB8,
-0xCF, 0x04, 0x64, 0xB8, 0xF1, 0x10, 0x60, 0xB8,
-0x06, 0x00, 0x66, 0xB8, 0x52, 0x04, 0x64, 0xB8,
-0x50, 0x04, 0x64, 0xB8, 0x51, 0x04, 0x64, 0xB8,
-0x01, 0x1C, 0x66, 0xB8, 0x02, 0x1C, 0x66, 0xB8,
-0x03, 0x1C, 0x66, 0xB8, 0x05, 0x1C, 0x66, 0xB8,
-0x06, 0x1C, 0x66, 0xB8, 0x07, 0x1C, 0x66, 0xB8,
-0x02, 0x10, 0x66, 0xB8, 0x08, 0x10, 0x66, 0xB8,
-0x03, 0x10, 0x66, 0xB8, 0x09, 0x10, 0x66, 0xB8,
-0x04, 0x10, 0x66, 0xB8, 0x05, 0x10, 0x66, 0xB8,
-0x0C, 0x10, 0x66, 0xB8, 0x0D, 0x10, 0x66, 0xB8,
-0x06, 0x10, 0x66, 0xB8, 0x00, 0x00, 0x7F, 0x00,
-0xFF, 0xFF, 0x0B, 0xFF, 0x00, 0x00, 0x70, 0x00,
-0xFF, 0xFF, 0x7A, 0xFF, 0x00, 0x00, 0xD0, 0x00,
-0xFF, 0xFF, 0xDA, 0xFF, 0xFF, 0xFF, 0xFF, 0x0F,
-0x00, 0xFF, 0xF9, 0xFF, 0x00, 0x00, 0xFE, 0x1F,
-0x1C, 0x0C, 0xB8, 0x64, 0x67, 0x56, 0x23, 0x01,
-0xFF, 0xFF, 0xF7, 0xFF, 0xFF, 0xFC, 0xFE, 0xFF,
-0x00, 0x01, 0x01, 0x00, 0x00, 0xFC, 0xCF, 0xFF,
-0x00, 0x00, 0x01, 0x10, 0x00, 0xF3, 0x3F, 0xFF,
-0x01, 0x00, 0x02, 0x20, 0x00, 0xCF, 0xFF, 0xFC,
-0x02, 0x00, 0x04, 0x40, 0x00, 0xFC, 0xCE, 0xEF,
-0x40, 0x02, 0x20, 0x00, 0x80, 0x03, 0x30, 0x00,
-0x00, 0x00, 0x80, 0x01, 0xCC, 0x06, 0x64, 0xB8,
-0xA3, 0x00, 0x60, 0xB8, 0xA0, 0x00, 0x60, 0xB8,
-0x65, 0x07, 0x64, 0xB8, 0x40, 0x00, 0x60, 0xB8,
-0x68, 0x00, 0x60, 0xB8, 0x6E, 0x07, 0x64, 0xB8,
-0x64, 0x07, 0x64, 0xB8, 0x23, 0x05, 0x64, 0xB8,
-0x64, 0x00, 0x60, 0xB8, 0xFF, 0xFF, 0x40, 0xFF,
-0xFF, 0xFF, 0xFF, 0xE0, 0x28, 0x00, 0x60, 0xB8,
-0xFF, 0xFF, 0xFF, 0x81, 0x00, 0x00, 0x70, 0xB8,
-0x18, 0x00, 0x70, 0xB8, 0x0B, 0x00, 0x70, 0xB8,
-0x02, 0x00, 0x70, 0xB8, 0x1C, 0x01, 0x64, 0xB8,
-0x94, 0x02, 0x64, 0xB8, 0x97, 0x02, 0x64, 0xB8,
-0x84, 0x02, 0x64, 0xB8, 0x54, 0x02, 0x64, 0xB8,
-0x50, 0x02, 0x64, 0xB8, 0x4C, 0x02, 0x64, 0xB8,
-0x00, 0x00, 0x78, 0xB8, 0x04, 0x00, 0x78, 0xB8,
-0x48, 0x02, 0x64, 0xB8, 0x44, 0x02, 0x64, 0xB8,
-0xCC, 0x01, 0x64, 0xB8, 0xF4, 0x11, 0x64, 0xB8,
-0xF5, 0x11, 0x64, 0xB8, 0xD4, 0x04, 0x60, 0xB8,
-0x84, 0x04, 0x60, 0xB8, 0xC8, 0x04, 0x60, 0xB8,
-0xC8, 0x04, 0x64, 0xB8, 0x78, 0x04, 0x60, 0xB8,
-0x78, 0x04, 0x64, 0xB8, 0xCF, 0x01, 0x64, 0xB8,
-0x34, 0x01, 0x64, 0xB8, 0x64, 0x05, 0x64, 0xB8,
-0x44, 0x00, 0x60, 0xB8, 0x60, 0x00, 0x60, 0xB8,
-0x27, 0x05, 0x64, 0xB8, 0xB5, 0x05, 0x64, 0xB8,
-0x1D, 0x05, 0x64, 0xB8, 0x1C, 0x05, 0x64, 0xB8,
-0xB7, 0x05, 0x64, 0xB8, 0x31, 0x05, 0x64, 0xB8,
-0x3C, 0x11, 0x64, 0xB8, 0x40, 0x05, 0x64, 0xB8,
-0x01, 0xEA, 0xEF, 0xFD, 0x02, 0xEA, 0xEF, 0xFD,
-0xC8, 0x01, 0x64, 0xB8, 0xC9, 0x01, 0x64, 0xB8,
-0xA0, 0x01, 0x64, 0xB8, 0x48, 0x00, 0x60, 0xB8,
-0xFF, 0xFF, 0xFE, 0xFF, 0x47, 0x00, 0x60, 0xB8,
-0x46, 0x00, 0x60, 0xB8, 0x45, 0x00, 0x60, 0xB8,
-0x63, 0x00, 0x60, 0xB8, 0x62, 0x00, 0x60, 0xB8,
-0x61, 0x00, 0x60, 0xB8, 0xC6, 0x01, 0x64, 0xB8,
-0x68, 0x05, 0x64, 0xB8, 0x6C, 0x05, 0x64, 0xB8,
-0x57, 0x05, 0x64, 0xB8, 0x77, 0x05, 0x64, 0xB8,
-0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x05,
-0x64, 0x01, 0x64, 0xB8, 0x53, 0x05, 0x64, 0xB8,
-0x94, 0x01, 0x64, 0xB8, 0x00, 0x10, 0x66, 0xB8,
-0x54, 0x00, 0x60, 0xB8, 0x50, 0x00, 0x60, 0xB8,
-0x9A, 0x01, 0x64, 0xB8, 0x99, 0x01, 0x64, 0xB8,
-0xC7, 0x01, 0x64, 0xB8, 0x30, 0x01, 0x64, 0xB8,
-0x24, 0x01, 0x64, 0xB8, 0x20, 0x01, 0x64, 0xB8,
-0x24, 0x11, 0x64, 0xB8, 0x20, 0x11, 0x64, 0xB8,
-0x2C, 0x11, 0x64, 0xB8, 0x28, 0x11, 0x64, 0xB8,
-0x34, 0x11, 0x64, 0xB8, 0x30, 0x11, 0x64, 0xB8,
-0x38, 0x01, 0x64, 0xB8, 0x38, 0x11, 0x64, 0xB8,
-0xE4, 0x11, 0x64, 0xB8, 0xE0, 0x11, 0x64, 0xB8,
-0x00, 0x40, 0xE0, 0x03, 0x01, 0x70, 0x00, 0x03,
-0xE0, 0x04, 0x64, 0xB8, 0xE3, 0x04, 0x64, 0xB8,
-0xE0, 0x12, 0x64, 0xB8, 0x00, 0x01, 0x64, 0xB8,
-0x08, 0x02, 0x64, 0xB8, 0x67, 0x05, 0x64, 0xB8,
-0x66, 0x05, 0x64, 0xB8, 0x65, 0x05, 0x64, 0xB8,
-0x63, 0x05, 0x64, 0xB8, 0x62, 0x05, 0x64, 0xB8,
-0x61, 0x05, 0x64, 0xB8, 0x02, 0x01, 0x64, 0xB8,
-0x21, 0x05, 0x64, 0xB8, 0xB4, 0x00, 0x60, 0xB8,
+0x0A, 0x06, 0x64, 0xB8, 0xFE, 0x11, 0x64, 0xB8,
+0xA8, 0x06, 0x64, 0xB8, 0x10, 0x07, 0x64, 0xB8,
+0x00, 0x16, 0x64, 0xB8, 0x04, 0x16, 0x64, 0xB8,
+0x08, 0x16, 0x64, 0xB8, 0xAB, 0x06, 0x64, 0xB8,
+0xAA, 0x06, 0x64, 0xB8, 0x13, 0x07, 0x64, 0xB8,
+0x12, 0x07, 0x64, 0xB8, 0x03, 0x16, 0x64, 0xB8,
+0x02, 0x16, 0x64, 0xB8, 0x07, 0x16, 0x64, 0xB8,
+0x06, 0x16, 0x64, 0xB8, 0x0B, 0x16, 0x64, 0xB8,
+0x0A, 0x16, 0x64, 0xB8, 0xFC, 0x11, 0x64, 0xB8,
+0x57, 0x01, 0x64, 0xB8, 0x00, 0x00, 0x1E, 0x00,
+0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x03, 0x00,
+0x00, 0x00, 0x30, 0x00, 0x00, 0x00, 0x00, 0x03,
+0xB1, 0x05, 0x64, 0xB8, 0x22, 0x00, 0x60, 0xB8,
+0x04, 0x06, 0x64, 0xB8, 0xFF, 0xFF, 0xFF, 0xFE,
+0x00, 0x00, 0x00, 0x01, 0x60, 0x16, 0x64, 0xB8,
+0x09, 0x00, 0x78, 0xB8, 0x31, 0x00, 0x78, 0xB8,
+0x14, 0x00, 0x78, 0xB8, 0x1D, 0x04, 0x64, 0xB8,
+0x32, 0x00, 0x78, 0xB8, 0x33, 0x00, 0x78, 0xB8,
+0x7A, 0x04, 0x64, 0xB8, 0x24, 0x04, 0x64, 0xB8,
+0xD4, 0x04, 0x64, 0xB8, 0x88, 0x04, 0x64, 0xB8,
+0xD0, 0x04, 0x64, 0xB8, 0x84, 0x04, 0x64, 0xB8,
+0x56, 0x04, 0x64, 0xB8, 0x1C, 0x04, 0x64, 0xB8,
+0x20, 0x04, 0x64, 0xB8, 0xFF, 0xFF, 0xEF, 0xFF,
+0x00, 0x00, 0x10, 0x00, 0x88, 0x00, 0x60, 0xB8,
+0x8B, 0x00, 0x60, 0xB8, 0x84, 0x00, 0x60, 0xB8,
+0x00, 0x00, 0x00, 0x02, 0xCB, 0x01, 0x64, 0xB8,
+0x00, 0x00, 0x00, 0x60, 0xE0, 0x00, 0x60, 0xB8,
+0xE1, 0x00, 0x60, 0xB8, 0xE8, 0x12, 0x64, 0xB8,
+0xFF, 0xFF, 0x03, 0x00, 0x00, 0x00, 0x00, 0x80,
+0x00, 0x00, 0x00, 0x04, 0xFF, 0xFF, 0xFF, 0xFB,
+0xFF, 0xFF, 0xFF, 0xDF, 0xFF, 0xFF, 0xFF, 0x1F,
+0x04, 0x00, 0x60, 0xB8, 0x04, 0x00, 0x64, 0xB8,
+0x08, 0x00, 0x60, 0xB8, 0x08, 0x00, 0x64, 0xB8,
+0x24, 0x00, 0x60, 0xB8, 0x80, 0x00, 0x60, 0xB8,
+0xFF, 0xFF, 0xFD, 0xFF, 0xCC, 0x07, 0x64, 0xB8,
+0x82, 0x10, 0x60, 0xB8, 0x42, 0x34, 0x00, 0xB8,
+0x00, 0x0C, 0x01, 0x00, 0x08, 0x00, 0x00, 0xF8,
+0x08, 0x70, 0x0A, 0xF8, 0x08, 0x50, 0x01, 0xF8,
+0x00, 0x00, 0x1F, 0x00, 0x00, 0x00, 0x00, 0xC0,
+0x1A, 0x15, 0x64, 0xB8, 0x77, 0x77, 0x77, 0x77,
+0x17, 0x11, 0x17, 0x77, 0x01, 0x00, 0x00, 0xE0,
+0x00, 0x00, 0xFF, 0x0F, 0x21, 0x00, 0x00, 0xE0,
+0x00, 0x1C, 0x01, 0x88, 0x00, 0x00, 0x00, 0xFF,
+0x08, 0x00, 0x45, 0x01, 0x88, 0x0C, 0x46, 0x01,
+0xFF, 0xFF, 0x0F, 0x00, 0xBA, 0xCB, 0x08, 0x00,
+0x18, 0x80, 0x0A, 0x00, 0x68, 0x10, 0x46, 0x01,
+0xF3, 0x10, 0x05, 0x00, 0x00, 0x9C, 0x0A, 0x00,
+0x08, 0x00, 0x45, 0x00, 0x68, 0x14, 0x46, 0x00,
+0x08, 0x00, 0x84, 0x00, 0xBA, 0xCB, 0x0B, 0x00,
+0x18, 0xC0, 0x0A, 0x00, 0x08, 0x00, 0x44, 0x01,
+0xF3, 0x0E, 0x05, 0x00, 0x18, 0xDC, 0x0A, 0x00,
+0xC8, 0x0E, 0x05, 0x00, 0x18, 0x9C, 0x0A, 0x00,
+0x00, 0x00, 0xF0, 0x0F, 0x00, 0x00, 0x00, 0x0F,
+0x02, 0x00, 0x60, 0xB8, 0x62, 0x06, 0x64, 0xB8,
+0xB4, 0x06, 0x64, 0xB8, 0x06, 0x00, 0x00, 0x89,
+0x00, 0x00, 0x00, 0x50, 0x40, 0x00, 0x0F, 0x70,
+0x02, 0x04, 0x00, 0xD8, 0x20, 0x01, 0x00, 0xD1,
+0x40, 0x80, 0x0B, 0x70, 0x02, 0x04, 0x02, 0xD8,
+0x20, 0x01, 0x00, 0xDE, 0x03, 0x29, 0x29, 0x00,
+0x48, 0x00, 0x46, 0x01, 0x60, 0x10, 0x05, 0x00,
+0xDE, 0x0F, 0x0E, 0x00, 0xCE, 0xEF, 0x0D, 0x00,
+0xCE, 0xEF, 0x05, 0x00, 0xFF, 0x3F, 0x0E, 0x00,
+0x1F, 0xFF, 0x0F, 0x00, 0xE7, 0x0E, 0x05, 0x00,
+0xE8, 0x0E, 0x05, 0x00, 0x45, 0x23, 0x01, 0x00,
+0x08, 0x08, 0x00, 0xF8, 0x08, 0x07, 0x00, 0xF8,
+0x08, 0x02, 0x00, 0xF8, 0x08, 0x03, 0x00, 0xF8,
+0x18, 0x00, 0x00, 0xF8, 0xDE, 0xBC, 0x0A, 0x00,
+0x01, 0x00, 0x66, 0xB8, 0x00, 0x00, 0x66, 0xB8,
+0xCD, 0x9B, 0x78, 0x56, 0x00, 0x1C, 0x66, 0xB8,
+0x04, 0x1C, 0x66, 0xB8, 0xFF, 0xFF, 0x3F, 0x00,
+0x1F, 0x00, 0x60, 0xB8, 0x04, 0xEA, 0xEF, 0xFD,
+0x07, 0xEA, 0xEF, 0xFD, 0x08, 0xEA, 0xEF, 0xFD,
+0x09, 0xEA, 0xEF, 0xFD, 0x0A, 0xEA, 0xEF, 0xFD,
+0x53, 0x04, 0x64, 0xB8, 0xF0, 0x10, 0x60, 0xB8,
+0xCA, 0x04, 0x64, 0xB8, 0xCF, 0x04, 0x64, 0xB8,
+0xF1, 0x10, 0x60, 0xB8, 0x06, 0x00, 0x66, 0xB8,
+0x52, 0x04, 0x64, 0xB8, 0x50, 0x04, 0x64, 0xB8,
+0x51, 0x04, 0x64, 0xB8, 0x01, 0x1C, 0x66, 0xB8,
+0x02, 0x1C, 0x66, 0xB8, 0x03, 0x1C, 0x66, 0xB8,
+0x05, 0x1C, 0x66, 0xB8, 0x06, 0x1C, 0x66, 0xB8,
+0x07, 0x1C, 0x66, 0xB8, 0x02, 0x10, 0x66, 0xB8,
+0x08, 0x10, 0x66, 0xB8, 0x03, 0x10, 0x66, 0xB8,
+0x09, 0x10, 0x66, 0xB8, 0x04, 0x10, 0x66, 0xB8,
+0x05, 0x10, 0x66, 0xB8, 0x0C, 0x10, 0x66, 0xB8,
+0x0D, 0x10, 0x66, 0xB8, 0x06, 0x10, 0x66, 0xB8,
+0x00, 0x00, 0x7F, 0x00, 0xFF, 0xFF, 0x0B, 0xFF,
+0x00, 0x00, 0x70, 0x00, 0xFF, 0xFF, 0x7A, 0xFF,
+0x00, 0x00, 0xD0, 0x00, 0xFF, 0xFF, 0xDA, 0xFF,
+0xFF, 0xFF, 0xFF, 0x0F, 0x00, 0xFF, 0xF9, 0xFF,
+0x00, 0x00, 0xFE, 0x1F, 0x1C, 0x0C, 0xB8, 0x64,
+0x67, 0x56, 0x23, 0x01, 0xFF, 0xFF, 0xF7, 0xFF,
+0xFF, 0xFC, 0xFE, 0xFF, 0x00, 0x01, 0x01, 0x00,
+0x00, 0xFC, 0xCF, 0xFF, 0x00, 0x00, 0x01, 0x10,
+0x00, 0xF3, 0x3F, 0xFF, 0x01, 0x00, 0x02, 0x20,
+0x00, 0xCF, 0xFF, 0xFC, 0x02, 0x00, 0x04, 0x40,
+0x00, 0xFC, 0xCE, 0xEF, 0x40, 0x02, 0x20, 0x00,
+0x80, 0x03, 0x30, 0x00, 0x00, 0x00, 0x80, 0x01,
+0xCC, 0x06, 0x64, 0xB8, 0xA3, 0x00, 0x60, 0xB8,
+0xA0, 0x00, 0x60, 0xB8, 0x65, 0x07, 0x64, 0xB8,
+0x40, 0x00, 0x60, 0xB8, 0x68, 0x00, 0x60, 0xB8,
+0x6E, 0x07, 0x64, 0xB8, 0x64, 0x07, 0x64, 0xB8,
+0x23, 0x05, 0x64, 0xB8, 0x64, 0x00, 0x60, 0xB8,
+0xFF, 0xFF, 0x40, 0xFF, 0xFF, 0xFF, 0xFF, 0xE0,
+0x28, 0x00, 0x60, 0xB8, 0xFF, 0xFF, 0xFF, 0x81,
+0x00, 0x00, 0x70, 0xB8, 0x18, 0x00, 0x70, 0xB8,
+0x0B, 0x00, 0x70, 0xB8, 0x02, 0x00, 0x70, 0xB8,
+0x1C, 0x01, 0x64, 0xB8, 0x94, 0x02, 0x64, 0xB8,
+0x97, 0x02, 0x64, 0xB8, 0x84, 0x02, 0x64, 0xB8,
+0x54, 0x02, 0x64, 0xB8, 0x50, 0x02, 0x64, 0xB8,
+0x4C, 0x02, 0x64, 0xB8, 0x00, 0x00, 0x78, 0xB8,
+0x04, 0x00, 0x78, 0xB8, 0x48, 0x02, 0x64, 0xB8,
+0x44, 0x02, 0x64, 0xB8, 0xCC, 0x01, 0x64, 0xB8,
+0xF4, 0x11, 0x64, 0xB8, 0xF5, 0x11, 0x64, 0xB8,
+0xD4, 0x04, 0x60, 0xB8, 0x84, 0x04, 0x60, 0xB8,
+0xC8, 0x04, 0x60, 0xB8, 0xC8, 0x04, 0x64, 0xB8,
+0x78, 0x04, 0x60, 0xB8, 0x78, 0x04, 0x64, 0xB8,
+0xCF, 0x01, 0x64, 0xB8, 0x34, 0x01, 0x64, 0xB8,
+0x64, 0x05, 0x64, 0xB8, 0x44, 0x00, 0x60, 0xB8,
+0x60, 0x00, 0x60, 0xB8, 0x27, 0x05, 0x64, 0xB8,
+0xB5, 0x05, 0x64, 0xB8, 0x1D, 0x05, 0x64, 0xB8,
+0x1C, 0x05, 0x64, 0xB8, 0xB7, 0x05, 0x64, 0xB8,
+0x31, 0x05, 0x64, 0xB8, 0x3C, 0x11, 0x64, 0xB8,
+0x40, 0x05, 0x64, 0xB8, 0x01, 0xEA, 0xEF, 0xFD,
+0x02, 0xEA, 0xEF, 0xFD, 0xC8, 0x01, 0x64, 0xB8,
+0xC9, 0x01, 0x64, 0xB8, 0xA0, 0x01, 0x64, 0xB8,
+0x48, 0x00, 0x60, 0xB8, 0xFF, 0xFF, 0xFE, 0xFF,
+0x47, 0x00, 0x60, 0xB8, 0x46, 0x00, 0x60, 0xB8,
+0x45, 0x00, 0x60, 0xB8, 0x63, 0x00, 0x60, 0xB8,
+0x62, 0x00, 0x60, 0xB8, 0x61, 0x00, 0x60, 0xB8,
+0xC6, 0x01, 0x64, 0xB8, 0x68, 0x05, 0x64, 0xB8,
+0x6C, 0x05, 0x64, 0xB8, 0x57, 0x05, 0x64, 0xB8,
+0x77, 0x05, 0x64, 0xB8, 0xFF, 0xFF, 0xFF, 0x00,
+0x00, 0x00, 0x00, 0x05, 0x64, 0x01, 0x64, 0xB8,
+0x53, 0x05, 0x64, 0xB8, 0x94, 0x01, 0x64, 0xB8,
+0x00, 0x10, 0x66, 0xB8, 0x54, 0x00, 0x60, 0xB8,
+0x50, 0x00, 0x60, 0xB8, 0x9A, 0x01, 0x64, 0xB8,
+0x99, 0x01, 0x64, 0xB8, 0xC7, 0x01, 0x64, 0xB8,
+0x30, 0x01, 0x64, 0xB8, 0x24, 0x01, 0x64, 0xB8,
+0x20, 0x01, 0x64, 0xB8, 0x24, 0x11, 0x64, 0xB8,
+0x20, 0x11, 0x64, 0xB8, 0x2C, 0x11, 0x64, 0xB8,
+0x28, 0x11, 0x64, 0xB8, 0x34, 0x11, 0x64, 0xB8,
+0x30, 0x11, 0x64, 0xB8, 0x38, 0x01, 0x64, 0xB8,
+0x38, 0x11, 0x64, 0xB8, 0xE4, 0x11, 0x64, 0xB8,
+0xE0, 0x11, 0x64, 0xB8, 0x00, 0x40, 0xE0, 0x03,
+0x01, 0x70, 0x00, 0x03, 0xE0, 0x04, 0x64, 0xB8,
+0xE3, 0x04, 0x64, 0xB8, 0xE0, 0x12, 0x64, 0xB8,
+0x00, 0x01, 0x64, 0xB8, 0x08, 0x02, 0x64, 0xB8,
+0x67, 0x05, 0x64, 0xB8, 0x66, 0x05, 0x64, 0xB8,
+0x65, 0x05, 0x64, 0xB8, 0x63, 0x05, 0x64, 0xB8,
+0x62, 0x05, 0x64, 0xB8, 0x61, 0x05, 0x64, 0xB8,
+0x02, 0x01, 0x64, 0xB8, 0x21, 0x05, 0x64, 0xB8,
 0x2F, 0x01, 0x64, 0xB8, 0x00, 0x28, 0x64, 0xB8,
 0x00, 0x2C, 0x64, 0xB8, 0x00, 0x38, 0x64, 0xB8,
 0x00, 0x3C, 0x64, 0xB8, 0xF8, 0x05, 0x64, 0xB8,
@@ -25942,9 +25784,6 @@ u8 array_mp_8821c_fw_nic[] = {
 0xF4, 0x00, 0x60, 0xB8, 0x91, 0x00, 0x60, 0xB8,
 0x00, 0x00, 0xC0, 0x00, 0x00, 0x10, 0x24, 0x00,
 0x82, 0x82, 0x62, 0x00, 0x30, 0x00, 0x78, 0xB8,
-0x3A, 0x00, 0x60, 0xB8, 0xF6, 0x00, 0x60, 0xB8,
-0xC2, 0x00, 0x60, 0xB8, 0xEC, 0x00, 0x60, 0xB8,
-0x00, 0x00, 0x12, 0x20, 0x6A, 0x00, 0x60, 0xB8,
 0x5B, 0x49, 0x51, 0x4B, 0x5D, 0x3D, 0x3D, 0x3D,
 0x3D, 0x3D, 0x3E, 0x50, 0x48, 0x59, 0x5F, 0x49,
 0x51, 0x43, 0x61, 0x6C, 0x69, 0x62, 0x72, 0x61,
@@ -26324,7 +26163,7 @@ u8 array_mp_8821c_fw_nic[] = {
 0x77, 0x3A, 0x20, 0x25, 0x64, 0x2C, 0x20, 0x70,
 0x72, 0x69, 0x6D, 0x61, 0x72, 0x79, 0x20, 0x63,
 0x68, 0x3A, 0x20, 0x25, 0x64, 0x29, 0x0A, 0x00,
-0x53, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x44, 0x61, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
@@ -26871,11 +26710,11 @@ u8 array_mp_8821c_fw_nic[] = {
 0x30, 0xF0, 0x20, 0x6B, 0xCE, 0xF6, 0x4C, 0xDB,
 0x10, 0xF0, 0x23, 0x6A, 0x20, 0xF5, 0x11, 0x4A,
 0x30, 0xF0, 0x20, 0x6B, 0xCE, 0xF6, 0x50, 0xDB,
-0x10, 0xF0, 0x23, 0x6A, 0x23, 0xF7, 0x01, 0x4A,
+0x10, 0xF0, 0x23, 0x6A, 0x03, 0xF7, 0x1D, 0x4A,
 0x30, 0xF0, 0x20, 0x6B, 0xCE, 0xF6, 0x54, 0xDB,
-0x10, 0xF0, 0x23, 0x6A, 0x24, 0xF0, 0x1D, 0x4A,
+0x10, 0xF0, 0x23, 0x6A, 0x24, 0xF0, 0x19, 0x4A,
 0x30, 0xF0, 0x20, 0x6B, 0xCE, 0xF6, 0x58, 0xDB,
-0x10, 0xF0, 0x23, 0x6A, 0x03, 0xF7, 0x09, 0x4A,
+0x10, 0xF0, 0x23, 0x6A, 0x03, 0xF7, 0x05, 0x4A,
 0x30, 0xF0, 0x20, 0x6B, 0xCE, 0xF6, 0x5C, 0xDB,
 0x10, 0xF0, 0x21, 0x6A, 0xE2, 0xF5, 0x00, 0x4A,
 0x30, 0xF0, 0x20, 0x6B, 0xEE, 0xF6, 0x40, 0xDB,
@@ -26931,7 +26770,7 @@ u8 array_mp_8821c_fw_nic[] = {
 0x30, 0xF0, 0x20, 0x6B, 0x4E, 0xF7, 0x44, 0xDB,
 0x10, 0xF0, 0x21, 0x6A, 0xA1, 0xF1, 0x00, 0x4A,
 0x30, 0xF0, 0x20, 0x6B, 0x4E, 0xF7, 0x48, 0xDB,
-0x10, 0xF0, 0x23, 0x6A, 0xE3, 0xF6, 0x09, 0x4A,
+0x10, 0xF0, 0x23, 0x6A, 0xE3, 0xF6, 0x05, 0x4A,
 0x30, 0xF0, 0x20, 0x6B, 0x4E, 0xF7, 0x4C, 0xDB,
 0x10, 0xF0, 0x21, 0x6A, 0xFF, 0xF7, 0x1C, 0x4A,
 0x30, 0xF0, 0x20, 0x6B, 0x4E, 0xF7, 0x50, 0xDB,
@@ -27023,7 +26862,7 @@ u8 array_mp_8821c_fw_nic[] = {
 0x30, 0xF0, 0x20, 0x6B, 0xEE, 0xF7, 0x5C, 0xDB,
 0x20, 0xE8, 0x00, 0x65, 0xFD, 0x63, 0x05, 0x62,
 0x30, 0xF0, 0x20, 0x6A, 0x4E, 0xF2, 0x4C, 0x9A,
-0x30, 0xF0, 0x20, 0x6C, 0xEF, 0xF6, 0x04, 0x4C,
+0x30, 0xF0, 0x20, 0x6C, 0xEF, 0xF6, 0x00, 0x4C,
 0x00, 0x6D, 0x07, 0x6E, 0x40, 0xEA, 0x05, 0x97,
 0x03, 0x63, 0x00, 0xEF, 0x30, 0xF0, 0x20, 0x6A,
 0xC0, 0xF1, 0x08, 0x4A, 0x04, 0x6B, 0xC8, 0xF3,
@@ -27035,31 +26874,31 @@ u8 array_mp_8821c_fw_nic[] = {
 0x4E, 0xF2, 0x4C, 0x9A, 0x30, 0xF0, 0x20, 0x6C,
 0x70, 0x6E, 0x28, 0xF5, 0x1C, 0x4C, 0x00, 0x6D,
 0x30, 0xF0, 0x20, 0x68, 0x40, 0xEA, 0xC0, 0xF1,
-0x08, 0x48, 0x00, 0x18, 0x6E, 0xCA, 0x02, 0x6A,
+0x08, 0x48, 0x00, 0x18, 0x6D, 0xCA, 0x02, 0x6A,
 0x68, 0xF3, 0x56, 0xC0, 0x10, 0x6A, 0x88, 0xF3,
 0x44, 0xC0, 0x05, 0x6A, 0x88, 0xF3, 0x4A, 0xC8,
 0x88, 0xF3, 0x5B, 0xA0, 0x01, 0x69, 0x88, 0xF3,
 0x22, 0xC0, 0x04, 0x4A, 0x88, 0xF3, 0x56, 0xC0,
 0x10, 0x6A, 0x88, 0xF3, 0x57, 0xC0, 0x88, 0xF3,
 0x23, 0xC0, 0x80, 0x18, 0x79, 0x05, 0x00, 0x6C,
-0xA4, 0x67, 0x00, 0x18, 0xE5, 0xC8, 0x02, 0x6C,
-0x0C, 0x6D, 0x00, 0x18, 0xE5, 0xC8, 0x01, 0x6C,
-0x0C, 0x6D, 0x00, 0x18, 0xE5, 0xC8, 0x30, 0xF0,
+0xA4, 0x67, 0x00, 0x18, 0xE4, 0xC8, 0x02, 0x6C,
+0x0C, 0x6D, 0x00, 0x18, 0xE4, 0xC8, 0x01, 0x6C,
+0x0C, 0x6D, 0x00, 0x18, 0xE4, 0xC8, 0x30, 0xF0,
 0x20, 0x6C, 0x00, 0x6D, 0x48, 0xF5, 0x10, 0x4C,
-0x00, 0x18, 0xFF, 0xF5, 0xE8, 0xF3, 0x66, 0xA0,
+0x00, 0x18, 0xA1, 0xF5, 0xE8, 0xF3, 0x66, 0xA0,
 0x0F, 0x6A, 0xE8, 0xF3, 0x45, 0xC0, 0x01, 0x6A,
 0x6C, 0xEA, 0x28, 0x6B, 0x6D, 0xEA, 0xE8, 0xF3,
 0x46, 0xC0, 0x07, 0x6A, 0xE8, 0xF3, 0x47, 0xC0,
 0x88, 0xF3, 0x5B, 0xA0, 0x01, 0x6C, 0xE8, 0xF3,
 0x24, 0xC0, 0x04, 0x4A, 0x88, 0xF3, 0x56, 0xC0,
 0x10, 0x6A, 0x88, 0xF3, 0x57, 0xC0, 0x00, 0x18,
-0xAE, 0xC9, 0x00, 0x6C, 0xA4, 0x67, 0x00, 0x18,
-0x50, 0xD1, 0x01, 0x6C, 0x00, 0x6D, 0x00, 0x18,
-0x50, 0xD1, 0x02, 0x6C, 0x00, 0x6D, 0x00, 0x18,
-0x50, 0xD1, 0x03, 0x6C, 0x00, 0x6D, 0x00, 0x18,
-0x50, 0xD1, 0x04, 0x6C, 0x00, 0x6D, 0x00, 0x18,
-0x50, 0xD1, 0x10, 0xF0, 0x24, 0x6A, 0x7C, 0xF3,
-0x74, 0x9A, 0xF8, 0x6A, 0x00, 0x6D, 0x80, 0xA3,
+0xAD, 0xC9, 0x00, 0x6C, 0xA4, 0x67, 0x00, 0x18,
+0x3E, 0xD1, 0x01, 0x6C, 0x00, 0x6D, 0x00, 0x18,
+0x3E, 0xD1, 0x02, 0x6C, 0x00, 0x6D, 0x00, 0x18,
+0x3E, 0xD1, 0x03, 0x6C, 0x00, 0x6D, 0x00, 0x18,
+0x3E, 0xD1, 0x04, 0x6C, 0x00, 0x6D, 0x00, 0x18,
+0x3E, 0xD1, 0x10, 0xF0, 0x24, 0x6A, 0x5B, 0xF7,
+0x70, 0x9A, 0xF8, 0x6A, 0x00, 0x6D, 0x80, 0xA3,
 0xC5, 0x67, 0x8C, 0xEA, 0x40, 0xC3, 0x30, 0xF0,
 0x20, 0x6A, 0x6E, 0xF2, 0x58, 0x9A, 0xFF, 0x6C,
 0x40, 0xEA, 0x07, 0x97, 0x06, 0x91, 0x05, 0x90,
@@ -27068,7 +26907,7 @@ u8 array_mp_8821c_fw_nic[] = {
 0x62, 0xC2, 0xC1, 0xF6, 0x63, 0xC2, 0xC1, 0xF6,
 0x64, 0xC2, 0xC1, 0xF6, 0x65, 0xC2, 0x20, 0xE8,
 0x10, 0xF0, 0x23, 0x6B, 0x30, 0xF0, 0x20, 0x6A,
-0x24, 0xF0, 0x1D, 0x4B, 0x40, 0xF1, 0x68, 0xDA,
+0x24, 0xF0, 0x19, 0x4B, 0x40, 0xF1, 0x68, 0xDA,
 0x10, 0xF0, 0x23, 0x6B, 0x40, 0xF1, 0x08, 0x4A,
 0x40, 0xF5, 0x09, 0x4B, 0x61, 0xDA, 0x10, 0xF0,
 0x23, 0x6B, 0xC0, 0xF5, 0x05, 0x4B, 0x62, 0xDA,
@@ -27084,8 +26923,8 @@ u8 array_mp_8821c_fw_nic[] = {
 0xFB, 0x61, 0x42, 0xF4, 0x10, 0x6A, 0x1F, 0xF7,
 0x00, 0x6B, 0x4C, 0xEB, 0x02, 0xF0, 0x00, 0x73,
 0x01, 0x60, 0x05, 0x2B, 0x10, 0xF0, 0x24, 0x6B,
-0xFC, 0xF2, 0x60, 0x9B, 0x04, 0x10, 0x10, 0xF0,
-0x24, 0x6B, 0xFC, 0xF2, 0x64, 0x9B, 0x6D, 0xE2,
+0xBB, 0xF6, 0x7C, 0x9B, 0x04, 0x10, 0x10, 0xF0,
+0x24, 0x6B, 0xDB, 0xF6, 0x60, 0x9B, 0x6D, 0xE2,
 0x04, 0x4A, 0x00, 0x6C, 0x62, 0xF4, 0x00, 0x72,
 0x80, 0xDB, 0xE9, 0x61, 0x20, 0xE8, 0x00, 0x65,
 0xFD, 0x63, 0x05, 0x62, 0x30, 0xF0, 0x20, 0x6A,
@@ -27093,9 +26932,9 @@ u8 array_mp_8821c_fw_nic[] = {
 0xEF, 0xF4, 0x0F, 0x4C, 0x00, 0x6D, 0x03, 0x6E,
 0x40, 0xEA, 0x05, 0x97, 0x03, 0x63, 0x00, 0xEF,
 0xFD, 0x63, 0x05, 0x62, 0x10, 0xF0, 0x24, 0x6A,
-0x7C, 0xF4, 0x5C, 0x9A, 0x03, 0x6D, 0xFF, 0x6B,
-0x80, 0x9A, 0x10, 0xF0, 0x24, 0x6A, 0x9C, 0xF4,
-0x40, 0x9A, 0x00, 0xF5, 0x82, 0x34, 0xAC, 0xEC,
+0x5C, 0xF0, 0x58, 0x9A, 0x03, 0x6D, 0xFF, 0x6B,
+0x80, 0x9A, 0x10, 0xF0, 0x24, 0x6A, 0x5C, 0xF0,
+0x5C, 0x9A, 0x00, 0xF5, 0x82, 0x34, 0xAC, 0xEC,
 0x40, 0x9A, 0x01, 0x74, 0x42, 0x32, 0x52, 0x32,
 0xAC, 0xEA, 0x06, 0x60, 0x0A, 0x2C, 0x02, 0x5A,
 0x28, 0x6C, 0x0D, 0x60, 0x50, 0x6C, 0x0B, 0x10,
@@ -27103,11 +26942,11 @@ u8 array_mp_8821c_fw_nic[] = {
 0x04, 0x10, 0x02, 0x5A, 0x0A, 0x6C, 0x03, 0x60,
 0x14, 0x6C, 0x84, 0xEA, 0x6C, 0xEC, 0x80, 0x18,
 0x05, 0x07, 0x30, 0xF0, 0x20, 0x6A, 0xEF, 0xF4,
-0x08, 0x4A, 0x00, 0x6B, 0x00, 0xF2, 0x63, 0xC2,
-0x10, 0xF0, 0x24, 0x6B, 0x7C, 0xF3, 0x6C, 0x9B,
+0x08, 0x4A, 0x00, 0x6B, 0xE0, 0xF1, 0x7F, 0xC2,
+0x10, 0xF0, 0x24, 0x6B, 0x3B, 0xF7, 0x6C, 0x9B,
 0x00, 0x6A, 0x40, 0xDB, 0x10, 0xF0, 0x24, 0x6B,
-0xBC, 0xF2, 0x70, 0x9B, 0x40, 0xDB, 0x10, 0xF0,
-0x24, 0x6B, 0x3C, 0xF4, 0x78, 0x9B, 0x40, 0xC3,
+0x9B, 0xF6, 0x6C, 0x9B, 0x40, 0xDB, 0x10, 0xF0,
+0x24, 0x6B, 0x1C, 0xF0, 0x74, 0x9B, 0x40, 0xC3,
 0x05, 0x97, 0x03, 0x63, 0x00, 0xEF, 0x00, 0x65,
 0xFB, 0x63, 0x09, 0x62, 0x08, 0xD1, 0x07, 0xD0,
 0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A,
@@ -27116,14 +26955,14 @@ u8 array_mp_8821c_fw_nic[] = {
 0x14, 0x6E, 0x40, 0xEA, 0x30, 0xF0, 0x20, 0x6A,
 0xEF, 0xF4, 0x08, 0x4A, 0x05, 0xD2, 0x05, 0x94,
 0x4E, 0xF2, 0x4C, 0x98, 0x00, 0x6D, 0xA0, 0xF6,
-0x10, 0x6E, 0x40, 0xEA, 0x10, 0xF0, 0x30, 0x69,
+0x0C, 0x6E, 0x40, 0xEA, 0x10, 0xF0, 0x30, 0x69,
 0x4E, 0xF2, 0x4C, 0x98, 0x00, 0xF0, 0x00, 0x49,
 0x91, 0x67, 0x00, 0x6D, 0xC2, 0xF0, 0x10, 0x6E,
 0x40, 0xEA, 0x80, 0x18, 0xC5, 0x05, 0x04, 0x92,
 0x00, 0x68, 0x40, 0xF0, 0x00, 0xC1, 0x80, 0xF0,
 0x0C, 0xDA, 0x80, 0x18, 0xCC, 0x05, 0x00, 0x18,
-0x65, 0xDE, 0x05, 0x92, 0x30, 0xF0, 0x20, 0x6C,
-0xED, 0xF0, 0x16, 0x4C, 0x00, 0xF2, 0x04, 0xC2,
+0x0F, 0xDE, 0x05, 0x92, 0x30, 0xF0, 0x20, 0x6C,
+0xED, 0xF0, 0x16, 0x4C, 0x00, 0xF2, 0x00, 0xC2,
 0x30, 0xF0, 0x20, 0x6A, 0xED, 0xF0, 0x06, 0x4A,
 0x00, 0x6B, 0x60, 0xC2, 0x70, 0xC2, 0x01, 0x4A,
 0x62, 0x67, 0x8E, 0xEB, 0xF9, 0x2B, 0x30, 0xF0,
@@ -27139,76 +26978,76 @@ u8 array_mp_8821c_fw_nic[] = {
 0x20, 0x6A, 0xAE, 0xF3, 0x58, 0x9A, 0x01, 0x69,
 0x2B, 0xE9, 0x40, 0xEA, 0x30, 0xF0, 0x20, 0x6A,
 0x4E, 0xF2, 0x4C, 0x9A, 0x30, 0xF0, 0x20, 0x6C,
-0x1C, 0x6E, 0xAF, 0xF5, 0x1C, 0x4C, 0x00, 0x6D,
-0x40, 0xEA, 0xC0, 0xF0, 0x7D, 0xA0, 0x08, 0x6A,
+0x1C, 0x6E, 0xAF, 0xF5, 0x18, 0x4C, 0x00, 0x6D,
+0x40, 0xEA, 0xC0, 0xF0, 0x79, 0xA0, 0x08, 0x6A,
 0x4B, 0xEA, 0xB1, 0x67, 0x41, 0xF4, 0x18, 0x6C,
-0x6C, 0xEA, 0xC0, 0xF0, 0x5D, 0xC0, 0x00, 0x18,
-0x42, 0xE7, 0x30, 0xF0, 0x20, 0x6B, 0x89, 0xF2,
-0x58, 0xDB, 0x1E, 0x6A, 0xE0, 0xF0, 0x48, 0xC0,
-0x04, 0x6A, 0xE0, 0xF0, 0x4A, 0xC0, 0x80, 0x18,
+0x6C, 0xEA, 0xC0, 0xF0, 0x59, 0xC0, 0x00, 0x18,
+0xE4, 0xE6, 0x30, 0xF0, 0x20, 0x6B, 0x89, 0xF2,
+0x58, 0xDB, 0x1E, 0x6A, 0xE0, 0xF0, 0x44, 0xC0,
+0x04, 0x6A, 0xE0, 0xF0, 0x46, 0xC0, 0x80, 0x18,
 0x83, 0x05, 0x80, 0x18, 0x71, 0x05, 0x00, 0x18,
-0xA3, 0xC4, 0x00, 0x18, 0xEC, 0xEF, 0x30, 0xF0,
+0xA3, 0xC4, 0x00, 0x18, 0x8E, 0xEF, 0x30, 0xF0,
 0x20, 0x6A, 0xCE, 0xF5, 0x44, 0x9A, 0x40, 0xEA,
-0x80, 0x18, 0x16, 0x07, 0x00, 0x18, 0xAB, 0xDE,
-0x00, 0x18, 0x95, 0xE9, 0x10, 0xF0, 0x24, 0x6C,
-0xF1, 0x67, 0xF4, 0xF4, 0x05, 0x4C, 0x00, 0x6D,
+0x80, 0x18, 0x16, 0x07, 0x00, 0x18, 0x55, 0xDE,
+0x00, 0x18, 0x37, 0xE9, 0x10, 0xF0, 0x24, 0x6C,
+0xF1, 0x67, 0x74, 0xF3, 0x0D, 0x4C, 0x00, 0x6D,
 0x64, 0x6E, 0x01, 0x6A, 0x04, 0xD2, 0x00, 0x18,
-0xFC, 0xE9, 0x80, 0x18, 0xF6, 0x05, 0x00, 0x18,
-0xB8, 0xE9, 0x80, 0x18, 0x72, 0x08, 0x09, 0x97,
+0x9E, 0xE9, 0x80, 0x18, 0xF6, 0x05, 0x00, 0x18,
+0x5A, 0xE9, 0x80, 0x18, 0x72, 0x08, 0x09, 0x97,
 0x08, 0x91, 0x07, 0x90, 0x05, 0x63, 0x00, 0xEF,
 0x30, 0xF0, 0x20, 0x6A, 0x00, 0x6B, 0xEF, 0xF4,
-0x08, 0x4A, 0xA0, 0xF0, 0x6C, 0xC2, 0xA0, 0xF0,
-0x6D, 0xC2, 0x10, 0xF0, 0x30, 0x6A, 0x00, 0xF0,
+0x08, 0x4A, 0xA0, 0xF0, 0x6A, 0xC2, 0xA0, 0xF0,
+0x6B, 0xC2, 0x10, 0xF0, 0x30, 0x6A, 0x00, 0xF0,
 0x00, 0x4A, 0x40, 0xF0, 0x60, 0xC2, 0x40, 0xF0,
 0x61, 0xC2, 0x20, 0xE8, 0x10, 0xF0, 0x24, 0x6A,
-0x9C, 0xF7, 0x58, 0x9A, 0x01, 0x6B, 0x60, 0xC2,
+0x7C, 0xF3, 0x54, 0x9A, 0x01, 0x6B, 0x60, 0xC2,
 0x20, 0xE8, 0x00, 0x65, 0x10, 0xF0, 0x24, 0x6A,
-0x9C, 0xF7, 0x9C, 0x9A, 0xFF, 0x6B, 0x20, 0x6D,
+0x7C, 0xF3, 0x98, 0x9A, 0xFF, 0x6B, 0x20, 0x6D,
 0x40, 0xA4, 0x6C, 0xEA, 0xAD, 0xEA, 0x6C, 0xEA,
-0x40, 0xC4, 0x10, 0xF0, 0x24, 0x6A, 0x9C, 0xF7,
-0x8C, 0x9A, 0x08, 0x6D, 0x40, 0xA4, 0x6C, 0xEA,
+0x40, 0xC4, 0x10, 0xF0, 0x24, 0x6A, 0x7C, 0xF3,
+0x88, 0x9A, 0x08, 0x6D, 0x40, 0xA4, 0x6C, 0xEA,
 0xAD, 0xEA, 0x6C, 0xEA, 0x40, 0xC4, 0x20, 0xE8,
-0x10, 0xF0, 0x24, 0x6A, 0xBC, 0xF7, 0x60, 0x9A,
+0x10, 0xF0, 0x24, 0x6A, 0x7C, 0xF3, 0x7C, 0x9A,
 0xFD, 0x6A, 0xFF, 0x6C, 0xA0, 0xA3, 0xAC, 0xEA,
 0x40, 0xC3, 0x40, 0xA3, 0x01, 0x6D, 0x8C, 0xEA,
 0xAD, 0xEA, 0x8C, 0xEA, 0x40, 0xC3, 0x20, 0xE8,
 0xFD, 0x63, 0x05, 0x62, 0x04, 0xD0, 0x10, 0xF0,
-0x24, 0x6A, 0x9C, 0xF5, 0x10, 0x9A, 0x30, 0xF0,
+0x24, 0x6A, 0x7C, 0xF1, 0x0C, 0x9A, 0x30, 0xF0,
 0x20, 0x6A, 0x4E, 0xF2, 0x4C, 0x9A, 0x90, 0x67,
 0x00, 0x6D, 0x02, 0xF0, 0x00, 0x6E, 0x40, 0xEA,
 0x04, 0x6A, 0x40, 0xC0, 0x10, 0xF0, 0x24, 0x6A,
-0xBC, 0xF7, 0x44, 0x9A, 0x20, 0x48, 0x0E, 0xEA,
+0x9C, 0xF3, 0x40, 0x9A, 0x20, 0x48, 0x0E, 0xEA,
 0xF7, 0x2A, 0x10, 0xF0, 0x24, 0x6B, 0x30, 0xF0,
-0x20, 0x6A, 0x9C, 0xF5, 0x98, 0x9B, 0x4E, 0xF2,
+0x20, 0x6A, 0x7C, 0xF1, 0x94, 0x9B, 0x4E, 0xF2,
 0x4C, 0x9A, 0x00, 0x6D, 0x00, 0xF4, 0x00, 0x6E,
 0x40, 0xEA, 0x05, 0x97, 0x04, 0x90, 0x03, 0x63,
 0x00, 0xEF, 0x00, 0x65, 0x10, 0xF0, 0x24, 0x6A,
-0xFC, 0xF7, 0xB0, 0x9A, 0x30, 0xF0, 0x20, 0x6B,
+0xDC, 0xF3, 0xAC, 0x9A, 0x30, 0xF0, 0x20, 0x6B,
 0xE0, 0xF3, 0x12, 0x6E, 0xC0, 0xF1, 0xC8, 0xDB,
 0x01, 0xF7, 0x01, 0x6A, 0xC0, 0xF1, 0x08, 0x4B,
 0x00, 0x6C, 0x42, 0xDB, 0x43, 0xDB, 0xA1, 0xDB,
-0x84, 0xDB, 0x10, 0xF0, 0x24, 0x6B, 0xBC, 0xF7,
-0x7C, 0x9B, 0xC0, 0xDB, 0x10, 0xF0, 0x24, 0x6B,
-0xDC, 0xF7, 0x64, 0x9B, 0xA0, 0xDB, 0x10, 0xF0,
-0x24, 0x6B, 0xDC, 0xF7, 0x6C, 0x9B, 0x40, 0xDB,
-0x10, 0xF0, 0x24, 0x6B, 0xDC, 0xF7, 0x74, 0x9B,
-0x40, 0xDB, 0x10, 0xF0, 0x24, 0x6A, 0xDC, 0xF7,
-0x5C, 0x9A, 0x80, 0xDA, 0x20, 0xE8, 0x00, 0x65,
+0x84, 0xDB, 0x10, 0xF0, 0x24, 0x6B, 0x9C, 0xF3,
+0x78, 0x9B, 0xC0, 0xDB, 0x10, 0xF0, 0x24, 0x6B,
+0xBC, 0xF3, 0x60, 0x9B, 0xA0, 0xDB, 0x10, 0xF0,
+0x24, 0x6B, 0xBC, 0xF3, 0x68, 0x9B, 0x40, 0xDB,
+0x10, 0xF0, 0x24, 0x6B, 0xBC, 0xF3, 0x70, 0x9B,
+0x40, 0xDB, 0x10, 0xF0, 0x24, 0x6A, 0xBC, 0xF3,
+0x58, 0x9A, 0x80, 0xDA, 0x20, 0xE8, 0x00, 0x65,
 0x80, 0x6A, 0x30, 0xF0, 0x20, 0x6B, 0xE0, 0xF1,
-0x58, 0xDB, 0x10, 0xF0, 0x24, 0x6B, 0xBC, 0xF7,
-0x6C, 0x9B, 0x40, 0xDB, 0x20, 0xE8, 0x00, 0x65,
-0x10, 0xF0, 0x24, 0x6B, 0xFC, 0xF7, 0x94, 0x9B,
+0x58, 0xDB, 0x10, 0xF0, 0x24, 0x6B, 0x9C, 0xF3,
+0x68, 0x9B, 0x40, 0xDB, 0x20, 0xE8, 0x00, 0x65,
+0x10, 0xF0, 0x24, 0x6B, 0xDC, 0xF3, 0x90, 0x9B,
 0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A,
 0xC0, 0xF1, 0x06, 0x6D, 0xFF, 0x6B, 0xAE, 0xDA,
 0x8F, 0xDA, 0x70, 0xDA, 0x10, 0xF0, 0x24, 0x6A,
-0xFC, 0xF7, 0x40, 0x9A, 0xA0, 0xDA, 0x10, 0xF0,
-0x24, 0x6A, 0xFC, 0xF7, 0x44, 0x9A, 0x80, 0xDA,
-0x10, 0xF0, 0x24, 0x6A, 0xFC, 0xF7, 0x4C, 0x9A,
+0xBC, 0xF3, 0x5C, 0x9A, 0xA0, 0xDA, 0x10, 0xF0,
+0x24, 0x6A, 0xDC, 0xF3, 0x40, 0x9A, 0x80, 0xDA,
+0x10, 0xF0, 0x24, 0x6A, 0xDC, 0xF3, 0x48, 0x9A,
 0x60, 0xDA, 0x20, 0xE8, 0x20, 0xE8, 0x00, 0x65,
 0xFD, 0x63, 0x05, 0x62, 0x80, 0x18, 0x05, 0x08,
 0x30, 0xF0, 0x20, 0x6B, 0xE8, 0xF2, 0x5C, 0xC3,
-0x80, 0x18, 0x96, 0x06, 0x00, 0x18, 0xFC, 0xEC,
-0x10, 0xF0, 0x24, 0x6A, 0x1D, 0xF0, 0x40, 0x9A,
+0x80, 0x18, 0x96, 0x06, 0x00, 0x18, 0x9E, 0xEC,
+0x10, 0xF0, 0x24, 0x6A, 0xDC, 0xF3, 0x5C, 0x9A,
 0x3F, 0x6B, 0x60, 0xC2, 0x80, 0x18, 0x87, 0x06,
 0x80, 0x18, 0x8B, 0x06, 0x80, 0x18, 0x0B, 0x07,
 0x80, 0x18, 0x9E, 0x06, 0x05, 0x97, 0x03, 0x63,
@@ -27216,15 +27055,15 @@ u8 array_mp_8821c_fw_nic[] = {
 0x04, 0xD0, 0x30, 0xF0, 0x20, 0x68, 0x00, 0x6A,
 0xC0, 0xF1, 0x08, 0x48, 0x01, 0x6C, 0x02, 0x6D,
 0x00, 0x6E, 0x40, 0xF0, 0x50, 0xC8, 0x00, 0x18,
-0x5D, 0xD3, 0x40, 0xF0, 0xD0, 0xA8, 0x01, 0x6C,
-0x03, 0x6D, 0xC2, 0x36, 0x00, 0x18, 0x5D, 0xD3,
+0x4B, 0xD3, 0x40, 0xF0, 0xD0, 0xA8, 0x01, 0x6C,
+0x03, 0x6D, 0xC2, 0x36, 0x00, 0x18, 0x4B, 0xD3,
 0x05, 0x97, 0x04, 0x90, 0x03, 0x63, 0x00, 0xEF,
-0xFD, 0x63, 0x05, 0x62, 0x00, 0x18, 0xB7, 0xE1,
-0x00, 0x18, 0xD6, 0xE1, 0x80, 0x18, 0xB3, 0x06,
+0xFD, 0x63, 0x05, 0x62, 0x00, 0x18, 0x61, 0xE1,
+0x00, 0x18, 0x80, 0xE1, 0x80, 0x18, 0xB3, 0x06,
 0x80, 0x18, 0xD0, 0x06, 0x80, 0x18, 0xCA, 0x06,
 0x80, 0x18, 0xEF, 0x06, 0x05, 0x97, 0x03, 0x63,
 0x00, 0xEF, 0x00, 0x65, 0xFD, 0x63, 0x05, 0x62,
-0x00, 0x18, 0xC0, 0xD4, 0x30, 0xF0, 0x20, 0x6A,
+0x00, 0x18, 0xAE, 0xD4, 0x30, 0xF0, 0x20, 0x6A,
 0xCE, 0xF4, 0x54, 0x9A, 0x40, 0xEA, 0x05, 0x97,
 0x03, 0x63, 0x00, 0xEF, 0x30, 0xF0, 0x20, 0x6A,
 0xC0, 0xF1, 0x08, 0x4A, 0x81, 0xF4, 0x10, 0x6B,
@@ -27233,65 +27072,65 @@ u8 array_mp_8821c_fw_nic[] = {
 0x48, 0xF1, 0x60, 0xDA, 0x00, 0xF2, 0x00, 0x4B,
 0x48, 0xF1, 0x64, 0xDA, 0x20, 0xE8, 0x00, 0x65,
 0x20, 0xE8, 0x00, 0x65, 0x10, 0xF0, 0x24, 0x6A,
-0xDD, 0xF0, 0x4C, 0x9A, 0xE0, 0xF1, 0x1B, 0x6B,
+0xBC, 0xF4, 0x44, 0x9A, 0xE0, 0xF1, 0x1B, 0x6B,
 0x6B, 0xEB, 0x60, 0xCA, 0x10, 0xF0, 0x24, 0x6A,
-0x3C, 0xF4, 0x64, 0x9A, 0xFB, 0x6A, 0x80, 0xA3,
+0x1C, 0xF0, 0x60, 0x9A, 0xFB, 0x6A, 0x80, 0xA3,
 0x8C, 0xEA, 0x40, 0xC3, 0x20, 0xE8, 0x00, 0x65,
-0x10, 0xF0, 0x23, 0x6A, 0x2A, 0xF4, 0x19, 0x4A,
+0x10, 0xF0, 0x23, 0x6A, 0xEA, 0xF3, 0x11, 0x4A,
 0x30, 0xF0, 0x20, 0x6B, 0x4E, 0xF2, 0x4C, 0xDB,
-0x10, 0xF0, 0x23, 0x6A, 0x4A, 0xF4, 0x0D, 0x4A,
+0x10, 0xF0, 0x23, 0x6A, 0x0A, 0xF4, 0x05, 0x4A,
 0x30, 0xF0, 0x20, 0x6B, 0x4E, 0xF2, 0x50, 0xDB,
-0x10, 0xF0, 0x24, 0x6A, 0xF0, 0xF5, 0x0D, 0x4A,
+0x10, 0xF0, 0x24, 0x6A, 0x90, 0xF4, 0x15, 0x4A,
 0x30, 0xF0, 0x20, 0x6B, 0x4E, 0xF2, 0x54, 0xDB,
 0x10, 0xF0, 0x30, 0x6A, 0x43, 0xF4, 0x1D, 0x4A,
 0x30, 0xF0, 0x20, 0x6B, 0x4E, 0xF2, 0x58, 0xDB,
-0x10, 0xF0, 0x24, 0x6A, 0x36, 0xF3, 0x19, 0x4A,
+0x10, 0xF0, 0x24, 0x6A, 0xD6, 0xF1, 0x01, 0x4A,
 0x30, 0xF0, 0x20, 0x6B, 0x6E, 0xF2, 0x50, 0xDB,
 0x10, 0xF0, 0x31, 0x6A, 0x52, 0xF4, 0x05, 0x4A,
 0x30, 0xF0, 0x20, 0x6B, 0x6E, 0xF2, 0x54, 0xDB,
-0x10, 0xF0, 0x24, 0x6A, 0x96, 0xF2, 0x19, 0x4A,
+0x10, 0xF0, 0x24, 0x6A, 0x36, 0xF1, 0x01, 0x4A,
 0x30, 0xF0, 0x20, 0x6B, 0x4E, 0xF2, 0x5C, 0xDB,
-0x10, 0xF0, 0x24, 0x6A, 0xD4, 0xF2, 0x1D, 0x4A,
+0x10, 0xF0, 0x24, 0x6A, 0x74, 0xF1, 0x05, 0x4A,
 0x30, 0xF0, 0x20, 0x6B, 0x6E, 0xF2, 0x58, 0xDB,
-0x10, 0xF0, 0x24, 0x6A, 0x94, 0xF3, 0x11, 0x4A,
+0x10, 0xF0, 0x24, 0x6A, 0x14, 0xF2, 0x19, 0x4A,
 0x30, 0xF0, 0x20, 0x6B, 0x6E, 0xF2, 0x5C, 0xDB,
-0x10, 0xF0, 0x23, 0x6A, 0xAC, 0xF6, 0x05, 0x4A,
+0x10, 0xF0, 0x23, 0x6A, 0x6C, 0xF5, 0x01, 0x4A,
 0x30, 0xF0, 0x20, 0x6B, 0x8E, 0xF2, 0x5C, 0xDB,
-0x10, 0xF0, 0x23, 0x6A, 0x29, 0xF6, 0x11, 0x4A,
+0x10, 0xF0, 0x23, 0x6A, 0xE9, 0xF5, 0x09, 0x4A,
 0x30, 0xF0, 0x20, 0x6B, 0xAE, 0xF2, 0x40, 0xDB,
-0x10, 0xF0, 0x23, 0x6A, 0xC9, 0xF5, 0x19, 0x4A,
+0x10, 0xF0, 0x23, 0x6A, 0x89, 0xF5, 0x11, 0x4A,
 0x30, 0xF0, 0x20, 0x6B, 0xAE, 0xF2, 0x44, 0xDB,
-0x10, 0xF0, 0x24, 0x6A, 0xB3, 0xF4, 0x01, 0x4A,
+0x10, 0xF0, 0x24, 0x6A, 0x33, 0xF3, 0x09, 0x4A,
 0x30, 0xF0, 0x20, 0x6B, 0xAE, 0xF2, 0x48, 0xDB,
-0x10, 0xF0, 0x24, 0x6A, 0x50, 0xF2, 0x01, 0x4A,
+0x10, 0xF0, 0x24, 0x6A, 0xF0, 0xF0, 0x09, 0x4A,
 0x30, 0xF0, 0x20, 0x6B, 0xAE, 0xF2, 0x4C, 0xDB,
-0x10, 0xF0, 0x24, 0x6A, 0x90, 0xF2, 0x09, 0x4A,
+0x10, 0xF0, 0x24, 0x6A, 0x30, 0xF1, 0x11, 0x4A,
 0x30, 0xF0, 0x20, 0x6B, 0xAE, 0xF2, 0x50, 0xDB,
-0x10, 0xF0, 0x24, 0x6A, 0x76, 0xF0, 0x01, 0x4A,
+0x10, 0xF0, 0x24, 0x6A, 0xF5, 0xF6, 0x09, 0x4A,
 0x30, 0xF0, 0x20, 0x6B, 0xAE, 0xF2, 0x54, 0xDB,
 0x10, 0xF0, 0x30, 0x6A, 0xC6, 0xF6, 0x1D, 0x4A,
 0x30, 0xF0, 0x20, 0x6B, 0xEE, 0xF4, 0x48, 0xDB,
-0x10, 0xF0, 0x24, 0x6A, 0x17, 0xF7, 0x1D, 0x4A,
+0x10, 0xF0, 0x24, 0x6A, 0xB7, 0xF5, 0x05, 0x4A,
 0x30, 0xF0, 0x20, 0x6B, 0xCE, 0xF5, 0x4C, 0xDB,
-0x10, 0xF0, 0x24, 0x6A, 0x97, 0xF6, 0x05, 0x4A,
+0x10, 0xF0, 0x24, 0x6A, 0x17, 0xF5, 0x0D, 0x4A,
 0x30, 0xF0, 0x20, 0x6B, 0xEE, 0xF5, 0x44, 0xDB,
-0x10, 0xF0, 0x24, 0x6A, 0x96, 0xF6, 0x15, 0x4A,
+0x10, 0xF0, 0x24, 0x6A, 0x16, 0xF5, 0x1D, 0x4A,
 0x30, 0xF0, 0x20, 0x6B, 0xEE, 0xF4, 0x50, 0xDB,
-0x10, 0xF0, 0x24, 0x6A, 0x16, 0xF7, 0x09, 0x4A,
+0x10, 0xF0, 0x24, 0x6A, 0x96, 0xF5, 0x11, 0x4A,
 0x30, 0xF0, 0x20, 0x6B, 0xEE, 0xF4, 0x54, 0xDB,
-0x10, 0xF0, 0x23, 0x6A, 0xAC, 0xF1, 0x19, 0x4A,
+0x10, 0xF0, 0x23, 0x6A, 0x0C, 0xF1, 0x15, 0x4A,
 0x30, 0xF0, 0x20, 0x6B, 0xAE, 0xF2, 0x58, 0xDB,
-0x10, 0xF0, 0x23, 0x6A, 0xAC, 0xF3, 0x1D, 0x4A,
+0x10, 0xF0, 0x23, 0x6A, 0x0C, 0xF3, 0x19, 0x4A,
 0x30, 0xF0, 0x20, 0x6B, 0xAE, 0xF2, 0x5C, 0xDB,
-0x10, 0xF0, 0x24, 0x6A, 0x53, 0xF7, 0x11, 0x4A,
+0x10, 0xF0, 0x24, 0x6A, 0xD3, 0xF5, 0x19, 0x4A,
 0x30, 0xF0, 0x20, 0x6B, 0xCE, 0xF2, 0x40, 0xDB,
-0x10, 0xF0, 0x23, 0x6A, 0x03, 0xF6, 0x05, 0x4A,
+0x10, 0xF0, 0x23, 0x6A, 0x03, 0xF6, 0x01, 0x4A,
 0x30, 0xF0, 0x20, 0x6B, 0xCE, 0xF2, 0x44, 0xDB,
-0x10, 0xF0, 0x24, 0x6A, 0xB7, 0xF1, 0x19, 0x4A,
+0x10, 0xF0, 0x24, 0x6A, 0x57, 0xF0, 0x01, 0x4A,
 0x30, 0xF0, 0x20, 0x6B, 0xAE, 0xF3, 0x48, 0xDB,
 0x10, 0xF0, 0x30, 0x6A, 0x87, 0xF1, 0x09, 0x4A,
 0x30, 0xF0, 0x20, 0x6B, 0x6E, 0xF3, 0x50, 0xDB,
-0x10, 0xF0, 0x24, 0x6A, 0x97, 0xF4, 0x19, 0x4A,
+0x10, 0xF0, 0x24, 0x6A, 0x37, 0xF3, 0x01, 0x4A,
 0x30, 0xF0, 0x20, 0x6B, 0x6E, 0xF3, 0x5C, 0xDB,
 0x10, 0xF0, 0x30, 0x6A, 0x47, 0xF5, 0x19, 0x4A,
 0x30, 0xF0, 0x20, 0x6B, 0x8E, 0xF3, 0x50, 0xDB,
@@ -27303,31 +27142,31 @@ u8 array_mp_8821c_fw_nic[] = {
 0x30, 0xF0, 0x20, 0x6B, 0x8E, 0xF3, 0x5C, 0xDB,
 0x10, 0xF0, 0x30, 0x6A, 0x07, 0xF2, 0x15, 0x4A,
 0x30, 0xF0, 0x20, 0x6B, 0x8E, 0xF3, 0x40, 0xDB,
-0x10, 0xF0, 0x24, 0x6A, 0x56, 0xF7, 0x11, 0x4A,
+0x10, 0xF0, 0x24, 0x6A, 0xD6, 0xF5, 0x19, 0x4A,
 0x30, 0xF0, 0x20, 0x6B, 0xCE, 0xF3, 0x44, 0xDB,
 0x10, 0xF0, 0x30, 0x6A, 0xA7, 0xF2, 0x01, 0x4A,
 0x30, 0xF0, 0x20, 0x6B, 0xAE, 0xF3, 0x44, 0xDB,
-0x10, 0xF0, 0x24, 0x6A, 0x3A, 0xF7, 0x0D, 0x4A,
+0x10, 0xF0, 0x24, 0x6A, 0xBA, 0xF5, 0x15, 0x4A,
 0x30, 0xF0, 0x20, 0x6B, 0xEE, 0xF3, 0x54, 0xDB,
-0x10, 0xF0, 0x23, 0x6A, 0xA6, 0xF5, 0x19, 0x4A,
+0x10, 0xF0, 0x23, 0x6A, 0x46, 0xF6, 0x19, 0x4A,
 0x30, 0xF0, 0x20, 0x6B, 0x2E, 0xF4, 0x48, 0xDB,
-0x10, 0xF0, 0x23, 0x6A, 0x49, 0xF0, 0x0D, 0x4A,
+0x10, 0xF0, 0x23, 0x6A, 0x09, 0xF0, 0x05, 0x4A,
 0x30, 0xF0, 0x20, 0x6B, 0x2E, 0xF4, 0x4C, 0xDB,
-0x10, 0xF0, 0x23, 0x6A, 0x69, 0xF3, 0x11, 0x4A,
+0x10, 0xF0, 0x23, 0x6A, 0x29, 0xF3, 0x09, 0x4A,
 0x30, 0xF0, 0x20, 0x6B, 0x2E, 0xF4, 0x50, 0xDB,
-0x10, 0xF0, 0x23, 0x6A, 0xC9, 0xF0, 0x09, 0x4A,
+0x10, 0xF0, 0x23, 0x6A, 0x89, 0xF0, 0x01, 0x4A,
 0x30, 0xF0, 0x20, 0x6B, 0x2E, 0xF4, 0x54, 0xDB,
-0x10, 0xF0, 0x23, 0x6A, 0x09, 0xF2, 0x05, 0x4A,
+0x10, 0xF0, 0x23, 0x6A, 0xA9, 0xF1, 0x1D, 0x4A,
 0x30, 0xF0, 0x20, 0x6B, 0x2E, 0xF4, 0x58, 0xDB,
-0x10, 0xF0, 0x24, 0x6A, 0x53, 0xF5, 0x05, 0x4A,
+0x10, 0xF0, 0x24, 0x6A, 0xD3, 0xF3, 0x0D, 0x4A,
 0x30, 0xF0, 0x20, 0x6B, 0xCE, 0xF4, 0x50, 0xDB,
-0x10, 0xF0, 0x23, 0x6A, 0xCA, 0xF3, 0x19, 0x4A,
+0x10, 0xF0, 0x23, 0x6A, 0x8A, 0xF3, 0x11, 0x4A,
 0x30, 0xF0, 0x20, 0x6B, 0xCE, 0xF4, 0x54, 0xDB,
-0x10, 0xF0, 0x23, 0x6A, 0x0A, 0xF4, 0x05, 0x4A,
+0x10, 0xF0, 0x23, 0x6A, 0xAA, 0xF3, 0x1D, 0x4A,
 0x30, 0xF0, 0x20, 0x6B, 0xCE, 0xF4, 0x5C, 0xDB,
-0x10, 0xF0, 0x23, 0x6A, 0xEA, 0xF3, 0x05, 0x4A,
+0x10, 0xF0, 0x23, 0x6A, 0x8A, 0xF3, 0x1D, 0x4A,
 0x30, 0xF0, 0x20, 0x6B, 0xCE, 0xF4, 0x58, 0xDB,
-0x10, 0xF0, 0x24, 0x6A, 0xF1, 0xF3, 0x11, 0x4A,
+0x10, 0xF0, 0x24, 0x6A, 0x91, 0xF2, 0x19, 0x4A,
 0x30, 0xF0, 0x20, 0x6B, 0xEE, 0xF4, 0x40, 0xDB,
 0x10, 0xF0, 0x30, 0x6A, 0x05, 0xF6, 0x19, 0x4A,
 0x30, 0xF0, 0x20, 0x6B, 0x0E, 0xF6, 0x44, 0xDB,
@@ -27352,7 +27191,7 @@ u8 array_mp_8821c_fw_nic[] = {
 0x10, 0xF0, 0x30, 0x6A, 0x26, 0xF4, 0x11, 0x4A,
 0x30, 0xF0, 0x20, 0x6B, 0x2E, 0xF6, 0x40, 0xDB,
 0x20, 0xE8, 0x00, 0x65, 0x10, 0xF0, 0x24, 0x6A,
-0x9D, 0xF1, 0x50, 0x9A, 0x60, 0x9A, 0x03, 0x6A,
+0x7C, 0xF5, 0x48, 0x9A, 0x60, 0x9A, 0x03, 0x6A,
 0x62, 0x33, 0x72, 0x33, 0x4C, 0xEB, 0x02, 0x6A,
 0x04, 0x23, 0x01, 0x73, 0x01, 0x6A, 0x01, 0x60,
 0x03, 0x6A, 0x20, 0xE8, 0xFD, 0x63, 0x05, 0x62,
@@ -27360,26 +27199,26 @@ u8 array_mp_8821c_fw_nic[] = {
 0x21, 0x5A, 0x04, 0x60, 0x08, 0x22, 0x10, 0x72,
 0x16, 0x60, 0x56, 0x10, 0x30, 0x72, 0x33, 0x60,
 0x40, 0x72, 0x41, 0x60, 0x51, 0x10, 0x10, 0xF0,
-0x24, 0x6A, 0x3C, 0xF4, 0x60, 0x9A, 0x10, 0xF0,
-0x24, 0x6C, 0x1C, 0xF3, 0x8C, 0x9C, 0x40, 0x9B,
+0x24, 0x6A, 0xFB, 0xF7, 0x7C, 0x9A, 0x10, 0xF0,
+0x24, 0x6C, 0xFB, 0xF6, 0x88, 0x9C, 0x40, 0x9B,
 0x8D, 0xEA, 0x40, 0xDB, 0x30, 0xF0, 0x20, 0x6A,
-0xCF, 0xF6, 0x9C, 0xA2, 0x3F, 0x10, 0x10, 0xF0,
-0x24, 0x6A, 0x3C, 0xF4, 0x60, 0x9A, 0x10, 0xF0,
-0x24, 0x6C, 0x1C, 0xF3, 0x98, 0x9C, 0x40, 0x9B,
+0xCF, 0xF6, 0x98, 0xA2, 0x3F, 0x10, 0x10, 0xF0,
+0x24, 0x6A, 0xFB, 0xF7, 0x7C, 0x9A, 0x10, 0xF0,
+0x24, 0x6C, 0xFB, 0xF6, 0x94, 0x9C, 0x40, 0x9B,
 0x8D, 0xEA, 0x40, 0xDB, 0x30, 0xF0, 0x20, 0x6A,
-0xCF, 0xF6, 0x9D, 0xA2, 0x2F, 0x10, 0x10, 0xF0,
-0x24, 0x6A, 0x3C, 0xF4, 0x60, 0x9A, 0x10, 0xF0,
-0x24, 0x6C, 0x1C, 0xF3, 0x8C, 0x9C, 0x40, 0x9B,
+0xCF, 0xF6, 0x99, 0xA2, 0x2F, 0x10, 0x10, 0xF0,
+0x24, 0x6A, 0xFB, 0xF7, 0x7C, 0x9A, 0x10, 0xF0,
+0x24, 0x6C, 0xFB, 0xF6, 0x88, 0x9C, 0x40, 0x9B,
 0x8D, 0xEA, 0x40, 0xDB, 0x30, 0xF0, 0x20, 0x6A,
-0xCF, 0xF6, 0x9E, 0xA2, 0x1F, 0x10, 0x10, 0xF0,
-0x24, 0x6A, 0x3C, 0xF4, 0x60, 0x9A, 0x10, 0xF0,
-0x24, 0x6C, 0x1C, 0xF3, 0x98, 0x9C, 0x40, 0x9B,
+0xCF, 0xF6, 0x9A, 0xA2, 0x1F, 0x10, 0x10, 0xF0,
+0x24, 0x6A, 0xFB, 0xF7, 0x7C, 0x9A, 0x10, 0xF0,
+0x24, 0x6C, 0xFB, 0xF6, 0x94, 0x9C, 0x40, 0x9B,
 0x8D, 0xEA, 0x40, 0xDB, 0x30, 0xF0, 0x20, 0x6A,
-0xCF, 0xF6, 0x9F, 0xA2, 0x0F, 0x10, 0x10, 0xF0,
-0x24, 0x6A, 0x3C, 0xF4, 0x60, 0x9A, 0x10, 0xF0,
-0x24, 0x6C, 0x1C, 0xF3, 0x8C, 0x9C, 0x40, 0x9B,
+0xCF, 0xF6, 0x9B, 0xA2, 0x0F, 0x10, 0x10, 0xF0,
+0x24, 0x6A, 0xFB, 0xF7, 0x7C, 0x9A, 0x10, 0xF0,
+0x24, 0x6C, 0xFB, 0xF6, 0x88, 0x9C, 0x40, 0x9B,
 0x8D, 0xEA, 0x40, 0xDB, 0x30, 0xF0, 0x20, 0x6A,
-0xEF, 0xF6, 0x80, 0xA2, 0x00, 0x18, 0x74, 0xC5,
+0xCF, 0xF6, 0x9C, 0xA2, 0x00, 0x18, 0x74, 0xC5,
 0x05, 0x97, 0x03, 0x63, 0x00, 0xEF, 0x00, 0x65,
 0xE0, 0x63, 0x3F, 0x62, 0xFF, 0x6A, 0x01, 0x6B,
 0x8C, 0xEA, 0x6B, 0xEB, 0x9D, 0x67, 0x70, 0xC4,
@@ -27397,58 +27236,58 @@ u8 array_mp_8821c_fw_nic[] = {
 0x21, 0x5C, 0x04, 0x60, 0x08, 0x24, 0x10, 0x74,
 0x0C, 0x60, 0x27, 0x10, 0x30, 0x74, 0x15, 0x60,
 0x40, 0x74, 0x19, 0x60, 0x22, 0x10, 0x30, 0xF0,
-0x20, 0x6B, 0xEF, 0xF6, 0xA1, 0xA3, 0x02, 0x6B,
-0x17, 0x10, 0x30, 0xF0, 0x20, 0x6B, 0xEF, 0xF6,
-0xA1, 0xA3, 0x04, 0x6B, 0x11, 0x10, 0x30, 0xF0,
-0x20, 0x6B, 0xEF, 0xF6, 0xA1, 0xA3, 0x08, 0x6B,
-0x0B, 0x10, 0x30, 0xF0, 0x20, 0x6B, 0xEF, 0xF6,
-0xA1, 0xA3, 0x10, 0x6B, 0x05, 0x10, 0x30, 0xF0,
-0x20, 0x6B, 0xEF, 0xF6, 0xA1, 0xA3, 0x20, 0x6B,
+0x20, 0x6B, 0xCF, 0xF6, 0xBD, 0xA3, 0x02, 0x6B,
+0x17, 0x10, 0x30, 0xF0, 0x20, 0x6B, 0xCF, 0xF6,
+0xBD, 0xA3, 0x04, 0x6B, 0x11, 0x10, 0x30, 0xF0,
+0x20, 0x6B, 0xCF, 0xF6, 0xBD, 0xA3, 0x08, 0x6B,
+0x0B, 0x10, 0x30, 0xF0, 0x20, 0x6B, 0xCF, 0xF6,
+0xBD, 0xA3, 0x10, 0x6B, 0x05, 0x10, 0x30, 0xF0,
+0x20, 0x6B, 0xCF, 0xF6, 0xBD, 0xA3, 0x20, 0x6B,
 0xAC, 0xEB, 0x4C, 0xEB, 0x02, 0x23, 0x80, 0x18,
 0x40, 0x08, 0x05, 0x97, 0x03, 0x63, 0x00, 0xEF,
 0xFC, 0x63, 0x07, 0x62, 0x06, 0xD1, 0x05, 0xD0,
 0x30, 0xF0, 0x20, 0x69, 0x4E, 0xF2, 0x4C, 0x99,
-0x30, 0xF0, 0x20, 0x68, 0xEF, 0xF6, 0x01, 0x48,
+0x30, 0xF0, 0x20, 0x68, 0xCF, 0xF6, 0x1D, 0x48,
 0x90, 0x67, 0x00, 0x6D, 0x01, 0x6E, 0x40, 0xEA,
 0x4E, 0xF2, 0x4C, 0x99, 0x81, 0x40, 0x00, 0x6D,
 0x02, 0x6E, 0x40, 0xEA, 0x07, 0x97, 0x06, 0x91,
 0x05, 0x90, 0x04, 0x63, 0x00, 0xEF, 0x00, 0x65,
 0xFD, 0x63, 0x05, 0x62, 0x30, 0xF0, 0x20, 0x6A,
 0x4E, 0xF2, 0x50, 0x9A, 0xA4, 0x67, 0x30, 0xF0,
-0x20, 0x6C, 0xEF, 0xF6, 0x01, 0x4C, 0x01, 0x6E,
+0x20, 0x6C, 0xCF, 0xF6, 0x1D, 0x4C, 0x01, 0x6E,
 0x40, 0xEA, 0x30, 0xF0, 0x20, 0x6A, 0xEF, 0xF4,
-0x08, 0x4A, 0xE0, 0xF1, 0x99, 0xA2, 0x01, 0x6B,
+0x08, 0x4A, 0xE0, 0xF1, 0x95, 0xA2, 0x01, 0x6B,
 0x8C, 0xEB, 0x39, 0x23, 0x30, 0xF0, 0x21, 0x6B,
-0xB0, 0xF3, 0x61, 0xA3, 0x0A, 0x2B, 0x10, 0xF0,
-0x24, 0x6B, 0x1C, 0xF4, 0x68, 0x9B, 0x80, 0xAB,
+0x90, 0xF3, 0x7D, 0xA3, 0x0A, 0x2B, 0x10, 0xF0,
+0x24, 0x6B, 0xFB, 0xF7, 0x64, 0x9B, 0x80, 0xAB,
 0xE1, 0xF7, 0x1F, 0x6B, 0x8C, 0xEB, 0xE0, 0xF1,
-0x7A, 0xCA, 0x30, 0xF0, 0x21, 0x6A, 0xB0, 0xF3,
-0x61, 0xA2, 0x00, 0x6C, 0x01, 0x4B, 0xB0, 0xF3,
-0x61, 0xC2, 0x00, 0x18, 0x72, 0xEC, 0x10, 0x6C,
-0x00, 0x18, 0x72, 0xEC, 0x20, 0x6C, 0x00, 0x18,
-0x72, 0xEC, 0x30, 0x6C, 0x00, 0x18, 0x72, 0xEC,
-0x00, 0x6C, 0x00, 0x18, 0x79, 0xEC, 0x10, 0x6C,
-0x00, 0x18, 0x79, 0xEC, 0x20, 0x6C, 0x00, 0x18,
-0x79, 0xEC, 0x30, 0x6C, 0x00, 0x18, 0x79, 0xEC,
-0x10, 0xF0, 0x24, 0x6A, 0x3C, 0xF4, 0x64, 0x9A,
-0x10, 0xF0, 0x24, 0x6C, 0x3C, 0xF4, 0x88, 0x9C,
+0x76, 0xCA, 0x30, 0xF0, 0x21, 0x6A, 0x90, 0xF3,
+0x7D, 0xA2, 0x00, 0x6C, 0x01, 0x4B, 0x90, 0xF3,
+0x7D, 0xC2, 0x00, 0x18, 0x14, 0xEC, 0x10, 0x6C,
+0x00, 0x18, 0x14, 0xEC, 0x20, 0x6C, 0x00, 0x18,
+0x14, 0xEC, 0x30, 0x6C, 0x00, 0x18, 0x14, 0xEC,
+0x00, 0x6C, 0x00, 0x18, 0x1B, 0xEC, 0x10, 0x6C,
+0x00, 0x18, 0x1B, 0xEC, 0x20, 0x6C, 0x00, 0x18,
+0x1B, 0xEC, 0x30, 0x6C, 0x00, 0x18, 0x1B, 0xEC,
+0x10, 0xF0, 0x24, 0x6A, 0x1C, 0xF0, 0x60, 0x9A,
+0x10, 0xF0, 0x24, 0x6C, 0x1C, 0xF0, 0x84, 0x9C,
 0x40, 0x9B, 0x8C, 0xEA, 0x42, 0x10, 0xE0, 0xF1,
-0x5C, 0xA2, 0x0A, 0x2A, 0x10, 0x6C, 0x00, 0x18,
-0x98, 0xEC, 0x20, 0x6C, 0x00, 0x18, 0x98, 0xEC,
-0x30, 0x6C, 0x00, 0x18, 0x98, 0xEC, 0x0F, 0x10,
-0x00, 0x6C, 0x00, 0x18, 0x98, 0xEC, 0x10, 0x6C,
-0x00, 0x18, 0x98, 0xEC, 0x20, 0x6C, 0x00, 0x18,
-0x98, 0xEC, 0x30, 0x6C, 0x00, 0x18, 0x98, 0xEC,
-0x00, 0x6C, 0x00, 0x18, 0x9F, 0xEC, 0x10, 0x6C,
-0x00, 0x18, 0x9F, 0xEC, 0x20, 0x6C, 0x00, 0x18,
-0x9F, 0xEC, 0x30, 0x6C, 0x00, 0x18, 0x9F, 0xEC,
-0x00, 0x6B, 0x30, 0xF0, 0x21, 0x6A, 0xB0, 0xF3,
-0x61, 0xC2, 0x30, 0xF0, 0x20, 0x6A, 0x10, 0xF0,
-0x24, 0x6B, 0xEF, 0xF6, 0x42, 0xAA, 0x1C, 0xF4,
-0x68, 0x9B, 0x10, 0xF0, 0x24, 0x6C, 0x3C, 0xF4,
-0x8C, 0x9C, 0x40, 0xCB, 0x10, 0xF0, 0x24, 0x6B,
-0x1C, 0xF4, 0x7C, 0x9B, 0x40, 0xCB, 0x10, 0xF0,
-0x24, 0x6A, 0x3C, 0xF4, 0x64, 0x9A, 0x40, 0x9B,
+0x58, 0xA2, 0x0A, 0x2A, 0x10, 0x6C, 0x00, 0x18,
+0x3A, 0xEC, 0x20, 0x6C, 0x00, 0x18, 0x3A, 0xEC,
+0x30, 0x6C, 0x00, 0x18, 0x3A, 0xEC, 0x0F, 0x10,
+0x00, 0x6C, 0x00, 0x18, 0x3A, 0xEC, 0x10, 0x6C,
+0x00, 0x18, 0x3A, 0xEC, 0x20, 0x6C, 0x00, 0x18,
+0x3A, 0xEC, 0x30, 0x6C, 0x00, 0x18, 0x3A, 0xEC,
+0x00, 0x6C, 0x00, 0x18, 0x41, 0xEC, 0x10, 0x6C,
+0x00, 0x18, 0x41, 0xEC, 0x20, 0x6C, 0x00, 0x18,
+0x41, 0xEC, 0x30, 0x6C, 0x00, 0x18, 0x41, 0xEC,
+0x00, 0x6B, 0x30, 0xF0, 0x21, 0x6A, 0x90, 0xF3,
+0x7D, 0xC2, 0x30, 0xF0, 0x20, 0x6A, 0x10, 0xF0,
+0x24, 0x6B, 0xCF, 0xF6, 0x5E, 0xAA, 0xFB, 0xF7,
+0x64, 0x9B, 0x10, 0xF0, 0x24, 0x6C, 0x1C, 0xF0,
+0x88, 0x9C, 0x40, 0xCB, 0x10, 0xF0, 0x24, 0x6B,
+0xFB, 0xF7, 0x78, 0x9B, 0x40, 0xCB, 0x10, 0xF0,
+0x24, 0x6A, 0x1C, 0xF0, 0x60, 0x9A, 0x40, 0x9B,
 0x8D, 0xEA, 0x40, 0xDB, 0x05, 0x97, 0x03, 0x63,
 0x00, 0xEF, 0x00, 0x65, 0x15, 0xF0, 0xFF, 0x0F,
 0x00, 0x00, 0x00, 0x00, 0x15, 0xF0, 0x0F, 0x00,
@@ -27466,8 +27305,8 @@ u8 array_mp_8821c_fw_nic[] = {
 0x00, 0x00, 0x00, 0x00, 0x00, 0xF0, 0xFF, 0xFF,
 0xFF, 0x03, 0x00, 0x00, 0x15, 0xF0, 0xFF, 0xFF,
 0x0F, 0x00, 0x00, 0x00, 0xFA, 0x63, 0x0B, 0xD1,
-0x0A, 0xD0, 0x10, 0xF0, 0x24, 0x6A, 0x1C, 0xF4,
-0x48, 0x9A, 0xE1, 0xF7, 0x1F, 0x6B, 0x10, 0xF0,
+0x0A, 0xD0, 0x10, 0xF0, 0x24, 0x6A, 0xFB, 0xF7,
+0x44, 0x9A, 0xE1, 0xF7, 0x1F, 0x6B, 0x10, 0xF0,
 0x30, 0x6D, 0x40, 0xAA, 0x00, 0xF0, 0x00, 0x4D,
 0x0F, 0x68, 0x4C, 0xEB, 0x02, 0xD3, 0x60, 0xA4,
 0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A,
@@ -27481,11 +27320,11 @@ u8 array_mp_8821c_fw_nic[] = {
 0xCD, 0xEA, 0x4C, 0xE8, 0xC1, 0xF7, 0x4E, 0xC5,
 0x00, 0x6E, 0x03, 0xD0, 0x6F, 0x10, 0xCD, 0xE4,
 0xA4, 0xA3, 0x02, 0x91, 0x10, 0xF0, 0x24, 0x6B,
-0x1C, 0xF4, 0x64, 0x9B, 0x35, 0xE5, 0xA0, 0xCB,
+0xFB, 0xF7, 0x60, 0x9B, 0x35, 0xE5, 0xA0, 0xCB,
 0xBC, 0x35, 0x10, 0x2A, 0x10, 0xF0, 0x24, 0x6B,
-0xFC, 0xF6, 0x60, 0x9B, 0x6D, 0xE5, 0x60, 0xA3,
+0xBC, 0xF2, 0x7C, 0x9B, 0x6D, 0xE5, 0x60, 0xA3,
 0x01, 0x4D, 0x60, 0xC7, 0x10, 0xF0, 0x24, 0x6B,
-0xFC, 0xF6, 0x60, 0x9B, 0x08, 0xD2, 0x75, 0xE5,
+0xBC, 0xF2, 0x7C, 0x9B, 0x08, 0xD2, 0x75, 0xE5,
 0x00, 0x6B, 0x46, 0x10, 0x01, 0x72, 0xF6, 0x61,
 0x40, 0x4D, 0xF4, 0x17, 0x40, 0xA5, 0x08, 0x91,
 0x10, 0xF0, 0x30, 0x68, 0x1A, 0x65, 0x0C, 0x6A,
@@ -27610,8 +27449,8 @@ u8 array_mp_8821c_fw_nic[] = {
 0x08, 0xF3, 0x32, 0xA2, 0x19, 0x65, 0x38, 0x67,
 0x2C, 0xEB, 0x3F, 0x67, 0x2D, 0xEB, 0x08, 0xF3,
 0x72, 0xC2, 0x04, 0xA0, 0x61, 0x6B, 0x6B, 0xEB,
-0x8C, 0xEB, 0x10, 0xF0, 0x24, 0x6C, 0x3C, 0xF3,
-0x98, 0x9C, 0x1A, 0x30, 0x14, 0x30, 0x0D, 0xEB,
+0x8C, 0xEB, 0x10, 0xF0, 0x24, 0x6C, 0x1B, 0xF7,
+0x94, 0x9C, 0x1A, 0x30, 0x14, 0x30, 0x0D, 0xEB,
 0x02, 0x68, 0x00, 0xC4, 0x68, 0xF3, 0x90, 0xA2,
 0xAC, 0xEC, 0xCC, 0xEC, 0x0A, 0x24, 0xEC, 0xEB,
 0x08, 0xF3, 0x91, 0xA2, 0x08, 0xF3, 0x70, 0xC2,
@@ -27628,19 +27467,19 @@ u8 array_mp_8821c_fw_nic[] = {
 0x4F, 0xC0, 0x30, 0xF0, 0x20, 0x6A, 0xEE, 0xF5,
 0x50, 0x9A, 0x03, 0x6C, 0x0F, 0x69, 0x40, 0xEA,
 0xC1, 0xF7, 0x92, 0xA0, 0x2C, 0xEC, 0x00, 0x18,
-0x72, 0xEC, 0xC1, 0xF7, 0x92, 0xA0, 0x2C, 0xEC,
-0x00, 0x18, 0x40, 0xEC, 0xC1, 0xF7, 0x94, 0xA0,
-0x2C, 0xEC, 0x00, 0x18, 0x40, 0xEC, 0x30, 0xF0,
+0x14, 0xEC, 0xC1, 0xF7, 0x92, 0xA0, 0x2C, 0xEC,
+0x00, 0x18, 0xE2, 0xEB, 0xC1, 0xF7, 0x94, 0xA0,
+0x2C, 0xEC, 0x00, 0x18, 0xE2, 0xEB, 0x30, 0xF0,
 0x20, 0x6A, 0x2E, 0xF6, 0x80, 0x9A, 0x00, 0x18,
-0xE9, 0xE9, 0x30, 0xF0, 0x20, 0x6A, 0x0E, 0xF6,
-0x9C, 0x9A, 0x00, 0x18, 0xE9, 0xE9, 0x30, 0xF0,
+0x8B, 0xE9, 0x30, 0xF0, 0x20, 0x6A, 0x0E, 0xF6,
+0x9C, 0x9A, 0x00, 0x18, 0x8B, 0xE9, 0x30, 0xF0,
 0x20, 0x6A, 0x0E, 0xF6, 0x98, 0x9A, 0x00, 0x18,
-0xE9, 0xE9, 0x10, 0xF0, 0x30, 0x6C, 0xE6, 0xF1,
-0x11, 0x4C, 0x00, 0x18, 0xE9, 0xE9, 0x09, 0x97,
+0x8B, 0xE9, 0x10, 0xF0, 0x30, 0x6C, 0xE6, 0xF1,
+0x11, 0x4C, 0x00, 0x18, 0x8B, 0xE9, 0x09, 0x97,
 0x08, 0x91, 0x07, 0x90, 0x05, 0x63, 0x00, 0xEF,
 0xFB, 0x63, 0x09, 0x62, 0x08, 0xD1, 0x07, 0xD0,
-0x10, 0xF0, 0x24, 0x6A, 0xFF, 0x68, 0x5C, 0xF3,
-0x4C, 0x9A, 0x0C, 0xEC, 0x04, 0xD4, 0x40, 0xA2,
+0x10, 0xF0, 0x24, 0x6A, 0xFF, 0x68, 0x3B, 0xF7,
+0x5C, 0x9A, 0x0C, 0xEC, 0x04, 0xD4, 0x40, 0xA2,
 0x30, 0xF0, 0x20, 0x69, 0x90, 0x67, 0x62, 0x67,
 0x6E, 0xF2, 0x58, 0x99, 0x0C, 0xEB, 0x05, 0xD3,
 0xB0, 0x67, 0x17, 0x6E, 0x40, 0xEA, 0x30, 0xF0,
@@ -27791,7 +27630,7 @@ u8 array_mp_8821c_fw_nic[] = {
 0x0F, 0x6A, 0x6C, 0xEA, 0x42, 0xEC, 0x02, 0x60,
 0x00, 0x69, 0xE6, 0x17, 0x62, 0xA0, 0x02, 0x6A,
 0x6C, 0xEA, 0x06, 0x22, 0x80, 0x18, 0x1A, 0x13,
-0x00, 0x6C, 0xA4, 0x67, 0x00, 0x18, 0xC0, 0xD5,
+0x00, 0x6C, 0xA4, 0x67, 0x00, 0x18, 0xAE, 0xD5,
 0x7D, 0x67, 0x10, 0x6A, 0x50, 0xC3, 0x07, 0x6A,
 0x4F, 0xCB, 0x40, 0xA0, 0x9D, 0x67, 0x52, 0xC3,
 0x42, 0xA0, 0x01, 0x6B, 0x46, 0x32, 0x6C, 0xEA,
@@ -27801,7 +27640,7 @@ u8 array_mp_8821c_fw_nic[] = {
 0x73, 0xC4, 0x04, 0x04, 0x40, 0xEA, 0x0D, 0x97,
 0x0C, 0x91, 0x0B, 0x90, 0x07, 0x63, 0x00, 0xEF,
 0xFD, 0x63, 0x05, 0x62, 0x80, 0x18, 0x1A, 0x13,
-0x00, 0x6C, 0xA4, 0x67, 0x00, 0x18, 0xC0, 0xD5,
+0x00, 0x6C, 0xA4, 0x67, 0x00, 0x18, 0xAE, 0xD5,
 0x05, 0x97, 0x03, 0x63, 0x00, 0xEF, 0x00, 0x65,
 0xFC, 0x63, 0x07, 0x62, 0x30, 0xF0, 0x20, 0x6B,
 0xC0, 0xF1, 0x08, 0x4B, 0x68, 0xF3, 0x90, 0xA3,
@@ -27813,7 +27652,7 @@ u8 array_mp_8821c_fw_nic[] = {
 0x8C, 0xEA, 0xCC, 0xEA, 0x0A, 0x2A, 0x30, 0xF0,
 0x20, 0x6B, 0x2E, 0xF6, 0x80, 0x9B, 0x00, 0x6D,
 0x14, 0x6E, 0x01, 0x6F, 0x04, 0xD2, 0x00, 0x18,
-0xFC, 0xE9, 0x07, 0x97, 0x04, 0x63, 0x00, 0xEF,
+0x9E, 0xE9, 0x07, 0x97, 0x04, 0x63, 0x00, 0xEF,
 0xFD, 0x63, 0x05, 0x62, 0x10, 0xF0, 0x30, 0x6B,
 0x00, 0xF0, 0x00, 0x4B, 0xC1, 0xF7, 0xCF, 0xA3,
 0x01, 0x6F, 0xFF, 0x6A, 0xEC, 0xEE, 0x4C, 0xEE,
@@ -27893,11 +27732,11 @@ u8 array_mp_8821c_fw_nic[] = {
 0x30, 0xF0, 0x20, 0x6A, 0x2E, 0xF4, 0x50, 0x9A,
 0x00, 0x6D, 0xC3, 0x67, 0x38, 0x10, 0x02, 0x6B,
 0x6E, 0xEA, 0x37, 0x2A, 0x30, 0xF0, 0x20, 0x6B,
-0xEF, 0xF4, 0x08, 0x4B, 0xA0, 0xF6, 0xC0, 0x9B,
-0x80, 0xF6, 0x7C, 0x9B, 0x10, 0xF0, 0x30, 0x6C,
+0xEF, 0xF4, 0x08, 0x4B, 0x80, 0xF6, 0xDC, 0x9B,
+0x80, 0xF6, 0x78, 0x9B, 0x10, 0xF0, 0x30, 0x6C,
 0xE5, 0xF1, 0x11, 0x4C, 0x7B, 0xE6, 0xC2, 0x36,
 0x00, 0x6D, 0xCE, 0x36, 0x01, 0x6F, 0x04, 0xD2,
-0x00, 0x18, 0xFC, 0xE9, 0x22, 0x10, 0x07, 0x6A,
+0x00, 0x18, 0x9E, 0xE9, 0x22, 0x10, 0x07, 0x6A,
 0xAC, 0xEA, 0x6C, 0xEA, 0x02, 0x22, 0x02, 0x72,
 0x1C, 0x61, 0x1E, 0x6C, 0x98, 0xE8, 0x30, 0xF0,
 0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A, 0xE0, 0xF7,
@@ -27917,11 +27756,11 @@ u8 array_mp_8821c_fw_nic[] = {
 0x58, 0xC3, 0x30, 0xF0, 0x20, 0x6A, 0xEE, 0xF5,
 0x50, 0x9A, 0xFF, 0xF7, 0x1F, 0x6E, 0x8C, 0xEE,
 0x00, 0x6B, 0x82, 0x67, 0x06, 0x05, 0x01, 0x6F,
-0x04, 0xD3, 0x00, 0x18, 0xFC, 0xE9, 0x09, 0x97,
+0x04, 0xD3, 0x00, 0x18, 0x9E, 0xE9, 0x09, 0x97,
 0x05, 0x63, 0x00, 0xEF, 0xFC, 0x63, 0x07, 0x62,
 0x30, 0xF0, 0x20, 0x6A, 0xFF, 0x6E, 0x8C, 0xEE,
 0x0E, 0xF6, 0x98, 0x9A, 0x00, 0x6A, 0xA2, 0x67,
-0x01, 0x6F, 0x04, 0xD2, 0x00, 0x18, 0xFC, 0xE9,
+0x01, 0x6F, 0x04, 0xD2, 0x00, 0x18, 0x9E, 0xE9,
 0x07, 0x97, 0x04, 0x63, 0x00, 0xEF, 0x00, 0x65,
 0xFC, 0x63, 0x07, 0x62, 0x06, 0xD1, 0x05, 0xD0,
 0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A,
@@ -27960,7 +27799,7 @@ u8 array_mp_8821c_fw_nic[] = {
 0x30, 0xF0, 0x20, 0x6A, 0x0E, 0xF6, 0x94, 0x9A,
 0x0F, 0x6A, 0x4C, 0xEE, 0xFF, 0x6A, 0x00, 0x6D,
 0x4C, 0xEE, 0x01, 0x6F, 0x04, 0xD0, 0x00, 0x18,
-0xFC, 0xE9, 0x24, 0x10, 0x1E, 0x6B, 0x78, 0xED,
+0x9E, 0xE9, 0x24, 0x10, 0x1E, 0x6B, 0x78, 0xED,
 0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A,
 0x01, 0x6C, 0x12, 0xEB, 0x4D, 0xE3, 0x08, 0xF3,
 0x79, 0xA3, 0x6E, 0x33, 0x8C, 0xEB, 0x13, 0x2B,
@@ -27987,7 +27826,7 @@ u8 array_mp_8821c_fw_nic[] = {
 0x8B, 0xEC, 0xCC, 0xEC, 0x82, 0xC3, 0xFF, 0xF7,
 0x1F, 0x6E, 0x10, 0xF0, 0x30, 0x6C, 0xE6, 0xF1,
 0x11, 0x4C, 0x4C, 0xEE, 0x01, 0x6F, 0x04, 0xD5,
-0x00, 0x18, 0xFC, 0xE9, 0x19, 0x10, 0x02, 0x6D,
+0x00, 0x18, 0x9E, 0xE9, 0x19, 0x10, 0x02, 0x6D,
 0x08, 0xF3, 0xB4, 0xC4, 0x05, 0x10, 0x02, 0x6D,
 0x30, 0xF0, 0x20, 0x6C, 0xC8, 0xF4, 0xBC, 0xC4,
 0x10, 0xF0, 0x30, 0x6C, 0xE0, 0xF7, 0x08, 0x4B,
@@ -27996,7 +27835,7 @@ u8 array_mp_8821c_fw_nic[] = {
 0xFF, 0x6B, 0x6C, 0xEC, 0x80, 0x18, 0x73, 0x0C,
 0x07, 0x97, 0x04, 0x63, 0x00, 0xEF, 0x00, 0x65,
 0xFB, 0x63, 0x09, 0x62, 0x08, 0xD1, 0x07, 0xD0,
-0x10, 0xF0, 0x24, 0x6A, 0x5C, 0xF3, 0x4C, 0x9A,
+0x10, 0xF0, 0x24, 0x6A, 0x3B, 0xF7, 0x5C, 0x9A,
 0x30, 0xF0, 0x20, 0x6C, 0xFF, 0x6B, 0x40, 0xA2,
 0x10, 0xF0, 0x30, 0x68, 0x00, 0xF0, 0x00, 0x48,
 0x4C, 0xEB, 0x6E, 0xF2, 0x58, 0x9C, 0x50, 0x6E,
@@ -28005,30 +27844,30 @@ u8 array_mp_8821c_fw_nic[] = {
 0x52, 0x32, 0xE0, 0xF7, 0x08, 0x4A, 0x44, 0x32,
 0x09, 0xE2, 0x82, 0xA2, 0x0F, 0x6A, 0x30, 0xF0,
 0x20, 0x69, 0x4C, 0xEC, 0x6C, 0xEC, 0x00, 0x18,
-0x7A, 0xC8, 0xC1, 0xF7, 0x48, 0xA0, 0x0F, 0x6C,
+0x79, 0xC8, 0xC1, 0xF7, 0x48, 0xA0, 0x0F, 0x6C,
 0xFF, 0x6B, 0x8C, 0xEA, 0xE0, 0xF7, 0x08, 0x4A,
 0x44, 0x32, 0x09, 0xE2, 0x82, 0xA2, 0x0F, 0x6A,
 0x01, 0x6D, 0x4C, 0xEC, 0x6C, 0xEC, 0x00, 0x18,
-0xA3, 0xC8, 0x04, 0xD2, 0xC1, 0xF7, 0x48, 0xA0,
+0xA2, 0xC8, 0x04, 0xD2, 0xC1, 0xF7, 0x48, 0xA0,
 0x0F, 0x6C, 0xFF, 0x6B, 0x8C, 0xEA, 0xE0, 0xF7,
 0x08, 0x4A, 0x44, 0x32, 0x09, 0xE2, 0x82, 0xA2,
 0x0F, 0x6A, 0xC0, 0xF1, 0x08, 0x49, 0x4C, 0xEC,
-0x6C, 0xEC, 0x00, 0x6D, 0x00, 0x18, 0xA3, 0xC8,
+0x6C, 0xEC, 0x00, 0x6D, 0x00, 0x18, 0xA2, 0xC8,
 0x68, 0xF3, 0x70, 0xA1, 0x04, 0x94, 0x10, 0xF0,
 0x24, 0x6E, 0x66, 0x33, 0x60, 0x33, 0x68, 0x33,
 0x6D, 0xE2, 0x43, 0xEB, 0x58, 0x67, 0x51, 0xE4,
-0x04, 0xD4, 0x10, 0xF0, 0x24, 0x6A, 0xFC, 0xF2,
-0xA8, 0x9A, 0xC1, 0xF7, 0x48, 0xA0, 0xFD, 0xF0,
-0xD8, 0x9E, 0x80, 0x9D, 0x52, 0x32, 0xE0, 0xF7,
+0x04, 0xD4, 0x10, 0xF0, 0x24, 0x6A, 0xDB, 0xF6,
+0xA4, 0x9A, 0xC1, 0xF7, 0x48, 0xA0, 0xDC, 0xF4,
+0xD0, 0x9E, 0x80, 0x9D, 0x52, 0x32, 0xE0, 0xF7,
 0x08, 0x4A, 0x44, 0x32, 0x01, 0xE2, 0x42, 0xA0,
 0x00, 0xF7, 0x40, 0x32, 0xCC, 0xEA, 0x10, 0xF0,
-0x24, 0x6E, 0x1C, 0xF3, 0xC0, 0x9E, 0xCC, 0xEC,
+0x24, 0x6E, 0xDB, 0xF6, 0xDC, 0x9E, 0xCC, 0xEC,
 0x8D, 0xEA, 0x40, 0xDD, 0x10, 0xF0, 0x24, 0x6A,
-0x04, 0x94, 0x1C, 0xF7, 0x5C, 0x9A, 0x01, 0x6D,
-0x80, 0xDA, 0x10, 0xF0, 0x24, 0x6A, 0x1C, 0xF3,
-0x48, 0x9A, 0x60, 0xDA, 0x82, 0xA0, 0x0F, 0x6A,
+0x04, 0x94, 0xFC, 0xF2, 0x58, 0x9A, 0x01, 0x6D,
+0x80, 0xDA, 0x10, 0xF0, 0x24, 0x6A, 0xFB, 0xF6,
+0x44, 0x9A, 0x60, 0xDA, 0x82, 0xA0, 0x0F, 0x6A,
 0xFF, 0x6B, 0x4C, 0xEC, 0x6C, 0xEC, 0x00, 0x18,
-0x7A, 0xC8, 0x30, 0xF0, 0x20, 0x6C, 0x6E, 0xF2,
+0x79, 0xC8, 0x30, 0xF0, 0x20, 0x6C, 0x6E, 0xF2,
 0x58, 0x9C, 0x05, 0x95, 0x50, 0x6E, 0x00, 0x6C,
 0x40, 0xEA, 0x30, 0xF0, 0x20, 0x6A, 0xEE, 0xF5,
 0x50, 0x9A, 0x08, 0x6C, 0x40, 0xEA, 0x08, 0xF3,
@@ -28049,8 +27888,8 @@ u8 array_mp_8821c_fw_nic[] = {
 0xC8, 0xF4, 0x3A, 0xA2, 0x32, 0x31, 0x06, 0x10,
 0x10, 0xF0, 0x30, 0x6A, 0xC1, 0xF7, 0x52, 0xA2,
 0x0F, 0x69, 0x4C, 0xE9, 0x91, 0x67, 0x00, 0x6D,
-0x00, 0x18, 0xA3, 0xC8, 0x91, 0x67, 0x01, 0x6D,
-0x08, 0xD2, 0x00, 0x18, 0xA3, 0xC8, 0x9D, 0x67,
+0x00, 0x18, 0xA2, 0xC8, 0x91, 0x67, 0x01, 0x6D,
+0x08, 0xD2, 0x00, 0x18, 0xA2, 0xC8, 0x9D, 0x67,
 0x17, 0x6B, 0x70, 0xC4, 0x0A, 0x6B, 0x6F, 0xCC,
 0x12, 0xC4, 0x30, 0xF0, 0x20, 0x6B, 0xC8, 0xF4,
 0x78, 0xA3, 0x0F, 0x6C, 0x66, 0x33, 0x8C, 0xEB,
@@ -28076,26 +27915,26 @@ u8 array_mp_8821c_fw_nic[] = {
 0x08, 0xF3, 0xDE, 0xA5, 0xCC, 0xEB, 0x4C, 0xEB,
 0x13, 0x23, 0xFF, 0xF6, 0x1F, 0x4A, 0xCC, 0xEA,
 0x08, 0xF3, 0x5E, 0xC5, 0x01, 0x6D, 0x00, 0x18,
-0xEC, 0xE1, 0x0A, 0x22, 0x30, 0xF0, 0x20, 0x6A,
+0x96, 0xE1, 0x0A, 0x22, 0x30, 0xF0, 0x20, 0x6A,
 0xEE, 0xF5, 0x48, 0x9A, 0x02, 0x6C, 0xB0, 0x67,
 0x40, 0xEA, 0x02, 0x6A, 0x08, 0xF3, 0x54, 0xC1,
 0x07, 0x97, 0x06, 0x91, 0x05, 0x90, 0x04, 0x63,
 0x00, 0xEF, 0x00, 0x65, 0x10, 0xF0, 0x24, 0x6B,
-0xFD, 0xF0, 0x7C, 0x9B, 0xFF, 0x6A, 0x8C, 0xEA,
+0xDC, 0xF4, 0x74, 0x9B, 0xFF, 0x6A, 0x8C, 0xEA,
 0x60, 0x9B, 0x80, 0xF1, 0x01, 0x6C, 0x8B, 0xEC,
-0x8C, 0xEB, 0x10, 0xF0, 0x24, 0x6C, 0x7C, 0xF4,
-0x9C, 0x9C, 0x01, 0x72, 0x80, 0x9C, 0x05, 0x60,
+0x8C, 0xEB, 0x10, 0xF0, 0x24, 0x6C, 0x5C, 0xF0,
+0x98, 0x9C, 0x01, 0x72, 0x80, 0x9C, 0x05, 0x60,
 0x02, 0x72, 0x05, 0x61, 0xFF, 0x6A, 0x01, 0x4A,
 0x01, 0x10, 0x80, 0x6A, 0x4D, 0xEB, 0x10, 0xF0,
-0x24, 0x6A, 0xFD, 0xF0, 0x5C, 0x9A, 0x60, 0xDA,
-0x10, 0xF0, 0x24, 0x6A, 0x1D, 0xF1, 0x40, 0x9A,
-0x10, 0xF0, 0x24, 0x6B, 0x7C, 0xF4, 0x7C, 0x9B,
+0x24, 0x6A, 0xDC, 0xF4, 0x54, 0x9A, 0x60, 0xDA,
+0x10, 0xF0, 0x24, 0x6A, 0xDC, 0xF4, 0x58, 0x9A,
+0x10, 0xF0, 0x24, 0x6B, 0x5C, 0xF0, 0x78, 0x9B,
 0x8C, 0xEA, 0x40, 0xDB, 0x10, 0xF0, 0x24, 0x6B,
-0x1D, 0xF1, 0x64, 0x9B, 0x50, 0x6A, 0x40, 0xC3,
-0x10, 0xF0, 0x24, 0x6B, 0x1D, 0xF1, 0x68, 0x9B,
+0xDC, 0xF4, 0x7C, 0x9B, 0x50, 0x6A, 0x40, 0xC3,
+0x10, 0xF0, 0x24, 0x6B, 0xFC, 0xF4, 0x60, 0x9B,
 0x40, 0xC3, 0x20, 0xE8, 0x30, 0xF0, 0x20, 0x6A,
-0xEF, 0xF4, 0x08, 0x4A, 0xE0, 0xF0, 0x6C, 0xA2,
-0x01, 0x4B, 0xE0, 0xF0, 0x6C, 0xC2, 0x20, 0xE8,
+0xEF, 0xF4, 0x08, 0x4A, 0xE0, 0xF0, 0x68, 0xA2,
+0x01, 0x4B, 0xE0, 0xF0, 0x68, 0xC2, 0x20, 0xE8,
 0xFD, 0x63, 0x05, 0x62, 0x30, 0xF0, 0x20, 0x6A,
 0x69, 0xF2, 0x74, 0xA2, 0x04, 0x6A, 0x6C, 0xEA,
 0x05, 0x22, 0x30, 0xF0, 0x20, 0x6A, 0x8E, 0xF3,
@@ -28109,34 +27948,34 @@ u8 array_mp_8821c_fw_nic[] = {
 0x85, 0xA2, 0x21, 0x6B, 0x6B, 0xEB, 0x8C, 0xEB,
 0xC9, 0xF0, 0x65, 0xC2, 0x05, 0x97, 0x03, 0x63,
 0x00, 0xEF, 0x00, 0x65, 0x10, 0xF0, 0x24, 0x6A,
-0x1D, 0xF1, 0x54, 0x9A, 0x10, 0xF0, 0x24, 0x6C,
-0x1D, 0xF1, 0x9C, 0x9C, 0x60, 0xAA, 0xEF, 0xF7,
+0xFC, 0xF4, 0x4C, 0x9A, 0x10, 0xF0, 0x24, 0x6C,
+0xFC, 0xF4, 0x94, 0x9C, 0x60, 0xAA, 0xEF, 0xF7,
 0x1F, 0x6A, 0x6C, 0xEA, 0x30, 0xF0, 0x20, 0x6B,
-0xCF, 0xF5, 0x58, 0xCB, 0x10, 0xF0, 0x24, 0x6A,
-0x1D, 0xF1, 0x78, 0x9A, 0x40, 0x9B, 0x8D, 0xEA,
+0xCF, 0xF5, 0x54, 0xCB, 0x10, 0xF0, 0x24, 0x6A,
+0xFC, 0xF4, 0x70, 0x9A, 0x40, 0x9B, 0x8D, 0xEA,
 0x40, 0xDB, 0x20, 0xE8, 0xFC, 0x63, 0x07, 0x62,
 0x30, 0xF0, 0x20, 0x6A, 0xEF, 0xF4, 0x08, 0x4A,
-0xE0, 0xF0, 0x8A, 0xA2, 0x03, 0x6B, 0x8C, 0xEB,
-0x0D, 0x2B, 0xE0, 0xF0, 0x69, 0xA2, 0x01, 0x4B,
-0xE0, 0xF0, 0x69, 0xC2, 0xE0, 0xF0, 0x69, 0xA2,
-0xE0, 0xF0, 0x4A, 0xA2, 0x4A, 0x32, 0x42, 0xEB,
-0x41, 0x60, 0xB3, 0x10, 0xE0, 0xF0, 0x69, 0xA2,
-0xE0, 0xF0, 0x4A, 0xA2, 0x4A, 0x32, 0x42, 0xEB,
+0xE0, 0xF0, 0x86, 0xA2, 0x03, 0x6B, 0x8C, 0xEB,
+0x0D, 0x2B, 0xE0, 0xF0, 0x65, 0xA2, 0x01, 0x4B,
+0xE0, 0xF0, 0x65, 0xC2, 0xE0, 0xF0, 0x65, 0xA2,
+0xE0, 0xF0, 0x46, 0xA2, 0x4A, 0x32, 0x42, 0xEB,
+0x41, 0x60, 0xB3, 0x10, 0xE0, 0xF0, 0x65, 0xA2,
+0xE0, 0xF0, 0x46, 0xA2, 0x4A, 0x32, 0x42, 0xEB,
 0x0B, 0x60, 0x30, 0xF0, 0x20, 0x6A, 0xAE, 0xF3,
-0x80, 0x9A, 0x00, 0x6A, 0xA2, 0x67, 0xC2, 0x67,
-0x01, 0x6F, 0x04, 0xD2, 0x00, 0x18, 0xFC, 0xE9,
+0x80, 0x9A, 0x00, 0x6A, 0xA2, 0x67, 0x05, 0x6E,
+0x01, 0x6F, 0x04, 0xD2, 0x00, 0x18, 0x9E, 0xE9,
 0x30, 0xF0, 0x20, 0x6A, 0xEF, 0xF4, 0x08, 0x4A,
-0xE0, 0xF0, 0x69, 0xA2, 0x22, 0x23, 0xE0, 0xF0,
-0x6A, 0xA2, 0x03, 0x6A, 0x6C, 0xEA, 0x03, 0x6B,
+0xE0, 0xF0, 0x65, 0xA2, 0x22, 0x23, 0xE0, 0xF0,
+0x66, 0xA2, 0x03, 0x6A, 0x6C, 0xEA, 0x03, 0x6B,
 0x6E, 0xEA, 0x08, 0x2A, 0x30, 0xF0, 0x20, 0x6B,
 0x8E, 0xF3, 0x9C, 0x9B, 0x04, 0xD2, 0x00, 0x6D,
 0x34, 0x6E, 0x08, 0x10, 0x30, 0xF0, 0x20, 0x6A,
 0x8E, 0xF3, 0x9C, 0x9A, 0x00, 0x6A, 0x04, 0xD2,
 0xA2, 0x67, 0x66, 0x6E, 0x01, 0x6F, 0x00, 0x18,
-0xFC, 0xE9, 0x30, 0xF0, 0x20, 0x6A, 0xEF, 0xF4,
-0x08, 0x4A, 0xE0, 0xF0, 0x69, 0xA2, 0xFF, 0x4B,
-0x03, 0x10, 0xE0, 0xF0, 0x6A, 0xA2, 0x6A, 0x33,
-0xE0, 0xF0, 0x69, 0xC2, 0x30, 0xF0, 0x20, 0x6A,
+0x9E, 0xE9, 0x30, 0xF0, 0x20, 0x6A, 0xEF, 0xF4,
+0x08, 0x4A, 0xE0, 0xF0, 0x65, 0xA2, 0xFF, 0x4B,
+0x03, 0x10, 0xE0, 0xF0, 0x66, 0xA2, 0x6A, 0x33,
+0xE0, 0xF0, 0x65, 0xC2, 0x30, 0xF0, 0x20, 0x6A,
 0xC0, 0xF1, 0x08, 0x4A, 0xA9, 0xF0, 0xA8, 0xA2,
 0x01, 0x6B, 0xFF, 0x6C, 0xAC, 0xEB, 0x45, 0x23,
 0xC9, 0xF0, 0xC4, 0xA2, 0x00, 0x6B, 0xC9, 0xF0,
@@ -28145,44 +27984,44 @@ u8 array_mp_8821c_fw_nic[] = {
 0x04, 0x6E, 0xAC, 0xEE, 0x8C, 0xEE, 0xC9, 0xF0,
 0xE4, 0xC2, 0x1F, 0x26, 0x30, 0xF0, 0x20, 0x6C,
 0xEF, 0xF4, 0x08, 0x4C, 0xC9, 0xF0, 0xB9, 0xA2,
-0xC0, 0xF0, 0xDC, 0xA4, 0xC3, 0xED, 0x0A, 0x61,
-0xC0, 0xF0, 0xB8, 0x9C, 0x10, 0xF0, 0x24, 0x6C,
-0x3D, 0xF1, 0x8C, 0x9C, 0xA0, 0xDC, 0xC9, 0xF0,
+0xC0, 0xF0, 0xD8, 0xA4, 0xC3, 0xED, 0x0A, 0x61,
+0xC0, 0xF0, 0xB4, 0x9C, 0x10, 0xF0, 0x24, 0x6C,
+0x1C, 0xF5, 0x84, 0x9C, 0xA0, 0xDC, 0xC9, 0xF0,
 0x79, 0xC2, 0x19, 0x10, 0x7C, 0x4C, 0x10, 0xF0,
-0x24, 0x6B, 0x96, 0x9C, 0x3D, 0xF1, 0x6C, 0x9B,
+0x24, 0x6B, 0x95, 0x9C, 0x1C, 0xF5, 0x64, 0x9B,
 0x01, 0x4D, 0x80, 0xDB, 0xC9, 0xF0, 0xB9, 0xC2,
 0x0E, 0x10, 0xC9, 0xF0, 0x6B, 0xA2, 0x0B, 0x23,
-0x30, 0xF0, 0x20, 0x6B, 0xAF, 0xF5, 0x9C, 0x9B,
-0x10, 0xF0, 0x24, 0x6B, 0x3D, 0xF1, 0x6C, 0x9B,
+0x30, 0xF0, 0x20, 0x6B, 0xAF, 0xF5, 0x98, 0x9B,
+0x10, 0xF0, 0x24, 0x6B, 0x1C, 0xF5, 0x64, 0x9B,
 0x80, 0xDB, 0xC9, 0xF0, 0xCB, 0xC2, 0x30, 0xF0,
 0x20, 0x6A, 0x8E, 0xF3, 0x50, 0x9A, 0x40, 0xEA,
-0x24, 0x10, 0x10, 0xF0, 0x24, 0x6A, 0x1D, 0xF1,
-0x54, 0x9A, 0xEF, 0xF7, 0x1F, 0x6B, 0xA0, 0xAA,
+0x24, 0x10, 0x10, 0xF0, 0x24, 0x6A, 0xFC, 0xF4,
+0x4C, 0x9A, 0xEF, 0xF7, 0x1F, 0x6B, 0xA0, 0xAA,
 0x30, 0xF0, 0x20, 0x6A, 0xEF, 0xF4, 0x08, 0x4A,
-0xAC, 0xEB, 0xE0, 0xF0, 0x70, 0xCA, 0xE0, 0xF0,
-0x50, 0xAA, 0x10, 0x6B, 0x6C, 0xEA, 0x09, 0x22,
-0x10, 0xF0, 0x24, 0x6A, 0x7C, 0xF6, 0x7C, 0x9A,
+0xAC, 0xEB, 0xE0, 0xF0, 0x6C, 0xCA, 0xE0, 0xF0,
+0x4C, 0xAA, 0x10, 0x6B, 0x6C, 0xEA, 0x09, 0x22,
+0x10, 0xF0, 0x24, 0x6A, 0x5C, 0xF2, 0x78, 0x9A,
 0x03, 0x6D, 0x40, 0xA3, 0x8C, 0xEA, 0xAD, 0xEA,
-0x06, 0x10, 0x10, 0xF0, 0x24, 0x6A, 0x7C, 0xF6,
-0x7C, 0x9A, 0xFC, 0x6A, 0x80, 0xA3, 0x8C, 0xEA,
+0x06, 0x10, 0x10, 0xF0, 0x24, 0x6A, 0x5C, 0xF2,
+0x78, 0x9A, 0xFC, 0x6A, 0x80, 0xA3, 0x8C, 0xEA,
 0x40, 0xC3, 0x07, 0x97, 0x04, 0x63, 0x00, 0xEF,
 0xFC, 0x63, 0x07, 0x62, 0x30, 0xF0, 0x20, 0x6A,
 0xFF, 0x6E, 0x8C, 0xEE, 0xAE, 0xF3, 0x84, 0x9A,
 0x00, 0x6A, 0xA2, 0x67, 0x01, 0x6F, 0x04, 0xD2,
-0x00, 0x18, 0xFC, 0xE9, 0x07, 0x97, 0x04, 0x63,
+0x00, 0x18, 0x9E, 0xE9, 0x07, 0x97, 0x04, 0x63,
 0x00, 0xEF, 0x00, 0x65, 0xFD, 0x63, 0x05, 0x62,
 0xFF, 0x6A, 0x8C, 0xEA, 0x05, 0x5A, 0x00, 0x6B,
 0x24, 0x60, 0x10, 0xF0, 0x24, 0x6B, 0x48, 0x32,
-0x7C, 0xF2, 0x14, 0x4B, 0x4D, 0xE3, 0x40, 0x9B,
-0x00, 0xEA, 0x10, 0xF0, 0x24, 0x6A, 0x7C, 0xF3,
-0x5C, 0x9A, 0x13, 0x10, 0x10, 0xF0, 0x24, 0x6A,
-0x9C, 0xF3, 0x40, 0x9A, 0x0E, 0x10, 0x10, 0xF0,
-0x24, 0x6A, 0x9C, 0xF3, 0x44, 0x9A, 0x09, 0x10,
-0x10, 0xF0, 0x24, 0x6A, 0x9C, 0xF3, 0x48, 0x9A,
-0x04, 0x10, 0x10, 0xF0, 0x24, 0x6A, 0x9C, 0xF3,
-0x4C, 0x9A, 0x40, 0xAA, 0xFF, 0xF7, 0x1F, 0x6B,
+0x5B, 0xF6, 0x10, 0x4B, 0x4D, 0xE3, 0x40, 0x9B,
+0x00, 0xEA, 0x10, 0xF0, 0x24, 0x6A, 0x5B, 0xF7,
+0x58, 0x9A, 0x13, 0x10, 0x10, 0xF0, 0x24, 0x6A,
+0x5B, 0xF7, 0x5C, 0x9A, 0x0E, 0x10, 0x10, 0xF0,
+0x24, 0x6A, 0x7B, 0xF7, 0x40, 0x9A, 0x09, 0x10,
+0x10, 0xF0, 0x24, 0x6A, 0x7B, 0xF7, 0x44, 0x9A,
+0x04, 0x10, 0x10, 0xF0, 0x24, 0x6A, 0x7B, 0xF7,
+0x48, 0x9A, 0x40, 0xAA, 0xFF, 0xF7, 0x1F, 0x6B,
 0x4C, 0xEB, 0x08, 0xF0, 0x00, 0x6A, 0x6C, 0xEA,
-0x02, 0x22, 0x00, 0x18, 0xE2, 0xEE, 0x05, 0x97,
+0x02, 0x22, 0x00, 0x18, 0x84, 0xEE, 0x05, 0x97,
 0x03, 0x63, 0x00, 0xEF, 0xFC, 0x63, 0x07, 0x62,
 0x06, 0xD1, 0x05, 0xD0, 0x30, 0xF0, 0x20, 0x6B,
 0xC0, 0xF1, 0x08, 0x4B, 0xC9, 0xF0, 0x85, 0xA3,
@@ -28196,10 +28035,10 @@ u8 array_mp_8821c_fw_nic[] = {
 0xC9, 0xF0, 0x47, 0xC3, 0x30, 0xF0, 0x20, 0x6A,
 0x6E, 0xF3, 0x50, 0x9A, 0x30, 0xF0, 0x20, 0x68,
 0xEF, 0xF4, 0x08, 0x48, 0x03, 0x6C, 0x40, 0xEA,
-0xC0, 0xF0, 0x5D, 0xA0, 0x07, 0x6D, 0x01, 0x6C,
-0x4C, 0xED, 0x2C, 0xED, 0x00, 0x18, 0x02, 0xEF,
-0xC0, 0xF0, 0x5F, 0xA0, 0x01, 0x4A, 0xC0, 0xF0,
-0x5F, 0xC0, 0x00, 0x6A, 0x07, 0x97, 0x06, 0x91,
+0xC0, 0xF0, 0x59, 0xA0, 0x07, 0x6D, 0x01, 0x6C,
+0x4C, 0xED, 0x2C, 0xED, 0x00, 0x18, 0xA4, 0xEE,
+0xC0, 0xF0, 0x5B, 0xA0, 0x01, 0x4A, 0xC0, 0xF0,
+0x5B, 0xC0, 0x00, 0x6A, 0x07, 0x97, 0x06, 0x91,
 0x05, 0x90, 0x04, 0x63, 0x00, 0xEF, 0x00, 0x65,
 0xFB, 0x63, 0x09, 0x62, 0x08, 0xD1, 0x07, 0xD0,
 0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A,
@@ -28219,44 +28058,44 @@ u8 array_mp_8821c_fw_nic[] = {
 0x30, 0xF0, 0x20, 0x6A, 0x8E, 0xF3, 0x54, 0x9A,
 0x48, 0x10, 0x30, 0x6A, 0x0C, 0xEA, 0x20, 0x72,
 0x0B, 0x60, 0x30, 0xF0, 0x20, 0x68, 0xEF, 0xF4,
-0x08, 0x48, 0xE0, 0xF0, 0x2B, 0xA0, 0x01, 0x6B,
+0x08, 0x48, 0xE0, 0xF0, 0x27, 0xA0, 0x01, 0x6B,
 0xFF, 0x6A, 0x6C, 0xE9, 0x4C, 0xE9, 0x05, 0x21,
 0x30, 0xF0, 0x20, 0x6A, 0x8E, 0xF3, 0x58, 0x9A,
-0x34, 0x10, 0x10, 0xF0, 0x24, 0x6A, 0x5C, 0xF3,
-0xB0, 0x9A, 0x01, 0x6C, 0x00, 0x18, 0x17, 0xE1,
-0xE0, 0xF0, 0x4B, 0xA0, 0x01, 0x6B, 0x10, 0xF0,
-0x30, 0x6C, 0x6C, 0xEA, 0xE0, 0xF0, 0x4B, 0xC0,
+0x34, 0x10, 0x10, 0xF0, 0x24, 0x6A, 0x5B, 0xF7,
+0xA0, 0x9A, 0x01, 0x6C, 0x00, 0x18, 0xC1, 0xE0,
+0xE0, 0xF0, 0x47, 0xA0, 0x01, 0x6B, 0x10, 0xF0,
+0x30, 0x6C, 0x6C, 0xEA, 0xE0, 0xF0, 0x47, 0xC0,
 0xC7, 0xF3, 0x01, 0x4C, 0x00, 0x6D, 0x05, 0x6E,
-0xE3, 0x67, 0x04, 0xD1, 0x00, 0x18, 0xFC, 0xE9,
+0xE3, 0x67, 0x04, 0xD1, 0x00, 0x18, 0x9E, 0xE9,
 0x1D, 0x10, 0x30, 0xF0, 0x20, 0x6A, 0xCF, 0xF5,
-0x53, 0xA2, 0x01, 0x6B, 0x6C, 0xEA, 0x06, 0x2A,
+0x4F, 0xA2, 0x01, 0x6B, 0x6C, 0xEA, 0x06, 0x2A,
 0x10, 0xF0, 0x30, 0x6C, 0xC7, 0xF3, 0x01, 0x4C,
-0x00, 0x18, 0xE9, 0xE9, 0x30, 0xF0, 0x20, 0x6A,
+0x00, 0x18, 0x8B, 0xE9, 0x30, 0xF0, 0x20, 0x6A,
 0xC0, 0xF1, 0x08, 0x4A, 0xC9, 0xF0, 0x84, 0xA2,
 0x80, 0x6B, 0x6B, 0xEB, 0x8D, 0xEB, 0xC9, 0xF0,
 0x64, 0xC2, 0x30, 0xF0, 0x20, 0x6A, 0x8E, 0xF3,
 0x50, 0x9A, 0x40, 0xEA, 0x09, 0x97, 0x08, 0x91,
 0x07, 0x90, 0x05, 0x63, 0x00, 0xEF, 0x00, 0x65,
 0xFC, 0x63, 0x07, 0x62, 0x30, 0xF0, 0x20, 0x6A,
-0xEF, 0xF4, 0x08, 0x4A, 0xE0, 0xF0, 0x6B, 0xA2,
-0x02, 0x4B, 0xE0, 0xF0, 0x6B, 0xC2, 0xE0, 0xF0,
-0x6C, 0xA2, 0x19, 0x23, 0xE0, 0xF0, 0x6B, 0xA2,
+0xEF, 0xF4, 0x08, 0x4A, 0xE0, 0xF0, 0x67, 0xA2,
+0x02, 0x4B, 0xE0, 0xF0, 0x67, 0xC2, 0xE0, 0xF0,
+0x68, 0xA2, 0x19, 0x23, 0xE0, 0xF0, 0x67, 0xA2,
 0x66, 0x33, 0x05, 0x53, 0x14, 0x60, 0x00, 0x6B,
-0xE0, 0xF0, 0x6C, 0xC2, 0xE0, 0xF0, 0x6E, 0xA2,
+0xE0, 0xF0, 0x68, 0xC2, 0xE0, 0xF0, 0x6A, 0xA2,
 0x10, 0xF0, 0x30, 0x6C, 0xC7, 0xF3, 0x01, 0x4C,
-0x01, 0x4B, 0xE0, 0xF0, 0x6E, 0xC2, 0x00, 0x6A,
+0x01, 0x4B, 0xE0, 0xF0, 0x6A, 0xC2, 0x00, 0x6A,
 0xA2, 0x67, 0x05, 0x6E, 0x01, 0x6F, 0x04, 0xD2,
-0x00, 0x18, 0xFC, 0xE9, 0x15, 0x10, 0x10, 0xF0,
-0x24, 0x6A, 0x5C, 0xF3, 0xB0, 0x9A, 0x01, 0x6C,
-0x00, 0x18, 0x48, 0xE1, 0x30, 0xF0, 0x20, 0x6A,
-0xEF, 0xF4, 0x08, 0x4A, 0xE0, 0xF0, 0x6F, 0xA2,
-0x01, 0x4B, 0xE0, 0xF0, 0x6F, 0xC2, 0x30, 0xF0,
+0x00, 0x18, 0x9E, 0xE9, 0x15, 0x10, 0x10, 0xF0,
+0x24, 0x6A, 0x5B, 0xF7, 0xA0, 0x9A, 0x01, 0x6C,
+0x00, 0x18, 0xF2, 0xE0, 0x30, 0xF0, 0x20, 0x6A,
+0xEF, 0xF4, 0x08, 0x4A, 0xE0, 0xF0, 0x6B, 0xA2,
+0x01, 0x4B, 0xE0, 0xF0, 0x6B, 0xC2, 0x30, 0xF0,
 0x20, 0x6A, 0x8E, 0xF3, 0x58, 0x9A, 0x40, 0xEA,
 0x07, 0x97, 0x04, 0x63, 0x00, 0xEF, 0x00, 0x65,
 0xFB, 0x63, 0x09, 0x62, 0x08, 0xD0, 0x30, 0xF0,
 0x20, 0x6A, 0xEF, 0xF4, 0x08, 0x4A, 0xE0, 0xF0,
-0x6D, 0xA2, 0x01, 0x6C, 0x01, 0x4B, 0xE0, 0xF0,
-0x6D, 0xC2, 0x30, 0xF0, 0x20, 0x6A, 0x6E, 0xF3,
+0x69, 0xA2, 0x01, 0x6C, 0x01, 0x4B, 0xE0, 0xF0,
+0x69, 0xC2, 0x30, 0xF0, 0x20, 0x6A, 0x6E, 0xF3,
 0x5C, 0x9A, 0x40, 0xEA, 0x30, 0xF0, 0x20, 0x6A,
 0x6E, 0xF3, 0x4C, 0x9A, 0x01, 0x6C, 0x40, 0xEA,
 0x30, 0xF0, 0x20, 0x6A, 0x6E, 0xF3, 0x58, 0x9A,
@@ -28266,10 +28105,10 @@ u8 array_mp_8821c_fw_nic[] = {
 0x30, 0xF0, 0x20, 0x6A, 0x6E, 0xF3, 0x54, 0x9A,
 0x00, 0x6C, 0x40, 0xEA, 0x30, 0xF0, 0x20, 0x6A,
 0x69, 0xF2, 0x74, 0xA2, 0x02, 0x6A, 0x6C, 0xEA,
-0x11, 0x22, 0x10, 0xF0, 0x24, 0x6A, 0x7C, 0xF6,
-0x5C, 0x9A, 0x02, 0xF0, 0x01, 0x6C, 0x8B, 0xEC,
+0x11, 0x22, 0x10, 0xF0, 0x24, 0x6A, 0x5C, 0xF2,
+0x58, 0x9A, 0x02, 0xF0, 0x01, 0x6C, 0x8B, 0xEC,
 0x60, 0x9A, 0x8C, 0xEB, 0x60, 0xDA, 0x10, 0xF0,
-0x24, 0x6C, 0x60, 0x9A, 0x3D, 0xF1, 0x90, 0x9C,
+0x24, 0x6C, 0x60, 0x9A, 0x1C, 0xF5, 0x88, 0x9C,
 0x8C, 0xEB, 0x60, 0xDA, 0x30, 0xF0, 0x20, 0x6A,
 0xC0, 0xF1, 0x08, 0x4A, 0x00, 0x6B, 0xC9, 0xF0,
 0x69, 0xC2, 0xA9, 0xF0, 0x6A, 0xA2, 0x04, 0x6C,
@@ -28277,13 +28116,13 @@ u8 array_mp_8821c_fw_nic[] = {
 0x6C, 0xEC, 0x17, 0x24, 0xC9, 0xF0, 0x85, 0xA2,
 0x20, 0x6B, 0x01, 0x6F, 0x8D, 0xEB, 0xC9, 0xF0,
 0x65, 0xC2, 0x30, 0xF0, 0x20, 0x6A, 0xCF, 0xF5,
-0xCF, 0xA2, 0x00, 0x6A, 0x04, 0xD2, 0xC6, 0x36,
+0xCB, 0xA2, 0x00, 0x6A, 0x04, 0xD2, 0xC6, 0x36,
 0x10, 0xF0, 0x30, 0x6C, 0xA2, 0x67, 0xFF, 0x6A,
 0x66, 0xF7, 0x1D, 0x4C, 0x4C, 0xEE, 0x00, 0x18,
-0xFC, 0xE9, 0x30, 0xF0, 0x20, 0x68, 0xEF, 0xF4,
-0x08, 0x48, 0xC0, 0xF0, 0x5D, 0xA0, 0x07, 0x6C,
-0x00, 0x6D, 0x4C, 0xEC, 0x00, 0x18, 0xA3, 0xC8,
-0xE0, 0xF0, 0x40, 0xD8, 0xE0, 0xF0, 0x4B, 0xA0,
+0x9E, 0xE9, 0x30, 0xF0, 0x20, 0x68, 0xEF, 0xF4,
+0x08, 0x48, 0xC0, 0xF0, 0x59, 0xA0, 0x07, 0x6C,
+0x00, 0x6D, 0x4C, 0xEC, 0x00, 0x18, 0xA2, 0xC8,
+0xC0, 0xF0, 0x5C, 0xD8, 0xE0, 0xF0, 0x47, 0xA0,
 0x7D, 0x67, 0x42, 0x6C, 0x46, 0x32, 0x58, 0xC3,
 0x30, 0xF0, 0x20, 0x6A, 0xCE, 0xF3, 0x44, 0x9A,
 0x01, 0x6D, 0x06, 0x06, 0x40, 0xEA, 0x09, 0x97,
@@ -28302,61 +28141,61 @@ u8 array_mp_8821c_fw_nic[] = {
 0x54, 0x9A, 0x01, 0x6C, 0x40, 0xEA, 0x30, 0xF0,
 0x20, 0x6A, 0x69, 0xF2, 0x74, 0xA2, 0x02, 0x6A,
 0x6C, 0xEA, 0x10, 0x22, 0x10, 0xF0, 0x24, 0x6A,
-0x7C, 0xF6, 0x5C, 0x9A, 0x02, 0xF0, 0x00, 0x6C,
+0x5C, 0xF2, 0x58, 0x9A, 0x02, 0xF0, 0x00, 0x6C,
 0x60, 0x9A, 0x8D, 0xEB, 0x60, 0xDA, 0x10, 0xF0,
-0x24, 0x6C, 0x60, 0x9A, 0x1C, 0xF3, 0x8C, 0x9C,
+0x24, 0x6C, 0x60, 0x9A, 0xFB, 0xF6, 0x88, 0x9C,
 0x8D, 0xEB, 0x60, 0xDA, 0x30, 0xF0, 0x20, 0x68,
-0xEF, 0xF4, 0x08, 0x48, 0xC0, 0xF0, 0x5D, 0xA0,
+0xEF, 0xF4, 0x08, 0x48, 0xC0, 0xF0, 0x59, 0xA0,
 0x07, 0x6C, 0x00, 0x6D, 0x4C, 0xEC, 0x00, 0x18,
-0xA3, 0xC8, 0x30, 0xF0, 0x20, 0x6B, 0x69, 0xF2,
+0xA2, 0xC8, 0x30, 0xF0, 0x20, 0x6B, 0x69, 0xF2,
 0x94, 0xA3, 0x04, 0x6B, 0x8C, 0xEB, 0x10, 0x23,
-0xE0, 0xF0, 0x60, 0x98, 0x43, 0xEB, 0x0C, 0x60,
-0xE0, 0xF0, 0x88, 0xA0, 0x6F, 0xE2, 0x80, 0x34,
+0xC0, 0xF0, 0x7C, 0x98, 0x43, 0xEB, 0x0C, 0x60,
+0xE0, 0xF0, 0x84, 0xA0, 0x6F, 0xE2, 0x80, 0x34,
 0x88, 0x34, 0x63, 0xEC, 0x05, 0x60, 0xE0, 0xF0,
-0x44, 0xA0, 0x01, 0x4A, 0xE0, 0xF0, 0x44, 0xC0,
+0x40, 0xA0, 0x01, 0x4A, 0xE0, 0xF0, 0x40, 0xC0,
 0x05, 0x97, 0x04, 0x90, 0x03, 0x63, 0x00, 0xEF,
 0xFF, 0x6A, 0x4C, 0xEC, 0x03, 0x6B, 0x8C, 0xEB,
 0x4C, 0xEE, 0x3C, 0x2B, 0x10, 0xF0, 0x24, 0x6B,
-0x7D, 0xF1, 0x6C, 0x9B, 0x80, 0xC3, 0x0F, 0x6B,
+0x5C, 0xF5, 0x64, 0x9B, 0x80, 0xC3, 0x0F, 0x6B,
 0xCC, 0xEB, 0x34, 0x23, 0x01, 0x6C, 0x6C, 0xEC,
-0x06, 0x24, 0x10, 0xF0, 0x24, 0x6C, 0x7D, 0xF1,
-0x90, 0x9C, 0xAC, 0xEA, 0x40, 0xC4, 0x02, 0x6A,
+0x06, 0x24, 0x10, 0xF0, 0x24, 0x6C, 0x5C, 0xF5,
+0x88, 0x9C, 0xAC, 0xEA, 0x40, 0xC4, 0x02, 0x6A,
 0x6C, 0xEA, 0x08, 0x22, 0xFF, 0x6C, 0xA2, 0x32,
-0x8C, 0xEA, 0x10, 0xF0, 0x24, 0x6C, 0x7D, 0xF1,
-0x94, 0x9C, 0x40, 0xC4, 0x04, 0x6A, 0x6C, 0xEA,
+0x8C, 0xEA, 0x10, 0xF0, 0x24, 0x6C, 0x5C, 0xF5,
+0x8C, 0x9C, 0x40, 0xC4, 0x04, 0x6A, 0x6C, 0xEA,
 0x09, 0x22, 0xA2, 0x32, 0xFF, 0x6C, 0x42, 0x32,
-0x8C, 0xEA, 0x10, 0xF0, 0x24, 0x6C, 0x7D, 0xF1,
-0x98, 0x9C, 0x40, 0xC4, 0x6E, 0x32, 0x07, 0x22,
-0x10, 0xF0, 0x24, 0x6A, 0x7D, 0xF1, 0x5C, 0x9A,
+0x8C, 0xEA, 0x10, 0xF0, 0x24, 0x6C, 0x5C, 0xF5,
+0x90, 0x9C, 0x40, 0xC4, 0x6E, 0x32, 0x07, 0x22,
+0x10, 0xF0, 0x24, 0x6A, 0x5C, 0xF5, 0x54, 0x9A,
 0x00, 0xF6, 0xA2, 0x35, 0xA0, 0xC2, 0x20, 0x6A,
-0x6D, 0xEA, 0x10, 0xF0, 0x24, 0x6B, 0x9D, 0xF1,
-0x60, 0x9B, 0x40, 0xC3, 0x00, 0x6A, 0x40, 0xC3,
+0x6D, 0xEA, 0x10, 0xF0, 0x24, 0x6B, 0x5C, 0xF5,
+0x78, 0x9B, 0x40, 0xC3, 0x00, 0x6A, 0x40, 0xC3,
 0x01, 0x6A, 0x20, 0xE8, 0x00, 0x6A, 0x20, 0xE8,
 0xFF, 0x6A, 0x8C, 0xEA, 0x03, 0x6B, 0x4C, 0xEB,
 0x03, 0x23, 0x01, 0x6A, 0x4B, 0xEA, 0x20, 0xE8,
-0x10, 0xF0, 0x24, 0x6C, 0x7D, 0xF1, 0x8C, 0x9C,
-0x40, 0xC4, 0x10, 0xF0, 0x24, 0x6A, 0x9D, 0xF1,
-0x80, 0x9A, 0x30, 0x6A, 0x40, 0xC4, 0x10, 0xF0,
-0x24, 0x6A, 0x7D, 0xF1, 0x50, 0x9A, 0x40, 0x9A,
+0x10, 0xF0, 0x24, 0x6C, 0x5C, 0xF5, 0x84, 0x9C,
+0x40, 0xC4, 0x10, 0xF0, 0x24, 0x6A, 0x5C, 0xF5,
+0x98, 0x9A, 0x30, 0x6A, 0x40, 0xC4, 0x10, 0xF0,
+0x24, 0x6A, 0x5C, 0xF5, 0x48, 0x9A, 0x40, 0x9A,
 0x60, 0xC4, 0x20, 0xE8, 0xFD, 0x63, 0x05, 0x62,
-0x10, 0xF0, 0x24, 0x6A, 0x9D, 0xF1, 0xA4, 0x9A,
+0x10, 0xF0, 0x24, 0x6A, 0x5C, 0xF5, 0xBC, 0x9A,
 0xE0, 0xF3, 0x10, 0x6C, 0x0F, 0x6E, 0x80, 0x18,
 0x8C, 0x0F, 0xE0, 0xF3, 0x0C, 0x6C, 0x80, 0x18,
 0xAE, 0x0F, 0xFF, 0x6B, 0x4C, 0xEB, 0x0B, 0x73,
-0x0B, 0x61, 0x10, 0xF0, 0x24, 0x6A, 0x9D, 0xF1,
-0x68, 0x9A, 0x10, 0xF0, 0x24, 0x6C, 0x9D, 0xF1,
-0x8C, 0x9C, 0x40, 0x9B, 0x8C, 0xEA, 0x40, 0xDB,
+0x0B, 0x61, 0x10, 0xF0, 0x24, 0x6A, 0x7C, 0xF5,
+0x60, 0x9A, 0x10, 0xF0, 0x24, 0x6C, 0x7C, 0xF5,
+0x84, 0x9C, 0x40, 0x9B, 0x8C, 0xEA, 0x40, 0xDB,
 0x05, 0x97, 0x03, 0x63, 0x00, 0xEF, 0x00, 0x65,
 0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A,
 0x05, 0x6B, 0x65, 0xF4, 0x64, 0xDA, 0x00, 0x6B,
 0x65, 0xF4, 0x60, 0xDA, 0x20, 0xE8, 0x00, 0x65,
 0xE5, 0x63, 0x35, 0x62, 0x34, 0xD1, 0x33, 0xD0,
-0x10, 0xF0, 0x24, 0x6D, 0x07, 0x04, 0x7B, 0xF7,
-0x10, 0x4D, 0x54, 0x6E, 0x00, 0x18, 0xB3, 0xD4,
-0x10, 0xF0, 0x24, 0x6D, 0x1C, 0x04, 0x1B, 0xF7,
-0x1C, 0x4D, 0x54, 0x6E, 0x00, 0x18, 0xB3, 0xD4,
-0x10, 0xF0, 0x24, 0x6A, 0x1B, 0xF7, 0x70, 0x9A,
-0x1B, 0xF7, 0x10, 0x4A, 0x00, 0x69, 0x04, 0xD3,
+0x10, 0xF0, 0x24, 0x6D, 0x07, 0x04, 0x5B, 0xF3,
+0x0C, 0x4D, 0x54, 0x6E, 0x00, 0x18, 0xA1, 0xD4,
+0x10, 0xF0, 0x24, 0x6D, 0x1C, 0x04, 0xFB, 0xF2,
+0x18, 0x4D, 0x54, 0x6E, 0x00, 0x18, 0xA1, 0xD4,
+0x10, 0xF0, 0x24, 0x6A, 0xFB, 0xF2, 0x6C, 0x9A,
+0xFB, 0xF2, 0x0C, 0x4A, 0x00, 0x69, 0x04, 0xD3,
 0x61, 0x9A, 0x44, 0xAA, 0x05, 0xD3, 0x7D, 0x67,
 0x4C, 0xCB, 0x52, 0x68, 0x18, 0xE9, 0x30, 0xF0,
 0x20, 0x6A, 0x60, 0xF2, 0x08, 0x4A, 0x61, 0x6F,
@@ -28391,11 +28230,11 @@ u8 array_mp_8821c_fw_nic[] = {
 0x08, 0x4A, 0xE5, 0xF2, 0x76, 0xC2, 0x30, 0xF0,
 0x20, 0x6A, 0x4E, 0xF5, 0x48, 0x9A, 0x40, 0xEA,
 0x30, 0xF0, 0x20, 0x6A, 0x4E, 0xF5, 0x54, 0x9A,
-0x40, 0xEA, 0x10, 0xF0, 0x24, 0x6A, 0xDC, 0xF5,
-0x40, 0x9A, 0x32, 0x6B, 0x30, 0xF0, 0x20, 0x6C,
-0x60, 0xC2, 0x10, 0xF0, 0x24, 0x6A, 0xDC, 0xF5,
-0x44, 0x9A, 0x10, 0xF0, 0x24, 0x6B, 0xDC, 0xF5,
-0x68, 0x9B, 0x40, 0xA2, 0x05, 0xF4, 0x10, 0x4C,
+0x40, 0xEA, 0x10, 0xF0, 0x24, 0x6A, 0x9C, 0xF1,
+0x5C, 0x9A, 0x32, 0x6B, 0x30, 0xF0, 0x20, 0x6C,
+0x60, 0xC2, 0x10, 0xF0, 0x24, 0x6A, 0xBC, 0xF1,
+0x40, 0x9A, 0x10, 0xF0, 0x24, 0x6B, 0xBC, 0xF1,
+0x64, 0x9B, 0x40, 0xA2, 0x05, 0xF4, 0x10, 0x4C,
 0x1C, 0x05, 0x0C, 0xEA, 0xFF, 0x4A, 0x0C, 0xEA,
 0x40, 0xC3, 0x30, 0xF0, 0x20, 0x68, 0x4E, 0xF2,
 0x50, 0x98, 0x54, 0x6E, 0x40, 0xEA, 0x4E, 0xF2,
@@ -28417,23 +28256,23 @@ u8 array_mp_8821c_fw_nic[] = {
 0x05, 0x67, 0x0C, 0xD6, 0x27, 0x67, 0x1F, 0x22,
 0x1F, 0xF7, 0x00, 0x6A, 0xAC, 0xEA, 0x02, 0xF0,
 0x00, 0x72, 0x01, 0x60, 0x05, 0x2A, 0x10, 0xF0,
-0x24, 0x6A, 0xFC, 0xF2, 0x40, 0x9A, 0x04, 0x10,
-0x10, 0xF0, 0x24, 0x6A, 0xFC, 0xF2, 0x44, 0x9A,
+0x24, 0x6A, 0xBB, 0xF6, 0x5C, 0x9A, 0x04, 0x10,
+0x10, 0xF0, 0x24, 0x6A, 0xDB, 0xF6, 0x40, 0x9A,
 0x49, 0xE0, 0x40, 0x9A, 0x0C, 0x94, 0x04, 0xD2,
 0x30, 0xF0, 0x20, 0x6A, 0xAE, 0xF4, 0x50, 0x9A,
 0x40, 0xEA, 0x0C, 0x93, 0x24, 0xEA, 0x6F, 0xEA,
 0x04, 0x93, 0x6C, 0xEA, 0x4D, 0xE9, 0x1F, 0xF7,
 0x00, 0x6A, 0x0C, 0xEA, 0x02, 0xF0, 0x00, 0x72,
 0x01, 0x60, 0x05, 0x2A, 0x10, 0xF0, 0x24, 0x6A,
-0xFC, 0xF2, 0x40, 0x9A, 0x04, 0x10, 0x10, 0xF0,
-0x24, 0x6A, 0xFC, 0xF2, 0x44, 0x9A, 0x41, 0xE0,
+0xBB, 0xF6, 0x5C, 0x9A, 0x04, 0x10, 0x10, 0xF0,
+0x24, 0x6A, 0xDB, 0xF6, 0x40, 0x9A, 0x41, 0xE0,
 0x20, 0xD8, 0x09, 0x97, 0x08, 0x91, 0x07, 0x90,
 0x05, 0x63, 0x00, 0xEF, 0xFC, 0x63, 0x07, 0x62,
 0x06, 0xD1, 0x05, 0xD0, 0x1F, 0xF7, 0x00, 0x6A,
 0xAC, 0xEA, 0x02, 0xF0, 0x00, 0x72, 0x26, 0x67,
 0x01, 0x60, 0x05, 0x2A, 0x10, 0xF0, 0x24, 0x6A,
-0xFC, 0xF2, 0x40, 0x9A, 0x04, 0x10, 0x10, 0xF0,
-0x24, 0x6A, 0xFC, 0xF2, 0x44, 0x9A, 0x55, 0xE5,
+0xBB, 0xF6, 0x5C, 0x9A, 0x04, 0x10, 0x10, 0xF0,
+0x24, 0x6A, 0xDB, 0xF6, 0x40, 0x9A, 0x55, 0xE5,
 0x30, 0xF0, 0x20, 0x6A, 0x00, 0x9D, 0xAE, 0xF4,
 0x50, 0x9A, 0x91, 0x67, 0x2C, 0xE8, 0x40, 0xEA,
 0x06, 0xEA, 0x50, 0x67, 0x07, 0x97, 0x06, 0x91,
@@ -28446,15 +28285,15 @@ u8 array_mp_8821c_fw_nic[] = {
 0x04, 0x90, 0x03, 0x63, 0x00, 0xEF, 0x00, 0x65,
 0xFC, 0x63, 0x07, 0x62, 0x06, 0xD1, 0x05, 0xD0,
 0x10, 0xF0, 0x24, 0x6B, 0x30, 0xF0, 0x20, 0x68,
-0x9C, 0xF4, 0x18, 0x4B, 0xCE, 0xF4, 0x50, 0x98,
+0x7C, 0xF0, 0x14, 0x4B, 0xCE, 0xF4, 0x50, 0x98,
 0xC0, 0x9B, 0x03, 0xF3, 0x00, 0x69, 0x01, 0x6D,
 0x91, 0x67, 0xAB, 0xED, 0x40, 0xEA, 0x10, 0xF0,
-0x24, 0x6B, 0xCE, 0xF4, 0x50, 0x98, 0x9C, 0xF4,
-0xDC, 0x9B, 0x01, 0x6D, 0x91, 0x67, 0xAB, 0xED,
+0x24, 0x6B, 0xCE, 0xF4, 0x50, 0x98, 0x7C, 0xF0,
+0xD8, 0x9B, 0x01, 0x6D, 0x91, 0x67, 0xAB, 0xED,
 0x40, 0xEA, 0x10, 0xF0, 0x24, 0x6B, 0xCE, 0xF4,
-0x50, 0x98, 0xBC, 0xF4, 0xC0, 0x9B, 0x01, 0x6D,
+0x50, 0x98, 0x7C, 0xF0, 0xDC, 0x9B, 0x01, 0x6D,
 0x91, 0x67, 0xAB, 0xED, 0x40, 0xEA, 0x10, 0xF0,
-0x24, 0x6B, 0x9C, 0xF4, 0x18, 0x4B, 0xCE, 0xF4,
+0x24, 0x6B, 0x7C, 0xF0, 0x14, 0x4B, 0xCE, 0xF4,
 0x50, 0x98, 0xC0, 0x9B, 0x01, 0x6D, 0x91, 0x67,
 0xAB, 0xED, 0x40, 0xEA, 0x07, 0x97, 0x06, 0x91,
 0x05, 0x90, 0x04, 0x63, 0x00, 0xEF, 0x00, 0x65,
@@ -28462,9 +28301,9 @@ u8 array_mp_8821c_fw_nic[] = {
 0x00, 0x6A, 0x0B, 0xD7, 0xE0, 0xAE, 0x1F, 0xF7,
 0x00, 0x6B, 0xEC, 0xEB, 0x02, 0xF0, 0x00, 0x73,
 0x01, 0x60, 0x09, 0x2B, 0x10, 0xF0, 0x24, 0x6B,
-0xE0, 0xAE, 0xFC, 0xF2, 0x60, 0x9B, 0x6D, 0xE7,
+0xE0, 0xAE, 0xBB, 0xF6, 0x7C, 0x9B, 0x6D, 0xE7,
 0xE0, 0xA4, 0xE0, 0xC3, 0x07, 0x10, 0x10, 0xF0,
-0x24, 0x6B, 0xFC, 0xF2, 0x64, 0x9B, 0x7D, 0xE7,
+0x24, 0x6B, 0xDB, 0xF6, 0x60, 0x9B, 0x7D, 0xE7,
 0x60, 0xA4, 0x60, 0xC7, 0x01, 0x4A, 0xFF, 0x6B,
 0x6C, 0xEA, 0x04, 0x72, 0x02, 0x4E, 0x01, 0x4C,
 0xE1, 0x61, 0x25, 0x67, 0x00, 0x68, 0x0B, 0x92,
@@ -28474,13 +28313,13 @@ u8 array_mp_8821c_fw_nic[] = {
 0x04, 0x49, 0xF1, 0x61, 0x07, 0x97, 0x06, 0x91,
 0x05, 0x90, 0x04, 0x63, 0x00, 0xEF, 0x00, 0x65,
 0xFC, 0x63, 0x07, 0x62, 0x06, 0xD1, 0x05, 0xD0,
-0x10, 0xF0, 0x24, 0x6A, 0x5C, 0xF3, 0x4C, 0x9A,
+0x10, 0xF0, 0x24, 0x6A, 0x3B, 0xF7, 0x5C, 0x9A,
 0x7F, 0x6B, 0xFF, 0x6C, 0x60, 0xC2, 0x10, 0xF0,
-0x24, 0x6A, 0xFC, 0xF2, 0x4C, 0x9A, 0x14, 0x6B,
+0x24, 0x6A, 0xDB, 0xF6, 0x48, 0x9A, 0x14, 0x6B,
 0x01, 0x6D, 0x60, 0xC2, 0x10, 0xF0, 0x24, 0x6A,
-0xFC, 0xF2, 0x50, 0x9A, 0x10, 0x6B, 0x30, 0xF0,
+0xDB, 0xF6, 0x4C, 0x9A, 0x10, 0x6B, 0x30, 0xF0,
 0x20, 0x68, 0x60, 0xC2, 0x10, 0xF0, 0x24, 0x6A,
-0xBC, 0xF4, 0x6C, 0x9A, 0x01, 0x6E, 0x81, 0xF4,
+0x9C, 0xF0, 0x68, 0x9A, 0x01, 0x6E, 0x81, 0xF4,
 0x14, 0x69, 0x40, 0xA3, 0x8C, 0xEA, 0xAD, 0xEA,
 0x8C, 0xEA, 0x40, 0xC3, 0xCE, 0xF4, 0x50, 0x98,
 0x01, 0xF0, 0x0D, 0x4C, 0xEF, 0xF7, 0x1F, 0x4D,
@@ -28492,22 +28331,22 @@ u8 array_mp_8821c_fw_nic[] = {
 0x04, 0x6E, 0x40, 0xEA, 0xCE, 0xF4, 0x50, 0x98,
 0xFF, 0x6D, 0x01, 0xF3, 0x00, 0x6C, 0x01, 0x4D,
 0x00, 0x6E, 0x40, 0xEA, 0x10, 0xF0, 0x24, 0x6B,
-0x1C, 0xF3, 0xAC, 0x9B, 0xCE, 0xF4, 0x50, 0x98,
+0xFB, 0xF6, 0xA8, 0x9B, 0xCE, 0xF4, 0x50, 0x98,
 0x01, 0xF0, 0x08, 0x6C, 0x00, 0x6E, 0x40, 0xEA,
 0xCE, 0xF4, 0x50, 0x98, 0x21, 0xF0, 0x18, 0x6C,
 0x0E, 0x6D, 0x07, 0x6E, 0x40, 0xEA, 0x07, 0x97,
 0x06, 0x91, 0x05, 0x90, 0x04, 0x63, 0x00, 0xEF,
 0xFC, 0x63, 0x07, 0x62, 0x06, 0xD1, 0x05, 0xD0,
 0xFF, 0x6A, 0x8C, 0xEA, 0x1E, 0x22, 0x30, 0xF0,
-0x20, 0x68, 0x10, 0xF0, 0x24, 0x6B, 0xBC, 0xF4,
-0xD0, 0x9B, 0xCE, 0xF4, 0x50, 0x98, 0x01, 0x69,
+0x20, 0x68, 0x10, 0xF0, 0x24, 0x6B, 0x9C, 0xF0,
+0xCC, 0x9B, 0xCE, 0xF4, 0x50, 0x98, 0x01, 0x69,
 0x2B, 0xE9, 0xA1, 0xF4, 0x10, 0x6C, 0xB1, 0x67,
 0x40, 0xEA, 0xCE, 0xF4, 0x50, 0x98, 0xA1, 0xF4,
 0x14, 0x6C, 0xB1, 0x67, 0x6E, 0xF7, 0x17, 0x6E,
 0x40, 0xEA, 0xCE, 0xF4, 0x50, 0x98, 0xA1, 0xF4,
 0x1C, 0x6C, 0xB1, 0x67, 0x21, 0xF0, 0x1B, 0x6E,
 0x1D, 0x10, 0x30, 0xF0, 0x20, 0x68, 0x10, 0xF0,
-0x24, 0x6B, 0xBC, 0xF4, 0xD4, 0x9B, 0xCE, 0xF4,
+0x24, 0x6B, 0x9C, 0xF0, 0xD0, 0x9B, 0xCE, 0xF4,
 0x50, 0x98, 0x01, 0x69, 0x2B, 0xE9, 0xA1, 0xF4,
 0x10, 0x6C, 0xB1, 0x67, 0x40, 0xEA, 0xCE, 0xF4,
 0x50, 0x98, 0xA1, 0xF4, 0x14, 0x6C, 0xB1, 0x67,
@@ -28519,19 +28358,19 @@ u8 array_mp_8821c_fw_nic[] = {
 0x00, 0x6B, 0x0B, 0xD7, 0xE0, 0xAE, 0x1F, 0xF7,
 0x00, 0x6A, 0xEC, 0xEA, 0x02, 0xF0, 0x00, 0x72,
 0x01, 0x60, 0x08, 0x2A, 0x10, 0xF0, 0x24, 0x6A,
-0xE0, 0xAE, 0xFC, 0xF2, 0x40, 0x9A, 0x49, 0xE7,
+0xE0, 0xAE, 0xBB, 0xF6, 0x5C, 0x9A, 0x49, 0xE7,
 0xE0, 0xA2, 0x06, 0x10, 0x10, 0xF0, 0x24, 0x6A,
-0xFC, 0xF2, 0x44, 0x9A, 0x5D, 0xE7, 0xE0, 0xA7,
+0xDB, 0xF6, 0x40, 0x9A, 0x5D, 0xE7, 0xE0, 0xA7,
 0xFF, 0x6A, 0xEC, 0xEA, 0x7D, 0xE4, 0x01, 0x4B,
 0x04, 0x73, 0x40, 0xC7, 0x02, 0x4E, 0xE2, 0x61,
 0x25, 0x67, 0x00, 0x68, 0x0B, 0x93, 0x01, 0x6D,
 0xAB, 0xED, 0x09, 0xE3, 0x80, 0xAA, 0x02, 0x48,
-0x00, 0x18, 0x42, 0xE7, 0x16, 0x70, 0x40, 0xD9,
+0x00, 0x18, 0xE4, 0xE6, 0x16, 0x70, 0x40, 0xD9,
 0x04, 0x49, 0xF4, 0x61, 0x07, 0x97, 0x06, 0x91,
 0x05, 0x90, 0x04, 0x63, 0x00, 0xEF, 0x00, 0x65,
 0xFB, 0x63, 0x09, 0x62, 0x08, 0xD1, 0x07, 0xD0,
-0x10, 0xF0, 0x24, 0x6B, 0xFF, 0x69, 0x9C, 0xF4,
-0x78, 0x9B, 0x30, 0xF0, 0x20, 0x68, 0x2C, 0xEC,
+0x10, 0xF0, 0x24, 0x6B, 0xFF, 0x69, 0x7C, 0xF0,
+0x74, 0x9B, 0x30, 0xF0, 0x20, 0x68, 0x2C, 0xEC,
 0xCE, 0xF4, 0x50, 0x98, 0xAC, 0xE9, 0x24, 0x36,
 0x01, 0x6D, 0x04, 0xD4, 0xAB, 0xED, 0x03, 0xF3,
 0x00, 0x6C, 0x6D, 0xEE, 0x40, 0xEA, 0x04, 0x92,
@@ -28540,24 +28379,24 @@ u8 array_mp_8821c_fw_nic[] = {
 0x07, 0x10, 0xCE, 0xF4, 0x50, 0x98, 0x03, 0xF3,
 0x0C, 0x6C, 0x06, 0xF0, 0x00, 0x6D, 0x01, 0x6E,
 0x40, 0xEA, 0x10, 0xF0, 0x24, 0x6B, 0x30, 0xF0,
-0x20, 0x6A, 0xCE, 0xF4, 0x50, 0x9A, 0xBC, 0xF4,
-0xA4, 0x9B, 0xC3, 0xF3, 0x14, 0x6C, 0x10, 0x6E,
+0x20, 0x6A, 0xCE, 0xF4, 0x50, 0x9A, 0x9C, 0xF0,
+0xA0, 0x9B, 0xC3, 0xF3, 0x14, 0x6C, 0x10, 0x6E,
 0x40, 0xEA, 0x04, 0x94, 0x24, 0x31, 0x30, 0xF0,
 0x20, 0x6A, 0x25, 0xE4, 0x30, 0x33, 0xC0, 0xF1,
 0x08, 0x4A, 0x30, 0x31, 0x6D, 0xE2, 0x29, 0xE2,
 0xE7, 0xF7, 0x0C, 0x4A, 0x04, 0xD2, 0x10, 0xF0,
-0x24, 0x6A, 0xBC, 0xF4, 0x38, 0x9A, 0xE7, 0xF6,
+0x24, 0x6A, 0x9C, 0xF0, 0x34, 0x9A, 0xE7, 0xF6,
 0x0C, 0x4B, 0x05, 0xD3, 0x30, 0xF0, 0x20, 0x68,
 0xCE, 0xF4, 0x50, 0x98, 0x01, 0x6D, 0xD1, 0x67,
 0xC3, 0xF3, 0x18, 0x6C, 0xAB, 0xED, 0x40, 0xEA,
 0x01, 0x6D, 0xE3, 0xF3, 0x1C, 0x6C, 0xAB, 0xED,
-0x00, 0x18, 0x42, 0xE7, 0x10, 0xF0, 0x24, 0x6B,
-0xBC, 0xF4, 0x7C, 0x9B, 0x05, 0x94, 0x04, 0x49,
+0x00, 0x18, 0xE4, 0xE6, 0x10, 0xF0, 0x24, 0x6B,
+0x9C, 0xF0, 0x78, 0x9B, 0x05, 0x94, 0x04, 0x49,
 0x4C, 0xEB, 0x62, 0x33, 0x62, 0x33, 0x60, 0xCC,
 0xE1, 0xF7, 0x1F, 0x6B, 0x4C, 0xEB, 0x04, 0x92,
 0x02, 0x4C, 0x05, 0xD4, 0x60, 0xCA, 0x02, 0x4A,
-0x04, 0xD2, 0x10, 0xF0, 0x24, 0x6A, 0xDC, 0xF4,
-0x40, 0x9A, 0x2E, 0xEA, 0xD7, 0x2A, 0xCE, 0xF4,
+0x04, 0xD2, 0x10, 0xF0, 0x24, 0x6A, 0x9C, 0xF0,
+0x5C, 0x9A, 0x2E, 0xEA, 0xD7, 0x2A, 0xCE, 0xF4,
 0x50, 0x98, 0x01, 0x6D, 0xC3, 0xF3, 0x18, 0x6C,
 0xAB, 0xED, 0x00, 0x6E, 0x40, 0xEA, 0xCE, 0xF4,
 0x50, 0x98, 0x03, 0xF3, 0x0C, 0x6C, 0x06, 0xF0,
@@ -28566,9 +28405,9 @@ u8 array_mp_8821c_fw_nic[] = {
 0xF9, 0x63, 0x0D, 0x62, 0x0C, 0xD1, 0x0B, 0xD0,
 0x30, 0xF0, 0x20, 0x68, 0xC0, 0xF1, 0x08, 0x48,
 0x28, 0xF1, 0x4C, 0xA0, 0x69, 0x2A, 0x10, 0xF0,
-0x24, 0x6C, 0xDD, 0xF1, 0x00, 0x4C, 0x80, 0x18,
+0x24, 0x6C, 0x9C, 0xF5, 0x00, 0x4C, 0x80, 0x18,
 0x35, 0x19, 0x01, 0x6A, 0xA7, 0xF6, 0x46, 0xC0,
-0x30, 0xF0, 0x21, 0x6A, 0x50, 0xF3, 0x0E, 0x4A,
+0x30, 0xF0, 0x21, 0x6A, 0x50, 0xF3, 0x0A, 0x4A,
 0x30, 0xF0, 0x20, 0x6F, 0x30, 0xF0, 0x20, 0x6E,
 0x30, 0xF0, 0x20, 0x6C, 0xA8, 0xF0, 0x0C, 0x4F,
 0xA8, 0xF2, 0x14, 0x4E, 0xA4, 0x42, 0xC8, 0xF0,
@@ -28593,34 +28432,34 @@ u8 array_mp_8821c_fw_nic[] = {
 0x7F, 0x4C, 0x6E, 0xEA, 0x04, 0x4F, 0x10, 0x4E,
 0x18, 0x65, 0x03, 0x4D, 0x01, 0x4C, 0xB3, 0x2A,
 0x10, 0xF0, 0x24, 0x6B, 0x30, 0xF0, 0x20, 0x6A,
-0xCE, 0xF4, 0x50, 0x9A, 0xDC, 0xF4, 0xC4, 0x9B,
+0xCE, 0xF4, 0x50, 0x9A, 0xBC, 0xF0, 0xC0, 0x9B,
 0x01, 0x6D, 0x03, 0xF3, 0x10, 0x6C, 0xAB, 0xED,
 0x40, 0xEA, 0x0D, 0x97, 0x0C, 0x91, 0x0B, 0x90,
 0x07, 0x63, 0x00, 0xEF, 0xFC, 0x63, 0x07, 0x62,
 0x06, 0xD1, 0x05, 0xD0, 0x30, 0xF0, 0x21, 0x6A,
-0x70, 0xF3, 0x40, 0xA2, 0xFF, 0x69, 0x8C, 0xE9,
+0x50, 0xF3, 0x5C, 0xA2, 0xFF, 0x69, 0x8C, 0xE9,
 0x53, 0x22, 0x10, 0xF0, 0x24, 0x6B, 0x30, 0xF0,
-0x20, 0x68, 0x9C, 0xF4, 0x78, 0x9B, 0xCE, 0xF4,
+0x20, 0x68, 0x7C, 0xF0, 0x74, 0x9B, 0xCE, 0xF4,
 0x50, 0x98, 0x24, 0x36, 0x01, 0x6D, 0x6D, 0xEE,
 0x03, 0xF3, 0x00, 0x6C, 0xAB, 0xED, 0x40, 0xEA,
-0x10, 0xF0, 0x24, 0x6B, 0xDC, 0xF4, 0xA8, 0x9B,
+0x10, 0xF0, 0x24, 0x6B, 0xBC, 0xF0, 0xA4, 0x9B,
 0xCE, 0xF4, 0x50, 0x98, 0x23, 0xF3, 0x08, 0x6C,
 0x80, 0x6E, 0x40, 0xEA, 0xCE, 0xF4, 0x50, 0x98,
 0x01, 0x6D, 0xC3, 0xF3, 0x0C, 0x6C, 0xAB, 0xED,
 0x09, 0x6E, 0x40, 0xEA, 0x10, 0xF0, 0x24, 0x6B,
-0xCE, 0xF4, 0x50, 0x98, 0xDC, 0xF4, 0xCC, 0x9B,
+0xCE, 0xF4, 0x50, 0x98, 0xBC, 0xF0, 0xC8, 0x9B,
 0x01, 0x6D, 0x23, 0xF3, 0x00, 0x6C, 0xAB, 0xED,
-0x40, 0xEA, 0x10, 0xF0, 0x24, 0x6B, 0xDC, 0xF4,
-0xD0, 0x9B, 0xCE, 0xF4, 0x50, 0x98, 0x01, 0x6D,
+0x40, 0xEA, 0x10, 0xF0, 0x24, 0x6B, 0xBC, 0xF0,
+0xCC, 0x9B, 0xCE, 0xF4, 0x50, 0x98, 0x01, 0x6D,
 0x23, 0xF3, 0x04, 0x6C, 0xAB, 0xED, 0x40, 0xEA,
-0x10, 0xF0, 0x24, 0x6A, 0xDC, 0xF4, 0x14, 0x9A,
-0x10, 0xF0, 0x24, 0x6A, 0xDC, 0xF4, 0xF8, 0x9A,
+0x10, 0xF0, 0x24, 0x6A, 0xBC, 0xF0, 0x10, 0x9A,
+0x10, 0xF0, 0x24, 0x6A, 0xBC, 0xF0, 0xF4, 0x9A,
 0x00, 0x6C, 0x78, 0x6D, 0xD0, 0x67, 0x00, 0x18,
-0xA0, 0xE7, 0x00, 0x6C, 0x5C, 0x6D, 0xD0, 0x67,
-0x20, 0xF3, 0x00, 0x6F, 0x00, 0x18, 0xA0, 0xE7,
+0x42, 0xE7, 0x00, 0x6C, 0x5C, 0x6D, 0xD0, 0x67,
+0x20, 0xF3, 0x00, 0x6F, 0x00, 0x18, 0x42, 0xE7,
 0x10, 0xF0, 0x24, 0x6A, 0x00, 0x6C, 0x8F, 0x6D,
-0xD0, 0x67, 0xDC, 0xF4, 0xFC, 0x9A, 0x79, 0x10,
-0x10, 0xF0, 0x24, 0x6B, 0x9C, 0xF4, 0x78, 0x9B,
+0xD0, 0x67, 0xBC, 0xF0, 0xF8, 0x9A, 0x79, 0x10,
+0x10, 0xF0, 0x24, 0x6B, 0x7C, 0xF0, 0x74, 0x9B,
 0x30, 0xF0, 0x20, 0x68, 0xCE, 0xF4, 0x50, 0x98,
 0x24, 0x36, 0x01, 0x6D, 0x03, 0xF3, 0x00, 0x6C,
 0xAB, 0xED, 0x6D, 0xEE, 0x40, 0xEA, 0x30, 0xF0,
@@ -28628,82 +28467,82 @@ u8 array_mp_8821c_fw_nic[] = {
 0x01, 0x72, 0x28, 0x60, 0x64, 0x10, 0xCE, 0xF4,
 0x50, 0x98, 0xC3, 0xF3, 0x0C, 0x6C, 0xFF, 0x6D,
 0x12, 0x6E, 0x40, 0xEA, 0x10, 0xF0, 0x24, 0x6B,
-0xDC, 0xF4, 0xA8, 0x9B, 0xCE, 0xF4, 0x50, 0x98,
+0xBC, 0xF0, 0xA4, 0x9B, 0xCE, 0xF4, 0x50, 0x98,
 0x23, 0xF3, 0x08, 0x6C, 0x00, 0x6E, 0x40, 0xEA,
-0x10, 0xF0, 0x24, 0x6B, 0xDC, 0xF4, 0xCC, 0x9B,
+0x10, 0xF0, 0x24, 0x6B, 0xBC, 0xF0, 0xC8, 0x9B,
 0xCE, 0xF4, 0x50, 0x98, 0x01, 0x6D, 0x23, 0xF3,
 0x00, 0x6C, 0xAB, 0xED, 0x40, 0xEA, 0x01, 0x6D,
 0x10, 0xF0, 0x24, 0x6B, 0xCE, 0xF4, 0x50, 0x98,
-0x23, 0xF3, 0x04, 0x6C, 0xAB, 0xED, 0xFC, 0xF4,
-0xC0, 0x9B, 0x26, 0x10, 0xCE, 0xF4, 0x50, 0x98,
+0x23, 0xF3, 0x04, 0x6C, 0xAB, 0xED, 0xBC, 0xF0,
+0xDC, 0x9B, 0x26, 0x10, 0xCE, 0xF4, 0x50, 0x98,
 0xC3, 0xF3, 0x0C, 0x6C, 0xFF, 0x6D, 0x09, 0x6E,
-0x40, 0xEA, 0x10, 0xF0, 0x24, 0x6B, 0xDC, 0xF4,
-0xA8, 0x9B, 0xCE, 0xF4, 0x50, 0x98, 0x23, 0xF3,
+0x40, 0xEA, 0x10, 0xF0, 0x24, 0x6B, 0xBC, 0xF0,
+0xA4, 0x9B, 0xCE, 0xF4, 0x50, 0x98, 0x23, 0xF3,
 0x08, 0x6C, 0x00, 0x6E, 0x40, 0xEA, 0x10, 0xF0,
-0x24, 0x6B, 0xFC, 0xF4, 0xCC, 0x9B, 0xCE, 0xF4,
+0x24, 0x6B, 0xDC, 0xF0, 0xC8, 0x9B, 0xCE, 0xF4,
 0x50, 0x98, 0x01, 0x6D, 0x23, 0xF3, 0x00, 0x6C,
 0xAB, 0xED, 0x40, 0xEA, 0x10, 0xF0, 0x24, 0x6B,
-0xCE, 0xF4, 0x50, 0x98, 0xFC, 0xF4, 0xD0, 0x9B,
+0xCE, 0xF4, 0x50, 0x98, 0xDC, 0xF0, 0xCC, 0x9B,
 0x01, 0x6D, 0x23, 0xF3, 0x04, 0x6C, 0xAB, 0xED,
-0x40, 0xEA, 0x10, 0xF0, 0x24, 0x6A, 0xDC, 0xF4,
-0x14, 0x9A, 0x10, 0xF0, 0x24, 0x6A, 0xFC, 0xF4,
-0xE4, 0x9A, 0x91, 0x67, 0x56, 0x6D, 0xD0, 0x67,
-0x00, 0x18, 0xA0, 0xE7, 0x10, 0xF0, 0x24, 0x6A,
-0xFC, 0xF4, 0xE8, 0x9A, 0x91, 0x67, 0x8F, 0x6D,
-0xD0, 0x67, 0x00, 0x18, 0xA0, 0xE7, 0x07, 0x97,
+0x40, 0xEA, 0x10, 0xF0, 0x24, 0x6A, 0xBC, 0xF0,
+0x10, 0x9A, 0x10, 0xF0, 0x24, 0x6A, 0xDC, 0xF0,
+0xE0, 0x9A, 0x91, 0x67, 0x56, 0x6D, 0xD0, 0x67,
+0x00, 0x18, 0x42, 0xE7, 0x10, 0xF0, 0x24, 0x6A,
+0xDC, 0xF0, 0xE4, 0x9A, 0x91, 0x67, 0x8F, 0x6D,
+0xD0, 0x67, 0x00, 0x18, 0x42, 0xE7, 0x07, 0x97,
 0x06, 0x91, 0x05, 0x90, 0x04, 0x63, 0x00, 0xEF,
 0xFC, 0x63, 0x07, 0x62, 0x06, 0xD1, 0x05, 0xD0,
-0x30, 0xF0, 0x21, 0x6A, 0x70, 0xF3, 0x40, 0xA2,
+0x30, 0xF0, 0x21, 0x6A, 0x50, 0xF3, 0x5C, 0xA2,
 0xFF, 0x6E, 0x8C, 0xEE, 0x48, 0x22, 0x10, 0xF0,
-0x24, 0x6B, 0x30, 0xF0, 0x20, 0x68, 0x9C, 0xF4,
-0x78, 0x9B, 0xCE, 0xF4, 0x50, 0x98, 0x01, 0x69,
+0x24, 0x6B, 0x30, 0xF0, 0x20, 0x68, 0x7C, 0xF0,
+0x74, 0x9B, 0xCE, 0xF4, 0x50, 0x98, 0x01, 0x69,
 0x2B, 0xE9, 0xC4, 0x36, 0x6D, 0xEE, 0xB1, 0x67,
 0x03, 0xF3, 0x00, 0x6C, 0x40, 0xEA, 0xCE, 0xF4,
 0x50, 0x98, 0xB1, 0x67, 0xC3, 0xF3, 0x0C, 0x6C,
 0x1B, 0x6E, 0x40, 0xEA, 0x10, 0xF0, 0x24, 0x6B,
-0xFC, 0xF4, 0xD4, 0x9B, 0xCE, 0xF4, 0x50, 0x98,
+0xDC, 0xF0, 0xD0, 0x9B, 0xCE, 0xF4, 0x50, 0x98,
 0xB1, 0x67, 0x23, 0xF3, 0x00, 0x6C, 0x40, 0xEA,
-0x10, 0xF0, 0x24, 0x6A, 0xDC, 0xF4, 0x34, 0x9A,
-0x10, 0xF0, 0x24, 0x6A, 0xFC, 0xF4, 0xF8, 0x9A,
+0x10, 0xF0, 0x24, 0x6A, 0xBC, 0xF0, 0x30, 0x9A,
+0x10, 0xF0, 0x24, 0x6A, 0xDC, 0xF0, 0xF4, 0x9A,
 0x00, 0x6C, 0x78, 0x6D, 0xD1, 0x67, 0x00, 0x18,
-0xA0, 0xE7, 0x00, 0x6C, 0x5C, 0x6D, 0xD1, 0x67,
-0x28, 0xF3, 0x00, 0x6F, 0x00, 0x18, 0xA0, 0xE7,
-0x10, 0xF0, 0x24, 0x6A, 0xFC, 0xF4, 0xFC, 0x9A,
+0x42, 0xE7, 0x00, 0x6C, 0x5C, 0x6D, 0xD1, 0x67,
+0x28, 0xF3, 0x00, 0x6F, 0x00, 0x18, 0x42, 0xE7,
+0x10, 0xF0, 0x24, 0x6A, 0xDC, 0xF0, 0xF8, 0x9A,
 0x00, 0x6C, 0x8F, 0x6D, 0xD1, 0x67, 0x00, 0x18,
-0xA0, 0xE7, 0x10, 0xF0, 0x24, 0x6B, 0xCE, 0xF4,
-0x50, 0x98, 0x23, 0xF3, 0x08, 0x6C, 0xDC, 0xF4,
-0xA8, 0x9B, 0x80, 0x6E, 0x5D, 0x10, 0x10, 0xF0,
-0x24, 0x6B, 0x9C, 0xF4, 0x78, 0x9B, 0x30, 0xF0,
+0x42, 0xE7, 0x10, 0xF0, 0x24, 0x6B, 0xCE, 0xF4,
+0x50, 0x98, 0x23, 0xF3, 0x08, 0x6C, 0xBC, 0xF0,
+0xA4, 0x9B, 0x80, 0x6E, 0x5D, 0x10, 0x10, 0xF0,
+0x24, 0x6B, 0x7C, 0xF0, 0x74, 0x9B, 0x30, 0xF0,
 0x20, 0x68, 0xCE, 0xF4, 0x50, 0x98, 0x01, 0x69,
 0x2B, 0xE9, 0xC4, 0x36, 0x6D, 0xEE, 0x03, 0xF3,
 0x00, 0x6C, 0xB1, 0x67, 0x40, 0xEA, 0xCE, 0xF4,
 0x50, 0x98, 0xC3, 0xF3, 0x0C, 0x6C, 0xB1, 0x67,
 0x09, 0x6E, 0x40, 0xEA, 0x10, 0xF0, 0x24, 0x6B,
-0xCE, 0xF4, 0x50, 0x98, 0x1C, 0xF5, 0xC0, 0x9B,
+0xCE, 0xF4, 0x50, 0x98, 0xDC, 0xF0, 0xDC, 0x9B,
 0x23, 0xF3, 0x00, 0x6C, 0xB1, 0x67, 0x40, 0xEA,
 0x30, 0xF0, 0x20, 0x6A, 0x48, 0xF0, 0x54, 0xA2,
 0x03, 0x22, 0x01, 0x72, 0x16, 0x60, 0x35, 0x10,
-0x10, 0xF0, 0x24, 0x6A, 0xDC, 0xF4, 0x34, 0x9A,
-0x10, 0xF0, 0x24, 0x6A, 0x1C, 0xF5, 0xE4, 0x9A,
+0x10, 0xF0, 0x24, 0x6A, 0xBC, 0xF0, 0x30, 0x9A,
+0x10, 0xF0, 0x24, 0x6A, 0xFC, 0xF0, 0xE0, 0x9A,
 0x00, 0x6C, 0x56, 0x6D, 0xD1, 0x67, 0x00, 0x18,
-0xA0, 0xE7, 0x10, 0xF0, 0x24, 0x6A, 0x00, 0x6C,
-0x8F, 0x6D, 0xD1, 0x67, 0x1C, 0xF5, 0xE8, 0x9A,
-0x14, 0x10, 0x10, 0xF0, 0x24, 0x6A, 0xDC, 0xF4,
-0x34, 0x9A, 0x10, 0xF0, 0x24, 0x6A, 0x1C, 0xF5,
-0xEC, 0x9A, 0x00, 0x6C, 0x56, 0x6D, 0xD1, 0x67,
-0x00, 0x18, 0xA0, 0xE7, 0x10, 0xF0, 0x24, 0x6A,
-0x1C, 0xF5, 0xF0, 0x9A, 0x00, 0x6C, 0x8F, 0x6D,
-0xD1, 0x67, 0x00, 0x18, 0xA0, 0xE7, 0x10, 0xF0,
-0x24, 0x6B, 0xCE, 0xF4, 0x50, 0x98, 0xDC, 0xF4,
-0xA8, 0x9B, 0x23, 0xF3, 0x08, 0x6C, 0x00, 0x6E,
+0x42, 0xE7, 0x10, 0xF0, 0x24, 0x6A, 0x00, 0x6C,
+0x8F, 0x6D, 0xD1, 0x67, 0xFC, 0xF0, 0xE4, 0x9A,
+0x14, 0x10, 0x10, 0xF0, 0x24, 0x6A, 0xBC, 0xF0,
+0x30, 0x9A, 0x10, 0xF0, 0x24, 0x6A, 0xFC, 0xF0,
+0xE8, 0x9A, 0x00, 0x6C, 0x56, 0x6D, 0xD1, 0x67,
+0x00, 0x18, 0x42, 0xE7, 0x10, 0xF0, 0x24, 0x6A,
+0xFC, 0xF0, 0xEC, 0x9A, 0x00, 0x6C, 0x8F, 0x6D,
+0xD1, 0x67, 0x00, 0x18, 0x42, 0xE7, 0x10, 0xF0,
+0x24, 0x6B, 0xCE, 0xF4, 0x50, 0x98, 0xBC, 0xF0,
+0xA4, 0x9B, 0x23, 0xF3, 0x08, 0x6C, 0x00, 0x6E,
 0x40, 0xEA, 0x07, 0x97, 0x06, 0x91, 0x05, 0x90,
 0x04, 0x63, 0x00, 0xEF, 0xFB, 0x63, 0x09, 0x62,
 0x08, 0xD0, 0x00, 0x6A, 0x7D, 0x67, 0x4C, 0xCB,
-0x10, 0xF0, 0x24, 0x6A, 0xDC, 0xF4, 0xD4, 0x9A,
-0x10, 0xF0, 0x24, 0x6A, 0x5C, 0xF3, 0xF0, 0x9A,
-0x00, 0x6C, 0xA4, 0x67, 0x00, 0x18, 0xA0, 0xE7,
+0x10, 0xF0, 0x24, 0x6A, 0xBC, 0xF0, 0xD0, 0x9A,
+0x10, 0xF0, 0x24, 0x6A, 0x5B, 0xF7, 0xE0, 0x9A,
+0x00, 0x6C, 0xA4, 0x67, 0x00, 0x18, 0x42, 0xE7,
 0x30, 0xF0, 0x20, 0x68, 0x10, 0xF0, 0x24, 0x6B,
-0x1C, 0xF5, 0xB4, 0x9B, 0xCE, 0xF4, 0x50, 0x98,
+0xFC, 0xF0, 0xB0, 0x9B, 0xCE, 0xF4, 0x50, 0x98,
 0xE1, 0xF0, 0x18, 0x6C, 0x00, 0x6E, 0x40, 0xEA,
 0xCE, 0xF4, 0x50, 0x98, 0x01, 0x6D, 0xE1, 0xF0,
 0x1C, 0x6C, 0xAB, 0xED, 0x00, 0x6E, 0x40, 0xEA,
@@ -28714,65 +28553,65 @@ u8 array_mp_8821c_fw_nic[] = {
 0x00, 0x6C, 0x08, 0x6D, 0x00, 0x6E, 0x40, 0xEA,
 0xCE, 0xF4, 0x50, 0x98, 0x01, 0xF0, 0x08, 0x6C,
 0xFF, 0x6D, 0x00, 0x6E, 0x40, 0xEA, 0x10, 0xF0,
-0x24, 0x6B, 0xCE, 0xF4, 0x50, 0x98, 0x1C, 0xF5,
-0xB8, 0x9B, 0x01, 0xF2, 0x04, 0x6C, 0x00, 0x6E,
-0x40, 0xEA, 0x10, 0xF0, 0x24, 0x6A, 0x1C, 0xF5,
-0x7C, 0x9A, 0xFF, 0x6A, 0x80, 0xA3, 0x8C, 0xEA,
+0x24, 0x6B, 0xCE, 0xF4, 0x50, 0x98, 0xFC, 0xF0,
+0xB4, 0x9B, 0x01, 0xF2, 0x04, 0x6C, 0x00, 0x6E,
+0x40, 0xEA, 0x10, 0xF0, 0x24, 0x6A, 0xFC, 0xF0,
+0x78, 0x9A, 0xFF, 0x6A, 0x80, 0xA3, 0x8C, 0xEA,
 0xFE, 0x6C, 0x4C, 0xEC, 0x80, 0xC3, 0x40, 0xC3,
-0x10, 0xF0, 0x24, 0x6A, 0x3C, 0xF5, 0x40, 0x9A,
+0x10, 0xF0, 0x24, 0x6A, 0xFC, 0xF0, 0x5C, 0x9A,
 0x60, 0xA2, 0x01, 0x6A, 0x6C, 0xEA, 0x09, 0x22,
-0x10, 0xF0, 0x24, 0x6A, 0x3C, 0xF5, 0x68, 0x9A,
-0x10, 0xF0, 0x24, 0x6A, 0x3C, 0xF5, 0x44, 0x9A,
+0x10, 0xF0, 0x24, 0x6A, 0x1C, 0xF1, 0x64, 0x9A,
+0x10, 0xF0, 0x24, 0x6A, 0x1C, 0xF1, 0x40, 0x9A,
 0x60, 0xDA, 0x09, 0x97, 0x08, 0x90, 0x05, 0x63,
 0x00, 0xEF, 0x00, 0x65, 0xFC, 0x63, 0x07, 0x62,
 0x06, 0xD1, 0x05, 0xD0, 0xFF, 0x6A, 0x8C, 0xEA,
 0x37, 0x22, 0x30, 0xF0, 0x20, 0x68, 0x10, 0xF0,
-0x24, 0x6B, 0xCE, 0xF4, 0x50, 0x98, 0x3C, 0xF5,
-0xCC, 0x9B, 0x01, 0x69, 0x2B, 0xE9, 0xB1, 0x67,
+0x24, 0x6B, 0xCE, 0xF4, 0x50, 0x98, 0x1C, 0xF1,
+0xC8, 0x9B, 0x01, 0x69, 0x2B, 0xE9, 0xB1, 0x67,
 0x61, 0xF4, 0x00, 0x6C, 0x40, 0xEA, 0x10, 0xF0,
-0x24, 0x6B, 0xCE, 0xF4, 0x50, 0x98, 0x3C, 0xF5,
-0xD0, 0x9B, 0xB1, 0x67, 0x61, 0xF4, 0x00, 0x6C,
+0x24, 0x6B, 0xCE, 0xF4, 0x50, 0x98, 0x1C, 0xF1,
+0xCC, 0x9B, 0xB1, 0x67, 0x61, 0xF4, 0x00, 0x6C,
 0x40, 0xEA, 0x10, 0xF0, 0x24, 0x6B, 0xCE, 0xF4,
-0x50, 0x98, 0x3C, 0xF5, 0xD4, 0x9B, 0xB1, 0x67,
+0x50, 0x98, 0x1C, 0xF1, 0xD0, 0x9B, 0xB1, 0x67,
 0x41, 0xF4, 0x18, 0x6C, 0x40, 0xEA, 0x10, 0xF0,
-0x24, 0x6B, 0x3C, 0xF5, 0xD8, 0x9B, 0xCE, 0xF4,
+0x24, 0x6B, 0x1C, 0xF1, 0xD4, 0x9B, 0xCE, 0xF4,
 0x50, 0x98, 0xB1, 0x67, 0x41, 0xF4, 0x1C, 0x6C,
 0x40, 0xEA, 0xCE, 0xF4, 0x50, 0x98, 0x61, 0xF4,
 0x0C, 0x6C, 0xB1, 0x67, 0x01, 0xF2, 0x15, 0x6E,
 0x40, 0xEA, 0x80, 0x18, 0x89, 0x12, 0x34, 0x10,
 0x30, 0xF0, 0x20, 0x68, 0x10, 0xF0, 0x24, 0x6B,
-0x3C, 0xF5, 0xCC, 0x9B, 0xCE, 0xF4, 0x50, 0x98,
+0x1C, 0xF1, 0xC8, 0x9B, 0xCE, 0xF4, 0x50, 0x98,
 0x01, 0x69, 0x2B, 0xE9, 0x61, 0xF4, 0x00, 0x6C,
 0xB1, 0x67, 0x40, 0xEA, 0x10, 0xF0, 0x24, 0x6B,
-0x3C, 0xF5, 0xDC, 0x9B, 0xCE, 0xF4, 0x50, 0x98,
+0x1C, 0xF1, 0xD8, 0x9B, 0xCE, 0xF4, 0x50, 0x98,
 0x61, 0xF4, 0x00, 0x6C, 0xB1, 0x67, 0x40, 0xEA,
-0x10, 0xF0, 0x24, 0x6B, 0x5C, 0xF5, 0xC0, 0x9B,
+0x10, 0xF0, 0x24, 0x6B, 0x1C, 0xF1, 0xDC, 0x9B,
 0xCE, 0xF4, 0x50, 0x98, 0x41, 0xF4, 0x18, 0x6C,
 0xB1, 0x67, 0x40, 0xEA, 0x10, 0xF0, 0x24, 0x6B,
-0xCE, 0xF4, 0x50, 0x98, 0x5C, 0xF5, 0xC4, 0x9B,
+0xCE, 0xF4, 0x50, 0x98, 0x3C, 0xF1, 0xC0, 0x9B,
 0x41, 0xF4, 0x1C, 0x6C, 0xB1, 0x67, 0x40, 0xEA,
 0xCE, 0xF4, 0x50, 0x98, 0x61, 0xF4, 0x0C, 0x6C,
 0xB1, 0x67, 0x22, 0xF2, 0x0A, 0x6E, 0x40, 0xEA,
 0x10, 0xF0, 0x24, 0x6B, 0x30, 0xF0, 0x20, 0x6A,
-0xCE, 0xF4, 0x50, 0x9A, 0x5C, 0xF4, 0xB8, 0x9B,
+0xCE, 0xF4, 0x50, 0x9A, 0x3C, 0xF0, 0xB4, 0x9B,
 0xA1, 0xF1, 0x04, 0x6C, 0x00, 0x6E, 0x40, 0xEA,
 0x07, 0x97, 0x06, 0x91, 0x05, 0x90, 0x04, 0x63,
 0x00, 0xEF, 0x00, 0x65, 0xFC, 0x63, 0x07, 0x62,
 0x06, 0xD1, 0x05, 0xD0, 0xFF, 0x68, 0x8C, 0xE8,
-0x00, 0x69, 0x10, 0xF0, 0x24, 0x6A, 0xDC, 0xF4,
-0x14, 0x4A, 0xC0, 0x9A, 0x90, 0x67, 0xEF, 0x6D,
-0x00, 0x6F, 0x00, 0x18, 0xA0, 0xE7, 0x10, 0xF0,
-0x24, 0x6B, 0xDC, 0xF4, 0x14, 0x4B, 0xC0, 0x9B,
+0x00, 0x69, 0x10, 0xF0, 0x24, 0x6A, 0xBC, 0xF0,
+0x10, 0x4A, 0xC0, 0x9A, 0x90, 0x67, 0xEF, 0x6D,
+0x00, 0x6F, 0x00, 0x18, 0x42, 0xE7, 0x10, 0xF0,
+0x24, 0x6B, 0xBC, 0xF0, 0x10, 0x4B, 0xC0, 0x9B,
 0x90, 0x67, 0x08, 0x6D, 0x00, 0x6F, 0x00, 0x18,
-0xA0, 0xE7, 0x10, 0xF0, 0x24, 0x6A, 0xDC, 0xF4,
-0x14, 0x4A, 0xC0, 0x9A, 0x90, 0x67, 0x08, 0x6D,
-0x00, 0x18, 0x8D, 0xE7, 0x07, 0x22, 0x01, 0x49,
+0x42, 0xE7, 0x10, 0xF0, 0x24, 0x6A, 0xBC, 0xF0,
+0x10, 0x4A, 0xC0, 0x9A, 0x90, 0x67, 0x08, 0x6D,
+0x00, 0x18, 0x2F, 0xE7, 0x07, 0x22, 0x01, 0x49,
 0xFF, 0xF7, 0x1F, 0x6A, 0x4C, 0xE9, 0x2E, 0xF5,
 0x10, 0x71, 0xDB, 0x61, 0x07, 0x97, 0x06, 0x91,
 0x05, 0x90, 0x04, 0x63, 0x00, 0xEF, 0x00, 0x65,
 0xFD, 0x63, 0x05, 0x62, 0x10, 0xF0, 0x24, 0x6A,
-0xDC, 0xF4, 0xD4, 0x9A, 0x00, 0x6C, 0x18, 0x6D,
-0x00, 0x18, 0x8D, 0xE7, 0x30, 0xF0, 0x20, 0x6B,
+0xBC, 0xF0, 0xD0, 0x9A, 0x00, 0x6C, 0x18, 0x6D,
+0x00, 0x18, 0x2F, 0xE7, 0x30, 0xF0, 0x20, 0x6B,
 0x01, 0xF4, 0x00, 0x6C, 0xC0, 0xF1, 0x08, 0x4B,
 0x4C, 0xEC, 0x87, 0xF6, 0x50, 0xDB, 0x82, 0x32,
 0x4A, 0x32, 0x02, 0x72, 0x0A, 0x60, 0x03, 0x6C,
@@ -28780,7 +28619,7 @@ u8 array_mp_8821c_fw_nic[] = {
 0x05, 0x60, 0x06, 0x10, 0x87, 0xF6, 0x8D, 0xC3,
 0x03, 0x10, 0x01, 0x6A, 0x87, 0xF6, 0x4D, 0xC3,
 0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A,
-0x10, 0xF0, 0x24, 0x6B, 0x5C, 0xF3, 0x70, 0x9B,
+0x10, 0xF0, 0x24, 0x6B, 0x5B, 0xF7, 0x60, 0x9B,
 0x87, 0xF6, 0x90, 0x9A, 0x8C, 0xEB, 0x62, 0x33,
 0x62, 0x33, 0x87, 0xF6, 0x6C, 0xC2, 0x05, 0x97,
 0x03, 0x63, 0x00, 0xEF, 0xFD, 0x63, 0x05, 0x62,
@@ -28791,8 +28630,8 @@ u8 array_mp_8821c_fw_nic[] = {
 0x64, 0x9A, 0x30, 0xF0, 0x20, 0x6C, 0xC8, 0xF0,
 0x04, 0x4C, 0xE7, 0xF6, 0x68, 0xDA, 0x30, 0xF0,
 0x20, 0x6A, 0xEF, 0xF4, 0x08, 0x4A, 0x60, 0xF6,
-0x66, 0xAA, 0x00, 0x6D, 0x60, 0xF6, 0x68, 0xCA,
-0x60, 0xF6, 0x74, 0xA2, 0x60, 0xF6, 0x75, 0xC2,
+0x62, 0xAA, 0x00, 0x6D, 0x60, 0xF6, 0x64, 0xCA,
+0x60, 0xF6, 0x70, 0xA2, 0x60, 0xF6, 0x71, 0xC2,
 0x30, 0xF0, 0x20, 0x6B, 0x68, 0xF0, 0x1A, 0x4B,
 0x40, 0xA3, 0xB0, 0x36, 0x48, 0xC3, 0x30, 0xF0,
 0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A, 0xC9, 0xE2,
@@ -28801,16 +28640,16 @@ u8 array_mp_8821c_fw_nic[] = {
 0xC0, 0xCA, 0x02, 0x4A, 0x8A, 0xEA, 0xF6, 0x61,
 0x01, 0x4D, 0x02, 0x75, 0x01, 0x4B, 0x10, 0x4C,
 0xE7, 0x61, 0x30, 0xF0, 0x20, 0x6A, 0xEF, 0xF4,
-0x08, 0x4A, 0x78, 0x67, 0x60, 0xF6, 0x74, 0xC2,
-0x78, 0x67, 0x60, 0xF6, 0x66, 0xCA, 0x30, 0xF0,
+0x08, 0x4A, 0x78, 0x67, 0x60, 0xF6, 0x70, 0xC2,
+0x78, 0x67, 0x60, 0xF6, 0x62, 0xCA, 0x30, 0xF0,
 0x20, 0x6B, 0x00, 0x6C, 0xC0, 0xF1, 0x08, 0x4B,
-0x60, 0xF6, 0x90, 0xC2, 0x60, 0xF6, 0x91, 0xC2,
-0x60, 0xF6, 0x8A, 0xC2, 0x60, 0xF6, 0x8B, 0xC2,
-0x60, 0xF6, 0x8C, 0xC2, 0x87, 0xF6, 0x50, 0x9B,
+0x60, 0xF6, 0x8C, 0xC2, 0x60, 0xF6, 0x8D, 0xC2,
+0x60, 0xF6, 0x86, 0xC2, 0x60, 0xF6, 0x87, 0xC2,
+0x60, 0xF6, 0x88, 0xC2, 0x87, 0xF6, 0x50, 0x9B,
 0x01, 0x6D, 0xA7, 0xF6, 0xB2, 0xC3, 0xA7, 0xF6,
 0xB3, 0xC3, 0xE7, 0xF6, 0x44, 0xDB, 0x17, 0x10,
-0x10, 0xF0, 0x24, 0x6A, 0xDC, 0xF4, 0xD4, 0x9A,
-0x00, 0x6C, 0x58, 0x6D, 0x00, 0x18, 0x8D, 0xE7,
+0x10, 0xF0, 0x24, 0x6A, 0xBC, 0xF0, 0xD0, 0x9A,
+0x00, 0x6C, 0x58, 0x6D, 0x00, 0x18, 0x2F, 0xE7,
 0x22, 0xF0, 0x1A, 0x48, 0x30, 0xF0, 0x20, 0x6B,
 0xC0, 0xF1, 0x08, 0x4B, 0x08, 0x30, 0x0D, 0xE3,
 0x41, 0xDB, 0x05, 0x10, 0xFE, 0x4C, 0x4C, 0xEC,
@@ -28824,157 +28663,157 @@ u8 array_mp_8821c_fw_nic[] = {
 0x03, 0x63, 0x00, 0xEF, 0xFC, 0x63, 0x07, 0x62,
 0x06, 0xD1, 0x05, 0xD0, 0x00, 0x68, 0x09, 0xD5,
 0x24, 0x67, 0x09, 0x93, 0x00, 0x6C, 0x09, 0xE3,
-0xA0, 0xA2, 0x10, 0xF0, 0x24, 0x6A, 0xDC, 0xF4,
-0xD4, 0x9A, 0x01, 0x48, 0x00, 0x18, 0x8D, 0xE7,
+0xA0, 0xA2, 0x10, 0xF0, 0x24, 0x6A, 0xBC, 0xF0,
+0xD0, 0x9A, 0x01, 0x48, 0x00, 0x18, 0x2F, 0xE7,
 0x05, 0x70, 0x40, 0xD9, 0x04, 0x49, 0xF1, 0x61,
 0x07, 0x97, 0x06, 0x91, 0x05, 0x90, 0x04, 0x63,
 0x00, 0xEF, 0x00, 0x65, 0xFB, 0x63, 0x09, 0x62,
 0x08, 0xD1, 0x07, 0xD0, 0x10, 0xF0, 0x24, 0x6A,
-0x0C, 0xD6, 0xFF, 0x68, 0xDC, 0xF4, 0xD4, 0x9A,
+0x0C, 0xD6, 0xFF, 0x68, 0xBC, 0xF0, 0xD0, 0x9A,
 0xFF, 0xF7, 0x1F, 0x69, 0x0C, 0x97, 0x8C, 0xE8,
 0xAC, 0xE9, 0x90, 0x67, 0xB1, 0x67, 0x00, 0x18,
-0xA0, 0xE7, 0x00, 0x6A, 0x04, 0xD2, 0x10, 0xF0,
-0x24, 0x6B, 0xDC, 0xF4, 0x14, 0x4B, 0xC0, 0x9B,
-0x90, 0x67, 0xB1, 0x67, 0x00, 0x18, 0x8D, 0xE7,
+0x42, 0xE7, 0x00, 0x6A, 0x04, 0xD2, 0x10, 0xF0,
+0x24, 0x6B, 0xBC, 0xF0, 0x10, 0x4B, 0xC0, 0x9B,
+0x90, 0x67, 0xB1, 0x67, 0x00, 0x18, 0x2F, 0xE7,
 0x0C, 0x93, 0x6E, 0xEA, 0x16, 0x22, 0x30, 0xF0,
 0x20, 0x6A, 0xCE, 0xF4, 0x5C, 0x9A, 0x0A, 0x6C,
-0x40, 0xEA, 0x10, 0xF0, 0x24, 0x6A, 0xDC, 0xF4,
-0x14, 0x4A, 0xC0, 0x9A, 0x0C, 0x97, 0x90, 0x67,
-0xB1, 0x67, 0x00, 0x18, 0xA0, 0xE7, 0x04, 0x93,
+0x40, 0xEA, 0x10, 0xF0, 0x24, 0x6A, 0xBC, 0xF0,
+0x10, 0x4A, 0xC0, 0x9A, 0x0C, 0x97, 0x90, 0x67,
+0xB1, 0x67, 0x00, 0x18, 0x42, 0xE7, 0x04, 0x93,
 0x01, 0x4B, 0xE0, 0xF3, 0x08, 0x73, 0x04, 0xD3,
 0xDE, 0x61, 0x09, 0x97, 0x08, 0x91, 0x07, 0x90,
 0x05, 0x63, 0x00, 0xEF, 0xFB, 0x63, 0x09, 0x62,
 0x08, 0xD1, 0x07, 0xD0, 0x30, 0xF0, 0x20, 0x68,
 0xFF, 0x6A, 0x24, 0x67, 0xEF, 0xF4, 0x08, 0x48,
-0x4C, 0xED, 0x4C, 0xE9, 0x60, 0xF6, 0x58, 0xA0,
+0x4C, 0xED, 0x4C, 0xE9, 0x60, 0xF6, 0x54, 0xA0,
 0x04, 0xD5, 0x60, 0x22, 0x06, 0x25, 0x12, 0x6A,
-0x40, 0xF6, 0x5D, 0xC0, 0x02, 0x6A, 0x60, 0xF6,
-0x40, 0xD8, 0x10, 0xF0, 0x24, 0x6B, 0x30, 0xF0,
-0x20, 0x68, 0x9C, 0xF4, 0x78, 0x9B, 0xCE, 0xF4,
+0x40, 0xF6, 0x59, 0xC0, 0x02, 0x6A, 0x40, 0xF6,
+0x5C, 0xD8, 0x10, 0xF0, 0x24, 0x6B, 0x30, 0xF0,
+0x20, 0x68, 0x7C, 0xF0, 0x74, 0x9B, 0xCE, 0xF4,
 0x50, 0x98, 0x24, 0x36, 0x01, 0x6D, 0x6D, 0xEE,
 0x03, 0xF3, 0x00, 0x6C, 0xAB, 0xED, 0x40, 0xEA,
-0x10, 0xF0, 0x24, 0x6B, 0xDC, 0xF4, 0xA8, 0x9B,
+0x10, 0xF0, 0x24, 0x6B, 0xBC, 0xF0, 0xA4, 0x9B,
 0xCE, 0xF4, 0x50, 0x98, 0x23, 0xF3, 0x08, 0x6C,
 0x80, 0x6E, 0x40, 0xEA, 0x30, 0xF0, 0x21, 0x6B,
-0x50, 0xF3, 0xC5, 0xA3, 0xCE, 0xF4, 0x50, 0x98,
+0x50, 0xF3, 0xC1, 0xA3, 0xCE, 0xF4, 0x50, 0x98,
 0xC3, 0xF3, 0x0C, 0x6C, 0xFF, 0x6D, 0x40, 0xEA,
-0x10, 0xF0, 0x24, 0x6B, 0x5C, 0xF5, 0xC8, 0x9B,
+0x10, 0xF0, 0x24, 0x6B, 0x3C, 0xF1, 0xC4, 0x9B,
 0xCE, 0xF4, 0x50, 0x98, 0x01, 0x6D, 0x03, 0xF3,
 0x18, 0x6C, 0xAB, 0xED, 0x40, 0xEA, 0x10, 0xF0,
-0x24, 0x6B, 0xDC, 0xF4, 0xCC, 0x9B, 0xCE, 0xF4,
+0x24, 0x6B, 0xBC, 0xF0, 0xC8, 0x9B, 0xCE, 0xF4,
 0x50, 0x98, 0x01, 0x6D, 0x23, 0xF3, 0x00, 0x6C,
 0xAB, 0xED, 0x40, 0xEA, 0x10, 0xF0, 0x24, 0x6B,
-0xFC, 0xF4, 0xD0, 0x9B, 0xCE, 0xF4, 0x50, 0x98,
+0xDC, 0xF0, 0xCC, 0x9B, 0xCE, 0xF4, 0x50, 0x98,
 0x01, 0x6D, 0x23, 0xF3, 0x04, 0x6C, 0xAB, 0xED,
-0x40, 0xEA, 0x10, 0xF0, 0x24, 0x6A, 0xDC, 0xF4,
-0xD8, 0x9A, 0x91, 0x67, 0x78, 0x6D, 0x80, 0x18,
+0x40, 0xEA, 0x10, 0xF0, 0x24, 0x6A, 0xBC, 0xF0,
+0xD4, 0x9A, 0x91, 0x67, 0x78, 0x6D, 0x80, 0x18,
 0x8F, 0x13, 0x91, 0x67, 0x5C, 0x6D, 0x20, 0xF3,
 0x00, 0x6E, 0x80, 0x18, 0x8F, 0x13, 0x10, 0xF0,
-0x24, 0x6A, 0x91, 0x67, 0x8F, 0x6D, 0xDC, 0xF4,
-0xDC, 0x9A, 0xB2, 0x10, 0x10, 0xF0, 0x24, 0x6B,
-0x9C, 0xF4, 0x78, 0x9B, 0x30, 0xF0, 0x20, 0x6A,
+0x24, 0x6A, 0x91, 0x67, 0x8F, 0x6D, 0xBC, 0xF0,
+0xD8, 0x9A, 0xB2, 0x10, 0x10, 0xF0, 0x24, 0x6B,
+0x7C, 0xF0, 0x74, 0x9B, 0x30, 0xF0, 0x20, 0x6A,
 0xCE, 0xF4, 0x50, 0x9A, 0x24, 0x36, 0x01, 0x6D,
 0x03, 0xF3, 0x00, 0x6C, 0xAB, 0xED, 0x6D, 0xEE,
 0x40, 0xEA, 0x30, 0xF0, 0x20, 0x6A, 0x48, 0xF0,
 0x54, 0xA2, 0x03, 0x22, 0x01, 0x72, 0x4B, 0x60,
 0x9D, 0x10, 0x04, 0x92, 0x06, 0x22, 0x12, 0x6A,
-0x40, 0xF6, 0x5D, 0xC0, 0x02, 0x6A, 0x60, 0xF6,
-0x40, 0xD8, 0x30, 0xF0, 0x20, 0x6B, 0x30, 0xF0,
+0x40, 0xF6, 0x59, 0xC0, 0x02, 0x6A, 0x40, 0xF6,
+0x5C, 0xD8, 0x30, 0xF0, 0x20, 0x6B, 0x30, 0xF0,
 0x20, 0x68, 0xEF, 0xF4, 0x08, 0x4B, 0x40, 0xF6,
-0xDD, 0xA3, 0xCE, 0xF4, 0x50, 0x98, 0x04, 0xD3,
+0xD9, 0xA3, 0xCE, 0xF4, 0x50, 0x98, 0x04, 0xD3,
 0xC3, 0xF3, 0x0C, 0x6C, 0xFF, 0x6D, 0x40, 0xEA,
-0x10, 0xF0, 0x24, 0x6B, 0xDC, 0xF4, 0xA8, 0x9B,
+0x10, 0xF0, 0x24, 0x6B, 0xBC, 0xF0, 0xA4, 0x9B,
 0xCE, 0xF4, 0x50, 0x98, 0x23, 0xF3, 0x08, 0x6C,
 0x00, 0x6E, 0x40, 0xEA, 0x10, 0xF0, 0x24, 0x6B,
-0xDC, 0xF4, 0xCC, 0x9B, 0xCE, 0xF4, 0x50, 0x98,
+0xBC, 0xF0, 0xC8, 0x9B, 0xCE, 0xF4, 0x50, 0x98,
 0x01, 0x6D, 0x23, 0xF3, 0x00, 0x6C, 0xAB, 0xED,
 0x40, 0xEA, 0x04, 0x94, 0x10, 0xF0, 0x24, 0x6A,
-0x5B, 0xF6, 0x18, 0x4A, 0x60, 0xF6, 0x60, 0x9C,
+0x3B, 0xF2, 0x14, 0x4A, 0x40, 0xF6, 0x7C, 0x9C,
 0x01, 0x6D, 0x23, 0xF3, 0x04, 0x6C, 0x49, 0xE3,
-0xC0, 0xA2, 0x10, 0xF0, 0x24, 0x6B, 0x5C, 0xF5,
-0x6C, 0x9B, 0xCE, 0xF4, 0x50, 0x98, 0xC0, 0x36,
+0xC0, 0xA2, 0x10, 0xF0, 0x24, 0x6B, 0x3C, 0xF1,
+0x68, 0x9B, 0xCE, 0xF4, 0x50, 0x98, 0xC0, 0x36,
 0xC8, 0x36, 0xAB, 0xED, 0x6D, 0xEE, 0x40, 0xEA,
 0x10, 0xF0, 0x24, 0x6A, 0x91, 0x67, 0x56, 0x6D,
-0xFC, 0xF4, 0xC4, 0x9A, 0x49, 0x10, 0x04, 0x92,
-0x06, 0x22, 0x1B, 0x6A, 0x40, 0xF6, 0x5D, 0xC0,
-0x02, 0x6A, 0x60, 0xF6, 0x40, 0xD8, 0x30, 0xF0,
+0xDC, 0xF0, 0xC0, 0x9A, 0x49, 0x10, 0x04, 0x92,
+0x06, 0x22, 0x1B, 0x6A, 0x40, 0xF6, 0x59, 0xC0,
+0x02, 0x6A, 0x40, 0xF6, 0x5C, 0xD8, 0x30, 0xF0,
 0x20, 0x6B, 0x30, 0xF0, 0x20, 0x68, 0xEF, 0xF4,
-0x08, 0x4B, 0x40, 0xF6, 0xDD, 0xA3, 0xCE, 0xF4,
+0x08, 0x4B, 0x40, 0xF6, 0xD9, 0xA3, 0xCE, 0xF4,
 0x50, 0x98, 0x04, 0xD3, 0xC3, 0xF3, 0x0C, 0x6C,
 0xFF, 0x6D, 0x40, 0xEA, 0x10, 0xF0, 0x24, 0x6B,
-0xDC, 0xF4, 0xA8, 0x9B, 0xCE, 0xF4, 0x50, 0x98,
+0xBC, 0xF0, 0xA4, 0x9B, 0xCE, 0xF4, 0x50, 0x98,
 0x23, 0xF3, 0x08, 0x6C, 0x00, 0x6E, 0x40, 0xEA,
-0x10, 0xF0, 0x24, 0x6B, 0xFC, 0xF4, 0xCC, 0x9B,
+0x10, 0xF0, 0x24, 0x6B, 0xDC, 0xF0, 0xC8, 0x9B,
 0xCE, 0xF4, 0x50, 0x98, 0x01, 0x6D, 0x23, 0xF3,
 0x00, 0x6C, 0xAB, 0xED, 0x40, 0xEA, 0x04, 0x94,
-0x10, 0xF0, 0x24, 0x6A, 0x7B, 0xF6, 0x00, 0x4A,
-0x60, 0xF6, 0x60, 0x9C, 0x01, 0x6D, 0x23, 0xF3,
+0x10, 0xF0, 0x24, 0x6A, 0x3B, 0xF2, 0x1C, 0x4A,
+0x40, 0xF6, 0x7C, 0x9C, 0x01, 0x6D, 0x23, 0xF3,
 0x04, 0x6C, 0x49, 0xE3, 0xC0, 0xA2, 0x10, 0xF0,
-0x24, 0x6B, 0x5C, 0xF5, 0x6C, 0x9B, 0xCE, 0xF4,
+0x24, 0x6B, 0x3C, 0xF1, 0x68, 0x9B, 0xCE, 0xF4,
 0x50, 0x98, 0xC0, 0x36, 0xC8, 0x36, 0xAB, 0xED,
 0x6D, 0xEE, 0x40, 0xEA, 0x10, 0xF0, 0x24, 0x6A,
-0x5C, 0xF5, 0xD0, 0x9A, 0x91, 0x67, 0x56, 0x6D,
+0x3C, 0xF1, 0xCC, 0x9A, 0x91, 0x67, 0x56, 0x6D,
 0x80, 0x18, 0x8F, 0x13, 0x10, 0xF0, 0x24, 0x6A,
-0xFC, 0xF4, 0xC8, 0x9A, 0x91, 0x67, 0x8F, 0x6D,
+0xDC, 0xF0, 0xC4, 0x9A, 0x91, 0x67, 0x8F, 0x6D,
 0x80, 0x18, 0x8F, 0x13, 0x09, 0x97, 0x08, 0x91,
 0x07, 0x90, 0x05, 0x63, 0x00, 0xEF, 0x00, 0x65,
 0xFC, 0x63, 0x07, 0x62, 0x06, 0xD1, 0x05, 0xD0,
-0x10, 0xF0, 0x24, 0x6A, 0xDC, 0xF4, 0x34, 0x9A,
+0x10, 0xF0, 0x24, 0x6A, 0xBC, 0xF0, 0x30, 0x9A,
 0x08, 0xD4, 0x00, 0x6C, 0x05, 0x67, 0xD1, 0x67,
-0xE4, 0x67, 0xEF, 0x6D, 0x00, 0x18, 0xA0, 0xE7,
+0xE4, 0x67, 0xEF, 0x6D, 0x00, 0x18, 0x42, 0xE7,
 0x00, 0x6C, 0xE4, 0x67, 0xD1, 0x67, 0xEE, 0x6D,
-0x00, 0x18, 0xA0, 0xE7, 0xC0, 0x98, 0x11, 0x6A,
+0x00, 0x18, 0x42, 0xE7, 0xC0, 0x98, 0x11, 0x6A,
 0x4B, 0xEA, 0x4C, 0xEE, 0x00, 0x6C, 0xDF, 0x6D,
 0x80, 0x18, 0x8F, 0x13, 0xC1, 0x98, 0x11, 0x6A,
 0x4B, 0xEA, 0x4C, 0xEE, 0x00, 0x6C, 0xDE, 0x6D,
 0x80, 0x18, 0x8F, 0x13, 0x08, 0x92, 0xE2, 0x98,
 0xD1, 0x67, 0xA2, 0xA2, 0x00, 0x6C, 0x00, 0x18,
-0xA0, 0xE7, 0x08, 0x92, 0xE3, 0x98, 0xD1, 0x67,
-0xA3, 0xA2, 0x00, 0x6C, 0x00, 0x18, 0xA0, 0xE7,
+0x42, 0xE7, 0x08, 0x92, 0xE3, 0x98, 0xD1, 0x67,
+0xA3, 0xA2, 0x00, 0x6C, 0x00, 0x18, 0x42, 0xE7,
 0x44, 0x98, 0x02, 0x6F, 0xEB, 0xEF, 0xD1, 0x67,
 0x4C, 0xEF, 0x00, 0x6C, 0x01, 0x6D, 0x00, 0x18,
-0xA0, 0xE7, 0x07, 0x97, 0x06, 0x91, 0x05, 0x90,
+0x42, 0xE7, 0x07, 0x97, 0x06, 0x91, 0x05, 0x90,
 0x04, 0x63, 0x00, 0xEF, 0xFC, 0x63, 0x07, 0x62,
 0x06, 0xD1, 0x05, 0xD0, 0x10, 0xF0, 0x24, 0x6B,
-0x30, 0xF0, 0x20, 0x68, 0x9C, 0xF4, 0xD8, 0x9B,
+0x30, 0xF0, 0x20, 0x68, 0x7C, 0xF0, 0xD4, 0x9B,
 0xCE, 0xF4, 0x50, 0x98, 0x01, 0x69, 0x2B, 0xE9,
 0x03, 0xF3, 0x00, 0x6C, 0xB1, 0x67, 0x40, 0xEA,
 0xCE, 0xF4, 0x50, 0x98, 0xA3, 0xF3, 0x18, 0x6C,
 0xB1, 0x67, 0x00, 0x6E, 0x40, 0xEA, 0x10, 0xF0,
-0x24, 0x6A, 0xDC, 0xF4, 0x14, 0x9A, 0x00, 0x6C,
-0xDF, 0x6D, 0xD0, 0x67, 0x00, 0x18, 0x8D, 0xE7,
+0x24, 0x6A, 0xBC, 0xF0, 0x10, 0x9A, 0x00, 0x6C,
+0xDF, 0x6D, 0xD0, 0x67, 0x00, 0x18, 0x2F, 0xE7,
 0x01, 0xF0, 0x13, 0x6B, 0x6B, 0xEB, 0x4C, 0xEB,
 0x01, 0xF0, 0x02, 0x6E, 0x00, 0x6C, 0xDF, 0x6D,
 0x6D, 0xEE, 0x80, 0x18, 0x8F, 0x13, 0x30, 0xF0,
-0x21, 0x6A, 0x70, 0xF3, 0x40, 0xA2, 0x10, 0x22,
+0x21, 0x6A, 0x50, 0xF3, 0x5C, 0xA2, 0x10, 0x22,
 0x00, 0x6C, 0xDE, 0x6D, 0xD0, 0x67, 0x00, 0x18,
-0x8D, 0xE7, 0x10, 0xF0, 0x11, 0x6B, 0x6B, 0xEB,
+0x2F, 0xE7, 0x10, 0xF0, 0x11, 0x6B, 0x6B, 0xEB,
 0x4C, 0xEB, 0x10, 0xF0, 0x00, 0x6E, 0x00, 0x6C,
 0xDE, 0x6D, 0x6D, 0xEE, 0x80, 0x18, 0x8F, 0x13,
-0x30, 0xF0, 0x21, 0x6A, 0x70, 0xF3, 0x40, 0xA2,
-0x5C, 0x2A, 0x10, 0xF0, 0x24, 0x6A, 0x5C, 0xF3,
-0x1C, 0x9A, 0x00, 0x6C, 0xEF, 0x6D, 0xD0, 0x67,
+0x30, 0xF0, 0x21, 0x6A, 0x50, 0xF3, 0x5C, 0xA2,
+0x5C, 0x2A, 0x10, 0xF0, 0x24, 0x6A, 0x5B, 0xF7,
+0x0C, 0x9A, 0x00, 0x6C, 0xEF, 0x6D, 0xD0, 0x67,
 0x80, 0x18, 0x8F, 0x13, 0x00, 0x6C, 0x33, 0x6D,
 0x24, 0x6E, 0x80, 0x18, 0x8F, 0x13, 0x00, 0x6C,
 0x3E, 0x6D, 0x3F, 0x6E, 0x80, 0x18, 0x8F, 0x13,
-0x10, 0xF0, 0x24, 0x6A, 0x5C, 0xF5, 0xD4, 0x9A,
+0x10, 0xF0, 0x24, 0x6A, 0x3C, 0xF1, 0xD0, 0x9A,
 0x00, 0x6C, 0x3F, 0x6D, 0x80, 0x18, 0x8F, 0x13,
 0x00, 0x6C, 0xEF, 0x6D, 0xC4, 0x67, 0x80, 0x18,
 0x8F, 0x13, 0x30, 0xF0, 0x20, 0x6A, 0x48, 0xF0,
 0x54, 0xA2, 0x01, 0x72, 0x17, 0x61, 0x01, 0x6F,
 0x00, 0x6C, 0xEF, 0x6D, 0xD0, 0x67, 0x00, 0x18,
-0xA0, 0xE7, 0x00, 0x6C, 0x33, 0x6D, 0x26, 0x6E,
+0x42, 0xE7, 0x00, 0x6C, 0x33, 0x6D, 0x26, 0x6E,
 0x80, 0x18, 0x8F, 0x13, 0x00, 0x6C, 0x3E, 0x6D,
 0x37, 0x6E, 0x80, 0x18, 0x8F, 0x13, 0x10, 0xF0,
-0x24, 0x6A, 0x00, 0x6C, 0x3F, 0x6D, 0x5C, 0xF5,
-0xD8, 0x9A, 0x16, 0x10, 0x01, 0x6F, 0x00, 0x6C,
-0xEF, 0x6D, 0xD0, 0x67, 0x00, 0x18, 0xA0, 0xE7,
+0x24, 0x6A, 0x00, 0x6C, 0x3F, 0x6D, 0x3C, 0xF1,
+0xD4, 0x9A, 0x16, 0x10, 0x01, 0x6F, 0x00, 0x6C,
+0xEF, 0x6D, 0xD0, 0x67, 0x00, 0x18, 0x42, 0xE7,
 0x00, 0x6C, 0x33, 0x6D, 0x26, 0x6E, 0x80, 0x18,
 0x8F, 0x13, 0x00, 0x6C, 0x3E, 0x6D, 0x37, 0x6E,
 0x80, 0x18, 0x8F, 0x13, 0x10, 0xF0, 0x24, 0x6A,
-0x5C, 0xF5, 0xDC, 0x9A, 0x00, 0x6C, 0x3F, 0x6D,
+0x3C, 0xF1, 0xD8, 0x9A, 0x00, 0x6C, 0x3F, 0x6D,
 0x80, 0x18, 0x8F, 0x13, 0x00, 0x6C, 0xEF, 0x6D,
-0xD0, 0x67, 0xE4, 0x67, 0x00, 0x18, 0xA0, 0xE7,
+0xD0, 0x67, 0xE4, 0x67, 0x00, 0x18, 0x42, 0xE7,
 0x16, 0x10, 0x00, 0x6C, 0xEE, 0x6D, 0x02, 0xF0,
 0x00, 0x6E, 0x80, 0x18, 0x8F, 0x13, 0x00, 0x6C,
 0x33, 0x6D, 0x04, 0x6E, 0x80, 0x18, 0x8F, 0x13,
@@ -28985,95 +28824,95 @@ u8 array_mp_8821c_fw_nic[] = {
 0xFB, 0x63, 0x09, 0x62, 0x08, 0xD1, 0x07, 0xD0,
 0xFF, 0x68, 0xFF, 0xF7, 0x1F, 0x69, 0x8C, 0xE8,
 0xAC, 0xE9, 0x90, 0x67, 0xB1, 0x67, 0x0C, 0xD6,
-0x0D, 0xD7, 0x00, 0x18, 0xA0, 0xE7, 0x00, 0x6A,
+0x0D, 0xD7, 0x00, 0x18, 0x42, 0xE7, 0x00, 0x6A,
 0x04, 0xD2, 0x0C, 0x96, 0x90, 0x67, 0xB1, 0x67,
-0x00, 0x18, 0x8D, 0xE7, 0x0D, 0x93, 0x6E, 0xEA,
+0x00, 0x18, 0x2F, 0xE7, 0x0D, 0x93, 0x6E, 0xEA,
 0x12, 0x22, 0x30, 0xF0, 0x20, 0x6A, 0xCE, 0xF4,
 0x5C, 0x9A, 0x0A, 0x6C, 0x40, 0xEA, 0x0C, 0x96,
 0x0D, 0x97, 0x90, 0x67, 0xB1, 0x67, 0x00, 0x18,
-0xA0, 0xE7, 0x04, 0x92, 0x01, 0x4A, 0xE0, 0xF3,
+0x42, 0xE7, 0x04, 0x92, 0x01, 0x4A, 0xE0, 0xF3,
 0x08, 0x72, 0x04, 0xD2, 0xE6, 0x61, 0x09, 0x97,
 0x08, 0x91, 0x07, 0x90, 0x05, 0x63, 0x00, 0xEF,
 0xFB, 0x63, 0x09, 0x62, 0x08, 0xD1, 0x07, 0xD0,
 0xFF, 0x6A, 0x24, 0x67, 0x4C, 0xED, 0x4C, 0xE9,
-0x30, 0xF0, 0x21, 0x6A, 0x70, 0xF3, 0x40, 0xA2,
+0x30, 0xF0, 0x21, 0x6A, 0x50, 0xF3, 0x5C, 0xA2,
 0x04, 0xD5, 0x56, 0x22, 0x10, 0xF0, 0x24, 0x6A,
-0x30, 0xF0, 0x20, 0x68, 0x9C, 0xF4, 0x58, 0x9A,
+0x30, 0xF0, 0x20, 0x68, 0x7C, 0xF0, 0x54, 0x9A,
 0xCE, 0xF4, 0x70, 0x98, 0x24, 0x36, 0x01, 0x6D,
 0x4D, 0xEE, 0x03, 0xF3, 0x00, 0x6C, 0xAB, 0xED,
 0x40, 0xEB, 0xCE, 0xF4, 0x50, 0x98, 0x01, 0x6D,
 0xC3, 0xF3, 0x0C, 0x6C, 0xAB, 0xED, 0x1B, 0x6E,
-0x40, 0xEA, 0x10, 0xF0, 0x24, 0x6B, 0xDC, 0xF4,
-0x08, 0x4B, 0xCE, 0xF4, 0x50, 0x98, 0xA0, 0x9B,
+0x40, 0xEA, 0x10, 0xF0, 0x24, 0x6B, 0xBC, 0xF0,
+0x04, 0x4B, 0xCE, 0xF4, 0x50, 0x98, 0xA0, 0x9B,
 0x23, 0xF3, 0x00, 0x6C, 0x00, 0x6E, 0x40, 0xEA,
-0x10, 0xF0, 0x24, 0x6B, 0xDC, 0xF4, 0x08, 0x4B,
+0x10, 0xF0, 0x24, 0x6B, 0xBC, 0xF0, 0x04, 0x4B,
 0xCE, 0xF4, 0x50, 0x98, 0xA0, 0x9B, 0x23, 0xF3,
 0x08, 0x6C, 0x80, 0x6E, 0x40, 0xEA, 0x04, 0x93,
-0x10, 0xF0, 0x24, 0x6A, 0xDC, 0xF4, 0x14, 0x9A,
-0x60, 0x32, 0x10, 0xF0, 0x24, 0x6B, 0x7C, 0xF5,
-0x60, 0x9B, 0x58, 0x32, 0x91, 0x67, 0x6D, 0xEA,
-0x10, 0xF0, 0x24, 0x6B, 0xFC, 0xF4, 0xF8, 0x9B,
+0x10, 0xF0, 0x24, 0x6A, 0xBC, 0xF0, 0x10, 0x9A,
+0x60, 0x32, 0x10, 0xF0, 0x24, 0x6B, 0x3C, 0xF1,
+0x7C, 0x9B, 0x58, 0x32, 0x91, 0x67, 0x6D, 0xEA,
+0x10, 0xF0, 0x24, 0x6B, 0xDC, 0xF0, 0xF4, 0x9B,
 0x78, 0x6D, 0xD0, 0x67, 0x4C, 0xEF, 0x00, 0x18,
-0xA0, 0xE7, 0x91, 0x67, 0x5C, 0x6D, 0xD0, 0x67,
-0x2A, 0xF3, 0x00, 0x6F, 0x00, 0x18, 0xA0, 0xE7,
-0x10, 0xF0, 0x24, 0x6A, 0xFC, 0xF4, 0xFC, 0x9A,
+0x42, 0xE7, 0x91, 0x67, 0x5C, 0x6D, 0xD0, 0x67,
+0x2A, 0xF3, 0x00, 0x6F, 0x00, 0x18, 0x42, 0xE7,
+0x10, 0xF0, 0x24, 0x6A, 0xDC, 0xF0, 0xF8, 0x9A,
 0x91, 0x67, 0x8F, 0x6D, 0xD0, 0x67, 0x00, 0x18,
-0xA0, 0xE7, 0x00, 0x6C, 0xEE, 0x6D, 0x55, 0x10,
+0x42, 0xE7, 0x00, 0x6C, 0xEE, 0x6D, 0x55, 0x10,
 0x10, 0xF0, 0x24, 0x6A, 0x30, 0xF0, 0x20, 0x68,
-0x9C, 0xF4, 0x58, 0x9A, 0xCE, 0xF4, 0x70, 0x98,
+0x7C, 0xF0, 0x54, 0x9A, 0xCE, 0xF4, 0x70, 0x98,
 0x24, 0x36, 0x01, 0x6D, 0x4D, 0xEE, 0x03, 0xF3,
 0x00, 0x6C, 0xAB, 0xED, 0x40, 0xEB, 0xCE, 0xF4,
 0x50, 0x98, 0x01, 0x6D, 0xC3, 0xF3, 0x0C, 0x6C,
 0xAB, 0xED, 0x09, 0x6E, 0x40, 0xEA, 0x10, 0xF0,
-0x24, 0x6B, 0xDC, 0xF4, 0x08, 0x4B, 0xCE, 0xF4,
+0x24, 0x6B, 0xBC, 0xF0, 0x04, 0x4B, 0xCE, 0xF4,
 0x50, 0x98, 0xA0, 0x9B, 0x23, 0xF3, 0x00, 0x6C,
 0x00, 0x6E, 0x40, 0xEA, 0x30, 0xF0, 0x20, 0x6A,
 0x48, 0xF0, 0x54, 0xA2, 0x03, 0x22, 0x01, 0x72,
 0x35, 0x60, 0x69, 0x10, 0x10, 0xF0, 0x24, 0x6B,
-0xDC, 0xF4, 0x08, 0x4B, 0xCE, 0xF4, 0x50, 0x98,
+0xBC, 0xF0, 0x04, 0x4B, 0xCE, 0xF4, 0x50, 0x98,
 0xA0, 0x9B, 0x23, 0xF3, 0x08, 0x6C, 0x00, 0x6E,
 0x40, 0xEA, 0x04, 0x93, 0x10, 0xF0, 0x24, 0x6A,
-0xDC, 0xF4, 0x14, 0x9A, 0x74, 0x32, 0x10, 0xF0,
-0x24, 0x6B, 0x7C, 0xF5, 0x64, 0x9B, 0x00, 0x6C,
+0xBC, 0xF0, 0x10, 0x9A, 0x74, 0x32, 0x10, 0xF0,
+0x24, 0x6B, 0x5C, 0xF1, 0x60, 0x9B, 0x00, 0x6C,
 0x56, 0x6D, 0x6D, 0xEA, 0x10, 0xF0, 0x24, 0x6B,
-0x7C, 0xF5, 0xE8, 0x9B, 0xD0, 0x67, 0x4C, 0xEF,
-0x00, 0x18, 0xA0, 0xE7, 0x10, 0xF0, 0x24, 0x6A,
-0x1C, 0xF5, 0xE8, 0x9A, 0x00, 0x6C, 0x8F, 0x6D,
-0xD0, 0x67, 0x00, 0x18, 0xA0, 0xE7, 0x00, 0x6C,
+0x5C, 0xF1, 0xE4, 0x9B, 0xD0, 0x67, 0x4C, 0xEF,
+0x00, 0x18, 0x42, 0xE7, 0x10, 0xF0, 0x24, 0x6A,
+0xFC, 0xF0, 0xE4, 0x9A, 0x00, 0x6C, 0x8F, 0x6D,
+0xD0, 0x67, 0x00, 0x18, 0x42, 0xE7, 0x00, 0x6C,
 0xEF, 0x6D, 0x10, 0x6E, 0x01, 0x6F, 0x80, 0x18,
 0xC2, 0x14, 0x00, 0x6C, 0x33, 0x6D, 0x08, 0x6E,
 0xE4, 0x67, 0x33, 0x10, 0x10, 0xF0, 0x24, 0x6B,
-0xDC, 0xF4, 0x08, 0x4B, 0xCE, 0xF4, 0x50, 0x98,
+0xBC, 0xF0, 0x04, 0x4B, 0xCE, 0xF4, 0x50, 0x98,
 0xA0, 0x9B, 0x23, 0xF3, 0x08, 0x6C, 0x00, 0x6E,
 0x40, 0xEA, 0x04, 0x93, 0x10, 0xF0, 0x24, 0x6A,
-0xDC, 0xF4, 0x14, 0x9A, 0x74, 0x32, 0x10, 0xF0,
-0x24, 0x6B, 0x7C, 0xF5, 0x64, 0x9B, 0x00, 0x6C,
+0xBC, 0xF0, 0x10, 0x9A, 0x74, 0x32, 0x10, 0xF0,
+0x24, 0x6B, 0x5C, 0xF1, 0x60, 0x9B, 0x00, 0x6C,
 0x56, 0x6D, 0x6D, 0xEA, 0x10, 0xF0, 0x24, 0x6B,
-0x7C, 0xF5, 0xEC, 0x9B, 0xD0, 0x67, 0x4C, 0xEF,
-0x00, 0x18, 0xA0, 0xE7, 0x10, 0xF0, 0x24, 0x6A,
-0x1C, 0xF5, 0xE8, 0x9A, 0x00, 0x6C, 0x8F, 0x6D,
-0xD0, 0x67, 0x00, 0x18, 0xA0, 0xE7, 0x00, 0x6C,
+0x5C, 0xF1, 0xE8, 0x9B, 0xD0, 0x67, 0x4C, 0xEF,
+0x00, 0x18, 0x42, 0xE7, 0x10, 0xF0, 0x24, 0x6A,
+0xFC, 0xF0, 0xE4, 0x9A, 0x00, 0x6C, 0x8F, 0x6D,
+0xD0, 0x67, 0x00, 0x18, 0x42, 0xE7, 0x00, 0x6C,
 0xEF, 0x6D, 0x10, 0x6E, 0x01, 0x6F, 0x80, 0x18,
 0xC2, 0x14, 0x00, 0x6C, 0x33, 0x6D, 0x08, 0x6E,
-0x01, 0x6F, 0x00, 0x18, 0xA0, 0xE7, 0x04, 0x97,
+0x01, 0x6F, 0x00, 0x18, 0x42, 0xE7, 0x04, 0x97,
 0x91, 0x67, 0x33, 0x6D, 0x07, 0x6E, 0x00, 0x18,
-0xA0, 0xE7, 0x09, 0x97, 0x08, 0x91, 0x07, 0x90,
+0x42, 0xE7, 0x09, 0x97, 0x08, 0x91, 0x07, 0x90,
 0x05, 0x63, 0x00, 0xEF, 0xF9, 0x63, 0x0D, 0x62,
 0x0C, 0xD1, 0x0B, 0xD0, 0x00, 0x6A, 0x7D, 0x67,
 0x4C, 0xCB, 0x2E, 0xF5, 0x10, 0x6A, 0xFF, 0x68,
 0x04, 0xD2, 0x06, 0x02, 0x0C, 0xEC, 0x05, 0xD2,
-0x10, 0xF0, 0x24, 0x6A, 0x08, 0xD4, 0xDC, 0xF4,
-0xD4, 0x9A, 0x10, 0xF0, 0x24, 0x6A, 0x08, 0x94,
-0x7C, 0xF5, 0xF0, 0x9A, 0x0C, 0xED, 0x09, 0xD5,
-0x08, 0x6D, 0x00, 0x18, 0xBA, 0xE7, 0x0E, 0x22,
+0x10, 0xF0, 0x24, 0x6A, 0x08, 0xD4, 0xBC, 0xF0,
+0xD0, 0x9A, 0x10, 0xF0, 0x24, 0x6A, 0x08, 0x94,
+0x5C, 0xF1, 0xEC, 0x9A, 0x0C, 0xED, 0x09, 0xD5,
+0x08, 0x6D, 0x00, 0x18, 0x5C, 0xE7, 0x0E, 0x22,
 0x09, 0x92, 0x00, 0x69, 0x12, 0x22, 0x10, 0xF0,
-0x24, 0x6A, 0x5C, 0xF4, 0xBC, 0x9A, 0x03, 0xF3,
-0x08, 0x6C, 0x00, 0x18, 0x42, 0xE7, 0x22, 0x67,
+0x24, 0x6A, 0x3C, 0xF0, 0xB8, 0x9A, 0x03, 0xF3,
+0x08, 0x6C, 0x00, 0x18, 0xE4, 0xE6, 0x22, 0x67,
 0x0C, 0xE9, 0x07, 0x10, 0x10, 0xF0, 0x24, 0x6C,
-0xFD, 0xF1, 0x04, 0x4C, 0x80, 0x18, 0x35, 0x19,
+0xBC, 0xF5, 0x04, 0x4C, 0x80, 0x18, 0x35, 0x19,
 0x01, 0x69, 0x08, 0x94, 0x80, 0x18, 0x01, 0x13,
 0x7D, 0x67, 0xAC, 0xAB, 0x10, 0xF0, 0x24, 0x6C,
-0xFD, 0xF1, 0x1C, 0x4C, 0x80, 0x18, 0x35, 0x19,
+0xBC, 0xF5, 0x1C, 0x4C, 0x80, 0x18, 0x35, 0x19,
 0x51, 0x67, 0x0D, 0x97, 0x0C, 0x91, 0x0B, 0x90,
 0x07, 0x63, 0x00, 0xEF, 0xFA, 0x63, 0x0B, 0x62,
 0x0A, 0xD1, 0x09, 0xD0, 0xFF, 0x6A, 0x24, 0x67,
@@ -29083,12 +28922,12 @@ u8 array_mp_8821c_fw_nic[] = {
 0x16, 0x61, 0x30, 0xF0, 0x20, 0x6A, 0x48, 0xF0,
 0x55, 0xA2, 0x02, 0x72, 0x08, 0x61, 0x44, 0x41,
 0x01, 0x68, 0x04, 0xEA, 0x10, 0xF0, 0x24, 0x6A,
-0x7C, 0xF5, 0x54, 0x9A, 0x1A, 0x10, 0x44, 0x41,
+0x5C, 0xF1, 0x50, 0x9A, 0x1A, 0x10, 0x44, 0x41,
 0x01, 0x68, 0x04, 0xEA, 0x10, 0xF0, 0x24, 0x6A,
-0x7C, 0xF5, 0x58, 0x9A, 0x12, 0x10, 0x05, 0x93,
+0x5C, 0xF1, 0x54, 0x9A, 0x12, 0x10, 0x05, 0x93,
 0x00, 0x68, 0x02, 0x73, 0x0F, 0x61, 0x30, 0xF0,
 0x20, 0x6A, 0x48, 0xF0, 0x15, 0xA2, 0x09, 0x48,
-0x10, 0xF0, 0x24, 0x6A, 0x9C, 0xF4, 0x58, 0x9A,
+0x10, 0xF0, 0x24, 0x6A, 0x7C, 0xF0, 0x54, 0x9A,
 0x00, 0x30, 0x64, 0x41, 0x4D, 0xE8, 0x01, 0x6A,
 0x44, 0xEB, 0x4D, 0xE8, 0x80, 0x18, 0x82, 0x10,
 0x30, 0xF0, 0x20, 0x6C, 0xCE, 0xF4, 0x50, 0x9C,
@@ -29101,37 +28940,37 @@ u8 array_mp_8821c_fw_nic[] = {
 0x91, 0x67, 0x01, 0x6D, 0x80, 0x18, 0x5B, 0x15,
 0x04, 0xD2, 0xEF, 0xF4, 0x08, 0x48, 0x30, 0xF0,
 0x20, 0x6A, 0xEE, 0xF3, 0x48, 0x9A, 0x60, 0xF6,
-0xBC, 0x98, 0x38, 0x6C, 0x40, 0xEA, 0x24, 0x34,
+0xB8, 0x98, 0x38, 0x6C, 0x40, 0xEA, 0x24, 0x34,
 0x30, 0xF0, 0x20, 0x6A, 0x06, 0xD4, 0xCE, 0xF4,
-0x70, 0x9A, 0x10, 0xF0, 0x24, 0x6A, 0x9C, 0xF4,
-0xD8, 0x9A, 0x06, 0x92, 0x01, 0x6D, 0x03, 0xF3,
+0x70, 0x9A, 0x10, 0xF0, 0x24, 0x6A, 0x7C, 0xF0,
+0xD4, 0x9A, 0x06, 0x92, 0x01, 0x6D, 0x03, 0xF3,
 0x00, 0x6C, 0xAB, 0xED, 0x4D, 0xEE, 0x40, 0xEB,
 0x05, 0x93, 0x16, 0x2B, 0x04, 0x94, 0x0F, 0x24,
-0x06, 0x94, 0x10, 0xF0, 0x24, 0x6A, 0x5B, 0xF6,
-0x10, 0x4A, 0x4D, 0xE4, 0x30, 0xF0, 0x20, 0x6C,
+0x06, 0x94, 0x10, 0xF0, 0x24, 0x6A, 0x3B, 0xF2,
+0x0C, 0x4A, 0x4D, 0xE4, 0x30, 0xF0, 0x20, 0x6C,
 0xCE, 0xF4, 0x50, 0x9C, 0x80, 0xAB, 0x01, 0x6D,
 0x00, 0x6E, 0x40, 0xEA, 0x7C, 0x10, 0x02, 0x6C,
 0xB1, 0x67, 0x80, 0x18, 0x35, 0x13, 0x77, 0x10,
 0x05, 0x92, 0x02, 0x72, 0x62, 0x61, 0x10, 0xF0,
-0x24, 0x6A, 0xDC, 0xF4, 0xD4, 0x9A, 0x91, 0x67,
-0x00, 0x6D, 0x00, 0x18, 0x8D, 0xE7, 0x56, 0x32,
-0xFF, 0x6C, 0x8C, 0xEA, 0x40, 0xF6, 0x9D, 0xA0,
+0x24, 0x6A, 0xBC, 0xF0, 0xD0, 0x9A, 0x91, 0x67,
+0x00, 0x6D, 0x00, 0x18, 0x2F, 0xE7, 0x56, 0x32,
+0xFF, 0x6C, 0x8C, 0xEA, 0x40, 0xF6, 0x99, 0xA0,
 0x30, 0xF3, 0x60, 0x41, 0x64, 0x33, 0x80, 0x34,
-0x8D, 0xEA, 0x0D, 0xE3, 0x43, 0xCB, 0x30, 0xF0,
+0x8D, 0xEA, 0x0D, 0xE3, 0x41, 0xCB, 0x30, 0xF0,
 0x20, 0x6B, 0xCE, 0xF4, 0x50, 0x9B, 0x10, 0xF0,
-0x24, 0x6B, 0x1C, 0xF3, 0xD0, 0x9B, 0x01, 0x6D,
+0x24, 0x6B, 0xFB, 0xF6, 0xCC, 0x9B, 0x01, 0x6D,
 0x23, 0xF3, 0x18, 0x6C, 0xAB, 0xED, 0x40, 0xEA,
 0x04, 0x94, 0x10, 0x24, 0x06, 0x94, 0x10, 0xF0,
-0x24, 0x6A, 0x5B, 0xF6, 0x10, 0x4A, 0x4D, 0xE4,
+0x24, 0x6A, 0x3B, 0xF2, 0x0C, 0x4A, 0x4D, 0xE4,
 0x30, 0xF0, 0x20, 0x6C, 0xCE, 0xF4, 0x50, 0x9C,
 0x80, 0xAB, 0x01, 0xF4, 0x00, 0x6D, 0x00, 0x6E,
 0x40, 0xEA, 0x2F, 0x10, 0x03, 0x6C, 0xB1, 0x67,
 0x80, 0x18, 0x35, 0x13, 0x2A, 0x10, 0x10, 0xF0,
-0x24, 0x6A, 0x5B, 0xF6, 0x10, 0x4A, 0x24, 0x33,
+0x24, 0x6A, 0x3B, 0xF2, 0x0C, 0x4A, 0x24, 0x33,
 0x4D, 0xE3, 0x01, 0x6D, 0x30, 0xF0, 0x20, 0x6A,
 0xCE, 0xF4, 0x50, 0x9A, 0x80, 0xAB, 0xC5, 0x67,
-0x0D, 0x10, 0x10, 0xF0, 0x24, 0x6A, 0x5B, 0xF6,
-0x10, 0x4A, 0x24, 0x33, 0x4D, 0xE3, 0x30, 0xF0,
+0x0D, 0x10, 0x10, 0xF0, 0x24, 0x6A, 0x3B, 0xF2,
+0x0C, 0x4A, 0x24, 0x33, 0x4D, 0xE3, 0x30, 0xF0,
 0x20, 0x6A, 0xCE, 0xF4, 0x50, 0x9A, 0x80, 0xAB,
 0x01, 0x6D, 0x00, 0x6E, 0x40, 0xEA, 0x7D, 0x67,
 0x87, 0x43, 0x09, 0x4C, 0x30, 0xF0, 0x20, 0x6A,
@@ -29145,7 +28984,7 @@ u8 array_mp_8821c_fw_nic[] = {
 0xC2, 0x24, 0xCF, 0x17, 0xFC, 0x63, 0x07, 0x62,
 0x06, 0xD1, 0x05, 0xD0, 0xFF, 0x69, 0x8C, 0xE9,
 0x44, 0x41, 0x01, 0x68, 0x04, 0xEA, 0x10, 0xF0,
-0x24, 0x6A, 0x9C, 0xF4, 0x58, 0x9A, 0x4D, 0xE8,
+0x24, 0x6A, 0x7C, 0xF0, 0x54, 0x9A, 0x4D, 0xE8,
 0x80, 0x18, 0x82, 0x10, 0x30, 0xF0, 0x20, 0x6B,
 0xCE, 0xF4, 0x50, 0x9B, 0x01, 0x6D, 0xD0, 0x67,
 0x03, 0xF3, 0x00, 0x6C, 0xAB, 0xED, 0x40, 0xEA,
@@ -29155,34 +28994,34 @@ u8 array_mp_8821c_fw_nic[] = {
 0xCE, 0xF4, 0x58, 0x9A, 0x01, 0x6C, 0x40, 0xEA,
 0x91, 0x67, 0x00, 0x6D, 0x80, 0x18, 0x5B, 0x15,
 0x02, 0x67, 0x30, 0xF0, 0x21, 0x6B, 0x30, 0xF0,
-0x20, 0x6A, 0x70, 0xF3, 0xA4, 0x9B, 0xEE, 0xF3,
+0x20, 0x6A, 0x70, 0xF3, 0xA0, 0x9B, 0xEE, 0xF3,
 0x48, 0x9A, 0x38, 0x6C, 0x40, 0xEA, 0x10, 0xF0,
-0x24, 0x6C, 0x1D, 0xF2, 0x14, 0x4C, 0x00, 0x6D,
+0x24, 0x6C, 0xDC, 0xF5, 0x14, 0x4C, 0x00, 0x6D,
 0x80, 0x18, 0x35, 0x19, 0x30, 0xF0, 0x20, 0x6A,
 0xC0, 0xF1, 0x08, 0x4A, 0x45, 0xE1, 0x00, 0x6C,
 0xA7, 0xF6, 0x06, 0xC1, 0xE4, 0x67, 0xEF, 0x6D,
-0x10, 0x6E, 0x00, 0x18, 0xA0, 0xE7, 0x50, 0x67,
+0x10, 0x6E, 0x00, 0x18, 0x42, 0xE7, 0x50, 0x67,
 0x07, 0x97, 0x06, 0x91, 0x05, 0x90, 0x04, 0x63,
 0x00, 0xEF, 0x00, 0x65, 0xFA, 0x63, 0x0B, 0x62,
 0x0A, 0xD1, 0x09, 0xD0, 0xFF, 0x6A, 0x4C, 0xEC,
 0x4C, 0xED, 0x30, 0xF0, 0x21, 0x6A, 0x50, 0xF3,
-0x45, 0xA2, 0x04, 0xD4, 0x06, 0xD5, 0x09, 0x72,
+0x41, 0xA2, 0x04, 0xD4, 0x06, 0xD5, 0x09, 0x72,
 0x00, 0x68, 0x0C, 0x60, 0x12, 0x72, 0x01, 0x68,
 0x09, 0x60, 0x1B, 0x72, 0x02, 0x68, 0x06, 0x60,
 0x24, 0x68, 0x4E, 0xE8, 0x01, 0x58, 0x18, 0x67,
 0x04, 0x6A, 0x03, 0xE2, 0x04, 0x92, 0x30, 0xF0,
 0x20, 0x69, 0xCE, 0xF4, 0x70, 0x99, 0x44, 0x36,
-0x10, 0xF0, 0x24, 0x6A, 0x9C, 0xF4, 0x58, 0x9A,
+0x10, 0xF0, 0x24, 0x6A, 0x7C, 0xF0, 0x54, 0x9A,
 0x01, 0x6D, 0x03, 0xF3, 0x00, 0x6C, 0x4D, 0xEE,
 0xAB, 0xED, 0x40, 0xEB, 0x30, 0xF0, 0x21, 0x6B,
-0x50, 0xF3, 0xC5, 0xA3, 0xCE, 0xF4, 0x50, 0x99,
+0x50, 0xF3, 0xC1, 0xA3, 0xCE, 0xF4, 0x50, 0x99,
 0x01, 0x6D, 0xC3, 0xF3, 0x0C, 0x6C, 0xAB, 0xED,
 0x40, 0xEA, 0x06, 0x93, 0x01, 0x73, 0x09, 0x61,
 0x04, 0x92, 0x01, 0x69, 0x04, 0x4A, 0x24, 0xEA,
-0x10, 0xF0, 0x24, 0x6A, 0x7C, 0xF5, 0x5C, 0x9A,
+0x10, 0xF0, 0x24, 0x6A, 0x5C, 0xF1, 0x58, 0x9A,
 0x08, 0x10, 0x04, 0x92, 0x01, 0x69, 0x04, 0x4A,
-0x24, 0xEA, 0x10, 0xF0, 0x24, 0x6A, 0x9C, 0xF5,
-0x40, 0x9A, 0x4D, 0xE9, 0x80, 0x18, 0x82, 0x10,
+0x24, 0xEA, 0x10, 0xF0, 0x24, 0x6A, 0x5C, 0xF1,
+0x5C, 0x9A, 0x4D, 0xE9, 0x80, 0x18, 0x82, 0x10,
 0x30, 0xF0, 0x20, 0x6B, 0xCE, 0xF4, 0x50, 0x9B,
 0x01, 0x6D, 0xD1, 0x67, 0x03, 0xF3, 0x00, 0x6C,
 0xAB, 0xED, 0x40, 0xEA, 0x30, 0xF0, 0x20, 0x6B,
@@ -29193,36 +29032,36 @@ u8 array_mp_8821c_fw_nic[] = {
 0x04, 0x94, 0x01, 0x6D, 0xEF, 0xF4, 0x08, 0x49,
 0x80, 0x18, 0x5B, 0x15, 0x05, 0xD2, 0x30, 0xF0,
 0x20, 0x6A, 0xEE, 0xF3, 0x48, 0x9A, 0x60, 0xF6,
-0xBC, 0x99, 0x38, 0x6C, 0x40, 0xEA, 0x06, 0x92,
+0xB8, 0x99, 0x38, 0x6C, 0x40, 0xEA, 0x06, 0x92,
 0x02, 0x72, 0x80, 0xF0, 0x02, 0x61, 0x10, 0xF0,
-0x24, 0x6A, 0x04, 0x94, 0xDC, 0xF4, 0xD4, 0x9A,
-0x00, 0x6D, 0x00, 0x18, 0x8D, 0xE7, 0xE3, 0xF7,
+0x24, 0x6A, 0x04, 0x94, 0xBC, 0xF0, 0xD0, 0x9A,
+0x00, 0x6D, 0x00, 0x18, 0x2F, 0xE7, 0xE3, 0xF7,
 0x00, 0x6B, 0x4C, 0xEB, 0x76, 0x32, 0x1F, 0x6B,
-0x6C, 0xEA, 0x02, 0x5A, 0x0D, 0x60, 0x60, 0xF6,
-0x60, 0x99, 0x02, 0x23, 0xFF, 0x4B, 0x15, 0x10,
+0x6C, 0xEA, 0x02, 0x5A, 0x0D, 0x60, 0x40, 0xF6,
+0x7C, 0x99, 0x02, 0x23, 0xFF, 0x4B, 0x15, 0x10,
 0x03, 0x70, 0x01, 0x48, 0x0A, 0x61, 0x01, 0x6B,
-0x60, 0xF6, 0x76, 0xC1, 0x03, 0x68, 0x13, 0x10,
+0x60, 0xF6, 0x72, 0xC1, 0x03, 0x68, 0x13, 0x10,
 0x0A, 0x5A, 0x00, 0x6C, 0x11, 0x61, 0x04, 0x20,
 0xFF, 0x48, 0xFF, 0x6B, 0x6C, 0xE8, 0x0B, 0x10,
-0x60, 0xF6, 0x60, 0x99, 0x04, 0x73, 0x04, 0x60,
-0x01, 0x4B, 0x60, 0xF6, 0x60, 0xD9, 0x03, 0x10,
-0x01, 0x6B, 0x60, 0xF6, 0x76, 0xC1, 0x01, 0x6C,
-0x10, 0xF0, 0x24, 0x6D, 0x7B, 0xF6, 0x08, 0x4D,
+0x40, 0xF6, 0x7C, 0x99, 0x04, 0x73, 0x04, 0x60,
+0x01, 0x4B, 0x40, 0xF6, 0x7C, 0xD9, 0x03, 0x10,
+0x01, 0x6B, 0x60, 0xF6, 0x72, 0xC1, 0x01, 0x6C,
+0x10, 0xF0, 0x24, 0x6D, 0x5B, 0xF2, 0x04, 0x4D,
 0xB5, 0xE0, 0xA0, 0xA5, 0x30, 0xF0, 0x20, 0x6B,
 0xEF, 0xF4, 0x08, 0x4B, 0x03, 0x70, 0x40, 0xF6,
-0xBD, 0xC3, 0x0D, 0x61, 0x01, 0x72, 0x0B, 0x61,
-0x60, 0xF6, 0x40, 0x9B, 0x08, 0x2A, 0x01, 0x6D,
-0x60, 0xF6, 0xB7, 0xC3, 0x60, 0xF6, 0xB6, 0xC3,
-0x1B, 0x6D, 0x40, 0xF6, 0xBD, 0xC3, 0x30, 0xF0,
+0xB9, 0xC3, 0x0D, 0x61, 0x01, 0x72, 0x0B, 0x61,
+0x40, 0xF6, 0x5C, 0x9B, 0x08, 0x2A, 0x01, 0x6D,
+0x60, 0xF6, 0xB3, 0xC3, 0x60, 0xF6, 0xB2, 0xC3,
+0x1B, 0x6D, 0x40, 0xF6, 0xB9, 0xC3, 0x30, 0xF0,
 0x20, 0x68, 0xEF, 0xF4, 0x08, 0x48, 0x60, 0xF6,
-0x56, 0xA0, 0x01, 0x72, 0x2C, 0x60, 0x2B, 0x24,
+0x52, 0xA0, 0x01, 0x72, 0x2C, 0x60, 0x2B, 0x24,
 0x04, 0x93, 0x30, 0xF0, 0x20, 0x69, 0xCE, 0xF4,
 0x50, 0x99, 0x64, 0x36, 0x10, 0xF0, 0x24, 0x6B,
-0x9C, 0xF4, 0x78, 0x9B, 0x01, 0x6D, 0x03, 0xF3,
+0x7C, 0xF0, 0x74, 0x9B, 0x01, 0x6D, 0x03, 0xF3,
 0x00, 0x6C, 0x6D, 0xEE, 0xAB, 0xED, 0x40, 0xEA,
 0xCE, 0xF4, 0x30, 0x99, 0x01, 0x6D, 0xAB, 0xED,
 0x04, 0xD1, 0x23, 0xF3, 0x04, 0x69, 0x91, 0x67,
-0x00, 0x18, 0x42, 0xE7, 0x60, 0xF6, 0xC0, 0x98,
+0x00, 0x18, 0xE4, 0xE6, 0x40, 0xF6, 0xDC, 0x98,
 0x07, 0xF4, 0x01, 0x6B, 0x6B, 0xEB, 0x4C, 0xEB,
 0xC0, 0x36, 0x04, 0x92, 0xC8, 0x36, 0x01, 0x6D,
 0x6D, 0xEE, 0x91, 0x67, 0xAB, 0xED, 0x40, 0xEA,
@@ -29231,7 +29070,7 @@ u8 array_mp_8821c_fw_nic[] = {
 0x09, 0x90, 0x06, 0x63, 0x00, 0xEF, 0x00, 0x65,
 0xFB, 0x63, 0x09, 0x62, 0x08, 0xD1, 0x07, 0xD0,
 0x30, 0xF0, 0x20, 0x6A, 0xEF, 0xF4, 0x08, 0x4A,
-0x04, 0xD2, 0x40, 0xF6, 0x5C, 0xA2, 0x02, 0x68,
+0x04, 0xD2, 0x40, 0xF6, 0x58, 0xA2, 0x02, 0x68,
 0xFF, 0x69, 0x4E, 0xE8, 0x8C, 0xE9, 0x24, 0x20,
 0x03, 0x5A, 0x03, 0x60, 0x01, 0x72, 0x07, 0x60,
 0x04, 0x10, 0x03, 0x72, 0x37, 0x60, 0x04, 0x72,
@@ -29239,42 +29078,42 @@ u8 array_mp_8821c_fw_nic[] = {
 0x80, 0x18, 0xBF, 0x11, 0x91, 0x67, 0x01, 0x6D,
 0x80, 0x18, 0x2D, 0x16, 0x65, 0x22, 0x30, 0xF0,
 0x20, 0x6B, 0x30, 0xF3, 0x84, 0x41, 0x84, 0x34,
-0xEF, 0xF4, 0x08, 0x4B, 0x71, 0xE4, 0xA8, 0xA4,
-0x02, 0x5D, 0x03, 0x60, 0x01, 0x4D, 0xA8, 0xC4,
+0xEF, 0xF4, 0x08, 0x4B, 0x71, 0xE4, 0xA4, 0xA4,
+0x02, 0x5D, 0x03, 0x60, 0x01, 0x4D, 0xA4, 0xC4,
 0xED, 0x17, 0x65, 0xE1, 0x00, 0x6C, 0x50, 0x10,
 0x91, 0x67, 0x01, 0x6D, 0x80, 0x18, 0xAD, 0x13,
-0x04, 0x93, 0x60, 0xF6, 0x16, 0xC3, 0x91, 0x67,
+0x04, 0x93, 0x60, 0xF6, 0x12, 0xC3, 0x91, 0x67,
 0x02, 0x6D, 0x80, 0x18, 0x2D, 0x16, 0x48, 0x22,
 0x30, 0xF0, 0x20, 0x6B, 0x24, 0x34, 0xEF, 0xF4,
-0x08, 0x4B, 0x6D, 0xE4, 0x60, 0xF6, 0x91, 0xA3,
+0x08, 0x4B, 0x6D, 0xE4, 0x60, 0xF6, 0x8D, 0xA3,
 0x0A, 0x5C, 0x3E, 0x60, 0x01, 0x4C, 0x60, 0xF6,
-0x91, 0xC3, 0xED, 0x17, 0x91, 0x67, 0x80, 0x18,
+0x8D, 0xC3, 0xED, 0x17, 0x91, 0x67, 0x80, 0x18,
 0xBF, 0x11, 0x91, 0x67, 0x01, 0x6D, 0x80, 0x18,
 0x7D, 0x15, 0x32, 0x22, 0x03, 0x6C, 0x98, 0xE9,
 0x30, 0xF0, 0x20, 0x6B, 0xEF, 0xF4, 0x08, 0x4B,
-0x12, 0xEC, 0x71, 0xE4, 0x60, 0xF6, 0xAB, 0xA4,
+0x12, 0xEC, 0x71, 0xE4, 0x60, 0xF6, 0xA7, 0xA4,
 0x02, 0x5D, 0x04, 0x60, 0x01, 0x4D, 0x60, 0xF6,
-0xAB, 0xC4, 0xEB, 0x17, 0x65, 0xE1, 0x01, 0x6C,
+0xA7, 0xC4, 0xEB, 0x17, 0x65, 0xE1, 0x01, 0x6C,
 0x1B, 0x10, 0x91, 0x67, 0x00, 0x6D, 0x80, 0x18,
 0xAD, 0x13, 0x91, 0x67, 0x02, 0x6D, 0x80, 0x18,
 0x7D, 0x15, 0x16, 0x22, 0x03, 0x6C, 0x98, 0xE9,
 0x30, 0xF0, 0x20, 0x6B, 0xEF, 0xF4, 0x08, 0x4B,
-0x12, 0xEC, 0x71, 0xE4, 0x60, 0xF6, 0xAC, 0xA4,
+0x12, 0xEC, 0x71, 0xE4, 0x60, 0xF6, 0xA8, 0xA4,
 0x02, 0x5D, 0x04, 0x60, 0x01, 0x4D, 0x60, 0xF6,
-0xAC, 0xC4, 0xEB, 0x17, 0x65, 0xE1, 0x02, 0x6C,
-0x60, 0xF6, 0x94, 0xC1, 0x05, 0x6C, 0x07, 0x10,
+0xA8, 0xC4, 0xEB, 0x17, 0x65, 0xE1, 0x02, 0x6C,
+0x60, 0xF6, 0x90, 0xC1, 0x05, 0x6C, 0x07, 0x10,
 0x30, 0xF0, 0x20, 0x6B, 0xEF, 0xF4, 0x08, 0x4B,
-0x40, 0xF6, 0x9C, 0xA3, 0x01, 0x4C, 0x40, 0xF6,
-0x9C, 0xC3, 0x09, 0x97, 0x08, 0x91, 0x07, 0x90,
+0x40, 0xF6, 0x98, 0xA3, 0x01, 0x4C, 0x40, 0xF6,
+0x98, 0xC3, 0x09, 0x97, 0x08, 0x91, 0x07, 0x90,
 0x05, 0x63, 0x00, 0xEF, 0xFB, 0x63, 0x09, 0x62,
 0x08, 0xD1, 0x07, 0xD0, 0x30, 0xF0, 0x20, 0x68,
 0xC0, 0xF1, 0x08, 0x48, 0xFF, 0x69, 0x87, 0xF6,
 0xB4, 0xA0, 0x8C, 0xE9, 0x10, 0xF0, 0x24, 0x6C,
-0x3D, 0xF2, 0x08, 0x4C, 0x80, 0x18, 0x35, 0x19,
+0xFC, 0xF5, 0x08, 0x4C, 0x80, 0x18, 0x35, 0x19,
 0x87, 0xF6, 0x4D, 0xA0, 0x02, 0x72, 0x02, 0x6A,
 0x04, 0xD2, 0x02, 0x60, 0x04, 0x6B, 0x04, 0xD3,
 0x30, 0xF0, 0x20, 0x6A, 0x48, 0xF0, 0xBC, 0xA2,
-0x10, 0xF0, 0x24, 0x6C, 0x3D, 0xF2, 0x08, 0x4C,
+0x10, 0xF0, 0x24, 0x6C, 0xFC, 0xF5, 0x08, 0x4C,
 0x80, 0x18, 0x35, 0x19, 0x30, 0xF0, 0x20, 0x68,
 0xC0, 0xF1, 0x08, 0x48, 0x87, 0xF6, 0x54, 0xA0,
 0x02, 0x72, 0x10, 0x60, 0x03, 0x72, 0x31, 0x60,
@@ -29286,44 +29125,44 @@ u8 array_mp_8821c_fw_nic[] = {
 0x7D, 0x15, 0x87, 0xF6, 0x75, 0xA0, 0x01, 0x4B,
 0x87, 0xF6, 0x75, 0xC0, 0x0C, 0x22, 0x30, 0xF0,
 0x20, 0x6A, 0xEF, 0xF4, 0x08, 0x4A, 0x60, 0xF6,
-0x6A, 0xA2, 0x03, 0x5B, 0x04, 0x60, 0x01, 0x4B,
-0x60, 0xF6, 0x6A, 0xC2, 0x26, 0x10, 0x30, 0xF0,
+0x66, 0xA2, 0x03, 0x5B, 0x04, 0x60, 0x01, 0x4B,
+0x60, 0xF6, 0x66, 0xC2, 0x26, 0x10, 0x30, 0xF0,
 0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A, 0x87, 0xF6,
 0x74, 0xA2, 0x01, 0x4B, 0x87, 0xF6, 0x74, 0xC2,
 0x1C, 0x10, 0x00, 0x6C, 0x80, 0x18, 0xB0, 0x16,
 0x30, 0xF0, 0x20, 0x6B, 0xEF, 0xF4, 0x08, 0x4B,
-0x40, 0xF6, 0x5C, 0xA3, 0x05, 0x72, 0xF5, 0x61,
+0x40, 0xF6, 0x58, 0xA3, 0x05, 0x72, 0xF5, 0x61,
 0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A,
 0x87, 0xF6, 0x94, 0xA2, 0x01, 0x4C, 0x87, 0xF6,
-0x94, 0xC2, 0x01, 0x6C, 0x40, 0xF6, 0x9C, 0xC3,
+0x94, 0xC2, 0x01, 0x6C, 0x40, 0xF6, 0x98, 0xC3,
 0x87, 0xF6, 0x75, 0xA2, 0x01, 0x4B, 0x87, 0xF6,
 0x75, 0xC2, 0x30, 0xF0, 0x20, 0x68, 0xC0, 0xF1,
 0x08, 0x48, 0x87, 0xF6, 0x54, 0xA0, 0x04, 0x72,
 0x6B, 0x61, 0xA7, 0xF6, 0xA6, 0xA0, 0x10, 0xF0,
-0x24, 0x6C, 0x3D, 0xF2, 0x1C, 0x4C, 0x80, 0x18,
+0x24, 0x6C, 0xFC, 0xF5, 0x1C, 0x4C, 0x80, 0x18,
 0x35, 0x19, 0xA7, 0xF6, 0xB2, 0xA0, 0x10, 0xF0,
-0x24, 0x6C, 0x5D, 0xF2, 0x1C, 0x4C, 0x80, 0x18,
+0x24, 0x6C, 0x1C, 0xF6, 0x1C, 0x4C, 0x80, 0x18,
 0x35, 0x19, 0xA7, 0xF6, 0xB3, 0xA0, 0x10, 0xF0,
 0x24, 0x6C, 0x30, 0xF0, 0x20, 0x68, 0xEF, 0xF4,
-0x08, 0x48, 0x7D, 0xF2, 0x18, 0x4C, 0x80, 0x18,
-0x35, 0x19, 0x60, 0xF6, 0xAA, 0xA0, 0x10, 0xF0,
-0x24, 0x6C, 0x9D, 0xF2, 0x14, 0x4C, 0x80, 0x18,
-0x35, 0x19, 0x60, 0xF6, 0xAB, 0xA0, 0x60, 0xF6,
-0xCC, 0xA0, 0x10, 0xF0, 0x24, 0x6C, 0xBD, 0xF2,
+0x08, 0x48, 0x3C, 0xF6, 0x18, 0x4C, 0x80, 0x18,
+0x35, 0x19, 0x60, 0xF6, 0xA6, 0xA0, 0x10, 0xF0,
+0x24, 0x6C, 0x5C, 0xF6, 0x14, 0x4C, 0x80, 0x18,
+0x35, 0x19, 0x60, 0xF6, 0xA7, 0xA0, 0x60, 0xF6,
+0xC8, 0xA0, 0x10, 0xF0, 0x24, 0x6C, 0x7C, 0xF6,
 0x14, 0x4C, 0x80, 0x18, 0x35, 0x19, 0x60, 0xF6,
-0xB1, 0xA0, 0x60, 0xF6, 0xD2, 0xA0, 0x10, 0xF0,
-0x24, 0x6C, 0xFD, 0xF2, 0x08, 0x4C, 0x80, 0x18,
+0xAD, 0xA0, 0x60, 0xF6, 0xCE, 0xA0, 0x10, 0xF0,
+0x24, 0x6C, 0xBC, 0xF6, 0x08, 0x4C, 0x80, 0x18,
 0x35, 0x19, 0x30, 0xF0, 0x20, 0x68, 0x10, 0xF0,
-0x24, 0x6B, 0x9C, 0xF5, 0xC4, 0x9B, 0xCE, 0xF4,
+0x24, 0x6B, 0x7C, 0xF1, 0xC0, 0x9B, 0xCE, 0xF4,
 0x50, 0x98, 0x01, 0x69, 0x2B, 0xE9, 0xB1, 0x67,
 0x03, 0xF3, 0x00, 0x6C, 0x40, 0xEA, 0xCE, 0xF4,
 0x50, 0x98, 0xB1, 0x67, 0x23, 0xF3, 0x0C, 0x6C,
 0x07, 0x6E, 0x40, 0xEA, 0xCE, 0xF4, 0x50, 0x98,
 0xB1, 0x67, 0xC3, 0xF3, 0x0C, 0x6C, 0x00, 0x6E,
-0x40, 0xEA, 0x10, 0xF0, 0x24, 0x6B, 0x1C, 0xF3,
-0x10, 0x4B, 0xCE, 0xF4, 0x50, 0x98, 0xC0, 0x9B,
+0x40, 0xEA, 0x10, 0xF0, 0x24, 0x6B, 0xFB, 0xF6,
+0x0C, 0x4B, 0xCE, 0xF4, 0x50, 0x98, 0xC0, 0x9B,
 0xB1, 0x67, 0x23, 0xF3, 0x18, 0x6C, 0x40, 0xEA,
-0x10, 0xF0, 0x24, 0x6B, 0x1C, 0xF3, 0x10, 0x4B,
+0x10, 0xF0, 0x24, 0x6B, 0xFB, 0xF6, 0x0C, 0x4B,
 0xCE, 0xF4, 0x50, 0x98, 0xC0, 0x9B, 0x23, 0xF3,
 0x1C, 0x6C, 0xB1, 0x67, 0x40, 0xEA, 0x09, 0x10,
 0x01, 0x71, 0x3F, 0xF7, 0x13, 0x61, 0x87, 0xF6,
@@ -29331,41 +29170,41 @@ u8 array_mp_8821c_fw_nic[] = {
 0x0D, 0x2A, 0x09, 0x97, 0x08, 0x91, 0x07, 0x90,
 0x05, 0x63, 0x00, 0xEF, 0xFC, 0x63, 0x07, 0x62,
 0x06, 0xD1, 0x05, 0xD0, 0x10, 0xF0, 0x24, 0x6B,
-0x30, 0xF0, 0x20, 0x68, 0x9C, 0xF4, 0xD8, 0x9B,
+0x30, 0xF0, 0x20, 0x68, 0x7C, 0xF0, 0xD4, 0x9B,
 0xCE, 0xF4, 0x50, 0x98, 0xFF, 0x69, 0x01, 0x6D,
 0xAB, 0xED, 0x8C, 0xE9, 0x03, 0xF3, 0x00, 0x6C,
 0x40, 0xEA, 0xCE, 0xF4, 0x50, 0x98, 0x01, 0x6D,
 0xA3, 0xF3, 0x18, 0x6C, 0xAB, 0xED, 0x00, 0x6E,
-0x40, 0xEA, 0x30, 0xF0, 0x21, 0x6A, 0x70, 0xF3,
-0x40, 0xA2, 0x11, 0x22, 0x10, 0xF0, 0x24, 0x6A,
-0xDC, 0xF4, 0x14, 0x9A, 0x00, 0x6C, 0x01, 0x6D,
-0xD0, 0x67, 0x00, 0x18, 0x8D, 0xE7, 0x2E, 0x6B,
+0x40, 0xEA, 0x30, 0xF0, 0x21, 0x6A, 0x50, 0xF3,
+0x5C, 0xA2, 0x11, 0x22, 0x10, 0xF0, 0x24, 0x6A,
+0xBC, 0xF0, 0x10, 0x9A, 0x00, 0x6C, 0x01, 0x6D,
+0xD0, 0x67, 0x00, 0x18, 0x2F, 0xE7, 0x2E, 0x6B,
 0x6B, 0xEB, 0x4C, 0xEB, 0x00, 0x6C, 0x01, 0x6D,
 0xD0, 0x67, 0x25, 0x6F, 0x10, 0x10, 0x10, 0xF0,
-0x24, 0x6A, 0xDC, 0xF4, 0x14, 0x9A, 0x00, 0x6C,
-0x01, 0x6D, 0xD0, 0x67, 0x00, 0x18, 0x8D, 0xE7,
+0x24, 0x6A, 0xBC, 0xF0, 0x10, 0x9A, 0x00, 0x6C,
+0x01, 0x6D, 0xD0, 0x67, 0x00, 0x18, 0x2F, 0xE7,
 0x2E, 0x6B, 0x6B, 0xEB, 0x4C, 0xEB, 0x00, 0x6C,
 0x01, 0x6D, 0xD0, 0x67, 0x05, 0x6F, 0x6D, 0xEF,
-0x00, 0x18, 0xA0, 0xE7, 0x91, 0x67, 0x80, 0x18,
+0x00, 0x18, 0x42, 0xE7, 0x91, 0x67, 0x80, 0x18,
 0xFB, 0x16, 0x07, 0x97, 0x06, 0x91, 0x05, 0x90,
 0x04, 0x63, 0x00, 0xEF, 0xF2, 0x63, 0x1B, 0x62,
 0x1A, 0xD1, 0x19, 0xD0, 0x88, 0xA4, 0x02, 0x6A,
 0x30, 0xF0, 0x20, 0x68, 0x8C, 0xEA, 0x46, 0x32,
 0x16, 0xD4, 0x17, 0xD2, 0x80, 0x18, 0x7C, 0x11,
 0x80, 0x18, 0x1A, 0x13, 0x10, 0xF0, 0x24, 0x6A,
-0x5C, 0xF3, 0xB0, 0x9A, 0xA1, 0xF4, 0x18, 0x6C,
-0xEF, 0xF4, 0x08, 0x48, 0x00, 0x18, 0x42, 0xE7,
-0x60, 0xF6, 0x58, 0xC0, 0x30, 0xF0, 0x20, 0x6A,
+0x5B, 0xF7, 0xA0, 0x9A, 0xA1, 0xF4, 0x18, 0x6C,
+0xEF, 0xF4, 0x08, 0x48, 0x00, 0x18, 0xE4, 0xE6,
+0x60, 0xF6, 0x54, 0xC0, 0x30, 0xF0, 0x20, 0x6A,
 0xCE, 0xF3, 0x5C, 0x9A, 0x38, 0x6C, 0x01, 0x69,
 0x40, 0xEA, 0x16, 0x94, 0x00, 0x6D, 0x60, 0xF6,
-0x5C, 0xD8, 0x2C, 0xEC, 0x00, 0x18, 0xC0, 0xD5,
+0x58, 0xD8, 0x2C, 0xEC, 0x00, 0x18, 0xAE, 0xD5,
 0x16, 0xD2, 0x72, 0x2A, 0x10, 0xF0, 0x24, 0x6C,
-0x1D, 0xF3, 0x1C, 0x4C, 0x80, 0x18, 0x35, 0x19,
+0xDC, 0xF6, 0x1C, 0x4C, 0x80, 0x18, 0x35, 0x19,
 0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A,
 0x28, 0xF1, 0x6C, 0xA2, 0x9D, 0x67, 0x87, 0xF6,
 0x34, 0xC2, 0x01, 0x4B, 0x28, 0xF1, 0x6C, 0xC2,
 0x67, 0x44, 0x51, 0x4B, 0x80, 0xA3, 0x28, 0xF1,
-0x2E, 0xC2, 0x40, 0xF6, 0x3C, 0xC0, 0x87, 0xF6,
+0x2E, 0xC2, 0x40, 0xF6, 0x38, 0xC0, 0x87, 0xF6,
 0x95, 0xC2, 0x00, 0x6C, 0xA4, 0x67, 0x80, 0x18,
 0x35, 0x13, 0x30, 0xF0, 0x20, 0x6E, 0x30, 0xF0,
 0x20, 0x6F, 0x04, 0x04, 0x0A, 0x05, 0x6F, 0xF0,
@@ -29387,14 +29226,14 @@ u8 array_mp_8821c_fw_nic[] = {
 0x30, 0xF0, 0x20, 0x6A, 0xCE, 0xF4, 0x58, 0x9A,
 0x32, 0x6C, 0x40, 0xEA, 0xC9, 0x17, 0x17, 0x92,
 0x04, 0x22, 0x00, 0x6C, 0x01, 0x6D, 0x00, 0x18,
-0x4F, 0xD5, 0x00, 0x6C, 0x00, 0x18, 0x1A, 0xD5,
-0x10, 0xF0, 0x24, 0x6A, 0xDC, 0xF4, 0xD4, 0x9A,
-0x10, 0xF0, 0x24, 0x6A, 0x9C, 0xF5, 0xE8, 0x9A,
-0x00, 0x6C, 0x08, 0x6D, 0x00, 0x18, 0xA0, 0xE7,
+0x3D, 0xD5, 0x00, 0x6C, 0x00, 0x18, 0x08, 0xD5,
+0x10, 0xF0, 0x24, 0x6A, 0xBC, 0xF0, 0xD0, 0x9A,
+0x10, 0xF0, 0x24, 0x6A, 0x7C, 0xF1, 0xE4, 0x9A,
+0x00, 0x6C, 0x08, 0x6D, 0x00, 0x18, 0x42, 0xE7,
 0x1B, 0x97, 0x1A, 0x91, 0x19, 0x90, 0x00, 0x6A,
 0x0E, 0x63, 0x00, 0xEF, 0xFD, 0x63, 0x05, 0x62,
-0x00, 0x6A, 0x10, 0xF0, 0x24, 0x6B, 0x9C, 0xF5,
-0x6C, 0x9B, 0x54, 0x34, 0x01, 0x4A, 0x71, 0xE4,
+0x00, 0x6A, 0x10, 0xF0, 0x24, 0x6B, 0x7C, 0xF1,
+0x68, 0x9B, 0x54, 0x34, 0x01, 0x4A, 0x71, 0xE4,
 0xA0, 0xA4, 0xF8, 0x6B, 0xAC, 0xEB, 0x60, 0xC4,
 0xFF, 0x6B, 0x6C, 0xEA, 0x80, 0x72, 0xF1, 0x61,
 0x80, 0x18, 0xCC, 0x0F, 0x80, 0x18, 0xD2, 0x0F,
@@ -29407,7 +29246,7 @@ u8 array_mp_8821c_fw_nic[] = {
 0x62, 0x85, 0x78, 0x73, 0x03, 0x60, 0x58, 0x73,
 0x7D, 0x67, 0x1A, 0x61, 0x82, 0x85, 0x60, 0xA6,
 0x78, 0x6F, 0xEE, 0xEC, 0x10, 0xF0, 0x24, 0x6F,
-0x72, 0x30, 0x3D, 0xF3, 0x10, 0x4F, 0xE1, 0xE0,
+0x72, 0x30, 0xFC, 0xF6, 0x10, 0x4F, 0xE1, 0xE0,
 0x00, 0xA0, 0x01, 0x5C, 0x98, 0x67, 0x94, 0x34,
 0x8D, 0xE8, 0x3D, 0x67, 0x00, 0xC1, 0x0F, 0x68,
 0x6C, 0xE8, 0xFD, 0xE0, 0x60, 0xA7, 0x02, 0x4D,
@@ -29418,7 +29257,7 @@ u8 array_mp_8821c_fw_nic[] = {
 0x78, 0x74, 0xF8, 0x67, 0x01, 0x5F, 0x18, 0x67,
 0x14, 0x30, 0x18, 0x65, 0x0C, 0x6C, 0x07, 0x97,
 0x0F, 0x68, 0x10, 0xF0, 0x24, 0x69, 0xE7, 0xEC,
-0x0C, 0xEF, 0x3D, 0xF3, 0x10, 0x49, 0x3D, 0xE7,
+0x0C, 0xEF, 0xFC, 0xF6, 0x10, 0x49, 0x3D, 0xE7,
 0xE0, 0xA7, 0x06, 0x90, 0x38, 0x67, 0x2D, 0xEF,
 0xFC, 0x4C, 0xE0, 0xC0, 0x01, 0x48, 0xE4, 0x44,
 0x06, 0xD0, 0xED, 0x2F, 0x04, 0x4B, 0x02, 0x4D,
@@ -29427,7 +29266,7 @@ u8 array_mp_8821c_fw_nic[] = {
 0x06, 0xD3, 0x78, 0x74, 0x98, 0x67, 0x01, 0x5C,
 0xF8, 0x67, 0xF4, 0x37, 0x07, 0xD1, 0x1F, 0x65,
 0x1C, 0x6C, 0x07, 0x97, 0x0F, 0x68, 0x10, 0xF0,
-0x24, 0x69, 0xE6, 0xEC, 0x0C, 0xEF, 0x3D, 0xF3,
+0x24, 0x69, 0xE6, 0xEC, 0x0C, 0xEF, 0xFC, 0xF6,
 0x10, 0x49, 0x3D, 0xE7, 0xE0, 0xA7, 0x06, 0x91,
 0x18, 0x67, 0x0D, 0xEF, 0xFC, 0x4C, 0xE0, 0xC1,
 0x01, 0x49, 0xE4, 0x44, 0x06, 0xD1, 0xED, 0x2F,
@@ -29438,8 +29277,8 @@ u8 array_mp_8821c_fw_nic[] = {
 0x01, 0x24, 0x60, 0xC2, 0x0A, 0x97, 0x09, 0x91,
 0x08, 0x90, 0xEB, 0xE2, 0x05, 0x63, 0x20, 0xE8,
 0x30, 0xF0, 0x20, 0x6A, 0x01, 0x6B, 0xEF, 0xF4,
-0x08, 0x4A, 0x6B, 0xEB, 0x40, 0xF6, 0x74, 0xC2,
-0x40, 0xF6, 0x75, 0xC2, 0x40, 0xF6, 0x76, 0xC2,
+0x08, 0x4A, 0x6B, 0xEB, 0x40, 0xF6, 0x70, 0xC2,
+0x40, 0xF6, 0x71, 0xC2, 0x40, 0xF6, 0x72, 0xC2,
 0x20, 0xE8, 0x00, 0x65, 0xFB, 0x63, 0x09, 0x62,
 0x08, 0xD0, 0x60, 0xA4, 0x41, 0xA4, 0x82, 0xA4,
 0x00, 0xF0, 0x12, 0x06, 0x00, 0xF0, 0x1E, 0x07,
@@ -29478,7 +29317,7 @@ u8 array_mp_8821c_fw_nic[] = {
 0xF4, 0xC0, 0x43, 0xF4, 0xE4, 0x43, 0xE4, 0x37,
 0xB5, 0xE7, 0xE0, 0xAD, 0x74, 0x33, 0xF5, 0xC0,
 0xE2, 0x37, 0xF6, 0xC0, 0x10, 0xF0, 0x24, 0x6F,
-0x9C, 0xF5, 0xF0, 0x9F, 0xED, 0xE3, 0x60, 0xA3,
+0x7C, 0xF1, 0xEC, 0x9F, 0xED, 0xE3, 0x60, 0xA3,
 0x80, 0xCE, 0x80, 0xCD, 0x77, 0xC0, 0x02, 0x10,
 0x9D, 0x67, 0x72, 0xC4, 0x81, 0x5A, 0x23, 0x60,
 0xC3, 0xF3, 0x84, 0x42, 0x30, 0xF0, 0x20, 0x6B,
@@ -29487,7 +29326,7 @@ u8 array_mp_8821c_fw_nic[] = {
 0xB9, 0xC6, 0xA2, 0x35, 0xBA, 0xC6, 0x43, 0xF4,
 0xA4, 0x42, 0xA4, 0x35, 0x6D, 0xE5, 0xA0, 0xAB,
 0x54, 0x32, 0xBB, 0xC6, 0xA2, 0x35, 0xBC, 0xC6,
-0x10, 0xF0, 0x24, 0x6D, 0x9C, 0xF5, 0xB0, 0x9D,
+0x10, 0xF0, 0x24, 0x6D, 0x7C, 0xF1, 0xAC, 0x9D,
 0xA9, 0xE2, 0x40, 0xA2, 0x5D, 0xC6, 0x00, 0x6A,
 0x40, 0xCC, 0x40, 0xCB, 0x02, 0x10, 0xFD, 0x67,
 0x58, 0xC7, 0x04, 0x6A, 0x1D, 0x67, 0x50, 0xC0,
@@ -29515,8 +29354,8 @@ u8 array_mp_8821c_fw_nic[] = {
 0x11, 0x72, 0x05, 0x60, 0x08, 0x10, 0x85, 0x67,
 0x80, 0x18, 0x9F, 0x17, 0x10, 0x10, 0x85, 0x67,
 0x80, 0x18, 0xD4, 0x18, 0x0C, 0x10, 0x10, 0xF0,
-0x24, 0x6A, 0x7C, 0xF3, 0x6C, 0x9A, 0x10, 0xF0,
-0x24, 0x6C, 0x5C, 0xF3, 0x94, 0x9C, 0x40, 0x9B,
+0x24, 0x6A, 0x3B, 0xF7, 0x6C, 0x9A, 0x10, 0xF0,
+0x24, 0x6C, 0x5B, 0xF7, 0x84, 0x9C, 0x40, 0x9B,
 0x8D, 0xEA, 0x40, 0xDB, 0xFF, 0x6A, 0x05, 0x97,
 0x03, 0x63, 0x00, 0xEF, 0xF8, 0x63, 0x0F, 0x62,
 0x0E, 0xD1, 0x0D, 0xD0, 0x00, 0x6A, 0x10, 0xD4,
@@ -29555,7 +29394,7 @@ u8 array_mp_8821c_fw_nic[] = {
 0x04, 0xD0, 0x30, 0xF0, 0x20, 0x6A, 0xC5, 0xF4,
 0x40, 0xAA, 0x07, 0xD5, 0x08, 0xD6, 0x01, 0x72,
 0x09, 0xD7, 0x06, 0xD4, 0x0C, 0x61, 0x30, 0xF0,
-0x21, 0x68, 0x06, 0x95, 0xB0, 0xF3, 0x10, 0x48,
+0x21, 0x68, 0x06, 0x95, 0xB0, 0xF3, 0x0C, 0x48,
 0x90, 0x67, 0x07, 0x06, 0x80, 0x18, 0x06, 0x18,
 0x90, 0x67, 0x80, 0x18, 0xF3, 0x18, 0x05, 0x97,
 0x04, 0x90, 0x03, 0x63, 0x00, 0xEF, 0x00, 0x65,
@@ -29568,14 +29407,14 @@ u8 array_mp_8821c_fw_nic[] = {
 0x72, 0xC2, 0x04, 0xF0, 0x00, 0x6B, 0x8C, 0xEB,
 0x29, 0x23, 0xE5, 0xF2, 0xB0, 0xA2, 0xE5, 0xF2,
 0xD1, 0xA2, 0xE5, 0xF2, 0xF2, 0xA2, 0x10, 0xF0,
-0x24, 0x6C, 0x5D, 0xF3, 0x04, 0x4C, 0x80, 0x18,
+0x24, 0x6C, 0x1C, 0xF7, 0x04, 0x4C, 0x80, 0x18,
 0x35, 0x19, 0x1C, 0x10, 0x02, 0x73, 0x1A, 0x61,
 0x62, 0xA4, 0xE5, 0xF2, 0x70, 0xC2, 0x63, 0xA4,
 0x65, 0xF4, 0x80, 0x9A, 0xE5, 0xF2, 0x71, 0xC2,
 0x01, 0x6B, 0x6B, 0xEB, 0xE5, 0xF2, 0x72, 0xC2,
 0x04, 0xF0, 0x00, 0x6B, 0x8C, 0xEB, 0x0A, 0x23,
 0xE5, 0xF2, 0xB0, 0xA2, 0xE5, 0xF2, 0xD1, 0xA2,
-0x10, 0xF0, 0x24, 0x6C, 0x7D, 0xF3, 0x14, 0x4C,
+0x10, 0xF0, 0x24, 0x6C, 0x3C, 0xF7, 0x14, 0x4C,
 0x80, 0x18, 0x35, 0x19, 0x30, 0xF0, 0x20, 0x6A,
 0x05, 0x97, 0xC0, 0xF1, 0x08, 0x4A, 0x01, 0x6B,
 0xE5, 0xF2, 0x76, 0xC2, 0x00, 0x6B, 0xE5, 0xF2,
@@ -29584,7 +29423,7 @@ u8 array_mp_8821c_fw_nic[] = {
 0xFF, 0x6A, 0x8C, 0xEA, 0x14, 0xD2, 0x40, 0xF0,
 0x06, 0x03, 0x20, 0xF0, 0x1A, 0x02, 0x00, 0x6C,
 0x80, 0xC2, 0x01, 0x4A, 0x6A, 0xEA, 0xFB, 0x61,
-0x30, 0xF0, 0x21, 0x6B, 0x30, 0xF3, 0x1C, 0x4B,
+0x30, 0xF0, 0x21, 0x6B, 0x30, 0xF3, 0x18, 0x4B,
 0x00, 0x68, 0x12, 0xD3, 0x13, 0xD0, 0x65, 0x10,
 0x12, 0x93, 0x20, 0xA3, 0xFF, 0x71, 0x0A, 0x61,
 0x7D, 0x67, 0x09, 0xE3, 0x01, 0x6B, 0x6B, 0xEB,
@@ -29598,16 +29437,16 @@ u8 array_mp_8821c_fw_nic[] = {
 0x20, 0x6D, 0x25, 0xF6, 0xA8, 0x9D, 0x65, 0xC4,
 0xFF, 0x6C, 0x8C, 0xE8, 0x07, 0xF7, 0x01, 0x4C,
 0xAC, 0xEC, 0x0A, 0x24, 0xD6, 0xAA, 0xE3, 0xA2,
-0x10, 0xF0, 0x24, 0x6C, 0x9D, 0xF3, 0x18, 0x4C,
+0x10, 0xF0, 0x24, 0x6C, 0x5C, 0xF7, 0x18, 0x4C,
 0xB1, 0x67, 0x04, 0xD3, 0x80, 0x18, 0x35, 0x19,
 0x14, 0x93, 0x02, 0x6A, 0x4E, 0xEB, 0x21, 0x2B,
 0x30, 0xF0, 0x20, 0x6A, 0x2C, 0x34, 0x2F, 0xF7,
-0x1C, 0x4A, 0x89, 0xE2, 0xA3, 0xAA, 0x0E, 0x04,
+0x18, 0x4A, 0x89, 0xE2, 0xA3, 0xAA, 0x0E, 0x04,
 0x11, 0xE4, 0xA2, 0xC4, 0xA3, 0xAA, 0x02, 0x48,
 0xA2, 0x35, 0xA3, 0xC4, 0x63, 0xCA, 0x30, 0xF0,
 0x20, 0x6B, 0x25, 0xF6, 0x68, 0x9B, 0xFF, 0x6A,
 0x4C, 0xE8, 0x07, 0xF7, 0x01, 0x4A, 0x6C, 0xEA,
-0x08, 0x22, 0x10, 0xF0, 0x24, 0x6C, 0xBD, 0xF3,
+0x08, 0x22, 0x10, 0xF0, 0x24, 0x6C, 0x7C, 0xF7,
 0x1C, 0x4C, 0xB1, 0x67, 0x00, 0x6E, 0x80, 0x18,
 0x35, 0x19, 0x13, 0x93, 0xFF, 0x6A, 0x01, 0x4B,
 0x4C, 0xEB, 0x12, 0x92, 0x13, 0xD3, 0x01, 0x4A,
@@ -29617,7 +29456,7 @@ u8 array_mp_8821c_fw_nic[] = {
 0x28, 0x22, 0x7D, 0x67, 0x20, 0xF0, 0x5D, 0xA3,
 0x20, 0xF0, 0xBA, 0xA3, 0x20, 0xF0, 0xDB, 0xA3,
 0x20, 0xF0, 0xFC, 0xA3, 0x04, 0xD2, 0x20, 0xF0,
-0x5E, 0xA3, 0x10, 0xF0, 0x24, 0x6C, 0xDD, 0xF3,
+0x5E, 0xA3, 0x10, 0xF0, 0x24, 0x6C, 0x9C, 0xF7,
 0x14, 0x4C, 0x05, 0xD2, 0x20, 0xF0, 0x5F, 0xA3,
 0x06, 0xD2, 0x40, 0xF0, 0x40, 0xA3, 0x07, 0xD2,
 0x40, 0xF0, 0x41, 0xA3, 0x08, 0xD2, 0x40, 0xF0,
@@ -29639,24 +29478,24 @@ u8 array_mp_8821c_fw_nic[] = {
 0x6F, 0xE2, 0x07, 0xD3, 0x30, 0xF0, 0x20, 0x6B,
 0x25, 0xF6, 0x68, 0x9B, 0xE7, 0xF7, 0x1D, 0x4A,
 0x6C, 0xEA, 0x07, 0x22, 0x08, 0x97, 0x10, 0xF0,
-0x24, 0x6C, 0x1D, 0xF4, 0x10, 0x4C, 0x80, 0x18,
+0x24, 0x6C, 0xDC, 0xF7, 0x10, 0x4C, 0x80, 0x18,
 0x35, 0x19, 0x80, 0x18, 0x50, 0x18, 0x00, 0x68,
 0x06, 0x91, 0x4A, 0x10, 0x08, 0x93, 0x01, 0x6A,
 0x44, 0xE9, 0x6C, 0xEA, 0x1A, 0x22, 0x30, 0xF0,
 0x20, 0x6A, 0xEF, 0xF4, 0x08, 0x4A, 0x30, 0xF0,
 0x20, 0x6B, 0x49, 0xE0, 0x25, 0xF6, 0x68, 0x9B,
-0x40, 0xF6, 0x34, 0xC2, 0x01, 0x48, 0xFF, 0x6A,
+0x40, 0xF6, 0x30, 0xC2, 0x01, 0x48, 0xFF, 0x6A,
 0x4C, 0xE8, 0x07, 0xF7, 0x01, 0x4A, 0x6C, 0xEA,
-0x08, 0x22, 0x10, 0xF0, 0x24, 0x6C, 0x3D, 0xF4,
+0x08, 0x22, 0x10, 0xF0, 0x24, 0x6C, 0xFC, 0xF7,
 0x18, 0x4C, 0xB0, 0x67, 0xD1, 0x67, 0x80, 0x18,
 0x35, 0x19, 0x07, 0x92, 0x4A, 0xE8, 0x04, 0x60,
 0x06, 0x92, 0x1F, 0x4A, 0x2E, 0xEA, 0x21, 0x2A,
 0x30, 0xF0, 0x20, 0x6B, 0x25, 0xF6, 0x68, 0x9B,
 0x08, 0xF0, 0x00, 0x6A, 0x6C, 0xEA, 0x12, 0x22,
 0x30, 0xF0, 0x20, 0x6A, 0xEF, 0xF4, 0x08, 0x4A,
-0x40, 0xF6, 0xD4, 0xA2, 0x40, 0xF6, 0xF5, 0xA2,
-0x40, 0xF6, 0x56, 0xA2, 0x10, 0xF0, 0x24, 0x6C,
-0x5D, 0xF4, 0x18, 0x4C, 0xB0, 0x67, 0x04, 0xD2,
+0x40, 0xF6, 0xD0, 0xA2, 0x40, 0xF6, 0xF1, 0xA2,
+0x40, 0xF6, 0x52, 0xA2, 0x10, 0xF0, 0x24, 0x6C,
+0x1D, 0xF0, 0x18, 0x4C, 0xB0, 0x67, 0x04, 0xD2,
 0x80, 0x18, 0x35, 0x19, 0x0D, 0x20, 0x07, 0x94,
 0x00, 0x68, 0x80, 0x18, 0x6E, 0x19, 0x80, 0x18,
 0x50, 0x18, 0x01, 0x49, 0xFF, 0x6A, 0x4C, 0xE9,
@@ -29664,11 +29503,11 @@ u8 array_mp_8821c_fw_nic[] = {
 0x0D, 0x97, 0x0C, 0x91, 0x0B, 0x90, 0x07, 0x63,
 0x00, 0xEF, 0x00, 0x65, 0xF6, 0x63, 0x13, 0x62,
 0x12, 0xD1, 0x11, 0xD0, 0x10, 0xF0, 0x24, 0x6B,
-0xFF, 0x6A, 0x8C, 0xEA, 0xBB, 0xF6, 0x94, 0x9B,
-0xBB, 0xF6, 0x14, 0x4B, 0x08, 0x72, 0x04, 0xD4,
+0xFF, 0x6A, 0x8C, 0xEA, 0x9B, 0xF2, 0x90, 0x9B,
+0x9B, 0xF2, 0x10, 0x4B, 0x08, 0x72, 0x04, 0xD4,
 0x81, 0x9B, 0x68, 0xA3, 0x05, 0xD4, 0x9D, 0x67,
-0x78, 0xC4, 0x10, 0xF0, 0x24, 0x6B, 0xBB, 0xF6,
-0x88, 0x9B, 0xBB, 0xF6, 0x08, 0x4B, 0x07, 0xD4,
+0x78, 0xC4, 0x10, 0xF0, 0x24, 0x6B, 0x9B, 0xF2,
+0x84, 0x9B, 0x9B, 0xF2, 0x04, 0x4B, 0x07, 0xD4,
 0x81, 0x9B, 0x68, 0xA3, 0x08, 0xD4, 0x9D, 0x67,
 0x20, 0xF0, 0x64, 0xC4, 0x37, 0x61, 0x20, 0xF0,
 0x05, 0x02, 0x07, 0x00, 0x04, 0x01, 0x0E, 0xD2,
@@ -29705,16 +29544,16 @@ u8 array_mp_8821c_fw_nic[] = {
 0xAC, 0xEB, 0x03, 0x23, 0x80, 0x18, 0x13, 0x1A,
 0x34, 0x10, 0x04, 0xA2, 0x22, 0xA2, 0x43, 0xA2,
 0x10, 0x30, 0x08, 0x74, 0x4D, 0xE8, 0x0E, 0x61,
-0x10, 0xF0, 0x24, 0x6C, 0x9D, 0xF4, 0x00, 0x4C,
+0x10, 0xF0, 0x24, 0x6C, 0x5D, 0xF0, 0x00, 0x4C,
 0x80, 0x18, 0xF3, 0x18, 0x30, 0xF0, 0x20, 0x6A,
 0xC0, 0xF1, 0x08, 0x4A, 0x45, 0xE1, 0x45, 0xF2,
 0x08, 0xC1, 0x1F, 0x10, 0x09, 0x74, 0x0E, 0x61,
-0x10, 0xF0, 0x24, 0x6C, 0xBD, 0xF4, 0x00, 0x4C,
+0x10, 0xF0, 0x24, 0x6C, 0x7D, 0xF0, 0x00, 0x4C,
 0x80, 0x18, 0xF3, 0x18, 0x30, 0xF0, 0x20, 0x6A,
 0xC0, 0xF1, 0x08, 0x4A, 0x45, 0xE1, 0x85, 0xF2,
 0x1C, 0xC1, 0x0F, 0x10, 0x0A, 0x74, 0x0D, 0x61,
-0x10, 0xF0, 0x24, 0x6A, 0x9C, 0xF5, 0xF4, 0x9A,
-0x10, 0xF0, 0x24, 0x6C, 0xBD, 0xF4, 0x10, 0x4C,
+0x10, 0xF0, 0x24, 0x6A, 0x7C, 0xF1, 0xF0, 0x9A,
+0x10, 0xF0, 0x24, 0x6C, 0x7D, 0xF0, 0x10, 0x4C,
 0xF9, 0x6D, 0x28, 0xF3, 0x01, 0x6E, 0x80, 0x18,
 0x35, 0x19, 0x07, 0x97, 0x06, 0x91, 0x05, 0x90,
 0x04, 0x63, 0x00, 0xEF, 0xFB, 0x63, 0x09, 0x62,
@@ -29803,56 +29642,56 @@ u8 array_mp_8821c_fw_nic[] = {
 0x46, 0xC0, 0x62, 0xA4, 0x20, 0xF0, 0xA5, 0xA0,
 0x30, 0x6A, 0x4C, 0xEB, 0x9F, 0x4A, 0xAC, 0xEA,
 0x6D, 0xEA, 0x20, 0xF0, 0x45, 0xC0, 0x10, 0xF0,
-0x24, 0x6D, 0x10, 0xF0, 0x24, 0x6A, 0x9C, 0xF5,
-0x58, 0x9A, 0x9C, 0xF5, 0xBC, 0x9D, 0x2C, 0x33,
+0x24, 0x6D, 0x10, 0xF0, 0x24, 0x6A, 0x7C, 0xF1,
+0x54, 0x9A, 0x7C, 0xF1, 0xB8, 0x9D, 0x2C, 0x33,
 0x49, 0xE3, 0x03, 0x4C, 0xAD, 0xE3, 0xA0, 0xA4,
 0x01, 0x4C, 0xA0, 0xC2, 0x01, 0x4A, 0x6A, 0xEA,
 0xFA, 0x61, 0x30, 0xF0, 0x20, 0x6A, 0x25, 0xF6,
 0x48, 0x9A, 0x02, 0x6B, 0x6C, 0xEA, 0x0F, 0x22,
 0x20, 0xF0, 0xC5, 0xA0, 0x44, 0xA0, 0x10, 0xF0,
 0x24, 0x6C, 0xDA, 0x37, 0x04, 0xD2, 0x01, 0x6A,
-0xDD, 0xF4, 0x1C, 0x4C, 0xB1, 0x67, 0xDE, 0x36,
+0x9D, 0xF0, 0x1C, 0x4C, 0xB1, 0x67, 0xDE, 0x36,
 0x4C, 0xEF, 0x80, 0x18, 0x35, 0x19, 0x30, 0xF0,
 0x20, 0x6A, 0x25, 0xF6, 0x48, 0x9A, 0x02, 0x6B,
 0x6C, 0xEA, 0x16, 0x22, 0x20, 0xF0, 0x66, 0xA0,
 0x20, 0xF0, 0xC5, 0xA0, 0x01, 0x6C, 0x6A, 0x33,
 0x8C, 0xEB, 0x06, 0x97, 0x03, 0x6A, 0xCA, 0x35,
 0x04, 0xD3, 0x10, 0xF0, 0x24, 0x6C, 0xD2, 0x33,
-0x4C, 0xEB, 0x1D, 0xF5, 0x00, 0x4C, 0x4C, 0xED,
+0x4C, 0xEB, 0xDD, 0xF0, 0x00, 0x4C, 0x4C, 0xED,
 0x4C, 0xEE, 0x05, 0xD3, 0x80, 0x18, 0x35, 0x19,
-0x10, 0xF0, 0x24, 0x6A, 0x9C, 0xF5, 0x58, 0x9A,
+0x10, 0xF0, 0x24, 0x6A, 0x7C, 0xF1, 0x54, 0x9A,
 0x2C, 0x33, 0x49, 0xE3, 0x60, 0x9A, 0x30, 0xF0,
 0x20, 0x6A, 0xCC, 0xF1, 0x56, 0xA2, 0x01, 0x72,
-0x16, 0x61, 0x10, 0xF0, 0x24, 0x6A, 0xBC, 0xF5,
-0x40, 0x9A, 0x63, 0xEA, 0x10, 0x60, 0x10, 0xF0,
-0x24, 0x6A, 0xBC, 0xF5, 0x44, 0x9A, 0x00, 0x6B,
-0x60, 0xC2, 0x10, 0xF0, 0x24, 0x6A, 0xBC, 0xF5,
-0x68, 0x9A, 0x10, 0xF0, 0x24, 0x6A, 0xBC, 0xF2,
-0x50, 0x9A, 0x60, 0xDA, 0xF0, 0x17, 0x20, 0xF0,
+0x16, 0x61, 0x10, 0xF0, 0x24, 0x6A, 0x7C, 0xF1,
+0x5C, 0x9A, 0x63, 0xEA, 0x10, 0x60, 0x10, 0xF0,
+0x24, 0x6A, 0x9C, 0xF1, 0x40, 0x9A, 0x00, 0x6B,
+0x60, 0xC2, 0x10, 0xF0, 0x24, 0x6A, 0x9C, 0xF1,
+0x64, 0x9A, 0x10, 0xF0, 0x24, 0x6A, 0x9B, 0xF6,
+0x4C, 0x9A, 0x60, 0xDA, 0xF0, 0x17, 0x20, 0xF0,
 0x45, 0xA0, 0x03, 0x6B, 0x4A, 0x32, 0x6C, 0xEA,
 0x30, 0xF0, 0x20, 0x6B, 0xCC, 0xF1, 0x74, 0xA3,
 0x05, 0x73, 0x11, 0x61, 0x38, 0x22, 0x10, 0xF0,
-0x24, 0x6A, 0xBC, 0xF5, 0x44, 0x9A, 0x00, 0x6B,
-0x60, 0xC2, 0x10, 0xF0, 0x24, 0x6A, 0xBC, 0xF5,
-0x6C, 0x9A, 0x10, 0xF0, 0x24, 0x6A, 0xBC, 0xF2,
-0x50, 0x9A, 0x60, 0xDA, 0xF0, 0x17, 0x06, 0x73,
+0x24, 0x6A, 0x9C, 0xF1, 0x40, 0x9A, 0x00, 0x6B,
+0x60, 0xC2, 0x10, 0xF0, 0x24, 0x6A, 0x9C, 0xF1,
+0x68, 0x9A, 0x10, 0xF0, 0x24, 0x6A, 0x9B, 0xF6,
+0x4C, 0x9A, 0x60, 0xDA, 0xF0, 0x17, 0x06, 0x73,
 0x12, 0x61, 0x02, 0x5A, 0x24, 0x61, 0x10, 0xF0,
-0x24, 0x6A, 0xBC, 0xF5, 0x44, 0x9A, 0x00, 0x6B,
-0x60, 0xC2, 0x10, 0xF0, 0x24, 0x6A, 0xBC, 0xF5,
-0x70, 0x9A, 0x10, 0xF0, 0x24, 0x6A, 0xBC, 0xF2,
-0x50, 0x9A, 0x60, 0xDA, 0xF0, 0x17, 0x07, 0x73,
+0x24, 0x6A, 0x9C, 0xF1, 0x40, 0x9A, 0x00, 0x6B,
+0x60, 0xC2, 0x10, 0xF0, 0x24, 0x6A, 0x9C, 0xF1,
+0x6C, 0x9A, 0x10, 0xF0, 0x24, 0x6A, 0x9B, 0xF6,
+0x4C, 0x9A, 0x60, 0xDA, 0xF0, 0x17, 0x07, 0x73,
 0x12, 0x61, 0x03, 0x72, 0x10, 0x61, 0x10, 0xF0,
-0x24, 0x6A, 0xBC, 0xF5, 0x44, 0x9A, 0x00, 0x6B,
-0x60, 0xC2, 0x10, 0xF0, 0x24, 0x6A, 0xBC, 0xF5,
-0x74, 0x9A, 0x10, 0xF0, 0x24, 0x6A, 0xBC, 0xF2,
-0x50, 0x9A, 0x60, 0xDA, 0xF0, 0x17, 0x30, 0xF0,
+0x24, 0x6A, 0x9C, 0xF1, 0x40, 0x9A, 0x00, 0x6B,
+0x60, 0xC2, 0x10, 0xF0, 0x24, 0x6A, 0x9C, 0xF1,
+0x70, 0x9A, 0x10, 0xF0, 0x24, 0x6A, 0x9B, 0xF6,
+0x4C, 0x9A, 0x60, 0xDA, 0xF0, 0x17, 0x30, 0xF0,
 0x20, 0x6A, 0xCC, 0xF1, 0x57, 0xA2, 0x02, 0x72,
 0x16, 0x61, 0x20, 0xF0, 0x45, 0xA0, 0x03, 0x6B,
 0x52, 0x32, 0x6C, 0xEA, 0x10, 0x22, 0x10, 0xF0,
-0x24, 0x6A, 0xBC, 0xF5, 0x44, 0x9A, 0x00, 0x6B,
-0x60, 0xC2, 0x10, 0xF0, 0x24, 0x6A, 0xBC, 0xF5,
-0x78, 0x9A, 0x10, 0xF0, 0x24, 0x6A, 0xBC, 0xF2,
-0x50, 0x9A, 0x60, 0xDA, 0xF0, 0x17, 0x07, 0x93,
+0x24, 0x6A, 0x9C, 0xF1, 0x40, 0x9A, 0x00, 0x6B,
+0x60, 0xC2, 0x10, 0xF0, 0x24, 0x6A, 0x9C, 0xF1,
+0x74, 0x9A, 0x10, 0xF0, 0x24, 0x6A, 0x9B, 0xF6,
+0x4C, 0x9A, 0x60, 0xDA, 0xF0, 0x17, 0x07, 0x93,
 0x60, 0x6A, 0x91, 0x67, 0x6C, 0xEA, 0x56, 0x32,
 0x06, 0xD2, 0x80, 0x18, 0x69, 0x1F, 0x06, 0x92,
 0x10, 0x22, 0x06, 0x93, 0x20, 0xF0, 0xC5, 0xA0,
@@ -29863,7 +29702,7 @@ u8 array_mp_8821c_fw_nic[] = {
 0x06, 0x63, 0x00, 0xEF, 0xFD, 0x63, 0x05, 0x62,
 0xFF, 0x6A, 0x4C, 0xEC, 0xC0, 0x4C, 0x4C, 0xEC,
 0x0F, 0x5C, 0x2B, 0x60, 0x10, 0xF0, 0x24, 0x6A,
-0x88, 0x34, 0x7B, 0xF6, 0x0C, 0x4A, 0x89, 0xE2,
+0x88, 0x34, 0x5B, 0xF2, 0x08, 0x4A, 0x89, 0xE2,
 0x40, 0x9A, 0x00, 0xEA, 0x85, 0x67, 0x80, 0x18,
 0x02, 0x1B, 0x1F, 0x10, 0x85, 0x67, 0x80, 0x18,
 0xBF, 0x1A, 0x1B, 0x10, 0x85, 0x67, 0x80, 0x18,
@@ -29876,7 +29715,7 @@ u8 array_mp_8821c_fw_nic[] = {
 0xC5, 0x18, 0x05, 0x97, 0x03, 0x63, 0x00, 0xEF,
 0xFD, 0x63, 0x05, 0x62, 0x04, 0xD0, 0x30, 0xF0,
 0x21, 0x6B, 0x30, 0xF0, 0x20, 0x68, 0x70, 0xF3,
-0xD6, 0xAB, 0xCE, 0xF4, 0x50, 0x98, 0x81, 0xF1,
+0xD2, 0xAB, 0xCE, 0xF4, 0x50, 0x98, 0x81, 0xF1,
 0x10, 0x6C, 0xFF, 0xF7, 0x1F, 0x6D, 0x40, 0xEA,
 0xCE, 0xF4, 0x50, 0x98, 0xFF, 0x6D, 0x81, 0xF1,
 0x14, 0x6C, 0x01, 0x4D, 0x01, 0x6E, 0x40, 0xEA,
@@ -29889,46 +29728,46 @@ u8 array_mp_8821c_fw_nic[] = {
 0x07, 0x97, 0x06, 0x91, 0x05, 0x90, 0x04, 0x63,
 0x00, 0xEF, 0x00, 0x65, 0x30, 0xF0, 0x20, 0x6A,
 0xEF, 0xF4, 0x08, 0x4A, 0x00, 0x6B, 0x80, 0xF6,
-0x6B, 0xC2, 0x80, 0xF6, 0x6A, 0xC2, 0x05, 0x6B,
-0x80, 0xF6, 0x69, 0xC2, 0x00, 0x6B, 0x80, 0xF6,
-0x70, 0xDA, 0x20, 0xE8, 0xFC, 0x63, 0x07, 0x62,
+0x67, 0xC2, 0x80, 0xF6, 0x66, 0xC2, 0x05, 0x6B,
+0x80, 0xF6, 0x65, 0xC2, 0x00, 0x6B, 0x80, 0xF6,
+0x6C, 0xDA, 0x20, 0xE8, 0xFC, 0x63, 0x07, 0x62,
 0x06, 0xD1, 0x05, 0xD0, 0x60, 0xA4, 0x80, 0x6A,
 0x30, 0xF0, 0x20, 0x68, 0x4B, 0xEA, 0xEF, 0xF4,
-0x08, 0x48, 0x6C, 0xEA, 0x80, 0xF6, 0x4B, 0xC0,
+0x08, 0x48, 0x6C, 0xEA, 0x80, 0xF6, 0x47, 0xC0,
 0x60, 0xA4, 0x0F, 0x6A, 0x24, 0x67, 0x6C, 0xEA,
-0x80, 0xF6, 0x48, 0xC0, 0x41, 0xA4, 0x80, 0xF6,
-0x68, 0xA0, 0x80, 0xF6, 0x49, 0xC0, 0x00, 0x6A,
-0x01, 0x4B, 0x80, 0xF6, 0x4A, 0xC0, 0x01, 0x6A,
-0x44, 0xEB, 0xFF, 0x4A, 0x80, 0xF6, 0x4E, 0xC8,
+0x80, 0xF6, 0x44, 0xC0, 0x41, 0xA4, 0x80, 0xF6,
+0x64, 0xA0, 0x80, 0xF6, 0x45, 0xC0, 0x00, 0x6A,
+0x01, 0x4B, 0x80, 0xF6, 0x46, 0xC0, 0x01, 0x6A,
+0x44, 0xEB, 0xFF, 0x4A, 0x80, 0xF6, 0x4A, 0xC8,
 0x80, 0x18, 0xBA, 0x1B, 0x30, 0xF0, 0x20, 0x6B,
 0x25, 0xF6, 0x68, 0x9B, 0x10, 0xF0, 0x00, 0x6A,
 0x6C, 0xEA, 0x0A, 0x22, 0xA1, 0xA1, 0xC0, 0xA1,
-0x80, 0xF6, 0xEE, 0xA8, 0x10, 0xF0, 0x24, 0x6C,
-0x3D, 0xF5, 0x0C, 0x4C, 0x80, 0x18, 0x35, 0x19,
+0x80, 0xF6, 0xEA, 0xA8, 0x10, 0xF0, 0x24, 0x6C,
+0xFD, 0xF0, 0x0C, 0x4C, 0x80, 0x18, 0x35, 0x19,
 0x07, 0x97, 0x06, 0x91, 0x05, 0x90, 0x04, 0x63,
 0x00, 0xEF, 0x00, 0x65, 0xFD, 0x63, 0x05, 0x62,
-0x04, 0xD0, 0x10, 0xF0, 0x24, 0x6A, 0x5C, 0xF3,
-0xB0, 0x9A, 0xA1, 0xF7, 0x04, 0x6C, 0x00, 0x18,
-0x42, 0xE7, 0x01, 0x22, 0x01, 0x6A, 0x30, 0xF0,
+0x04, 0xD0, 0x10, 0xF0, 0x24, 0x6A, 0x5B, 0xF7,
+0xA0, 0x9A, 0xA1, 0xF7, 0x04, 0x6C, 0x00, 0x18,
+0xE4, 0xE6, 0x01, 0x22, 0x01, 0x6A, 0x30, 0xF0,
 0x20, 0x6B, 0x25, 0xF6, 0x68, 0x9B, 0x02, 0x67,
 0x10, 0xF0, 0x00, 0x6A, 0x6C, 0xEA, 0x07, 0x22,
-0x10, 0xF0, 0x24, 0x6C, 0x5D, 0xF5, 0x08, 0x4C,
+0x10, 0xF0, 0x24, 0x6C, 0x1D, 0xF1, 0x08, 0x4C,
 0xB0, 0x67, 0x80, 0x18, 0x35, 0x19, 0x50, 0x67,
 0x05, 0x97, 0x04, 0x90, 0x03, 0x63, 0x00, 0xEF,
 0xFD, 0x63, 0x05, 0x62, 0xA1, 0xF7, 0x04, 0x6C,
-0xFF, 0xF7, 0x1F, 0x6D, 0x00, 0x18, 0x42, 0xE7,
+0xFF, 0xF7, 0x1F, 0x6D, 0x00, 0x18, 0xE4, 0xE6,
 0x30, 0xF0, 0x20, 0x6C, 0x30, 0xF0, 0x20, 0x6B,
 0x25, 0xF6, 0x88, 0x9C, 0xEF, 0xF4, 0x08, 0x4B,
-0x80, 0xF6, 0x4C, 0xCB, 0x10, 0xF0, 0x00, 0x6A,
-0x8C, 0xEA, 0x08, 0x22, 0x80, 0xF6, 0xAC, 0xAB,
-0x10, 0xF0, 0x24, 0x6C, 0x5D, 0xF5, 0x14, 0x4C,
+0x80, 0xF6, 0x48, 0xCB, 0x10, 0xF0, 0x00, 0x6A,
+0x8C, 0xEA, 0x08, 0x22, 0x80, 0xF6, 0xA8, 0xAB,
+0x10, 0xF0, 0x24, 0x6C, 0x1D, 0xF1, 0x14, 0x4C,
 0x80, 0x18, 0x35, 0x19, 0x05, 0x97, 0x03, 0x63,
 0x00, 0xEF, 0x00, 0x65, 0xFA, 0x63, 0x0B, 0x62,
 0x0A, 0xD1, 0x09, 0xD0, 0x30, 0xF0, 0x20, 0x6B,
 0x25, 0xF6, 0x68, 0x9B, 0x10, 0xF0, 0x00, 0x6A,
 0xFF, 0x69, 0x04, 0x67, 0x6C, 0xEA, 0x2C, 0xE8,
 0xAC, 0xE9, 0x08, 0x22, 0x10, 0xF0, 0x24, 0x6C,
-0x7D, 0xF5, 0x00, 0x4C, 0xB0, 0x67, 0xD1, 0x67,
+0x3D, 0xF1, 0x00, 0x4C, 0xB0, 0x67, 0xD1, 0x67,
 0x80, 0x18, 0x35, 0x19, 0x5D, 0x67, 0x12, 0xC2,
 0x33, 0xC2, 0x7D, 0x67, 0x2A, 0x6A, 0x50, 0xC3,
 0x02, 0x6A, 0x4F, 0xCB, 0x07, 0x97, 0x04, 0x94,
@@ -29936,36 +29775,36 @@ u8 array_mp_8821c_fw_nic[] = {
 0x0B, 0x97, 0x0A, 0x91, 0x09, 0x90, 0x06, 0x63,
 0x00, 0xEF, 0x00, 0x65, 0xFD, 0x63, 0x05, 0x62,
 0x30, 0xF0, 0x20, 0x6A, 0xEF, 0xF4, 0x08, 0x4A,
-0x80, 0xF6, 0x6B, 0xA2, 0x68, 0x23, 0x80, 0xF6,
-0xCA, 0xA2, 0x80, 0xF6, 0x69, 0xA2, 0xC3, 0xEB,
+0x80, 0xF6, 0x67, 0xA2, 0x68, 0x23, 0x80, 0xF6,
+0xC6, 0xA2, 0x80, 0xF6, 0x65, 0xA2, 0xC3, 0xEB,
 0x62, 0x61, 0x30, 0xF0, 0x20, 0x6C, 0x25, 0xF6,
 0x88, 0x9C, 0x10, 0xF0, 0x00, 0x6B, 0x8C, 0xEB,
-0x08, 0x23, 0x80, 0xF6, 0xB0, 0x9A, 0x10, 0xF0,
-0x24, 0x6C, 0x7D, 0xF5, 0x0C, 0x4C, 0x80, 0x18,
+0x08, 0x23, 0x80, 0xF6, 0xAC, 0x9A, 0x10, 0xF0,
+0x24, 0x6C, 0x3D, 0xF1, 0x0C, 0x4C, 0x80, 0x18,
 0x35, 0x19, 0x30, 0xF0, 0x21, 0x6A, 0x70, 0xF3,
-0x78, 0x9A, 0x03, 0x6A, 0x5B, 0xEB, 0x01, 0x2A,
+0x74, 0x9A, 0x03, 0x6A, 0x5B, 0xEB, 0x01, 0x2A,
 0xE5, 0xE8, 0x10, 0xEA, 0x3F, 0x2A, 0x80, 0x18,
 0xFB, 0x1B, 0x2C, 0x22, 0x30, 0xF0, 0x20, 0x6B,
 0x25, 0xF6, 0x68, 0x9B, 0x10, 0xF0, 0x00, 0x6A,
 0x6C, 0xEA, 0x06, 0x22, 0x10, 0xF0, 0x24, 0x6C,
-0x9D, 0xF5, 0x00, 0x4C, 0x80, 0x18, 0x35, 0x19,
+0x5D, 0xF1, 0x00, 0x4C, 0x80, 0x18, 0x35, 0x19,
 0x80, 0x18, 0x0C, 0x1C, 0x30, 0xF0, 0x20, 0x6A,
-0xEF, 0xF4, 0x08, 0x4A, 0x80, 0xF6, 0x6E, 0xAA,
+0xEF, 0xF4, 0x08, 0x4A, 0x80, 0xF6, 0x6A, 0xAA,
 0xFF, 0xF7, 0x1F, 0x73, 0x13, 0x61, 0x80, 0xF6,
-0x8C, 0xAA, 0x64, 0x6B, 0x78, 0xEC, 0x8F, 0xF7,
+0x88, 0xAA, 0x64, 0x6B, 0x78, 0xEC, 0x8F, 0xF7,
 0x1C, 0x4B, 0x12, 0xEC, 0x71, 0xE4, 0x80, 0xF6,
-0x6A, 0xA2, 0x82, 0x34, 0x82, 0x34, 0x01, 0x4B,
-0x80, 0xF6, 0x6A, 0xC2, 0x80, 0xF6, 0xAA, 0xA2,
+0x66, 0xA2, 0x82, 0x34, 0x82, 0x34, 0x01, 0x4B,
+0x80, 0xF6, 0x66, 0xC2, 0x80, 0xF6, 0xA6, 0xA2,
 0x80, 0x18, 0x1D, 0x1C, 0x30, 0xF0, 0x20, 0x6B,
 0x25, 0xF6, 0x68, 0x9B, 0x10, 0xF0, 0x00, 0x6A,
 0x6C, 0xEA, 0x06, 0x22, 0x10, 0xF0, 0x24, 0x6C,
-0x9D, 0xF5, 0x08, 0x4C, 0x80, 0x18, 0x35, 0x19,
+0x5D, 0xF1, 0x08, 0x4C, 0x80, 0x18, 0x35, 0x19,
 0x80, 0x18, 0xC8, 0x1B, 0x30, 0xF0, 0x20, 0x6A,
-0xEF, 0xF4, 0x08, 0x4A, 0x80, 0xF6, 0x70, 0x9A,
-0x01, 0x4B, 0x80, 0xF6, 0x70, 0xDA, 0x05, 0x97,
+0xEF, 0xF4, 0x08, 0x4A, 0x80, 0xF6, 0x6C, 0x9A,
+0x01, 0x4B, 0x80, 0xF6, 0x6C, 0xDA, 0x05, 0x97,
 0x03, 0x63, 0x00, 0xEF, 0x10, 0xF0, 0x24, 0x6A,
-0xFF, 0x6B, 0x8C, 0xEB, 0xDB, 0xF7, 0x84, 0x9A,
-0xFE, 0x63, 0xDB, 0xF7, 0x04, 0x4A, 0x00, 0xD4,
+0xFF, 0x6B, 0x8C, 0xEB, 0xBB, 0xF3, 0x80, 0x9A,
+0xFE, 0x63, 0xBB, 0xF3, 0x00, 0x4A, 0x00, 0xD4,
 0x81, 0x9A, 0x44, 0xAA, 0x00, 0xF0, 0x0A, 0x05,
 0x01, 0xD4, 0x9D, 0x67, 0x44, 0xCC, 0x40, 0xA4,
 0x43, 0xEB, 0x05, 0x61, 0x01, 0x4B, 0x4B, 0xE3,
@@ -29977,7 +29816,7 @@ u8 array_mp_8821c_fw_nic[] = {
 0x80, 0x18, 0x6D, 0x1C, 0x14, 0x6C, 0x98, 0xEA,
 0x30, 0xF0, 0x20, 0x6B, 0x4A, 0x48, 0x0C, 0x30,
 0xEF, 0xF4, 0x08, 0x4B, 0x6D, 0xE0, 0x12, 0xEA,
-0x48, 0xC3, 0x05, 0x97, 0x04, 0x90, 0x03, 0x63,
+0x44, 0xC3, 0x05, 0x97, 0x04, 0x90, 0x03, 0x63,
 0x00, 0xEF, 0x00, 0x65, 0xFF, 0x63, 0x01, 0xD1,
 0x00, 0xD0, 0xFF, 0x6A, 0x8C, 0xEA, 0x05, 0x67,
 0x30, 0xF0, 0x20, 0x69, 0x43, 0xF4, 0xA4, 0x42,
@@ -30006,7 +29845,7 @@ u8 array_mp_8821c_fw_nic[] = {
 0x02, 0xCA, 0x03, 0x10, 0x01, 0x6B, 0x6B, 0xEB,
 0x62, 0xCA, 0x01, 0x91, 0x00, 0x90, 0x01, 0x63,
 0x20, 0xE8, 0x00, 0x65, 0x10, 0xF0, 0x24, 0x6A,
-0xBC, 0xF5, 0xBC, 0x9A, 0x30, 0xF0, 0x20, 0x6A,
+0x9C, 0xF1, 0xB8, 0x9A, 0x30, 0xF0, 0x20, 0x6A,
 0xC0, 0xF1, 0x08, 0x4A, 0x80, 0xA5, 0xE5, 0xF2,
 0xDB, 0xA2, 0x10, 0x6B, 0x8C, 0xEB, 0x02, 0x6C,
 0x8B, 0xEC, 0x72, 0x33, 0xCC, 0xEC, 0x6D, 0xEC,
@@ -30108,7 +29947,7 @@ u8 array_mp_8821c_fw_nic[] = {
 0x4D, 0xE3, 0x65, 0xAB, 0x65, 0xF4, 0x40, 0x9A,
 0x07, 0xD3, 0x02, 0x6B, 0x6C, 0xEA, 0x09, 0x22,
 0x07, 0x95, 0x04, 0x96, 0x10, 0xF0, 0x24, 0x6C,
-0x9D, 0xF5, 0x14, 0x4C, 0xF0, 0x67, 0x80, 0x18,
+0x5D, 0xF1, 0x14, 0x4C, 0xF0, 0x67, 0x80, 0x18,
 0x35, 0x19, 0x04, 0x92, 0x43, 0xE8, 0x17, 0x61,
 0x06, 0x94, 0x43, 0xE0, 0xFF, 0xF7, 0x1F, 0x6A,
 0x20, 0xF0, 0x64, 0xA4, 0x4C, 0xE8, 0x0F, 0x6C,
@@ -30133,7 +29972,7 @@ u8 array_mp_8821c_fw_nic[] = {
 0x8C, 0xEB, 0x10, 0x23, 0x06, 0x93, 0x49, 0xE0,
 0x45, 0xF4, 0xF2, 0xA2, 0x20, 0xF0, 0xA4, 0xA3,
 0x10, 0xF0, 0x24, 0x6C, 0x0F, 0x6B, 0xAE, 0x35,
-0xBD, 0xF5, 0x0C, 0x4C, 0x6C, 0xED, 0xD0, 0x67,
+0x7D, 0xF1, 0x0C, 0x4C, 0x6C, 0xED, 0xD0, 0x67,
 0x80, 0x18, 0x35, 0x19, 0x30, 0xF0, 0x20, 0x6A,
 0xC0, 0xF1, 0x08, 0x4A, 0x41, 0xE0, 0x45, 0xF4,
 0x52, 0xA0, 0xFF, 0xF7, 0x1F, 0x6B, 0x49, 0xE1,
@@ -30145,7 +29984,7 @@ u8 array_mp_8821c_fw_nic[] = {
 0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A,
 0x65, 0xF4, 0x60, 0x9A, 0x02, 0x6C, 0x8C, 0xEB,
 0x0D, 0x23, 0x05, 0x93, 0x10, 0xF0, 0x24, 0x6C,
-0xDD, 0xF5, 0x04, 0x4C, 0xC2, 0xF5, 0x10, 0x4B,
+0x9D, 0xF1, 0x04, 0x4C, 0xC2, 0xF5, 0x10, 0x4B,
 0x64, 0x33, 0x49, 0xE3, 0xA5, 0xAA, 0xD1, 0x67,
 0x80, 0x18, 0x35, 0x19, 0x07, 0x92, 0x11, 0x67,
 0x0B, 0x5A, 0x10, 0x61, 0x15, 0x59, 0x01, 0x6A,
@@ -30156,7 +29995,7 @@ u8 array_mp_8821c_fw_nic[] = {
 0x28, 0x68, 0x03, 0x59, 0x00, 0x69, 0x02, 0x60,
 0x04, 0x92, 0x4A, 0x31, 0x30, 0xF0, 0x20, 0x6A,
 0x25, 0xF6, 0x48, 0x9A, 0x02, 0x6B, 0x6C, 0xEA,
-0x08, 0x22, 0x10, 0xF0, 0x24, 0x6C, 0xDD, 0xF5,
+0x08, 0x22, 0x10, 0xF0, 0x24, 0x6C, 0x9D, 0xF1,
 0x14, 0x4C, 0xB1, 0x67, 0xD0, 0x67, 0x80, 0x18,
 0x35, 0x19, 0x10, 0x92, 0x20, 0xCA, 0x0F, 0x93,
 0x00, 0xCB, 0x0B, 0x97, 0x0A, 0x91, 0x09, 0x90,
@@ -30174,10 +30013,10 @@ u8 array_mp_8821c_fw_nic[] = {
 0xA0, 0xF0, 0x06, 0x23, 0x30, 0xF0, 0x20, 0x6A,
 0x25, 0xF6, 0x48, 0x9A, 0x02, 0x6B, 0x6C, 0xEA,
 0x09, 0x22, 0x05, 0x95, 0x04, 0x96, 0x10, 0xF0,
-0x24, 0x6C, 0xFD, 0xF5, 0x0C, 0x4C, 0xF1, 0x67,
+0x24, 0x6C, 0xBD, 0xF1, 0x0C, 0x4C, 0xF1, 0x67,
 0x80, 0x18, 0x35, 0x19, 0x05, 0x93, 0x01, 0x73,
-0x03, 0x60, 0x01, 0x6A, 0x05, 0x6B, 0x53, 0x10,
-0x00, 0x6A, 0x04, 0x6B, 0x50, 0x10, 0x05, 0x94,
+0x03, 0x60, 0x05, 0x6B, 0x01, 0x6A, 0x53, 0x10,
+0x04, 0x6B, 0x00, 0x6A, 0x50, 0x10, 0x05, 0x94,
 0x01, 0x74, 0x02, 0x61, 0x01, 0x4A, 0x01, 0x10,
 0xFF, 0x4A, 0xFF, 0x6B, 0x6C, 0xEA, 0x30, 0xF0,
 0x20, 0x6B, 0x48, 0x34, 0x0F, 0xF2, 0x0C, 0x4B,
@@ -30193,7 +30032,7 @@ u8 array_mp_8821c_fw_nic[] = {
 0xAC, 0xEC, 0x42, 0xEC, 0x3F, 0x61, 0xE5, 0xC0,
 0x06, 0x95, 0x30, 0xF0, 0x20, 0x6C, 0xEF, 0xF4,
 0x08, 0x4C, 0x4A, 0x4D, 0xAC, 0x35, 0x91, 0xE5,
-0x46, 0xC4, 0x45, 0xA0, 0xFF, 0x72, 0x32, 0x60,
+0x42, 0xC4, 0x45, 0xA0, 0xFF, 0x72, 0x32, 0x60,
 0x20, 0xF0, 0x86, 0xA0, 0x19, 0x6A, 0x4B, 0xEA,
 0x8C, 0xEA, 0x08, 0x6C, 0x8D, 0xEA, 0x20, 0xF0,
 0x46, 0xC0, 0x28, 0x10, 0x01, 0x4A, 0xFF, 0x6C,
@@ -30211,7 +30050,7 @@ u8 array_mp_8821c_fw_nic[] = {
 0x80, 0xA4, 0x01, 0x68, 0x80, 0xC2, 0x0E, 0x92,
 0x60, 0xC2, 0x30, 0xF0, 0x20, 0x6A, 0x25, 0xF6,
 0x48, 0x9A, 0x02, 0x6B, 0x6C, 0xEA, 0x09, 0x22,
-0x10, 0xF0, 0x24, 0x6C, 0x1D, 0xF6, 0x08, 0x4C,
+0x10, 0xF0, 0x24, 0x6C, 0xDD, 0xF1, 0x08, 0x4C,
 0xB0, 0x67, 0x80, 0x18, 0x35, 0x19, 0x01, 0x10,
 0x00, 0x68, 0x50, 0x67, 0x0B, 0x97, 0x0A, 0x91,
 0x09, 0x90, 0x06, 0x63, 0x00, 0xEF, 0x00, 0x68,
@@ -30228,7 +30067,7 @@ u8 array_mp_8821c_fw_nic[] = {
 0x20, 0x6A, 0x25, 0xF6, 0x48, 0x9A, 0x04, 0xD3,
 0x8C, 0xEB, 0x05, 0xD3, 0x04, 0x6B, 0x6C, 0xEA,
 0x08, 0x22, 0x04, 0x96, 0x10, 0xF0, 0x24, 0x6C,
-0x3D, 0xF6, 0x00, 0x4C, 0xB0, 0x67, 0x80, 0x18,
+0xFD, 0xF1, 0x00, 0x4C, 0xB0, 0x67, 0x80, 0x18,
 0x35, 0x19, 0x05, 0x92, 0x23, 0xEA, 0x0B, 0x61,
 0x4E, 0xE9, 0x0A, 0x29, 0x04, 0x94, 0x80, 0x6B,
 0x80, 0x6A, 0x6B, 0xEB, 0x0C, 0xEA, 0x8C, 0xEB,
@@ -30247,10 +30086,10 @@ u8 array_mp_8821c_fw_nic[] = {
 0x02, 0x6E, 0x40, 0xEA, 0x30, 0xF0, 0x20, 0x6B,
 0x25, 0xF6, 0x68, 0x9B, 0x00, 0xF4, 0x00, 0x6A,
 0x6C, 0xEA, 0x13, 0x22, 0x10, 0xF0, 0x24, 0x6C,
-0x3D, 0xF6, 0x0C, 0x4C, 0x0C, 0x10, 0x30, 0xF0,
+0xFD, 0xF1, 0x0C, 0x4C, 0x0C, 0x10, 0x30, 0xF0,
 0x20, 0x6B, 0x25, 0xF6, 0x68, 0x9B, 0x00, 0xF4,
 0x00, 0x6A, 0x6C, 0xEA, 0x06, 0x22, 0x10, 0xF0,
-0x24, 0x6C, 0x3D, 0xF6, 0x18, 0x4C, 0x80, 0x18,
+0x24, 0x6C, 0xFD, 0xF1, 0x18, 0x4C, 0x80, 0x18,
 0x35, 0x19, 0x07, 0x97, 0x06, 0x91, 0x05, 0x90,
 0x04, 0x63, 0x00, 0xEF, 0xFC, 0x63, 0x07, 0x62,
 0x06, 0xD0, 0x00, 0x68, 0x52, 0x6A, 0x58, 0xE8,
@@ -30271,7 +30110,7 @@ u8 array_mp_8821c_fw_nic[] = {
 0x00, 0xF4, 0x00, 0x6B, 0x8C, 0xEB, 0x0F, 0x23,
 0x40, 0xF0, 0xA5, 0xA2, 0x40, 0xF0, 0xC6, 0xA2,
 0x40, 0xF0, 0xE7, 0xA2, 0x40, 0xF0, 0x48, 0xA2,
-0x10, 0xF0, 0x24, 0x6C, 0x5D, 0xF6, 0x04, 0x4C,
+0x10, 0xF0, 0x24, 0x6C, 0x1D, 0xF2, 0x04, 0x4C,
 0x04, 0xD2, 0x80, 0x18, 0x35, 0x19, 0x01, 0x48,
 0xFF, 0x6A, 0x4C, 0xE8, 0x80, 0x70, 0xAE, 0x61,
 0x07, 0x97, 0x06, 0x90, 0x04, 0x63, 0x00, 0xEF,
@@ -30298,7 +30137,7 @@ u8 array_mp_8821c_fw_nic[] = {
 0x6C, 0xED, 0xFF, 0x6C, 0x7F, 0x6A, 0xEC, 0xEC,
 0xAC, 0xEA, 0x0A, 0xD4, 0x07, 0xD2, 0xCC, 0xEB,
 0x06, 0x94, 0x10, 0xF0, 0x24, 0x6A, 0x0B, 0xD3,
-0x9C, 0xF5, 0x4C, 0x9A, 0x80, 0x6B, 0xAC, 0xEB,
+0x7C, 0xF1, 0x48, 0x9A, 0x80, 0x6B, 0xAC, 0xEB,
 0x09, 0xD3, 0x94, 0x33, 0x49, 0xE3, 0x40, 0xA2,
 0x30, 0xF0, 0x20, 0x6A, 0x4E, 0xF5, 0x4C, 0x9A,
 0x07, 0x95, 0x09, 0x96, 0x0A, 0x97, 0x40, 0xEA,
@@ -30312,7 +30151,7 @@ u8 array_mp_8821c_fw_nic[] = {
 0xAC, 0xEC, 0x08, 0xD4, 0x29, 0x2A, 0x63, 0xA0,
 0x5F, 0xA0, 0x6E, 0xEA, 0x0C, 0x22, 0x06, 0x94,
 0x30, 0xF0, 0x20, 0x6A, 0xBD, 0x67, 0x8C, 0x33,
-0x2F, 0xF7, 0x1C, 0x4A, 0x69, 0xE2, 0x67, 0x45,
+0x2F, 0xF7, 0x18, 0x4A, 0x69, 0xE2, 0x67, 0x45,
 0x25, 0x4B, 0xA0, 0xAB, 0xA3, 0xCA, 0x20, 0xF0,
 0x66, 0xA0, 0x41, 0x6A, 0x4B, 0xEA, 0x6C, 0xEA,
 0x20, 0xF0, 0x46, 0xC0, 0x23, 0xC0, 0x06, 0x94,
@@ -30334,23 +30173,23 @@ u8 array_mp_8821c_fw_nic[] = {
 0x6D, 0xE5, 0x8D, 0xEB, 0x00, 0xF6, 0x60, 0x33,
 0xFF, 0x6C, 0x00, 0xF6, 0x63, 0x33, 0x8C, 0xEB,
 0x06, 0x94, 0x03, 0x5C, 0x0A, 0x60, 0x10, 0xF0,
-0x24, 0x6C, 0xDC, 0xF5, 0x80, 0x9C, 0x20, 0xC4,
-0x10, 0xF0, 0x24, 0x6C, 0xDC, 0xF5, 0x8C, 0x9C,
+0x24, 0x6C, 0x9C, 0xF1, 0x9C, 0x9C, 0x20, 0xC4,
+0x10, 0xF0, 0x24, 0x6C, 0xBC, 0xF1, 0x88, 0x9C,
 0x60, 0xC4, 0x30, 0xF0, 0x20, 0x6C, 0xC5, 0xF4,
 0xA3, 0xA4, 0x04, 0x6C, 0xAC, 0xEC, 0x05, 0x24,
 0x07, 0x94, 0x09, 0x91, 0x8D, 0xE9, 0xFF, 0x6C,
 0x8C, 0xE9, 0x06, 0x95, 0xB4, 0x34, 0x10, 0xF0,
-0x24, 0x6D, 0x9C, 0xF5, 0xB0, 0x9D, 0xB5, 0xE4,
-0x20, 0xC5, 0x10, 0xF0, 0x24, 0x6D, 0x9C, 0xF5,
-0xAC, 0x9D, 0xB5, 0xE4, 0x60, 0xC5, 0x10, 0xF0,
-0x24, 0x6B, 0xDC, 0xF5, 0x70, 0x9B, 0x71, 0xE4,
+0x24, 0x6D, 0x7C, 0xF1, 0xAC, 0x9D, 0xB5, 0xE4,
+0x20, 0xC5, 0x10, 0xF0, 0x24, 0x6D, 0x7C, 0xF1,
+0xA8, 0x9D, 0xB5, 0xE4, 0x60, 0xC5, 0x10, 0xF0,
+0x24, 0x6B, 0xBC, 0xF1, 0x6C, 0x9B, 0x71, 0xE4,
 0x40, 0xC4, 0x0F, 0x97, 0x0E, 0x91, 0x0D, 0x90,
 0x08, 0x63, 0x00, 0xEF, 0xFB, 0x63, 0x09, 0x62,
 0x08, 0xD1, 0x07, 0xD0, 0xFF, 0x69, 0x8C, 0xE9,
 0x52, 0x68, 0x18, 0xE9, 0x30, 0xF0, 0x20, 0x6A,
 0x60, 0xF2, 0x08, 0x4A, 0x12, 0xE8, 0x01, 0xE2,
 0x84, 0xA0, 0x0F, 0x5C, 0x53, 0x60, 0x10, 0xF0,
-0x24, 0x6A, 0x88, 0x33, 0xDB, 0xF6, 0x00, 0x4A,
+0x24, 0x6A, 0x88, 0x33, 0x9B, 0xF2, 0x1C, 0x4A,
 0x69, 0xE2, 0x40, 0x9A, 0x00, 0xEA, 0x1B, 0x6A,
 0x2E, 0x10, 0x3D, 0x6A, 0x20, 0xF0, 0x60, 0xA0,
 0x47, 0xC0, 0x08, 0x6A, 0x4B, 0xEA, 0x6C, 0xEA,
@@ -30373,7 +30212,7 @@ u8 array_mp_8821c_fw_nic[] = {
 0x04, 0xD3, 0x09, 0x10, 0x20, 0xF0, 0x60, 0xA0,
 0x08, 0x6A, 0x4B, 0xEA, 0x6C, 0xEA, 0x20, 0xF0,
 0x40, 0xC0, 0x03, 0x6D, 0x04, 0xD5, 0x10, 0xF0,
-0x24, 0x6A, 0x9C, 0xF5, 0x58, 0x9A, 0x2C, 0x35,
+0x24, 0x6A, 0x7C, 0xF1, 0x54, 0x9A, 0x2C, 0x35,
 0x8C, 0x34, 0x55, 0xE5, 0x10, 0xF0, 0x30, 0x6A,
 0x24, 0xF3, 0x0C, 0x4A, 0x91, 0xE2, 0xE5, 0x67,
 0xFD, 0x65, 0x00, 0x6A, 0x05, 0xD5, 0x05, 0x96,
@@ -30385,10 +30224,10 @@ u8 array_mp_8821c_fw_nic[] = {
 0x48, 0x36, 0xF5, 0xE6, 0x60, 0xDD, 0x01, 0x4A,
 0x7F, 0x67, 0x79, 0xE6, 0x02, 0x72, 0x60, 0x9E,
 0x04, 0x4C, 0xE1, 0x61, 0x10, 0xF0, 0x24, 0x6B,
-0x9C, 0xF5, 0x78, 0x9B, 0x2C, 0x32, 0x91, 0x67,
+0x7C, 0xF1, 0x74, 0x9B, 0x2C, 0x32, 0x91, 0x67,
 0x6D, 0xE2, 0xA0, 0x9B, 0x10, 0xF0, 0x24, 0x6B,
-0x9C, 0xF5, 0x7C, 0x9B, 0x69, 0xE2, 0xC0, 0x9A,
-0x10, 0xF0, 0x24, 0x6A, 0x9C, 0xF5, 0x50, 0x9A,
+0x7C, 0xF1, 0x78, 0x9B, 0x69, 0xE2, 0xC0, 0x9A,
+0x10, 0xF0, 0x24, 0x6A, 0x7C, 0xF1, 0x4C, 0x9A,
 0x34, 0x33, 0x49, 0xE3, 0x40, 0xA2, 0xFF, 0x6B,
 0x4C, 0xEB, 0x30, 0xF0, 0x20, 0x6A, 0x6E, 0xF5,
 0x40, 0x9A, 0x05, 0xD3, 0x40, 0xEA, 0x05, 0x96,
@@ -30403,13 +30242,13 @@ u8 array_mp_8821c_fw_nic[] = {
 0x30, 0xF0, 0x20, 0x6A, 0x25, 0xF6, 0x48, 0x9A,
 0x01, 0x6B, 0x6C, 0xEA, 0x09, 0x22, 0xA0, 0xA0,
 0xC1, 0xA0, 0xE2, 0xA0, 0x10, 0xF0, 0x24, 0x6C,
-0x5D, 0xF6, 0x1C, 0x4C, 0x80, 0x18, 0x35, 0x19,
+0x1D, 0xF2, 0x1C, 0x4C, 0x80, 0x18, 0x35, 0x19,
 0x09, 0x97, 0x08, 0x91, 0x07, 0x90, 0x05, 0x63,
 0x00, 0xEF, 0x00, 0x65, 0xFA, 0x63, 0x0B, 0x62,
 0x0A, 0xD1, 0x09, 0xD0, 0x10, 0xF0, 0x24, 0x6A,
-0xDC, 0xF5, 0x54, 0x9A, 0x00, 0x68, 0x60, 0xA2,
+0xBC, 0xF1, 0x50, 0x9A, 0x00, 0x68, 0x60, 0xA2,
 0xFF, 0x6A, 0x83, 0x67, 0x10, 0xF0, 0x24, 0x6B,
-0xBC, 0xF5, 0x7C, 0x9B, 0x4C, 0xEC, 0x06, 0xD4,
+0x9C, 0xF1, 0x78, 0x9B, 0x4C, 0xEC, 0x06, 0xD4,
 0x60, 0xA3, 0x01, 0x6C, 0x6C, 0xEA, 0x30, 0xF0,
 0x20, 0x6B, 0xC0, 0xF1, 0x08, 0x4B, 0x56, 0x32,
 0x8C, 0xEA, 0xE5, 0xF2, 0xBB, 0xA3, 0x48, 0x34,
@@ -30422,27 +30261,27 @@ u8 array_mp_8821c_fw_nic[] = {
 0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A, 0xE5, 0xF2,
 0xBB, 0xA2, 0xAC, 0xEB, 0x26, 0x23, 0x06, 0x93,
 0x0A, 0xEB, 0x23, 0x61, 0x10, 0xF0, 0x24, 0x6B,
-0xDC, 0xF5, 0x78, 0x9B, 0x65, 0xF4, 0x40, 0x9A,
+0xBC, 0xF1, 0x74, 0x9B, 0x65, 0xF4, 0x40, 0x9A,
 0x60, 0xA3, 0xA3, 0x67, 0x10, 0xF0, 0x24, 0x6B,
-0xDC, 0xF5, 0x7C, 0x9B, 0x8C, 0xED, 0x04, 0xD5,
+0xBC, 0xF1, 0x78, 0x9B, 0x8C, 0xED, 0x04, 0xD5,
 0x60, 0xA3, 0x6C, 0xEC, 0x10, 0x6B, 0x6C, 0xEA,
 0x05, 0xD4, 0x09, 0x22, 0x05, 0x96, 0x04, 0x97,
-0x10, 0xF0, 0x24, 0x6C, 0x7D, 0xF6, 0x14, 0x4C,
+0x10, 0xF0, 0x24, 0x6C, 0x3D, 0xF2, 0x14, 0x4C,
 0xB0, 0x67, 0x80, 0x18, 0x35, 0x19, 0x04, 0x95,
 0x05, 0x97, 0x90, 0x67, 0x00, 0x6E, 0x80, 0x18,
 0x00, 0x1F, 0x67, 0x40, 0x30, 0xF0, 0x20, 0x6A,
 0x43, 0x4B, 0x6C, 0x33, 0xEF, 0xF4, 0x08, 0x4A,
-0x49, 0xE3, 0x45, 0xA2, 0x05, 0x2A, 0x20, 0xF0,
+0x49, 0xE3, 0x41, 0xA2, 0x05, 0x2A, 0x20, 0xF0,
 0x67, 0xA1, 0x80, 0x4A, 0x6D, 0xEA, 0x04, 0x10,
 0x20, 0xF0, 0x67, 0xA1, 0x7F, 0x6A, 0x6C, 0xEA,
 0x20, 0xF0, 0x47, 0xC1, 0x11, 0x28, 0x30, 0xF0,
 0x20, 0x6A, 0x25, 0xF6, 0x48, 0x9A, 0x10, 0x6B,
 0x6C, 0xEA, 0x0A, 0x22, 0x30, 0xF0, 0x20, 0x6A,
-0x2F, 0xF7, 0xBD, 0xA2, 0x10, 0xF0, 0x24, 0x6C,
-0x9D, 0xF6, 0x10, 0x4C, 0x80, 0x18, 0x35, 0x19,
+0x2F, 0xF7, 0xB9, 0xA2, 0x10, 0xF0, 0x24, 0x6C,
+0x5D, 0xF2, 0x10, 0x4C, 0x80, 0x18, 0x35, 0x19,
 0x67, 0x40, 0x30, 0xF0, 0x20, 0x6A, 0x43, 0x4B,
 0x6C, 0x33, 0xEF, 0xF4, 0x08, 0x4A, 0x49, 0xE3,
-0x00, 0x6B, 0x65, 0xC2, 0x01, 0x48, 0xFF, 0x6A,
+0x00, 0x6B, 0x61, 0xC2, 0x01, 0x48, 0xFF, 0x6A,
 0x4C, 0xE8, 0x80, 0x70, 0x8B, 0x61, 0x80, 0x18,
 0xAF, 0x1E, 0x30, 0xF0, 0x20, 0x6A, 0x4E, 0xF5,
 0x48, 0x9A, 0x40, 0xEA, 0x80, 0x18, 0x33, 0x1C,
@@ -30459,7 +30298,7 @@ u8 array_mp_8821c_fw_nic[] = {
 0x22, 0x67, 0x30, 0xF0, 0x20, 0x6A, 0x25, 0xF6,
 0x48, 0x9A, 0x04, 0x6B, 0x6C, 0xEA, 0x0C, 0x22,
 0x20, 0xF0, 0xC5, 0xA0, 0x10, 0xF0, 0x24, 0x6C,
-0x03, 0x6A, 0xCA, 0x36, 0x9D, 0xF6, 0x1C, 0x4C,
+0x03, 0x6A, 0xCA, 0x36, 0x5D, 0xF2, 0x1C, 0x4C,
 0xB1, 0x67, 0x4C, 0xEE, 0x80, 0x18, 0x35, 0x19,
 0x5F, 0xA0, 0x80, 0x6D, 0xAB, 0xED, 0x4C, 0xED,
 0x20, 0xF0, 0xE5, 0xA0, 0x2D, 0xED, 0x00, 0xF6,
@@ -30472,8 +30311,8 @@ u8 array_mp_8821c_fw_nic[] = {
 0x52, 0x68, 0x18, 0xEC, 0x30, 0xF0, 0x20, 0x6A,
 0x60, 0xF2, 0x08, 0x4A, 0x94, 0x33, 0xEC, 0xED,
 0x09, 0xD4, 0x0C, 0xD5, 0x7F, 0x69, 0x12, 0xE8,
-0x01, 0xE2, 0x10, 0xF0, 0x24, 0x6A, 0x9C, 0xF5,
-0x50, 0x9A, 0x49, 0xE3, 0x40, 0xA2, 0x7D, 0x67,
+0x01, 0xE2, 0x10, 0xF0, 0x24, 0x6A, 0x7C, 0xF1,
+0x4C, 0x9A, 0x49, 0xE3, 0x40, 0xA2, 0x7D, 0x67,
 0x58, 0xC3, 0x98, 0xA3, 0x03, 0x6B, 0x1B, 0x65,
 0x08, 0xD4, 0xA0, 0xA0, 0x8C, 0xE9, 0x98, 0x67,
 0x0A, 0xD5, 0x20, 0xF0, 0xC5, 0xA0, 0xBD, 0x67,
@@ -30484,8 +30323,8 @@ u8 array_mp_8821c_fw_nic[] = {
 0x6D, 0xEA, 0x01, 0x6B, 0x6B, 0xEB, 0x65, 0xC0,
 0x66, 0xC0, 0x09, 0x95, 0x30, 0xF0, 0x20, 0x6C,
 0xEF, 0xF4, 0x08, 0x4C, 0x4A, 0x4D, 0xAC, 0x35,
-0x95, 0xE5, 0x66, 0xC5, 0x09, 0x95, 0xAC, 0x35,
-0x91, 0xE5, 0x0E, 0xD5, 0x40, 0xF2, 0x77, 0xC4,
+0x95, 0xE5, 0x62, 0xC5, 0x09, 0x95, 0xAC, 0x35,
+0x91, 0xE5, 0x0E, 0xD5, 0x40, 0xF2, 0x73, 0xC4,
 0x20, 0xF0, 0x87, 0xA0, 0x11, 0x6B, 0x6B, 0xEB,
 0x8C, 0xEB, 0x20, 0xF0, 0x67, 0xC0, 0x80, 0x6B,
 0x6B, 0xEB, 0x6D, 0xEA, 0x67, 0x4B, 0x6C, 0xEA,
@@ -30493,7 +30332,7 @@ u8 array_mp_8821c_fw_nic[] = {
 0x25, 0xF6, 0x48, 0x9A, 0x04, 0x6B, 0x6C, 0xEA,
 0x0C, 0x22, 0x58, 0x67, 0x7D, 0x67, 0xCC, 0xEA,
 0x08, 0x95, 0xD9, 0xA3, 0x10, 0xF0, 0x24, 0x6C,
-0xBD, 0xF6, 0x10, 0x4C, 0x4C, 0xEF, 0x80, 0x18,
+0x7D, 0xF2, 0x10, 0x4C, 0x4C, 0xEF, 0x80, 0x18,
 0x35, 0x19, 0x0A, 0x94, 0x83, 0xE9, 0x79, 0x60,
 0x09, 0x94, 0x06, 0x05, 0x00, 0xF0, 0x19, 0x06,
 0x01, 0x6F, 0x80, 0x18, 0xF7, 0x1D, 0xA0, 0xF0,
@@ -30505,7 +30344,7 @@ u8 array_mp_8821c_fw_nic[] = {
 0x30, 0xF0, 0x20, 0x6A, 0x20, 0xF0, 0xA5, 0xC0,
 0x25, 0xF6, 0x48, 0x9A, 0x04, 0x6B, 0x6C, 0xEA,
 0x07, 0x22, 0xB9, 0xA6, 0x10, 0xF0, 0x24, 0x6C,
-0xDD, 0xF6, 0x0C, 0x4C, 0x80, 0x18, 0x35, 0x19,
+0x9D, 0xF2, 0x0C, 0x4C, 0x80, 0x18, 0x35, 0x19,
 0xDD, 0x67, 0x30, 0xF0, 0x20, 0x6A, 0x6E, 0xF5,
 0x4C, 0x9A, 0x09, 0x94, 0xB8, 0xA6, 0x40, 0xEA,
 0xFF, 0x72, 0x08, 0xD2, 0x08, 0x61, 0x47, 0x41,
@@ -30513,7 +30352,7 @@ u8 array_mp_8821c_fw_nic[] = {
 0x4C, 0xEB, 0x08, 0xD3, 0x17, 0x10, 0x30, 0xF0,
 0x20, 0x6A, 0x25, 0xF6, 0x48, 0x9A, 0x04, 0x6B,
 0x6C, 0xEA, 0x07, 0x22, 0x08, 0x95, 0x10, 0xF0,
-0x24, 0x6C, 0xDD, 0xF6, 0x1C, 0x4C, 0x80, 0x18,
+0x24, 0x6C, 0x9D, 0xF2, 0x1C, 0x4C, 0x80, 0x18,
 0x35, 0x19, 0x9D, 0x67, 0xA7, 0x44, 0x19, 0x4D,
 0xA0, 0xA5, 0xB8, 0xC4, 0x5F, 0x10, 0x01, 0x49,
 0xFF, 0x6A, 0x4C, 0xE9, 0x09, 0x96, 0x0B, 0x97,
@@ -30524,7 +30363,7 @@ u8 array_mp_8821c_fw_nic[] = {
 0xEA, 0x61, 0x30, 0xF0, 0x20, 0x6A, 0x25, 0xF6,
 0x48, 0x9A, 0x04, 0x6B, 0x6C, 0xEA, 0x42, 0x22,
 0xDD, 0x67, 0xB8, 0xA6, 0x10, 0xF0, 0x24, 0x6C,
-0xFD, 0xF6, 0x0C, 0x4C, 0x80, 0x18, 0x35, 0x19,
+0xBD, 0xF2, 0x0C, 0x4C, 0x80, 0x18, 0x35, 0x19,
 0x39, 0x10, 0x0A, 0x92, 0x4E, 0xE9, 0x21, 0x29,
 0x20, 0xF0, 0x46, 0xA0, 0x04, 0x6B, 0x6C, 0xEA,
 0xE0, 0xF0, 0x0C, 0x22, 0x08, 0x92, 0x80, 0x6C,
@@ -30533,16 +30372,16 @@ u8 array_mp_8821c_fw_nic[] = {
 0x0A, 0x95, 0x25, 0xF6, 0x48, 0x9A, 0xDD, 0x67,
 0xAD, 0xEC, 0x6C, 0xEA, 0x98, 0xC6, 0xA0, 0xF0,
 0x1F, 0x22, 0xB8, 0xA6, 0x10, 0xF0, 0x24, 0x6C,
-0xFD, 0xF6, 0x18, 0x4C, 0x80, 0x18, 0x35, 0x19,
+0xBD, 0xF2, 0x18, 0x4C, 0x80, 0x18, 0x35, 0x19,
 0xB7, 0x10, 0x30, 0xF0, 0x20, 0x6A, 0x25, 0xF6,
 0x48, 0x9A, 0x04, 0x6B, 0x6C, 0xEA, 0x08, 0x22,
 0x5D, 0x67, 0xB8, 0xA2, 0x10, 0xF0, 0x24, 0x6C,
-0x1D, 0xF7, 0x04, 0x4C, 0x80, 0x18, 0x35, 0x19,
+0xDD, 0xF2, 0x04, 0x4C, 0x80, 0x18, 0x35, 0x19,
 0x7D, 0x67, 0x87, 0x43, 0x21, 0x4C, 0x80, 0xA4,
 0x98, 0xC3, 0x9F, 0xC0, 0x30, 0xF0, 0x20, 0x6A,
 0x25, 0xF6, 0x48, 0x9A, 0x04, 0x6B, 0x6C, 0xEA,
 0x0A, 0x22, 0xDD, 0x67, 0xB8, 0xA6, 0xE6, 0xA0,
-0xC5, 0xA0, 0x10, 0xF0, 0x24, 0x6C, 0x1D, 0xF7,
+0xC5, 0xA0, 0x10, 0xF0, 0x24, 0x6C, 0xDD, 0xF2,
 0x10, 0x4C, 0x80, 0x18, 0x35, 0x19, 0x5D, 0x67,
 0x09, 0x94, 0xB8, 0xA2, 0x80, 0x18, 0x66, 0x1E,
 0x7D, 0x67, 0x58, 0xC3, 0x09, 0x94, 0xA5, 0xA0,
@@ -30551,7 +30390,7 @@ u8 array_mp_8821c_fw_nic[] = {
 0x30, 0xF0, 0x20, 0x6A, 0x25, 0xF6, 0x48, 0x9A,
 0x04, 0x6B, 0x6C, 0xEA, 0x0A, 0x22, 0xDD, 0x67,
 0xB8, 0xA6, 0xE6, 0xA0, 0xC5, 0xA0, 0x10, 0xF0,
-0x24, 0x6C, 0x3D, 0xF7, 0x00, 0x4C, 0x80, 0x18,
+0x24, 0x6C, 0xFD, 0xF2, 0x00, 0x4C, 0x80, 0x18,
 0x35, 0x19, 0x46, 0xA0, 0xFF, 0x6B, 0x85, 0xA0,
 0x4E, 0xEB, 0x01, 0x5B, 0x78, 0x67, 0xFF, 0x74,
 0x05, 0x61, 0x45, 0xC0, 0x01, 0x6A, 0x4B, 0xEA,
@@ -30571,14 +30410,14 @@ u8 array_mp_8821c_fw_nic[] = {
 0x19, 0x6A, 0x4B, 0xEA, 0x6C, 0xEA, 0x20, 0xF0,
 0x46, 0xC0, 0x30, 0xF0, 0x20, 0x6A, 0x25, 0xF6,
 0x48, 0x9A, 0x04, 0x6B, 0x6C, 0xEA, 0x06, 0x22,
-0x10, 0xF0, 0x24, 0x6C, 0x3D, 0xF7, 0x10, 0x4C,
+0x10, 0xF0, 0x24, 0x6C, 0xFD, 0xF2, 0x10, 0x4C,
 0x80, 0x18, 0x35, 0x19, 0x20, 0xF0, 0x66, 0xA0,
 0x03, 0x6A, 0x20, 0xF0, 0x85, 0xA0, 0x6C, 0xEA,
 0x48, 0x33, 0x0D, 0x6A, 0x4B, 0xEA, 0x8C, 0xEA,
 0x6D, 0xEA, 0x20, 0xF0, 0x45, 0xC0, 0x2A, 0x10,
 0x20, 0xF0, 0x46, 0xA0, 0xDD, 0x67, 0xB8, 0xA6,
 0xE6, 0xA0, 0xC5, 0xA0, 0x4E, 0x32, 0x03, 0x6B,
-0x10, 0xF0, 0x24, 0x6C, 0x6C, 0xEA, 0x3D, 0xF7,
+0x10, 0xF0, 0x24, 0x6C, 0x6C, 0xEA, 0xFD, 0xF2,
 0x1C, 0x4C, 0x04, 0xD2, 0x80, 0x18, 0x35, 0x19,
 0x0C, 0x92, 0x01, 0x6E, 0x01, 0x72, 0x08, 0x61,
 0x20, 0xF0, 0x66, 0xA0, 0x19, 0x6A, 0x4B, 0xEA,
@@ -30593,8 +30432,8 @@ u8 array_mp_8821c_fw_nic[] = {
 0x30, 0xF0, 0x20, 0x6A, 0x60, 0xF2, 0x08, 0x4A,
 0x94, 0x33, 0xEC, 0xED, 0xEC, 0xEE, 0x08, 0xD4,
 0x0C, 0xD6, 0x07, 0xD5, 0x7F, 0x69, 0x12, 0xE8,
-0x01, 0xE2, 0x10, 0xF0, 0x24, 0x6A, 0x9C, 0xF5,
-0x50, 0x9A, 0x49, 0xE3, 0x40, 0xA2, 0x7D, 0x67,
+0x01, 0xE2, 0x10, 0xF0, 0x24, 0x6A, 0x7C, 0xF1,
+0x4C, 0x9A, 0x49, 0xE3, 0x40, 0xA2, 0x7D, 0x67,
 0x50, 0xC3, 0x40, 0xA0, 0xD0, 0xA3, 0x06, 0xD2,
 0x61, 0xA0, 0xFE, 0x65, 0xCC, 0xE9, 0x0A, 0xD3,
 0x20, 0xF0, 0xC5, 0xA0, 0xD2, 0x32, 0x09, 0xD2,
@@ -30605,14 +30444,14 @@ u8 array_mp_8821c_fw_nic[] = {
 0x01, 0x6C, 0x8B, 0xEC, 0x85, 0xC0, 0x86, 0xC0,
 0x08, 0x96, 0x30, 0xF0, 0x20, 0x6D, 0xEF, 0xF4,
 0x08, 0x4D, 0x4A, 0x4E, 0xCC, 0x36, 0xB9, 0xE6,
-0x86, 0xC6, 0x08, 0x96, 0xCC, 0x36, 0xB5, 0xE6,
-0x40, 0xF2, 0x97, 0xC5, 0x20, 0xF0, 0xA7, 0xA0,
+0x82, 0xC6, 0x08, 0x96, 0xCC, 0x36, 0xB5, 0xE6,
+0x40, 0xF2, 0x93, 0xC5, 0x20, 0xF0, 0xA7, 0xA0,
 0x11, 0x6C, 0x8B, 0xEC, 0xAC, 0xEC, 0x20, 0xF0,
 0x87, 0xC0, 0x80, 0x6C, 0x8B, 0xEC, 0x8D, 0xEB,
 0x67, 0x4C, 0x8C, 0xEB, 0x20, 0xF0, 0x66, 0xC0,
 0x30, 0xF0, 0x20, 0x6B, 0x25, 0xF6, 0x68, 0x9B,
 0x08, 0x6C, 0x8C, 0xEB, 0x0C, 0x23, 0x0B, 0x93,
-0x10, 0xF0, 0x24, 0x6C, 0x5D, 0xF7, 0x18, 0x4C,
+0x10, 0xF0, 0x24, 0x6C, 0x1D, 0xF3, 0x18, 0x4C,
 0x6C, 0xEA, 0x7D, 0x67, 0xD1, 0xA3, 0xBF, 0x67,
 0x4C, 0xEF, 0x80, 0x18, 0x35, 0x19, 0x06, 0x96,
 0x23, 0xEE, 0x02, 0x60, 0x5D, 0x67, 0xD0, 0xC2,
@@ -30643,7 +30482,7 @@ u8 array_mp_8821c_fw_nic[] = {
 0x30, 0xF0, 0x20, 0x6A, 0x25, 0xF6, 0x48, 0x9A,
 0x08, 0x6B, 0x6C, 0xEA, 0x09, 0x22, 0xDD, 0x67,
 0xB0, 0xA6, 0xD1, 0xA6, 0x10, 0xF0, 0x24, 0x6C,
-0x7D, 0xF7, 0x14, 0x4C, 0x80, 0x18, 0x35, 0x19,
+0x3D, 0xF3, 0x14, 0x4C, 0x80, 0x18, 0x35, 0x19,
 0x20, 0xF0, 0x63, 0xA0, 0x0F, 0x6A, 0x6C, 0xEA,
 0x20, 0x6B, 0x6D, 0xEA, 0x20, 0xF0, 0x43, 0xC0,
 0x5D, 0x67, 0xF1, 0xA2, 0x08, 0x94, 0xB0, 0xA2,
@@ -30657,15 +30496,15 @@ u8 array_mp_8821c_fw_nic[] = {
 0x86, 0xA0, 0x40, 0x6B, 0x8C, 0xEB, 0x4C, 0xEB,
 0x0D, 0x23, 0x30, 0xF0, 0x20, 0x6A, 0x25, 0xF6,
 0x48, 0x9A, 0x02, 0x6B, 0x6C, 0xEA, 0x20, 0xF2,
-0x11, 0x22, 0x10, 0xF0, 0x24, 0x6C, 0x9D, 0xF7,
+0x11, 0x22, 0x10, 0xF0, 0x24, 0x6C, 0x5D, 0xF3,
 0x04, 0x4C, 0x2A, 0x12, 0x09, 0x95, 0x10, 0xF0,
-0x24, 0x6C, 0x9C, 0xF5, 0x90, 0x9C, 0xB4, 0x33,
+0x24, 0x6C, 0x7C, 0xF1, 0x8C, 0x9C, 0xB4, 0x33,
 0x7F, 0x6E, 0x91, 0xE3, 0x20, 0xA4, 0x80, 0x6C,
 0x4C, 0xE9, 0x2C, 0xEE, 0x2C, 0xEC, 0x0A, 0xD6,
 0x0E, 0xD4, 0x20, 0xF0, 0x85, 0xA0, 0x40, 0xF0,
 0x24, 0xC0, 0x0A, 0x95, 0x8A, 0x34, 0x0C, 0xD4,
 0x0C, 0x96, 0x03, 0x6C, 0x8C, 0xEE, 0x10, 0xF0,
-0x24, 0x6C, 0x9C, 0xF5, 0x8C, 0x9C, 0x4C, 0xEE,
+0x24, 0x6C, 0x7C, 0xF1, 0x88, 0x9C, 0x4C, 0xEE,
 0x0C, 0xD6, 0x8D, 0xE3, 0x60, 0xA3, 0x83, 0x67,
 0x4C, 0xEC, 0x0F, 0xD4, 0x60, 0xA0, 0xA3, 0xEB,
 0x08, 0x60, 0x0E, 0x96, 0x0A, 0xD3, 0x23, 0x67,
@@ -30677,7 +30516,7 @@ u8 array_mp_8821c_fw_nic[] = {
 0x64, 0x33, 0x4D, 0xE3, 0x60, 0xAB, 0x03, 0x5B,
 0x0B, 0x61, 0x65, 0xF4, 0x40, 0x9A, 0x02, 0x6B,
 0x6C, 0xEA, 0x06, 0x22, 0x10, 0xF0, 0x24, 0x6C,
-0x9D, 0xF7, 0x10, 0x4C, 0x80, 0x18, 0x35, 0x19,
+0x5D, 0xF3, 0x10, 0x4C, 0x80, 0x18, 0x35, 0x19,
 0x30, 0xF0, 0x20, 0x6A, 0x08, 0xD2, 0x09, 0x92,
 0x08, 0x93, 0x30, 0xF0, 0x20, 0x6E, 0xA2, 0xF7,
 0x14, 0x4A, 0xC0, 0xF1, 0x08, 0x4B, 0x44, 0x32,
@@ -30692,7 +30531,7 @@ u8 array_mp_8821c_fw_nic[] = {
 0x2D, 0x4D, 0x80, 0xAD, 0x0B, 0xD2, 0x02, 0x6B,
 0x96, 0xC8, 0x08, 0x95, 0x65, 0xF4, 0x40, 0x9D,
 0x6C, 0xEA, 0x08, 0x22, 0x0D, 0x95, 0x0B, 0x96,
-0x10, 0xF0, 0x24, 0x6C, 0x9D, 0xF7, 0x18, 0x4C,
+0x10, 0xF0, 0x24, 0x6C, 0x5D, 0xF3, 0x18, 0x4C,
 0x80, 0x18, 0x35, 0x19, 0x30, 0xF0, 0x20, 0x6C,
 0xC0, 0xF1, 0x08, 0x4C, 0x65, 0xF4, 0x40, 0x9C,
 0x02, 0x6B, 0x6C, 0xEA, 0x18, 0x22, 0x09, 0x92,
@@ -30700,12 +30539,12 @@ u8 array_mp_8821c_fw_nic[] = {
 0xA2, 0xF7, 0x14, 0x4E, 0x23, 0xF0, 0x14, 0x4B,
 0x44, 0x32, 0xC4, 0x36, 0x64, 0x33, 0x89, 0xE2,
 0x99, 0xE6, 0x8D, 0xE3, 0xA0, 0xAA, 0xC0, 0xAE,
-0xE0, 0xAB, 0x10, 0xF0, 0x24, 0x6C, 0xBD, 0xF7,
+0xE0, 0xAB, 0x10, 0xF0, 0x24, 0x6C, 0x7D, 0xF3,
 0x08, 0x4C, 0x80, 0x18, 0x35, 0x19, 0x30, 0xF0,
 0x20, 0x6A, 0x25, 0xF6, 0x48, 0x9A, 0x02, 0x6B,
 0x6C, 0xEA, 0x0C, 0x22, 0x0F, 0x96, 0x18, 0x6D,
 0x10, 0xF0, 0x24, 0x6C, 0xCC, 0xED, 0x0C, 0x96,
-0xBD, 0xF7, 0x18, 0x4C, 0xAE, 0x35, 0xF1, 0x67,
+0x7D, 0xF3, 0x18, 0x4C, 0xAE, 0x35, 0xF1, 0x67,
 0x80, 0x18, 0x35, 0x19, 0x09, 0x94, 0x0D, 0x95,
 0x0A, 0x96, 0x00, 0xF0, 0x1A, 0x02, 0x06, 0x07,
 0x04, 0xD2, 0x80, 0x18, 0x59, 0x1D, 0x0E, 0x93,
@@ -30723,12 +30562,12 @@ u8 array_mp_8821c_fw_nic[] = {
 0x4C, 0xEB, 0x08, 0xD3, 0x30, 0xF0, 0x20, 0x6A,
 0xC0, 0xF1, 0x08, 0x4A, 0x65, 0xF4, 0x60, 0x9A,
 0x02, 0x6C, 0x8C, 0xEB, 0x0C, 0x23, 0x0A, 0x96,
-0x10, 0xF0, 0x24, 0x6C, 0xDD, 0xF7, 0x10, 0x4C,
+0x10, 0xF0, 0x24, 0x6C, 0x9D, 0xF3, 0x10, 0x4C,
 0x49, 0xE6, 0x45, 0xF2, 0xA8, 0xA2, 0x85, 0xF2,
 0xDC, 0xA2, 0x80, 0x18, 0x35, 0x19, 0x30, 0xF0,
 0x20, 0x6A, 0x25, 0xF6, 0x48, 0x9A, 0x02, 0x6B,
 0x6C, 0xEA, 0x08, 0x22, 0x08, 0x95, 0x10, 0xF0,
-0x24, 0x6C, 0xFD, 0xF7, 0x00, 0x4C, 0xD1, 0x67,
+0x24, 0x6C, 0xBD, 0xF3, 0x00, 0x4C, 0xD1, 0x67,
 0x80, 0x18, 0x35, 0x19, 0x40, 0xF0, 0x40, 0xA0,
 0x3F, 0x6B, 0x6C, 0xEA, 0x40, 0xF0, 0x60, 0x80,
 0x00, 0x53, 0x13, 0x60, 0x43, 0xE9, 0x02, 0x60,
@@ -30745,18 +30584,18 @@ u8 array_mp_8821c_fw_nic[] = {
 0x01, 0x61, 0x41, 0x6A, 0xFF, 0x69, 0x4C, 0xE9,
 0x30, 0xF0, 0x20, 0x6A, 0x25, 0xF6, 0x48, 0x9A,
 0x02, 0x6B, 0x6C, 0xEA, 0x08, 0x22, 0x0A, 0x96,
-0x10, 0xF0, 0x24, 0x6C, 0xFD, 0xF7, 0x10, 0x4C,
+0x10, 0xF0, 0x24, 0x6C, 0xBD, 0xF3, 0x10, 0x4C,
 0xB1, 0x67, 0x80, 0x18, 0x35, 0x19, 0x30, 0xF0,
 0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A, 0xE5, 0xF2,
 0x9B, 0xA2, 0x04, 0x6B, 0x8C, 0xEB, 0x0B, 0x23,
 0x65, 0xF4, 0x40, 0x9A, 0x02, 0x6B, 0x6C, 0xEA,
 0xA0, 0xF0, 0x1C, 0x22, 0x10, 0xF0, 0x24, 0x6C,
-0x1E, 0xF0, 0x00, 0x4C, 0xB5, 0x10, 0x0D, 0x95,
+0xDD, 0xF3, 0x00, 0x4C, 0xB5, 0x10, 0x0D, 0x95,
 0x0A, 0x96, 0xC3, 0xED, 0x03, 0x60, 0x0B, 0x93,
 0x1E, 0x5B, 0x59, 0x61, 0x0B, 0x94, 0x50, 0x5C,
 0x1D, 0x61, 0x30, 0xF0, 0x20, 0x6A, 0x25, 0xF6,
 0x48, 0x9A, 0x02, 0x6B, 0x6C, 0xEA, 0x06, 0x22,
-0x10, 0xF0, 0x24, 0x6C, 0x1E, 0xF0, 0x0C, 0x4C,
+0x10, 0xF0, 0x24, 0x6C, 0xDD, 0xF3, 0x0C, 0x4C,
 0x80, 0x18, 0x35, 0x19, 0x09, 0x94, 0x01, 0x6D,
 0xC5, 0x67, 0x80, 0x18, 0x4E, 0x21, 0x20, 0xF0,
 0x60, 0xA0, 0x39, 0x6A, 0x4B, 0xEA, 0x6C, 0xEA,
@@ -30767,24 +30606,24 @@ u8 array_mp_8821c_fw_nic[] = {
 0x8C, 0xEB, 0xAD, 0xEB, 0x20, 0xF0, 0x60, 0xC0,
 0x30, 0xF0, 0x20, 0x6B, 0x25, 0xF6, 0x68, 0x9B,
 0x02, 0x6C, 0x8C, 0xEB, 0x0A, 0x23, 0x20, 0xF0,
-0xA0, 0xA0, 0x10, 0xF0, 0x24, 0x6C, 0x1E, 0xF0,
+0xA0, 0xA0, 0x10, 0xF0, 0x24, 0x6C, 0xDD, 0xF3,
 0x18, 0x4C, 0xAE, 0x35, 0x4C, 0xED, 0x80, 0x18,
 0x35, 0x19, 0x20, 0xF0, 0x40, 0xA0, 0x07, 0x6B,
 0x4E, 0x32, 0x6C, 0xEA, 0x02, 0x52, 0x6A, 0x61,
 0x30, 0xF0, 0x20, 0x6A, 0x25, 0xF6, 0x48, 0x9A,
 0x02, 0x6B, 0x6C, 0xEA, 0x06, 0x22, 0x10, 0xF0,
-0x24, 0x6C, 0x3E, 0xF0, 0x08, 0x4C, 0x80, 0x18,
+0x24, 0x6C, 0xFD, 0xF3, 0x08, 0x4C, 0x80, 0x18,
 0x35, 0x19, 0x09, 0x94, 0x01, 0x6D, 0x00, 0x6E,
 0x80, 0x18, 0x4E, 0x21, 0x2A, 0x10, 0x0D, 0x95,
 0x23, 0xED, 0x32, 0x60, 0x20, 0xF0, 0x61, 0xA0,
 0x01, 0x4B, 0x20, 0xF0, 0x61, 0xC0, 0x65, 0xF4,
 0x40, 0x9A, 0x02, 0x6B, 0x6C, 0xEA, 0x08, 0x22,
 0x20, 0xF0, 0xA1, 0xA0, 0x10, 0xF0, 0x24, 0x6C,
-0x3E, 0xF0, 0x14, 0x4C, 0x80, 0x18, 0x35, 0x19,
+0xFD, 0xF3, 0x14, 0x4C, 0x80, 0x18, 0x35, 0x19,
 0x20, 0xF0, 0x41, 0xA0, 0x03, 0x5A, 0x3E, 0x61,
 0x30, 0xF0, 0x20, 0x6A, 0x25, 0xF6, 0x48, 0x9A,
 0x02, 0x6B, 0x6C, 0xEA, 0x06, 0x22, 0x10, 0xF0,
-0x24, 0x6C, 0x5E, 0xF0, 0x00, 0x4C, 0x80, 0x18,
+0x24, 0x6C, 0x1D, 0xF4, 0x00, 0x4C, 0x80, 0x18,
 0x35, 0x19, 0x09, 0x94, 0x00, 0x6D, 0x80, 0x18,
 0x5D, 0x20, 0x00, 0x6A, 0x20, 0xF0, 0x60, 0xA0,
 0x20, 0xF0, 0x41, 0xC0, 0x39, 0x6A, 0x4B, 0xEA,
@@ -30796,7 +30635,7 @@ u8 array_mp_8821c_fw_nic[] = {
 0x4B, 0xEA, 0x6C, 0xEA, 0x8D, 0xEA, 0x20, 0xF0,
 0x40, 0xC0, 0x30, 0xF0, 0x20, 0x6A, 0x25, 0xF6,
 0x48, 0x9A, 0x02, 0x6B, 0x6C, 0xEA, 0x06, 0x22,
-0x10, 0xF0, 0x24, 0x6C, 0x5E, 0xF0, 0x08, 0x4C,
+0x10, 0xF0, 0x24, 0x6C, 0x1D, 0xF4, 0x08, 0x4C,
 0x80, 0x18, 0x35, 0x19, 0x09, 0x94, 0x80, 0x18,
 0xEF, 0x24, 0x13, 0x97, 0x12, 0x91, 0x11, 0x90,
 0x0A, 0x63, 0x00, 0xEF, 0xFB, 0x63, 0x09, 0x62,
@@ -30804,16 +30643,16 @@ u8 array_mp_8821c_fw_nic[] = {
 0x52, 0x68, 0x18, 0xEC, 0x30, 0xF0, 0x20, 0x6B,
 0x60, 0xF2, 0x08, 0x4B, 0x04, 0xD4, 0x4C, 0xED,
 0x12, 0xE8, 0x01, 0xE3, 0x94, 0x33, 0x10, 0xF0,
-0x24, 0x6C, 0x9C, 0xF5, 0x90, 0x9C, 0x91, 0xE3,
+0x24, 0x6C, 0x7C, 0xF1, 0x8C, 0x9C, 0x91, 0xE3,
 0x80, 0xA4, 0xC4, 0x67, 0x10, 0xF0, 0x24, 0x6C,
-0x4C, 0xEE, 0x9C, 0xF5, 0x8C, 0x9C, 0x05, 0xD6,
+0x4C, 0xEE, 0x7C, 0xF1, 0x88, 0x9C, 0x05, 0xD6,
 0x20, 0xF0, 0xC6, 0xA0, 0x8D, 0xE3, 0x80, 0xA3,
 0x40, 0x6B, 0xCC, 0xEB, 0x4C, 0xEB, 0x4C, 0xEC,
 0xA0, 0xF0, 0x01, 0x23, 0x18, 0x69, 0x8C, 0xE9,
 0x2F, 0x31, 0x01, 0x75, 0x4C, 0xE9, 0x23, 0x61,
 0x30, 0xF0, 0x20, 0x6B, 0x25, 0xF6, 0x68, 0x9B,
 0x00, 0xF1, 0x01, 0x4A, 0x6C, 0xEA, 0x06, 0x22,
-0x10, 0xF0, 0x24, 0x6C, 0x5E, 0xF0, 0x14, 0x4C,
+0x10, 0xF0, 0x24, 0x6C, 0x1D, 0xF4, 0x14, 0x4C,
 0x80, 0x18, 0x35, 0x19, 0x20, 0xF0, 0x63, 0xA0,
 0x10, 0x6A, 0x4B, 0xEA, 0x6C, 0xEA, 0x20, 0xF0,
 0x43, 0xC0, 0x04, 0x94, 0x05, 0x95, 0x00, 0x6E,
@@ -30822,7 +30661,7 @@ u8 array_mp_8821c_fw_nic[] = {
 0x20, 0xF0, 0x46, 0xC0, 0x78, 0x10, 0x30, 0xF0,
 0x20, 0x6B, 0x25, 0xF6, 0x68, 0x9B, 0x00, 0xF2,
 0x00, 0x6A, 0x6C, 0xEA, 0x06, 0x22, 0x10, 0xF0,
-0x24, 0x6C, 0x7E, 0xF0, 0x00, 0x4C, 0x80, 0x18,
+0x24, 0x6C, 0x3D, 0xF4, 0x00, 0x4C, 0x80, 0x18,
 0x35, 0x19, 0x20, 0xF0, 0x83, 0xA0, 0x0F, 0x6A,
 0x20, 0xF0, 0xA6, 0xA0, 0x64, 0x67, 0x4C, 0xEB,
 0x01, 0x4B, 0x4C, 0xEB, 0xE1, 0x4A, 0x8C, 0xEA,
@@ -30831,7 +30670,7 @@ u8 array_mp_8821c_fw_nic[] = {
 0x02, 0x5A, 0x52, 0x60, 0x30, 0xF0, 0x20, 0x6B,
 0x25, 0xF6, 0x68, 0x9B, 0x00, 0xF2, 0x00, 0x6A,
 0x6C, 0xEA, 0x08, 0x22, 0x10, 0xF0, 0x24, 0x6C,
-0xFF, 0x6A, 0x7E, 0xF0, 0x08, 0x4C, 0x4C, 0xED,
+0xFF, 0x6A, 0x3D, 0xF4, 0x08, 0x4C, 0x4C, 0xED,
 0x80, 0x18, 0x35, 0x19, 0x20, 0xF0, 0xA6, 0xA0,
 0x03, 0x6C, 0xFF, 0x6E, 0xAE, 0x32, 0x8C, 0xEA,
 0x6F, 0x42, 0xCC, 0xEB, 0x79, 0xE0, 0xC5, 0xA6,
@@ -30839,14 +30678,14 @@ u8 array_mp_8821c_fw_nic[] = {
 0x19, 0x6A, 0x4B, 0xEA, 0xAC, 0xEA, 0xCD, 0xEA,
 0x20, 0xF0, 0x46, 0xC0, 0x04, 0x96, 0x30, 0xF0,
 0x20, 0x6A, 0xEF, 0xF4, 0x08, 0x4A, 0xCC, 0x35,
-0x49, 0xE5, 0x6D, 0xE2, 0x40, 0xF2, 0x56, 0xA3,
+0x49, 0xE5, 0x6D, 0xE2, 0x40, 0xF2, 0x52, 0xA3,
 0xFF, 0x72, 0x0B, 0x60, 0x20, 0xF0, 0x65, 0xA0,
 0x4C, 0xEC, 0x22, 0x67, 0x0D, 0x6A, 0x4B, 0xEA,
 0x88, 0x34, 0x6C, 0xEA, 0x8D, 0xEA, 0x20, 0xF0,
 0x45, 0xC0, 0x30, 0xF0, 0x20, 0x6B, 0x25, 0xF6,
 0x68, 0x9B, 0x00, 0xF2, 0x00, 0x6A, 0x6C, 0xEA,
 0x08, 0x22, 0x05, 0x96, 0x10, 0xF0, 0x24, 0x6C,
-0x7E, 0xF0, 0x14, 0x4C, 0xB1, 0x67, 0x80, 0x18,
+0x3D, 0xF4, 0x14, 0x4C, 0xB1, 0x67, 0x80, 0x18,
 0x35, 0x19, 0x04, 0x94, 0x05, 0x95, 0x01, 0x6E,
 0xF1, 0x67, 0x80, 0x18, 0x00, 0x1F, 0x03, 0x10,
 0x04, 0x94, 0x80, 0x18, 0x35, 0x20, 0x09, 0x97,
@@ -30856,17 +30695,17 @@ u8 array_mp_8821c_fw_nic[] = {
 0x18, 0xE9, 0x30, 0xF0, 0x20, 0x6B, 0x60, 0xF2,
 0x08, 0x4B, 0x7F, 0x6E, 0x12, 0xE8, 0x01, 0xE3,
 0x76, 0xA8, 0x83, 0x67, 0x4C, 0xEC, 0x0D, 0xD4,
-0x10, 0xF0, 0x24, 0x6C, 0x9C, 0xF5, 0x90, 0x9C,
+0x10, 0xF0, 0x24, 0x6C, 0x7C, 0xF1, 0x8C, 0x9C,
 0x34, 0x33, 0x91, 0xE3, 0x80, 0xA4, 0x8C, 0xEA,
 0x09, 0xD2, 0xCC, 0xEA, 0x08, 0xD2, 0x10, 0xF0,
-0x24, 0x6A, 0x9C, 0xF5, 0x4C, 0x9A, 0x4D, 0xE3,
+0x24, 0x6A, 0x7C, 0xF1, 0x48, 0x9A, 0x4D, 0xE3,
 0x60, 0xA3, 0x18, 0x6A, 0x6C, 0xEA, 0x4E, 0x32,
 0x0C, 0xD2, 0x33, 0xF0, 0x64, 0x41, 0x30, 0xF0,
 0x20, 0x6A, 0x64, 0x33, 0xC0, 0xF1, 0x08, 0x4A,
 0x4D, 0xE3, 0x60, 0xAB, 0x03, 0x5B, 0x15, 0x61,
 0x65, 0xF4, 0x40, 0x9A, 0x00, 0xF2, 0x00, 0x6B,
 0x4C, 0xEB, 0x06, 0x23, 0x10, 0xF0, 0x24, 0x6C,
-0x9D, 0xF7, 0x10, 0x4C, 0x80, 0x18, 0x35, 0x19,
+0x5D, 0xF3, 0x10, 0x4C, 0x80, 0x18, 0x35, 0x19,
 0x01, 0x6D, 0x91, 0x67, 0xC5, 0x67, 0x80, 0x18,
 0x4E, 0x21, 0x91, 0x67, 0x00, 0x6D, 0x80, 0x18,
 0xF5, 0x22, 0x30, 0xF0, 0x20, 0x6F, 0x33, 0xF2,
@@ -30884,12 +30723,12 @@ u8 array_mp_8821c_fw_nic[] = {
 0x07, 0x96, 0x0E, 0x97, 0xB3, 0xF2, 0x44, 0x41,
 0x0F, 0x93, 0x44, 0x32, 0x89, 0xE2, 0xA0, 0xAE,
 0xC0, 0xAF, 0xE0, 0xAA, 0x40, 0xAB, 0x10, 0xF0,
-0x24, 0x6C, 0x9E, 0xF0, 0x00, 0x4C, 0x04, 0xD2,
+0x24, 0x6C, 0x5D, 0xF4, 0x00, 0x4C, 0x04, 0xD2,
 0x80, 0x18, 0x35, 0x19, 0x30, 0xF0, 0x20, 0x6B,
 0x25, 0xF6, 0x68, 0x9B, 0x00, 0xF2, 0x00, 0x6A,
 0x6C, 0xEA, 0x0B, 0x22, 0x09, 0x94, 0x0B, 0x95,
 0x0A, 0x96, 0x0C, 0x97, 0x04, 0xD4, 0x10, 0xF0,
-0x24, 0x6C, 0x9E, 0xF0, 0x18, 0x4C, 0x80, 0x18,
+0x24, 0x6C, 0x5D, 0xF4, 0x18, 0x4C, 0x80, 0x18,
 0x35, 0x19, 0x09, 0x96, 0xDE, 0x32, 0x12, 0x22,
 0x08, 0x97, 0x30, 0xF0, 0x20, 0x6A, 0xAF, 0xF3,
 0x1C, 0x4A, 0xE4, 0x33, 0x49, 0xE3, 0x60, 0xAA,
@@ -30918,16 +30757,16 @@ u8 array_mp_8821c_fw_nic[] = {
 0x00, 0xF2, 0x00, 0x6A, 0x12, 0xEB, 0x64, 0xEC,
 0x06, 0xD3, 0x30, 0xF0, 0x20, 0x6B, 0x25, 0xF6,
 0x68, 0x9B, 0x6C, 0xEA, 0x08, 0x22, 0x0D, 0x95,
-0x10, 0xF0, 0x24, 0x6C, 0xBE, 0xF0, 0x18, 0x4C,
+0x10, 0xF0, 0x24, 0x6C, 0x7D, 0xF4, 0x18, 0x4C,
 0xC7, 0x67, 0x80, 0x18, 0x35, 0x19, 0x30, 0xF0,
 0x20, 0x6B, 0x25, 0xF6, 0x68, 0x9B, 0x00, 0xF2,
 0x00, 0x6A, 0x6C, 0xEA, 0x09, 0x22, 0x40, 0xF0,
 0xA4, 0xA0, 0x08, 0x96, 0x10, 0xF0, 0x24, 0x6C,
-0xDE, 0xF0, 0x04, 0x4C, 0x80, 0x18, 0x35, 0x19,
+0x9D, 0xF4, 0x04, 0x4C, 0x80, 0x18, 0x35, 0x19,
 0x30, 0xF0, 0x20, 0x6B, 0x25, 0xF6, 0x68, 0x9B,
 0x00, 0xF2, 0x00, 0x6A, 0x6C, 0xEA, 0x0C, 0x22,
 0x07, 0x96, 0x06, 0x97, 0x10, 0xF0, 0x24, 0x6C,
-0xC2, 0x35, 0xE2, 0x36, 0xDE, 0xF0, 0x10, 0x4C,
+0xC2, 0x35, 0xE2, 0x36, 0x9D, 0xF4, 0x10, 0x4C,
 0xAA, 0x35, 0xCA, 0x36, 0x80, 0x18, 0x35, 0x19,
 0x06, 0x92, 0x07, 0x93, 0x63, 0xEA, 0x03, 0x61,
 0x0A, 0x94, 0x1E, 0x5C, 0x2F, 0x61, 0x20, 0xF0,
@@ -30935,7 +30774,7 @@ u8 array_mp_8821c_fw_nic[] = {
 0xFF, 0x6B, 0x6C, 0xEA, 0x10, 0x72, 0x4C, 0x61,
 0x30, 0xF0, 0x20, 0x6B, 0x25, 0xF6, 0x68, 0x9B,
 0x00, 0xF2, 0x00, 0x6A, 0x6C, 0xEA, 0x06, 0x22,
-0x10, 0xF0, 0x24, 0x6C, 0xDE, 0xF0, 0x1C, 0x4C,
+0x10, 0xF0, 0x24, 0x6C, 0x9D, 0xF4, 0x1C, 0x4C,
 0x80, 0x18, 0x35, 0x19, 0x0A, 0x96, 0x1E, 0x5E,
 0x3B, 0x61, 0x30, 0xF0, 0x20, 0x6A, 0x2E, 0xF5,
 0x48, 0x9A, 0x08, 0x94, 0x40, 0xEA, 0x07, 0x22,
@@ -30945,7 +30784,7 @@ u8 array_mp_8821c_fw_nic[] = {
 0x45, 0xC0, 0x26, 0x10, 0x30, 0xF0, 0x20, 0x6B,
 0x25, 0xF6, 0x68, 0x9B, 0x00, 0xF2, 0x00, 0x6A,
 0x6C, 0xEA, 0x07, 0x22, 0x09, 0x95, 0x10, 0xF0,
-0x24, 0x6C, 0xFE, 0xF0, 0x04, 0x4C, 0x80, 0x18,
+0x24, 0x6C, 0xBD, 0xF4, 0x04, 0x4C, 0x80, 0x18,
 0x35, 0x19, 0x00, 0x6A, 0x20, 0xF0, 0x63, 0xA0,
 0x40, 0xF0, 0x42, 0xC0, 0x10, 0x6A, 0x4B, 0xEA,
 0x6C, 0xEA, 0xFF, 0x6B, 0x6C, 0xEA, 0x10, 0x72,
@@ -30968,7 +30807,7 @@ u8 array_mp_8821c_fw_nic[] = {
 0x60, 0xF2, 0x08, 0x4D, 0xFF, 0x4B, 0x12, 0xEA,
 0x49, 0xE5, 0xFF, 0x6D, 0xAC, 0xEB, 0x05, 0x5B,
 0xE0, 0xF0, 0x13, 0x60, 0x10, 0xF0, 0x24, 0x6D,
-0x68, 0x33, 0xFB, 0xF6, 0x1C, 0x4D, 0x75, 0xE5,
+0x68, 0x33, 0xDB, 0xF2, 0x18, 0x4D, 0x75, 0xE5,
 0x60, 0x9D, 0x00, 0xEB, 0x0C, 0x6B, 0x9D, 0x67,
 0x6F, 0xCC, 0xBD, 0x67, 0x0E, 0x6C, 0x90, 0xC5,
 0x72, 0xC5, 0x20, 0xF0, 0x72, 0xA2, 0x03, 0x6C,
@@ -30983,20 +30822,20 @@ u8 array_mp_8821c_fw_nic[] = {
 0x6F, 0xCD, 0x0E, 0x6B, 0x70, 0xC5, 0x0D, 0x6B,
 0x72, 0xC5, 0x64, 0xA2, 0x8C, 0x34, 0x73, 0xC5,
 0x60, 0xA2, 0x74, 0xC5, 0x41, 0xA2, 0x55, 0xC5,
-0x10, 0xF0, 0x24, 0x6A, 0x9C, 0xF5, 0x58, 0x9A,
+0x10, 0xF0, 0x24, 0x6A, 0x7C, 0xF1, 0x54, 0x9A,
 0x49, 0xE4, 0x40, 0xA2, 0x56, 0xC5, 0x10, 0xF0,
-0x24, 0x6A, 0xFC, 0xF5, 0x40, 0x9A, 0x49, 0xE4,
+0x24, 0x6A, 0xBC, 0xF1, 0x5C, 0x9A, 0x49, 0xE4,
 0x40, 0xA2, 0x57, 0xC5, 0x10, 0xF0, 0x24, 0x6A,
-0xFC, 0xF5, 0x44, 0x9A, 0x49, 0xE4, 0x40, 0xA2,
-0x58, 0xC5, 0x10, 0xF0, 0x24, 0x6A, 0xFC, 0xF5,
-0x48, 0x9A, 0x49, 0xE4, 0x40, 0xA2, 0x59, 0xC5,
-0x10, 0xF0, 0x24, 0x6A, 0x9C, 0xF5, 0x5C, 0x9A,
+0xDC, 0xF1, 0x40, 0x9A, 0x49, 0xE4, 0x40, 0xA2,
+0x58, 0xC5, 0x10, 0xF0, 0x24, 0x6A, 0xDC, 0xF1,
+0x44, 0x9A, 0x49, 0xE4, 0x40, 0xA2, 0x59, 0xC5,
+0x10, 0xF0, 0x24, 0x6A, 0x7C, 0xF1, 0x58, 0x9A,
 0x49, 0xE4, 0x40, 0xA2, 0x5A, 0xC5, 0x10, 0xF0,
-0x24, 0x6A, 0xFC, 0xF5, 0x4C, 0x9A, 0x49, 0xE4,
+0x24, 0x6A, 0xDC, 0xF1, 0x48, 0x9A, 0x49, 0xE4,
 0x40, 0xA2, 0x5B, 0xC5, 0x10, 0xF0, 0x24, 0x6A,
-0xFC, 0xF5, 0x50, 0x9A, 0x49, 0xE4, 0x40, 0xA2,
-0x5C, 0xC5, 0x10, 0xF0, 0x24, 0x6A, 0xFC, 0xF5,
-0x54, 0x9A, 0x76, 0x10, 0xDD, 0x67, 0x0C, 0x6A,
+0xDC, 0xF1, 0x4C, 0x9A, 0x49, 0xE4, 0x40, 0xA2,
+0x5C, 0xC5, 0x10, 0xF0, 0x24, 0x6A, 0xDC, 0xF1,
+0x50, 0x9A, 0x76, 0x10, 0xDD, 0x67, 0x0C, 0x6A,
 0x4F, 0xCE, 0x0E, 0x6A, 0x50, 0xC6, 0x52, 0xC6,
 0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A,
 0x45, 0xF4, 0x72, 0xA2, 0x73, 0xC6, 0x45, 0xF4,
@@ -31018,14 +30857,14 @@ u8 array_mp_8821c_fw_nic[] = {
 0x6F, 0x33, 0x74, 0xC5, 0x76, 0xAA, 0x04, 0x4B,
 0x6F, 0x33, 0x75, 0xC5, 0x60, 0xA2, 0x76, 0xC5,
 0x65, 0xA2, 0x77, 0xC5, 0x46, 0xA2, 0x58, 0xC5,
-0x10, 0xF0, 0x24, 0x6A, 0x9C, 0xF5, 0x58, 0x9A,
+0x10, 0xF0, 0x24, 0x6A, 0x7C, 0xF1, 0x54, 0x9A,
 0x49, 0xE4, 0x40, 0xA2, 0x59, 0xC5, 0x10, 0xF0,
-0x24, 0x6A, 0xFC, 0xF5, 0x40, 0x9A, 0x49, 0xE4,
+0x24, 0x6A, 0xBC, 0xF1, 0x5C, 0x9A, 0x49, 0xE4,
 0x40, 0xA2, 0x5A, 0xC5, 0x10, 0xF0, 0x24, 0x6A,
-0xFC, 0xF5, 0x44, 0x9A, 0x49, 0xE4, 0x40, 0xA2,
-0x5B, 0xC5, 0x10, 0xF0, 0x24, 0x6A, 0xFC, 0xF5,
-0x48, 0x9A, 0x49, 0xE4, 0x40, 0xA2, 0x5C, 0xC5,
-0x10, 0xF0, 0x24, 0x6A, 0x9C, 0xF5, 0x5C, 0x9A,
+0xDC, 0xF1, 0x40, 0x9A, 0x49, 0xE4, 0x40, 0xA2,
+0x5B, 0xC5, 0x10, 0xF0, 0x24, 0x6A, 0xDC, 0xF1,
+0x44, 0x9A, 0x49, 0xE4, 0x40, 0xA2, 0x5C, 0xC5,
+0x10, 0xF0, 0x24, 0x6A, 0x7C, 0xF1, 0x58, 0x9A,
 0x51, 0xE4, 0x40, 0xA4, 0x5D, 0xC5, 0x04, 0x94,
 0x05, 0x95, 0x06, 0x96, 0x07, 0x97, 0x80, 0x18,
 0x47, 0x10, 0x09, 0x97, 0x05, 0x63, 0x00, 0xEF,
@@ -31071,23 +30910,23 @@ u8 array_mp_8821c_fw_nic[] = {
 0x41, 0xA3, 0x4C, 0xEC, 0xE0, 0xF0, 0x81, 0xC3,
 0x20, 0xE8, 0x00, 0x65, 0xF4, 0x63, 0x17, 0x62,
 0x16, 0xD1, 0x15, 0xD0, 0x10, 0xF0, 0x24, 0x6B,
-0xFF, 0x6A, 0xFC, 0xF5, 0x78, 0x9B, 0x4C, 0xEC,
+0xFF, 0x6A, 0xDC, 0xF1, 0x74, 0x9B, 0x4C, 0xEC,
 0x90, 0x34, 0x6D, 0xE4, 0x00, 0xA3, 0x10, 0xF0,
-0x24, 0x6B, 0xFC, 0xF5, 0x7C, 0x9B, 0x4C, 0xE8,
+0x24, 0x6B, 0xDC, 0xF1, 0x78, 0x9B, 0x4C, 0xE8,
 0x6D, 0xE4, 0xA0, 0xA3, 0x10, 0xF0, 0x24, 0x6B,
-0x1C, 0xF6, 0x60, 0x9B, 0x4C, 0xED, 0x6D, 0xE4,
+0xDC, 0xF1, 0x7C, 0x9B, 0x4C, 0xED, 0x6D, 0xE4,
 0x60, 0xA3, 0xC3, 0x67, 0x10, 0xF0, 0x24, 0x6B,
-0x1C, 0xF6, 0x64, 0x9B, 0x4C, 0xEE, 0x0F, 0xD6,
+0xFC, 0xF1, 0x60, 0x9B, 0x4C, 0xEE, 0x0F, 0xD6,
 0x6D, 0xE4, 0x60, 0xA3, 0xE3, 0x67, 0x10, 0xF0,
-0x24, 0x6B, 0x1C, 0xF6, 0xC8, 0x9B, 0x4C, 0xEF,
+0x24, 0x6B, 0xFC, 0xF1, 0xC4, 0x9B, 0x4C, 0xEF,
 0x10, 0xD7, 0xD9, 0xE4, 0x60, 0xA6, 0xE3, 0x67,
-0x10, 0xF0, 0x24, 0x6B, 0x1C, 0xF6, 0x6C, 0x9B,
+0x10, 0xF0, 0x24, 0x6B, 0xFC, 0xF1, 0x68, 0x9B,
 0x4C, 0xEF, 0x09, 0xD7, 0x6D, 0xE4, 0x60, 0xA3,
-0xE3, 0x67, 0x10, 0xF0, 0x24, 0x6B, 0x1C, 0xF6,
-0x70, 0x9B, 0x4C, 0xEF, 0x0B, 0xD7, 0x6D, 0xE4,
+0xE3, 0x67, 0x10, 0xF0, 0x24, 0x6B, 0xFC, 0xF1,
+0x6C, 0x9B, 0x4C, 0xEF, 0x0B, 0xD7, 0x6D, 0xE4,
 0xE0, 0xA3, 0x4C, 0xEF, 0x10, 0xF0, 0x24, 0x6A,
-0x1C, 0xF6, 0x54, 0x9A, 0x49, 0xE4, 0x40, 0xA2,
-0x10, 0xF0, 0x24, 0x6A, 0x1C, 0xF6, 0x58, 0x9A,
+0xFC, 0xF1, 0x50, 0x9A, 0x49, 0xE4, 0x40, 0xA2,
+0x10, 0xF0, 0x24, 0x6A, 0xFC, 0xF1, 0x54, 0x9A,
 0x51, 0xE4, 0x60, 0xA4, 0x01, 0x6A, 0x4C, 0xEB,
 0xA0, 0xF2, 0x06, 0x2B, 0x52, 0x69, 0x38, 0xE8,
 0x30, 0xF0, 0x20, 0x6B, 0x60, 0xF2, 0x08, 0x4B,
@@ -31095,12 +30934,12 @@ u8 array_mp_8821c_fw_nic[] = {
 0x60, 0x33, 0x00, 0xF6, 0x63, 0x33, 0x00, 0x53,
 0x00, 0x6B, 0x0E, 0xD3, 0x05, 0x60, 0x20, 0xF0,
 0x66, 0xA1, 0x7A, 0x33, 0x4C, 0xEB, 0x0E, 0xD3,
-0x10, 0xF0, 0x24, 0x6A, 0x9C, 0xF5, 0x50, 0x9A,
+0x10, 0xF0, 0x24, 0x6A, 0x7C, 0xF1, 0x4C, 0x9A,
 0x14, 0x33, 0x0F, 0x94, 0x49, 0xE3, 0xC0, 0xA2,
 0xFF, 0x6B, 0x6C, 0xEE, 0xCA, 0xEC, 0x10, 0x60,
 0x30, 0xF0, 0x20, 0x6A, 0x25, 0xF6, 0x48, 0x9A,
 0x01, 0x6B, 0x6C, 0xEA, 0x60, 0xF2, 0x1C, 0x22,
-0x0F, 0x95, 0x10, 0xF0, 0x24, 0x6C, 0xFE, 0xF0,
+0x0F, 0x95, 0x10, 0xF0, 0x24, 0x6C, 0xBD, 0xF4,
 0x10, 0x4C, 0x80, 0x18, 0x35, 0x19, 0x74, 0x12,
 0x20, 0xF0, 0x85, 0xA1, 0x80, 0x6A, 0x4B, 0xEA,
 0x8C, 0xEA, 0x6C, 0xEA, 0x40, 0xF2, 0x1E, 0x2A,
@@ -31130,7 +30969,7 @@ u8 array_mp_8821c_fw_nic[] = {
 0xB2, 0xF7, 0x64, 0x40, 0x64, 0x33, 0x04, 0xD5,
 0x05, 0xD6, 0x06, 0xD7, 0x49, 0xE3, 0x40, 0xAA,
 0x0F, 0x95, 0x10, 0x96, 0x0D, 0x97, 0x10, 0xF0,
-0x24, 0x6C, 0x1E, 0xF1, 0x04, 0x4C, 0x07, 0xD2,
+0x24, 0x6C, 0xDD, 0xF4, 0x04, 0x4C, 0x07, 0xD2,
 0x80, 0x18, 0x35, 0x19, 0x10, 0x92, 0x0F, 0x97,
 0xEE, 0xEA, 0x26, 0x22, 0x0E, 0x92, 0x05, 0x22,
 0x30, 0xF0, 0x20, 0x6A, 0xC5, 0xF4, 0x68, 0xA2,
@@ -31153,7 +30992,7 @@ u8 array_mp_8821c_fw_nic[] = {
 0x30, 0xF0, 0x20, 0x6A, 0x25, 0xF6, 0x48, 0x9A,
 0x01, 0x6E, 0x08, 0xD3, 0xCC, 0xEA, 0x0C, 0x22,
 0x40, 0xF0, 0x41, 0xA1, 0x10, 0xF0, 0x24, 0x6C,
-0x3F, 0x6F, 0x5A, 0x33, 0x3E, 0xF1, 0x14, 0x4C,
+0x3F, 0x6F, 0x5A, 0x33, 0xFD, 0xF4, 0x14, 0x4C,
 0x6C, 0xEE, 0x4C, 0xEF, 0x80, 0x18, 0x35, 0x19,
 0x0B, 0x92, 0x09, 0x94, 0x12, 0x97, 0x11, 0x93,
 0x5D, 0xE7, 0x8D, 0xE3, 0xFF, 0xF7, 0x1F, 0x6A,
@@ -31162,7 +31001,7 @@ u8 array_mp_8821c_fw_nic[] = {
 0x40, 0xF0, 0x41, 0xC1, 0x30, 0xF0, 0x20, 0x6A,
 0x25, 0xF6, 0x48, 0x9A, 0x08, 0x95, 0x01, 0x6B,
 0x6C, 0xEA, 0x0C, 0xD5, 0x08, 0x22, 0x08, 0x96,
-0x10, 0xF0, 0x24, 0x6C, 0x5E, 0xF1, 0x04, 0x4C,
+0x10, 0xF0, 0x24, 0x6C, 0x1D, 0xF5, 0x04, 0x4C,
 0xB0, 0x67, 0x80, 0x18, 0x35, 0x19, 0x09, 0x96,
 0x0A, 0x97, 0x08, 0x94, 0x0B, 0x95, 0xEB, 0xE6,
 0xFF, 0xF7, 0x1F, 0x6B, 0x6C, 0xEA, 0x04, 0xD2,
@@ -31184,7 +31023,7 @@ u8 array_mp_8821c_fw_nic[] = {
 0x90, 0x67, 0x80, 0x18, 0x5C, 0x23, 0x90, 0x67,
 0x80, 0x18, 0xFD, 0x24, 0x17, 0x11, 0xBD, 0x67,
 0xC7, 0x45, 0x30, 0xF0, 0x20, 0x6A, 0x2F, 0xF7,
-0x1C, 0x4A, 0x21, 0x4E, 0x0C, 0x34, 0xA0, 0xAE,
+0x18, 0x4A, 0x21, 0x4E, 0x0C, 0x34, 0xA0, 0xAE,
 0x91, 0xE2, 0xDD, 0x67, 0x30, 0xF0, 0x20, 0x6A,
 0xB3, 0xF0, 0x64, 0x40, 0xC0, 0xF1, 0x08, 0x4A,
 0xE7, 0x46, 0x64, 0x33, 0x4D, 0xE3, 0x1D, 0x4F,
@@ -31201,13 +31040,13 @@ u8 array_mp_8821c_fw_nic[] = {
 0xB2, 0xF7, 0x84, 0x40, 0xAC, 0x35, 0xEF, 0xF4,
 0x08, 0x4B, 0x6D, 0xE5, 0x84, 0x34, 0xC0, 0xF1,
 0x08, 0x4A, 0x51, 0xE4, 0x0A, 0xD3, 0x80, 0xAC,
-0x68, 0xA3, 0x63, 0xEC, 0x08, 0x61, 0x90, 0x67,
-0x80, 0x18, 0xC8, 0x21, 0x0A, 0x97, 0x45, 0xA7,
-0x01, 0x4A, 0x45, 0xC7, 0xC3, 0x10, 0x20, 0xF0,
+0x64, 0xA3, 0x63, 0xEC, 0x08, 0x61, 0x90, 0x67,
+0x80, 0x18, 0xC8, 0x21, 0x0A, 0x97, 0x41, 0xA7,
+0x01, 0x4A, 0x41, 0xC7, 0xC3, 0x10, 0x20, 0xF0,
 0x87, 0xA1, 0x80, 0x6B, 0x6B, 0xEB, 0x8C, 0xEB,
 0xFF, 0x6C, 0x8C, 0xEB, 0xA0, 0xF0, 0x1A, 0x23,
 0x65, 0xF4, 0x40, 0x9A, 0x01, 0x6B, 0x6C, 0xEA,
-0x07, 0x22, 0x10, 0xF0, 0x24, 0x6C, 0x5E, 0xF1,
+0x07, 0x22, 0x10, 0xF0, 0x24, 0x6C, 0x1D, 0xF5,
 0x14, 0x4C, 0xB0, 0x67, 0x80, 0x18, 0x35, 0x19,
 0x90, 0x67, 0x80, 0x18, 0xC8, 0x21, 0x20, 0xF0,
 0x67, 0xA1, 0x7F, 0x6A, 0x6C, 0xEA, 0x20, 0xF0,
@@ -31217,7 +31056,7 @@ u8 array_mp_8821c_fw_nic[] = {
 0x0B, 0x94, 0x0C, 0x95, 0x04, 0xD3, 0xB2, 0xF7,
 0x64, 0x40, 0x64, 0x33, 0x05, 0xD4, 0x06, 0xD5,
 0x49, 0xE3, 0x40, 0xAA, 0x0F, 0x95, 0x10, 0x96,
-0x0D, 0x97, 0x10, 0xF0, 0x24, 0x6C, 0x7E, 0xF1,
+0x0D, 0x97, 0x10, 0xF0, 0x24, 0x6C, 0x3D, 0xF5,
 0x00, 0x4C, 0x07, 0xD2, 0x80, 0x18, 0x35, 0x19,
 0x10, 0x92, 0x0F, 0x96, 0x00, 0x6D, 0xCE, 0xEA,
 0x21, 0x2A, 0x40, 0xF0, 0xC1, 0xA1, 0x0D, 0x97,
@@ -31231,7 +31070,7 @@ u8 array_mp_8821c_fw_nic[] = {
 0x4C, 0xEE, 0x08, 0xD6, 0x30, 0xF0, 0x20, 0x6A,
 0x25, 0xF6, 0x48, 0x9A, 0x01, 0x6E, 0xCC, 0xEA,
 0x0C, 0x22, 0x40, 0xF0, 0x41, 0xA1, 0x10, 0xF0,
-0x24, 0x6C, 0x3F, 0x6F, 0x5A, 0x33, 0x3E, 0xF1,
+0x24, 0x6C, 0x3F, 0x6F, 0x5A, 0x33, 0xFD, 0xF4,
 0x14, 0x4C, 0x6C, 0xEE, 0x4C, 0xEF, 0x80, 0x18,
 0x35, 0x19, 0x12, 0x97, 0x0B, 0x93, 0x11, 0x95,
 0x09, 0x96, 0x69, 0xE7, 0xFF, 0xF7, 0x1F, 0x6C,
@@ -31257,37 +31096,37 @@ u8 array_mp_8821c_fw_nic[] = {
 0x4B, 0xEA, 0x8C, 0xEA, 0x6D, 0xEA, 0x40, 0xF0,
 0x41, 0xC1, 0x0E, 0x10, 0x30, 0xF0, 0x20, 0x6A,
 0x25, 0xF6, 0x48, 0x9A, 0x01, 0x6B, 0x6C, 0xEA,
-0x07, 0x22, 0x10, 0xF0, 0x24, 0x6C, 0x9E, 0xF1,
+0x07, 0x22, 0x10, 0xF0, 0x24, 0x6C, 0x5D, 0xF5,
 0x10, 0x4C, 0xB0, 0x67, 0x80, 0x18, 0x35, 0x19,
 0x17, 0x97, 0x16, 0x91, 0x15, 0x90, 0x0C, 0x63,
 0x00, 0xEF, 0x00, 0x65, 0x01, 0x6A, 0x20, 0xE8,
 0x20, 0xE8, 0x00, 0x65, 0x20, 0xE8, 0x00, 0x65,
 0x20, 0xE8, 0x00, 0x65, 0xFC, 0x63, 0x07, 0x62,
 0x06, 0xD1, 0x05, 0xD0, 0x01, 0x75, 0x1F, 0x61,
-0x10, 0xF0, 0x24, 0x6A, 0x1C, 0xF3, 0x34, 0x9A,
+0x10, 0xF0, 0x24, 0x6A, 0xFB, 0xF6, 0x30, 0x9A,
 0x30, 0xF0, 0x20, 0x68, 0xCE, 0xF4, 0x50, 0x98,
 0xB1, 0x67, 0x41, 0xF1, 0x08, 0x6C, 0x02, 0x6E,
 0x40, 0xEA, 0xCE, 0xF4, 0x50, 0x98, 0xB1, 0x67,
 0x41, 0xF1, 0x0C, 0x6C, 0x02, 0x6E, 0x40, 0xEA,
-0x10, 0xF0, 0x24, 0x6A, 0x5C, 0xF4, 0x38, 0x9A,
+0x10, 0xF0, 0x24, 0x6A, 0x3C, 0xF0, 0x34, 0x9A,
 0x21, 0xF4, 0x00, 0x6C, 0xCE, 0xF4, 0x50, 0x98,
 0xB1, 0x67, 0x00, 0x6E, 0x46, 0x10, 0x02, 0x75,
-0x26, 0x61, 0x10, 0xF0, 0x24, 0x6A, 0x1C, 0xF3,
-0x34, 0x9A, 0x30, 0xF0, 0x20, 0x68, 0xCE, 0xF4,
+0x26, 0x61, 0x10, 0xF0, 0x24, 0x6A, 0xFB, 0xF6,
+0x30, 0x9A, 0x30, 0xF0, 0x20, 0x68, 0xCE, 0xF4,
 0x50, 0x98, 0xB1, 0x67, 0x41, 0xF1, 0x08, 0x6C,
 0x02, 0x6E, 0x40, 0xEA, 0xCE, 0xF4, 0x50, 0x98,
 0xB1, 0x67, 0x41, 0xF1, 0x0C, 0x6C, 0x01, 0x6E,
-0x40, 0xEA, 0x10, 0xF0, 0x24, 0x6A, 0x5C, 0xF4,
-0x38, 0x9A, 0xCE, 0xF4, 0x50, 0x98, 0x21, 0xF4,
+0x40, 0xEA, 0x10, 0xF0, 0x24, 0x6A, 0x3C, 0xF0,
+0x34, 0x9A, 0xCE, 0xF4, 0x50, 0x98, 0x21, 0xF4,
 0x00, 0x6C, 0xB1, 0x67, 0x00, 0x6E, 0x40, 0xEA,
 0xCE, 0xF4, 0x50, 0x98, 0xE1, 0xF0, 0x10, 0x6C,
 0xB1, 0x67, 0x01, 0x6E, 0x25, 0x10, 0x10, 0xF0,
-0x24, 0x6A, 0x1C, 0xF3, 0x34, 0x9A, 0x30, 0xF0,
+0x24, 0x6A, 0xFB, 0xF6, 0x30, 0x9A, 0x30, 0xF0,
 0x20, 0x68, 0xCE, 0xF4, 0x50, 0x98, 0xB1, 0x67,
 0x41, 0xF1, 0x08, 0x6C, 0x02, 0x6E, 0x40, 0xEA,
 0xCE, 0xF4, 0x50, 0x98, 0xB1, 0x67, 0x41, 0xF1,
 0x0C, 0x6C, 0x02, 0x6E, 0x40, 0xEA, 0x10, 0xF0,
-0x24, 0x6A, 0x5C, 0xF4, 0x38, 0x9A, 0xCE, 0xF4,
+0x24, 0x6A, 0x3C, 0xF0, 0x34, 0x9A, 0xCE, 0xF4,
 0x50, 0x98, 0x21, 0xF4, 0x00, 0x6C, 0xB1, 0x67,
 0x01, 0x6E, 0x40, 0xEA, 0xCE, 0xF4, 0x50, 0x98,
 0xE1, 0xF0, 0x10, 0x6C, 0xB1, 0x67, 0x00, 0x6E,
@@ -31295,54 +31134,54 @@ u8 array_mp_8821c_fw_nic[] = {
 0x04, 0x63, 0x00, 0xEF, 0xFB, 0x63, 0x09, 0x62,
 0x08, 0xD1, 0x07, 0xD0, 0x0B, 0xD5, 0x6B, 0xA4,
 0xFF, 0x6A, 0x27, 0x67, 0x04, 0x67, 0x4C, 0xE9,
-0x12, 0x23, 0x10, 0xF0, 0x24, 0x6A, 0x7C, 0xF3,
+0x12, 0x23, 0x10, 0xF0, 0x24, 0x6A, 0x3B, 0xF7,
 0x50, 0x9A, 0x60, 0x9C, 0x6C, 0xEA, 0x4B, 0x22,
 0x10, 0xF0, 0x24, 0x6C, 0x10, 0xF0, 0x24, 0x6D,
-0x9E, 0xF1, 0x1C, 0x4C, 0x1C, 0xF0, 0x08, 0x4D,
+0x5D, 0xF5, 0x1C, 0x4C, 0xFB, 0xF3, 0x04, 0x4D,
 0x80, 0x18, 0x35, 0x19, 0x40, 0x10, 0x02, 0x2E,
 0x54, 0x59, 0x14, 0x61, 0x10, 0xF0, 0x24, 0x6A,
-0x7C, 0xF3, 0x70, 0x9A, 0x40, 0x98, 0x4C, 0xEB,
+0x3B, 0xF7, 0x70, 0x9A, 0x40, 0x98, 0x4C, 0xEB,
 0x00, 0x6A, 0x36, 0x23, 0x10, 0xF0, 0x24, 0x6C,
-0x10, 0xF0, 0x24, 0x6D, 0xDE, 0xF1, 0x00, 0x4C,
-0x1C, 0xF0, 0x08, 0x4D, 0x80, 0x18, 0x35, 0x19,
+0x10, 0xF0, 0x24, 0x6D, 0x9D, 0xF5, 0x00, 0x4C,
+0xFB, 0xF3, 0x04, 0x4D, 0x80, 0x18, 0x35, 0x19,
 0x00, 0x6A, 0x2A, 0x10, 0x04, 0x6C, 0x8B, 0xEC,
 0x2C, 0xEC, 0x4C, 0xEC, 0x30, 0xF0, 0x20, 0x6A,
 0xCE, 0xF4, 0x50, 0x9A, 0x0B, 0x96, 0xFF, 0xF7,
 0x1F, 0x6B, 0x03, 0xF5, 0x00, 0x4C, 0x01, 0x6D,
 0x6C, 0xEC, 0xAB, 0xED, 0x40, 0xEA, 0x10, 0xF0,
-0x24, 0x6A, 0x7C, 0xF3, 0x50, 0x9A, 0x60, 0x98,
+0x24, 0x6A, 0x3B, 0xF7, 0x50, 0x9A, 0x60, 0x98,
 0x6C, 0xEA, 0x11, 0x22, 0x03, 0xF5, 0x40, 0x41,
 0x04, 0xD2, 0x0B, 0x92, 0x10, 0xF0, 0x24, 0x6C,
-0x10, 0xF0, 0x24, 0x6D, 0xFE, 0xF1, 0x00, 0x4C,
-0x1C, 0xF0, 0x08, 0x4D, 0x00, 0x6E, 0xF1, 0x67,
+0x10, 0xF0, 0x24, 0x6D, 0xBD, 0xF5, 0x00, 0x4C,
+0xFB, 0xF3, 0x04, 0x4D, 0x00, 0x6E, 0xF1, 0x67,
 0x05, 0xD2, 0x80, 0x18, 0x35, 0x19, 0x01, 0x6A,
 0x09, 0x97, 0x08, 0x91, 0x07, 0x90, 0x05, 0x63,
 0x00, 0xEF, 0x00, 0x65, 0xFA, 0x63, 0x0B, 0x62,
 0x0A, 0xD1, 0x09, 0xD0, 0xFF, 0x69, 0x2C, 0xEE,
 0x0C, 0xD4, 0x45, 0x67, 0x06, 0xD6, 0x02, 0x2D,
 0x54, 0x5E, 0x15, 0x61, 0x0C, 0x95, 0x10, 0xF0,
-0x24, 0x6B, 0x7C, 0xF3, 0x70, 0x9B, 0x80, 0x9D,
+0x24, 0x6B, 0x3B, 0xF7, 0x70, 0x9B, 0x80, 0x9D,
 0xFF, 0x69, 0x8C, 0xEB, 0x54, 0x23, 0x10, 0xF0,
-0x24, 0x6C, 0x10, 0xF0, 0x24, 0x6D, 0xDE, 0xF1,
-0x00, 0x4C, 0xFB, 0xF7, 0x08, 0x4D, 0xC2, 0x67,
+0x24, 0x6C, 0x10, 0xF0, 0x24, 0x6D, 0x9D, 0xF5,
+0x00, 0x4C, 0xDB, 0xF3, 0x04, 0x4D, 0xC2, 0x67,
 0x80, 0x18, 0x35, 0x19, 0x48, 0x10, 0x10, 0xF0,
-0x24, 0x6B, 0x30, 0xF0, 0x20, 0x68, 0x5C, 0xF3,
-0x10, 0x4B, 0xA0, 0x9B, 0xCE, 0xF4, 0x50, 0x98,
+0x24, 0x6B, 0x30, 0xF0, 0x20, 0x68, 0x5B, 0xF7,
+0x00, 0x4B, 0xA0, 0x9B, 0xCE, 0xF4, 0x50, 0x98,
 0x83, 0xF1, 0x18, 0x6C, 0x00, 0x6E, 0x40, 0xEA,
 0xCE, 0xF4, 0x50, 0x98, 0x06, 0x96, 0x83, 0xF1,
 0x18, 0x6C, 0xFF, 0x6D, 0x40, 0xEA, 0x10, 0xF0,
-0x24, 0x6B, 0x5C, 0xF3, 0x10, 0x4B, 0xA0, 0x9B,
+0x24, 0x6B, 0x5B, 0xF7, 0x00, 0x4B, 0xA0, 0x9B,
 0xCE, 0xF4, 0x50, 0x98, 0x01, 0x6E, 0x83, 0xF1,
 0x18, 0x6C, 0x40, 0xEA, 0x10, 0xF0, 0x24, 0x6A,
-0x1C, 0xF6, 0xBC, 0x9A, 0x21, 0xF5, 0x10, 0x6C,
-0x00, 0x18, 0x42, 0xE7, 0x10, 0xF0, 0x24, 0x6B,
-0x5C, 0xF3, 0x10, 0x4B, 0xA0, 0x9B, 0x4C, 0xE9,
+0xFC, 0xF1, 0xB8, 0x9A, 0x21, 0xF5, 0x10, 0x6C,
+0x00, 0x18, 0xE4, 0xE6, 0x10, 0xF0, 0x24, 0x6B,
+0x5B, 0xF7, 0x00, 0x4B, 0xA0, 0x9B, 0x4C, 0xE9,
 0xCE, 0xF4, 0x50, 0x98, 0x83, 0xF1, 0x18, 0x6C,
 0x00, 0x6E, 0x40, 0xEA, 0x0C, 0x94, 0x10, 0xF0,
-0x24, 0x6A, 0x7C, 0xF3, 0x50, 0x9A, 0x60, 0x9C,
+0x24, 0x6A, 0x3B, 0xF7, 0x50, 0x9A, 0x60, 0x9C,
 0x6C, 0xEA, 0x0D, 0x22, 0x06, 0x97, 0x10, 0xF0,
-0x24, 0x6C, 0x10, 0xF0, 0x24, 0x6D, 0x1E, 0xF2,
-0x10, 0x4C, 0xFB, 0xF7, 0x08, 0x4D, 0x00, 0x6E,
+0x24, 0x6C, 0x10, 0xF0, 0x24, 0x6D, 0xDD, 0xF5,
+0x10, 0x4C, 0xDB, 0xF3, 0x04, 0x4D, 0x00, 0x6E,
 0x04, 0xD1, 0x80, 0x18, 0x35, 0x19, 0x51, 0x67,
 0x0B, 0x97, 0x0A, 0x91, 0x09, 0x90, 0x06, 0x63,
 0x00, 0xEF, 0x00, 0x65, 0xF9, 0x63, 0x0D, 0x62,
@@ -31351,10 +31190,10 @@ u8 array_mp_8821c_fw_nic[] = {
 0x0E, 0xD4, 0x0F, 0xD5, 0x08, 0xD2, 0x09, 0xD3,
 0x06, 0x2E, 0x54, 0x58, 0x04, 0x60, 0x00, 0x69,
 0x07, 0xD2, 0x06, 0xD1, 0x15, 0x10, 0x0E, 0x94,
-0x10, 0xF0, 0x24, 0x6A, 0x7C, 0xF3, 0x70, 0x9A,
+0x10, 0xF0, 0x24, 0x6A, 0x3B, 0xF7, 0x70, 0x9A,
 0x40, 0x9C, 0x4C, 0xEB, 0x00, 0x6A, 0x4F, 0x23,
 0x10, 0xF0, 0x24, 0x6C, 0x10, 0xF0, 0x24, 0x6D,
-0xDE, 0xF1, 0x00, 0x4C, 0x3C, 0xF0, 0x08, 0x4D,
+0x9D, 0xF5, 0x00, 0x4C, 0x1B, 0xF4, 0x04, 0x4D,
 0x80, 0x18, 0x35, 0x19, 0x00, 0x6A, 0x43, 0x10,
 0x09, 0x93, 0xFF, 0x6A, 0x2C, 0xEA, 0x6E, 0xEA,
 0x06, 0x22, 0x0E, 0x94, 0x07, 0x96, 0x00, 0x6D,
@@ -31366,103 +31205,103 @@ u8 array_mp_8821c_fw_nic[] = {
 0xE3, 0x61, 0x08, 0x94, 0x30, 0xF0, 0x20, 0x6A,
 0xCE, 0xF4, 0x50, 0x9A, 0x06, 0x96, 0x01, 0x6D,
 0x03, 0xF5, 0x00, 0x4C, 0xAB, 0xED, 0x40, 0xEA,
-0x0E, 0x94, 0x10, 0xF0, 0x24, 0x6A, 0x7C, 0xF3,
+0x0E, 0x94, 0x10, 0xF0, 0x24, 0x6A, 0x3B, 0xF7,
 0x70, 0x9A, 0x40, 0x9C, 0x4C, 0xEB, 0x01, 0x6A,
 0x12, 0x23, 0x03, 0xF5, 0x40, 0x40, 0x04, 0xD2,
 0x0F, 0x92, 0x10, 0xF0, 0x24, 0x6C, 0x10, 0xF0,
-0x24, 0x6D, 0xFE, 0xF1, 0x00, 0x4C, 0x3C, 0xF0,
-0x08, 0x4D, 0x00, 0x6E, 0xF0, 0x67, 0x05, 0xD2,
+0x24, 0x6D, 0xBD, 0xF5, 0x00, 0x4C, 0x1B, 0xF4,
+0x04, 0x4D, 0x00, 0x6E, 0xF0, 0x67, 0x05, 0xD2,
 0x80, 0x18, 0x35, 0x19, 0x01, 0x6A, 0x0D, 0x97,
 0x0C, 0x91, 0x0B, 0x90, 0x07, 0x63, 0x00, 0xEF,
 0xFA, 0x63, 0x0B, 0x62, 0x0A, 0xD1, 0x09, 0xD0,
 0x0C, 0xD4, 0x45, 0x67, 0x1A, 0x25, 0x10, 0xF0,
-0x24, 0x6B, 0x7C, 0xF3, 0x70, 0x9B, 0x80, 0x9C,
+0x24, 0x6B, 0x3B, 0xF7, 0x70, 0x9B, 0x80, 0x9C,
 0x8C, 0xEB, 0x04, 0x2B, 0x01, 0x6A, 0x4B, 0xEA,
 0x06, 0xD2, 0x34, 0x10, 0x10, 0xF0, 0x24, 0x6C,
-0x10, 0xF0, 0x24, 0x6D, 0xDE, 0xF1, 0x00, 0x4C,
-0xDC, 0xF0, 0x10, 0x4D, 0xC2, 0x67, 0x80, 0x18,
+0x10, 0xF0, 0x24, 0x6D, 0x9D, 0xF5, 0x00, 0x4C,
+0xBB, 0xF4, 0x0C, 0x4D, 0xC2, 0x67, 0x80, 0x18,
 0x35, 0x19, 0x01, 0x6C, 0x8B, 0xEC, 0x06, 0xD4,
-0x25, 0x10, 0x10, 0xF0, 0x24, 0x6A, 0xDC, 0xF4,
-0x14, 0x9A, 0xFF, 0x69, 0xCC, 0xE9, 0xEC, 0xE8,
+0x25, 0x10, 0x10, 0xF0, 0x24, 0x6A, 0xBC, 0xF0,
+0x10, 0x9A, 0xFF, 0x69, 0xCC, 0xE9, 0xEC, 0xE8,
 0x28, 0x34, 0xB0, 0x67, 0x05, 0xF0, 0x00, 0x4C,
-0x00, 0x18, 0x42, 0xE7, 0x0C, 0x95, 0x06, 0xD2,
-0x10, 0xF0, 0x24, 0x6A, 0x7C, 0xF3, 0x50, 0x9A,
+0x00, 0x18, 0xE4, 0xE6, 0x0C, 0x95, 0x06, 0xD2,
+0x10, 0xF0, 0x24, 0x6A, 0x3B, 0xF7, 0x50, 0x9A,
 0x60, 0x9D, 0x6C, 0xEA, 0x0F, 0x22, 0x06, 0x92,
 0x10, 0xF0, 0x24, 0x6C, 0x10, 0xF0, 0x24, 0x6D,
-0x3E, 0xF2, 0x18, 0x4C, 0xDC, 0xF0, 0x10, 0x4D,
+0xFD, 0xF5, 0x18, 0x4C, 0xBB, 0xF4, 0x0C, 0x4D,
 0x00, 0x6E, 0xF1, 0x67, 0x04, 0xD2, 0x05, 0xD0,
 0x80, 0x18, 0x35, 0x19, 0x06, 0x92, 0x0B, 0x97,
 0x0A, 0x91, 0x09, 0x90, 0x06, 0x63, 0x00, 0xEF,
 0xF9, 0x63, 0x0D, 0x62, 0x0C, 0xD1, 0x0B, 0xD0,
 0x0E, 0xD4, 0x45, 0x67, 0x12, 0x91, 0x13, 0x25,
-0x10, 0xF0, 0x24, 0x6B, 0x7C, 0xF3, 0x70, 0x9B,
+0x10, 0xF0, 0x24, 0x6B, 0x3B, 0xF7, 0x70, 0x9B,
 0x80, 0x9C, 0x8C, 0xEB, 0x7F, 0x23, 0x10, 0xF0,
-0x24, 0x6C, 0x10, 0xF0, 0x24, 0x6D, 0xDE, 0xF1,
-0x00, 0x4C, 0xBC, 0xF0, 0x10, 0x4D, 0xC2, 0x67,
+0x24, 0x6C, 0x10, 0xF0, 0x24, 0x6D, 0x9D, 0xF5,
+0x00, 0x4C, 0x9B, 0xF4, 0x0C, 0x4D, 0xC2, 0x67,
 0x80, 0x18, 0x35, 0x19, 0x73, 0x10, 0x10, 0xF0,
-0x24, 0x6A, 0xDC, 0xF4, 0x54, 0x9A, 0xFF, 0x68,
+0x24, 0x6A, 0xBC, 0xF0, 0x50, 0x9A, 0xFF, 0x68,
 0x00, 0x6B, 0x4C, 0xEF, 0x4A, 0xEF, 0xCC, 0xE8,
 0x08, 0xD7, 0x09, 0xD3, 0x30, 0x60, 0x0E, 0x94,
 0xA3, 0x67, 0xD0, 0x67, 0xE2, 0x67, 0x80, 0x18,
 0x72, 0x27, 0x09, 0xD2, 0x01, 0x4A, 0x13, 0x2A,
-0x0E, 0x94, 0x10, 0xF0, 0x24, 0x6A, 0x7C, 0xF3,
+0x0E, 0x94, 0x10, 0xF0, 0x24, 0x6A, 0x3B, 0xF7,
 0x50, 0x9A, 0x60, 0x9C, 0x6C, 0xEA, 0x56, 0x22,
 0x10, 0xF0, 0x24, 0x6C, 0x10, 0xF0, 0x24, 0x6D,
-0x7E, 0xF2, 0x04, 0x4C, 0xBC, 0xF0, 0x10, 0x4D,
+0x3D, 0xF6, 0x04, 0x4C, 0x9B, 0xF4, 0x0C, 0x4D,
 0x80, 0x18, 0x35, 0x19, 0x4B, 0x10, 0x00, 0x6B,
 0x43, 0x67, 0x08, 0x94, 0x01, 0x6D, 0x86, 0xEB,
 0xAC, 0xEC, 0x07, 0x2C, 0x01, 0x4A, 0xFF, 0x6C,
 0x8C, 0xEA, 0x14, 0x72, 0x01, 0x4B, 0xF5, 0x61,
 0x14, 0x6A, 0x08, 0x95, 0x09, 0x93, 0x24, 0xEA,
 0xAF, 0xEA, 0x6C, 0xEA, 0x4D, 0xE9, 0x10, 0xF0,
-0x24, 0x6A, 0xDC, 0xF4, 0x54, 0x9A, 0x00, 0xF5,
+0x24, 0x6A, 0xBC, 0xF0, 0x50, 0x9A, 0x00, 0xF5,
 0x00, 0x33, 0x01, 0x6D, 0x2C, 0xEA, 0x6D, 0xEA,
 0x30, 0xF0, 0x20, 0x6B, 0xCE, 0xF4, 0xF0, 0x9B,
-0x10, 0xF0, 0x24, 0x6B, 0x3C, 0xF6, 0xD4, 0x9B,
+0x10, 0xF0, 0x24, 0x6B, 0x1C, 0xF2, 0xD0, 0x9B,
 0x81, 0xF4, 0x10, 0x6C, 0xAB, 0xED, 0x4C, 0xEE,
 0x40, 0xEF, 0x0E, 0x94, 0x10, 0xF0, 0x24, 0x6A,
-0x7C, 0xF3, 0x50, 0x9A, 0x60, 0x9C, 0x6C, 0xEA,
+0x3B, 0xF7, 0x50, 0x9A, 0x60, 0x9C, 0x6C, 0xEA,
 0x11, 0x22, 0x09, 0x95, 0x08, 0x92, 0x10, 0xF0,
 0x24, 0x6C, 0x05, 0xD5, 0x10, 0xF0, 0x24, 0x6D,
-0x9E, 0xF2, 0x08, 0x4C, 0xBC, 0xF0, 0x10, 0x4D,
+0x5D, 0xF6, 0x08, 0x4C, 0x9B, 0xF4, 0x0C, 0x4D,
 0x00, 0x6E, 0xF0, 0x67, 0x04, 0xD1, 0x06, 0xD2,
 0x80, 0x18, 0x35, 0x19, 0x30, 0xF0, 0x20, 0x6A,
 0xCE, 0xF4, 0x5C, 0x9A, 0x0D, 0x6C, 0x40, 0xEA,
 0x01, 0x6A, 0x01, 0x10, 0x00, 0x6A, 0x0D, 0x97,
 0x0C, 0x91, 0x0B, 0x90, 0x07, 0x63, 0x00, 0xEF,
 0xF9, 0x63, 0x0D, 0x62, 0x0C, 0xD1, 0x0B, 0xD0,
-0x10, 0xF0, 0x24, 0x6A, 0x7C, 0xF3, 0x50, 0x9A,
+0x10, 0xF0, 0x24, 0x6A, 0x3B, 0xF7, 0x50, 0x9A,
 0x60, 0x9C, 0xFF, 0x68, 0x24, 0x67, 0x6C, 0xEA,
 0xAC, 0xE8, 0x0A, 0x22, 0x10, 0xF0, 0x24, 0x6C,
-0x10, 0xF0, 0x24, 0x6D, 0xDE, 0xF2, 0x04, 0x4C,
-0x7C, 0xF0, 0x0C, 0x4D, 0x80, 0x18, 0x35, 0x19,
+0x10, 0xF0, 0x24, 0x6D, 0x9D, 0xF6, 0x04, 0x4C,
+0x5B, 0xF4, 0x08, 0x4D, 0x80, 0x18, 0x35, 0x19,
 0x4B, 0xA1, 0x13, 0x22, 0x10, 0xF0, 0x24, 0x6A,
-0x7C, 0xF3, 0x50, 0x9A, 0x60, 0x99, 0x6C, 0xEA,
+0x3B, 0xF7, 0x50, 0x9A, 0x60, 0x99, 0x6C, 0xEA,
 0xC0, 0xF1, 0x1A, 0x22, 0x10, 0xF0, 0x24, 0x6C,
-0x10, 0xF0, 0x24, 0x6D, 0x9E, 0xF1, 0x1C, 0x4C,
-0x7C, 0xF0, 0x0C, 0x4D, 0x80, 0x18, 0x35, 0x19,
-0xCF, 0x11, 0x30, 0xF0, 0x21, 0x6A, 0xD0, 0xF4,
-0x00, 0xC2, 0x10, 0xF0, 0x24, 0x6A, 0xDC, 0xF4,
-0xF4, 0x9A, 0x91, 0x67, 0x00, 0x6D, 0x18, 0x6E,
+0x10, 0xF0, 0x24, 0x6D, 0x5D, 0xF5, 0x1C, 0x4C,
+0x5B, 0xF4, 0x08, 0x4D, 0x80, 0x18, 0x35, 0x19,
+0xCF, 0x11, 0x30, 0xF0, 0x21, 0x6A, 0xB0, 0xF4,
+0x1C, 0xC2, 0x10, 0xF0, 0x24, 0x6A, 0xBC, 0xF0,
+0xF0, 0x9A, 0x91, 0x67, 0x00, 0x6D, 0x18, 0x6E,
 0x80, 0x18, 0x72, 0x27, 0x09, 0xD2, 0x09, 0x93,
 0x00, 0x6A, 0x01, 0x4B, 0x01, 0x23, 0x01, 0x6A,
 0x01, 0x6B, 0x4C, 0xEB, 0x07, 0xD3, 0x60, 0xF2,
 0x50, 0xA1, 0x00, 0x6B, 0x08, 0xD3, 0x12, 0x2A,
-0x10, 0xF0, 0x24, 0x6A, 0xDC, 0xF4, 0xF4, 0x9A,
+0x10, 0xF0, 0x24, 0x6A, 0xBC, 0xF0, 0xF0, 0x9A,
 0xA3, 0x67, 0x91, 0x67, 0xB8, 0x6E, 0x80, 0x18,
 0x72, 0x27, 0x08, 0xD2, 0x08, 0x93, 0x00, 0x6A,
 0x01, 0x4B, 0x01, 0x23, 0x01, 0x6A, 0x07, 0x93,
 0x4C, 0xEB, 0x07, 0xD3, 0x0F, 0x58, 0x71, 0x60,
-0x10, 0xF0, 0x24, 0x6A, 0x3C, 0xF6, 0x58, 0x9A,
+0x10, 0xF0, 0x24, 0x6A, 0x1C, 0xF2, 0x54, 0x9A,
 0x09, 0x93, 0x01, 0xF4, 0x1C, 0x6C, 0x01, 0xF7,
 0x00, 0x6D, 0x4C, 0xEB, 0x0D, 0xEB, 0x06, 0xD3,
 0x30, 0xF0, 0x20, 0x6B, 0xCE, 0xF4, 0x50, 0x9B,
 0x00, 0x6E, 0x40, 0xEA, 0x30, 0xF0, 0x20, 0x6B,
 0xCE, 0xF4, 0x50, 0x9B, 0x10, 0xF0, 0x24, 0x6B,
-0x3C, 0xF6, 0xBC, 0x9B, 0x61, 0xF0, 0x00, 0x6C,
+0x1C, 0xF2, 0xB8, 0x9B, 0x61, 0xF0, 0x00, 0x6C,
 0x61, 0xF1, 0x0A, 0x6E, 0x40, 0xEA, 0x60, 0xF2,
 0x50, 0xA1, 0x07, 0x2A, 0x10, 0xF0, 0x24, 0x6A,
-0x08, 0x93, 0x5C, 0xF3, 0x5C, 0x9A, 0x4D, 0xEB,
+0x08, 0x93, 0x5B, 0xF7, 0x4C, 0x9A, 0x4D, 0xEB,
 0x08, 0xD3, 0x0E, 0x70, 0x20, 0x61, 0x30, 0xF0,
 0x20, 0x6B, 0xCE, 0xF4, 0x50, 0x9B, 0x01, 0x6D,
 0x21, 0xF2, 0x04, 0x6C, 0xAB, 0xED, 0x17, 0xF0,
@@ -31473,27 +31312,27 @@ u8 array_mp_8821c_fw_nic[] = {
 0x50, 0x9B, 0xA1, 0xF2, 0x0C, 0x6C, 0xAB, 0xED,
 0x66, 0xF6, 0x07, 0x6E, 0x24, 0x10, 0x30, 0xF0,
 0x20, 0x6A, 0xCE, 0xF4, 0x70, 0x9A, 0x10, 0xF0,
-0x24, 0x6A, 0x5C, 0xF6, 0xC0, 0x9A, 0x01, 0x6D,
+0x24, 0x6A, 0x1C, 0xF2, 0xDC, 0x9A, 0x01, 0x6D,
 0x21, 0xF2, 0x04, 0x6C, 0xAB, 0xED, 0x40, 0xEB,
 0x30, 0xF0, 0x20, 0x6B, 0xCE, 0xF4, 0x50, 0x9B,
 0x21, 0xF2, 0x08, 0x6C, 0xFF, 0xF7, 0x1F, 0x6D,
 0x11, 0xF0, 0x10, 0x6E, 0x40, 0xEA, 0x30, 0xF0,
 0x20, 0x6B, 0xCE, 0xF4, 0x50, 0x9B, 0x10, 0xF0,
-0x24, 0x6B, 0x5C, 0xF6, 0xC4, 0x9B, 0x01, 0x6D,
+0x24, 0x6B, 0x3C, 0xF2, 0xC0, 0x9B, 0x01, 0x6D,
 0xA1, 0xF2, 0x0C, 0x6C, 0xAB, 0xED, 0x40, 0xEA,
 0xE5, 0x10, 0x24, 0x58, 0xC0, 0xF0, 0x16, 0x61,
-0x10, 0xF0, 0x24, 0x6A, 0x3C, 0xF6, 0x58, 0x9A,
+0x10, 0xF0, 0x24, 0x6A, 0x1C, 0xF2, 0x54, 0x9A,
 0x09, 0x93, 0x4C, 0xEB, 0x0D, 0xEB, 0x06, 0xD3,
 0x68, 0x40, 0xE4, 0x4B, 0xFF, 0x6A, 0x4C, 0xEB,
 0x1D, 0x5B, 0x21, 0x61, 0x68, 0x40, 0xA4, 0x4B,
 0x4C, 0xEB, 0x29, 0x5B, 0x05, 0x60, 0x10, 0xF0,
-0x24, 0x6A, 0x5C, 0xF3, 0x54, 0x9A, 0x06, 0x10,
+0x24, 0x6A, 0x5B, 0xF7, 0x44, 0x9A, 0x06, 0x10,
 0x8D, 0x58, 0x08, 0x61, 0x10, 0xF0, 0x24, 0x6A,
-0x5C, 0xF3, 0x58, 0x9A, 0x06, 0x93, 0x4D, 0xEB,
+0x5B, 0xF7, 0x48, 0x9A, 0x06, 0x93, 0x4D, 0xEB,
 0x06, 0xD3, 0x0D, 0x10, 0x10, 0xF0, 0x24, 0x6A,
-0x7C, 0xF3, 0x50, 0x9A, 0x60, 0x99, 0x6C, 0xEA,
+0x3B, 0xF7, 0x50, 0x9A, 0x60, 0x99, 0x6C, 0xEA,
 0x00, 0xF1, 0x04, 0x22, 0x10, 0xF0, 0x24, 0x6C,
-0xFE, 0xF2, 0x00, 0x4C, 0xE3, 0x10, 0x68, 0x40,
+0xBD, 0xF6, 0x00, 0x4C, 0xE3, 0x10, 0x68, 0x40,
 0xE4, 0x4B, 0xFF, 0x6A, 0x4C, 0xEB, 0x1D, 0x5B,
 0x0A, 0x60, 0x30, 0xF0, 0x20, 0x6A, 0xCE, 0xF4,
 0x50, 0x9A, 0x01, 0xF4, 0x1C, 0x6C, 0x01, 0xF7,
@@ -31506,155 +31345,155 @@ u8 array_mp_8821c_fw_nic[] = {
 0x01, 0xF4, 0x1C, 0x6C, 0x01, 0xF7, 0x00, 0x6D,
 0x03, 0x6E, 0x40, 0xEA, 0x68, 0x40, 0xE4, 0x4B,
 0xFF, 0x6A, 0x4C, 0xEB, 0x0D, 0x5B, 0x1B, 0x60,
-0x0D, 0x10, 0x10, 0xF0, 0x24, 0x6A, 0x7C, 0xF3,
+0x0D, 0x10, 0x10, 0xF0, 0x24, 0x6A, 0x3B, 0xF7,
 0x50, 0x9A, 0x60, 0x99, 0x6C, 0xEA, 0xC0, 0xF0,
-0x05, 0x22, 0x10, 0xF0, 0x24, 0x6C, 0x1E, 0xF3,
+0x05, 0x22, 0x10, 0xF0, 0x24, 0x6C, 0xDD, 0xF6,
 0x10, 0x4C, 0xA4, 0x10, 0x30, 0xF0, 0x20, 0x6A,
 0x10, 0xF0, 0x24, 0x6B, 0xCE, 0xF4, 0x50, 0x9A,
-0x61, 0xF0, 0x00, 0x6C, 0x3C, 0xF6, 0xBC, 0x9B,
+0x61, 0xF0, 0x00, 0x6C, 0x1C, 0xF2, 0xB8, 0x9B,
 0x80, 0xF4, 0x14, 0x6E, 0x35, 0x10, 0x68, 0x40,
 0xD4, 0x4B, 0x4C, 0xEB, 0x0D, 0x5B, 0x0D, 0x60,
 0x30, 0xF0, 0x20, 0x6A, 0x10, 0xF0, 0x24, 0x6B,
 0xCE, 0xF4, 0x50, 0x9A, 0x61, 0xF0, 0x00, 0x6C,
-0x3C, 0xF6, 0xBC, 0x9B, 0x40, 0xF4, 0x13, 0x6E,
+0x1C, 0xF2, 0xB8, 0x9B, 0x40, 0xF4, 0x13, 0x6E,
 0x23, 0x10, 0x68, 0x40, 0xA4, 0x4B, 0x4C, 0xEB,
 0x11, 0x5B, 0x0D, 0x60, 0x30, 0xF0, 0x20, 0x6A,
 0x10, 0xF0, 0x24, 0x6B, 0xCE, 0xF4, 0x50, 0x9A,
-0x61, 0xF0, 0x00, 0x6C, 0x3C, 0xF6, 0xBC, 0x9B,
+0x61, 0xF0, 0x00, 0x6C, 0x1C, 0xF2, 0xB8, 0x9B,
 0x40, 0xF4, 0x12, 0x6E, 0x11, 0x10, 0x68, 0x40,
 0x92, 0x4B, 0x4C, 0xEB, 0x3C, 0x5B, 0x11, 0x60,
 0x30, 0xF0, 0x20, 0x6A, 0x10, 0xF0, 0x24, 0x6B,
-0xCE, 0xF4, 0x50, 0x9A, 0x3C, 0xF6, 0xBC, 0x9B,
+0xCE, 0xF4, 0x50, 0x9A, 0x1C, 0xF2, 0xB8, 0x9B,
 0x61, 0xF0, 0x00, 0x6C, 0x00, 0xF4, 0x12, 0x6E,
 0x40, 0xEA, 0x60, 0xF2, 0x50, 0xA1, 0x2E, 0x2A,
-0x0C, 0x10, 0x10, 0xF0, 0x24, 0x6A, 0x7C, 0xF3,
+0x0C, 0x10, 0x10, 0xF0, 0x24, 0x6A, 0x3B, 0xF7,
 0x50, 0x9A, 0x60, 0x99, 0x6C, 0xEA, 0x72, 0x22,
-0x10, 0xF0, 0x24, 0x6C, 0x5E, 0xF3, 0x00, 0x4C,
+0x10, 0xF0, 0x24, 0x6C, 0x1D, 0xF7, 0x00, 0x4C,
 0x51, 0x10, 0x48, 0x40, 0xCF, 0x4A, 0xFF, 0x6B,
 0x6C, 0xEA, 0x13, 0x5A, 0x07, 0x60, 0x10, 0xF0,
-0x24, 0x6A, 0x5C, 0xF6, 0x48, 0x9A, 0x08, 0x93,
+0x24, 0x6A, 0x3C, 0xF2, 0x44, 0x9A, 0x08, 0x93,
 0x4C, 0xEB, 0x06, 0x10, 0x10, 0xF0, 0x24, 0x6A,
-0x5C, 0xF3, 0x5C, 0x9A, 0x08, 0x93, 0x4D, 0xEB,
+0x5B, 0xF7, 0x4C, 0x9A, 0x08, 0x93, 0x4D, 0xEB,
 0x08, 0xD3, 0x0C, 0x10, 0x10, 0xF0, 0x24, 0x6A,
-0x7C, 0xF3, 0x50, 0x9A, 0x60, 0x99, 0x6C, 0xEA,
-0x51, 0x22, 0x10, 0xF0, 0x24, 0x6C, 0x7E, 0xF3,
+0x3B, 0xF7, 0x50, 0x9A, 0x60, 0x99, 0x6C, 0xEA,
+0x51, 0x22, 0x10, 0xF0, 0x24, 0x6C, 0x3D, 0xF7,
 0x14, 0x4C, 0x30, 0x10, 0x10, 0xF0, 0x24, 0x6B,
-0xDC, 0xF4, 0x14, 0x4B, 0x06, 0x92, 0xE0, 0x9B,
+0xBC, 0xF0, 0x10, 0x4B, 0x06, 0x92, 0xE0, 0x9B,
 0x91, 0x67, 0x00, 0x6D, 0x18, 0x6E, 0x04, 0xD2,
 0x80, 0x18, 0x98, 0x27, 0x07, 0x93, 0x4C, 0xEB,
 0x07, 0xD3, 0x60, 0xF2, 0x50, 0xA1, 0x11, 0x2A,
-0x10, 0xF0, 0x24, 0x6B, 0xDC, 0xF4, 0x14, 0x4B,
+0x10, 0xF0, 0x24, 0x6B, 0xBC, 0xF0, 0x10, 0x4B,
 0x08, 0x92, 0xE0, 0x9B, 0x91, 0x67, 0x00, 0x6D,
 0xB8, 0x6E, 0x04, 0xD2, 0x80, 0x18, 0x98, 0x27,
 0x07, 0x93, 0x4C, 0xEB, 0xFF, 0x6A, 0x4C, 0xEB,
 0x07, 0xD3, 0x07, 0x92, 0x13, 0x2A, 0x10, 0xF0,
-0x24, 0x6A, 0x7C, 0xF3, 0x50, 0x9A, 0x60, 0x99,
+0x24, 0x6A, 0x3B, 0xF7, 0x50, 0x9A, 0x60, 0x99,
 0x6C, 0xEA, 0x20, 0x22, 0x10, 0xF0, 0x24, 0x6C,
-0x9E, 0xF3, 0x18, 0x4C, 0x10, 0xF0, 0x24, 0x6D,
-0x7C, 0xF0, 0x0C, 0x4D, 0xD0, 0x67, 0x80, 0x18,
+0x5D, 0xF7, 0x18, 0x4C, 0x10, 0xF0, 0x24, 0x6D,
+0x5B, 0xF4, 0x08, 0x4D, 0xD0, 0x67, 0x80, 0x18,
 0x35, 0x19, 0x14, 0x10, 0x10, 0xF0, 0x24, 0x6A,
-0x7C, 0xF3, 0x50, 0x9A, 0x60, 0x99, 0x6C, 0xEA,
+0x3B, 0xF7, 0x50, 0x9A, 0x60, 0x99, 0x6C, 0xEA,
 0x0B, 0x22, 0x10, 0xF0, 0x24, 0x6C, 0x10, 0xF0,
-0x24, 0x6D, 0xFE, 0xF3, 0x04, 0x4C, 0x7C, 0xF0,
-0x0C, 0x4D, 0xD0, 0x67, 0x80, 0x18, 0x35, 0x19,
+0x24, 0x6D, 0xBD, 0xF7, 0x04, 0x4C, 0x5B, 0xF4,
+0x08, 0x4D, 0xD0, 0x67, 0x80, 0x18, 0x35, 0x19,
 0x01, 0x6A, 0x01, 0x10, 0x00, 0x6A, 0x0D, 0x97,
 0x0C, 0x91, 0x0B, 0x90, 0x07, 0x63, 0x00, 0xEF,
 0xFA, 0x63, 0x0B, 0x62, 0x0A, 0xD1, 0x09, 0xD0,
 0xFF, 0x6A, 0xAC, 0xEA, 0x06, 0xD2, 0x10, 0xF0,
-0x24, 0x6A, 0x7C, 0xF3, 0x50, 0x9A, 0x60, 0x9C,
+0x24, 0x6A, 0x3B, 0xF7, 0x50, 0x9A, 0x60, 0x9C,
 0x04, 0x67, 0x6C, 0xEA, 0x0A, 0x22, 0x10, 0xF0,
-0x24, 0x6C, 0x10, 0xF0, 0x24, 0x6D, 0x1E, 0xF4,
-0x10, 0x4C, 0x9C, 0xF0, 0x10, 0x4D, 0x80, 0x18,
+0x24, 0x6C, 0x10, 0xF0, 0x24, 0x6D, 0xDD, 0xF7,
+0x10, 0x4C, 0x7B, 0xF4, 0x0C, 0x4D, 0x80, 0x18,
 0x35, 0x19, 0x4B, 0xA0, 0x13, 0x22, 0x10, 0xF0,
-0x24, 0x6A, 0x7C, 0xF3, 0x50, 0x9A, 0x60, 0x98,
+0x24, 0x6A, 0x3B, 0xF7, 0x50, 0x9A, 0x60, 0x98,
 0x6C, 0xEA, 0xC0, 0xF0, 0x13, 0x22, 0x10, 0xF0,
-0x24, 0x6C, 0x10, 0xF0, 0x24, 0x6D, 0x9E, 0xF1,
-0x1C, 0x4C, 0x9C, 0xF0, 0x10, 0x4D, 0x80, 0x18,
+0x24, 0x6C, 0x10, 0xF0, 0x24, 0x6D, 0x5D, 0xF5,
+0x1C, 0x4C, 0x7B, 0xF4, 0x0C, 0x4D, 0x80, 0x18,
 0x35, 0x19, 0xC8, 0x10, 0x10, 0xF0, 0x24, 0x6A,
-0xDC, 0xF4, 0xF4, 0x9A, 0x90, 0x67, 0x00, 0x6D,
+0xBC, 0xF0, 0xF0, 0x9A, 0x90, 0x67, 0x00, 0x6D,
 0x18, 0x6E, 0x80, 0x18, 0x72, 0x27, 0x07, 0xD2,
 0x06, 0x92, 0x0F, 0x5A, 0x48, 0x60, 0x30, 0xF0,
-0x20, 0x69, 0x10, 0xF0, 0x24, 0x6B, 0x1C, 0xF3,
-0xAC, 0x9B, 0xCE, 0xF4, 0x50, 0x99, 0x01, 0xF0,
+0x20, 0x69, 0x10, 0xF0, 0x24, 0x6B, 0xFB, 0xF6,
+0xA8, 0x9B, 0xCE, 0xF4, 0x50, 0x99, 0x01, 0xF0,
 0x08, 0x6C, 0x01, 0x6E, 0x40, 0xEA, 0xCE, 0xF4,
 0x50, 0x99, 0x40, 0xF4, 0x14, 0x6C, 0x80, 0x6D,
 0x00, 0x6E, 0x40, 0xEA, 0x10, 0xF0, 0x24, 0x6B,
-0xCE, 0xF4, 0x50, 0x99, 0x5C, 0xF3, 0xB8, 0x9B,
+0xCE, 0xF4, 0x50, 0x99, 0x5B, 0xF7, 0xA8, 0x9B,
 0x81, 0xF2, 0x00, 0x6C, 0x00, 0x6E, 0x40, 0xEA,
 0xCE, 0xF4, 0x50, 0x99, 0x01, 0xF0, 0x14, 0x6C,
 0x1F, 0xF4, 0x00, 0x6D, 0x0F, 0x6E, 0x40, 0xEA,
-0x10, 0xF0, 0x24, 0x6A, 0x5C, 0xF6, 0x2C, 0x9A,
+0x10, 0xF0, 0x24, 0x6A, 0x3C, 0xF2, 0x28, 0x9A,
 0x07, 0x92, 0x4C, 0xE9, 0x30, 0xF0, 0x21, 0x6A,
-0x70, 0xF3, 0x4D, 0xA2, 0x03, 0x22, 0x90, 0x67,
+0x70, 0xF3, 0x49, 0xA2, 0x03, 0x22, 0x90, 0x67,
 0x00, 0x6D, 0x02, 0x10, 0x90, 0x67, 0x01, 0x6D,
 0x00, 0x18, 0x86, 0xC5, 0x10, 0xF0, 0x24, 0x6A,
-0xDC, 0xF4, 0xF4, 0x9A, 0x90, 0x67, 0x00, 0x6D,
+0xBC, 0xF0, 0xF0, 0x9A, 0x90, 0x67, 0x00, 0x6D,
 0x18, 0x6E, 0x04, 0xD1, 0x80, 0x18, 0x98, 0x27,
 0x06, 0x95, 0x90, 0x67, 0x22, 0x67, 0x80, 0x18,
 0x8F, 0x26, 0x43, 0x2A, 0x71, 0x10, 0x06, 0x92,
 0x24, 0x5A, 0x33, 0x61, 0x30, 0xF0, 0x20, 0x69,
-0x10, 0xF0, 0x24, 0x6B, 0x5C, 0xF3, 0xB8, 0x9B,
+0x10, 0xF0, 0x24, 0x6B, 0x5B, 0xF7, 0xA8, 0x9B,
 0xCE, 0xF4, 0x50, 0x99, 0x81, 0xF2, 0x00, 0x6C,
 0x01, 0x6E, 0x40, 0xEA, 0xCE, 0xF4, 0x50, 0x99,
 0x40, 0xF4, 0x14, 0x6C, 0x80, 0x6D, 0x01, 0x6E,
 0x40, 0xEA, 0x10, 0xF0, 0x24, 0x6B, 0xCE, 0xF4,
-0x50, 0x99, 0x1C, 0xF3, 0xAC, 0x9B, 0x01, 0xF0,
+0x50, 0x99, 0xFB, 0xF6, 0xA8, 0x9B, 0x01, 0xF0,
 0x08, 0x6C, 0x00, 0x6E, 0x40, 0xEA, 0xCE, 0xF4,
 0x50, 0x99, 0x01, 0xF0, 0x14, 0x6C, 0x1F, 0xF4,
 0x00, 0x6D, 0x0F, 0x6E, 0x40, 0xEA, 0x10, 0xF0,
-0x24, 0x6A, 0x5C, 0xF6, 0x2C, 0x9A, 0x07, 0x92,
+0x24, 0x6A, 0x3C, 0xF2, 0x28, 0x9A, 0x07, 0x92,
 0x90, 0x67, 0x02, 0x6D, 0x4C, 0xE9, 0x10, 0xF0,
-0x24, 0x6A, 0x5C, 0xF6, 0x50, 0x9A, 0x4D, 0xE9,
-0xB7, 0x17, 0x10, 0xF0, 0x24, 0x6A, 0x7C, 0xF3,
+0x24, 0x6A, 0x3C, 0xF2, 0x4C, 0x9A, 0x4D, 0xE9,
+0xB7, 0x17, 0x10, 0xF0, 0x24, 0x6A, 0x3B, 0xF7,
 0x50, 0x9A, 0x60, 0x98, 0x6C, 0xEA, 0x34, 0x22,
-0x10, 0xF0, 0x24, 0x6C, 0x7E, 0xF3, 0x14, 0x4C,
+0x10, 0xF0, 0x24, 0x6C, 0x3D, 0xF7, 0x14, 0x4C,
 0x14, 0x10, 0x07, 0x92, 0x00, 0x6B, 0x01, 0x4A,
 0x01, 0x22, 0x01, 0x6B, 0xFF, 0x6A, 0x2C, 0xEA,
 0x6C, 0xEA, 0x13, 0x2A, 0x10, 0xF0, 0x24, 0x6A,
-0x7C, 0xF3, 0x50, 0x9A, 0x60, 0x98, 0x6C, 0xEA,
-0x1F, 0x22, 0x10, 0xF0, 0x24, 0x6C, 0x3E, 0xF4,
+0x3B, 0xF7, 0x50, 0x9A, 0x60, 0x98, 0x6C, 0xEA,
+0x1F, 0x22, 0x10, 0xF0, 0x24, 0x6C, 0xFD, 0xF7,
 0x10, 0x4C, 0x06, 0x96, 0x10, 0xF0, 0x24, 0x6D,
-0x9C, 0xF0, 0x10, 0x4D, 0x80, 0x18, 0x35, 0x19,
-0x13, 0x10, 0x10, 0xF0, 0x24, 0x6A, 0x7C, 0xF3,
+0x7B, 0xF4, 0x0C, 0x4D, 0x80, 0x18, 0x35, 0x19,
+0x13, 0x10, 0x10, 0xF0, 0x24, 0x6A, 0x3B, 0xF7,
 0x50, 0x9A, 0x60, 0x98, 0x6C, 0xEA, 0x0E, 0x22,
 0x06, 0x96, 0x10, 0xF0, 0x24, 0x6C, 0x10, 0xF0,
-0x24, 0x6D, 0x7E, 0xF4, 0x1C, 0x4C, 0x9C, 0xF0,
-0x10, 0x4D, 0x80, 0x18, 0x35, 0x19, 0x02, 0x10,
+0x24, 0x6D, 0x3E, 0xF0, 0x1C, 0x4C, 0x7B, 0xF4,
+0x0C, 0x4D, 0x80, 0x18, 0x35, 0x19, 0x02, 0x10,
 0x00, 0x6A, 0x01, 0x10, 0x01, 0x6A, 0x0B, 0x97,
 0x0A, 0x91, 0x09, 0x90, 0x06, 0x63, 0x00, 0xEF,
 0xFA, 0x63, 0x0B, 0x62, 0x0A, 0xD1, 0x09, 0xD0,
 0xFF, 0x6A, 0xAC, 0xEA, 0x06, 0xD2, 0x10, 0xF0,
-0x24, 0x6A, 0x7C, 0xF3, 0x50, 0x9A, 0x60, 0x9C,
+0x24, 0x6A, 0x3B, 0xF7, 0x50, 0x9A, 0x60, 0x9C,
 0x04, 0x67, 0x26, 0x67, 0x6C, 0xEA, 0x0A, 0x22,
 0x10, 0xF0, 0x24, 0x6C, 0x10, 0xF0, 0x24, 0x6D,
-0xBE, 0xF4, 0x04, 0x4C, 0x5C, 0xF0, 0x08, 0x4D,
+0x7E, 0xF0, 0x04, 0x4C, 0x3B, 0xF4, 0x04, 0x4D,
 0x80, 0x18, 0x35, 0x19, 0x4B, 0xA0, 0x13, 0x22,
-0x10, 0xF0, 0x24, 0x6A, 0x7C, 0xF3, 0x50, 0x9A,
+0x10, 0xF0, 0x24, 0x6A, 0x3B, 0xF7, 0x50, 0x9A,
 0x60, 0x98, 0x6C, 0xEA, 0x80, 0xF1, 0x01, 0x22,
 0x10, 0xF0, 0x24, 0x6C, 0x10, 0xF0, 0x24, 0x6D,
-0x9E, 0xF1, 0x1C, 0x4C, 0x5C, 0xF0, 0x08, 0x4D,
+0x5D, 0xF5, 0x1C, 0x4C, 0x3B, 0xF4, 0x04, 0x4D,
 0x80, 0x18, 0x35, 0x19, 0x76, 0x11, 0x06, 0x59,
 0x0A, 0x60, 0x01, 0x71, 0x03, 0x61, 0x06, 0x93,
 0x03, 0x5B, 0x04, 0x10, 0x02, 0x71, 0x10, 0x61,
 0x06, 0x94, 0x05, 0x5C, 0x0D, 0x61, 0x10, 0xF0,
-0x24, 0x6A, 0x7C, 0xF3, 0x50, 0x9A, 0x60, 0x98,
+0x24, 0x6A, 0x3B, 0xF7, 0x50, 0x9A, 0x60, 0x98,
 0x6C, 0xEA, 0x60, 0xF1, 0x04, 0x22, 0x10, 0xF0,
-0x24, 0x6C, 0xDE, 0xF4, 0x00, 0x4C, 0x3D, 0x11,
-0x30, 0xF0, 0x21, 0x6A, 0xB0, 0xF4, 0x3C, 0xDA,
-0x10, 0xF0, 0x24, 0x6A, 0xDC, 0xF4, 0xF4, 0x9A,
+0x24, 0x6C, 0x9E, 0xF0, 0x00, 0x4C, 0x3D, 0x11,
+0x30, 0xF0, 0x21, 0x6A, 0xB0, 0xF4, 0x38, 0xDA,
+0x10, 0xF0, 0x24, 0x6A, 0xBC, 0xF0, 0xF0, 0x9A,
 0x90, 0x67, 0x00, 0x6D, 0x18, 0x6E, 0x80, 0x18,
 0x72, 0x27, 0x06, 0x59, 0x07, 0xD2, 0xE0, 0xF0,
 0x19, 0x60, 0x10, 0xF0, 0x24, 0x6A, 0x28, 0x33,
-0xDB, 0xF7, 0x10, 0x4A, 0x69, 0xE2, 0x40, 0x9A,
+0xBB, 0xF3, 0x0C, 0x4A, 0x69, 0xE2, 0x40, 0x9A,
 0x00, 0xEA, 0x01, 0x6D, 0xA1, 0xF0, 0x0C, 0x6C,
-0xAB, 0xED, 0x00, 0x18, 0x42, 0xE7, 0x10, 0xF0,
-0x24, 0x6B, 0x5C, 0xF6, 0x74, 0x9B, 0x01, 0x6D,
+0xAB, 0xED, 0x00, 0x18, 0xE4, 0xE6, 0x10, 0xF0,
+0x24, 0x6B, 0x3C, 0xF2, 0x70, 0x9B, 0x01, 0x6D,
 0xA1, 0xF0, 0x0C, 0x6C, 0x4C, 0xEB, 0x30, 0xF0,
 0x20, 0x6A, 0xCE, 0xF4, 0xF0, 0x9A, 0x10, 0xF0,
-0x24, 0x6A, 0x5C, 0xF6, 0xD8, 0x9A, 0xAB, 0xED,
+0x24, 0x6A, 0x3C, 0xF2, 0xD4, 0x9A, 0xAB, 0xED,
 0x6D, 0xEE, 0x40, 0xEF, 0x30, 0xF0, 0x20, 0x6B,
 0xCE, 0xF4, 0x50, 0x9B, 0x10, 0xF0, 0x24, 0x6B,
-0x1C, 0xF3, 0xB8, 0x9B, 0xC1, 0xF0, 0x04, 0x6C,
+0xFB, 0xF6, 0xB4, 0x9B, 0xC1, 0xF0, 0x04, 0x6C,
 0x01, 0x6E, 0x40, 0xEA, 0x07, 0x94, 0x01, 0xF4,
 0x00, 0x6A, 0x8D, 0xEA, 0xDC, 0x10, 0x06, 0x92,
 0x01, 0x72, 0x09, 0x61, 0x30, 0xF0, 0x20, 0x6A,
@@ -31663,70 +31502,70 @@ u8 array_mp_8821c_fw_nic[] = {
 0x20, 0x6A, 0xCE, 0xF4, 0x50, 0x9A, 0x01, 0xF2,
 0x00, 0x6C, 0x10, 0x6D, 0x00, 0x6E, 0x40, 0xEA,
 0x01, 0x6D, 0xA1, 0xF0, 0x0C, 0x6C, 0xAB, 0xED,
-0x00, 0x18, 0x42, 0xE7, 0x10, 0xF0, 0x24, 0x6B,
-0x5C, 0xF6, 0x7C, 0x9B, 0x06, 0x94, 0x0F, 0x6E,
-0x4C, 0xEB, 0x10, 0xF0, 0x24, 0x6A, 0x7C, 0xF6,
-0x40, 0x9A, 0x8C, 0xEE, 0xC8, 0x36, 0x30, 0xF0,
+0x00, 0x18, 0xE4, 0xE6, 0x10, 0xF0, 0x24, 0x6B,
+0x3C, 0xF2, 0x78, 0x9B, 0x06, 0x94, 0x0F, 0x6E,
+0x4C, 0xEB, 0x10, 0xF0, 0x24, 0x6A, 0x3C, 0xF2,
+0x5C, 0x9A, 0x8C, 0xEE, 0xC8, 0x36, 0x30, 0xF0,
 0x20, 0x6C, 0x4D, 0xEE, 0xCE, 0xF4, 0x50, 0x9C,
 0x01, 0x6D, 0x6D, 0xEE, 0xA1, 0xF0, 0x0C, 0x6C,
 0xAB, 0xED, 0x40, 0xEA, 0x30, 0xF0, 0x20, 0x6B,
 0xCE, 0xF4, 0x50, 0x9B, 0x10, 0xF0, 0x24, 0x6B,
-0x1C, 0xF3, 0xB8, 0x9B, 0xC1, 0xF0, 0x04, 0x6C,
+0xFB, 0xF6, 0xB4, 0x9B, 0xC1, 0xF0, 0x04, 0x6C,
 0x01, 0x6E, 0x40, 0xEA, 0x07, 0x94, 0x01, 0xF4,
 0x01, 0x6A, 0x4B, 0xEA, 0x8C, 0xEA, 0x01, 0xF0,
 0x00, 0x6B, 0x31, 0x10, 0x01, 0x6D, 0xA1, 0xF0,
-0x0C, 0x6C, 0xAB, 0xED, 0x00, 0x18, 0x42, 0xE7,
-0x10, 0xF0, 0x24, 0x6B, 0x7C, 0xF6, 0x64, 0x9B,
+0x0C, 0x6C, 0xAB, 0xED, 0x00, 0x18, 0xE4, 0xE6,
+0x10, 0xF0, 0x24, 0x6B, 0x5C, 0xF2, 0x60, 0x9B,
 0x0F, 0x6E, 0x30, 0xF0, 0x20, 0x6C, 0x4C, 0xEB,
 0x06, 0x92, 0x01, 0x6D, 0xAB, 0xED, 0x4C, 0xEE,
-0x10, 0xF0, 0x24, 0x6A, 0x7C, 0xF6, 0x48, 0x9A,
+0x10, 0xF0, 0x24, 0x6A, 0x5C, 0xF2, 0x44, 0x9A,
 0xC8, 0x36, 0x4D, 0xEE, 0xCE, 0xF4, 0x50, 0x9C,
 0x6D, 0xEE, 0xA1, 0xF0, 0x0C, 0x6C, 0x40, 0xEA,
 0x30, 0xF0, 0x20, 0x6B, 0xCE, 0xF4, 0x50, 0x9B,
-0x10, 0xF0, 0x24, 0x6B, 0x1C, 0xF3, 0xB8, 0x9B,
+0x10, 0xF0, 0x24, 0x6B, 0xFB, 0xF6, 0xB4, 0x9B,
 0xC1, 0xF0, 0x04, 0x6C, 0x01, 0x6E, 0x40, 0xEA,
 0x07, 0x94, 0x01, 0xF4, 0x01, 0x6A, 0x4B, 0xEA,
 0x8C, 0xEA, 0x00, 0xF4, 0x00, 0x6B, 0x6D, 0xEA,
 0x62, 0x10, 0x01, 0x6D, 0xA1, 0xF0, 0x0C, 0x6C,
-0xAB, 0xED, 0x00, 0x18, 0x42, 0xE7, 0x10, 0xF0,
-0x24, 0x6B, 0x7C, 0xF6, 0x6C, 0x9B, 0x01, 0x6D,
+0xAB, 0xED, 0x00, 0x18, 0xE4, 0xE6, 0x10, 0xF0,
+0x24, 0x6B, 0x5C, 0xF2, 0x68, 0x9B, 0x01, 0x6D,
 0xA1, 0xF0, 0x0C, 0x6C, 0x4C, 0xEB, 0x30, 0xF0,
 0x20, 0x6A, 0xCE, 0xF4, 0xF0, 0x9A, 0x10, 0xF0,
-0x24, 0x6A, 0xAB, 0xED, 0x7C, 0xF6, 0xD0, 0x9A,
+0x24, 0x6A, 0xAB, 0xED, 0x5C, 0xF2, 0xCC, 0x9A,
 0x17, 0x10, 0x01, 0x6D, 0xA1, 0xF0, 0x0C, 0x6C,
-0xAB, 0xED, 0x00, 0x18, 0x42, 0xE7, 0x10, 0xF0,
-0x24, 0x6B, 0x7C, 0xF6, 0x6C, 0x9B, 0x30, 0xF0,
+0xAB, 0xED, 0x00, 0x18, 0xE4, 0xE6, 0x10, 0xF0,
+0x24, 0x6B, 0x5C, 0xF2, 0x68, 0x9B, 0x30, 0xF0,
 0x20, 0x6C, 0x01, 0x6D, 0x4C, 0xEB, 0x10, 0xF0,
-0x24, 0x6A, 0x7C, 0xF6, 0xD4, 0x9A, 0xCE, 0xF4,
+0x24, 0x6A, 0x5C, 0xF2, 0xD0, 0x9A, 0xCE, 0xF4,
 0xF0, 0x9C, 0xAB, 0xED, 0xA1, 0xF0, 0x0C, 0x6C,
 0x6D, 0xEE, 0x40, 0xEF, 0x30, 0xF0, 0x20, 0x6B,
 0xCE, 0xF4, 0x50, 0x9B, 0x10, 0xF0, 0x24, 0x6B,
-0x1C, 0xF3, 0xB8, 0x9B, 0xC1, 0xF0, 0x04, 0x6C,
+0xFB, 0xF6, 0xB4, 0x9B, 0xC1, 0xF0, 0x04, 0x6C,
 0x00, 0x6E, 0x40, 0xEA, 0x10, 0xF0, 0x24, 0x6B,
 0x30, 0xF0, 0x20, 0x6C, 0xCE, 0xF4, 0x50, 0x9C,
-0x5C, 0xF4, 0xB8, 0x9B, 0xC1, 0xF0, 0x08, 0x6C,
+0x3C, 0xF0, 0xB4, 0x9B, 0xC1, 0xF0, 0x08, 0x6C,
 0x01, 0x6E, 0x40, 0xEA, 0x01, 0xF4, 0x00, 0x6A,
 0x07, 0x93, 0xB1, 0x17, 0x10, 0xF0, 0x24, 0x6A,
-0x7C, 0xF3, 0x70, 0x9A, 0x40, 0x98, 0x4C, 0xEB,
+0x3B, 0xF7, 0x70, 0x9A, 0x40, 0x98, 0x4C, 0xEB,
 0x07, 0x92, 0x0D, 0x23, 0x06, 0x97, 0x10, 0xF0,
-0x24, 0x6C, 0x10, 0xF0, 0x24, 0x6D, 0xDE, 0xF4,
-0x00, 0x4C, 0x5C, 0xF0, 0x08, 0x4D, 0xD1, 0x67,
+0x24, 0x6C, 0x10, 0xF0, 0x24, 0x6D, 0x9E, 0xF0,
+0x00, 0x4C, 0x3B, 0xF4, 0x04, 0x4D, 0xD1, 0x67,
 0x80, 0x18, 0x35, 0x19, 0x07, 0x92, 0x04, 0xD2,
-0x10, 0xF0, 0x24, 0x6A, 0xDC, 0xF4, 0xF4, 0x9A,
+0x10, 0xF0, 0x24, 0x6A, 0xBC, 0xF0, 0xF0, 0x9A,
 0x90, 0x67, 0x00, 0x6D, 0x18, 0x6E, 0x80, 0x18,
 0x98, 0x27, 0x07, 0x93, 0x00, 0x6C, 0x01, 0x4B,
 0x01, 0x23, 0x01, 0x6C, 0xFF, 0x6B, 0x4C, 0xEB,
 0x8C, 0xEB, 0x14, 0x2B, 0x10, 0xF0, 0x24, 0x6A,
-0x7C, 0xF3, 0x50, 0x9A, 0x60, 0x98, 0x6C, 0xEA,
-0x26, 0x22, 0x10, 0xF0, 0x24, 0x6C, 0xFE, 0xF4,
+0x3B, 0xF7, 0x50, 0x9A, 0x60, 0x98, 0x6C, 0xEA,
+0x26, 0x22, 0x10, 0xF0, 0x24, 0x6C, 0xBE, 0xF0,
 0x1C, 0x4C, 0x06, 0x97, 0x10, 0xF0, 0x24, 0x6D,
-0x5C, 0xF0, 0x08, 0x4D, 0xD1, 0x67, 0x80, 0x18,
+0x3B, 0xF4, 0x04, 0x4D, 0xD1, 0x67, 0x80, 0x18,
 0x35, 0x19, 0x19, 0x10, 0x90, 0x67, 0xB1, 0x67,
 0x80, 0x18, 0x93, 0x26, 0x10, 0xF0, 0x24, 0x6A,
-0x7C, 0xF3, 0x50, 0x9A, 0x60, 0x98, 0x6C, 0xEA,
+0x3B, 0xF7, 0x50, 0x9A, 0x60, 0x98, 0x6C, 0xEA,
 0x0C, 0x22, 0x06, 0x97, 0x10, 0xF0, 0x24, 0x6C,
-0x10, 0xF0, 0x24, 0x6D, 0x5E, 0xF5, 0x1C, 0x4C,
-0x5C, 0xF0, 0x08, 0x4D, 0xD1, 0x67, 0x80, 0x18,
+0x10, 0xF0, 0x24, 0x6D, 0x1E, 0xF1, 0x1C, 0x4C,
+0x3B, 0xF4, 0x04, 0x4D, 0xD1, 0x67, 0x80, 0x18,
 0x35, 0x19, 0x01, 0x6A, 0x01, 0x10, 0x00, 0x6A,
 0x0B, 0x97, 0x0A, 0x91, 0x09, 0x90, 0x06, 0x63,
 0x00, 0xEF, 0x00, 0x65, 0xFB, 0x63, 0x09, 0x62,
@@ -31740,63 +31579,63 @@ u8 array_mp_8821c_fw_nic[] = {
 0x08, 0x91, 0x07, 0x90, 0x05, 0x63, 0x00, 0xEF,
 0x30, 0xF0, 0x20, 0x6B, 0x86, 0xF0, 0x99, 0xA3,
 0x30, 0xF0, 0x20, 0x6A, 0x1F, 0x6B, 0x8C, 0xEB,
-0xEF, 0xF4, 0x08, 0x4A, 0x80, 0xF6, 0x60, 0xC2,
+0xEF, 0xF4, 0x08, 0x4A, 0x60, 0xF6, 0x7C, 0xC2,
 0xFF, 0x6D, 0xFF, 0x4B, 0xAC, 0xEB, 0x00, 0x6C,
-0x07, 0x5B, 0x80, 0xF6, 0x83, 0xC2, 0x08, 0x60,
-0x10, 0xF0, 0x24, 0x6A, 0x68, 0x33, 0xFC, 0xF0,
-0x10, 0x4A, 0x69, 0xE2, 0x40, 0x9A, 0x00, 0xEA,
-0x01, 0x6B, 0x80, 0xF6, 0x61, 0xC2, 0x80, 0xF6,
-0x82, 0xC2, 0x0A, 0x10, 0x30, 0xF0, 0x20, 0x6A,
-0xEF, 0xF4, 0x08, 0x4A, 0x01, 0x6B, 0x80, 0xF6,
-0x61, 0xC2, 0x80, 0xF6, 0x62, 0xC2, 0x00, 0x6C,
-0x80, 0xF6, 0x85, 0xC2, 0x38, 0x10, 0x30, 0xF0,
+0x07, 0x5B, 0x60, 0xF6, 0x9F, 0xC2, 0x08, 0x60,
+0x10, 0xF0, 0x24, 0x6A, 0x68, 0x33, 0xDB, 0xF4,
+0x0C, 0x4A, 0x69, 0xE2, 0x40, 0x9A, 0x00, 0xEA,
+0x01, 0x6B, 0x60, 0xF6, 0x7D, 0xC2, 0x60, 0xF6,
+0x9E, 0xC2, 0x0A, 0x10, 0x30, 0xF0, 0x20, 0x6A,
+0xEF, 0xF4, 0x08, 0x4A, 0x01, 0x6B, 0x60, 0xF6,
+0x7D, 0xC2, 0x60, 0xF6, 0x7E, 0xC2, 0x00, 0x6C,
+0x80, 0xF6, 0x81, 0xC2, 0x38, 0x10, 0x30, 0xF0,
 0x20, 0x6A, 0xEF, 0xF4, 0x08, 0x4A, 0x01, 0x6B,
-0x80, 0xF6, 0x61, 0xC2, 0x08, 0x10, 0x30, 0xF0,
+0x60, 0xF6, 0x7D, 0xC2, 0x08, 0x10, 0x30, 0xF0,
 0x20, 0x6A, 0x01, 0x6B, 0xEF, 0xF4, 0x08, 0x4A,
-0x80, 0xF6, 0x61, 0xC2, 0x00, 0x6B, 0x80, 0xF6,
-0x62, 0xC2, 0x23, 0x10, 0x30, 0xF0, 0x20, 0x6A,
+0x60, 0xF6, 0x7D, 0xC2, 0x00, 0x6B, 0x60, 0xF6,
+0x7E, 0xC2, 0x23, 0x10, 0x30, 0xF0, 0x20, 0x6A,
 0xEF, 0xF4, 0x08, 0x4A, 0x01, 0x6C, 0x00, 0x6B,
-0x80, 0xF6, 0x81, 0xC2, 0x80, 0xF6, 0x62, 0xC2,
+0x60, 0xF6, 0x9D, 0xC2, 0x60, 0xF6, 0x7E, 0xC2,
 0xDF, 0x17, 0x30, 0xF0, 0x20, 0x6A, 0xEF, 0xF4,
-0x08, 0x4A, 0x00, 0x6B, 0x02, 0x6C, 0x80, 0xF6,
-0x61, 0xC2, 0x80, 0xF6, 0x65, 0xC2, 0x80, 0xF6,
-0x82, 0xC2, 0x01, 0x6B, 0x0C, 0x10, 0x30, 0xF0,
+0x08, 0x4A, 0x00, 0x6B, 0x02, 0x6C, 0x60, 0xF6,
+0x7D, 0xC2, 0x80, 0xF6, 0x61, 0xC2, 0x60, 0xF6,
+0x9E, 0xC2, 0x01, 0x6B, 0x0C, 0x10, 0x30, 0xF0,
 0x20, 0x6A, 0xEF, 0xF4, 0x08, 0x4A, 0x01, 0x6B,
-0x00, 0x6C, 0x80, 0xF6, 0x61, 0xC2, 0x80, 0xF6,
-0x82, 0xC2, 0x80, 0xF6, 0x65, 0xC2, 0x80, 0xF6,
-0x64, 0xC2, 0x20, 0xE8, 0xFB, 0x63, 0x09, 0x62,
+0x00, 0x6C, 0x60, 0xF6, 0x7D, 0xC2, 0x60, 0xF6,
+0x9E, 0xC2, 0x80, 0xF6, 0x61, 0xC2, 0x80, 0xF6,
+0x60, 0xC2, 0x20, 0xE8, 0xFB, 0x63, 0x09, 0x62,
 0x08, 0xD1, 0x07, 0xD0, 0x30, 0xF0, 0x20, 0x6B,
 0xFF, 0x6A, 0xEF, 0xF4, 0x08, 0x4B, 0x8C, 0xEA,
-0x80, 0xF6, 0x81, 0xA3, 0x4F, 0x24, 0x80, 0xF6,
-0x63, 0xA3, 0x00, 0x69, 0x01, 0x23, 0x01, 0x69,
-0x30, 0xF0, 0x21, 0x6B, 0x70, 0xF3, 0x6C, 0xA3,
+0x60, 0xF6, 0x9D, 0xA3, 0x4F, 0x24, 0x60, 0xF6,
+0x7F, 0xA3, 0x00, 0x69, 0x01, 0x23, 0x01, 0x69,
+0x30, 0xF0, 0x21, 0x6B, 0x70, 0xF3, 0x68, 0xA3,
 0x02, 0x2B, 0x01, 0x6B, 0x6E, 0xE9, 0x05, 0x2A,
 0x3B, 0x10, 0x01, 0x6A, 0x4E, 0xE9, 0x04, 0xD2,
 0x02, 0x10, 0x00, 0x6A, 0x04, 0xD2, 0x10, 0xF0,
-0x24, 0x6B, 0x30, 0xF0, 0x20, 0x68, 0x7C, 0xF6,
-0xB8, 0x9B, 0xCE, 0xF4, 0x50, 0x98, 0x4C, 0x6C,
+0x24, 0x6B, 0x30, 0xF0, 0x20, 0x68, 0x5C, 0xF2,
+0xB4, 0x9B, 0xCE, 0xF4, 0x50, 0x98, 0x4C, 0x6C,
 0x02, 0x6E, 0x40, 0xEA, 0x04, 0x93, 0x14, 0x2B,
 0xCE, 0xF4, 0x50, 0x98, 0xA1, 0xF4, 0x14, 0x6C,
 0xFF, 0x6D, 0x77, 0x6E, 0x40, 0xEA, 0x01, 0x59,
 0x38, 0x67, 0x10, 0xF0, 0x24, 0x6B, 0x02, 0x6E,
 0xCE, 0xF4, 0x50, 0x98, 0xA1, 0xF4, 0x14, 0x6C,
-0x1C, 0xF3, 0xB4, 0x9B, 0x3B, 0xE6, 0x12, 0x10,
+0xFB, 0xF6, 0xB0, 0x9B, 0x3B, 0xE6, 0x12, 0x10,
 0xCE, 0xF4, 0x50, 0x98, 0xA1, 0xF4, 0x14, 0x6C,
 0xFF, 0x6D, 0x66, 0x6E, 0x40, 0xEA, 0x10, 0xF0,
 0x24, 0x6B, 0x01, 0x59, 0xCE, 0xF4, 0x50, 0x98,
-0x1C, 0xF3, 0xB4, 0x9B, 0xD8, 0x67, 0xA1, 0xF4,
+0xFB, 0xF6, 0xB0, 0x9B, 0xD8, 0x67, 0xA1, 0xF4,
 0x14, 0x6C, 0x01, 0x4E, 0x40, 0xEA, 0x06, 0x10,
-0x30, 0xF0, 0x21, 0x6A, 0x70, 0xF3, 0x4D, 0xA2,
+0x30, 0xF0, 0x21, 0x6A, 0x70, 0xF3, 0x49, 0xA2,
 0xC0, 0x22, 0xC3, 0x17, 0x09, 0x97, 0x08, 0x91,
 0x07, 0x90, 0x05, 0x63, 0x00, 0xEF, 0x00, 0x65,
 0xFD, 0x63, 0x05, 0x62, 0x10, 0xF0, 0x30, 0x6B,
 0xC1, 0xF7, 0xB1, 0xA3, 0xFF, 0x6A, 0x4C, 0xEC,
 0x01, 0x6B, 0xAC, 0xEB, 0x0F, 0x5C, 0x4C, 0xEB,
-0x0A, 0x60, 0x10, 0xF0, 0x24, 0x6A, 0x7C, 0xF6,
-0x9C, 0x9A, 0xFC, 0x6A, 0xA0, 0xA4, 0xAC, 0xEA,
+0x0A, 0x60, 0x10, 0xF0, 0x24, 0x6A, 0x5C, 0xF2,
+0x98, 0x9A, 0xFC, 0x6A, 0xA0, 0xA4, 0xAC, 0xEA,
 0x40, 0xC4, 0x00, 0x6C, 0x0E, 0x10, 0x24, 0x5C,
 0x00, 0x6C, 0x0B, 0x61, 0x10, 0xF0, 0x24, 0x6C,
-0x7C, 0xF6, 0xBC, 0x9C, 0x03, 0x6E, 0x80, 0xA5,
+0x5C, 0xF2, 0xB8, 0x9C, 0x03, 0x6E, 0x80, 0xA5,
 0x4C, 0xEC, 0xCD, 0xEC, 0x4C, 0xEC, 0x80, 0xC5,
 0x01, 0x6C, 0x02, 0x23, 0x80, 0x18, 0x7F, 0x2A,
 0x05, 0x97, 0x03, 0x63, 0x00, 0xEF, 0x00, 0x65,
@@ -31831,19 +31670,19 @@ u8 array_mp_8821c_fw_nic[] = {
 0x10, 0xF0, 0x21, 0x6A, 0xC6, 0xF1, 0x0C, 0x4A,
 0x30, 0xF0, 0x20, 0x6B, 0xCE, 0xF6, 0x40, 0xDB,
 0x20, 0xE8, 0x00, 0x65, 0x00, 0x00, 0x00, 0x00,
-0xC4, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
+0x68, 0x14, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
 };
 
-u32 array_length_mp_8821c_fw_nic = 138984;
+u32 array_length_mp_8821c_fw_nic = 137896;
 
 u8 array_mp_8821c_fw_spic[] = {
-0x21, 0x88, 0x00, 0x00, 0x18, 0x00, 0x08, 0x00,
-0x0C, 0xBC, 0x11, 0xA2, 0x00, 0x00, 0x00, 0x00,
-0x01, 0x0C, 0x12, 0x0E, 0xE4, 0x07, 0x00, 0x00,
+0x21, 0x88, 0x00, 0x00, 0x18, 0x00, 0x05, 0x00,
+0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00,
+0x09, 0x06, 0x0F, 0x14, 0xE3, 0x07, 0x00, 0x00,
 0x18, 0x00, 0x00, 0x00, 0x0C, 0x00, 0x00, 0x00,
 0x00, 0x00, 0x20, 0x80, 0xB8, 0x7C, 0x00, 0x00,
 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00,
-0xA8, 0x75, 0x00, 0x00, 0x48, 0x2B, 0x00, 0x00,
+0x08, 0x75, 0x00, 0x00, 0x48, 0x2B, 0x00, 0x00,
 0x00, 0x00, 0x10, 0x80, 0x00, 0x00, 0x03, 0x80,
 0x00, 0x00, 0x04, 0x04, 0x08, 0x08, 0x08, 0x08,
 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C,
@@ -35862,7 +35701,7 @@ u8 array_mp_8821c_fw_spic[] = {
 0xE3, 0xEC, 0xB8, 0x67, 0xFB, 0x2D, 0x10, 0xF0,
 0x23, 0x6C, 0xC0, 0xF0, 0x01, 0x4C, 0x00, 0xEC,
 0xFD, 0x63, 0x05, 0x62, 0x04, 0xD0, 0x10, 0xF0,
-0x23, 0x6B, 0xEE, 0xF1, 0x78, 0x9B, 0x10, 0xF0,
+0x23, 0x6B, 0x4E, 0xF1, 0x78, 0x9B, 0x10, 0xF0,
 0x23, 0x6A, 0xC0, 0xF0, 0x01, 0x4A, 0x40, 0xDB,
 0x00, 0x1C, 0x94, 0x00, 0x80, 0x18, 0x6A, 0x06,
 0x80, 0x18, 0x66, 0x05, 0x80, 0x18, 0x88, 0x05,
@@ -35882,7 +35721,7 @@ u8 array_mp_8821c_fw_spic[] = {
 0x15, 0xF4, 0x00, 0x4A, 0x43, 0xDC, 0xCE, 0xF7,
 0x40, 0x98, 0x00, 0x6D, 0x40, 0xEA, 0x30, 0xF0,
 0x21, 0x6B, 0x11, 0xF1, 0x4C, 0xDB, 0x00, 0x18,
-0xFC, 0xCF, 0x10, 0xF0, 0x23, 0x6A, 0xAE, 0xF2,
+0xD4, 0xCF, 0x10, 0xF0, 0x23, 0x6A, 0x0E, 0xF2,
 0x74, 0x9A, 0xFF, 0xF7, 0x1F, 0x6C, 0x10, 0xF0,
 0x00, 0x6D, 0x40, 0xAB, 0xAB, 0xED, 0x01, 0x6E,
 0x8C, 0xEA, 0xAD, 0xEA, 0x8C, 0xEA, 0x40, 0xCB,
@@ -36025,158 +35864,158 @@ u8 array_mp_8821c_fw_spic[] = {
 0x05, 0x97, 0x03, 0x63, 0x00, 0xEF, 0x00, 0x65,
 0xFD, 0x63, 0x05, 0x62, 0x00, 0x18, 0x78, 0xC1,
 0x05, 0x97, 0x03, 0x63, 0x00, 0xEF, 0x00, 0x65,
-0x10, 0xF0, 0x23, 0x6B, 0xEE, 0xF1, 0x78, 0x9B,
+0x10, 0xF0, 0x23, 0x6B, 0x4E, 0xF1, 0x78, 0x9B,
 0x10, 0xF0, 0x23, 0x6A, 0xE0, 0xF5, 0x01, 0x4A,
 0x40, 0xDB, 0x01, 0x4A, 0x40, 0xDB, 0x20, 0xE8,
-0x10, 0xF0, 0x23, 0x6B, 0xEE, 0xF1, 0x78, 0x9B,
+0x10, 0xF0, 0x23, 0x6B, 0x4E, 0xF1, 0x78, 0x9B,
 0x10, 0xF0, 0x23, 0x6A, 0xE0, 0xF5, 0x19, 0x4A,
 0x40, 0xDB, 0x01, 0x4A, 0x40, 0xDB, 0x20, 0xE8,
-0x10, 0xF0, 0x23, 0x6B, 0xEE, 0xF1, 0x78, 0x9B,
+0x10, 0xF0, 0x23, 0x6B, 0x4E, 0xF1, 0x78, 0x9B,
 0x10, 0xF0, 0x23, 0x6A, 0x00, 0xF6, 0x11, 0x4A,
-0x40, 0xDB, 0x10, 0xF0, 0x23, 0x6A, 0xCE, 0xF4,
+0x40, 0xDB, 0x10, 0xF0, 0x23, 0x6A, 0x2E, 0xF4,
 0x58, 0x9A, 0xC0, 0x9A, 0x10, 0xF0, 0x23, 0x6A,
-0xCE, 0xF4, 0x5C, 0x9A, 0xA0, 0x9A, 0x10, 0xF0,
-0x23, 0x6A, 0xEE, 0xF4, 0x40, 0x9A, 0x80, 0x9A,
-0x10, 0xF0, 0x23, 0x6A, 0xEE, 0xF4, 0x44, 0x9A,
+0x2E, 0xF4, 0x5C, 0x9A, 0xA0, 0x9A, 0x10, 0xF0,
+0x23, 0x6A, 0x4E, 0xF4, 0x40, 0x9A, 0x80, 0x9A,
+0x10, 0xF0, 0x23, 0x6A, 0x4E, 0xF4, 0x44, 0x9A,
 0x40, 0x9A, 0x33, 0x22, 0x10, 0xF0, 0x23, 0x6A,
-0x6E, 0xF2, 0x68, 0x9A, 0x10, 0xF0, 0x23, 0x6F,
-0xEE, 0xF4, 0xE8, 0x9F, 0x40, 0x9B, 0xED, 0xEA,
-0x40, 0xDB, 0x10, 0xF0, 0x23, 0x6A, 0xEE, 0xF4,
+0xCE, 0xF1, 0x68, 0x9A, 0x10, 0xF0, 0x23, 0x6F,
+0x4E, 0xF4, 0xE8, 0x9F, 0x40, 0x9B, 0xED, 0xEA,
+0x40, 0xDB, 0x10, 0xF0, 0x23, 0x6A, 0x4E, 0xF4,
 0x4C, 0x9A, 0xFF, 0x6B, 0xC0, 0xDA, 0x10, 0xF0,
-0x23, 0x6A, 0xEE, 0xF4, 0x50, 0x9A, 0xA0, 0xDA,
-0x10, 0xF0, 0x23, 0x6A, 0xEE, 0xF4, 0x54, 0x9A,
+0x23, 0x6A, 0x4E, 0xF4, 0x50, 0x9A, 0xA0, 0xDA,
+0x10, 0xF0, 0x23, 0x6A, 0x4E, 0xF4, 0x54, 0x9A,
 0x10, 0x6D, 0xAB, 0xED, 0x80, 0xDA, 0x10, 0xF0,
-0x23, 0x6A, 0xEE, 0xF4, 0x98, 0x9A, 0x40, 0xA4,
+0x23, 0x6A, 0x4E, 0xF4, 0x98, 0x9A, 0x40, 0xA4,
 0x6C, 0xEA, 0xAC, 0xEA, 0x02, 0x6D, 0xAD, 0xEA,
 0x6C, 0xEA, 0x40, 0xC4, 0x10, 0xF0, 0x23, 0x6A,
-0x6E, 0xF2, 0x90, 0x9A, 0x80, 0x6D, 0xAB, 0xED,
+0xCE, 0xF1, 0x90, 0x9A, 0x80, 0x6D, 0xAB, 0xED,
 0x40, 0xA4, 0x6C, 0xEA, 0xAE, 0xEA, 0x6C, 0xEA,
-0x40, 0xC4, 0x10, 0xF0, 0x23, 0x6B, 0xEE, 0xF1,
+0x40, 0xC4, 0x10, 0xF0, 0x23, 0x6B, 0x4E, 0xF1,
 0x78, 0x9B, 0x10, 0xF0, 0x23, 0x6A, 0x00, 0xF6,
 0x12, 0x4A, 0x40, 0xDB, 0x20, 0xE8, 0x00, 0x65,
 0xFD, 0x63, 0x05, 0x62, 0x10, 0xF0, 0x23, 0x6B,
-0xEE, 0xF1, 0x78, 0x9B, 0x10, 0xF0, 0x23, 0x6A,
+0x4E, 0xF1, 0x78, 0x9B, 0x10, 0xF0, 0x23, 0x6A,
 0xC0, 0xF6, 0x09, 0x4A, 0x40, 0xDB, 0x00, 0x18,
-0x21, 0xD2, 0x30, 0xF0, 0x20, 0x6A, 0x00, 0xF2,
+0xF9, 0xD1, 0x30, 0xF0, 0x20, 0x6A, 0x00, 0xF2,
 0x6C, 0x9A, 0x6C, 0x23, 0x01, 0x6A, 0x6C, 0xEA,
-0x02, 0x22, 0x00, 0x18, 0x56, 0xD2, 0x30, 0xF0,
+0x02, 0x22, 0x00, 0x18, 0x2E, 0xD2, 0x30, 0xF0,
 0x20, 0x6A, 0x00, 0xF2, 0x4C, 0x9A, 0x02, 0x6B,
-0x6C, 0xEA, 0x02, 0x22, 0x00, 0x18, 0x57, 0xD2,
+0x6C, 0xEA, 0x02, 0x22, 0x00, 0x18, 0x2F, 0xD2,
 0x30, 0xF0, 0x20, 0x6A, 0x00, 0xF2, 0x4C, 0x9A,
 0x04, 0x6B, 0x6C, 0xEA, 0x02, 0x22, 0x00, 0x18,
-0x58, 0xD2, 0x30, 0xF0, 0x20, 0x6A, 0x00, 0xF2,
+0x30, 0xD2, 0x30, 0xF0, 0x20, 0x6A, 0x00, 0xF2,
 0x4C, 0x9A, 0x08, 0x6B, 0x6C, 0xEA, 0x02, 0x22,
-0x00, 0x18, 0x59, 0xD2, 0x30, 0xF0, 0x20, 0x6A,
+0x00, 0x18, 0x31, 0xD2, 0x30, 0xF0, 0x20, 0x6A,
 0x00, 0xF2, 0x4C, 0x9A, 0x10, 0x6B, 0x6C, 0xEA,
-0x02, 0x22, 0x00, 0x18, 0x5A, 0xD2, 0x30, 0xF0,
+0x02, 0x22, 0x00, 0x18, 0x32, 0xD2, 0x30, 0xF0,
 0x20, 0x6A, 0x00, 0xF2, 0x4C, 0x9A, 0x20, 0x6B,
-0x6C, 0xEA, 0x02, 0x22, 0x00, 0x18, 0x5B, 0xD2,
+0x6C, 0xEA, 0x02, 0x22, 0x00, 0x18, 0x33, 0xD2,
 0x30, 0xF0, 0x20, 0x6A, 0x00, 0xF2, 0x4C, 0x9A,
 0x40, 0x6B, 0x6C, 0xEA, 0x02, 0x22, 0x00, 0x18,
-0x5C, 0xD2, 0x30, 0xF0, 0x20, 0x6A, 0x00, 0xF2,
+0x34, 0xD2, 0x30, 0xF0, 0x20, 0x6A, 0x00, 0xF2,
 0x4C, 0x9A, 0x80, 0x6B, 0x6C, 0xEA, 0x02, 0x22,
-0x00, 0x18, 0x90, 0xD2, 0x30, 0xF0, 0x20, 0x6B,
+0x00, 0x18, 0x68, 0xD2, 0x30, 0xF0, 0x20, 0x6B,
 0x00, 0xF2, 0x6C, 0x9B, 0xFF, 0x6A, 0x01, 0x4A,
-0x6C, 0xEA, 0x02, 0x22, 0x00, 0x18, 0x73, 0xD2,
+0x6C, 0xEA, 0x02, 0x22, 0x00, 0x18, 0x4B, 0xD2,
 0x30, 0xF0, 0x20, 0x6B, 0x00, 0xF2, 0x6C, 0x9B,
 0x04, 0xF0, 0x00, 0x6A, 0x6C, 0xEA, 0x02, 0x22,
-0x00, 0x18, 0x5D, 0xD2, 0x30, 0xF0, 0x20, 0x6B,
+0x00, 0x18, 0x35, 0xD2, 0x30, 0xF0, 0x20, 0x6B,
 0x00, 0xF2, 0x6C, 0x9B, 0x08, 0xF0, 0x00, 0x6A,
-0x6C, 0xEA, 0x02, 0x22, 0x00, 0x18, 0x5E, 0xD2,
+0x6C, 0xEA, 0x02, 0x22, 0x00, 0x18, 0x36, 0xD2,
 0x30, 0xF0, 0x20, 0x6B, 0x00, 0xF2, 0x6C, 0x9B,
 0x10, 0xF0, 0x00, 0x6A, 0x6C, 0xEA, 0x02, 0x22,
-0x00, 0x18, 0x5F, 0xD2, 0x30, 0xF0, 0x20, 0x6A,
+0x00, 0x18, 0x37, 0xD2, 0x30, 0xF0, 0x20, 0x6A,
 0x00, 0xF2, 0x70, 0x9A, 0x14, 0x23, 0x10, 0xF0,
-0x23, 0x6A, 0x2E, 0xF2, 0x58, 0x9A, 0x6C, 0xEA,
-0x02, 0x22, 0x00, 0x18, 0x63, 0xD2, 0x10, 0xF0,
-0x23, 0x6A, 0x30, 0xF0, 0x20, 0x6B, 0x6E, 0xF2,
+0x23, 0x6A, 0x8E, 0xF1, 0x58, 0x9A, 0x6C, 0xEA,
+0x02, 0x22, 0x00, 0x18, 0x3B, 0xD2, 0x10, 0xF0,
+0x23, 0x6A, 0x30, 0xF0, 0x20, 0x6B, 0xCE, 0xF1,
 0x4C, 0x9A, 0x00, 0xF2, 0x70, 0x9B, 0x6C, 0xEA,
-0x02, 0x22, 0x00, 0x18, 0x6F, 0xD2, 0x30, 0xF0,
+0x02, 0x22, 0x00, 0x18, 0x47, 0xD2, 0x30, 0xF0,
 0x20, 0x6A, 0x00, 0xF2, 0x74, 0x9A, 0x55, 0x23,
 0x01, 0x6A, 0x6C, 0xEA, 0x03, 0x22, 0x01, 0x6C,
-0x00, 0x18, 0x60, 0xD2, 0x30, 0xF0, 0x20, 0x6A,
+0x00, 0x18, 0x38, 0xD2, 0x30, 0xF0, 0x20, 0x6A,
 0x00, 0xF2, 0x54, 0x9A, 0x02, 0x6B, 0x6C, 0xEA,
-0x03, 0x22, 0x01, 0x6C, 0x00, 0x18, 0x61, 0xD2,
+0x03, 0x22, 0x01, 0x6C, 0x00, 0x18, 0x39, 0xD2,
 0x30, 0xF0, 0x20, 0x6A, 0x00, 0xF2, 0x54, 0x9A,
 0x04, 0x6B, 0x6C, 0xEA, 0x03, 0x22, 0x02, 0x6C,
-0x00, 0x18, 0x60, 0xD2, 0x30, 0xF0, 0x20, 0x6A,
+0x00, 0x18, 0x38, 0xD2, 0x30, 0xF0, 0x20, 0x6A,
 0x00, 0xF2, 0x54, 0x9A, 0x08, 0x6B, 0x6C, 0xEA,
-0x03, 0x22, 0x02, 0x6C, 0x00, 0x18, 0x61, 0xD2,
+0x03, 0x22, 0x02, 0x6C, 0x00, 0x18, 0x39, 0xD2,
 0x30, 0xF0, 0x20, 0x6A, 0x00, 0xF2, 0x54, 0x9A,
 0x10, 0x6B, 0x6C, 0xEA, 0x03, 0x22, 0x03, 0x6C,
-0x00, 0x18, 0x60, 0xD2, 0x30, 0xF0, 0x20, 0x6A,
+0x00, 0x18, 0x38, 0xD2, 0x30, 0xF0, 0x20, 0x6A,
 0x00, 0xF2, 0x54, 0x9A, 0x20, 0x6B, 0x6C, 0xEA,
-0x03, 0x22, 0x03, 0x6C, 0x00, 0x18, 0x61, 0xD2,
+0x03, 0x22, 0x03, 0x6C, 0x00, 0x18, 0x39, 0xD2,
 0x30, 0xF0, 0x20, 0x6A, 0x00, 0xF2, 0x54, 0x9A,
 0x40, 0x6B, 0x6C, 0xEA, 0x03, 0x22, 0x04, 0x6C,
-0x00, 0x18, 0x60, 0xD2, 0x30, 0xF0, 0x20, 0x6A,
+0x00, 0x18, 0x38, 0xD2, 0x30, 0xF0, 0x20, 0x6A,
 0x00, 0xF2, 0x54, 0x9A, 0x80, 0x6B, 0x6C, 0xEA,
-0x03, 0x22, 0x04, 0x6C, 0x00, 0x18, 0x61, 0xD2,
-0x10, 0xF0, 0x23, 0x6B, 0xEE, 0xF1, 0x78, 0x9B,
+0x03, 0x22, 0x04, 0x6C, 0x00, 0x18, 0x39, 0xD2,
+0x10, 0xF0, 0x23, 0x6B, 0x4E, 0xF1, 0x78, 0x9B,
 0x10, 0xF0, 0x23, 0x6A, 0xC0, 0xF6, 0x0A, 0x4A,
 0x40, 0xDB, 0x05, 0x97, 0x03, 0x63, 0x00, 0xEF,
 0xFD, 0x63, 0x05, 0x62, 0x04, 0xD0, 0x10, 0xF0,
-0x23, 0x6B, 0xEE, 0xF1, 0x78, 0x9B, 0x10, 0xF0,
+0x23, 0x6B, 0x4E, 0xF1, 0x78, 0x9B, 0x10, 0xF0,
 0x23, 0x6A, 0xA1, 0xF0, 0x11, 0x4A, 0x40, 0xDB,
-0x00, 0x18, 0xB8, 0xD3, 0x00, 0x18, 0xF1, 0xD1,
-0x00, 0x18, 0xF9, 0xD3, 0x30, 0xF0, 0x20, 0x6A,
+0x00, 0x18, 0x90, 0xD3, 0x00, 0x18, 0xC9, 0xD1,
+0x00, 0x18, 0xD1, 0xD3, 0x30, 0xF0, 0x20, 0x6A,
 0xE0, 0xF1, 0x5C, 0x9A, 0x23, 0x22, 0x00, 0x68,
 0x30, 0xF0, 0x20, 0x6B, 0xE0, 0xF1, 0x7C, 0x9B,
 0x02, 0xF0, 0x00, 0x6A, 0x44, 0xE8, 0x6C, 0xEA,
-0x03, 0x22, 0x90, 0x67, 0x00, 0x18, 0x55, 0xD2,
+0x03, 0x22, 0x90, 0x67, 0x00, 0x18, 0x2D, 0xD2,
 0x01, 0x48, 0x10, 0x70, 0xF1, 0x61, 0x30, 0xF0,
 0x20, 0x6B, 0xE0, 0xF1, 0x7C, 0x9B, 0xFF, 0x6A,
 0x01, 0x4A, 0x6C, 0xEA, 0x02, 0x22, 0x00, 0x18,
-0xA4, 0xD2, 0x10, 0xF0, 0x23, 0x6B, 0xEE, 0xF1,
+0x7C, 0xD2, 0x10, 0xF0, 0x23, 0x6B, 0x4E, 0xF1,
 0x78, 0x9B, 0x10, 0xF0, 0x23, 0x6A, 0xA1, 0xF0,
 0x12, 0x4A, 0x40, 0xDB, 0x05, 0x97, 0x04, 0x90,
 0x03, 0x63, 0x00, 0xEF, 0xFD, 0x63, 0x05, 0x62,
-0x10, 0xF0, 0x23, 0x6B, 0xEE, 0xF1, 0x78, 0x9B,
+0x10, 0xF0, 0x23, 0x6B, 0x4E, 0xF1, 0x78, 0x9B,
 0x10, 0xF0, 0x23, 0x6A, 0x21, 0xF1, 0x0D, 0x4A,
-0x40, 0xDB, 0x00, 0x18, 0xF8, 0xD1, 0x30, 0xF0,
+0x40, 0xDB, 0x00, 0x18, 0xD0, 0xD1, 0x30, 0xF0,
 0x20, 0x6A, 0xC0, 0xF1, 0x7C, 0x9A, 0x34, 0x23,
 0x02, 0x6A, 0x6C, 0xEA, 0x02, 0x22, 0x00, 0x18,
-0x35, 0xD2, 0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1,
+0x0D, 0xD2, 0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1,
 0x5C, 0x9A, 0x10, 0x6B, 0x6C, 0xEA, 0x02, 0x22,
-0x00, 0x18, 0xA0, 0xD2, 0x30, 0xF0, 0x20, 0x6A,
+0x00, 0x18, 0x78, 0xD2, 0x30, 0xF0, 0x20, 0x6A,
 0xC0, 0xF1, 0x5C, 0x9A, 0x20, 0x6B, 0x6C, 0xEA,
-0x02, 0x22, 0x00, 0x18, 0x9C, 0xD2, 0x30, 0xF0,
+0x02, 0x22, 0x00, 0x18, 0x74, 0xD2, 0x30, 0xF0,
 0x20, 0x6A, 0xC0, 0xF1, 0x5C, 0x9A, 0x40, 0x6B,
-0x6C, 0xEA, 0x02, 0x22, 0x00, 0x18, 0x3A, 0xD2,
+0x6C, 0xEA, 0x02, 0x22, 0x00, 0x18, 0x12, 0xD2,
 0x30, 0xF0, 0x20, 0x6B, 0xC0, 0xF1, 0x7C, 0x9B,
 0xFF, 0x6A, 0x01, 0x4A, 0x6C, 0xEA, 0x02, 0x22,
-0x00, 0x18, 0x98, 0xD2, 0x30, 0xF0, 0x20, 0x6B,
+0x00, 0x18, 0x70, 0xD2, 0x30, 0xF0, 0x20, 0x6B,
 0xC0, 0xF1, 0x7C, 0x9B, 0x00, 0xF2, 0x00, 0x6A,
-0x6C, 0xEA, 0x02, 0x22, 0x00, 0x18, 0x94, 0xD2,
+0x6C, 0xEA, 0x02, 0x22, 0x00, 0x18, 0x6C, 0xD2,
 0x30, 0xF0, 0x20, 0x6A, 0xE0, 0xF1, 0x64, 0x9A,
 0x32, 0x23, 0x01, 0x6A, 0x6C, 0xEA, 0x03, 0x22,
-0x00, 0x6C, 0x00, 0x18, 0x8B, 0xD2, 0x30, 0xF0,
+0x00, 0x6C, 0x00, 0x18, 0x63, 0xD2, 0x30, 0xF0,
 0x20, 0x6B, 0xE0, 0xF1, 0x64, 0x9B, 0xFF, 0x6A,
 0x01, 0x4A, 0x6C, 0xEA, 0x03, 0x22, 0x01, 0x6C,
-0x00, 0x18, 0x8B, 0xD2, 0x30, 0xF0, 0x20, 0x6B,
+0x00, 0x18, 0x63, 0xD2, 0x30, 0xF0, 0x20, 0x6B,
 0xE0, 0xF1, 0x64, 0x9B, 0x00, 0xF2, 0x00, 0x6A,
 0x6C, 0xEA, 0x03, 0x22, 0x02, 0x6C, 0x00, 0x18,
-0x8B, 0xD2, 0x30, 0xF0, 0x20, 0x6B, 0xE0, 0xF1,
+0x63, 0xD2, 0x30, 0xF0, 0x20, 0x6B, 0xE0, 0xF1,
 0x64, 0x9B, 0x00, 0xF4, 0x00, 0x6A, 0x6C, 0xEA,
-0x03, 0x22, 0x03, 0x6C, 0x00, 0x18, 0x8B, 0xD2,
+0x03, 0x22, 0x03, 0x6C, 0x00, 0x18, 0x63, 0xD2,
 0x30, 0xF0, 0x20, 0x6B, 0xE0, 0xF1, 0x64, 0x9B,
 0x01, 0xF0, 0x00, 0x6A, 0x6C, 0xEA, 0x03, 0x22,
-0x04, 0x6C, 0x00, 0x18, 0x8B, 0xD2, 0x30, 0xF0,
+0x04, 0x6C, 0x00, 0x18, 0x63, 0xD2, 0x30, 0xF0,
 0x20, 0x6A, 0xE0, 0xF1, 0x68, 0x9A, 0x32, 0x23,
 0x01, 0x6A, 0x6C, 0xEA, 0x03, 0x22, 0x00, 0x6C,
-0x00, 0x18, 0x53, 0xD2, 0x30, 0xF0, 0x20, 0x6B,
+0x00, 0x18, 0x2B, 0xD2, 0x30, 0xF0, 0x20, 0x6B,
 0xE0, 0xF1, 0x68, 0x9B, 0xFF, 0x6A, 0x01, 0x4A,
 0x6C, 0xEA, 0x03, 0x22, 0x01, 0x6C, 0x00, 0x18,
-0x53, 0xD2, 0x30, 0xF0, 0x20, 0x6B, 0xE0, 0xF1,
+0x2B, 0xD2, 0x30, 0xF0, 0x20, 0x6B, 0xE0, 0xF1,
 0x68, 0x9B, 0x00, 0xF2, 0x00, 0x6A, 0x6C, 0xEA,
-0x03, 0x22, 0x02, 0x6C, 0x00, 0x18, 0x53, 0xD2,
+0x03, 0x22, 0x02, 0x6C, 0x00, 0x18, 0x2B, 0xD2,
 0x30, 0xF0, 0x20, 0x6B, 0xE0, 0xF1, 0x68, 0x9B,
 0x00, 0xF4, 0x00, 0x6A, 0x6C, 0xEA, 0x03, 0x22,
-0x03, 0x6C, 0x00, 0x18, 0x53, 0xD2, 0x30, 0xF0,
+0x03, 0x6C, 0x00, 0x18, 0x2B, 0xD2, 0x30, 0xF0,
 0x20, 0x6B, 0xE0, 0xF1, 0x68, 0x9B, 0x01, 0xF0,
 0x00, 0x6A, 0x6C, 0xEA, 0x03, 0x22, 0x04, 0x6C,
-0x00, 0x18, 0x53, 0xD2, 0x10, 0xF0, 0x23, 0x6B,
-0xEE, 0xF1, 0x78, 0x9B, 0x10, 0xF0, 0x23, 0x6A,
+0x00, 0x18, 0x2B, 0xD2, 0x10, 0xF0, 0x23, 0x6B,
+0x4E, 0xF1, 0x78, 0x9B, 0x10, 0xF0, 0x23, 0x6A,
 0x21, 0xF1, 0x0E, 0x4A, 0x40, 0xDB, 0x05, 0x97,
 0x03, 0x63, 0x00, 0xEF, 0x80, 0x63, 0xFF, 0x62,
 0xFE, 0xD1, 0xFD, 0xD0, 0xF9, 0x63, 0x20, 0xF4,
@@ -36246,35 +36085,35 @@ u8 array_mp_8821c_fw_spic[] = {
 0xB1, 0xF0, 0x65, 0xC2, 0x01, 0x6A, 0x07, 0x63,
 0xFF, 0x97, 0xFE, 0x91, 0xFD, 0x90, 0x00, 0xF4,
 0x00, 0x63, 0x00, 0xEF, 0x1F, 0x75, 0x0D, 0x60,
-0x10, 0xF0, 0x23, 0x6A, 0x6E, 0xF2, 0x68, 0x9A,
-0x10, 0xF0, 0x23, 0x6C, 0x8E, 0xF2, 0x8C, 0x9C,
+0x10, 0xF0, 0x23, 0x6A, 0xCE, 0xF1, 0x68, 0x9A,
+0x10, 0xF0, 0x23, 0x6C, 0xEE, 0xF1, 0x8C, 0x9C,
 0x40, 0x9B, 0x8D, 0xEA, 0x40, 0xDB, 0x00, 0x6A,
-0x20, 0xE8, 0x10, 0xF0, 0x23, 0x6A, 0xCE, 0xF2,
+0x20, 0xE8, 0x10, 0xF0, 0x23, 0x6A, 0x2E, 0xF2,
 0x48, 0x9A, 0x60, 0x9C, 0x4E, 0xEB, 0x01, 0x6A,
-0x0C, 0x23, 0x10, 0xF0, 0x23, 0x6A, 0x6E, 0xF2,
-0x68, 0x9A, 0x10, 0xF0, 0x23, 0x6C, 0xCE, 0xF2,
+0x0C, 0x23, 0x10, 0xF0, 0x23, 0x6A, 0xCE, 0xF1,
+0x68, 0x9A, 0x10, 0xF0, 0x23, 0x6C, 0x2E, 0xF2,
 0x8C, 0x9C, 0x40, 0x9B, 0x8D, 0xEA, 0x40, 0xDB,
 0x00, 0x6A, 0x20, 0xE8, 0x6D, 0xA4, 0x0F, 0x6A,
 0x6C, 0xEA, 0x0A, 0x22, 0x10, 0xF0, 0x23, 0x6A,
-0x6E, 0xF2, 0x68, 0x9A, 0x10, 0xF0, 0x23, 0x6C,
-0x6E, 0xF2, 0x9C, 0x9C, 0x40, 0x9B, 0x2F, 0x10,
+0xCE, 0xF1, 0x68, 0x9A, 0x10, 0xF0, 0x23, 0x6C,
+0xCE, 0xF1, 0x9C, 0x9C, 0x40, 0x9B, 0x2F, 0x10,
 0x4E, 0xA4, 0x1F, 0x6B, 0x6C, 0xEA, 0x1F, 0x4A,
 0x6C, 0xEA, 0x10, 0x5A, 0x0A, 0x61, 0x10, 0xF0,
-0x23, 0x6A, 0x6E, 0xF2, 0x68, 0x9A, 0x10, 0xF0,
-0x23, 0x6C, 0xCE, 0xF2, 0x90, 0x9C, 0x40, 0x9B,
+0x23, 0x6A, 0xCE, 0xF1, 0x68, 0x9A, 0x10, 0xF0,
+0x23, 0x6C, 0x2E, 0xF2, 0x90, 0x9C, 0x40, 0x9B,
 0x1E, 0x10, 0x4C, 0xA4, 0x0C, 0x22, 0x80, 0x72,
-0x0A, 0x60, 0x10, 0xF0, 0x23, 0x6A, 0x6E, 0xF2,
-0x68, 0x9A, 0x10, 0xF0, 0x23, 0x6C, 0xCE, 0xF2,
+0x0A, 0x60, 0x10, 0xF0, 0x23, 0x6A, 0xCE, 0xF1,
+0x68, 0x9A, 0x10, 0xF0, 0x23, 0x6C, 0x2E, 0xF2,
 0x94, 0x9C, 0x40, 0x9B, 0x10, 0x10, 0x6D, 0xA4,
 0x10, 0x6A, 0x4B, 0xEA, 0x6C, 0xEA, 0xFF, 0x6D,
 0xAC, 0xEA, 0x0D, 0x22, 0x10, 0xF0, 0x23, 0x6A,
-0x6E, 0xF2, 0x68, 0x9A, 0x10, 0xF0, 0x23, 0x6C,
-0x8E, 0xF2, 0x90, 0x9C, 0x40, 0x9B, 0x8D, 0xEA,
+0xCE, 0xF1, 0x68, 0x9A, 0x10, 0xF0, 0x23, 0x6C,
+0xEE, 0xF1, 0x90, 0x9C, 0x40, 0x9B, 0x8D, 0xEA,
 0x40, 0xDB, 0x00, 0x6A, 0x20, 0xE8, 0x4E, 0xA4,
 0x20, 0x6B, 0x6B, 0xEB, 0x4C, 0xEB, 0xAC, 0xEB,
 0x01, 0x6A, 0x0C, 0x23, 0x10, 0xF0, 0x23, 0x6A,
-0x6E, 0xF2, 0x68, 0x9A, 0x10, 0xF0, 0x23, 0x6C,
-0x6E, 0xF2, 0x8C, 0x9C, 0x40, 0x9B, 0x8D, 0xEA,
+0xCE, 0xF1, 0x68, 0x9A, 0x10, 0xF0, 0x23, 0x6C,
+0xCE, 0xF1, 0x8C, 0x9C, 0x40, 0x9B, 0x8D, 0xEA,
 0x40, 0xDB, 0x00, 0x6A, 0x20, 0xE8, 0x00, 0x65,
 0x30, 0xF0, 0x20, 0x6B, 0xAF, 0xF4, 0x18, 0x4B,
 0xE1, 0xF3, 0x4B, 0xA3, 0x04, 0x2A, 0x01, 0x6C,
@@ -36286,7 +36125,7 @@ u8 array_mp_8821c_fw_spic[] = {
 0x21, 0x6A, 0x90, 0xF4, 0x1C, 0x4A, 0x04, 0x30,
 0x01, 0xE2, 0x24, 0x67, 0x00, 0x6D, 0x90, 0x67,
 0x00, 0xF2, 0x00, 0x6E, 0x00, 0x18, 0xBE, 0xCA,
-0x10, 0xF0, 0x23, 0x6A, 0xCE, 0xF2, 0x58, 0x9A,
+0x10, 0xF0, 0x23, 0x6A, 0x2E, 0xF2, 0x58, 0x9A,
 0x40, 0xD8, 0x41, 0x99, 0x41, 0xD8, 0x07, 0x97,
 0x50, 0x67, 0x06, 0x91, 0x05, 0x90, 0x04, 0x63,
 0x00, 0xEF, 0x00, 0x65, 0xDB, 0x63, 0x49, 0x62,
@@ -36301,7 +36140,7 @@ u8 array_mp_8821c_fw_spic[] = {
 0x30, 0xF0, 0x20, 0x6A, 0xAE, 0xF5, 0x44, 0x9A,
 0xFF, 0x6D, 0x31, 0xE3, 0x01, 0x4D, 0x04, 0x06,
 0x40, 0xEA, 0x10, 0xF0, 0x23, 0x6B, 0x44, 0x94,
-0xCE, 0xF2, 0x7C, 0x9B, 0x04, 0x02, 0x6D, 0xE4,
+0x2E, 0xF2, 0x7C, 0x9B, 0x04, 0x02, 0x6D, 0xE4,
 0x44, 0x04, 0xA0, 0xA2, 0x01, 0x4A, 0x8A, 0xEA,
 0xA0, 0xC3, 0x01, 0x4B, 0xFA, 0x61, 0x44, 0x92,
 0x00, 0xF1, 0x00, 0x4A, 0x02, 0xF0, 0x00, 0x72,
@@ -36312,7 +36151,7 @@ u8 array_mp_8821c_fw_spic[] = {
 0x20, 0x6A, 0x8E, 0xF5, 0x44, 0x9A, 0x02, 0x6C,
 0x40, 0xEA, 0x2D, 0xE0, 0x44, 0xD3, 0xFF, 0x6E,
 0x04, 0x04, 0x00, 0x6D, 0x01, 0x4E, 0x00, 0x18,
-0xBE, 0xCA, 0x10, 0xF0, 0x23, 0x6A, 0xCE, 0xF2,
+0xBE, 0xCA, 0x10, 0xF0, 0x23, 0x6A, 0x2E, 0xF2,
 0x7C, 0x9A, 0x44, 0x04, 0x04, 0x02, 0x6D, 0xE0,
 0xA0, 0xA3, 0x01, 0x4B, 0xA0, 0xC2, 0x01, 0x4A,
 0x8A, 0xEA, 0xFA, 0x61, 0x30, 0xF0, 0x20, 0x6A,
@@ -36323,11 +36162,11 @@ u8 array_mp_8821c_fw_spic[] = {
 0x00, 0x68, 0x91, 0x28, 0x49, 0x97, 0x48, 0x91,
 0x47, 0x90, 0x25, 0x63, 0x00, 0xEF, 0x00, 0x65,
 0xF8, 0x63, 0x0F, 0x62, 0x0E, 0xD1, 0x0D, 0xD0,
-0x10, 0xF0, 0x23, 0x6A, 0xEE, 0xF0, 0x7C, 0x9A,
-0xEE, 0xF0, 0x1C, 0x4A, 0x41, 0x9A, 0x10, 0xF0,
-0x23, 0x6D, 0x07, 0x04, 0xEE, 0xF0, 0x0C, 0x4D,
+0x10, 0xF0, 0x23, 0x6A, 0x4E, 0xF0, 0x7C, 0x9A,
+0x4E, 0xF0, 0x1C, 0x4A, 0x41, 0x9A, 0x10, 0xF0,
+0x23, 0x6D, 0x07, 0x04, 0x4E, 0xF0, 0x0C, 0x4D,
 0x10, 0x6E, 0x05, 0xD3, 0x06, 0xD2, 0x00, 0x18,
-0xC3, 0xCA, 0x10, 0xF0, 0x23, 0x6A, 0xEE, 0xF0,
+0xC3, 0xCA, 0x10, 0xF0, 0x23, 0x6A, 0x4E, 0xF0,
 0x48, 0x9A, 0x04, 0xD2, 0x00, 0x18, 0x6E, 0xC3,
 0x40, 0x30, 0x22, 0x67, 0x30, 0xF0, 0x21, 0x6A,
 0x90, 0xF4, 0x1C, 0x4A, 0x04, 0x30, 0x01, 0xE2,
@@ -36345,11 +36184,11 @@ u8 array_mp_8821c_fw_spic[] = {
 0x07, 0x05, 0x09, 0x4C, 0x10, 0x6E, 0x00, 0x18,
 0xC3, 0xCA, 0x87, 0x40, 0x04, 0x05, 0x19, 0x4C,
 0x04, 0x6E, 0x00, 0x18, 0xC3, 0xCA, 0x91, 0x67,
-0x24, 0x6D, 0x00, 0x6E, 0x00, 0x18, 0x0B, 0xD4,
+0x24, 0x6D, 0x00, 0x6E, 0x00, 0x18, 0xE3, 0xD3,
 0x0F, 0x97, 0x0E, 0x91, 0x0D, 0x90, 0x01, 0x6A,
 0x08, 0x63, 0x00, 0xEF, 0xD4, 0x63, 0x57, 0x62,
 0x56, 0xD1, 0x55, 0xD0, 0x59, 0xD5, 0x10, 0xF0,
-0x23, 0x6D, 0xCE, 0xF0, 0x00, 0x4D, 0x28, 0x6E,
+0x23, 0x6D, 0x2E, 0xF0, 0x00, 0x4D, 0x28, 0x6E,
 0x24, 0x67, 0x04, 0x04, 0x00, 0x18, 0xC3, 0xCA,
 0xFF, 0x6E, 0x0E, 0x04, 0x00, 0x6D, 0x01, 0x4E,
 0x00, 0x18, 0xBE, 0xCA, 0x30, 0xF0, 0x20, 0x6A,
@@ -36395,7 +36234,7 @@ u8 array_mp_8821c_fw_spic[] = {
 0x01, 0x72, 0x16, 0x61, 0x05, 0x6A, 0x42, 0xC0,
 0x00, 0x6C, 0x20, 0x6A, 0x4C, 0xC0, 0x8D, 0xC0,
 0x4F, 0x92, 0x50, 0x94, 0xFF, 0xF7, 0x1F, 0x6D,
-0x4C, 0xED, 0x00, 0x6E, 0x00, 0x18, 0x0B, 0xD4,
+0x4C, 0xED, 0x00, 0x6E, 0x00, 0x18, 0xE3, 0xD3,
 0x30, 0xF0, 0x20, 0x6A, 0xAF, 0xF4, 0x18, 0x4A,
 0x00, 0x6B, 0x01, 0xF4, 0x7A, 0xC2, 0x29, 0x10,
 0x30, 0xF0, 0x21, 0x6A, 0xD1, 0xF0, 0x51, 0xA2,
@@ -36408,14 +36247,14 @@ u8 array_mp_8821c_fw_spic[] = {
 0x42, 0xC0, 0x20, 0x6A, 0x4C, 0xC0, 0x00, 0x6A,
 0x4D, 0xC0, 0x4F, 0x93, 0x50, 0x94, 0xFF, 0xF7,
 0x1F, 0x6D, 0x6C, 0xED, 0x00, 0x6E, 0x00, 0x18,
-0x0B, 0xD4, 0x00, 0x18, 0x6E, 0xC3, 0xA2, 0x67,
+0xE3, 0xD3, 0x00, 0x18, 0x6E, 0xC3, 0xA2, 0x67,
 0x91, 0x67, 0x4E, 0xD2, 0x00, 0x18, 0x78, 0xC3,
 0x02, 0x67, 0x90, 0x67, 0x00, 0x6D, 0x00, 0x18,
 0x76, 0xC3, 0x90, 0x67, 0x00, 0x6D, 0x00, 0x18,
 0x77, 0xC3, 0x4E, 0x94, 0x0D, 0x6D, 0x00, 0x6E,
-0x00, 0x18, 0x0B, 0xD4, 0xC0, 0xF5, 0x0A, 0x10,
+0x00, 0x18, 0xE3, 0xD3, 0xC0, 0xF5, 0x0A, 0x10,
 0x50, 0x94, 0x00, 0x6D, 0xC5, 0x67, 0x00, 0x18,
-0x0B, 0xD4, 0x00, 0x18, 0x6E, 0xC3, 0xA2, 0x67,
+0xE3, 0xD3, 0x00, 0x18, 0x6E, 0xC3, 0xA2, 0x67,
 0x91, 0x67, 0x4E, 0xD2, 0x00, 0x18, 0x78, 0xC3,
 0x02, 0x67, 0x82, 0x67, 0x4F, 0x95, 0x43, 0x11,
 0x00, 0x18, 0x6E, 0xC3, 0x4E, 0xD2, 0x40, 0x30,
@@ -36433,7 +36272,7 @@ u8 array_mp_8821c_fw_spic[] = {
 0x02, 0x6A, 0x6C, 0xEA, 0x05, 0x22, 0x04, 0x6A,
 0x6C, 0xEA, 0x02, 0x22, 0x00, 0x6A, 0x02, 0x10,
 0x80, 0x6A, 0x4B, 0xEA, 0x42, 0xC0, 0x4E, 0x94,
-0x04, 0x6D, 0x00, 0x6E, 0x00, 0x18, 0x0B, 0xD4,
+0x04, 0x6D, 0x00, 0x6E, 0x00, 0x18, 0xE3, 0xD3,
 0x00, 0x18, 0x6E, 0xC3, 0xA2, 0x67, 0x91, 0x67,
 0x4E, 0xD2, 0x00, 0x18, 0x78, 0xC3, 0xA2, 0x99,
 0x02, 0x67, 0x04, 0x5D, 0x96, 0x61, 0x82, 0x67,
@@ -36450,7 +36289,7 @@ u8 array_mp_8821c_fw_spic[] = {
 0xA2, 0x67, 0x91, 0x67, 0x4E, 0xD2, 0x00, 0x18,
 0x78, 0xC3, 0x29, 0x58, 0x22, 0x67, 0x06, 0x61,
 0x4F, 0x94, 0x00, 0x6D, 0xC5, 0x67, 0x00, 0x18,
-0x0B, 0xD4, 0x37, 0x13, 0x30, 0xF0, 0x21, 0x6A,
+0xE3, 0xD3, 0x37, 0x13, 0x30, 0xF0, 0x21, 0x6A,
 0xB1, 0xF0, 0x45, 0xA2, 0x08, 0x2A, 0x30, 0xF0,
 0x21, 0x6C, 0xD1, 0xF0, 0x10, 0x4C, 0x00, 0x18,
 0xAB, 0xC2, 0x01, 0x72, 0x16, 0x61, 0x30, 0xF0,
@@ -36463,11 +36302,11 @@ u8 array_mp_8821c_fw_spic[] = {
 0x53, 0xC3, 0x51, 0x94, 0x04, 0x05, 0x28, 0x6E,
 0x00, 0x18, 0xC3, 0xCA, 0x4F, 0x94, 0xFF, 0xF7,
 0x1F, 0x6D, 0x0C, 0xED, 0x00, 0x6E, 0x00, 0x18,
-0x0B, 0xD4, 0x50, 0x94, 0x03, 0xEC, 0x04, 0x61,
+0xE3, 0xD3, 0x50, 0x94, 0x03, 0xEC, 0x04, 0x61,
 0x50, 0x92, 0x91, 0x67, 0x17, 0xE2, 0x02, 0x10,
 0x91, 0x67, 0x00, 0x6D, 0x00, 0x18, 0x76, 0xC3,
 0x91, 0x67, 0x24, 0x17, 0x4F, 0x94, 0x00, 0x6D,
-0xC5, 0x67, 0x00, 0x18, 0x0B, 0xD4, 0x00, 0x18,
+0xC5, 0x67, 0x00, 0x18, 0xE3, 0xD3, 0x00, 0x18,
 0x6E, 0xC3, 0xA2, 0x67, 0x91, 0x67, 0x4E, 0xD2,
 0x00, 0x18, 0x78, 0xC3, 0x02, 0x67, 0x82, 0x67,
 0x50, 0x95, 0x71, 0x10, 0x00, 0x18, 0x6E, 0xC3,
@@ -36479,24 +36318,24 @@ u8 array_mp_8821c_fw_spic[] = {
 0x4E, 0x94, 0x01, 0xF4, 0x5B, 0xA4, 0x01, 0x72,
 0x47, 0x61, 0x08, 0x6A, 0x43, 0xC0, 0x10, 0xF0,
 0x23, 0x6B, 0x10, 0xF0, 0x30, 0x6A, 0xC1, 0xF7,
-0x58, 0x9A, 0xEE, 0xF2, 0x64, 0x9B, 0x43, 0xEB,
-0x20, 0x60, 0x10, 0xF0, 0x23, 0x6B, 0xEE, 0xF2,
+0x58, 0x9A, 0x4E, 0xF2, 0x64, 0x9B, 0x43, 0xEB,
+0x20, 0x60, 0x10, 0xF0, 0x23, 0x6B, 0x4E, 0xF2,
 0x68, 0x9B, 0x49, 0xE3, 0xE0, 0xF1, 0x1F, 0x6B,
 0x4C, 0xEB, 0x04, 0x2B, 0x42, 0x32, 0x64, 0xC0,
 0x46, 0x32, 0x05, 0x10, 0x42, 0x32, 0x00, 0x6B,
 0x46, 0x32, 0x64, 0xC0, 0x01, 0x4A, 0x10, 0xF0,
-0x23, 0x6B, 0xEE, 0xF2, 0x6C, 0x9B, 0x4C, 0xEB,
+0x23, 0x6B, 0x4E, 0xF2, 0x6C, 0x9B, 0x4C, 0xEB,
 0x62, 0x33, 0x62, 0x33, 0x65, 0xC0, 0x1F, 0xF7,
 0x00, 0x6B, 0x4C, 0xEB, 0x62, 0x33, 0x66, 0xC0,
 0x04, 0x10, 0x00, 0x6A, 0x44, 0xC0, 0x45, 0xC0,
 0x46, 0xC0, 0x47, 0xC0, 0x02, 0x6B, 0x00, 0x6A,
 0x68, 0xC0, 0x49, 0xC0, 0x6A, 0xC0, 0x4B, 0xC0,
 0x4F, 0x94, 0x0C, 0x6D, 0x00, 0x6E, 0x00, 0x18,
-0x0B, 0xD4, 0x00, 0x18, 0x6E, 0xC3, 0xA2, 0x67,
+0xE3, 0xD3, 0x00, 0x18, 0x6E, 0xC3, 0xA2, 0x67,
 0x91, 0x67, 0x4E, 0xD2, 0x00, 0x18, 0x78, 0xC3,
 0x02, 0x67, 0x82, 0x67, 0xA2, 0x99, 0xAF, 0x16,
 0x4F, 0x94, 0x00, 0x6D, 0xC5, 0x67, 0x00, 0x18,
-0x0B, 0xD4, 0x00, 0x18, 0x6E, 0xC3, 0xA2, 0x67,
+0xE3, 0xD3, 0x00, 0x18, 0x6E, 0xC3, 0xA2, 0x67,
 0x91, 0x67, 0x4E, 0xD2, 0x00, 0x18, 0x78, 0xC3,
 0x02, 0x67, 0x82, 0x67, 0x00, 0x6D, 0x00, 0x18,
 0x76, 0xC3, 0x90, 0x67, 0x01, 0x6D, 0x9F, 0x16,
@@ -36511,26 +36350,26 @@ u8 array_mp_8821c_fw_spic[] = {
 0x52, 0x2A, 0x71, 0xA1, 0x50, 0x2B, 0x42, 0x99,
 0x08, 0x5A, 0x4D, 0x61, 0x10, 0xF0, 0x30, 0x6A,
 0x10, 0xF0, 0x23, 0x6C, 0xC1, 0xF7, 0x58, 0x9A,
-0xEE, 0xF2, 0x90, 0x9C, 0x43, 0xEC, 0x28, 0x60,
-0x10, 0xF0, 0x23, 0x6C, 0xEE, 0xF2, 0x88, 0x9C,
+0x4E, 0xF2, 0x90, 0x9C, 0x43, 0xEC, 0x28, 0x60,
+0x10, 0xF0, 0x23, 0x6C, 0x4E, 0xF2, 0x88, 0x9C,
 0x51, 0xE4, 0xE0, 0xF1, 0x1F, 0x6A, 0x8C, 0xEA,
 0x0D, 0x2A, 0x00, 0xF2, 0x00, 0x5C, 0x05, 0x60,
 0x40, 0xC0, 0x41, 0xC0, 0x42, 0xC0, 0x43, 0xC0,
 0x1B, 0x10, 0x82, 0x34, 0x86, 0x34, 0x40, 0xC0,
 0xFF, 0x4C, 0x03, 0x10, 0x82, 0x34, 0x60, 0xC0,
-0x86, 0x34, 0x10, 0xF0, 0x23, 0x6A, 0xEE, 0xF2,
+0x86, 0x34, 0x10, 0xF0, 0x23, 0x6A, 0x4E, 0xF2,
 0x4C, 0x9A, 0x83, 0xC0, 0x8C, 0xEA, 0x42, 0x32,
 0x42, 0x32, 0x41, 0xC0, 0x1F, 0xF7, 0x00, 0x6A,
 0x8C, 0xEA, 0x42, 0x32, 0x42, 0xC0, 0x04, 0x10,
 0x60, 0xC0, 0x61, 0xC0, 0x62, 0xC0, 0x63, 0xC0,
 0x00, 0x6A, 0x02, 0x6B, 0x66, 0xC0, 0x44, 0xC0,
 0x45, 0xC0, 0x47, 0xC0, 0x4E, 0x94, 0x08, 0x6D,
-0x00, 0x6E, 0x00, 0x18, 0x0B, 0xD4, 0x00, 0x18,
+0x00, 0x6E, 0x00, 0x18, 0xE3, 0xD3, 0x00, 0x18,
 0x6E, 0xC3, 0xA2, 0x67, 0x91, 0x67, 0x4E, 0xD2,
 0x00, 0x18, 0x78, 0xC3, 0xA2, 0x99, 0x02, 0x67,
 0x82, 0x67, 0xF8, 0x4D, 0x28, 0x16, 0x4E, 0x94,
 0x00, 0x6D, 0x02, 0x10, 0x00, 0x6C, 0xA4, 0x67,
-0xC5, 0x67, 0x00, 0x18, 0x0B, 0xD4, 0x00, 0x18,
+0xC5, 0x67, 0x00, 0x18, 0xE3, 0xD3, 0x00, 0x18,
 0x6E, 0xC3, 0xA2, 0x67, 0x91, 0x67, 0x4E, 0xD2,
 0x00, 0x18, 0x78, 0xC3, 0x02, 0x67, 0x82, 0x67,
 0xA2, 0x99, 0x75, 0x17, 0xA2, 0x99, 0x13, 0x5D,
@@ -36547,7 +36386,7 @@ u8 array_mp_8821c_fw_spic[] = {
 0x22, 0x67, 0x82, 0x67, 0x00, 0x18, 0x76, 0xC3,
 0x91, 0x67, 0x01, 0x6D, 0x00, 0x18, 0x77, 0xC3,
 0x4F, 0x94, 0x0D, 0x6D, 0x00, 0x6E, 0x00, 0x18,
-0x0B, 0xD4, 0x01, 0xF4, 0x59, 0xA0, 0x01, 0x4A,
+0xE3, 0xD3, 0x01, 0xF4, 0x59, 0xA0, 0x01, 0x4A,
 0x01, 0xF4, 0x59, 0xC0, 0x01, 0xF4, 0x59, 0xA0,
 0x03, 0x5A, 0xA0, 0xF3, 0x0B, 0x61, 0x01, 0x6A,
 0x01, 0xF4, 0x5B, 0xC0, 0xA7, 0x13, 0x00, 0x18,
@@ -36559,24 +36398,24 @@ u8 array_mp_8821c_fw_spic[] = {
 0x90, 0xF4, 0x1C, 0x4A, 0x84, 0x34, 0x91, 0xE2,
 0x00, 0x6D, 0x00, 0xF2, 0x00, 0x6E, 0x00, 0x18,
 0xBE, 0xCA, 0x00, 0x6D, 0xC5, 0x67, 0x90, 0x67,
-0x00, 0x18, 0x0B, 0xD4, 0x00, 0x18, 0x6E, 0xC3,
+0x00, 0x18, 0xE3, 0xD3, 0x00, 0x18, 0x6E, 0xC3,
 0xA2, 0x67, 0x91, 0x67, 0x4E, 0xD2, 0x00, 0x18,
 0x78, 0xC3, 0xA2, 0x99, 0x02, 0x67, 0x82, 0x67,
 0x00, 0x18, 0x76, 0xC3, 0x90, 0x67, 0x01, 0x6D,
 0x00, 0x18, 0x77, 0xC3, 0x4E, 0x94, 0x0D, 0x6D,
-0x00, 0x6E, 0x00, 0x18, 0x0B, 0xD4, 0x01, 0x6B,
+0x00, 0x6E, 0x00, 0x18, 0xE3, 0xD3, 0x01, 0x6B,
 0x30, 0xF0, 0x21, 0x6A, 0xD1, 0xF0, 0x72, 0xC2,
 0x69, 0x13, 0x00, 0x18, 0x6E, 0xC3, 0x02, 0x67,
 0x40, 0x34, 0x30, 0xF0, 0x21, 0x6A, 0x90, 0xF4,
 0x1C, 0x4A, 0x84, 0x34, 0x91, 0xE2, 0x00, 0x6D,
 0x00, 0xF2, 0x00, 0x6E, 0x00, 0x18, 0xBE, 0xCA,
 0x42, 0x99, 0x00, 0x6D, 0xC5, 0x67, 0x90, 0x67,
-0x50, 0xD2, 0x00, 0x18, 0x0B, 0xD4, 0x00, 0x18,
+0x50, 0xD2, 0x00, 0x18, 0xE3, 0xD3, 0x00, 0x18,
 0x6E, 0xC3, 0xA2, 0x67, 0x91, 0x67, 0x4F, 0xD2,
 0x00, 0x18, 0x78, 0xC3, 0x50, 0x95, 0x02, 0x67,
 0x82, 0x67, 0x00, 0x18, 0x76, 0xC3, 0x90, 0x67,
 0x01, 0x6D, 0x00, 0x18, 0x77, 0xC3, 0x4F, 0x94,
-0x0D, 0x6D, 0x00, 0x6E, 0x00, 0x18, 0x0B, 0xD4,
+0x0D, 0x6D, 0x00, 0x6E, 0x00, 0x18, 0xE3, 0xD3,
 0x4E, 0x93, 0x01, 0x6A, 0x01, 0xF4, 0x5A, 0xC3,
 0x39, 0x13, 0x00, 0x18, 0x6E, 0xC3, 0x4F, 0xD2,
 0x40, 0x30, 0x30, 0xF0, 0x21, 0x6A, 0x90, 0xF4,
@@ -36597,24 +36436,24 @@ u8 array_mp_8821c_fw_spic[] = {
 0x4B, 0xC0, 0x4E, 0x95, 0x15, 0x5D, 0x06, 0x60,
 0x4E, 0x92, 0xFF, 0xF7, 0x1F, 0x6D, 0x4F, 0x94,
 0x4C, 0xED, 0x02, 0x10, 0x4F, 0x94, 0x14, 0x6D,
-0x00, 0x6E, 0x00, 0x18, 0x0B, 0xD4, 0x00, 0x18,
+0x00, 0x6E, 0x00, 0x18, 0xE3, 0xD3, 0x00, 0x18,
 0x6E, 0xC3, 0xA2, 0x67, 0x91, 0x67, 0x4F, 0xD2,
 0x00, 0x18, 0x78, 0xC3, 0x4E, 0x93, 0x02, 0x67,
 0x14, 0x5B, 0x47, 0x61, 0xA3, 0x67, 0x82, 0x67,
 0xEC, 0x4D, 0x3F, 0x17, 0x46, 0x73, 0x18, 0x61,
 0x4E, 0x94, 0x08, 0x5C, 0x41, 0x61, 0x04, 0x6A,
 0x43, 0xC0, 0x08, 0x6A, 0x47, 0xC0, 0x4F, 0x94,
-0x08, 0x6D, 0x00, 0x6E, 0x00, 0x18, 0x0B, 0xD4,
+0x08, 0x6D, 0x00, 0x6E, 0x00, 0x18, 0xE3, 0xD3,
 0x00, 0x18, 0x6E, 0xC3, 0xA2, 0x67, 0x91, 0x67,
 0x4F, 0xD2, 0x00, 0x18, 0x78, 0xC3, 0x4E, 0x95,
 0x02, 0x67, 0x82, 0x67, 0xF8, 0x4D, 0x25, 0x17,
 0x2E, 0x6A, 0x41, 0xC0, 0x01, 0x6A, 0x42, 0xC0,
 0x43, 0xC0, 0x46, 0xC0, 0x02, 0x6A, 0x47, 0xC0,
 0x10, 0x6A, 0x57, 0xC0, 0x10, 0xF0, 0x23, 0x6A,
-0xEE, 0xF2, 0x54, 0x9A, 0x04, 0x6B, 0x65, 0xC0,
-0x46, 0xD8, 0x10, 0xF0, 0x23, 0x6A, 0x8E, 0xF2,
+0x4E, 0xF2, 0x54, 0x9A, 0x04, 0x6B, 0x65, 0xC0,
+0x46, 0xD8, 0x10, 0xF0, 0x23, 0x6A, 0xEE, 0xF1,
 0x48, 0x9A, 0x20, 0x6D, 0x00, 0x6E, 0x47, 0xD8,
-0x4F, 0x94, 0x00, 0x18, 0x0B, 0xD4, 0x00, 0x18,
+0x4F, 0x94, 0x00, 0x18, 0xE3, 0xD3, 0x00, 0x18,
 0x6E, 0xC3, 0xA2, 0x67, 0x91, 0x67, 0x4F, 0xD2,
 0x00, 0x18, 0x78, 0xC3, 0x4E, 0x95, 0x02, 0x67,
 0x20, 0x5D, 0x03, 0x61, 0x82, 0x67, 0xE0, 0x4D,
@@ -36625,7 +36464,7 @@ u8 array_mp_8821c_fw_spic[] = {
 0x82, 0x67, 0x00, 0x6D, 0x00, 0x18, 0x76, 0xC3,
 0x90, 0x67, 0x00, 0x6D, 0x00, 0x18, 0x77, 0xC3,
 0x4E, 0x94, 0x0D, 0x6D, 0x00, 0x6E, 0x00, 0x18,
-0x0B, 0xD4, 0x00, 0x18, 0xBF, 0xD3, 0x7A, 0x12,
+0xE3, 0xD3, 0x00, 0x18, 0x97, 0xD3, 0x7A, 0x12,
 0x10, 0xF0, 0x30, 0x6A, 0xC1, 0xF7, 0x58, 0x9A,
 0x02, 0x99, 0x4F, 0xD2, 0x52, 0xA1, 0x71, 0xA1,
 0x40, 0x32, 0x00, 0xF6, 0x60, 0x33, 0x40, 0x32,
@@ -36641,7 +36480,7 @@ u8 array_mp_8821c_fw_spic[] = {
 0xBE, 0xCA, 0x30, 0xF0, 0x20, 0x6A, 0x4E, 0x94,
 0x4F, 0x96, 0xAE, 0xF5, 0x44, 0x9A, 0xB0, 0x67,
 0x40, 0xEA, 0x50, 0x94, 0xFF, 0xF7, 0x1F, 0x6D,
-0x0C, 0xED, 0x01, 0x6E, 0x00, 0x18, 0x0B, 0xD4,
+0x0C, 0xED, 0x01, 0x6E, 0x00, 0x18, 0xE3, 0xD3,
 0x80, 0xF0, 0x1E, 0x2A, 0x9A, 0x10, 0x4E, 0x94,
 0x4F, 0x95, 0xA3, 0xEC, 0x2A, 0x60, 0x00, 0x18,
 0x6E, 0xC3, 0x52, 0xD2, 0x40, 0x33, 0x30, 0xF0,
@@ -36652,7 +36491,7 @@ u8 array_mp_8821c_fw_spic[] = {
 0x6B, 0xE2, 0x53, 0xD2, 0x30, 0xF0, 0x20, 0x6A,
 0x53, 0x95, 0xAE, 0xF5, 0x44, 0x9A, 0x40, 0xEA,
 0x53, 0x92, 0x52, 0x94, 0xFF, 0xF7, 0x1F, 0x6D,
-0x4C, 0xED, 0x01, 0x6E, 0x00, 0x18, 0x0B, 0xD4,
+0x4C, 0xED, 0x01, 0x6E, 0x00, 0x18, 0xE3, 0xD3,
 0x70, 0x22, 0x51, 0x93, 0x4F, 0x94, 0x83, 0xE3,
 0x69, 0x10, 0x00, 0x18, 0x6E, 0xC3, 0xA2, 0x67,
 0x91, 0x67, 0x4E, 0xD2, 0x00, 0x18, 0x78, 0xC3,
@@ -36667,7 +36506,7 @@ u8 array_mp_8821c_fw_spic[] = {
 0x20, 0x6A, 0x4E, 0x94, 0x50, 0x96, 0xAE, 0xF5,
 0x44, 0x9A, 0x00, 0xF2, 0x00, 0x6D, 0x40, 0xEA,
 0x52, 0x94, 0x00, 0xF2, 0x00, 0x6D, 0x01, 0x6E,
-0x00, 0x18, 0x0B, 0xD4, 0x36, 0x22, 0x1F, 0xF6,
+0x00, 0x18, 0xE3, 0xD3, 0x36, 0x22, 0x1F, 0xF6,
 0x00, 0x48, 0x36, 0x20, 0x51, 0x94, 0x4E, 0xD4,
 0x6A, 0x17, 0x4E, 0x95, 0x4F, 0x92, 0x43, 0xED,
 0xC0, 0x60, 0x00, 0x18, 0x6E, 0xC3, 0x51, 0xD2,
@@ -36679,7 +36518,7 @@ u8 array_mp_8821c_fw_spic[] = {
 0x44, 0x9A, 0x8F, 0xE3, 0xA3, 0x67, 0x52, 0xD3,
 0x40, 0xEA, 0x52, 0x92, 0x51, 0x94, 0xFF, 0xF7,
 0x1F, 0x6D, 0x4C, 0xED, 0x01, 0x6E, 0x00, 0x18,
-0x0B, 0xD4, 0x07, 0x22, 0x4E, 0x93, 0x4F, 0x94,
+0xE3, 0xD3, 0x07, 0x22, 0x4E, 0x93, 0x4F, 0x94,
 0x01, 0xE3, 0x83, 0xE0, 0x01, 0x6D, 0x4E, 0xD5,
 0x06, 0x10, 0x00, 0x6A, 0x4E, 0xD2, 0x03, 0x10,
 0x01, 0x6B, 0x00, 0x68, 0x4E, 0xD3, 0x00, 0x18,
@@ -36708,7 +36547,7 @@ u8 array_mp_8821c_fw_spic[] = {
 0x30, 0xF0, 0x20, 0x6A, 0xAE, 0xF5, 0x44, 0x9A,
 0xB1, 0xE3, 0xFF, 0x6D, 0x01, 0x4D, 0x0E, 0x06,
 0x40, 0xEA, 0x10, 0xF0, 0x23, 0x6B, 0x4F, 0x94,
-0xEE, 0xF2, 0x60, 0x9B, 0x0E, 0x02, 0x6D, 0xE4,
+0x4E, 0xF2, 0x60, 0x9B, 0x0E, 0x02, 0x6D, 0xE4,
 0x4E, 0x04, 0xA0, 0xA2, 0x01, 0x4A, 0x8A, 0xEA,
 0xA0, 0xC3, 0x01, 0x4B, 0xFA, 0x61, 0x4F, 0x95,
 0x00, 0xF1, 0x00, 0x4D, 0x02, 0xF0, 0x00, 0x75,
@@ -36719,7 +36558,7 @@ u8 array_mp_8821c_fw_spic[] = {
 0x8E, 0xF5, 0x44, 0x9A, 0x02, 0x6C, 0x40, 0xEA,
 0x4F, 0xD0, 0x00, 0x68, 0xFF, 0x6E, 0x0E, 0x04,
 0x00, 0x6D, 0x01, 0x4E, 0x00, 0x18, 0xBE, 0xCA,
-0x10, 0xF0, 0x23, 0x6A, 0xEE, 0xF2, 0x60, 0x9A,
+0x10, 0xF0, 0x23, 0x6A, 0x4E, 0xF2, 0x60, 0x9A,
 0x4E, 0x04, 0x0E, 0x02, 0x6D, 0xE0, 0xA0, 0xA3,
 0x01, 0x4B, 0xA0, 0xC2, 0x01, 0x4A, 0x8A, 0xEA,
 0xFA, 0x61, 0x50, 0x93, 0x30, 0xF0, 0x20, 0x6A,
@@ -36741,7 +36580,7 @@ u8 array_mp_8821c_fw_spic[] = {
 0x4E, 0xD4, 0x41, 0xC0, 0x25, 0x6A, 0x44, 0xC0,
 0x01, 0x6A, 0x4B, 0xEA, 0x45, 0xC0, 0x01, 0x6A,
 0x46, 0xC0, 0x4E, 0x92, 0x4F, 0x94, 0x00, 0x6E,
-0x4C, 0xED, 0x00, 0x18, 0x0B, 0xD4, 0x00, 0x18,
+0x4C, 0xED, 0x00, 0x18, 0xE3, 0xD3, 0x00, 0x18,
 0x6E, 0xC3, 0xA2, 0x67, 0x91, 0x67, 0x4F, 0xD2,
 0x00, 0x18, 0x78, 0xC3, 0x4E, 0x95, 0x82, 0x67,
 0x02, 0x67, 0x00, 0x18, 0x76, 0xC3, 0x5F, 0xF2,
@@ -36753,7 +36592,7 @@ u8 array_mp_8821c_fw_spic[] = {
 0xA0, 0x35, 0xA4, 0x35, 0x00, 0x18, 0x76, 0xC3,
 0x91, 0x67, 0x01, 0x6D, 0x00, 0x18, 0x77, 0xC3,
 0x4F, 0x94, 0x0D, 0x6D, 0x00, 0x6E, 0x00, 0x18,
-0x0B, 0xD4, 0x4E, 0x95, 0xE1, 0xF3, 0x0C, 0xC5,
+0xE3, 0xD3, 0x4E, 0x95, 0xE1, 0xF3, 0x0C, 0xC5,
 0xE1, 0xF3, 0x10, 0xDD, 0xE1, 0xF3, 0x14, 0xDD,
 0x75, 0x10, 0x30, 0xF0, 0x20, 0x6A, 0x8E, 0xF5,
 0x48, 0x9A, 0x40, 0xEA, 0x30, 0xF0, 0x20, 0x6A,
@@ -36781,29 +36620,29 @@ u8 array_mp_8821c_fw_spic[] = {
 0x78, 0xC3, 0x22, 0x67, 0x82, 0x67, 0x00, 0x6D,
 0x00, 0x18, 0x76, 0xC3, 0x91, 0x67, 0x00, 0x6D,
 0x00, 0x18, 0x77, 0xC3, 0x4E, 0x94, 0x0D, 0x6D,
-0x00, 0x6E, 0x00, 0x18, 0x0B, 0xD4, 0x9D, 0x67,
+0x00, 0x6E, 0x00, 0x18, 0xE3, 0xD3, 0x9D, 0x67,
 0x30, 0xF1, 0xAC, 0x44, 0x80, 0xA5, 0x4F, 0x95,
 0xE1, 0xF3, 0x8C, 0xC0, 0xE1, 0xF3, 0xB0, 0xD8,
 0xE1, 0xF3, 0xB4, 0xD8, 0x57, 0x97, 0x56, 0x91,
 0x55, 0x90, 0x2C, 0x63, 0x00, 0xEF, 0x00, 0x65,
 0xFC, 0x63, 0x07, 0x62, 0x06, 0xD1, 0x05, 0xD0,
-0x10, 0xF0, 0x23, 0x6B, 0x0E, 0xF3, 0x04, 0x4B,
+0x10, 0xF0, 0x23, 0x6B, 0x6E, 0xF2, 0x04, 0x4B,
 0x30, 0xF0, 0x20, 0x69, 0xFF, 0x68, 0xAC, 0xE8,
 0xCE, 0xF4, 0x50, 0x99, 0xA0, 0x9B, 0x82, 0xF0,
 0x00, 0x6C, 0x01, 0x6E, 0x40, 0xEA, 0x10, 0xF0,
-0x23, 0x6B, 0x8E, 0xF2, 0xB0, 0x9B, 0xCE, 0xF4,
+0x23, 0x6B, 0xEE, 0xF1, 0xB0, 0x9B, 0xCE, 0xF4,
 0x50, 0x99, 0x00, 0x6C, 0x01, 0x6E, 0x40, 0xEA,
 0x01, 0x6D, 0xA1, 0xF4, 0x18, 0x6C, 0xAB, 0xED,
-0x00, 0x18, 0xC2, 0xD2, 0x01, 0x70, 0x0F, 0x60,
+0x00, 0x18, 0x9A, 0xD2, 0x01, 0x70, 0x0F, 0x60,
 0x03, 0x20, 0x02, 0x70, 0x16, 0x60, 0x1F, 0x10,
-0x10, 0xF0, 0x23, 0x6B, 0x0E, 0xF3, 0x04, 0x4B,
+0x10, 0xF0, 0x23, 0x6B, 0x6E, 0xF2, 0x04, 0x4B,
 0x60, 0x9B, 0x6D, 0xEA, 0x10, 0xF0, 0x23, 0x6B,
-0x0E, 0xF3, 0x68, 0x9B, 0x13, 0x10, 0x10, 0xF0,
-0x23, 0x6B, 0x0E, 0xF3, 0x6C, 0x9B, 0x6D, 0xEA,
-0x10, 0xF0, 0x23, 0x6B, 0x0E, 0xF3, 0x70, 0x9B,
-0x09, 0x10, 0x10, 0xF0, 0x23, 0x6B, 0x0E, 0xF3,
+0x6E, 0xF2, 0x68, 0x9B, 0x13, 0x10, 0x10, 0xF0,
+0x23, 0x6B, 0x6E, 0xF2, 0x6C, 0x9B, 0x6D, 0xEA,
+0x10, 0xF0, 0x23, 0x6B, 0x6E, 0xF2, 0x70, 0x9B,
+0x09, 0x10, 0x10, 0xF0, 0x23, 0x6B, 0x6E, 0xF2,
 0x74, 0x9B, 0x6D, 0xEA, 0x10, 0xF0, 0x23, 0x6B,
-0x0E, 0xF3, 0x78, 0x9B, 0x6C, 0xEA, 0x30, 0xF0,
+0x6E, 0xF2, 0x78, 0x9B, 0x6C, 0xEA, 0x30, 0xF0,
 0x20, 0x6B, 0xCE, 0xF4, 0x70, 0x9B, 0x01, 0x6D,
 0xA1, 0xF4, 0x18, 0x6C, 0xAB, 0xED, 0xC2, 0x67,
 0x40, 0xEB, 0x07, 0x97, 0x06, 0x91, 0x05, 0x90,
@@ -36812,41 +36651,41 @@ u8 array_mp_8821c_fw_spic[] = {
 0x42, 0xF1, 0x18, 0x6C, 0x01, 0x6D, 0x02, 0x6E,
 0x40, 0xEA, 0x05, 0x97, 0x05, 0x6A, 0x03, 0x63,
 0x00, 0xEF, 0x00, 0x65, 0x10, 0xF0, 0x23, 0x6B,
-0xEE, 0xF1, 0x78, 0x9B, 0x10, 0xF0, 0x23, 0x6A,
+0x4E, 0xF1, 0x78, 0x9B, 0x10, 0xF0, 0x23, 0x6A,
 0x63, 0xF6, 0x15, 0x4A, 0x40, 0xDB, 0x01, 0x4A,
 0x40, 0xDB, 0xF4, 0x17, 0xFB, 0x63, 0x09, 0x62,
 0x08, 0xD1, 0x07, 0xD0, 0x10, 0xF0, 0x23, 0x6A,
-0xEE, 0xF1, 0x7C, 0x9A, 0x10, 0xF0, 0x23, 0x6A,
-0xEE, 0xF1, 0x58, 0x9A, 0x01, 0x6C, 0xA4, 0x67,
+0x4E, 0xF1, 0x7C, 0x9A, 0x10, 0xF0, 0x23, 0x6A,
+0x4E, 0xF1, 0x58, 0x9A, 0x01, 0x6C, 0xA4, 0x67,
 0x60, 0xDA, 0x00, 0x18, 0x76, 0xC9, 0x30, 0xF0,
 0x20, 0x6A, 0x00, 0xF1, 0x00, 0x4A, 0x10, 0xF0,
-0x23, 0x6B, 0xEF, 0x9A, 0x0E, 0xF2, 0x60, 0x9B,
+0x23, 0x6B, 0xEF, 0x9A, 0x6E, 0xF1, 0x60, 0x9B,
 0x8C, 0x9A, 0xCE, 0x9A, 0xAD, 0x9A, 0xE0, 0xDB,
-0x10, 0xF0, 0x23, 0x6B, 0x0E, 0xF2, 0x64, 0x9B,
+0x10, 0xF0, 0x23, 0x6B, 0x6E, 0xF1, 0x64, 0x9B,
 0x00, 0x68, 0xC0, 0xDB, 0x10, 0xF0, 0x23, 0x6B,
-0x0E, 0xF2, 0x68, 0x9B, 0xA0, 0xDB, 0x10, 0xF0,
-0x23, 0x6B, 0x0E, 0xF2, 0x6C, 0x9B, 0x80, 0xDB,
-0x10, 0xF0, 0x23, 0x6B, 0x89, 0x9A, 0x0E, 0xF2,
+0x6E, 0xF1, 0x68, 0x9B, 0xA0, 0xDB, 0x10, 0xF0,
+0x23, 0x6B, 0x6E, 0xF1, 0x6C, 0x9B, 0x80, 0xDB,
+0x10, 0xF0, 0x23, 0x6B, 0x89, 0x9A, 0x6E, 0xF1,
 0x70, 0x9B, 0x80, 0xDB, 0x68, 0x9A, 0x10, 0xF0,
-0x23, 0x6A, 0x0E, 0xF2, 0x54, 0x9A, 0x60, 0xDA,
+0x23, 0x6A, 0x6E, 0xF1, 0x54, 0x9A, 0x60, 0xDA,
 0x30, 0xF0, 0x20, 0x6A, 0x60, 0xF1, 0x48, 0xAA,
 0x0B, 0x10, 0x30, 0xF0, 0x20, 0x6B, 0x08, 0x34,
 0x2E, 0xF2, 0x0C, 0x4B, 0x6D, 0xE4, 0x60, 0x9B,
 0x05, 0x23, 0x01, 0x48, 0xFF, 0x6B, 0x6C, 0xE8,
 0x43, 0xE8, 0xF3, 0x61, 0x10, 0xF0, 0x23, 0x6A,
-0x0E, 0xF2, 0x78, 0x9A, 0x7F, 0x6A, 0x00, 0x69,
+0x6E, 0xF1, 0x78, 0x9A, 0x7F, 0x6A, 0x00, 0x69,
 0x80, 0xA3, 0x20, 0xF0, 0x20, 0x6D, 0x00, 0xF1,
 0x00, 0x4D, 0x8C, 0xEA, 0x40, 0xC3, 0x30, 0xF0,
 0x20, 0x6B, 0xAE, 0xF2, 0x40, 0x9B, 0x10, 0xF0,
-0x23, 0x6B, 0x0E, 0xF2, 0xDC, 0x9B, 0x91, 0x67,
+0x23, 0x6B, 0x6E, 0xF1, 0xDC, 0x9B, 0x91, 0x67,
 0x48, 0x6F, 0x04, 0xD1, 0x05, 0xD1, 0x40, 0xEA,
 0x30, 0xF0, 0x20, 0x6B, 0xAE, 0xF2, 0x40, 0x9B,
-0x10, 0xF0, 0x23, 0x6B, 0x2E, 0xF2, 0xC0, 0x9B,
+0x10, 0xF0, 0x23, 0x6B, 0x8E, 0xF1, 0xC0, 0x9B,
 0x20, 0xF0, 0x20, 0x6D, 0x91, 0x67, 0xAD, 0xF1,
 0x08, 0x4D, 0x00, 0xF4, 0x00, 0x6F, 0x04, 0xD1,
 0x05, 0xD1, 0x40, 0xEA, 0x30, 0xF0, 0x20, 0x6B,
 0xAE, 0xF2, 0x40, 0x9B, 0x10, 0xF0, 0x23, 0x6B,
-0x2E, 0xF2, 0xC4, 0x9B, 0x20, 0xF0, 0x21, 0x6D,
+0x8E, 0xF1, 0xC4, 0x9B, 0x20, 0xF0, 0x21, 0x6D,
 0x00, 0x37, 0x91, 0x67, 0x15, 0xF0, 0x00, 0x4D,
 0xE8, 0x37, 0x04, 0xD1, 0x05, 0xD1, 0x40, 0xEA,
 0x00, 0x1C, 0x96, 0x45, 0xFF, 0x17, 0x00, 0x65,
@@ -36870,14 +36709,14 @@ u8 array_mp_8821c_fw_spic[] = {
 0x02, 0xF0, 0x00, 0x74, 0x01, 0x60, 0x22, 0x2C,
 0x1F, 0xF7, 0x00, 0x6A, 0x6C, 0xEA, 0x02, 0xF0,
 0x00, 0x72, 0x01, 0x60, 0x07, 0x2A, 0x10, 0xF0,
-0x23, 0x6A, 0x2E, 0xF2, 0x88, 0x9A, 0x91, 0xE3,
+0x23, 0x6A, 0x8E, 0xF1, 0x88, 0x9A, 0x91, 0xE3,
 0x60, 0xA4, 0x0B, 0x10, 0x10, 0xF0, 0x23, 0x6A,
-0x2E, 0xF2, 0x88, 0x9A, 0x10, 0xF0, 0x23, 0x6A,
-0x2E, 0xF2, 0x4C, 0x9A, 0x91, 0xE3, 0x4D, 0xE3,
+0x8E, 0xF1, 0x88, 0x9A, 0x10, 0xF0, 0x23, 0x6A,
+0x8E, 0xF1, 0x4C, 0x9A, 0x91, 0xE3, 0x4D, 0xE3,
 0x60, 0xA3, 0x01, 0x6A, 0x00, 0xF6, 0x60, 0x33,
 0x44, 0xEE, 0x00, 0xF6, 0x63, 0x33, 0x4F, 0xEA,
 0x6C, 0xEA, 0x41, 0x10, 0x10, 0xF0, 0x23, 0x6C,
-0x2E, 0xF2, 0x8C, 0x9C, 0xAF, 0xED, 0x8D, 0xE3,
+0x8E, 0xF1, 0x8C, 0x9C, 0xAF, 0xED, 0x8D, 0xE3,
 0x80, 0xA3, 0x00, 0xF6, 0x80, 0x34, 0x00, 0xF6,
 0x83, 0x34, 0xAC, 0xEC, 0x43, 0x10, 0x30, 0xF0,
 0x20, 0x6C, 0xC0, 0xF1, 0x08, 0x4C, 0x9D, 0xE7,
@@ -36887,137 +36726,137 @@ u8 array_mp_8821c_fw_spic[] = {
 0x00, 0x74, 0x01, 0x60, 0x24, 0x2C, 0x1F, 0xF7,
 0x00, 0x6A, 0x6C, 0xEA, 0x02, 0xF0, 0x00, 0x72,
 0x01, 0x60, 0x07, 0x2A, 0x10, 0xF0, 0x23, 0x6A,
-0x2E, 0xF2, 0x88, 0x9A, 0x91, 0xE3, 0x60, 0xA4,
-0x0B, 0x10, 0x10, 0xF0, 0x23, 0x6A, 0x2E, 0xF2,
-0x88, 0x9A, 0x10, 0xF0, 0x23, 0x6A, 0x2E, 0xF2,
+0x8E, 0xF1, 0x88, 0x9A, 0x91, 0xE3, 0x60, 0xA4,
+0x0B, 0x10, 0x10, 0xF0, 0x23, 0x6A, 0x8E, 0xF1,
+0x88, 0x9A, 0x10, 0xF0, 0x23, 0x6A, 0x8E, 0xF1,
 0x4C, 0x9A, 0x91, 0xE3, 0x4D, 0xE3, 0x60, 0xA3,
 0x00, 0xF6, 0x60, 0x33, 0x01, 0x6A, 0x00, 0xF6,
 0x63, 0x33, 0x44, 0xEE, 0x6D, 0xEA, 0xFF, 0x6B,
 0x6C, 0xEA, 0x40, 0xC4, 0x0D, 0x10, 0x10, 0xF0,
-0x23, 0x6C, 0x2E, 0xF2, 0x8C, 0x9C, 0x8D, 0xE3,
+0x23, 0x6C, 0x8E, 0xF1, 0x8C, 0x9C, 0x8D, 0xE3,
 0x80, 0xA3, 0x00, 0xF6, 0x80, 0x34, 0x00, 0xF6,
 0x83, 0x34, 0xAD, 0xEC, 0x4C, 0xEC, 0x80, 0xC3,
 0x01, 0x90, 0x01, 0x63, 0x20, 0xE8, 0x00, 0x65,
 0xFF, 0x6A, 0x4C, 0xEC, 0xAC, 0xEA, 0x0B, 0x2A,
-0x10, 0xF0, 0x23, 0x6B, 0x2E, 0xF2, 0xB0, 0x9B,
-0x10, 0xF0, 0x23, 0x6E, 0x2E, 0xF2, 0xD4, 0x9E,
+0x10, 0xF0, 0x23, 0x6B, 0x8E, 0xF1, 0xB0, 0x9B,
+0x10, 0xF0, 0x23, 0x6E, 0x8E, 0xF1, 0xD4, 0x9E,
 0x60, 0x9D, 0xCC, 0xEB, 0x0C, 0x10, 0x01, 0x72,
-0x0B, 0x61, 0x10, 0xF0, 0x23, 0x6B, 0x2E, 0xF2,
-0xB0, 0x9B, 0x10, 0xF0, 0x23, 0x6E, 0x2E, 0xF2,
+0x0B, 0x61, 0x10, 0xF0, 0x23, 0x6B, 0x8E, 0xF1,
+0xB0, 0x9B, 0x10, 0xF0, 0x23, 0x6E, 0x8E, 0xF1,
 0xD8, 0x9E, 0x60, 0x9D, 0xCD, 0xEB, 0x60, 0xDD,
 0x05, 0x5C, 0x60, 0xF1, 0x06, 0x60, 0x10, 0xF0,
-0x23, 0x6B, 0x88, 0x34, 0x8E, 0xF0, 0x14, 0x4B,
+0x23, 0x6B, 0x88, 0x34, 0xED, 0xF7, 0x14, 0x4B,
 0x8D, 0xE3, 0x60, 0x9B, 0x00, 0xEB, 0x05, 0x2A,
-0x10, 0xF0, 0x23, 0x6A, 0x2E, 0xF2, 0x70, 0x9A,
+0x10, 0xF0, 0x23, 0x6A, 0x8E, 0xF1, 0x70, 0x9A,
 0x0D, 0x11, 0x01, 0x72, 0x10, 0x61, 0x10, 0xF0,
-0x23, 0x6A, 0x2E, 0xF2, 0x70, 0x9A, 0xFF, 0x6C,
+0x23, 0x6A, 0x8E, 0xF1, 0x70, 0x9A, 0xFF, 0x6C,
 0x40, 0x6D, 0x40, 0xA3, 0x8C, 0xEA, 0xAD, 0xEA,
 0x8C, 0xEA, 0x40, 0xC3, 0x40, 0xA3, 0x80, 0x4D,
 0xC0, 0x4D, 0x8C, 0xEA, 0x14, 0x10, 0x02, 0x72,
-0x07, 0x61, 0x10, 0xF0, 0x23, 0x6A, 0x2E, 0xF2,
+0x07, 0x61, 0x10, 0xF0, 0x23, 0x6A, 0x8E, 0xF1,
 0x70, 0x9A, 0xBF, 0x6A, 0x80, 0xA3, 0xF4, 0x10,
 0x03, 0x72, 0x20, 0xF1, 0x1A, 0x61, 0x10, 0xF0,
-0x23, 0x6A, 0x2E, 0xF2, 0x70, 0x9A, 0xFF, 0x6C,
+0x23, 0x6A, 0x8E, 0xF1, 0x70, 0x9A, 0xFF, 0x6C,
 0x40, 0x6D, 0x40, 0xA3, 0x8C, 0xEA, 0xAD, 0xEA,
 0xE7, 0x10, 0x07, 0x2A, 0x10, 0xF0, 0x23, 0x6A,
-0x2E, 0xF2, 0x7C, 0x9A, 0xFD, 0x6A, 0x80, 0xA3,
+0x8E, 0xF1, 0x7C, 0x9A, 0xFD, 0x6A, 0x80, 0xA3,
 0xDF, 0x10, 0x01, 0x72, 0x19, 0x61, 0x10, 0xF0,
-0x23, 0x6A, 0x2E, 0xF2, 0x90, 0x9A, 0xFF, 0x6A,
+0x23, 0x6A, 0x8E, 0xF1, 0x90, 0x9A, 0xFF, 0x6A,
 0x40, 0x6D, 0x60, 0xA4, 0x4C, 0xEB, 0xAD, 0xEB,
 0x4C, 0xEB, 0x60, 0xC4, 0x10, 0xF0, 0x23, 0x6B,
-0x2E, 0xF2, 0x9C, 0x9B, 0x01, 0x6D, 0x60, 0xA4,
+0x8E, 0xF1, 0x9C, 0x9B, 0x01, 0x6D, 0x60, 0xA4,
 0x4C, 0xEB, 0xAD, 0xEB, 0x4C, 0xEB, 0x60, 0xC4,
 0x60, 0xA4, 0x02, 0x6D, 0x4C, 0xEB, 0xE1, 0x10,
 0x02, 0x72, 0x0F, 0x61, 0x10, 0xF0, 0x23, 0x6A,
-0x2E, 0xF2, 0x70, 0x9A, 0xBF, 0x6A, 0x80, 0xA3,
+0x8E, 0xF1, 0x70, 0x9A, 0xBF, 0x6A, 0x80, 0xA3,
 0x8C, 0xEA, 0x40, 0xC3, 0x10, 0xF0, 0x23, 0x6A,
-0x2E, 0xF2, 0x7C, 0x9A, 0xFE, 0x6A, 0x80, 0xA3,
+0x8E, 0xF1, 0x7C, 0x9A, 0xFE, 0x6A, 0x80, 0xA3,
 0xB3, 0x10, 0x03, 0x72, 0xE0, 0xF0, 0x19, 0x61,
-0x10, 0xF0, 0x23, 0x6A, 0x2E, 0xF2, 0x90, 0x9A,
+0x10, 0xF0, 0x23, 0x6A, 0x8E, 0xF1, 0x90, 0x9A,
 0xFF, 0x6B, 0x40, 0x6D, 0x40, 0xA4, 0x6C, 0xEA,
 0xAD, 0xEA, 0x6C, 0xEA, 0x40, 0xC4, 0x10, 0xF0,
-0x23, 0x6A, 0x2E, 0xF2, 0x9C, 0x9A, 0x01, 0x6D,
+0x23, 0x6A, 0x8E, 0xF1, 0x9C, 0x9A, 0x01, 0x6D,
 0x40, 0xA4, 0x6C, 0xEA, 0x92, 0x10, 0x07, 0x2A,
-0x10, 0xF0, 0x23, 0x6A, 0x2E, 0xF2, 0x7C, 0x9A,
+0x10, 0xF0, 0x23, 0x6A, 0x8E, 0xF1, 0x7C, 0x9A,
 0xF7, 0x6A, 0x80, 0xA3, 0x95, 0x10, 0x01, 0x72,
-0x19, 0x61, 0x10, 0xF0, 0x23, 0x6A, 0x2E, 0xF2,
+0x19, 0x61, 0x10, 0xF0, 0x23, 0x6A, 0x8E, 0xF1,
 0x90, 0x9A, 0xFF, 0x6A, 0x40, 0x6D, 0x60, 0xA4,
 0x4C, 0xEB, 0xAD, 0xEB, 0x4C, 0xEB, 0x60, 0xC4,
-0x10, 0xF0, 0x23, 0x6B, 0x2E, 0xF2, 0x9C, 0x9B,
+0x10, 0xF0, 0x23, 0x6B, 0x8E, 0xF1, 0x9C, 0x9B,
 0x04, 0x6D, 0x60, 0xA4, 0x4C, 0xEB, 0xAD, 0xEB,
 0x4C, 0xEB, 0x60, 0xC4, 0x60, 0xA4, 0x08, 0x6D,
 0x4C, 0xEB, 0x97, 0x10, 0x02, 0x72, 0x0F, 0x61,
-0x10, 0xF0, 0x23, 0x6A, 0x2E, 0xF2, 0x70, 0x9A,
+0x10, 0xF0, 0x23, 0x6A, 0x8E, 0xF1, 0x70, 0x9A,
 0xBF, 0x6A, 0x80, 0xA3, 0x8C, 0xEA, 0x40, 0xC3,
-0x10, 0xF0, 0x23, 0x6A, 0x2E, 0xF2, 0x7C, 0x9A,
+0x10, 0xF0, 0x23, 0x6A, 0x8E, 0xF1, 0x7C, 0x9A,
 0xFB, 0x6A, 0x80, 0xA3, 0x69, 0x10, 0x03, 0x72,
 0xA0, 0xF0, 0x0F, 0x61, 0x10, 0xF0, 0x23, 0x6A,
-0x2E, 0xF2, 0x90, 0x9A, 0xFF, 0x6B, 0x40, 0x6D,
+0x8E, 0xF1, 0x90, 0x9A, 0xFF, 0x6B, 0x40, 0x6D,
 0x40, 0xA4, 0x6C, 0xEA, 0xAD, 0xEA, 0x6C, 0xEA,
-0x40, 0xC4, 0x10, 0xF0, 0x23, 0x6A, 0x2E, 0xF2,
+0x40, 0xC4, 0x10, 0xF0, 0x23, 0x6A, 0x8E, 0xF1,
 0x9C, 0x9A, 0x04, 0x6D, 0x40, 0xA4, 0x6C, 0xEA,
 0x48, 0x10, 0x07, 0x2A, 0x10, 0xF0, 0x23, 0x6A,
-0x2E, 0xF2, 0x7C, 0x9A, 0xDF, 0x6A, 0x80, 0xA3,
+0x8E, 0xF1, 0x7C, 0x9A, 0xDF, 0x6A, 0x80, 0xA3,
 0x4B, 0x10, 0x01, 0x72, 0x19, 0x61, 0x10, 0xF0,
-0x23, 0x6A, 0x2E, 0xF2, 0x90, 0x9A, 0xFF, 0x6A,
+0x23, 0x6A, 0x8E, 0xF1, 0x90, 0x9A, 0xFF, 0x6A,
 0x40, 0x6D, 0x60, 0xA4, 0x4C, 0xEB, 0xAD, 0xEB,
 0x4C, 0xEB, 0x60, 0xC4, 0x10, 0xF0, 0x23, 0x6B,
-0x2E, 0xF2, 0x9C, 0x9B, 0x10, 0x6D, 0x60, 0xA4,
+0x8E, 0xF1, 0x9C, 0x9B, 0x10, 0x6D, 0x60, 0xA4,
 0x4C, 0xEB, 0xAD, 0xEB, 0x4C, 0xEB, 0x60, 0xC4,
 0x60, 0xA4, 0x20, 0x6D, 0x4C, 0xEB, 0x4D, 0x10,
 0x02, 0x72, 0x0F, 0x61, 0x10, 0xF0, 0x23, 0x6A,
-0x2E, 0xF2, 0x70, 0x9A, 0xBF, 0x6A, 0x80, 0xA3,
+0x8E, 0xF1, 0x70, 0x9A, 0xBF, 0x6A, 0x80, 0xA3,
 0x8C, 0xEA, 0x40, 0xC3, 0x10, 0xF0, 0x23, 0x6A,
-0x2E, 0xF2, 0x7C, 0x9A, 0xEF, 0x6A, 0x80, 0xA3,
+0x8E, 0xF1, 0x7C, 0x9A, 0xEF, 0x6A, 0x80, 0xA3,
 0x1F, 0x10, 0x03, 0x72, 0x66, 0x61, 0x10, 0xF0,
-0x23, 0x6A, 0x2E, 0xF2, 0x90, 0x9A, 0xFF, 0x6B,
+0x23, 0x6A, 0x8E, 0xF1, 0x90, 0x9A, 0xFF, 0x6B,
 0x40, 0x6D, 0x40, 0xA4, 0x6C, 0xEA, 0xAD, 0xEA,
 0x6C, 0xEA, 0x40, 0xC4, 0x10, 0xF0, 0x23, 0x6A,
-0x2E, 0xF2, 0x9C, 0x9A, 0x10, 0x6D, 0x40, 0xA4,
+0x8E, 0xF1, 0x9C, 0x9A, 0x10, 0x6D, 0x40, 0xA4,
 0x6C, 0xEA, 0xAD, 0xEA, 0x6C, 0xEA, 0x40, 0xC4,
 0x20, 0xE8, 0x09, 0x2A, 0x10, 0xF0, 0x23, 0x6A,
-0x2E, 0xF2, 0x7C, 0x9A, 0x80, 0xA3, 0x7F, 0x6A,
+0x8E, 0xF1, 0x7C, 0x9A, 0x80, 0xA3, 0x7F, 0x6A,
 0x8C, 0xEA, 0x40, 0xC3, 0x20, 0xE8, 0x01, 0x72,
-0x1C, 0x61, 0x10, 0xF0, 0x23, 0x6A, 0x2E, 0xF2,
+0x1C, 0x61, 0x10, 0xF0, 0x23, 0x6A, 0x8E, 0xF1,
 0x90, 0x9A, 0xFF, 0x6A, 0x40, 0x6D, 0x60, 0xA4,
 0x4C, 0xEB, 0xAD, 0xEB, 0x4C, 0xEB, 0x60, 0xC4,
-0x10, 0xF0, 0x23, 0x6B, 0x2E, 0xF2, 0x9C, 0x9B,
+0x10, 0xF0, 0x23, 0x6B, 0x8E, 0xF1, 0x9C, 0x9B,
 0x60, 0xA4, 0x4C, 0xEB, 0xAD, 0xEB, 0x4C, 0xEB,
 0x60, 0xC4, 0x60, 0xA4, 0x80, 0x4D, 0xC0, 0x4D,
 0x4C, 0xEB, 0xAD, 0xEB, 0x4C, 0xEB, 0x60, 0xC4,
 0x20, 0xE8, 0x02, 0x72, 0x10, 0x61, 0x10, 0xF0,
-0x23, 0x6A, 0x2E, 0xF2, 0x50, 0x9A, 0xBF, 0x6B,
+0x23, 0x6A, 0x8E, 0xF1, 0x50, 0x9A, 0xBF, 0x6B,
 0x80, 0xA2, 0x6C, 0xEC, 0x80, 0xC2, 0x10, 0xF0,
-0x23, 0x6A, 0x2E, 0xF2, 0x5C, 0x9A, 0x80, 0xA2,
+0x23, 0x6A, 0x8E, 0xF1, 0x5C, 0x9A, 0x80, 0xA2,
 0x8C, 0xEB, 0x60, 0xC2, 0x20, 0xE8, 0x03, 0x72,
-0x14, 0x61, 0x10, 0xF0, 0x23, 0x6A, 0x2E, 0xF2,
+0x14, 0x61, 0x10, 0xF0, 0x23, 0x6A, 0x8E, 0xF1,
 0x90, 0x9A, 0xFF, 0x6B, 0x40, 0x6D, 0x40, 0xA4,
 0x6C, 0xEA, 0xAD, 0xEA, 0x6C, 0xEA, 0x40, 0xC4,
-0x10, 0xF0, 0x23, 0x6A, 0x2E, 0xF2, 0x9C, 0x9A,
+0x10, 0xF0, 0x23, 0x6A, 0x8E, 0xF1, 0x9C, 0x9A,
 0x40, 0xA4, 0x6C, 0xEA, 0xAD, 0xEA, 0x6C, 0xEA,
 0x40, 0xC4, 0x20, 0xE8, 0xFF, 0x63, 0x01, 0xD0,
-0x10, 0xF0, 0x23, 0x6B, 0x4E, 0xF2, 0x60, 0x9B,
+0x10, 0xF0, 0x23, 0x6B, 0xAE, 0xF1, 0x60, 0x9B,
 0xFF, 0x6A, 0x4C, 0xEC, 0x6D, 0xE5, 0x00, 0xA3,
 0x3F, 0x6F, 0x01, 0x74, 0x0C, 0xEF, 0x4C, 0xEE,
 0xE0, 0xC3, 0x10, 0x61, 0x10, 0xF0, 0x23, 0x6C,
-0x4E, 0xF2, 0xE4, 0x9C, 0x10, 0x68, 0xFD, 0xE5,
+0xAE, 0xF1, 0xE4, 0x9C, 0x10, 0x68, 0xFD, 0xE5,
 0x80, 0xA7, 0x4C, 0xEC, 0x0D, 0xEC, 0x4C, 0xEC,
 0x80, 0xC7, 0x80, 0xA3, 0x80, 0x6F, 0xEB, 0xEF,
 0x4C, 0xEC, 0x0D, 0x10, 0x0F, 0x2C, 0x10, 0xF0,
-0x23, 0x6C, 0x4E, 0xF2, 0xE4, 0x9C, 0xEF, 0x6C,
+0x23, 0x6C, 0xAE, 0xF1, 0xE4, 0x9C, 0xEF, 0x6C,
 0xFD, 0xE5, 0x00, 0xA7, 0x0C, 0xEC, 0x80, 0xC7,
 0x80, 0xA3, 0x40, 0x6F, 0x4C, 0xEC, 0xED, 0xEC,
 0x4C, 0xEC, 0x80, 0xC3, 0x10, 0xF0, 0x23, 0x6A,
-0x4E, 0xF2, 0x48, 0x9A, 0x80, 0xF4, 0xC0, 0x36,
+0xAE, 0xF1, 0x48, 0x9A, 0x80, 0xF4, 0xC0, 0x36,
 0x55, 0xE5, 0x40, 0x9D, 0x4D, 0xEE, 0xC0, 0xDD,
 0x01, 0x90, 0x01, 0x63, 0x20, 0xE8, 0x00, 0x65,
 0xFA, 0x63, 0x0B, 0x62, 0x0A, 0xD1, 0x09, 0xD0,
-0x10, 0xF0, 0x23, 0x6B, 0xFF, 0x6A, 0x4E, 0xF2,
+0x10, 0xF0, 0x23, 0x6B, 0xFF, 0x6A, 0xAE, 0xF1,
 0x6C, 0x9B, 0x4C, 0xED, 0x4C, 0xEF, 0x04, 0xD5,
 0x05, 0xD7, 0x60, 0xA3, 0xFF, 0xF7, 0x1F, 0x68,
 0x26, 0x67, 0x4C, 0xEB, 0x72, 0x33, 0x4C, 0xEB,
 0x8C, 0xE8, 0x4C, 0xE9, 0x30, 0x23, 0x10, 0xF0,
-0x23, 0x6B, 0x4E, 0xF2, 0x70, 0x9B, 0x00, 0x6C,
+0x23, 0x6B, 0xAE, 0xF1, 0x70, 0x9B, 0x00, 0x6C,
 0xFF, 0x6D, 0x60, 0xA3, 0x26, 0x6E, 0x6C, 0xEA,
 0x06, 0xD2, 0x30, 0xF0, 0x20, 0x6A, 0x6E, 0xF2,
 0x58, 0x9A, 0x40, 0xEA, 0x30, 0xF0, 0x20, 0x6A,
@@ -37036,25 +36875,25 @@ u8 array_mp_8821c_fw_spic[] = {
 0x30, 0xF0, 0x20, 0x6A, 0x8E, 0xF2, 0x5C, 0x9A,
 0x40, 0xEA, 0x0B, 0x97, 0x0A, 0x91, 0x09, 0x90,
 0x06, 0x63, 0x00, 0xEF, 0x10, 0xF0, 0x23, 0x6A,
-0x4E, 0xF2, 0x54, 0x9A, 0xFF, 0x6B, 0x80, 0xA2,
+0xAE, 0xF1, 0x54, 0x9A, 0xFF, 0x6B, 0x80, 0xA2,
 0x00, 0xF6, 0x80, 0x34, 0x00, 0xF6, 0x83, 0x34,
 0x00, 0x54, 0x24, 0x60, 0xA0, 0xA2, 0x7F, 0x6C,
 0xAC, 0xEC, 0x80, 0xC2, 0x80, 0xA2, 0x40, 0x6D,
 0x6C, 0xEC, 0xAD, 0xEC, 0x6C, 0xEC, 0x80, 0xC2,
-0x80, 0xA2, 0x10, 0xF0, 0x23, 0x6C, 0x4E, 0xF2,
+0x80, 0xA2, 0x10, 0xF0, 0x23, 0x6C, 0xAE, 0xF1,
 0x98, 0x9C, 0x3F, 0x6D, 0x80, 0xA4, 0x10, 0xF0,
-0x23, 0x6C, 0x4E, 0xF2, 0x9C, 0x9C, 0x80, 0xA4,
-0x10, 0xF0, 0x23, 0x6C, 0x6E, 0xF2, 0x80, 0x9C,
+0x23, 0x6C, 0xAE, 0xF1, 0x9C, 0x9C, 0x80, 0xA4,
+0x10, 0xF0, 0x23, 0x6C, 0xCE, 0xF1, 0x80, 0x9C,
 0x80, 0xA4, 0x80, 0xA2, 0x6C, 0xEC, 0xAD, 0xEC,
 0x6C, 0xEC, 0x80, 0xC2, 0x80, 0xA2, 0xBF, 0x6B,
 0x8C, 0xEB, 0x60, 0xC2, 0x20, 0xE8, 0x00, 0x65,
-0x10, 0xF0, 0x23, 0x6B, 0x6E, 0xF2, 0x64, 0x9B,
+0x10, 0xF0, 0x23, 0x6B, 0xCE, 0xF1, 0x64, 0x9B,
 0xFF, 0x6A, 0x4C, 0xEC, 0xC0, 0xA3, 0x4C, 0xED,
-0x0C, 0x26, 0x10, 0xF0, 0x23, 0x6A, 0x6E, 0xF2,
-0x68, 0x9A, 0x10, 0xF0, 0x23, 0x6C, 0x6E, 0xF2,
+0x0C, 0x26, 0x10, 0xF0, 0x23, 0x6A, 0xCE, 0xF1,
+0x68, 0x9A, 0x10, 0xF0, 0x23, 0x6C, 0xCE, 0xF1,
 0x8C, 0x9C, 0x40, 0x9B, 0x8D, 0xEA, 0x40, 0xDB,
 0x20, 0xE8, 0x80, 0xC3, 0x0B, 0x25, 0x10, 0xF0,
-0x23, 0x6B, 0x6E, 0xF2, 0x90, 0x9B, 0x80, 0x6D,
+0x23, 0x6B, 0xCE, 0xF1, 0x90, 0x9B, 0x80, 0x6D,
 0xAB, 0xED, 0x60, 0xA4, 0x4C, 0xEB, 0xAE, 0xEB,
 0x4C, 0xEB, 0x60, 0xC4, 0x20, 0xE8, 0x00, 0x65,
 0xFB, 0x63, 0x09, 0x62, 0x08, 0xD1, 0x07, 0xD0,
@@ -37066,34 +36905,34 @@ u8 array_mp_8821c_fw_spic[] = {
 0x0A, 0x6C, 0x40, 0xEA, 0x40, 0xA8, 0x01, 0x4A,
 0x40, 0xC8, 0x1F, 0xF7, 0x00, 0x6A, 0x2C, 0xEA,
 0x02, 0xF0, 0x00, 0x72, 0x01, 0x60, 0x05, 0x2A,
-0x10, 0xF0, 0x23, 0x6A, 0x2E, 0xF2, 0x48, 0x9A,
-0x04, 0x10, 0x10, 0xF0, 0x23, 0x6A, 0x2E, 0xF2,
+0x10, 0xF0, 0x23, 0x6A, 0x8E, 0xF1, 0x48, 0x9A,
+0x04, 0x10, 0x10, 0xF0, 0x23, 0x6A, 0x8E, 0xF1,
 0x4C, 0x9A, 0x49, 0xE1, 0x0B, 0x93, 0x40, 0x9A,
 0x6C, 0xEA, 0x0C, 0x93, 0x6E, 0xEA, 0x04, 0x22,
 0x40, 0xA8, 0x04, 0x93, 0x63, 0xEA, 0xDC, 0x61,
 0x40, 0xA8, 0x04, 0x93, 0x63, 0xEA, 0x58, 0x67,
 0x09, 0x97, 0x08, 0x91, 0x07, 0x90, 0x05, 0x63,
 0x00, 0xEF, 0x00, 0x65, 0x10, 0xF0, 0x23, 0x6B,
-0x6E, 0xF2, 0x74, 0x9B, 0xFF, 0x6A, 0xCC, 0xEA,
+0xCE, 0xF1, 0x74, 0x9B, 0xFF, 0x6A, 0xCC, 0xEA,
 0x6D, 0xEA, 0xE0, 0xF1, 0x1F, 0x6B, 0xAC, 0xEB,
-0x10, 0xF0, 0x23, 0x6C, 0x6E, 0xF2, 0x98, 0x9C,
+0x10, 0xF0, 0x23, 0x6C, 0xCE, 0xF1, 0x98, 0x9C,
 0x60, 0x33, 0x60, 0x33, 0x6D, 0xEA, 0x40, 0xDC,
-0x10, 0xF0, 0x23, 0x6A, 0x6E, 0xF2, 0x5C, 0x9A,
+0x10, 0xF0, 0x23, 0x6A, 0xCE, 0xF1, 0x5C, 0x9A,
 0x6D, 0xEA, 0x40, 0xDC, 0x20, 0xE8, 0x00, 0x65,
 0xE0, 0xF1, 0x1F, 0x6A, 0x10, 0xF0, 0x23, 0x6B,
-0x6E, 0xF2, 0x7C, 0x9B, 0xAC, 0xEA, 0x40, 0x32,
+0xCE, 0xF1, 0x7C, 0x9B, 0xAC, 0xEA, 0x40, 0x32,
 0x40, 0x32, 0x6D, 0xEA, 0x10, 0xF0, 0x23, 0x6B,
-0x6E, 0xF2, 0x78, 0x9B, 0x40, 0xDB, 0x10, 0xF0,
-0x23, 0x6A, 0x8E, 0xF2, 0x40, 0x9A, 0xFF, 0x6B,
+0xCE, 0xF1, 0x78, 0x9B, 0x40, 0xDB, 0x10, 0xF0,
+0x23, 0x6A, 0xEE, 0xF1, 0x40, 0x9A, 0xFF, 0x6B,
 0x40, 0xA2, 0x6C, 0xEA, 0x20, 0xE8, 0x00, 0x65,
 0xFC, 0x63, 0x07, 0x62, 0x06, 0xD1, 0x05, 0xD0,
 0x01, 0x68, 0x04, 0xEC, 0x04, 0xF7, 0x10, 0x69,
 0x13, 0x10, 0x30, 0xF0, 0x20, 0x6A, 0xCE, 0xF4,
 0x5C, 0x9A, 0x01, 0x6C, 0xFF, 0x49, 0x40, 0xEA,
-0x0B, 0x29, 0x10, 0xF0, 0x23, 0x6A, 0x6E, 0xF2,
+0x0B, 0x29, 0x10, 0xF0, 0x23, 0x6A, 0xCE, 0xF1,
 0x68, 0x9A, 0x08, 0xF0, 0x00, 0x6C, 0x40, 0x9B,
 0x8D, 0xEA, 0x40, 0xDB, 0x00, 0x6A, 0x0B, 0x10,
-0x10, 0xF0, 0x23, 0x6A, 0x8E, 0xF2, 0x44, 0x9A,
+0x10, 0xF0, 0x23, 0x6A, 0xEE, 0xF1, 0x44, 0x9A,
 0x60, 0xAA, 0xFF, 0xF7, 0x1F, 0x6A, 0x6C, 0xEA,
 0x0C, 0xEA, 0xE3, 0x2A, 0x01, 0x6A, 0x07, 0x97,
 0x06, 0x91, 0x05, 0x90, 0x04, 0x63, 0x00, 0xEF,
@@ -37104,37 +36943,37 @@ u8 array_mp_8821c_fw_spic[] = {
 0x04, 0xD3, 0x4C, 0xE9, 0x00, 0x18, 0xC2, 0xC9,
 0x80, 0xF0, 0x07, 0x22, 0x06, 0x58, 0x80, 0xF0,
 0x04, 0x60, 0x10, 0xF0, 0x23, 0x6A, 0x08, 0x30,
-0xAE, 0xF0, 0x08, 0x4A, 0x09, 0xE2, 0x40, 0x9A,
+0x0E, 0xF0, 0x08, 0x4A, 0x09, 0xE2, 0x40, 0x9A,
 0x00, 0xEA, 0x02, 0xF2, 0x10, 0x6A, 0x0E, 0x10,
 0x02, 0xF2, 0x00, 0x6A, 0x0B, 0x10, 0x22, 0xF2,
 0x00, 0x6A, 0x08, 0x10, 0x22, 0xF2, 0x10, 0x6A,
 0x05, 0x10, 0x42, 0xF2, 0x00, 0x6A, 0x02, 0x10,
 0x42, 0xF2, 0x10, 0x6A, 0x10, 0xF0, 0x23, 0x6B,
-0x0D, 0x94, 0x8E, 0xF2, 0x68, 0x9B, 0x8C, 0xEB,
-0x10, 0xF0, 0x23, 0x6C, 0x8E, 0xF2, 0x8C, 0x9C,
+0x0D, 0x94, 0xEE, 0xF1, 0x68, 0x9B, 0x8C, 0xEB,
+0x10, 0xF0, 0x23, 0x6C, 0xEE, 0xF1, 0x8C, 0x9C,
 0x8D, 0xEB, 0x06, 0x21, 0x10, 0xF0, 0x23, 0x6C,
-0x8E, 0xF2, 0x90, 0x9C, 0x6D, 0xEC, 0x05, 0x10,
-0x10, 0xF0, 0x23, 0x6C, 0x8E, 0xF2, 0x94, 0x9C,
+0xEE, 0xF1, 0x90, 0x9C, 0x6D, 0xEC, 0x05, 0x10,
+0x10, 0xF0, 0x23, 0x6C, 0xEE, 0xF1, 0x94, 0x9C,
 0x6C, 0xEC, 0x04, 0x96, 0x06, 0x26, 0x10, 0xF0,
-0x23, 0x6B, 0x6E, 0xF2, 0x7C, 0x9B, 0x8D, 0xEB,
-0x05, 0x10, 0x10, 0xF0, 0x23, 0x6B, 0x8E, 0xF2,
+0x23, 0x6B, 0xCE, 0xF1, 0x7C, 0x9B, 0x8D, 0xEB,
+0x05, 0x10, 0x10, 0xF0, 0x23, 0x6B, 0xEE, 0xF1,
 0x78, 0x9B, 0x8C, 0xEB, 0x1F, 0xF7, 0x00, 0x6C,
 0x4C, 0xEC, 0x02, 0xF0, 0x00, 0x74, 0x01, 0x60,
-0x05, 0x2C, 0x10, 0xF0, 0x23, 0x6C, 0x2E, 0xF2,
+0x05, 0x2C, 0x10, 0xF0, 0x23, 0x6C, 0x8E, 0xF1,
 0xA8, 0x9C, 0x04, 0x10, 0x10, 0xF0, 0x23, 0x6C,
-0x2E, 0xF2, 0xAC, 0x9C, 0x10, 0xF0, 0x23, 0x6C,
-0x0B, 0x96, 0x8E, 0xF2, 0x9C, 0x9C, 0xB5, 0xE2,
+0x8E, 0xF1, 0xAC, 0x9C, 0x10, 0xF0, 0x23, 0x6C,
+0x0B, 0x96, 0xEE, 0xF1, 0x9C, 0x9C, 0xB5, 0xE2,
 0xCC, 0xEC, 0x80, 0xDD, 0x84, 0x42, 0x1F, 0xF7,
 0x00, 0x6D, 0xAC, 0xEC, 0x02, 0xF0, 0x00, 0x74,
 0x01, 0x60, 0x05, 0x2C, 0x10, 0xF0, 0x23, 0x6C,
-0xAE, 0xF2, 0xA0, 0x9C, 0x04, 0x10, 0x10, 0xF0,
-0x23, 0x6C, 0xAE, 0xF2, 0xA4, 0x9C, 0x10, 0xF0,
-0x23, 0x6C, 0x0C, 0x96, 0x8E, 0xF2, 0x9C, 0x9C,
+0x0E, 0xF2, 0xA0, 0x9C, 0x04, 0x10, 0x10, 0xF0,
+0x23, 0x6C, 0x0E, 0xF2, 0xA4, 0x9C, 0x10, 0xF0,
+0x23, 0x6C, 0x0C, 0x96, 0xEE, 0xF1, 0x9C, 0x9C,
 0xB5, 0xE2, 0xCC, 0xEC, 0x80, 0xDD, 0x87, 0x42,
 0x01, 0x4C, 0x1F, 0xF7, 0x00, 0x6D, 0xAC, 0xEC,
 0x02, 0xF0, 0x00, 0x74, 0x01, 0x60, 0x05, 0x2C,
-0x10, 0xF0, 0x23, 0x6C, 0xAE, 0xF2, 0x88, 0x9C,
-0x04, 0x10, 0x10, 0xF0, 0x23, 0x6C, 0xAE, 0xF2,
+0x10, 0xF0, 0x23, 0x6C, 0x0E, 0xF2, 0x88, 0x9C,
+0x04, 0x10, 0x10, 0xF0, 0x23, 0x6C, 0x0E, 0xF2,
 0x8C, 0x9C, 0x89, 0xE2, 0x60, 0xDA, 0x01, 0x6A,
 0x01, 0x10, 0x00, 0x6A, 0x09, 0x97, 0x08, 0x91,
 0x07, 0x90, 0x05, 0x63, 0x00, 0xEF, 0x00, 0x65,
@@ -37142,27 +36981,27 @@ u8 array_mp_8821c_fw_spic[] = {
 0x10, 0x68, 0x13, 0x10, 0x30, 0xF0, 0x20, 0x6A,
 0xCE, 0xF4, 0x5C, 0x9A, 0x05, 0x6C, 0xFF, 0x48,
 0x40, 0xEA, 0x0B, 0x28, 0x10, 0xF0, 0x23, 0x6A,
-0x6E, 0xF2, 0x68, 0x9A, 0x08, 0xF0, 0x00, 0x6C,
+0xCE, 0xF1, 0x68, 0x9A, 0x08, 0xF0, 0x00, 0x6C,
 0x40, 0x9B, 0x8D, 0xEA, 0x40, 0xDB, 0x00, 0x6A,
-0x09, 0x10, 0x10, 0xF0, 0x23, 0x6A, 0x8E, 0xF2,
+0x09, 0x10, 0x10, 0xF0, 0x23, 0x6A, 0xEE, 0xF1,
 0x44, 0x9A, 0x60, 0xAA, 0x3F, 0x6A, 0x6C, 0xEA,
 0xE5, 0x2A, 0x01, 0x6A, 0x05, 0x97, 0x04, 0x90,
 0x03, 0x63, 0x00, 0xEF, 0x10, 0xF0, 0x23, 0x6A,
-0x8E, 0xF2, 0x44, 0x9A, 0x40, 0xAA, 0x20, 0xE8,
-0x10, 0xF0, 0x23, 0x6A, 0x8E, 0xF2, 0x44, 0x9A,
+0xEE, 0xF1, 0x44, 0x9A, 0x40, 0xAA, 0x20, 0xE8,
+0x10, 0xF0, 0x23, 0x6A, 0xEE, 0xF1, 0x44, 0x9A,
 0x40, 0xAA, 0x20, 0xE8, 0xFD, 0x63, 0x05, 0x62,
-0x00, 0x6A, 0x10, 0xF0, 0x23, 0x6C, 0xEE, 0xF1,
+0x00, 0x6A, 0x10, 0xF0, 0x23, 0x6C, 0x4E, 0xF1,
 0x98, 0x9C, 0x10, 0xF0, 0x23, 0x6B, 0x05, 0xF1,
 0x0D, 0x4B, 0x0A, 0x72, 0x60, 0xDC, 0x0C, 0x61,
 0x30, 0xF0, 0x21, 0x6B, 0x30, 0xF0, 0x20, 0x6A,
 0xEE, 0xF7, 0x54, 0x9A, 0x11, 0xF1, 0x94, 0x9B,
 0x01, 0x6D, 0xAB, 0xED, 0x40, 0xEA, 0x00, 0x6A,
 0x10, 0xF0, 0x23, 0x6C, 0xFF, 0x6B, 0x01, 0x4A,
-0xEE, 0xF1, 0x98, 0x9C, 0x6C, 0xEA, 0x10, 0xF0,
+0x4E, 0xF1, 0x98, 0x9C, 0x6C, 0xEA, 0x10, 0xF0,
 0x23, 0x6B, 0x05, 0xF1, 0x0E, 0x4B, 0x60, 0xDC,
 0xDC, 0x17, 0x00, 0x65, 0xFD, 0x63, 0x05, 0x62,
 0x04, 0xD0, 0x00, 0x68, 0x01, 0x6A, 0x10, 0xF0,
-0x23, 0x6B, 0xEE, 0xF1, 0x78, 0x9B, 0x4E, 0xE8,
+0x23, 0x6B, 0x4E, 0xF1, 0x78, 0x9B, 0x4E, 0xE8,
 0x10, 0xF0, 0x23, 0x6A, 0x45, 0xF1, 0x1D, 0x4A,
 0x09, 0xE2, 0x40, 0xDB, 0x00, 0x1C, 0x96, 0x45,
 0x00, 0x18, 0x5D, 0xC9, 0x00, 0x1C, 0x95, 0x45,
@@ -37170,42 +37009,42 @@ u8 array_mp_8821c_fw_spic[] = {
 0xC0, 0xF1, 0x08, 0x4A, 0x80, 0xF0, 0x8C, 0x9A,
 0x10, 0xF0, 0x00, 0x6B, 0x8C, 0xEB, 0x08, 0x23,
 0x10, 0xF0, 0x01, 0x6B, 0x6B, 0xEB, 0x8C, 0xEB,
-0x80, 0xF0, 0x6C, 0xDA, 0x00, 0x18, 0x69, 0xD4,
+0x80, 0xF0, 0x6C, 0xDA, 0x00, 0x18, 0x41, 0xD4,
 0x00, 0x1C, 0x95, 0x45, 0x00, 0x1C, 0x96, 0x45,
 0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A,
 0x80, 0xF0, 0x8C, 0x9A, 0x02, 0x6B, 0x8C, 0xEB,
 0x09, 0x23, 0x03, 0x6B, 0x6B, 0xEB, 0x8C, 0xEB,
-0x80, 0xF0, 0x6C, 0xDA, 0x00, 0x18, 0x08, 0xCF,
-0x00, 0x18, 0x6A, 0xCF, 0x00, 0x1C, 0x95, 0x45,
+0x80, 0xF0, 0x6C, 0xDA, 0x00, 0x18, 0xE0, 0xCE,
+0x00, 0x18, 0x42, 0xCF, 0x00, 0x1C, 0x95, 0x45,
 0x00, 0x1C, 0x96, 0x45, 0x30, 0xF0, 0x20, 0x6A,
 0xC0, 0xF1, 0x08, 0x4A, 0x80, 0xF0, 0x8C, 0x9A,
 0x04, 0x6B, 0x8C, 0xEB, 0x09, 0x23, 0x05, 0x6B,
 0x6B, 0xEB, 0x8C, 0xEB, 0x80, 0xF0, 0x6C, 0xDA,
-0x00, 0x18, 0x9C, 0xCC, 0x00, 0x18, 0xE5, 0xCB,
+0x00, 0x18, 0x74, 0xCC, 0x00, 0x18, 0xE5, 0xCB,
 0x00, 0x1C, 0x95, 0x45, 0x00, 0x1C, 0x96, 0x45,
 0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A,
 0x80, 0xF0, 0x8C, 0x9A, 0x02, 0xF0, 0x00, 0x6B,
 0x8C, 0xEB, 0x08, 0x23, 0x02, 0xF0, 0x01, 0x6B,
 0x6B, 0xEB, 0x8C, 0xEB, 0x80, 0xF0, 0x6C, 0xDA,
-0x00, 0x18, 0x27, 0xD6, 0x00, 0x1C, 0x95, 0x45,
+0x00, 0x18, 0xFF, 0xD5, 0x00, 0x1C, 0x95, 0x45,
 0x00, 0x1C, 0x96, 0x45, 0x30, 0xF0, 0x20, 0x6A,
 0xC0, 0xF1, 0x08, 0x4A, 0x10, 0xF0, 0x23, 0x6B,
-0xAE, 0xF2, 0x78, 0x9B, 0x80, 0xF0, 0x8C, 0x9A,
+0x0E, 0xF2, 0x78, 0x9B, 0x80, 0xF0, 0x8C, 0x9A,
 0x8C, 0xEB, 0x09, 0x23, 0x10, 0xF0, 0x23, 0x6B,
-0xAE, 0xF2, 0x7C, 0x9B, 0x8C, 0xEB, 0x80, 0xF0,
-0x6C, 0xDA, 0x00, 0x18, 0xEE, 0xCD, 0x00, 0x1C,
+0x0E, 0xF2, 0x7C, 0x9B, 0x8C, 0xEB, 0x80, 0xF0,
+0x6C, 0xDA, 0x00, 0x18, 0xC6, 0xCD, 0x00, 0x1C,
 0x95, 0x45, 0x30, 0xF0, 0x21, 0x6B, 0x30, 0xF0,
 0x20, 0x6A, 0x11, 0xF1, 0x94, 0x9B, 0xEE, 0xF7,
 0x58, 0x9A, 0x40, 0xEA, 0x73, 0x17, 0x00, 0x65,
-0x10, 0xF0, 0x23, 0x6A, 0xCE, 0xF2, 0x60, 0x9A,
+0x10, 0xF0, 0x23, 0x6A, 0x2E, 0xF2, 0x60, 0x9A,
 0xDF, 0x6A, 0x80, 0xA3, 0x8C, 0xEA, 0x40, 0xC3,
 0x20, 0xE8, 0x00, 0x65, 0x10, 0xF0, 0x23, 0x6B,
-0xCE, 0xF2, 0xA0, 0x9B, 0xFF, 0x6A, 0x20, 0x6E,
+0x2E, 0xF2, 0xA0, 0x9B, 0xFF, 0x6A, 0x20, 0x6E,
 0x60, 0xA5, 0x4C, 0xEC, 0x4C, 0xEB, 0xCD, 0xEB,
 0x4C, 0xEB, 0x07, 0xF7, 0x01, 0x4A, 0x4D, 0xEC,
-0x10, 0xF0, 0x23, 0x6A, 0xCE, 0xF2, 0x44, 0x9A,
+0x10, 0xF0, 0x23, 0x6A, 0x2E, 0xF2, 0x44, 0x9A,
 0x60, 0xC5, 0x80, 0xCA, 0x20, 0xE8, 0x00, 0x65,
-0x10, 0xF0, 0x23, 0x6A, 0xCE, 0xF2, 0x44, 0x9A,
+0x10, 0xF0, 0x23, 0x6A, 0x2E, 0xF2, 0x44, 0x9A,
 0x68, 0xF0, 0x04, 0x6B, 0x60, 0xCA, 0x20, 0xE8,
 0x03, 0x6F, 0x8C, 0xEF, 0x64, 0x67, 0x46, 0x67,
 0x04, 0x27, 0x07, 0x10, 0xA0, 0xDB, 0xFC, 0x4A,
@@ -37246,7 +37085,7 @@ u8 array_mp_8821c_fw_spic[] = {
 0x21, 0x6A, 0xF1, 0xF0, 0x64, 0xDA, 0x11, 0xF0,
 0x00, 0x6B, 0x09, 0x10, 0x43, 0x6B, 0x30, 0xF0,
 0x21, 0x6A, 0xF1, 0xF0, 0x64, 0xDA, 0x10, 0xF0,
-0x23, 0x6A, 0xEE, 0xF2, 0x78, 0x9A, 0x30, 0xF0,
+0x23, 0x6A, 0x4E, 0xF2, 0x78, 0x9A, 0x30, 0xF0,
 0x21, 0x6A, 0xF1, 0xF0, 0x68, 0xDA, 0x20, 0xE8,
 0x30, 0xF0, 0x21, 0x6A, 0xF1, 0xF0, 0x40, 0x9A,
 0x20, 0xE8, 0x00, 0x65, 0xFF, 0x63, 0x0C, 0x24,
@@ -37268,52 +37107,52 @@ u8 array_mp_8821c_fw_spic[] = {
 0x04, 0x90, 0x03, 0x63, 0x00, 0xEF, 0x00, 0x65,
 0xFD, 0x63, 0x05, 0x62, 0x04, 0xD0, 0x00, 0x68,
 0x17, 0x10, 0xE0, 0xF3, 0x08, 0x70, 0x0A, 0x61,
-0x10, 0xF0, 0x23, 0x6A, 0x6E, 0xF2, 0x68, 0x9A,
+0x10, 0xF0, 0x23, 0x6A, 0xCE, 0xF1, 0x68, 0x9A,
 0x80, 0x6C, 0x40, 0x9B, 0x8D, 0xEA, 0x40, 0xDB,
 0x00, 0x6A, 0x13, 0x10, 0xFF, 0xF7, 0x1F, 0x6A,
 0x01, 0x48, 0x4C, 0xE8, 0x30, 0xF0, 0x20, 0x6A,
 0xCE, 0xF4, 0x5C, 0x9A, 0x0A, 0x6C, 0x40, 0xEA,
-0x10, 0xF0, 0x23, 0x6A, 0x6E, 0xF3, 0x50, 0x9A,
+0x10, 0xF0, 0x23, 0x6A, 0xCE, 0xF2, 0x50, 0x9A,
 0x60, 0xA2, 0x01, 0x6A, 0x6C, 0xEA, 0xE1, 0x2A,
 0x01, 0x6A, 0x05, 0x97, 0x04, 0x90, 0x03, 0x63,
 0x00, 0xEF, 0x00, 0x65, 0xFF, 0xF7, 0x1F, 0x6A,
 0x8C, 0xEA, 0x10, 0xF0, 0x23, 0x6B, 0x10, 0xF0,
-0x23, 0x6C, 0x6E, 0xF3, 0x74, 0x9B, 0x6E, 0xF3,
+0x23, 0x6C, 0xCE, 0xF2, 0x74, 0x9B, 0xCE, 0xF2,
 0x98, 0x9C, 0x6D, 0xE5, 0x91, 0xE5, 0x00, 0x6E,
 0xC0, 0xDB, 0x04, 0x4B, 0x8A, 0xEB, 0xFB, 0x61,
 0xE7, 0xF7, 0x1F, 0x6B, 0x4C, 0xEB, 0x10, 0xF0,
-0x23, 0x6A, 0x8E, 0xF2, 0x4C, 0x9A, 0x10, 0x6C,
-0x4D, 0xEB, 0x10, 0xF0, 0x23, 0x6A, 0x6E, 0xF3,
+0x23, 0x6A, 0xEE, 0xF1, 0x4C, 0x9A, 0x10, 0x6C,
+0x4D, 0xEB, 0x10, 0xF0, 0x23, 0x6A, 0xCE, 0xF2,
 0x54, 0x9A, 0x49, 0xE5, 0x60, 0xDA, 0x10, 0xF0,
-0x23, 0x6A, 0x6E, 0xF3, 0x5C, 0x9A, 0xFF, 0x6B,
+0x23, 0x6A, 0xCE, 0xF2, 0x5C, 0x9A, 0xFF, 0x6B,
 0x55, 0xE5, 0x40, 0xA5, 0x6C, 0xEA, 0x8D, 0xEA,
 0x6C, 0xEA, 0x40, 0xC5, 0x20, 0xE8, 0x00, 0x65,
 0xFC, 0x63, 0x07, 0x62, 0x06, 0xD1, 0x05, 0xD0,
 0x30, 0xF0, 0x21, 0x6A, 0x11, 0xF1, 0x61, 0xA2,
 0x08, 0xD4, 0x30, 0xF0, 0x20, 0x69, 0x61, 0xC5,
 0x01, 0x4B, 0x11, 0xF1, 0x61, 0xC2, 0x10, 0xF0,
-0x23, 0x6B, 0x6E, 0xF3, 0x94, 0x9B, 0x08, 0x93,
+0x23, 0x6B, 0xCE, 0xF2, 0x94, 0x9B, 0x08, 0x93,
 0x4E, 0xF2, 0x50, 0x99, 0x02, 0x6E, 0x91, 0xE3,
 0x05, 0x67, 0x40, 0xEA, 0x10, 0xF0, 0x23, 0x6B,
-0x8E, 0xF3, 0x80, 0x9B, 0x08, 0x93, 0xCE, 0xA0,
+0xEE, 0xF2, 0x80, 0x9B, 0x08, 0x93, 0xCE, 0xA0,
 0x4E, 0xF2, 0x50, 0x99, 0xA2, 0x40, 0x91, 0xE3,
 0x40, 0xEA, 0x07, 0x97, 0x06, 0x91, 0x05, 0x90,
 0x04, 0x63, 0x00, 0xEF, 0xFC, 0x63, 0x07, 0x62,
 0x06, 0xD1, 0x05, 0xD0, 0x24, 0x67, 0x00, 0x18,
 0x2A, 0xCB, 0x00, 0x6B, 0x36, 0x22, 0x10, 0xF0,
-0x23, 0x6A, 0x8E, 0xF3, 0x44, 0x9A, 0xFF, 0xF7,
+0x23, 0x6A, 0xEE, 0xF2, 0x44, 0x9A, 0xFF, 0xF7,
 0x1F, 0x6E, 0xFF, 0x6F, 0x00, 0x9A, 0x10, 0xF0,
-0x23, 0x6A, 0x8E, 0xF2, 0x48, 0x9A, 0x10, 0x6C,
+0x23, 0x6A, 0xEE, 0xF1, 0x48, 0x9A, 0x10, 0x6C,
 0x8B, 0xEC, 0x4C, 0xE8, 0x10, 0xF0, 0x23, 0x6A,
-0xA1, 0x40, 0x8E, 0xF3, 0x48, 0x9A, 0x65, 0x67,
+0xA1, 0x40, 0xEE, 0xF2, 0x48, 0x9A, 0x65, 0x67,
 0xCC, 0xEB, 0x60, 0xCA, 0x10, 0xF0, 0x23, 0x6A,
-0x8E, 0xF3, 0x4C, 0x9A, 0x60, 0xA2, 0xFA, 0x65,
+0xEE, 0xF2, 0x4C, 0x9A, 0x60, 0xA2, 0xFA, 0x65,
 0xA2, 0x32, 0xEC, 0xEB, 0x8C, 0xEB, 0x42, 0x32,
 0x6D, 0xEA, 0xEC, 0xEA, 0x7F, 0x67, 0x40, 0xC3,
 0x87, 0xA9, 0x02, 0x4C, 0xCC, 0xEC, 0x00, 0x18,
 0x3F, 0xCB, 0x87, 0x40, 0x12, 0x4C, 0xB1, 0x67,
 0x00, 0x18, 0x56, 0xCB, 0x10, 0xF0, 0x23, 0x6A,
-0x6E, 0xF3, 0x50, 0x9A, 0x01, 0x6B, 0x60, 0xC2,
+0xCE, 0xF2, 0x50, 0x9A, 0x01, 0x6B, 0x60, 0xC2,
 0x01, 0x6B, 0x07, 0x97, 0x06, 0x91, 0x05, 0x90,
 0x43, 0x67, 0x04, 0x63, 0x00, 0xEF, 0x00, 0x65,
 0xFD, 0x63, 0x05, 0x62, 0x04, 0xD0, 0x30, 0xF0,
@@ -37324,7 +37163,7 @@ u8 array_mp_8821c_fw_spic[] = {
 0x01, 0xF1, 0x00, 0x72, 0x07, 0x60, 0xA0, 0xF0,
 0x40, 0xA0, 0xA0, 0xF0, 0x81, 0xA0, 0xFF, 0x4A,
 0x8E, 0xEA, 0x0A, 0x2A, 0x10, 0xF0, 0x23, 0x6A,
-0x6E, 0xF2, 0x68, 0x9A, 0x00, 0xF2, 0x00, 0x6C,
+0xCE, 0xF1, 0x68, 0x9A, 0x00, 0xF2, 0x00, 0x6C,
 0x40, 0x9B, 0x8D, 0xEA, 0x40, 0xDB, 0x11, 0x10,
 0x90, 0x34, 0x91, 0xE0, 0x10, 0x6E, 0x00, 0x18,
 0xC3, 0xCA, 0xA0, 0xF0, 0x41, 0xA0, 0x0A, 0x6B,
@@ -37341,32 +37180,32 @@ u8 array_mp_8821c_fw_spic[] = {
 0xEF, 0x46, 0xE2, 0xEA, 0xF4, 0x61, 0x30, 0xF0,
 0x21, 0x6A, 0x11, 0xF1, 0x60, 0xA2, 0x01, 0x4B,
 0x11, 0xF1, 0x60, 0xC2, 0x10, 0xF0, 0x23, 0x6B,
-0x6E, 0xF3, 0x74, 0x9B, 0x30, 0xF0, 0x20, 0x6A,
+0xCE, 0xF2, 0x74, 0x9B, 0x30, 0xF0, 0x20, 0x6A,
 0x4E, 0xF2, 0x50, 0x9A, 0x71, 0xE4, 0x40, 0xEA,
 0x05, 0x97, 0x04, 0x90, 0x03, 0x63, 0x00, 0xEF,
 0xFC, 0x63, 0x07, 0x62, 0x06, 0xD1, 0x05, 0xD0,
 0x24, 0x67, 0x00, 0x18, 0x2A, 0xCB, 0x00, 0x6B,
-0x2E, 0x22, 0x10, 0xF0, 0x23, 0x6A, 0x8E, 0xF3,
+0x2E, 0x22, 0x10, 0xF0, 0x23, 0x6A, 0xEE, 0xF2,
 0x44, 0x9A, 0x0F, 0x6C, 0xFF, 0xF7, 0x1F, 0x6B,
-0x00, 0x9A, 0x10, 0xF0, 0x23, 0x6A, 0x8E, 0xF2,
+0x00, 0x9A, 0x10, 0xF0, 0x23, 0x6A, 0xEE, 0xF1,
 0x48, 0x9A, 0x4C, 0xE8, 0xA1, 0x40, 0xA2, 0x32,
 0x42, 0x32, 0x8C, 0xEA, 0x10, 0xF0, 0x23, 0x6C,
-0x8E, 0xF3, 0x88, 0x9C, 0xC5, 0x67, 0x6C, 0xEE,
-0xC0, 0xCC, 0x10, 0xF0, 0x23, 0x6C, 0x8E, 0xF3,
+0xEE, 0xF2, 0x88, 0x9C, 0xC5, 0x67, 0x6C, 0xEE,
+0xC0, 0xCC, 0x10, 0xF0, 0x23, 0x6C, 0xEE, 0xF2,
 0x8C, 0x9C, 0x40, 0xC4, 0xE0, 0xF0, 0x87, 0xA1,
 0x6C, 0xEC, 0x00, 0x18, 0x3F, 0xCB, 0x87, 0x40,
 0x12, 0x4C, 0xB1, 0x67, 0x00, 0x18, 0xAD, 0xCB,
-0x10, 0xF0, 0x23, 0x6A, 0x6E, 0xF3, 0x50, 0x9A,
+0x10, 0xF0, 0x23, 0x6A, 0xCE, 0xF2, 0x50, 0x9A,
 0x01, 0x6B, 0x60, 0xC2, 0x01, 0x6B, 0x07, 0x97,
 0x06, 0x91, 0x05, 0x90, 0x43, 0x67, 0x04, 0x63,
 0x00, 0xEF, 0x00, 0x65, 0xFD, 0x63, 0x05, 0x62,
-0x04, 0xD0, 0x10, 0xF0, 0x23, 0x6B, 0xEE, 0xF1,
+0x04, 0xD0, 0x10, 0xF0, 0x23, 0x6B, 0x4E, 0xF1,
 0x78, 0x9B, 0x10, 0xF0, 0x23, 0x6A, 0x85, 0xF7,
 0x15, 0x4A, 0x10, 0xF0, 0x30, 0x68, 0x40, 0xDB,
 0x00, 0xF0, 0x00, 0x48, 0xC1, 0xF6, 0x62, 0xA0,
 0xC1, 0xF6, 0x43, 0xA0, 0x6E, 0xEA, 0x39, 0x22,
-0x10, 0xF0, 0x23, 0x6A, 0x8E, 0xF3, 0x50, 0x9A,
-0x10, 0xF0, 0x23, 0x6C, 0xEE, 0xF2, 0x94, 0x9C,
+0x10, 0xF0, 0x23, 0x6A, 0xEE, 0xF2, 0x50, 0x9A,
+0x10, 0xF0, 0x23, 0x6C, 0x4E, 0xF2, 0x94, 0x9C,
 0x40, 0x9A, 0x8C, 0xEA, 0x2E, 0x2A, 0xE8, 0x6A,
 0x58, 0xEB, 0x87, 0x40, 0x3B, 0x4C, 0x12, 0xEB,
 0x71, 0xE4, 0x00, 0x18, 0xC6, 0xCB, 0x16, 0x22,
@@ -37386,7 +37225,7 @@ u8 array_mp_8821c_fw_spic[] = {
 0xA4, 0x67, 0x01, 0xF7, 0x00, 0x72, 0x07, 0x60,
 0xC1, 0xF6, 0x42, 0xA0, 0xC1, 0xF6, 0x83, 0xA0,
 0xFF, 0x4A, 0x8E, 0xEA, 0x09, 0x2A, 0x10, 0xF0,
-0x23, 0x6A, 0x6E, 0xF2, 0x68, 0x9A, 0xFF, 0x6A,
+0x23, 0x6A, 0xCE, 0xF1, 0x68, 0x9A, 0xFF, 0x6A,
 0x80, 0xA3, 0x8C, 0xEA, 0x40, 0xC3, 0xA7, 0x10,
 0x23, 0xA5, 0xC1, 0xF6, 0x45, 0xA0, 0xFF, 0x6B,
 0x04, 0x49, 0x6C, 0xE9, 0x1F, 0x2A, 0xE8, 0x6A,
@@ -37431,34 +37270,14 @@ u8 array_mp_8821c_fw_spic[] = {
 0xC0, 0xF1, 0x08, 0x4A, 0x80, 0xF0, 0x6C, 0x9A,
 0x8D, 0xEB, 0x80, 0xF0, 0x6C, 0xDA, 0x07, 0x97,
 0x06, 0x91, 0x05, 0x90, 0x04, 0x63, 0x00, 0xEF,
-0xFC, 0x63, 0x07, 0x62, 0x06, 0xD1, 0x05, 0xD0,
-0xFF, 0xF7, 0x1F, 0x68, 0x0C, 0xED, 0x08, 0xD4,
-0xA0, 0xCC, 0x08, 0x92, 0xCC, 0xE8, 0x22, 0x67,
-0x01, 0xCA, 0x04, 0x49, 0x0B, 0x27, 0x0A, 0x20,
-0x30, 0xF0, 0x20, 0x6A, 0x4E, 0xF2, 0x50, 0x9A,
-0xFF, 0x6E, 0x91, 0x67, 0xA7, 0x67, 0x0C, 0xEE,
-0x40, 0xEA, 0x05, 0xE1, 0x08, 0x92, 0x07, 0x97,
-0x05, 0x90, 0x47, 0xE1, 0xFF, 0xF7, 0x1F, 0x6A,
-0x2C, 0xEA, 0x06, 0x91, 0x04, 0x63, 0x00, 0xEF,
-0xDF, 0x63, 0x41, 0x62, 0x40, 0xD1, 0x3F, 0xD0,
-0x30, 0xF0, 0x20, 0x6A, 0x4E, 0xF2, 0x4C, 0x9A,
-0xFF, 0x68, 0xCC, 0xE8, 0x24, 0x67, 0x43, 0xD5,
-0x04, 0x04, 0x00, 0x6D, 0xE8, 0x6E, 0x40, 0xEA,
-0x01, 0x6A, 0x7D, 0x67, 0x4B, 0xEA, 0x50, 0xC3,
-0x1B, 0x6A, 0x52, 0xC3, 0x44, 0x40, 0x53, 0xC3,
-0x30, 0xF0, 0x20, 0x6A, 0x43, 0x95, 0x4E, 0xF2,
-0x50, 0x9A, 0xD0, 0x67, 0x05, 0xD1, 0x06, 0x04,
-0x40, 0xEA, 0x30, 0xF0, 0x20, 0x6A, 0xAE, 0xF2,
-0x5C, 0x9A, 0x04, 0x04, 0x40, 0xEA, 0x41, 0x97,
-0x40, 0x91, 0x3F, 0x90, 0x21, 0x63, 0x00, 0xEF,
 0xFD, 0x63, 0x05, 0x62, 0x04, 0xD0, 0x10, 0xF0,
-0x23, 0x6B, 0xEE, 0xF1, 0x78, 0x9B, 0x10, 0xF0,
-0x23, 0x6A, 0x66, 0xF2, 0x11, 0x4A, 0x30, 0xF0,
+0x23, 0x6B, 0x4E, 0xF1, 0x78, 0x9B, 0x10, 0xF0,
+0x23, 0x6A, 0xC6, 0xF1, 0x11, 0x4A, 0x30, 0xF0,
 0x20, 0x68, 0x40, 0xDB, 0xAF, 0xF4, 0x18, 0x48,
 0xA0, 0xF0, 0x80, 0xA0, 0xA0, 0xF0, 0x41, 0xA0,
 0x8E, 0xEA, 0x3B, 0x22, 0x10, 0xF0, 0x23, 0x6A,
-0x8E, 0xF3, 0x50, 0x9A, 0x10, 0xF0, 0x23, 0x6B,
-0xEE, 0xF2, 0x74, 0x9B, 0x40, 0x9A, 0x6C, 0xEA,
+0xEE, 0xF2, 0x50, 0x9A, 0x10, 0xF0, 0x23, 0x6B,
+0x4E, 0xF2, 0x74, 0x9B, 0x40, 0x9A, 0x6C, 0xEA,
 0x30, 0x2A, 0x90, 0x34, 0x91, 0xE0, 0x00, 0x18,
 0x6B, 0xCB, 0x0B, 0x2A, 0x30, 0xF0, 0x20, 0x6A,
 0xC0, 0xF1, 0x08, 0x4A, 0x80, 0xF0, 0x6C, 0x9A,
@@ -37471,16 +37290,16 @@ u8 array_mp_8821c_fw_spic[] = {
 0x80, 0xF0, 0x6C, 0xDA, 0x30, 0xF0, 0x20, 0x6A,
 0xAF, 0xF4, 0x18, 0x4A, 0xA0, 0xF0, 0x60, 0xA2,
 0x0A, 0x6C, 0x8E, 0xEB, 0x02, 0x2B, 0xA0, 0xF0,
-0x60, 0xC2, 0x00, 0x18, 0xE9, 0xCC, 0x05, 0x97,
+0x60, 0xC2, 0x00, 0x18, 0xC1, 0xCC, 0x05, 0x97,
 0x04, 0x90, 0x03, 0x63, 0x00, 0xEF, 0x00, 0x65,
 0xFB, 0x63, 0x09, 0x62, 0x08, 0xD0, 0x10, 0xF0,
-0x23, 0x6A, 0x8E, 0xF3, 0x74, 0x9A, 0x10, 0xF0,
-0x23, 0x6C, 0x6E, 0xF2, 0x1C, 0x9C, 0x40, 0x9B,
+0x23, 0x6A, 0xEE, 0xF2, 0x74, 0x9A, 0x10, 0xF0,
+0x23, 0x6C, 0xCE, 0xF1, 0x1C, 0x9C, 0x40, 0x9B,
 0x00, 0xF4, 0x1D, 0x6C, 0x10, 0x6D, 0x0D, 0xEA,
 0x40, 0xDB, 0x06, 0x02, 0x04, 0xD2, 0x30, 0xF0,
 0x20, 0x6A, 0xAE, 0xF4, 0x54, 0x9A, 0x00, 0x6E,
 0x82, 0xF3, 0x08, 0x6F, 0x40, 0xEA, 0x07, 0x2A,
-0x10, 0xF0, 0x23, 0x6B, 0x6E, 0xF2, 0x88, 0x9B,
+0x10, 0xF0, 0x23, 0x6B, 0xCE, 0xF1, 0x88, 0x9B,
 0x60, 0x9C, 0x0D, 0xEB, 0x60, 0xDC, 0x09, 0x97,
 0x08, 0x90, 0x05, 0x63, 0x00, 0xEF, 0x00, 0x65,
 0x60, 0xA4, 0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1,
@@ -37491,11 +37310,11 @@ u8 array_mp_8821c_fw_spic[] = {
 0xE8, 0xF2, 0x62, 0xC2, 0x66, 0xA4, 0xE8, 0xF2,
 0x63, 0xC2, 0x20, 0xE8, 0xFB, 0x63, 0x09, 0x62,
 0x08, 0xD1, 0x07, 0xD0, 0x10, 0xF0, 0x23, 0x6A,
-0x8E, 0xF3, 0x58, 0x9A, 0x60, 0xA2, 0x03, 0x6A,
+0xEE, 0xF2, 0x58, 0x9A, 0x60, 0xA2, 0x03, 0x6A,
 0x6C, 0xEA, 0x10, 0x6B, 0x64, 0xEA, 0xFF, 0x6A,
-0x4C, 0xEB, 0x10, 0xF0, 0x23, 0x6A, 0x8E, 0xF3,
+0x4C, 0xEB, 0x10, 0xF0, 0x23, 0x6A, 0xEE, 0xF2,
 0x5C, 0x9A, 0x04, 0xD3, 0x40, 0x9A, 0x05, 0xD2,
-0x10, 0xF0, 0x23, 0x6A, 0xAE, 0xF3, 0x40, 0x9A,
+0x10, 0xF0, 0x23, 0x6A, 0x0E, 0xF3, 0x40, 0x9A,
 0x00, 0x9A, 0x05, 0x92, 0x0A, 0xEA, 0xA0, 0xF0,
 0x15, 0x60, 0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1,
 0x08, 0x4A, 0x80, 0xF0, 0x6C, 0x9A, 0x02, 0x6C,
@@ -37504,9 +37323,9 @@ u8 array_mp_8821c_fw_spic[] = {
 0x46, 0xA9, 0x00, 0xF7, 0x00, 0x72, 0x07, 0x60,
 0xC1, 0xF7, 0x66, 0xA1, 0xC1, 0xF7, 0x87, 0xA1,
 0xAF, 0x43, 0x8E, 0xED, 0x0A, 0x2D, 0x10, 0xF0,
-0x23, 0x6A, 0x6E, 0xF2, 0x68, 0x9A, 0xFF, 0x6C,
+0x23, 0x6A, 0xCE, 0xF1, 0x68, 0x9A, 0xFF, 0x6C,
 0x01, 0x4C, 0x40, 0x9B, 0x8D, 0xEA, 0x40, 0xDB,
-0x91, 0x10, 0x10, 0xF0, 0x23, 0x6D, 0xAE, 0xF3,
+0x91, 0x10, 0x10, 0xF0, 0x23, 0x6D, 0x0E, 0xF3,
 0xA4, 0x9D, 0x7F, 0x6E, 0xB5, 0xE0, 0xE0, 0xA5,
 0xCC, 0xEF, 0x44, 0x2F, 0x00, 0xF4, 0x00, 0x72,
 0x80, 0xF0, 0x04, 0x60, 0xAC, 0x43, 0x8E, 0xED,
@@ -37521,31 +37340,31 @@ u8 array_mp_8821c_fw_spic[] = {
 0xC1, 0xF7, 0x66, 0xA1, 0xC1, 0xF7, 0x87, 0xA1,
 0xFE, 0x4B, 0x8E, 0xEB, 0x5B, 0x23, 0x00, 0xF7,
 0x01, 0x72, 0x58, 0x60, 0x10, 0xF0, 0x23, 0x6A,
-0xAE, 0xF3, 0x48, 0x9A, 0x10, 0xF0, 0x23, 0x6D,
-0x76, 0x4C, 0xAE, 0xF3, 0xA4, 0x9D, 0x49, 0xE0,
+0x0E, 0xF3, 0x48, 0x9A, 0x10, 0xF0, 0x23, 0x6D,
+0x76, 0x4C, 0x0E, 0xF3, 0xA4, 0x9D, 0x49, 0xE0,
 0x94, 0x34, 0x60, 0xAA, 0x91, 0xE1, 0x30, 0xF0,
 0x20, 0x6A, 0x4E, 0xF2, 0x50, 0x9A, 0x06, 0x4C,
 0xB5, 0xE0, 0x12, 0x10, 0x40, 0xA5, 0x4C, 0xEE,
 0x01, 0x76, 0x1E, 0x61, 0x10, 0xF0, 0x23, 0x6A,
-0xAE, 0xF3, 0x48, 0x9A, 0x76, 0x4C, 0x94, 0x34,
+0x0E, 0xF3, 0x48, 0x9A, 0x76, 0x4C, 0x94, 0x34,
 0x49, 0xE0, 0x60, 0xAA, 0x30, 0xF0, 0x20, 0x6A,
 0x4E, 0xF2, 0x50, 0x9A, 0x91, 0xE1, 0x06, 0x4C,
 0xFF, 0x6E, 0x6C, 0xEE, 0x40, 0xEA, 0xC1, 0xF7,
 0x47, 0xA1, 0x08, 0x6B, 0x01, 0x4A, 0xC1, 0xF7,
 0x47, 0xC1, 0xC1, 0xF7, 0x47, 0xA1, 0x6E, 0xEA,
 0x0E, 0x2A, 0xC1, 0xF7, 0x47, 0xC1, 0x0B, 0x10,
-0x10, 0xF0, 0x23, 0x6A, 0x6E, 0xF2, 0x68, 0x9A,
-0x10, 0xF0, 0x23, 0x6C, 0x2E, 0xF2, 0x98, 0x9C,
+0x10, 0xF0, 0x23, 0x6A, 0xCE, 0xF1, 0x68, 0x9A,
+0x10, 0xF0, 0x23, 0x6C, 0x8E, 0xF1, 0x98, 0x9C,
 0x40, 0x9B, 0x8D, 0xEA, 0x40, 0xDB, 0x10, 0xF0,
-0x23, 0x6A, 0xAE, 0xF3, 0x4C, 0x9A, 0x04, 0x93,
+0x23, 0x6A, 0x0E, 0xF3, 0x4C, 0x9A, 0x04, 0x93,
 0x40, 0x9A, 0x0E, 0xEA, 0x61, 0xE0, 0x05, 0x2A,
-0x10, 0xF0, 0x23, 0x6A, 0xAE, 0xF3, 0x50, 0x9A,
-0x00, 0x9A, 0x10, 0xF0, 0x23, 0x6A, 0xAE, 0xF3,
+0x10, 0xF0, 0x23, 0x6A, 0x0E, 0xF3, 0x50, 0x9A,
+0x00, 0x9A, 0x10, 0xF0, 0x23, 0x6A, 0x0E, 0xF3,
 0x40, 0x9A, 0x00, 0xDA, 0x05, 0x92, 0x4A, 0xE8,
 0x5F, 0xF7, 0x15, 0x61, 0x09, 0x97, 0x08, 0x91,
 0x07, 0x90, 0x05, 0x63, 0x00, 0xEF, 0x00, 0x65,
 0xFE, 0x63, 0x03, 0xD1, 0x02, 0xD0, 0x10, 0xF0,
-0x23, 0x6A, 0xAE, 0xF3, 0x54, 0x9A, 0x0F, 0x6B,
+0x23, 0x6A, 0x0E, 0xF3, 0x54, 0x9A, 0x0F, 0x6B,
 0x40, 0xA2, 0x4C, 0xEB, 0x0A, 0x23, 0x30, 0xF0,
 0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A, 0x80, 0xF0,
 0x8C, 0x9A, 0x02, 0x6D, 0xAD, 0xEC, 0x80, 0xF0,
@@ -37555,7 +37374,7 @@ u8 array_mp_8821c_fw_spic[] = {
 0x40, 0xF0, 0x80, 0xAA, 0x00, 0xF7, 0x00, 0x74,
 0x05, 0x60, 0x40, 0xF0, 0x01, 0xA2, 0x00, 0x94,
 0x8A, 0xE8, 0x0A, 0x61, 0x10, 0xF0, 0x23, 0x6A,
-0x6E, 0xF2, 0x68, 0x9A, 0xFF, 0x6C, 0x01, 0x4C,
+0xCE, 0xF1, 0x68, 0x9A, 0xFF, 0x6C, 0x01, 0x4C,
 0x40, 0x9B, 0x8D, 0xEA, 0x40, 0xDB, 0xCC, 0x10,
 0x30, 0xF0, 0x21, 0x6D, 0x11, 0xF1, 0x82, 0xA5,
 0xC3, 0x67, 0xC7, 0xEC, 0x86, 0x67, 0x01, 0x6E,
@@ -37569,9 +37388,9 @@ u8 array_mp_8821c_fw_spic[] = {
 0x2C, 0xEF, 0x0F, 0x2F, 0x30, 0xF0, 0x21, 0x6C,
 0x11, 0xF1, 0x22, 0xA4, 0xFF, 0x6C, 0x10, 0xF0,
 0x23, 0x6E, 0x8C, 0xE9, 0x74, 0x49, 0x28, 0x31,
-0xE2, 0x67, 0x25, 0xE2, 0x2E, 0xF2, 0xC8, 0x9E,
+0xE2, 0x67, 0x25, 0xE2, 0x8E, 0xF1, 0xC8, 0x9E,
 0x0B, 0x10, 0x11, 0xF1, 0x22, 0xA6, 0x10, 0xF0,
-0x23, 0x6E, 0x2E, 0xF2, 0xCC, 0x9E, 0x8C, 0xE9,
+0x23, 0x6E, 0x8E, 0xF1, 0xCC, 0x9E, 0x8C, 0xE9,
 0x74, 0x49, 0x28, 0x31, 0xE2, 0x67, 0x25, 0xE2,
 0xD9, 0xE1, 0xC0, 0xA6, 0x0C, 0x31, 0xFD, 0xE1,
 0xCC, 0xEC, 0x10, 0xF0, 0x30, 0x6E, 0x00, 0xF0,
@@ -37584,16 +37403,16 @@ u8 array_mp_8821c_fw_spic[] = {
 0x2C, 0xEF, 0x0E, 0x2F, 0x30, 0xF0, 0x21, 0x6C,
 0x11, 0xF1, 0xC2, 0xA4, 0xFF, 0x6C, 0x10, 0xF0,
 0x23, 0x6F, 0x8C, 0xEE, 0x7C, 0x4E, 0xC8, 0x36,
-0xD9, 0xE2, 0x2E, 0xF2, 0xE8, 0x9F, 0x0A, 0x10,
+0xD9, 0xE2, 0x8E, 0xF1, 0xE8, 0x9F, 0x0A, 0x10,
 0x11, 0xF1, 0xC2, 0xA6, 0x10, 0xF0, 0x23, 0x6F,
-0x2E, 0xF2, 0xEC, 0x9F, 0x8C, 0xEE, 0x7C, 0x4E,
+0x8E, 0xF1, 0xEC, 0x9F, 0x8C, 0xEE, 0x7C, 0x4E,
 0xC8, 0x36, 0xD9, 0xE2, 0xF9, 0xE6, 0xC0, 0xA6,
 0x01, 0x4A, 0x04, 0x72, 0xCC, 0xEC, 0x80, 0xC5,
 0x01, 0x4D, 0x8D, 0x61, 0x30, 0xF0, 0x21, 0x6A,
 0x11, 0xF1, 0xA2, 0xA2, 0x01, 0x6C, 0xC4, 0x67,
 0xC4, 0xED, 0xCF, 0xED, 0x11, 0xF1, 0xC2, 0xA2,
 0xAC, 0xEB, 0xFF, 0x6D, 0x84, 0xEE, 0x10, 0xF0,
-0x23, 0x6E, 0xAE, 0xF3, 0xD4, 0x9E, 0xAC, 0xEC,
+0x23, 0x6E, 0x0E, 0xF3, 0xD4, 0x9E, 0xAC, 0xEC,
 0x80, 0xC6, 0x11, 0xF1, 0x82, 0xA2, 0xAC, 0xEC,
 0x01, 0x4C, 0xAC, 0xEC, 0x11, 0xF1, 0x82, 0xC2,
 0x11, 0xF1, 0xA2, 0xA2, 0x03, 0x6C, 0xAC, 0xEC,
@@ -37602,26 +37421,26 @@ u8 array_mp_8821c_fw_spic[] = {
 0x08, 0x6D, 0x01, 0x4C, 0x40, 0xF0, 0x81, 0xC2,
 0x40, 0xF0, 0x81, 0xA2, 0xAE, 0xEC, 0x1A, 0x2C,
 0x40, 0xF0, 0x81, 0xC2, 0x17, 0x10, 0x10, 0xF0,
-0x23, 0x6A, 0x6E, 0xF2, 0x88, 0x9A, 0x02, 0x6E,
+0x23, 0x6A, 0xCE, 0xF1, 0x88, 0x9A, 0x02, 0x6E,
 0x40, 0x9C, 0xCD, 0xEA, 0x40, 0xDC, 0x10, 0xF0,
-0x23, 0x6A, 0xAE, 0xF3, 0x58, 0x9A, 0x60, 0xC2,
+0x23, 0x6A, 0x0E, 0xF3, 0x58, 0x9A, 0x60, 0xC2,
 0x11, 0xF1, 0x62, 0xA5, 0xFF, 0x6A, 0x4C, 0xEB,
-0x10, 0xF0, 0x23, 0x6A, 0xAE, 0xF3, 0x5C, 0x9A,
+0x10, 0xF0, 0x23, 0x6A, 0x0E, 0xF3, 0x5C, 0x9A,
 0x60, 0xC2, 0x02, 0x10, 0x1F, 0xF7, 0x1C, 0x2B,
 0x03, 0x91, 0x02, 0x90, 0x02, 0x63, 0x20, 0xE8,
 0xFD, 0x63, 0x05, 0x62, 0x04, 0xD0, 0x10, 0xF0,
-0x23, 0x6A, 0xCE, 0xF3, 0x40, 0x9A, 0xFF, 0x68,
+0x23, 0x6A, 0x2E, 0xF3, 0x40, 0x9A, 0xFF, 0x68,
 0x60, 0xA2, 0x6C, 0xE8, 0x1D, 0x20, 0x00, 0x6B,
 0x60, 0xC2, 0x30, 0xF0, 0x20, 0x6A, 0xCE, 0xF4,
 0x5C, 0x9A, 0x01, 0x6C, 0x40, 0xEA, 0x10, 0xF0,
-0x23, 0x6A, 0xCE, 0xF3, 0x44, 0x9A, 0x20, 0x6B,
+0x23, 0x6A, 0x2E, 0xF3, 0x44, 0x9A, 0x20, 0x6B,
 0x20, 0x70, 0x60, 0xC2, 0x0D, 0x61, 0x30, 0xF0,
 0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A, 0x10, 0xF0,
-0x23, 0x6C, 0x80, 0xF0, 0x6C, 0x9A, 0xAE, 0xF2,
+0x23, 0x6C, 0x80, 0xF0, 0x6C, 0x9A, 0x0E, 0xF2,
 0x98, 0x9C, 0x8D, 0xEB, 0x80, 0xF0, 0x6C, 0xDA,
 0x05, 0x97, 0x04, 0x90, 0x03, 0x63, 0x00, 0xEF,
 0xFD, 0x63, 0x05, 0x62, 0x00, 0x1C, 0x96, 0x45,
-0x00, 0x18, 0xC3, 0xD0, 0x05, 0x6C, 0x01, 0x6D,
+0x00, 0x18, 0x9B, 0xD0, 0x05, 0x6C, 0x01, 0x6D,
 0x00, 0x18, 0x76, 0xC9, 0x00, 0x65, 0x00, 0x65,
 0x00, 0x65, 0x00, 0x65, 0x00, 0x65, 0x00, 0x65,
 0x00, 0x65, 0x00, 0x65, 0x00, 0x65, 0x00, 0x65,
@@ -37672,15 +37491,15 @@ u8 array_mp_8821c_fw_spic[] = {
 0xEE, 0xF4, 0x50, 0x9A, 0x40, 0xEA, 0xEB, 0xF6,
 0x60, 0xA0, 0x04, 0x6A, 0x6C, 0xEA, 0xFF, 0x6B,
 0x6C, 0xEA, 0x18, 0x22, 0x10, 0xF0, 0x23, 0x6A,
-0xCE, 0xF3, 0x48, 0x9A, 0xEB, 0xF6, 0xCC, 0x98,
+0x2E, 0xF3, 0x48, 0x9A, 0xEB, 0xF6, 0xCC, 0x98,
 0x00, 0x6B, 0x40, 0x9A, 0x10, 0xF0, 0x23, 0x6A,
-0xCE, 0xF3, 0x4C, 0x9A, 0x10, 0xF0, 0x23, 0x6C,
-0x8B, 0xF2, 0x09, 0x4C, 0x40, 0x9A, 0xA3, 0x67,
+0x2E, 0xF3, 0x4C, 0x9A, 0x10, 0xF0, 0x23, 0x6C,
+0xEB, 0xF1, 0x09, 0x4C, 0x40, 0x9A, 0xA3, 0x67,
 0x01, 0x6F, 0x5B, 0xE6, 0x04, 0xD3, 0x00, 0x18,
-0x87, 0xD5, 0x29, 0x10, 0x00, 0x18, 0xA2, 0xD6,
+0x5F, 0xD5, 0x29, 0x10, 0x00, 0x18, 0x7A, 0xD6,
 0x26, 0x10, 0x30, 0xF0, 0x20, 0x6A, 0xEE, 0xF4,
 0x54, 0x9A, 0x40, 0xEA, 0xEB, 0xF6, 0xB2, 0xA8,
-0x00, 0x6C, 0x00, 0x18, 0x4F, 0xD6, 0x1B, 0x10,
+0x00, 0x6C, 0x00, 0x18, 0x27, 0xD6, 0x1B, 0x10,
 0x1A, 0x20, 0x30, 0xF0, 0x20, 0x6A, 0xAE, 0xF2,
 0x5C, 0x9A, 0x13, 0x10, 0x14, 0x2A, 0x69, 0xA4,
 0xBD, 0x67, 0x7C, 0xC5, 0x68, 0xA4, 0x5E, 0xC5,
@@ -37693,10 +37512,10 @@ u8 array_mp_8821c_fw_spic[] = {
 0x68, 0x44, 0xFA, 0x4B, 0x4C, 0xEB, 0x04, 0x5B,
 0x03, 0x60, 0x80, 0x18, 0xE6, 0x07, 0x42, 0x10,
 0xFE, 0x4C, 0x4C, 0xEC, 0x0C, 0x5C, 0x32, 0x60,
-0x10, 0xF0, 0x23, 0x6A, 0x88, 0x34, 0x2E, 0xF1,
+0x10, 0xF0, 0x23, 0x6A, 0x88, 0x34, 0x8E, 0xF0,
 0x18, 0x4A, 0x89, 0xE2, 0x40, 0x9A, 0x00, 0xEA,
 0x30, 0xF0, 0x20, 0x6A, 0xCE, 0xF5, 0x48, 0x9A,
-0x08, 0x10, 0x85, 0x67, 0x00, 0x18, 0x65, 0xD6,
+0x08, 0x10, 0x85, 0x67, 0x00, 0x18, 0x3D, 0xD6,
 0x2D, 0x10, 0x30, 0xF0, 0x20, 0x6A, 0xEE, 0xF5,
 0x44, 0x9A, 0x85, 0x67, 0x40, 0xEA, 0x26, 0x10,
 0x30, 0xF0, 0x20, 0x6A, 0xCE, 0xF5, 0x54, 0x9A,
@@ -37706,13 +37525,13 @@ u8 array_mp_8821c_fw_spic[] = {
 0x30, 0xF0, 0x20, 0x6A, 0xEE, 0xF5, 0x40, 0x9A,
 0xE8, 0x17, 0x30, 0xF0, 0x20, 0x6A, 0xAE, 0xF5,
 0x54, 0x9A, 0xE3, 0x17, 0x10, 0xF0, 0x23, 0x6A,
-0x6E, 0xF2, 0x68, 0x9A, 0x10, 0xF0, 0x23, 0x6C,
-0xAE, 0xF2, 0x98, 0x9C, 0x40, 0x9B, 0x8D, 0xEA,
+0xCE, 0xF1, 0x68, 0x9A, 0x10, 0xF0, 0x23, 0x6C,
+0x0E, 0xF2, 0x98, 0x9C, 0x40, 0x9B, 0x8D, 0xEA,
 0x40, 0xDB, 0xFF, 0x6A, 0x05, 0x97, 0x03, 0x63,
 0x00, 0xEF, 0x00, 0x65, 0xFA, 0x63, 0x0B, 0x62,
 0x0A, 0xD1, 0x09, 0xD0, 0x10, 0xF0, 0x23, 0x6B,
-0xEE, 0xF1, 0x78, 0x9B, 0x10, 0xF0, 0x23, 0x6A,
-0x87, 0xF2, 0x05, 0x4A, 0x07, 0xD4, 0x40, 0xDB,
+0x4E, 0xF1, 0x78, 0x9B, 0x10, 0xF0, 0x23, 0x6A,
+0xE7, 0xF1, 0x05, 0x4A, 0x07, 0xD4, 0x40, 0xDB,
 0x60, 0xA4, 0x01, 0xA4, 0x02, 0x6A, 0x6C, 0xEA,
 0x24, 0x67, 0x06, 0xD0, 0x1F, 0x22, 0x42, 0xA4,
 0x06, 0xD2, 0x1C, 0x10, 0x07, 0x93, 0x01, 0x6D,
@@ -37743,9 +37562,9 @@ u8 array_mp_8821c_fw_spic[] = {
 0x08, 0x4A, 0x69, 0xF3, 0x88, 0xA2, 0x02, 0x6B,
 0x8C, 0xEB, 0x1C, 0x23, 0x03, 0x6B, 0x6B, 0xEB,
 0x8C, 0xEB, 0x69, 0xF3, 0x68, 0xC2, 0x00, 0x18,
-0xCA, 0xD4, 0x04, 0xD2, 0x30, 0xF0, 0x20, 0x6A,
+0xA2, 0xD4, 0x04, 0xD2, 0x30, 0xF0, 0x20, 0x6A,
 0x04, 0x93, 0x4F, 0xF5, 0x5C, 0x9A, 0x6E, 0xEA,
-0x03, 0x22, 0x04, 0x94, 0x00, 0x18, 0xEB, 0xD4,
+0x03, 0x22, 0x04, 0x94, 0x00, 0x18, 0xC3, 0xD4,
 0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A,
 0x69, 0xF3, 0x88, 0xA2, 0x02, 0x6B, 0x8D, 0xEB,
 0x69, 0xF3, 0x68, 0xC2, 0x0B, 0x97, 0x0A, 0x91,
@@ -37754,21 +37573,21 @@ u8 array_mp_8821c_fw_spic[] = {
 0x4C, 0xEC, 0x68, 0x44, 0xC8, 0x4B, 0x4C, 0xEB,
 0x20, 0x5B, 0x05, 0x67, 0x1B, 0x61, 0x03, 0x24,
 0x01, 0x74, 0x05, 0x60, 0x08, 0x10, 0x85, 0x67,
-0x00, 0x18, 0xDC, 0xCC, 0x13, 0x10, 0x85, 0x67,
-0x00, 0x18, 0xA1, 0xCE, 0x0F, 0x10, 0x10, 0xF0,
-0x23, 0x6A, 0x6E, 0xF2, 0x68, 0x9A, 0x01, 0x6D,
+0x00, 0x18, 0xB4, 0xCC, 0x13, 0x10, 0x85, 0x67,
+0x00, 0x18, 0x79, 0xCE, 0x0F, 0x10, 0x10, 0xF0,
+0x23, 0x6A, 0xCE, 0xF1, 0x68, 0x9A, 0x01, 0x6D,
 0x40, 0x9B, 0xAD, 0xEA, 0x40, 0xDB, 0x10, 0xF0,
-0x23, 0x6A, 0x0E, 0xF2, 0x40, 0x9A, 0x80, 0xC2,
+0x23, 0x6A, 0x6E, 0xF1, 0x40, 0x9A, 0x80, 0xC2,
 0x0E, 0x6A, 0x01, 0x10, 0x00, 0x6A, 0x40, 0xC0,
 0x05, 0x97, 0x04, 0x90, 0x03, 0x63, 0x00, 0xEF,
 0xFD, 0x63, 0x05, 0x62, 0x04, 0xD0, 0x10, 0xF0,
-0x23, 0x6B, 0xEE, 0xF1, 0x78, 0x9B, 0x10, 0xF0,
-0x23, 0x6A, 0x27, 0xF4, 0x01, 0x4A, 0x10, 0xF0,
+0x23, 0x6B, 0x4E, 0xF1, 0x78, 0x9B, 0x10, 0xF0,
+0x23, 0x6A, 0x87, 0xF3, 0x01, 0x4A, 0x10, 0xF0,
 0x30, 0x68, 0x40, 0xDB, 0x00, 0xF0, 0x00, 0x48,
 0x40, 0xF0, 0x40, 0xA0, 0x40, 0xF0, 0x61, 0xA0,
 0x4E, 0xEB, 0x29, 0x23, 0x4C, 0x32, 0x0D, 0xE2,
 0x80, 0xA3, 0xA1, 0x42, 0xB5, 0xE0, 0x00, 0x18,
-0xF2, 0xCE, 0x40, 0xF0, 0x40, 0xA0, 0x01, 0x4A,
+0xCA, 0xCE, 0x40, 0xF0, 0x40, 0xA0, 0x01, 0x4A,
 0x40, 0xF0, 0x40, 0xC0, 0x40, 0xF0, 0x60, 0xA0,
 0x40, 0xF0, 0x41, 0xA0, 0x6E, 0xEA, 0x0A, 0x22,
 0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A,
@@ -37776,7 +37595,7 @@ u8 array_mp_8821c_fw_spic[] = {
 0x80, 0xF0, 0x6C, 0xDA, 0x10, 0xF0, 0x30, 0x6A,
 0x00, 0xF0, 0x00, 0x4A, 0x40, 0xF0, 0x60, 0xA2,
 0x08, 0x6C, 0x8E, 0xEB, 0x02, 0x2B, 0x40, 0xF0,
-0x60, 0xC2, 0x00, 0x18, 0x56, 0xCD, 0x05, 0x97,
+0x60, 0xC2, 0x00, 0x18, 0x2E, 0xCD, 0x05, 0x97,
 0x04, 0x90, 0x03, 0x63, 0x00, 0xEF, 0x00, 0x65,
 0xFD, 0x63, 0x05, 0x62, 0x04, 0xD0, 0x10, 0xF0,
 0x30, 0x68, 0x00, 0xF0, 0x00, 0x48, 0xC1, 0xF7,
@@ -37784,35 +37603,35 @@ u8 array_mp_8821c_fw_spic[] = {
 0xB4, 0x35, 0x15, 0xE5, 0x46, 0xA5, 0x8C, 0xEA,
 0x20, 0x2A, 0x74, 0x33, 0x09, 0xE3, 0xC1, 0xF6,
 0x8E, 0xA2, 0xA2, 0x67, 0xC1, 0xF6, 0x0F, 0x4D,
-0x00, 0x18, 0xF2, 0xCE, 0xC1, 0xF7, 0x46, 0xA0,
-0x10, 0xF0, 0x23, 0x6C, 0xCE, 0xF3, 0x90, 0x9C,
+0x00, 0x18, 0xCA, 0xCE, 0xC1, 0xF7, 0x46, 0xA0,
+0x10, 0xF0, 0x23, 0x6C, 0x2E, 0xF3, 0x90, 0x9C,
 0x54, 0x33, 0x0D, 0xE3, 0xC1, 0xF6, 0xAC, 0xA3,
 0x76, 0x4A, 0x54, 0x32, 0xA0, 0xC4, 0xC1, 0xF6,
-0x8D, 0xA3, 0x10, 0xF0, 0x23, 0x6B, 0xCE, 0xF3,
+0x8D, 0xA3, 0x10, 0xF0, 0x23, 0x6B, 0x2E, 0xF3,
 0x74, 0x9B, 0x41, 0xE0, 0x80, 0xC3, 0x86, 0x40,
 0x49, 0x10, 0x01, 0x72, 0x49, 0x61, 0x74, 0x33,
 0x0D, 0xE3, 0xC1, 0xF6, 0x47, 0xA3, 0xFF, 0x72,
 0x0C, 0x61, 0xC1, 0xF6, 0x88, 0xA3, 0x06, 0x4D,
-0x00, 0x18, 0x78, 0xCE, 0xC1, 0xF7, 0x66, 0xA0,
+0x00, 0x18, 0x50, 0xCE, 0xC1, 0xF7, 0x66, 0xA0,
 0x74, 0x33, 0x01, 0xE3, 0xC1, 0xF6, 0x4E, 0xC0,
 0x04, 0x10, 0x01, 0x6A, 0x4B, 0xEA, 0xC1, 0xF6,
 0x4E, 0xC3, 0x10, 0xF0, 0x30, 0x6A, 0x00, 0xF0,
 0x00, 0x4A, 0xC1, 0xF7, 0x66, 0xA2, 0x10, 0xF0,
-0x23, 0x6D, 0xCE, 0xF3, 0xB0, 0x9D, 0x74, 0x34,
+0x23, 0x6D, 0x2E, 0xF3, 0xB0, 0x9D, 0x74, 0x34,
 0x51, 0xE4, 0xC1, 0xF6, 0xCC, 0xA4, 0x76, 0x4B,
 0x74, 0x33, 0xC0, 0xC5, 0xC1, 0xF6, 0xAD, 0xA4,
-0x10, 0xF0, 0x23, 0x6C, 0xCE, 0xF3, 0x94, 0x9C,
+0x10, 0xF0, 0x23, 0x6C, 0x2E, 0xF3, 0x94, 0x9C,
 0x49, 0xE3, 0xA0, 0xC4, 0x46, 0x82, 0x00, 0x52,
-0x0B, 0x60, 0x10, 0xF0, 0x23, 0x6A, 0x6E, 0xF2,
-0x68, 0x9A, 0x10, 0xF0, 0x23, 0x6C, 0xCE, 0xF2,
+0x0B, 0x60, 0x10, 0xF0, 0x23, 0x6A, 0xCE, 0xF1,
+0x68, 0x9A, 0x10, 0xF0, 0x23, 0x6C, 0x2E, 0xF2,
 0x90, 0x9C, 0x40, 0x9B, 0x8D, 0xEA, 0x40, 0xDB,
 0x10, 0xF0, 0x30, 0x6A, 0x00, 0xF0, 0x00, 0x4A,
 0xC1, 0xF7, 0x66, 0xA2, 0x76, 0x4B, 0x74, 0x33,
-0x69, 0xE2, 0x86, 0x42, 0x00, 0x18, 0x0F, 0xCE,
+0x69, 0xE2, 0x86, 0x42, 0x00, 0x18, 0xE7, 0xCD,
 0x05, 0x97, 0x04, 0x90, 0x03, 0x63, 0x00, 0xEF,
 0xFD, 0x63, 0x05, 0x62, 0x04, 0xD0, 0x10, 0xF0,
-0x23, 0x6B, 0xEE, 0xF1, 0x78, 0x9B, 0x10, 0xF0,
-0x23, 0x6A, 0xA7, 0xF5, 0x09, 0x4A, 0x10, 0xF0,
+0x23, 0x6B, 0x4E, 0xF1, 0x78, 0x9B, 0x10, 0xF0,
+0x23, 0x6A, 0x07, 0xF5, 0x09, 0x4A, 0x10, 0xF0,
 0x30, 0x68, 0x40, 0xDB, 0x00, 0xF0, 0x00, 0x48,
 0xC1, 0xF7, 0x66, 0xA0, 0xC1, 0xF7, 0x47, 0xA0,
 0x6E, 0xEA, 0x4A, 0x22, 0x30, 0xF0, 0x20, 0x6A,
@@ -37825,7 +37644,7 @@ u8 array_mp_8821c_fw_spic[] = {
 0x20, 0x6B, 0xC0, 0xF1, 0x08, 0x4B, 0x80, 0xF0,
 0x4C, 0x9B, 0x04, 0x6C, 0x8D, 0xEA, 0x02, 0x6C,
 0x8D, 0xEA, 0x80, 0xF0, 0x4C, 0xDB, 0x24, 0x10,
-0x00, 0x18, 0x2A, 0xCF, 0xC1, 0xF7, 0x46, 0xA0,
+0x00, 0x18, 0x02, 0xCF, 0xC1, 0xF7, 0x46, 0xA0,
 0x01, 0x4A, 0xC1, 0xF7, 0x46, 0xC0, 0xC1, 0xF7,
 0x66, 0xA0, 0xC1, 0xF7, 0x47, 0xA0, 0x6E, 0xEA,
 0x0A, 0x22, 0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1,
@@ -37833,201 +37652,201 @@ u8 array_mp_8821c_fw_spic[] = {
 0x8D, 0xEB, 0x80, 0xF0, 0x6C, 0xDA, 0x10, 0xF0,
 0x30, 0x6A, 0x00, 0xF0, 0x00, 0x4A, 0xC1, 0xF7,
 0x66, 0xA2, 0x08, 0x6C, 0x8E, 0xEB, 0x02, 0x2B,
-0xC1, 0xF7, 0x66, 0xC2, 0x00, 0x18, 0xE9, 0xCC,
+0xC1, 0xF7, 0x66, 0xC2, 0x00, 0x18, 0xC1, 0xCC,
 0x05, 0x97, 0x04, 0x90, 0x03, 0x63, 0x00, 0xEF,
 0xFF, 0xF7, 0x1F, 0x6A, 0x10, 0xF0, 0x23, 0x6B,
-0x8C, 0xEA, 0xCE, 0xF3, 0x78, 0x9B, 0x10, 0xF0,
-0x23, 0x6C, 0xCE, 0xF3, 0x9C, 0x9C, 0xCC, 0xEB,
+0x8C, 0xEA, 0x2E, 0xF3, 0x78, 0x9B, 0x10, 0xF0,
+0x23, 0x6C, 0x2E, 0xF3, 0x9C, 0x9C, 0xCC, 0xEB,
 0x40, 0xF6, 0xA0, 0x35, 0x8D, 0xEB, 0x1F, 0xF7,
 0x00, 0x6C, 0x4C, 0xEC, 0x02, 0xF0, 0x00, 0x74,
 0xAD, 0xEB, 0x01, 0x60, 0x05, 0x2C, 0x10, 0xF0,
-0x23, 0x6C, 0x2E, 0xF2, 0x88, 0x9C, 0x04, 0x10,
-0x10, 0xF0, 0x23, 0x6C, 0x2E, 0xF2, 0x8C, 0x9C,
+0x23, 0x6C, 0x8E, 0xF1, 0x88, 0x9C, 0x04, 0x10,
+0x10, 0xF0, 0x23, 0x6C, 0x8E, 0xF1, 0x8C, 0x9C,
 0x89, 0xE2, 0x60, 0xDA, 0x20, 0xE8, 0x00, 0x65,
 0xFF, 0xF7, 0x1F, 0x6A, 0x8C, 0xEA, 0x1F, 0xF7,
 0x00, 0x6C, 0x4C, 0xEC, 0xFF, 0x6B, 0x02, 0xF0,
 0x00, 0x74, 0xAC, 0xEB, 0x01, 0x60, 0x05, 0x2C,
-0x10, 0xF0, 0x23, 0x6C, 0x2E, 0xF2, 0x88, 0x9C,
-0x04, 0x10, 0x10, 0xF0, 0x23, 0x6C, 0x2E, 0xF2,
+0x10, 0xF0, 0x23, 0x6C, 0x8E, 0xF1, 0x88, 0x9C,
+0x04, 0x10, 0x10, 0xF0, 0x23, 0x6C, 0x8E, 0xF1,
 0x8C, 0x9C, 0x91, 0xE2, 0x00, 0x6D, 0xA0, 0xDC,
-0x10, 0xF0, 0x23, 0x6C, 0xCE, 0xF3, 0x98, 0x9C,
+0x10, 0xF0, 0x23, 0x6C, 0x2E, 0xF3, 0x98, 0x9C,
 0xD4, 0x36, 0x40, 0xF6, 0x60, 0x33, 0x8C, 0xEE,
-0x6D, 0xEE, 0x10, 0xF0, 0x23, 0x6B, 0xCE, 0xF3,
+0x6D, 0xEE, 0x10, 0xF0, 0x23, 0x6B, 0x2E, 0xF3,
 0x7C, 0x9B, 0x6D, 0xEE, 0x1F, 0xF7, 0x00, 0x6B,
 0x4C, 0xEB, 0x02, 0xF0, 0x00, 0x73, 0x01, 0x60,
-0x05, 0x2B, 0x10, 0xF0, 0x23, 0x6B, 0x2E, 0xF2,
+0x05, 0x2B, 0x10, 0xF0, 0x23, 0x6B, 0x8E, 0xF1,
 0x68, 0x9B, 0x04, 0x10, 0x10, 0xF0, 0x23, 0x6B,
-0x2E, 0xF2, 0x6C, 0x9B, 0x69, 0xE2, 0xC0, 0xDA,
+0x8E, 0xF1, 0x6C, 0x9B, 0x69, 0xE2, 0xC0, 0xDA,
 0x20, 0xE8, 0x00, 0x65, 0x0F, 0xF5, 0x00, 0x6B,
 0x78, 0xEE, 0xFF, 0xF7, 0x1F, 0x6A, 0x8C, 0xEA,
-0x10, 0xF0, 0x23, 0x6C, 0xCE, 0xF3, 0x98, 0x9C,
+0x10, 0xF0, 0x23, 0x6C, 0x2E, 0xF3, 0x98, 0x9C,
 0x40, 0xF6, 0xA0, 0x35, 0x12, 0xEB, 0x8C, 0xEB,
-0x10, 0xF0, 0x23, 0x6C, 0xCE, 0xF3, 0x9C, 0x9C,
+0x10, 0xF0, 0x23, 0x6C, 0x2E, 0xF3, 0x9C, 0x9C,
 0xAD, 0xEB, 0x8D, 0xEB, 0x1F, 0xF7, 0x00, 0x6C,
 0x4C, 0xEC, 0x02, 0xF0, 0x00, 0x74, 0x01, 0x60,
-0x05, 0x2C, 0x10, 0xF0, 0x23, 0x6C, 0x2E, 0xF2,
+0x05, 0x2C, 0x10, 0xF0, 0x23, 0x6C, 0x8E, 0xF1,
 0x88, 0x9C, 0x04, 0x10, 0x10, 0xF0, 0x23, 0x6C,
-0x2E, 0xF2, 0x8C, 0x9C, 0x89, 0xE2, 0x60, 0xDA,
+0x8E, 0xF1, 0x8C, 0x9C, 0x89, 0xE2, 0x60, 0xDA,
 0x20, 0xE8, 0x00, 0x65, 0x10, 0xF0, 0x23, 0x6A,
-0xEE, 0xF3, 0x4C, 0x9A, 0x40, 0x9A, 0x20, 0xE8,
+0x4E, 0xF3, 0x4C, 0x9A, 0x40, 0x9A, 0x20, 0xE8,
 0x30, 0xF0, 0x20, 0x6B, 0xC0, 0xF1, 0x08, 0x4B,
 0x4C, 0x9B, 0x8D, 0xEA, 0x4C, 0xDB, 0x10, 0xF0,
-0x23, 0x6B, 0x0E, 0xF4, 0x60, 0x9B, 0x80, 0xDB,
-0x10, 0xF0, 0x23, 0x6B, 0x0E, 0xF4, 0x64, 0x9B,
+0x23, 0x6B, 0x6E, 0xF3, 0x60, 0x9B, 0x80, 0xDB,
+0x10, 0xF0, 0x23, 0x6B, 0x6E, 0xF3, 0x64, 0x9B,
 0x40, 0xDB, 0x20, 0xE8, 0xFD, 0x63, 0x05, 0x62,
-0x04, 0xD0, 0x10, 0xF0, 0x23, 0x6A, 0x0E, 0xF4,
+0x04, 0xD0, 0x10, 0xF0, 0x23, 0x6A, 0x6E, 0xF3,
 0x68, 0x9A, 0xC0, 0x6A, 0xFF, 0x68, 0x80, 0xA3,
 0x8C, 0xEA, 0x40, 0xC3, 0x30, 0xF0, 0x20, 0x6A,
 0xCE, 0xF4, 0x5C, 0x9A, 0x0A, 0x6C, 0x40, 0xEA,
-0x10, 0xF0, 0x23, 0x6A, 0x0E, 0xF4, 0x4C, 0x9A,
+0x10, 0xF0, 0x23, 0x6A, 0x6E, 0xF3, 0x4C, 0x9A,
 0x01, 0x6B, 0x05, 0x97, 0x40, 0xA2, 0x0C, 0xEA,
 0x5E, 0x32, 0x6E, 0xEA, 0x6C, 0xEA, 0x0C, 0xEA,
 0x04, 0x90, 0x03, 0x63, 0x00, 0xEF, 0x00, 0x65,
 0xFD, 0x63, 0x05, 0x62, 0x04, 0xD0, 0x10, 0xF0,
-0x23, 0x6B, 0xEE, 0xF1, 0x78, 0x9B, 0x10, 0xF0,
-0x23, 0x6A, 0xE7, 0xF7, 0x11, 0x4A, 0x40, 0xDB,
+0x23, 0x6B, 0x4E, 0xF1, 0x78, 0x9B, 0x10, 0xF0,
+0x23, 0x6A, 0x47, 0xF7, 0x11, 0x4A, 0x40, 0xDB,
 0x00, 0x68, 0x28, 0x10, 0x82, 0xF3, 0x08, 0x70,
-0x11, 0x61, 0x10, 0xF0, 0x23, 0x6A, 0x6E, 0xF2,
+0x11, 0x61, 0x10, 0xF0, 0x23, 0x6A, 0xCE, 0xF1,
 0x68, 0x9A, 0x02, 0xF0, 0x00, 0x6C, 0x40, 0x9B,
 0x8D, 0xEA, 0x40, 0xDB, 0x10, 0xF0, 0x23, 0x6A,
-0x0E, 0xF4, 0x50, 0x9A, 0x03, 0x6B, 0x6B, 0xEB,
+0x6E, 0xF3, 0x50, 0x9A, 0x03, 0x6B, 0x6B, 0xEB,
 0x60, 0xC2, 0x18, 0x10, 0xFF, 0xF7, 0x1F, 0x6A,
 0x01, 0x48, 0x4C, 0xE8, 0x30, 0xF0, 0x20, 0x6A,
 0xCE, 0xF4, 0x5C, 0x9A, 0x14, 0x6C, 0x40, 0xEA,
 0x33, 0x58, 0x08, 0x61, 0x10, 0xF0, 0x23, 0x6A,
-0x0E, 0xF4, 0x54, 0x9A, 0x60, 0xA2, 0x08, 0x6A,
-0x6C, 0xEA, 0x04, 0x2A, 0x00, 0x18, 0xEB, 0xCF,
+0x6E, 0xF3, 0x54, 0x9A, 0x60, 0xA2, 0x08, 0x6A,
+0x6C, 0xEA, 0x04, 0x2A, 0x00, 0x18, 0xC3, 0xCF,
 0x01, 0x72, 0xD4, 0x61, 0x10, 0xF0, 0x23, 0x6A,
-0x0E, 0xF4, 0x50, 0x9A, 0x02, 0x6B, 0x6B, 0xEB,
-0x60, 0xC2, 0x10, 0xF0, 0x23, 0x6B, 0xEE, 0xF1,
-0x78, 0x9B, 0x10, 0xF0, 0x23, 0x6A, 0xE7, 0xF7,
+0x6E, 0xF3, 0x50, 0x9A, 0x02, 0x6B, 0x6B, 0xEB,
+0x60, 0xC2, 0x10, 0xF0, 0x23, 0x6B, 0x4E, 0xF1,
+0x78, 0x9B, 0x10, 0xF0, 0x23, 0x6A, 0x47, 0xF7,
 0x12, 0x4A, 0x40, 0xDB, 0x05, 0x97, 0x04, 0x90,
 0x03, 0x63, 0x00, 0xEF, 0x05, 0x5C, 0x5E, 0x60,
-0x10, 0xF0, 0x23, 0x6A, 0x88, 0x34, 0x6E, 0xF1,
+0x10, 0xF0, 0x23, 0x6A, 0x88, 0x34, 0xCE, 0xF0,
 0x08, 0x4A, 0x89, 0xE2, 0x40, 0x9A, 0x00, 0xEA,
 0x30, 0xF0, 0x20, 0x6B, 0xC0, 0xF1, 0x48, 0x9B,
 0xAD, 0xEA, 0xC0, 0xF1, 0x48, 0xDB, 0x10, 0xF0,
-0x23, 0x6B, 0xCE, 0xF3, 0x64, 0x9B, 0xA0, 0xDB,
-0x10, 0xF0, 0x23, 0x6B, 0x0E, 0xF4, 0x78, 0x9B,
+0x23, 0x6B, 0x2E, 0xF3, 0x64, 0x9B, 0xA0, 0xDB,
+0x10, 0xF0, 0x23, 0x6B, 0x6E, 0xF3, 0x78, 0x9B,
 0x32, 0x10, 0x30, 0xF0, 0x20, 0x6B, 0xC0, 0xF1,
 0x08, 0x4B, 0x41, 0x9B, 0xAD, 0xEA, 0x41, 0xDB,
-0x10, 0xF0, 0x23, 0x6B, 0x0E, 0xF4, 0x7C, 0x9B,
-0xA0, 0xDB, 0x10, 0xF0, 0x23, 0x6B, 0x2E, 0xF4,
+0x10, 0xF0, 0x23, 0x6B, 0x6E, 0xF3, 0x7C, 0x9B,
+0xA0, 0xDB, 0x10, 0xF0, 0x23, 0x6B, 0x8E, 0xF3,
 0x60, 0x9B, 0x21, 0x10, 0x30, 0xF0, 0x20, 0x6B,
 0xC0, 0xF1, 0x08, 0x4B, 0x42, 0x9B, 0xAD, 0xEA,
-0x42, 0xDB, 0x10, 0xF0, 0x23, 0x6B, 0x2E, 0xF4,
+0x42, 0xDB, 0x10, 0xF0, 0x23, 0x6B, 0x8E, 0xF3,
 0x64, 0x9B, 0xA0, 0xDB, 0x10, 0xF0, 0x23, 0x6B,
-0x2E, 0xF4, 0x68, 0x9B, 0x10, 0x10, 0x30, 0xF0,
+0x8E, 0xF3, 0x68, 0x9B, 0x10, 0x10, 0x30, 0xF0,
 0x20, 0x6B, 0xC0, 0xF1, 0x08, 0x4B, 0x43, 0x9B,
 0xAD, 0xEA, 0x43, 0xDB, 0x10, 0xF0, 0x23, 0x6B,
-0x2E, 0xF4, 0x6C, 0x9B, 0xA0, 0xDB, 0x10, 0xF0,
-0x23, 0x6B, 0x2E, 0xF4, 0x70, 0x9B, 0x40, 0xDB,
+0x8E, 0xF3, 0x6C, 0x9B, 0xA0, 0xDB, 0x10, 0xF0,
+0x23, 0x6B, 0x8E, 0xF3, 0x70, 0x9B, 0x40, 0xDB,
 0x20, 0xE8, 0x30, 0xF0, 0x20, 0x6B, 0xC0, 0xF1,
 0x08, 0x4B, 0x44, 0x9B, 0xAD, 0xEA, 0x44, 0xDB,
-0x10, 0xF0, 0x23, 0x6B, 0x2E, 0xF4, 0x74, 0x9B,
-0xA0, 0xDB, 0x10, 0xF0, 0x23, 0x6B, 0x2E, 0xF4,
+0x10, 0xF0, 0x23, 0x6B, 0x8E, 0xF3, 0x74, 0x9B,
+0xA0, 0xDB, 0x10, 0xF0, 0x23, 0x6B, 0x8E, 0xF3,
 0x78, 0x9B, 0x40, 0xDB, 0x20, 0xE8, 0x00, 0x65,
 0x05, 0x5C, 0x63, 0x60, 0x10, 0xF0, 0x23, 0x6A,
-0x88, 0x34, 0x6E, 0xF1, 0x1C, 0x4A, 0x89, 0xE2,
+0x88, 0x34, 0xCE, 0xF0, 0x1C, 0x4A, 0x89, 0xE2,
 0x40, 0x9A, 0x00, 0xEA, 0x30, 0xF0, 0x20, 0x6B,
 0xC0, 0xF1, 0x88, 0x9B, 0xAF, 0xEA, 0x8C, 0xEA,
 0xC0, 0xF1, 0x48, 0xDB, 0x10, 0xF0, 0x23, 0x6B,
-0x0E, 0xF4, 0x78, 0x9B, 0x40, 0xDB, 0x10, 0xF0,
-0x23, 0x6A, 0xCE, 0xF3, 0x44, 0x9A, 0x35, 0x10,
+0x6E, 0xF3, 0x78, 0x9B, 0x40, 0xDB, 0x10, 0xF0,
+0x23, 0x6A, 0x2E, 0xF3, 0x44, 0x9A, 0x35, 0x10,
 0x30, 0xF0, 0x20, 0x6B, 0xC0, 0xF1, 0x08, 0x4B,
 0x81, 0x9B, 0xAF, 0xEA, 0x8C, 0xEA, 0x41, 0xDB,
-0x10, 0xF0, 0x23, 0x6B, 0x2E, 0xF4, 0x60, 0x9B,
-0x40, 0xDB, 0x10, 0xF0, 0x23, 0x6A, 0x0E, 0xF4,
+0x10, 0xF0, 0x23, 0x6B, 0x8E, 0xF3, 0x60, 0x9B,
+0x40, 0xDB, 0x10, 0xF0, 0x23, 0x6A, 0x6E, 0xF3,
 0x5C, 0x9A, 0x23, 0x10, 0x30, 0xF0, 0x20, 0x6B,
 0xC0, 0xF1, 0x08, 0x4B, 0x82, 0x9B, 0xAF, 0xEA,
 0x8C, 0xEA, 0x42, 0xDB, 0x10, 0xF0, 0x23, 0x6B,
-0x2E, 0xF4, 0x68, 0x9B, 0x40, 0xDB, 0x10, 0xF0,
-0x23, 0x6A, 0x2E, 0xF4, 0x44, 0x9A, 0x11, 0x10,
+0x8E, 0xF3, 0x68, 0x9B, 0x40, 0xDB, 0x10, 0xF0,
+0x23, 0x6A, 0x8E, 0xF3, 0x44, 0x9A, 0x11, 0x10,
 0x30, 0xF0, 0x20, 0x6B, 0xC0, 0xF1, 0x08, 0x4B,
 0x83, 0x9B, 0xAF, 0xEA, 0x8C, 0xEA, 0x43, 0xDB,
-0x10, 0xF0, 0x23, 0x6B, 0x2E, 0xF4, 0x70, 0x9B,
-0x40, 0xDB, 0x10, 0xF0, 0x23, 0x6A, 0x2E, 0xF4,
+0x10, 0xF0, 0x23, 0x6B, 0x8E, 0xF3, 0x70, 0x9B,
+0x40, 0xDB, 0x10, 0xF0, 0x23, 0x6A, 0x8E, 0xF3,
 0x4C, 0x9A, 0xA0, 0xDA, 0x20, 0xE8, 0x30, 0xF0,
 0x20, 0x6B, 0xC0, 0xF1, 0x08, 0x4B, 0x84, 0x9B,
 0xAF, 0xEA, 0x8C, 0xEA, 0x44, 0xDB, 0x10, 0xF0,
-0x23, 0x6B, 0x2E, 0xF4, 0x78, 0x9B, 0x40, 0xDB,
-0x10, 0xF0, 0x23, 0x6A, 0x2E, 0xF4, 0x54, 0x9A,
+0x23, 0x6B, 0x8E, 0xF3, 0x78, 0x9B, 0x40, 0xDB,
+0x10, 0xF0, 0x23, 0x6A, 0x8E, 0xF3, 0x54, 0x9A,
 0xA0, 0xDA, 0x20, 0xE8, 0x01, 0x74, 0x15, 0x60,
 0x03, 0x24, 0x02, 0x74, 0x23, 0x60, 0x20, 0xE8,
 0x30, 0xF0, 0x20, 0x6B, 0xC0, 0xF1, 0x08, 0x4B,
 0x4E, 0x9B, 0xAD, 0xEA, 0x4E, 0xDB, 0x10, 0xF0,
-0x23, 0x6B, 0x2E, 0xF4, 0x7C, 0x9B, 0xA0, 0xDB,
-0x10, 0xF0, 0x23, 0x6B, 0x4E, 0xF4, 0x60, 0x9B,
+0x23, 0x6B, 0x8E, 0xF3, 0x7C, 0x9B, 0xA0, 0xDB,
+0x10, 0xF0, 0x23, 0x6B, 0xAE, 0xF3, 0x60, 0x9B,
 0x21, 0x10, 0x30, 0xF0, 0x20, 0x6B, 0xC0, 0xF1,
 0x08, 0x4B, 0x4F, 0x9B, 0xAD, 0xEA, 0x4F, 0xDB,
-0x10, 0xF0, 0x23, 0x6B, 0x4E, 0xF4, 0x64, 0x9B,
-0xA0, 0xDB, 0x10, 0xF0, 0x23, 0x6B, 0x4E, 0xF4,
+0x10, 0xF0, 0x23, 0x6B, 0xAE, 0xF3, 0x64, 0x9B,
+0xA0, 0xDB, 0x10, 0xF0, 0x23, 0x6B, 0xAE, 0xF3,
 0x68, 0x9B, 0x10, 0x10, 0x30, 0xF0, 0x20, 0x6B,
 0xC0, 0xF1, 0x08, 0x4B, 0x50, 0x9B, 0xAD, 0xEA,
-0x50, 0xDB, 0x10, 0xF0, 0x23, 0x6B, 0x4E, 0xF4,
+0x50, 0xDB, 0x10, 0xF0, 0x23, 0x6B, 0xAE, 0xF3,
 0x6C, 0x9B, 0xA0, 0xDB, 0x10, 0xF0, 0x23, 0x6B,
-0x4E, 0xF4, 0x70, 0x9B, 0x40, 0xDB, 0x20, 0xE8,
+0xAE, 0xF3, 0x70, 0x9B, 0x40, 0xDB, 0x20, 0xE8,
 0x01, 0x74, 0x16, 0x60, 0x03, 0x24, 0x02, 0x74,
 0x25, 0x60, 0x20, 0xE8, 0x30, 0xF0, 0x20, 0x6B,
 0xC0, 0xF1, 0x08, 0x4B, 0x8E, 0x9B, 0xAF, 0xEA,
 0x8C, 0xEA, 0x4E, 0xDB, 0x10, 0xF0, 0x23, 0x6B,
-0x4E, 0xF4, 0x60, 0x9B, 0x40, 0xDB, 0x10, 0xF0,
-0x23, 0x6A, 0x2E, 0xF4, 0x5C, 0x9A, 0x23, 0x10,
+0xAE, 0xF3, 0x60, 0x9B, 0x40, 0xDB, 0x10, 0xF0,
+0x23, 0x6A, 0x8E, 0xF3, 0x5C, 0x9A, 0x23, 0x10,
 0x30, 0xF0, 0x20, 0x6B, 0xC0, 0xF1, 0x08, 0x4B,
 0x8F, 0x9B, 0xAF, 0xEA, 0x8C, 0xEA, 0x4F, 0xDB,
-0x10, 0xF0, 0x23, 0x6B, 0x4E, 0xF4, 0x68, 0x9B,
-0x40, 0xDB, 0x10, 0xF0, 0x23, 0x6A, 0x4E, 0xF4,
+0x10, 0xF0, 0x23, 0x6B, 0xAE, 0xF3, 0x68, 0x9B,
+0x40, 0xDB, 0x10, 0xF0, 0x23, 0x6A, 0xAE, 0xF3,
 0x44, 0x9A, 0x11, 0x10, 0x30, 0xF0, 0x20, 0x6B,
 0xC0, 0xF1, 0x08, 0x4B, 0x90, 0x9B, 0xAF, 0xEA,
 0x8C, 0xEA, 0x50, 0xDB, 0x10, 0xF0, 0x23, 0x6B,
-0x4E, 0xF4, 0x70, 0x9B, 0x40, 0xDB, 0x10, 0xF0,
-0x23, 0x6A, 0x4E, 0xF4, 0x4C, 0x9A, 0xA0, 0xDA,
+0xAE, 0xF3, 0x70, 0x9B, 0x40, 0xDB, 0x10, 0xF0,
+0x23, 0x6A, 0xAE, 0xF3, 0x4C, 0x9A, 0xA0, 0xDA,
 0x20, 0xE8, 0x00, 0x65, 0x10, 0xF0, 0x23, 0x6C,
-0x0E, 0xF4, 0x98, 0x9C, 0x00, 0x6A, 0x30, 0xF0,
+0x6E, 0xF3, 0x98, 0x9C, 0x00, 0x6A, 0x30, 0xF0,
 0x20, 0x6B, 0xC0, 0xF1, 0x48, 0xDB, 0xC0, 0xF1,
 0x08, 0x4B, 0x41, 0xDB, 0x42, 0xDB, 0x43, 0xDB,
 0x44, 0xDB, 0x40, 0xDC, 0x10, 0xF0, 0x23, 0x6C,
-0x2E, 0xF4, 0x80, 0x9C, 0x40, 0xDC, 0x10, 0xF0,
-0x23, 0x6C, 0x2E, 0xF4, 0x88, 0x9C, 0x40, 0xDC,
-0x10, 0xF0, 0x23, 0x6C, 0x2E, 0xF4, 0x90, 0x9C,
-0x40, 0xDC, 0x10, 0xF0, 0x23, 0x6C, 0x2E, 0xF4,
+0x8E, 0xF3, 0x80, 0x9C, 0x40, 0xDC, 0x10, 0xF0,
+0x23, 0x6C, 0x8E, 0xF3, 0x88, 0x9C, 0x40, 0xDC,
+0x10, 0xF0, 0x23, 0x6C, 0x8E, 0xF3, 0x90, 0x9C,
+0x40, 0xDC, 0x10, 0xF0, 0x23, 0x6C, 0x8E, 0xF3,
 0x98, 0x9C, 0x40, 0xDC, 0x10, 0xF0, 0x23, 0x6C,
-0x4E, 0xF4, 0x80, 0x9C, 0x4E, 0xDB, 0x4F, 0xDB,
-0x40, 0xDC, 0x10, 0xF0, 0x23, 0x6C, 0x4E, 0xF4,
+0xAE, 0xF3, 0x80, 0x9C, 0x4E, 0xDB, 0x4F, 0xDB,
+0x40, 0xDC, 0x10, 0xF0, 0x23, 0x6C, 0xAE, 0xF3,
 0x88, 0x9C, 0x40, 0xDC, 0x10, 0xF0, 0x23, 0x6C,
-0x4E, 0xF4, 0x90, 0x9C, 0x50, 0xDB, 0x40, 0xDC,
-0x4C, 0xDB, 0x10, 0xF0, 0x23, 0x6B, 0x0E, 0xF4,
+0xAE, 0xF3, 0x90, 0x9C, 0x50, 0xDB, 0x40, 0xDC,
+0x4C, 0xDB, 0x10, 0xF0, 0x23, 0x6B, 0x6E, 0xF3,
 0x64, 0x9B, 0x40, 0xDB, 0x20, 0xE8, 0x00, 0x65,
-0x10, 0xF0, 0x23, 0x6B, 0xCE, 0xF3, 0x64, 0x9B,
+0x10, 0xF0, 0x23, 0x6B, 0x2E, 0xF3, 0x64, 0x9B,
 0x01, 0x6A, 0x4B, 0xEA, 0x40, 0xDB, 0x10, 0xF0,
-0x23, 0x6B, 0x0E, 0xF4, 0x7C, 0x9B, 0x40, 0xDB,
-0x10, 0xF0, 0x23, 0x6B, 0x2E, 0xF4, 0x64, 0x9B,
-0x40, 0xDB, 0x10, 0xF0, 0x23, 0x6B, 0x2E, 0xF4,
+0x23, 0x6B, 0x6E, 0xF3, 0x7C, 0x9B, 0x40, 0xDB,
+0x10, 0xF0, 0x23, 0x6B, 0x8E, 0xF3, 0x64, 0x9B,
+0x40, 0xDB, 0x10, 0xF0, 0x23, 0x6B, 0x8E, 0xF3,
 0x6C, 0x9B, 0x40, 0xDB, 0x10, 0xF0, 0x23, 0x6B,
-0x2E, 0xF4, 0x7C, 0x9B, 0x40, 0xDB, 0x10, 0xF0,
-0x23, 0x6B, 0x4E, 0xF4, 0x64, 0x9B, 0x40, 0xDB,
-0x10, 0xF0, 0x23, 0x6B, 0x4E, 0xF4, 0x70, 0x9B,
-0x40, 0xDB, 0x10, 0xF0, 0x23, 0x6B, 0x0E, 0xF4,
+0x8E, 0xF3, 0x7C, 0x9B, 0x40, 0xDB, 0x10, 0xF0,
+0x23, 0x6B, 0xAE, 0xF3, 0x64, 0x9B, 0x40, 0xDB,
+0x10, 0xF0, 0x23, 0x6B, 0xAE, 0xF3, 0x70, 0x9B,
+0x40, 0xDB, 0x10, 0xF0, 0x23, 0x6B, 0x6E, 0xF3,
 0x60, 0x9B, 0x40, 0xDB, 0x20, 0xE8, 0x00, 0x65,
 0xFC, 0x63, 0x07, 0x62, 0x06, 0xD1, 0x05, 0xD0,
 0x10, 0xF0, 0x23, 0x6A, 0xFF, 0xF7, 0x1F, 0x69,
-0x8C, 0xE9, 0x4E, 0xF4, 0x9C, 0x9A, 0xFF, 0x6B,
+0x8C, 0xE9, 0xAE, 0xF3, 0x9C, 0x9A, 0xFF, 0x6B,
 0x8E, 0x6A, 0xA0, 0xA4, 0x00, 0x68, 0x6C, 0xED,
 0xAC, 0xEA, 0x40, 0xC4, 0x71, 0x6A, 0xAD, 0xEA,
 0x6C, 0xEA, 0x40, 0xC4, 0x10, 0xF0, 0x23, 0x6A,
-0x6E, 0xF4, 0x80, 0x9A, 0x01, 0x6D, 0x40, 0xA4,
+0xCE, 0xF3, 0x80, 0x9A, 0x01, 0x6D, 0x40, 0xA4,
 0x6C, 0xEA, 0xAD, 0xEA, 0x6C, 0xEA, 0x40, 0xC4,
 0x19, 0x10, 0x64, 0x70, 0x0D, 0x61, 0x10, 0xF0,
-0x23, 0x6A, 0x6E, 0xF2, 0x68, 0x9A, 0x10, 0xF0,
-0x23, 0x6C, 0xEE, 0xF2, 0x94, 0x9C, 0x40, 0x9B,
+0x23, 0x6A, 0xCE, 0xF1, 0x68, 0x9A, 0x10, 0xF0,
+0x23, 0x6C, 0x4E, 0xF2, 0x94, 0x9C, 0x40, 0x9B,
 0x8D, 0xEA, 0x40, 0xDB, 0x00, 0x6A, 0x1C, 0x10,
 0xFF, 0xF7, 0x1F, 0x6A, 0x01, 0x48, 0x4C, 0xE8,
 0x30, 0xF0, 0x20, 0x6A, 0xCE, 0xF4, 0x5C, 0x9A,
 0x0A, 0x6C, 0x40, 0xEA, 0x10, 0xF0, 0x23, 0x6A,
-0x6E, 0xF4, 0x40, 0x9A, 0x60, 0xA2, 0x01, 0x6A,
+0xCE, 0xF3, 0x40, 0x9A, 0x60, 0xA2, 0x01, 0x6A,
 0x6C, 0xEA, 0xDF, 0x2A, 0xFF, 0xF7, 0x1F, 0x6A,
 0x01, 0x49, 0x4C, 0xE9, 0x10, 0xF0, 0x23, 0x6A,
-0x6E, 0xF4, 0x44, 0x9A, 0x20, 0xCA, 0x01, 0x6A,
+0xCE, 0xF3, 0x44, 0x9A, 0x20, 0xCA, 0x01, 0x6A,
 0x07, 0x97, 0x06, 0x91, 0x05, 0x90, 0x04, 0x63,
 0x00, 0xEF, 0x00, 0x65, 0xF9, 0x63, 0x0D, 0x62,
 0x0C, 0xD1, 0x0B, 0xD0, 0x30, 0xF0, 0x20, 0x6B,
@@ -38044,17 +37863,17 @@ u8 array_mp_8821c_fw_spic[] = {
 0x08, 0x61, 0x0E, 0xF0, 0x40, 0x40, 0xFF, 0xF7,
 0x1F, 0x6B, 0x6C, 0xEA, 0x00, 0xF1, 0x00, 0x5A,
 0x39, 0x60, 0x08, 0x92, 0x04, 0x72, 0x11, 0x61,
-0x10, 0xF0, 0x23, 0x6A, 0x2E, 0xF2, 0x48, 0x9A,
+0x10, 0xF0, 0x23, 0x6A, 0x8E, 0xF1, 0x48, 0x9A,
 0xFF, 0x6B, 0x49, 0xE0, 0x40, 0xA2, 0x4C, 0xEB,
 0x5F, 0x21, 0x06, 0x94, 0x8F, 0xEA, 0x6C, 0xEA,
 0x04, 0x93, 0x8C, 0xEB, 0x6D, 0xEA, 0x04, 0xD2,
 0x57, 0x10, 0x08, 0x92, 0x05, 0x72, 0x12, 0x61,
-0x10, 0xF0, 0x23, 0x6A, 0x2E, 0xF2, 0x48, 0x9A,
+0x10, 0xF0, 0x23, 0x6A, 0x8E, 0xF1, 0x48, 0x9A,
 0xFF, 0xF7, 0x1F, 0x6B, 0x49, 0xE0, 0x40, 0xAA,
 0x4C, 0xEB, 0x7F, 0x21, 0x06, 0x94, 0x8F, 0xEA,
 0x6C, 0xEA, 0x04, 0x93, 0x8C, 0xEB, 0x6D, 0xEA,
 0x04, 0xD2, 0x77, 0x10, 0x10, 0xF0, 0x23, 0x6A,
-0x2E, 0xF2, 0x48, 0x9A, 0x49, 0xE0, 0x60, 0x9A,
+0x8E, 0xF1, 0x48, 0x9A, 0x49, 0xE0, 0x60, 0x9A,
 0x80, 0xF0, 0x1E, 0x21, 0x06, 0x94, 0x8F, 0xEA,
 0x6C, 0xEA, 0x04, 0x93, 0x8C, 0xEB, 0x6D, 0xEA,
 0x04, 0xD2, 0x96, 0x10, 0x01, 0xF0, 0x00, 0x58,
@@ -38063,44 +37882,44 @@ u8 array_mp_8821c_fw_spic[] = {
 0x80, 0xF0, 0x17, 0x60, 0x08, 0x92, 0x04, 0x72,
 0x31, 0x61, 0x1F, 0xF7, 0x00, 0x6A, 0x0C, 0xEA,
 0x02, 0xF0, 0x00, 0x72, 0x01, 0x60, 0x05, 0x2A,
-0x10, 0xF0, 0x23, 0x6A, 0x2E, 0xF2, 0x48, 0x9A,
-0x04, 0x10, 0x10, 0xF0, 0x23, 0x6A, 0x2E, 0xF2,
+0x10, 0xF0, 0x23, 0x6A, 0x8E, 0xF1, 0x48, 0x9A,
+0x04, 0x10, 0x10, 0xF0, 0x23, 0x6A, 0x8E, 0xF1,
 0x4C, 0x9A, 0x49, 0xE0, 0x60, 0xA2, 0xFF, 0x6A,
 0x6C, 0xEA, 0x07, 0x21, 0x06, 0x94, 0x8F, 0xEB,
 0x4C, 0xEB, 0x04, 0x92, 0x8C, 0xEA, 0x4D, 0xEB,
 0x04, 0xD3, 0x1F, 0xF7, 0x00, 0x6A, 0x0C, 0xEA,
 0x02, 0xF0, 0x00, 0x72, 0x01, 0x60, 0x05, 0x2A,
-0x10, 0xF0, 0x23, 0x6A, 0x2E, 0xF2, 0x48, 0x9A,
-0x04, 0x10, 0x10, 0xF0, 0x23, 0x6A, 0x2E, 0xF2,
+0x10, 0xF0, 0x23, 0x6A, 0x8E, 0xF1, 0x48, 0x9A,
+0x04, 0x10, 0x10, 0xF0, 0x23, 0x6A, 0x8E, 0xF1,
 0x4C, 0x9A, 0x7D, 0x67, 0x41, 0xE0, 0x50, 0xA3,
 0x40, 0xC0, 0x7E, 0x10, 0x08, 0x92, 0x05, 0x72,
 0x32, 0x61, 0x1F, 0xF7, 0x00, 0x6A, 0x0C, 0xEA,
 0x02, 0xF0, 0x00, 0x72, 0x01, 0x60, 0x05, 0x2A,
-0x10, 0xF0, 0x23, 0x6A, 0x2E, 0xF2, 0x48, 0x9A,
-0x04, 0x10, 0x10, 0xF0, 0x23, 0x6A, 0x2E, 0xF2,
+0x10, 0xF0, 0x23, 0x6A, 0x8E, 0xF1, 0x48, 0x9A,
+0x04, 0x10, 0x10, 0xF0, 0x23, 0x6A, 0x8E, 0xF1,
 0x4C, 0x9A, 0x49, 0xE0, 0x60, 0xAA, 0xFF, 0xF7,
 0x1F, 0x6A, 0x6C, 0xEA, 0x07, 0x21, 0x06, 0x94,
 0x8F, 0xEB, 0x4C, 0xEB, 0x04, 0x92, 0x8C, 0xEA,
 0x4D, 0xEB, 0x04, 0xD3, 0x1F, 0xF7, 0x00, 0x6A,
 0x0C, 0xEA, 0x02, 0xF0, 0x00, 0x72, 0x01, 0x60,
-0x05, 0x2A, 0x10, 0xF0, 0x23, 0x6A, 0x2E, 0xF2,
+0x05, 0x2A, 0x10, 0xF0, 0x23, 0x6A, 0x8E, 0xF1,
 0x48, 0x9A, 0x04, 0x10, 0x10, 0xF0, 0x23, 0x6A,
-0x2E, 0xF2, 0x4C, 0x9A, 0x7D, 0x67, 0x41, 0xE0,
+0x8E, 0xF1, 0x4C, 0x9A, 0x7D, 0x67, 0x41, 0xE0,
 0x48, 0xAB, 0x40, 0xC8, 0x49, 0x10, 0x1F, 0xF7,
 0x00, 0x6A, 0x0C, 0xEA, 0x02, 0xF0, 0x00, 0x72,
 0x01, 0x60, 0x05, 0x2A, 0x10, 0xF0, 0x23, 0x6A,
-0x2E, 0xF2, 0x48, 0x9A, 0x04, 0x10, 0x10, 0xF0,
-0x23, 0x6A, 0x2E, 0xF2, 0x4C, 0x9A, 0x49, 0xE0,
+0x8E, 0xF1, 0x48, 0x9A, 0x04, 0x10, 0x10, 0xF0,
+0x23, 0x6A, 0x8E, 0xF1, 0x4C, 0x9A, 0x49, 0xE0,
 0x60, 0x9A, 0x07, 0x21, 0x06, 0x94, 0x8F, 0xEA,
 0x6C, 0xEA, 0x04, 0x93, 0x8C, 0xEB, 0x6D, 0xEA,
 0x04, 0xD2, 0x1F, 0xF7, 0x00, 0x6A, 0x0C, 0xEA,
 0x02, 0xF0, 0x00, 0x72, 0x01, 0x60, 0x05, 0x2A,
-0x10, 0xF0, 0x23, 0x6A, 0x2E, 0xF2, 0x48, 0x9A,
-0x04, 0x10, 0x10, 0xF0, 0x23, 0x6A, 0x2E, 0xF2,
+0x10, 0xF0, 0x23, 0x6A, 0x8E, 0xF1, 0x48, 0x9A,
+0x04, 0x10, 0x10, 0xF0, 0x23, 0x6A, 0x8E, 0xF1,
 0x4C, 0x9A, 0x41, 0xE0, 0x04, 0x92, 0x40, 0xD8,
 0x1B, 0x10, 0xFF, 0xF7, 0x1C, 0x6A, 0x0C, 0xEA,
 0x01, 0x6D, 0x82, 0x67, 0xAB, 0xED, 0x08, 0xD2,
-0x00, 0x18, 0xC2, 0xD2, 0x05, 0xD2, 0x07, 0x21,
+0x00, 0x18, 0x9A, 0xD2, 0x05, 0xD2, 0x07, 0x21,
 0x06, 0x94, 0x8F, 0xEB, 0x4C, 0xEB, 0x04, 0x92,
 0x8C, 0xEA, 0x4D, 0xEB, 0x04, 0xD3, 0x30, 0xF0,
 0x20, 0x6A, 0xCE, 0xF4, 0x50, 0x9A, 0x08, 0x94,
@@ -38112,19 +37931,19 @@ u8 array_mp_8821c_fw_spic[] = {
 0x07, 0xD2, 0x00, 0x6A, 0x59, 0x60, 0x7F, 0x6D,
 0x6C, 0xED, 0x4C, 0x45, 0xFF, 0x6B, 0x6C, 0xEA,
 0x0E, 0x5A, 0x08, 0x60, 0x10, 0xF0, 0x23, 0x6B,
-0x48, 0x32, 0x8E, 0xF1, 0x10, 0x4B, 0x4D, 0xE3,
+0x48, 0x32, 0xEE, 0xF0, 0x10, 0x4B, 0x4D, 0xE3,
 0x40, 0x9B, 0x00, 0xEA, 0x03, 0x6A, 0x48, 0x10,
 0x61, 0xA4, 0x80, 0x6A, 0x4B, 0xEA, 0x6C, 0xEA,
 0xFF, 0x6E, 0x07, 0x03, 0x90, 0x67, 0x4C, 0xEE,
-0x06, 0x07, 0x04, 0xD3, 0x00, 0x18, 0x21, 0xD1,
+0x06, 0x07, 0x04, 0xD3, 0x00, 0x18, 0xF9, 0xD0,
 0x1F, 0x10, 0x81, 0xA4, 0x80, 0x6A, 0xFF, 0x69,
 0x64, 0x67, 0x4C, 0xEB, 0x0C, 0xE9, 0x02, 0x32,
 0x01, 0x6E, 0x82, 0x67, 0xB1, 0x67, 0xCB, 0xEE,
-0x08, 0xD3, 0x09, 0xD2, 0x00, 0x18, 0x0D, 0xD3,
+0x08, 0xD3, 0x09, 0xD2, 0x00, 0x18, 0xE5, 0xD2,
 0x08, 0x93, 0x07, 0x23, 0x07, 0x94, 0x8F, 0xEB,
 0x4C, 0xEB, 0x06, 0x92, 0x8C, 0xEA, 0x4D, 0xEB,
 0x06, 0xD3, 0x09, 0x94, 0x06, 0x97, 0x01, 0x6E,
-0xB1, 0x67, 0xCB, 0xEE, 0x00, 0x18, 0x20, 0xD3,
+0xB1, 0x67, 0xCB, 0xEE, 0x00, 0x18, 0xF8, 0xD2,
 0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A,
 0x29, 0xF4, 0x7C, 0x9A, 0x06, 0x94, 0x61, 0xE0,
 0x49, 0xF4, 0x60, 0x9A, 0x29, 0xF4, 0x1C, 0xDA,
@@ -38134,33 +37953,33 @@ u8 array_mp_8821c_fw_spic[] = {
 0x58, 0x9A, 0x90, 0x67, 0x40, 0xEA, 0x01, 0x6A,
 0x0D, 0x97, 0x0C, 0x91, 0x0B, 0x90, 0x07, 0x63,
 0x00, 0xEF, 0x00, 0x65, 0x10, 0xF0, 0x23, 0x6A,
-0x0E, 0xF4, 0x80, 0x9A, 0x30, 0xF0, 0x20, 0x6B,
+0x6E, 0xF3, 0x80, 0x9A, 0x30, 0xF0, 0x20, 0x6B,
 0xC0, 0xF1, 0x08, 0x4B, 0xA0, 0x9C, 0x4C, 0x9B,
 0xAC, 0xEA, 0x4D, 0xDB, 0x40, 0xDC, 0x20, 0xE8,
 0xFD, 0x63, 0x05, 0xD1, 0x04, 0xD0, 0x10, 0xF0,
-0x23, 0x6A, 0xCE, 0xF3, 0x24, 0x9A, 0x10, 0xF0,
-0x23, 0x6A, 0x0E, 0xF4, 0x1C, 0x4A, 0x40, 0x9A,
+0x23, 0x6A, 0x2E, 0xF3, 0x24, 0x9A, 0x10, 0xF0,
+0x23, 0x6A, 0x6E, 0xF3, 0x1C, 0x4A, 0x40, 0x9A,
 0x60, 0x99, 0x10, 0xF0, 0x23, 0x6C, 0xA0, 0x9A,
-0x10, 0xF0, 0x23, 0x6A, 0x2E, 0xF4, 0x44, 0x9A,
-0x2E, 0xF4, 0x0C, 0x4C, 0x80, 0x9C, 0x00, 0x9A,
+0x10, 0xF0, 0x23, 0x6A, 0x8E, 0xF3, 0x44, 0x9A,
+0x8E, 0xF3, 0x0C, 0x4C, 0x80, 0x9C, 0x00, 0x9A,
 0x1A, 0x65, 0x10, 0xF0, 0x23, 0x6A, 0x80, 0x9C,
-0x2E, 0xF4, 0x14, 0x4A, 0x40, 0x9A, 0x01, 0xD4,
+0x8E, 0xF3, 0x14, 0x4A, 0x40, 0x9A, 0x01, 0xD4,
 0x30, 0xF0, 0x20, 0x6C, 0x40, 0x9A, 0xC0, 0xF1,
 0xE8, 0x9C, 0x00, 0xD2, 0x44, 0x67, 0xC0, 0xF1,
 0x08, 0x4A, 0xC1, 0x9A, 0x83, 0x9A, 0x6C, 0xEF,
 0xAC, 0xEE, 0x01, 0x93, 0xA2, 0x9A, 0xE5, 0xDA,
 0x6C, 0xEC, 0x0C, 0xED, 0x64, 0x9A, 0x00, 0x90,
 0x88, 0xDA, 0xC6, 0xDA, 0x0C, 0xEB, 0xA7, 0xDA,
-0x69, 0xDA, 0x10, 0xF0, 0x23, 0x6A, 0x0E, 0xF4,
+0x69, 0xDA, 0x10, 0xF0, 0x23, 0x6A, 0x6E, 0xF3,
 0x1C, 0x4A, 0x40, 0x9A, 0xE0, 0xD9, 0x18, 0x67,
-0xC0, 0xDA, 0x10, 0xF0, 0x23, 0x6A, 0x2E, 0xF4,
+0xC0, 0xDA, 0x10, 0xF0, 0x23, 0x6A, 0x8E, 0xF3,
 0x0C, 0x4A, 0x40, 0x9A, 0xA0, 0xD8, 0x80, 0xDA,
-0x10, 0xF0, 0x23, 0x6C, 0x2E, 0xF4, 0x14, 0x4C,
+0x10, 0xF0, 0x23, 0x6C, 0x8E, 0xF3, 0x14, 0x4C,
 0x80, 0x9C, 0x60, 0xDC, 0x05, 0x91, 0x04, 0x90,
 0x03, 0x63, 0x20, 0xE8, 0xFF, 0x63, 0x01, 0xD1,
-0x00, 0xD0, 0x10, 0xF0, 0x23, 0x6A, 0x2E, 0xF4,
-0x1C, 0x9A, 0x10, 0xF0, 0x23, 0x6A, 0x4E, 0xF4,
-0xE4, 0x9A, 0x10, 0xF0, 0x23, 0x6A, 0x4E, 0xF4,
+0x00, 0xD0, 0x10, 0xF0, 0x23, 0x6A, 0x8E, 0xF3,
+0x1C, 0x9A, 0x10, 0xF0, 0x23, 0x6A, 0xAE, 0xF3,
+0xE4, 0x9A, 0x10, 0xF0, 0x23, 0x6A, 0xAE, 0xF3,
 0xCC, 0x9A, 0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1,
 0x08, 0x4A, 0x80, 0x98, 0xAE, 0x9A, 0x60, 0x9F,
 0x20, 0x9E, 0x8C, 0xED, 0x8F, 0x9A, 0xB1, 0xDA,
@@ -38176,7 +37995,7 @@ u8 array_mp_8821c_fw_spic[] = {
 0x71, 0xE4, 0xE9, 0xF0, 0xA5, 0xA4, 0xCC, 0xED,
 0x1D, 0x25, 0xE9, 0xF0, 0xA6, 0xA4, 0x29, 0xF1,
 0x60, 0x9B, 0xE9, 0xF0, 0x85, 0xA4, 0x75, 0xE5,
-0x10, 0xF0, 0x23, 0x6B, 0xAE, 0xF3, 0x64, 0x9B,
+0x10, 0xF0, 0x23, 0x6B, 0x0E, 0xF3, 0x64, 0x9B,
 0xBC, 0x35, 0x21, 0x4D, 0x75, 0xE5, 0xE0, 0xA5,
 0x9E, 0x33, 0x9A, 0x34, 0xCC, 0xEC, 0x78, 0x33,
 0x9C, 0x34, 0x4C, 0xEF, 0x8D, 0xEB, 0xED, 0xEB,
@@ -38191,17 +38010,17 @@ u8 array_mp_8821c_fw_spic[] = {
 0x20, 0xE8, 0x00, 0x65, 0x20, 0xE8, 0x00, 0x65,
 0x20, 0xE8, 0x00, 0x65, 0x20, 0xE8, 0x00, 0x65,
 0x20, 0xE8, 0x00, 0x65, 0x10, 0xF0, 0x23, 0x6A,
-0x6E, 0xF2, 0x68, 0x9A, 0x10, 0xF0, 0x23, 0x6C,
-0x0E, 0xF3, 0x84, 0x9C, 0x40, 0x9B, 0x8D, 0xEA,
+0xCE, 0xF1, 0x68, 0x9A, 0x10, 0xF0, 0x23, 0x6C,
+0x6E, 0xF2, 0x84, 0x9C, 0x40, 0x9B, 0x8D, 0xEA,
 0x40, 0xDB, 0x20, 0xE8, 0x20, 0xE8, 0x00, 0x65,
 0x20, 0xE8, 0x00, 0x65, 0x20, 0xE8, 0x00, 0x65,
 0x20, 0xE8, 0x00, 0x65, 0x20, 0xE8, 0x00, 0x65,
 0x20, 0xE8, 0x00, 0x65, 0xFD, 0x63, 0x05, 0x62,
-0x00, 0x18, 0xE9, 0xCC, 0x05, 0x97, 0x03, 0x63,
+0x00, 0x18, 0xC1, 0xCC, 0x05, 0x97, 0x03, 0x63,
 0x00, 0xEF, 0x00, 0x65, 0xFD, 0x63, 0x05, 0x62,
 0x30, 0xF0, 0x20, 0x6A, 0x29, 0xF5, 0x70, 0xA2,
 0x02, 0x6A, 0x6C, 0xEA, 0x03, 0x22, 0x01, 0x6C,
-0x00, 0x18, 0xDC, 0xD5, 0x05, 0x97, 0x03, 0x63,
+0x00, 0x18, 0xB4, 0xD5, 0x05, 0x97, 0x03, 0x63,
 0x00, 0xEF, 0x00, 0x65, 0xFD, 0x63, 0x05, 0x62,
 0x30, 0xF0, 0x20, 0x6B, 0xC0, 0xF1, 0x08, 0x4B,
 0x69, 0xF3, 0xA9, 0xA3, 0xFF, 0x6A, 0x4C, 0xEC,
@@ -38209,9 +38028,9 @@ u8 array_mp_8821c_fw_spic[] = {
 0x1F, 0x6E, 0xAA, 0x33, 0xCC, 0xEB, 0x67, 0xEC,
 0x01, 0x6C, 0x8C, 0xEB, 0x07, 0x23, 0x02, 0x6B,
 0xAC, 0xEB, 0x4C, 0xEB, 0x03, 0x23, 0x00, 0x6C,
-0x00, 0x18, 0xDC, 0xD5, 0x05, 0x97, 0x03, 0x63,
+0x00, 0x18, 0xB4, 0xD5, 0x05, 0x97, 0x03, 0x63,
 0x00, 0xEF, 0x00, 0x65, 0xFD, 0x63, 0x05, 0x62,
-0xFF, 0x6A, 0x4C, 0xEC, 0x00, 0x18, 0x7B, 0xD2,
+0xFF, 0x6A, 0x4C, 0xEC, 0x00, 0x18, 0x53, 0xD2,
 0x05, 0x97, 0x03, 0x63, 0x00, 0xEF, 0x00, 0x65,
 0xFD, 0x63, 0x05, 0x62, 0x00, 0x18, 0x4F, 0xC1,
 0x05, 0x97, 0x03, 0x63, 0x00, 0xEF, 0x00, 0x65,
@@ -38219,27 +38038,27 @@ u8 array_mp_8821c_fw_spic[] = {
 0x05, 0x97, 0x03, 0x63, 0x00, 0xEF, 0x00, 0x65,
 0xFD, 0x63, 0x05, 0x62, 0x00, 0x18, 0x3D, 0xCA,
 0x05, 0x97, 0x03, 0x63, 0x00, 0xEF, 0x00, 0x65,
-0xFD, 0x63, 0x05, 0x62, 0x00, 0x18, 0xD8, 0xCD,
+0xFD, 0x63, 0x05, 0x62, 0x00, 0x18, 0xB0, 0xCD,
 0x05, 0x97, 0x03, 0x63, 0x00, 0xEF, 0x00, 0x65,
-0xFD, 0x63, 0x05, 0x62, 0x00, 0x18, 0x56, 0xCD,
+0xFD, 0x63, 0x05, 0x62, 0x00, 0x18, 0x2E, 0xCD,
 0x05, 0x97, 0x03, 0x63, 0x00, 0xEF, 0x00, 0x65,
-0xFD, 0x63, 0x05, 0x62, 0x00, 0x18, 0xA3, 0xD3,
+0xFD, 0x63, 0x05, 0x62, 0x00, 0x18, 0x7B, 0xD3,
 0x05, 0x97, 0x03, 0x63, 0x00, 0xEF, 0x00, 0x65,
 0xFF, 0x63, 0x01, 0xD0, 0x10, 0xF0, 0x23, 0x6B,
-0xAE, 0xF3, 0x64, 0x9B, 0xFF, 0x6A, 0x4C, 0xEE,
+0x0E, 0xF3, 0x64, 0x9B, 0xFF, 0x6A, 0x4C, 0xEE,
 0x6D, 0xE4, 0x08, 0x68, 0x80, 0xA3, 0xDB, 0xE0,
 0x02, 0x67, 0x4C, 0xED, 0x07, 0xEE, 0xD0, 0x67,
 0x4C, 0xEF, 0x04, 0xED, 0x4C, 0xEC, 0xCC, 0xEF,
 0x0F, 0xE8, 0x8C, 0xE8, 0xE4, 0xED, 0xED, 0xE8,
 0x4C, 0xE8, 0x00, 0xC3, 0x01, 0x90, 0x01, 0x63,
 0x20, 0xE8, 0x00, 0x65, 0x10, 0xF0, 0x23, 0x6A,
-0xAE, 0xF3, 0x44, 0x9A, 0xFF, 0xF7, 0x1F, 0x6B,
+0x0E, 0xF3, 0x44, 0x9A, 0xFF, 0xF7, 0x1F, 0x6B,
 0x8C, 0xEB, 0x4D, 0xE3, 0x40, 0xA3, 0xFF, 0x6C,
 0x8C, 0xEE, 0x08, 0x6B, 0xDB, 0xE3, 0x8C, 0xED,
 0x8C, 0xEA, 0x64, 0x67, 0x47, 0xED, 0x67, 0xEE,
 0x6C, 0xEA, 0x8C, 0xEA, 0x20, 0xE8, 0x00, 0x65,
 0xFC, 0x63, 0x07, 0x62, 0x06, 0xD1, 0x05, 0xD0,
-0x10, 0xF0, 0x23, 0x6B, 0x2E, 0xF2, 0x6C, 0x9B,
+0x10, 0xF0, 0x23, 0x6B, 0x8E, 0xF1, 0x6C, 0x9B,
 0xFF, 0xF7, 0x1F, 0x6A, 0x8C, 0xEA, 0x69, 0xE2,
 0x00, 0x9A, 0x41, 0x45, 0x25, 0x67, 0x08, 0x22,
 0x30, 0xF0, 0x20, 0x6A, 0xAE, 0xF4, 0x50, 0x9A,
@@ -38248,39 +38067,39 @@ u8 array_mp_8821c_fw_spic[] = {
 0x04, 0x63, 0x00, 0xEF, 0xFB, 0x63, 0x09, 0x62,
 0x08, 0xD1, 0x07, 0xD0, 0xFF, 0xF7, 0x1F, 0x68,
 0x41, 0x45, 0x25, 0x67, 0x0C, 0xD6, 0x8C, 0xE8,
-0x07, 0x2A, 0x10, 0xF0, 0x23, 0x6A, 0x2E, 0xF2,
+0x07, 0x2A, 0x10, 0xF0, 0x23, 0x6A, 0x8E, 0xF1,
 0x4C, 0x9A, 0x41, 0xE0, 0xC0, 0xD8, 0x1A, 0x10,
 0x01, 0x6D, 0x90, 0x67, 0xAB, 0xED, 0x00, 0x18,
-0xC2, 0xD2, 0x04, 0xD2, 0x30, 0xF0, 0x20, 0x6A,
+0x9A, 0xD2, 0x04, 0xD2, 0x30, 0xF0, 0x20, 0x6A,
 0xAE, 0xF4, 0x50, 0x9A, 0x91, 0x67, 0x40, 0xEA,
 0x0C, 0x93, 0x64, 0xEA, 0x43, 0x67, 0x04, 0x93,
 0x2C, 0xEA, 0x2F, 0xE9, 0x6C, 0xE9, 0x10, 0xF0,
-0x23, 0x6B, 0x2E, 0xF2, 0x6C, 0x9B, 0x2D, 0xEA,
+0x23, 0x6B, 0x8E, 0xF1, 0x6C, 0x9B, 0x2D, 0xEA,
 0x61, 0xE0, 0x40, 0xD8, 0x09, 0x97, 0x08, 0x91,
 0x07, 0x90, 0x05, 0x63, 0x00, 0xEF, 0x00, 0x65,
 0x01, 0x74, 0x0D, 0x60, 0x06, 0x24, 0x02, 0x74,
 0x10, 0x60, 0x03, 0x74, 0x00, 0x6A, 0x1C, 0x61,
 0x14, 0x10, 0x10, 0xF0, 0x23, 0x6A, 0xA8, 0x35,
-0x6E, 0xF4, 0x48, 0x9A, 0x0B, 0x10, 0x10, 0xF0,
-0x23, 0x6A, 0xA8, 0x35, 0x6E, 0xF4, 0x4C, 0x9A,
-0x05, 0x10, 0x10, 0xF0, 0x23, 0x6A, 0x6E, 0xF4,
+0xCE, 0xF3, 0x48, 0x9A, 0x0B, 0x10, 0x10, 0xF0,
+0x23, 0x6A, 0xA8, 0x35, 0xCE, 0xF3, 0x4C, 0x9A,
+0x05, 0x10, 0x10, 0xF0, 0x23, 0x6A, 0xCE, 0xF3,
 0x50, 0x9A, 0xA8, 0x35, 0x55, 0xE5, 0x40, 0x9D,
-0x20, 0xE8, 0x10, 0xF0, 0x23, 0x6A, 0x6E, 0xF4,
+0x20, 0xE8, 0x10, 0xF0, 0x23, 0x6A, 0xCE, 0xF3,
 0x54, 0x9A, 0xA8, 0x35, 0x55, 0xE5, 0x40, 0x9D,
 0x20, 0xE8, 0x00, 0x65, 0xFD, 0x63, 0x05, 0x62,
 0x30, 0xF0, 0x20, 0x6A, 0x08, 0xF3, 0x00, 0x4A,
 0x88, 0x34, 0x91, 0xE2, 0x10, 0xF0, 0x23, 0x6A,
-0x0E, 0xF3, 0x7C, 0x9A, 0x30, 0xF0, 0x20, 0x6A,
+0x6E, 0xF2, 0x7C, 0x9A, 0x30, 0xF0, 0x20, 0x6A,
 0x00, 0xF5, 0xA0, 0x35, 0xCC, 0xEB, 0x10, 0xF0,
-0x23, 0x6E, 0x2E, 0xF3, 0xC0, 0x9E, 0xCE, 0xF4,
+0x23, 0x6E, 0x8E, 0xF2, 0xC0, 0x9E, 0xCE, 0xF4,
 0x50, 0x9A, 0x80, 0xAC, 0xAD, 0xEB, 0x01, 0x6D,
 0xAB, 0xED, 0x6C, 0xEE, 0x40, 0xEA, 0x05, 0x97,
 0x03, 0x63, 0x00, 0xEF, 0xFC, 0x63, 0x07, 0x62,
 0x06, 0xD1, 0x05, 0xD0, 0xFF, 0x6B, 0x8C, 0xEB,
 0xFF, 0xF7, 0x1F, 0x6A, 0x81, 0x46, 0x06, 0x67,
 0xAC, 0xEA, 0x06, 0x2C, 0x83, 0x67, 0xA2, 0x67,
-0x00, 0x18, 0xEA, 0xD2, 0x02, 0x67, 0x0D, 0x10,
-0x83, 0x67, 0xA2, 0x67, 0x00, 0x18, 0xEA, 0xD2,
+0x00, 0x18, 0xC2, 0xD2, 0x02, 0x67, 0x0D, 0x10,
+0x83, 0x67, 0xA2, 0x67, 0x00, 0x18, 0xC2, 0xD2,
 0x22, 0x67, 0x30, 0xF0, 0x20, 0x6A, 0xAE, 0xF4,
 0x50, 0x9A, 0x90, 0x67, 0x2C, 0xE8, 0x40, 0xEA,
 0x06, 0xEA, 0x50, 0x67, 0x07, 0x97, 0x06, 0x91,
@@ -38290,12 +38109,12 @@ u8 array_mp_8821c_fw_spic[] = {
 0x01, 0x4A, 0x0C, 0xD6, 0x0D, 0xD7, 0x8C, 0xE8,
 0xAC, 0xE9, 0x04, 0x2A, 0x90, 0x67, 0xB1, 0x67,
 0xC7, 0x67, 0x15, 0x10, 0xB1, 0x67, 0x90, 0x67,
-0x00, 0x18, 0xEA, 0xD2, 0x04, 0xD2, 0x30, 0xF0,
+0x00, 0x18, 0xC2, 0xD2, 0x04, 0xD2, 0x30, 0xF0,
 0x20, 0x6A, 0x0C, 0x94, 0xAE, 0xF4, 0x50, 0x9A,
 0x40, 0xEA, 0x0D, 0x96, 0x90, 0x67, 0xB1, 0x67,
 0xC4, 0xEA, 0x0C, 0x92, 0x4C, 0xEE, 0x4F, 0xEB,
 0x04, 0x92, 0x4C, 0xEB, 0x6D, 0xEE, 0x00, 0x18,
-0xFD, 0xD2, 0x30, 0xF0, 0x20, 0x6A, 0xCE, 0xF4,
+0xD5, 0xD2, 0x30, 0xF0, 0x20, 0x6A, 0xCE, 0xF4,
 0x5C, 0x9A, 0x0A, 0x6C, 0x40, 0xEA, 0x09, 0x97,
 0x08, 0x91, 0x07, 0x90, 0x05, 0x63, 0x00, 0xEF,
 0xFB, 0x63, 0x09, 0x62, 0x08, 0xD1, 0x07, 0xD0,
@@ -38305,23 +38124,23 @@ u8 array_mp_8821c_fw_spic[] = {
 0x00, 0x6A, 0x08, 0x10, 0x30, 0xF0, 0x20, 0x6A,
 0xCE, 0xF4, 0x5C, 0x9A, 0x0A, 0x6C, 0x40, 0xEA,
 0x40, 0xA8, 0x01, 0x4A, 0x40, 0xC8, 0x10, 0xF0,
-0x23, 0x6A, 0x04, 0x94, 0x05, 0x95, 0x0E, 0xF3,
-0xDC, 0x9A, 0x00, 0x18, 0x0D, 0xD3, 0x0C, 0x93,
+0x23, 0x6A, 0x04, 0x94, 0x05, 0x95, 0x6E, 0xF2,
+0xDC, 0x9A, 0x00, 0x18, 0xE5, 0xD2, 0x0C, 0x93,
 0x6C, 0xEA, 0x0D, 0x93, 0x6E, 0xEA, 0x03, 0x22,
 0x40, 0xA8, 0x23, 0xEA, 0xE7, 0x61, 0x40, 0xA8,
 0x09, 0x97, 0x07, 0x90, 0x23, 0xEA, 0x08, 0x91,
 0x58, 0x67, 0x05, 0x63, 0x00, 0xEF, 0x00, 0x65,
 0xFD, 0x63, 0x05, 0x62, 0x04, 0xD0, 0x10, 0xF0,
-0x23, 0x6B, 0xEE, 0xF1, 0x78, 0x9B, 0x10, 0xF0,
-0x23, 0x6A, 0x49, 0xF5, 0x11, 0x4A, 0x40, 0xDB,
-0x00, 0x68, 0x10, 0xF0, 0x23, 0x6A, 0x6E, 0xF4,
+0x23, 0x6B, 0x4E, 0xF1, 0x78, 0x9B, 0x10, 0xF0,
+0x23, 0x6A, 0xA9, 0xF4, 0x11, 0x4A, 0x40, 0xDB,
+0x00, 0x68, 0x10, 0xF0, 0x23, 0x6A, 0xCE, 0xF3,
 0x58, 0x9A, 0x40, 0xA2, 0x12, 0x2A, 0x10, 0xF0,
-0x23, 0x6A, 0x6E, 0xF4, 0x5C, 0x9A, 0x40, 0xA2,
-0x0C, 0x2A, 0x10, 0xF0, 0x23, 0x6A, 0x8E, 0xF4,
+0x23, 0x6A, 0xCE, 0xF3, 0x5C, 0x9A, 0x40, 0xA2,
+0x0C, 0x2A, 0x10, 0xF0, 0x23, 0x6A, 0xEE, 0xF3,
 0x40, 0x9A, 0x40, 0xA2, 0x06, 0x2A, 0x10, 0xF0,
-0x23, 0x6A, 0x8E, 0xF4, 0x44, 0x9A, 0x40, 0xA2,
+0x23, 0x6A, 0xEE, 0xF3, 0x44, 0x9A, 0x40, 0xA2,
 0x18, 0x22, 0xE0, 0xF3, 0x09, 0x70, 0x0A, 0x61,
-0x10, 0xF0, 0x23, 0x6A, 0x6E, 0xF2, 0x68, 0x9A,
+0x10, 0xF0, 0x23, 0x6A, 0xCE, 0xF1, 0x68, 0x9A,
 0x20, 0x6C, 0x40, 0x9B, 0x8D, 0xEA, 0x40, 0xDB,
 0x00, 0x6A, 0x0C, 0x10, 0x30, 0xF0, 0x20, 0x6A,
 0xCE, 0xF4, 0x5C, 0x9A, 0x32, 0x6C, 0x01, 0x48,
@@ -38329,9 +38148,9 @@ u8 array_mp_8821c_fw_spic[] = {
 0xD0, 0x17, 0x01, 0x6A, 0x05, 0x97, 0x04, 0x90,
 0x03, 0x63, 0x00, 0xEF, 0xFF, 0x6A, 0x4C, 0xEC,
 0x94, 0x34, 0x4C, 0xED, 0x4C, 0xEC, 0x10, 0xF0,
-0x23, 0x6A, 0x8E, 0xF4, 0x48, 0x9A, 0x80, 0xC2,
+0x23, 0x6A, 0xEE, 0xF3, 0x48, 0x9A, 0x80, 0xC2,
 0xA0, 0xC2, 0x20, 0xE8, 0xFF, 0x6A, 0x10, 0xF0,
-0x23, 0x6B, 0x8E, 0xF4, 0x68, 0x9B, 0x4C, 0xEC,
+0x23, 0x6B, 0xEE, 0xF3, 0x68, 0x9B, 0x4C, 0xEC,
 0x94, 0x34, 0x4C, 0xEC, 0x80, 0xC3, 0x60, 0xA3,
 0x6C, 0xEA, 0x20, 0xE8, 0xFC, 0x63, 0x07, 0x62,
 0x06, 0xD1, 0x05, 0xD0, 0xFF, 0x68, 0x09, 0xD5,
@@ -38345,7 +38164,7 @@ u8 array_mp_8821c_fw_spic[] = {
 0x22, 0x67, 0x00, 0x6C, 0x9F, 0xF7, 0x03, 0x6D,
 0x00, 0x18, 0xB6, 0xC9, 0x0F, 0x6B, 0x4C, 0xEB,
 0x60, 0x32, 0x2D, 0xEA, 0xFF, 0xF7, 0x1F, 0x6B,
-0x6C, 0xEA, 0x10, 0xF0, 0x23, 0x6B, 0xAE, 0xF3,
+0x6C, 0xEA, 0x10, 0xF0, 0x23, 0x6B, 0x0E, 0xF3,
 0x64, 0x9B, 0x00, 0x30, 0x08, 0x30, 0x61, 0xE0,
 0x51, 0xE0, 0x09, 0x93, 0x04, 0x10, 0xA0, 0xA0,
 0x01, 0x48, 0xA0, 0xC3, 0x01, 0x4B, 0x8A, 0xE8,
@@ -38356,7 +38175,7 @@ u8 array_mp_8821c_fw_spic[] = {
 0x00, 0x18, 0xB6, 0xC9, 0xE1, 0xF3, 0x84, 0xA0,
 0x01, 0x6B, 0x47, 0xEC, 0x6C, 0xEA, 0x13, 0x22,
 0x30, 0xF0, 0x21, 0x6D, 0x90, 0xF2, 0x1C, 0x4D,
-0x00, 0x18, 0x81, 0xD3, 0xE1, 0xF3, 0x46, 0xC8,
+0x00, 0x18, 0x59, 0xD3, 0xE1, 0xF3, 0x46, 0xC8,
 0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A,
 0x80, 0xF0, 0x6C, 0x9A, 0x10, 0xF0, 0x00, 0x6C,
 0x8D, 0xEB, 0x80, 0xF0, 0x6C, 0xDA, 0x05, 0x97,
@@ -38374,7 +38193,7 @@ u8 array_mp_8821c_fw_spic[] = {
 0xB0, 0x67, 0x00, 0x6C, 0x00, 0x18, 0xB6, 0xC9,
 0x60, 0x6E, 0xCB, 0xEE, 0x4D, 0xEE, 0xFF, 0x6A,
 0x4C, 0xEE, 0xB0, 0x67, 0x00, 0x6C, 0x00, 0x18,
-0xA9, 0xC9, 0x10, 0xF0, 0x23, 0x6A, 0x8E, 0xF4,
+0xA9, 0xC9, 0x10, 0xF0, 0x23, 0x6A, 0xEE, 0xF3,
 0x6C, 0x9A, 0xFD, 0x6A, 0x30, 0xF0, 0x20, 0x69,
 0x80, 0xA3, 0x9F, 0xF6, 0x12, 0x48, 0x8C, 0xEA,
 0x40, 0xC3, 0xCE, 0xF4, 0x58, 0x99, 0x28, 0x6C,
@@ -38397,7 +38216,7 @@ u8 array_mp_8821c_fw_spic[] = {
 0x30, 0xF0, 0x20, 0x6A, 0xAF, 0xF4, 0x18, 0x4A,
 0xE1, 0xF3, 0x6A, 0xA2, 0x01, 0x6C, 0x8E, 0xEB,
 0x05, 0x2B, 0xE1, 0xF3, 0x6A, 0xC2, 0x00, 0x18,
-0xEB, 0xD3, 0x10, 0x10, 0xE1, 0xF3, 0xC8, 0xA2,
+0xC3, 0xD3, 0x10, 0x10, 0xE1, 0xF3, 0xC8, 0xA2,
 0xE1, 0xF3, 0x84, 0xA2, 0x01, 0x6B, 0xA6, 0x67,
 0xA7, 0xEC, 0x6C, 0xED, 0x07, 0x25, 0x6E, 0xEC,
 0xC7, 0xEC, 0x86, 0x67, 0x6C, 0xEC, 0x02, 0x24,
@@ -38410,23 +38229,23 @@ u8 array_mp_8821c_fw_spic[] = {
 0x18, 0x4B, 0xC4, 0x36, 0xD9, 0xE3, 0xAC, 0xEA,
 0xE0, 0xF7, 0x04, 0x4E, 0x00, 0x6B, 0x11, 0x10,
 0x30, 0xF0, 0x21, 0x6F, 0x91, 0xF0, 0xFD, 0xA7,
-0x10, 0xF0, 0x23, 0x69, 0x6E, 0xF3, 0x34, 0x99,
+0x10, 0xF0, 0x23, 0x69, 0xCE, 0xF2, 0x34, 0x99,
 0xE0, 0x37, 0xE8, 0x37, 0x3D, 0xE7, 0x68, 0x31,
 0x3D, 0xE7, 0x20, 0x9E, 0x01, 0x4B, 0x04, 0x4E,
 0x20, 0xDF, 0xFF, 0x6F, 0x23, 0x67, 0xEC, 0xE9,
 0x43, 0xE9, 0xEA, 0x61, 0x03, 0x6A, 0x0C, 0xEA,
 0xEC, 0xED, 0x3F, 0x22, 0x30, 0xF0, 0x20, 0x6A,
 0xAF, 0xF4, 0x18, 0x4A, 0xE1, 0xF3, 0x65, 0xA2,
-0x10, 0xF0, 0x23, 0x6E, 0x6E, 0xF3, 0xD4, 0x9E,
+0x10, 0xF0, 0x23, 0x6E, 0xCE, 0xF2, 0xD4, 0x9E,
 0x60, 0x33, 0x68, 0x33, 0x9C, 0x34, 0xCD, 0xE3,
 0xA8, 0x36, 0xB5, 0xE4, 0xE0, 0xF1, 0x18, 0x4D,
 0xA8, 0x35, 0xA9, 0xE2, 0x41, 0x9A, 0xCD, 0xE3,
 0x40, 0xDB, 0x27, 0x10, 0x80, 0x34, 0x30, 0xF0,
-0x21, 0x6A, 0x10, 0xF0, 0x23, 0x6B, 0x8E, 0xF4,
+0x21, 0x6A, 0x10, 0xF0, 0x23, 0x6B, 0xEE, 0xF3,
 0x70, 0x9B, 0x84, 0x34, 0x90, 0xF4, 0x1C, 0x4A,
 0x95, 0xE2, 0x30, 0xF0, 0x21, 0x6A, 0x91, 0xF0,
 0xDD, 0xA2, 0x6C, 0xED, 0x00, 0x6A, 0x10, 0xF0,
-0x23, 0x6B, 0x04, 0xD2, 0x05, 0xD2, 0x8E, 0xF4,
+0x23, 0x6B, 0x04, 0xD2, 0x05, 0xD2, 0xEE, 0xF3,
 0x74, 0x9B, 0x30, 0xF0, 0x20, 0x6A, 0xC0, 0x36,
 0xAE, 0xF2, 0x40, 0x9A, 0xC8, 0x36, 0x00, 0x6C,
 0x79, 0xE6, 0xF0, 0x67, 0x40, 0xEA, 0x30, 0xF0,
@@ -38439,8 +38258,8 @@ u8 array_mp_8821c_fw_spic[] = {
 0x01, 0x6E, 0x00, 0x6C, 0x02, 0x4A, 0xC4, 0xEA,
 0x7F, 0xF7, 0x1E, 0x6D, 0x2C, 0xEE, 0x00, 0x18,
 0xA9, 0xC9, 0x00, 0x68, 0x12, 0x10, 0x01, 0x6A,
-0x10, 0xF0, 0x23, 0x6B, 0x4E, 0xE8, 0xEE, 0xF1,
-0x78, 0x9B, 0x10, 0xF0, 0x23, 0x6A, 0x2A, 0xF0,
+0x10, 0xF0, 0x23, 0x6B, 0x4E, 0xE8, 0x4E, 0xF1,
+0x78, 0x9B, 0x10, 0xF0, 0x23, 0x6A, 0x89, 0xF7,
 0x0D, 0x4A, 0x09, 0xE2, 0x40, 0xDB, 0x30, 0xF0,
 0x20, 0x6A, 0xCE, 0xF4, 0x5C, 0x9A, 0x01, 0x6C,
 0x40, 0xEA, 0x00, 0x6C, 0x7F, 0xF7, 0x1E, 0x6D,
@@ -38453,70 +38272,70 @@ u8 array_mp_8821c_fw_spic[] = {
 0x86, 0xD1, 0x85, 0xD0, 0x30, 0xF0, 0x20, 0x69,
 0xAF, 0xF4, 0x18, 0x49, 0xE1, 0xF3, 0xA6, 0xA9,
 0x30, 0xF0, 0x21, 0x6C, 0x90, 0xF2, 0x1C, 0x4C,
-0x00, 0x18, 0xFD, 0xC3, 0x00, 0x18, 0xEB, 0xD3,
+0x00, 0x18, 0xFD, 0xC3, 0x00, 0x18, 0xC3, 0xD3,
 0xE1, 0xF3, 0x84, 0xA1, 0x04, 0x00, 0xB0, 0x67,
-0x00, 0x18, 0x81, 0xD3, 0x11, 0x22, 0x90, 0x67,
+0x00, 0x18, 0x59, 0xD3, 0x11, 0x22, 0x90, 0x67,
 0xA2, 0x67, 0x00, 0x18, 0xFD, 0xC3, 0xE1, 0xF3,
 0x09, 0xA1, 0x01, 0x6A, 0x4E, 0xE8, 0x05, 0x28,
-0x00, 0x18, 0xEB, 0xD3, 0xE1, 0xF3, 0x09, 0xC1,
+0x00, 0x18, 0xC3, 0xD3, 0xE1, 0xF3, 0x09, 0xC1,
 0x03, 0x10, 0x01, 0x6A, 0xE1, 0xF3, 0x4A, 0xC1,
 0x87, 0x97, 0x86, 0x91, 0x85, 0x90, 0x44, 0x63,
 0x00, 0xEF, 0x00, 0x65, 0x10, 0xF0, 0x23, 0x6B,
-0x4E, 0xF2, 0x70, 0x9B, 0xFF, 0x6A, 0x4C, 0xED,
+0xAE, 0xF1, 0x70, 0x9B, 0xFF, 0x6A, 0x4C, 0xED,
 0xA0, 0xC3, 0xCC, 0xEA, 0x30, 0xF0, 0x20, 0x6B,
 0xE8, 0xF2, 0x5A, 0xC3, 0x10, 0xF0, 0x23, 0x6B,
-0x8E, 0xF4, 0x78, 0x9B, 0x40, 0xC3, 0x20, 0xE8,
+0xEE, 0xF3, 0x78, 0x9B, 0x40, 0xC3, 0x20, 0xE8,
 0xFF, 0x63, 0x01, 0xD0, 0xFF, 0x6A, 0x4C, 0xED,
 0x4C, 0xEE, 0x4C, 0xEF, 0x10, 0xF0, 0x23, 0x6A,
-0x6E, 0xF4, 0x44, 0x9A, 0xFF, 0xF7, 0x1F, 0x6B,
+0xCE, 0xF3, 0x44, 0x9A, 0xFF, 0xF7, 0x1F, 0x6B,
 0x6C, 0xEC, 0x00, 0xAA, 0xE1, 0xF7, 0x1F, 0x6A,
-0x0C, 0xEA, 0x10, 0xF0, 0x23, 0x68, 0x8E, 0xF4,
+0x0C, 0xEA, 0x10, 0xF0, 0x23, 0x68, 0xEE, 0xF3,
 0x1C, 0x98, 0x51, 0xE4, 0x6C, 0xEC, 0x80, 0xC8,
-0x9C, 0x32, 0x10, 0xF0, 0x23, 0x6C, 0xAE, 0xF4,
-0x80, 0x9C, 0x10, 0xF0, 0x23, 0x68, 0xAE, 0xF4,
+0x9C, 0x32, 0x10, 0xF0, 0x23, 0x6C, 0x0E, 0xF4,
+0x80, 0x9C, 0x10, 0xF0, 0x23, 0x68, 0x0E, 0xF4,
 0x04, 0x98, 0x91, 0xE2, 0x80, 0xAC, 0x01, 0xE2,
 0x00, 0x98, 0x6C, 0xEC, 0x05, 0x25, 0x10, 0xF0,
 0x00, 0x6D, 0xAB, 0xED, 0xAD, 0xEC, 0x6C, 0xEC,
 0xD8, 0xF0, 0x00, 0x6B, 0x8C, 0xEB, 0x10, 0xF0,
-0x23, 0x6C, 0xAE, 0xF4, 0x80, 0x9C, 0x91, 0xE2,
-0x60, 0xCC, 0x10, 0xF0, 0x23, 0x6B, 0xAE, 0xF4,
+0x23, 0x6C, 0x0E, 0xF4, 0x80, 0x9C, 0x91, 0xE2,
+0x60, 0xCC, 0x10, 0xF0, 0x23, 0x6B, 0x0E, 0xF4,
 0x68, 0x9B, 0x6D, 0xE2, 0x80, 0xA3, 0x01, 0x6B,
 0x8C, 0xEB, 0x05, 0x23, 0x03, 0xF7, 0x01, 0x6B,
 0x6B, 0xEB, 0x0C, 0xEB, 0x06, 0x10, 0x1F, 0xF7,
 0x01, 0x6B, 0x6B, 0xEB, 0x0C, 0xEB, 0xE0, 0x37,
 0xED, 0xEB, 0xFF, 0x76, 0x13, 0x60, 0x10, 0xF0,
-0x23, 0x6C, 0xAE, 0xF4, 0x8C, 0x9C, 0x80, 0xF4,
+0x23, 0x6C, 0x0E, 0xF4, 0x8C, 0x9C, 0x80, 0xF4,
 0xC0, 0x36, 0x6C, 0xEC, 0x10, 0xF0, 0x23, 0x6B,
-0xAE, 0xF2, 0x78, 0x9B, 0x6D, 0xEE, 0x10, 0xF0,
-0x23, 0x6B, 0xAE, 0xF4, 0x64, 0x9B, 0x8D, 0xEE,
+0x0E, 0xF2, 0x78, 0x9B, 0x6D, 0xEE, 0x10, 0xF0,
+0x23, 0x6B, 0x0E, 0xF4, 0x64, 0x9B, 0x8D, 0xEE,
 0x6D, 0xE2, 0xC0, 0xDB, 0x10, 0xF0, 0x23, 0x6B,
-0xAE, 0xF4, 0x90, 0x9B, 0x7F, 0x6B, 0x91, 0xE2,
+0x0E, 0xF4, 0x90, 0x9B, 0x7F, 0x6B, 0x91, 0xE2,
 0xA0, 0xA4, 0xAC, 0xEB, 0x60, 0xC4, 0x10, 0xF0,
-0x23, 0x6B, 0xAE, 0xF4, 0x74, 0x9B, 0x1C, 0x6C,
-0x80, 0xC3, 0x10, 0xF0, 0x23, 0x6B, 0xAE, 0xF4,
+0x23, 0x6B, 0x0E, 0xF4, 0x74, 0x9B, 0x1C, 0x6C,
+0x80, 0xC3, 0x10, 0xF0, 0x23, 0x6B, 0x0E, 0xF4,
 0x78, 0x9B, 0x08, 0xF4, 0x13, 0x6C, 0x80, 0xCB,
-0x10, 0xF0, 0x23, 0x6B, 0x4E, 0xF2, 0x84, 0x9B,
+0x10, 0xF0, 0x23, 0x6B, 0xAE, 0xF1, 0x84, 0x9B,
 0xF7, 0x6B, 0x91, 0xE2, 0xA0, 0xA4, 0xAC, 0xEB,
 0x60, 0xC4, 0x01, 0x90, 0x01, 0x63, 0x20, 0xE8,
 0x30, 0xF0, 0x20, 0x6A, 0x29, 0xF5, 0x51, 0xA2,
 0xFF, 0x63, 0x05, 0x5A, 0x36, 0x60, 0x10, 0xF0,
-0x23, 0x6B, 0x48, 0x32, 0xCE, 0xF1, 0x08, 0x4B,
+0x23, 0x6B, 0x48, 0x32, 0x2E, 0xF1, 0x08, 0x4B,
 0x4D, 0xE3, 0x40, 0x9B, 0x00, 0xEA, 0x10, 0xF0,
-0x23, 0x6A, 0xAE, 0xF4, 0x5C, 0x9A, 0xFF, 0xF7,
+0x23, 0x6A, 0x0E, 0xF4, 0x5C, 0x9A, 0xFF, 0xF7,
 0x1F, 0x6B, 0x40, 0x9A, 0x1A, 0x10, 0x10, 0xF0,
-0x23, 0x6A, 0xAE, 0xF4, 0x5C, 0x9A, 0x09, 0x10,
-0x10, 0xF0, 0x23, 0x6A, 0xCE, 0xF4, 0x40, 0x9A,
-0x0D, 0x10, 0x10, 0xF0, 0x23, 0x6A, 0xCE, 0xF4,
+0x23, 0x6A, 0x0E, 0xF4, 0x5C, 0x9A, 0x09, 0x10,
+0x10, 0xF0, 0x23, 0x6A, 0x2E, 0xF4, 0x40, 0x9A,
+0x0D, 0x10, 0x10, 0xF0, 0x23, 0x6A, 0x2E, 0xF4,
 0x40, 0x9A, 0x40, 0x9A, 0x50, 0x32, 0x00, 0xF5,
 0x42, 0x32, 0x08, 0x10, 0x10, 0xF0, 0x23, 0x6A,
-0xCE, 0xF4, 0x44, 0x9A, 0x40, 0x9A, 0xE1, 0xF7,
+0x2E, 0xF4, 0x44, 0x9A, 0x40, 0x9A, 0xE1, 0xF7,
 0x1F, 0x6B, 0x6C, 0xEA, 0x00, 0xD2, 0x00, 0x93,
 0xE0, 0xF3, 0x08, 0x6A, 0x60, 0x33, 0x68, 0x33,
 0x5B, 0xEB, 0x01, 0x2A, 0xE5, 0xE8, 0x12, 0xEA,
 0x01, 0x10, 0x66, 0x6A, 0x00, 0xD2, 0x00, 0x92,
 0x01, 0x63, 0x20, 0xE8, 0xFF, 0x63, 0x01, 0xD0,
-0x0C, 0x2C, 0x10, 0xF0, 0x23, 0x6A, 0x6E, 0xF2,
-0x68, 0x9A, 0x10, 0xF0, 0x23, 0x6C, 0xCE, 0xF4,
+0x0C, 0x2C, 0x10, 0xF0, 0x23, 0x6A, 0xCE, 0xF1,
+0x68, 0x9A, 0x10, 0xF0, 0x23, 0x6C, 0x2E, 0xF4,
 0x88, 0x9C, 0x40, 0x9B, 0x8D, 0xEA, 0x40, 0xDB,
 0x58, 0x10, 0x30, 0xF0, 0x20, 0x6A, 0x4F, 0xF5,
 0xDC, 0x9A, 0x30, 0xF0, 0x20, 0x6A, 0x6F, 0xF5,
@@ -38545,7 +38364,7 @@ u8 array_mp_8821c_fw_spic[] = {
 0x30, 0xF0, 0x20, 0x68, 0xC0, 0xF1, 0x08, 0x48,
 0x69, 0xF3, 0x48, 0xA0, 0x03, 0x6B, 0x4C, 0xEB,
 0x00, 0x6A, 0x33, 0x2B, 0x10, 0xF0, 0x23, 0x6A,
-0xCE, 0xF4, 0x4C, 0x9A, 0x30, 0xF0, 0x20, 0x69,
+0x2E, 0xF4, 0x4C, 0x9A, 0x30, 0xF0, 0x20, 0x69,
 0x30, 0xF0, 0x20, 0x6C, 0x60, 0xC2, 0x4E, 0xF2,
 0x4C, 0x99, 0x29, 0xF5, 0x10, 0x4C, 0x00, 0x6D,
 0xD4, 0x6E, 0x40, 0xEA, 0x4E, 0xF2, 0x4C, 0x99,
@@ -38562,10 +38381,10 @@ u8 array_mp_8821c_fw_spic[] = {
 0x06, 0xD0, 0x30, 0xF0, 0x20, 0x68, 0xC0, 0xF1,
 0x08, 0x48, 0x69, 0xF3, 0x88, 0xA0, 0x01, 0x6B,
 0x00, 0x6A, 0x8C, 0xEB, 0x24, 0x23, 0x10, 0xF0,
-0x23, 0x6A, 0xCE, 0xF4, 0x4C, 0x9A, 0x00, 0x6B,
+0x23, 0x6A, 0x2E, 0xF4, 0x4C, 0x9A, 0x00, 0x6B,
 0x60, 0xC2, 0x03, 0x6A, 0x4B, 0xEA, 0x8C, 0xEA,
-0x69, 0xF3, 0x48, 0xC0, 0x00, 0x18, 0xCA, 0xD4,
-0x04, 0xD2, 0x04, 0x94, 0x00, 0x18, 0xEB, 0xD4,
+0x69, 0xF3, 0x48, 0xC0, 0x00, 0x18, 0xA2, 0xD4,
+0x04, 0xD2, 0x04, 0x94, 0x00, 0x18, 0xC3, 0xD4,
 0x69, 0xF3, 0x68, 0xA0, 0x02, 0x6A, 0x42, 0xF1,
 0x1C, 0x6C, 0x6D, 0xEA, 0x69, 0xF3, 0x48, 0xC0,
 0x30, 0xF0, 0x20, 0x6B, 0x30, 0xF0, 0x20, 0x6A,
@@ -38575,7 +38394,7 @@ u8 array_mp_8821c_fw_spic[] = {
 0x30, 0xF0, 0x20, 0x6B, 0xC0, 0xF1, 0x08, 0x4B,
 0x69, 0xF3, 0xA8, 0xA3, 0x02, 0x6C, 0x00, 0x6A,
 0xAC, 0xEC, 0x0C, 0x24, 0x10, 0xF0, 0x23, 0x6A,
-0xCE, 0xF4, 0x4C, 0x9A, 0x00, 0x6C, 0x80, 0xC2,
+0x2E, 0xF4, 0x4C, 0x9A, 0x00, 0x6C, 0x80, 0xC2,
 0x03, 0x6A, 0x4B, 0xEA, 0xAC, 0xEA, 0x69, 0xF3,
 0x48, 0xC3, 0x01, 0x6A, 0x20, 0xE8, 0x00, 0x65,
 0x00, 0x6A, 0x18, 0x6C, 0x98, 0xEA, 0x30, 0xF0,
@@ -38600,7 +38419,7 @@ u8 array_mp_8821c_fw_spic[] = {
 0x00, 0xF6, 0x23, 0x31, 0x80, 0xF0, 0x0E, 0x22,
 0x24, 0x23, 0x01, 0x73, 0x80, 0xF0, 0x0A, 0x61,
 0x0A, 0x93, 0x80, 0xF0, 0x07, 0x23, 0x10, 0xF0,
-0x23, 0x6A, 0xCE, 0xF4, 0x50, 0x9A, 0xC3, 0xEA,
+0x23, 0x6A, 0x2E, 0xF4, 0x50, 0x9A, 0xC3, 0xEA,
 0x80, 0xF0, 0x00, 0x61, 0x7F, 0x71, 0x7E, 0x60,
 0xFF, 0xF7, 0x1F, 0x51, 0x7B, 0x61, 0x30, 0xF0,
 0x20, 0x6A, 0x4F, 0xF5, 0x1C, 0x9A, 0x1B, 0xEE,
@@ -38608,7 +38427,7 @@ u8 array_mp_8821c_fw_spic[] = {
 0x02, 0x22, 0x01, 0x48, 0x04, 0x10, 0x03, 0x28,
 0x01, 0x68, 0x50, 0x67, 0x1F, 0x10, 0x01, 0x6B,
 0x20, 0x10, 0x0A, 0x95, 0x67, 0x25, 0x10, 0xF0,
-0x23, 0x6A, 0xCE, 0xF4, 0x50, 0x9A, 0x0C, 0x96,
+0x23, 0x6A, 0x2E, 0xF4, 0x50, 0x9A, 0x0C, 0x96,
 0xC3, 0xEA, 0x60, 0x61, 0x7F, 0x71, 0x5E, 0x60,
 0xFF, 0xF7, 0x1F, 0x51, 0x5B, 0x61, 0x30, 0xF0,
 0x20, 0x6A, 0x6F, 0xF5, 0x00, 0x9A, 0x1B, 0xEE,
@@ -38616,7 +38435,7 @@ u8 array_mp_8821c_fw_spic[] = {
 0x02, 0x22, 0x01, 0x48, 0x05, 0x10, 0x04, 0x28,
 0x01, 0x68, 0x00, 0x6A, 0x04, 0xD2, 0x02, 0x10,
 0x00, 0x6B, 0x04, 0xD3, 0x0A, 0x94, 0x00, 0x18,
-0x74, 0xD5, 0x00, 0x6C, 0xFF, 0x6E, 0xA4, 0x67,
+0x4C, 0xD5, 0x00, 0x6C, 0xFF, 0x6E, 0xA4, 0x67,
 0xCC, 0xED, 0x1D, 0x65, 0x18, 0x6D, 0xB8, 0xEC,
 0x30, 0xF0, 0x20, 0x6B, 0xAF, 0xF4, 0x18, 0x4B,
 0x01, 0x6D, 0x12, 0xEA, 0x69, 0xE2, 0xA0, 0xF0,
@@ -38645,10 +38464,10 @@ u8 array_mp_8821c_fw_spic[] = {
 0x08, 0x26, 0xA0, 0xF0, 0x94, 0xA4, 0x86, 0x34,
 0xAC, 0xEC, 0x03, 0x24, 0x80, 0x9A, 0x01, 0x4C,
 0x80, 0xDA, 0x01, 0x4B, 0x0A, 0x73, 0x18, 0x4A,
-0xE7, 0x61, 0x00, 0x18, 0xCA, 0xD4, 0x04, 0xD2,
+0xE7, 0x61, 0x00, 0x18, 0xA2, 0xD4, 0x04, 0xD2,
 0x30, 0xF0, 0x20, 0x6A, 0x04, 0x93, 0x4F, 0xF5,
 0x5C, 0x9A, 0x6E, 0xEA, 0x54, 0x22, 0x04, 0x94,
-0x00, 0x18, 0xEB, 0xD4, 0x50, 0x10, 0x18, 0x6D,
+0x00, 0x18, 0xC3, 0xD4, 0x50, 0x10, 0x18, 0x6D,
 0xB8, 0xEC, 0x30, 0xF0, 0x20, 0x6B, 0xAF, 0xF4,
 0x18, 0x4B, 0x12, 0xED, 0x6D, 0xE5, 0xA0, 0xF0,
 0xD4, 0xA3, 0x01, 0x6D, 0xAC, 0xEE, 0x0A, 0x26,
@@ -38674,8 +38493,8 @@ u8 array_mp_8821c_fw_spic[] = {
 0x80, 0xF0, 0x6C, 0xDA, 0x07, 0x97, 0x04, 0x63,
 0x00, 0xEF, 0x00, 0x65, 0xFB, 0x63, 0x09, 0x62,
 0x08, 0xD1, 0x07, 0xD0, 0x10, 0xF0, 0x23, 0x6B,
-0xEE, 0xF1, 0x78, 0x9B, 0x10, 0xF0, 0x23, 0x6A,
-0x8B, 0xF0, 0x1D, 0x4A, 0x30, 0xF0, 0x20, 0x68,
+0x4E, 0xF1, 0x78, 0x9B, 0x10, 0xF0, 0x23, 0x6A,
+0xEA, 0xF7, 0x1D, 0x4A, 0x30, 0xF0, 0x20, 0x68,
 0x40, 0xDB, 0x6F, 0xF5, 0x0E, 0x48, 0x00, 0x69,
 0x18, 0x6A, 0x58, 0xE9, 0x30, 0xF0, 0x20, 0x6B,
 0xAF, 0xF4, 0x18, 0x4B, 0x12, 0xEA, 0x69, 0xE2,
@@ -38705,7 +38524,7 @@ u8 array_mp_8821c_fw_spic[] = {
 0x14, 0x6E, 0x40, 0xEA, 0x05, 0x97, 0x03, 0x63,
 0x00, 0xEF, 0x00, 0x65, 0xFB, 0x63, 0x09, 0x62,
 0x08, 0xD1, 0x07, 0xD0, 0x24, 0x67, 0x00, 0x18,
-0x5C, 0xD6, 0x47, 0xA1, 0x66, 0xA1, 0x30, 0xF0,
+0x34, 0xD6, 0x47, 0xA1, 0x66, 0xA1, 0x30, 0xF0,
 0x20, 0x68, 0xC0, 0xF1, 0x08, 0x48, 0x40, 0x32,
 0xEB, 0xF6, 0x80, 0xA0, 0x69, 0xE2, 0x01, 0x69,
 0xEB, 0xF6, 0x52, 0xC8, 0x51, 0x67, 0x8C, 0xEA,
@@ -38722,12 +38541,12 @@ u8 array_mp_8821c_fw_spic[] = {
 0x54, 0xC0, 0x0C, 0x6A, 0x33, 0x60, 0x00, 0x6A,
 0xEB, 0xF6, 0x55, 0xC0, 0xEB, 0xF6, 0x56, 0xC0,
 0x00, 0x6A, 0xEB, 0xF6, 0x58, 0xC8, 0xEB, 0xF6,
-0x5A, 0xC8, 0x10, 0xF0, 0x23, 0x6A, 0x6E, 0xF4,
+0x5A, 0xC8, 0x10, 0xF0, 0x23, 0x6A, 0xCE, 0xF3,
 0x44, 0x9A, 0xEB, 0xF6, 0xC1, 0xA0, 0x10, 0xF0,
 0x23, 0x6D, 0x60, 0xAA, 0xFF, 0xF7, 0x1F, 0x6A,
-0xCE, 0xF4, 0xB4, 0x9D, 0x6C, 0xEA, 0xD9, 0xE2,
+0x2E, 0xF4, 0xB4, 0x9D, 0x6C, 0xEA, 0xD9, 0xE2,
 0xDC, 0x36, 0x00, 0x6A, 0xB5, 0xE6, 0x10, 0xF0,
-0x23, 0x6E, 0x04, 0xD2, 0x05, 0xD2, 0x8E, 0xF2,
+0x23, 0x6E, 0x04, 0xD2, 0x05, 0xD2, 0xEE, 0xF1,
 0xCC, 0x9E, 0x30, 0xF0, 0x20, 0x6A, 0x30, 0xF0,
 0x20, 0x6B, 0xAE, 0xF2, 0x40, 0x9A, 0xCC, 0xF0,
 0x0E, 0x4B, 0x00, 0x6C, 0xD9, 0xE3, 0x40, 0xEA,
@@ -38765,23 +38584,23 @@ u8 array_mp_8821c_fw_spic[] = {
 0x6D, 0xE4, 0xEB, 0xF6, 0x7A, 0xCA, 0xEB, 0xF6,
 0x95, 0xA2, 0xEB, 0xF6, 0x62, 0xA2, 0x8E, 0xEB,
 0x09, 0x2B, 0x10, 0xF0, 0x23, 0x6C, 0x0B, 0xF7,
-0xC2, 0xA2, 0x0B, 0xF4, 0x09, 0x4C, 0x04, 0xD3,
+0xC2, 0xA2, 0x6B, 0xF3, 0x09, 0x4C, 0x04, 0xD3,
 0x00, 0x6D, 0x09, 0x10, 0x0B, 0xF7, 0xC2, 0xA2,
 0x10, 0xF0, 0x23, 0x6C, 0x00, 0x6A, 0x04, 0xD2,
-0xEB, 0xF3, 0x0D, 0x4C, 0xA2, 0x67, 0x64, 0x6A,
+0x4B, 0xF3, 0x0D, 0x4C, 0xA2, 0x67, 0x64, 0x6A,
 0x58, 0xEE, 0x01, 0x6F, 0x12, 0xEE, 0x00, 0x18,
-0x87, 0xD5, 0x1B, 0x10, 0xEB, 0xF6, 0x74, 0xA0,
+0x5F, 0xD5, 0x1B, 0x10, 0xEB, 0xF6, 0x74, 0xA0,
 0x02, 0x6A, 0x4B, 0xEA, 0x6C, 0xEA, 0xEB, 0xF6,
 0x54, 0xC0, 0x02, 0x6C, 0xEB, 0xF6, 0xB2, 0xA8,
 0x0E, 0x10, 0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1,
 0x08, 0x4A, 0xEB, 0xF6, 0x94, 0xA2, 0x02, 0x6B,
 0x6B, 0xEB, 0xEB, 0xF6, 0xB2, 0xAA, 0x8C, 0xEB,
 0xEB, 0xF6, 0x74, 0xC2, 0x03, 0x6C, 0x00, 0x18,
-0x4F, 0xD6, 0x07, 0x97, 0x06, 0x90, 0x04, 0x63,
+0x27, 0xD6, 0x07, 0x97, 0x06, 0x90, 0x04, 0x63,
 0x00, 0xEF, 0x00, 0x65, 0xFD, 0x63, 0x05, 0x62,
 0x30, 0xF0, 0x20, 0x6A, 0xAC, 0xF0, 0x7C, 0xA2,
 0x01, 0x6A, 0x6C, 0xEA, 0x02, 0x22, 0x00, 0x18,
-0xA2, 0xD6, 0x05, 0x97, 0x03, 0x63, 0x00, 0xEF,
+0x7A, 0xD6, 0x05, 0x97, 0x03, 0x63, 0x00, 0xEF,
 0xFB, 0x63, 0x09, 0x62, 0x08, 0xD1, 0x07, 0xD0,
 0x30, 0xF0, 0x20, 0x69, 0xC0, 0xF1, 0x08, 0x49,
 0xEB, 0xF6, 0x94, 0xA1, 0x01, 0x6A, 0xFF, 0x6B,
@@ -38796,7 +38615,7 @@ u8 array_mp_8821c_fw_spic[] = {
 0x52, 0x36, 0x30, 0xF0, 0x20, 0x6A, 0xAE, 0xF2,
 0x54, 0x9A, 0x6C, 0xED, 0x6C, 0xEE, 0x40, 0xEA,
 0x01, 0x72, 0x01, 0x6C, 0x01, 0x61, 0x00, 0x6C,
-0xEB, 0xF6, 0xB2, 0xA9, 0x00, 0x18, 0x4F, 0xD6,
+0xEB, 0xF6, 0xB2, 0xA9, 0x00, 0x18, 0x27, 0xD6,
 0x30, 0xF0, 0x20, 0x6A, 0xEE, 0xF4, 0x54, 0x9A,
 0x40, 0xEA, 0xD9, 0x10, 0x02, 0x6A, 0xAC, 0xEA,
 0x6C, 0xEA, 0x11, 0x22, 0xEB, 0xF6, 0x43, 0xA1,
@@ -38804,7 +38623,7 @@ u8 array_mp_8821c_fw_spic[] = {
 0x52, 0x36, 0x30, 0xF0, 0x20, 0x6A, 0xAE, 0xF2,
 0x54, 0x9A, 0x6C, 0xED, 0x6C, 0xEE, 0x40, 0xEA,
 0x01, 0x72, 0xA0, 0xF0, 0x14, 0x61, 0xEB, 0xF6,
-0xB2, 0xA9, 0x00, 0x6C, 0x00, 0x18, 0x4F, 0xD6,
+0xB2, 0xA9, 0x00, 0x6C, 0x00, 0x18, 0x27, 0xD6,
 0x30, 0xF0, 0x20, 0x6A, 0xAC, 0xF0, 0x4D, 0xA2,
 0x5A, 0x33, 0x02, 0x73, 0x0D, 0x60, 0x03, 0x73,
 0x0F, 0x60, 0x01, 0x73, 0x05, 0x60, 0x3F, 0x6E,
@@ -38815,7 +38634,7 @@ u8 array_mp_8821c_fw_spic[] = {
 0xD8, 0xEB, 0x12, 0xEE, 0x0A, 0x6A, 0x58, 0xEE,
 0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A,
 0xEB, 0xF6, 0x7A, 0xAA, 0x10, 0xF0, 0x23, 0x6C,
-0xEB, 0xF3, 0x0D, 0x4C, 0x12, 0xEE, 0x7B, 0xE6,
+0x4B, 0xF3, 0x0D, 0x4C, 0x12, 0xEE, 0x7B, 0xE6,
 0x00, 0x6B, 0xEB, 0xF6, 0x75, 0xC2, 0x00, 0x6B,
 0xEB, 0xF6, 0x7A, 0xCA, 0xEB, 0xF6, 0x78, 0xCA,
 0x00, 0x6A, 0x04, 0xD2, 0xA2, 0x67, 0x64, 0x6A,
@@ -38825,7 +38644,7 @@ u8 array_mp_8821c_fw_spic[] = {
 0x30, 0xF0, 0x20, 0x6A, 0xAE, 0xF2, 0x54, 0x9A,
 0x6C, 0xED, 0x6C, 0xEE, 0x40, 0xEA, 0x01, 0x72,
 0x62, 0x61, 0xEB, 0xF6, 0xB2, 0xA9, 0x00, 0x6C,
-0x00, 0x18, 0x4F, 0xD6, 0x30, 0xF0, 0x20, 0x6A,
+0x00, 0x18, 0x27, 0xD6, 0x30, 0xF0, 0x20, 0x6A,
 0xC0, 0xF1, 0x08, 0x4A, 0xEB, 0xF6, 0x87, 0xA2,
 0xEB, 0xF6, 0x76, 0xA2, 0xFF, 0x4C, 0x6E, 0xEC,
 0x03, 0x2C, 0xEB, 0xF6, 0x66, 0xA2, 0x05, 0x10,
@@ -38843,16 +38662,16 @@ u8 array_mp_8821c_fw_spic[] = {
 0x08, 0x4B, 0xEB, 0xF6, 0x95, 0xC3, 0x00, 0x6C,
 0xEB, 0xF6, 0x9A, 0xCB, 0xEB, 0xF6, 0x98, 0xCB,
 0x00, 0x6B, 0x10, 0xF0, 0x23, 0x6C, 0x04, 0xD3,
-0xEB, 0xF3, 0x0D, 0x4C, 0xA3, 0x67, 0xD8, 0xEA,
-0x01, 0x6F, 0x12, 0xEE, 0x00, 0x18, 0x87, 0xD5,
+0x4B, 0xF3, 0x0D, 0x4C, 0xA3, 0x67, 0xD8, 0xEA,
+0x01, 0x6F, 0x12, 0xEE, 0x00, 0x18, 0x5F, 0xD5,
 0x1E, 0x10, 0xEB, 0xF6, 0xB2, 0xA9, 0x00, 0x6C,
-0x00, 0x18, 0x4F, 0xD6, 0xEB, 0xF6, 0x15, 0xC1,
+0x00, 0x18, 0x27, 0xD6, 0xEB, 0xF6, 0x15, 0xC1,
 0xEB, 0xF6, 0x1A, 0xC9, 0xEB, 0xF6, 0x18, 0xC9,
-0x00, 0x18, 0xFB, 0xD6, 0x10, 0x10, 0x30, 0xF0,
+0x00, 0x18, 0xD3, 0xD6, 0x10, 0x10, 0x30, 0xF0,
 0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A, 0xEB, 0xF6,
 0x94, 0xA2, 0x02, 0x6B, 0x6B, 0xEB, 0xEB, 0xF6,
 0xB2, 0xAA, 0x8C, 0xEB, 0xEB, 0xF6, 0x74, 0xC2,
-0x01, 0x6C, 0x00, 0x18, 0x4F, 0xD6, 0x09, 0x97,
+0x01, 0x6C, 0x00, 0x18, 0x27, 0xD6, 0x09, 0x97,
 0x08, 0x91, 0x07, 0x90, 0x05, 0x63, 0x00, 0xEF,
 0xFB, 0x63, 0x09, 0x62, 0x08, 0xD1, 0x07, 0xD0,
 0xFF, 0x6A, 0x04, 0x67, 0x25, 0x67, 0x4C, 0xEE,
@@ -38867,22 +38686,22 @@ u8 array_mp_8821c_fw_spic[] = {
 0x00, 0xEF, 0x00, 0x65, 0xFD, 0x63, 0x05, 0x62,
 0xFF, 0x6D, 0x8C, 0xED, 0x18, 0x4D, 0x01, 0x6A,
 0x44, 0xED, 0x00, 0x6C, 0xA2, 0x67, 0x00, 0x18,
-0x23, 0xD0, 0x05, 0x97, 0x03, 0x63, 0x00, 0xEF,
+0xFB, 0xCF, 0x05, 0x97, 0x03, 0x63, 0x00, 0xEF,
 0xDE, 0x63, 0x43, 0x62, 0x42, 0xD1, 0x41, 0xD0,
 0x01, 0x6A, 0x7D, 0x67, 0x4B, 0xEA, 0x54, 0xC3,
 0x0F, 0x6A, 0x56, 0xC3, 0x10, 0x6A, 0x57, 0xC3,
-0x10, 0xF0, 0x23, 0x6A, 0xEE, 0xF3, 0x58, 0x9A,
+0x10, 0xF0, 0x23, 0x6A, 0x4E, 0xF3, 0x58, 0x9A,
 0xFF, 0x69, 0x8C, 0xE9, 0x30, 0x31, 0x49, 0xE1,
 0x40, 0x9A, 0x30, 0xF0, 0x20, 0x68, 0x06, 0x04,
 0x04, 0xD2, 0x4E, 0xF2, 0x50, 0x98, 0x04, 0x05,
 0x04, 0x6E, 0x40, 0xEA, 0x10, 0xF0, 0x23, 0x6A,
-0x0E, 0xF5, 0x44, 0x9A, 0x07, 0x04, 0x04, 0x05,
+0x6E, 0xF4, 0x44, 0x9A, 0x07, 0x04, 0x04, 0x05,
 0x49, 0xE1, 0x40, 0x9A, 0x04, 0x6E, 0x04, 0xD2,
 0x4E, 0xF2, 0x50, 0x98, 0x40, 0xEA, 0x10, 0xF0,
-0x23, 0x6A, 0x0E, 0xF5, 0x48, 0x9A, 0x08, 0x04,
+0x23, 0x6A, 0x6E, 0xF4, 0x48, 0x9A, 0x08, 0x04,
 0x04, 0x05, 0x49, 0xE1, 0x40, 0x9A, 0x04, 0x6E,
 0x04, 0xD2, 0x4E, 0xF2, 0x50, 0x98, 0x40, 0xEA,
-0x10, 0xF0, 0x23, 0x6A, 0x0E, 0xF5, 0x4C, 0x9A,
+0x10, 0xF0, 0x23, 0x6A, 0x6E, 0xF4, 0x4C, 0x9A,
 0x09, 0x04, 0x04, 0x05, 0x45, 0xE1, 0x40, 0x99,
 0x04, 0x6E, 0x04, 0xD2, 0x4E, 0xF2, 0x50, 0x98,
 0x40, 0xEA, 0x30, 0xF0, 0x20, 0x6A, 0xAE, 0xF2,
@@ -38890,13 +38709,13 @@ u8 array_mp_8821c_fw_spic[] = {
 0x42, 0x91, 0x41, 0x90, 0x22, 0x63, 0x00, 0xEF,
 0xFC, 0x63, 0x07, 0x62, 0x06, 0xD1, 0x05, 0xD0,
 0x10, 0xF0, 0x23, 0x6A, 0x10, 0xF0, 0x23, 0x6B,
-0x0E, 0xF5, 0x50, 0x9A, 0x0E, 0xF5, 0x74, 0x9B,
+0x6E, 0xF4, 0x50, 0x9A, 0x6E, 0xF4, 0x74, 0x9B,
 0x00, 0xA2, 0x20, 0xA3, 0xFF, 0x6A, 0x4C, 0xE8,
 0x4C, 0xE9, 0x2A, 0xE8, 0x43, 0x60, 0x10, 0xF0,
-0x23, 0x6A, 0xEE, 0xF3, 0x58, 0x9A, 0x10, 0x33,
+0x23, 0x6A, 0x4E, 0xF3, 0x58, 0x9A, 0x10, 0x33,
 0x49, 0xE3, 0x40, 0xA2, 0xFF, 0x6B, 0x6C, 0xEA,
 0x56, 0x32, 0x6C, 0xEA, 0x07, 0x5A, 0x2C, 0x60,
-0x10, 0xF0, 0x23, 0x6B, 0x48, 0x32, 0xCE, 0xF1,
+0x10, 0xF0, 0x23, 0x6B, 0x48, 0x32, 0x2E, 0xF1,
 0x1C, 0x4B, 0x4D, 0xE3, 0x40, 0x9B, 0x00, 0xEA,
 0x30, 0xF0, 0x20, 0x6A, 0x6F, 0xF6, 0x43, 0xA2,
 0x1F, 0x2A, 0x30, 0xF0, 0x20, 0x6A, 0x6E, 0xF2,
@@ -38908,41 +38727,41 @@ u8 array_mp_8821c_fw_spic[] = {
 0x48, 0x9A, 0x04, 0x10, 0x30, 0xF0, 0x20, 0x6A,
 0x6E, 0xF2, 0x4C, 0x9A, 0x90, 0x67, 0x40, 0xEA,
 0x01, 0x48, 0x7F, 0x6A, 0x4C, 0xE8, 0x0A, 0xE9,
-0xC2, 0x61, 0x10, 0xF0, 0x23, 0x6A, 0x0E, 0xF5,
+0xC2, 0x61, 0x10, 0xF0, 0x23, 0x6A, 0x6E, 0xF4,
 0x50, 0x9A, 0x20, 0xC2, 0x07, 0x97, 0x06, 0x91,
 0x05, 0x90, 0x04, 0x63, 0x00, 0xEF, 0x00, 0x65,
 0xFC, 0x63, 0x07, 0x62, 0x06, 0xD1, 0x05, 0xD0,
-0x10, 0xF0, 0x23, 0x6A, 0x0E, 0xF5, 0x78, 0x9A,
+0x10, 0xF0, 0x23, 0x6A, 0x6E, 0xF4, 0x78, 0x9A,
 0x02, 0x6C, 0x00, 0xF4, 0x00, 0x6D, 0x40, 0x9B,
 0x30, 0xF0, 0x20, 0x69, 0x8D, 0xEA, 0x40, 0xDB,
-0x10, 0xF0, 0x23, 0x6A, 0x4E, 0xF4, 0x7C, 0x9A,
+0x10, 0xF0, 0x23, 0x6A, 0xAE, 0xF3, 0x7C, 0x9A,
 0xFF, 0xF7, 0x1F, 0x6C, 0x40, 0xAB, 0x8C, 0xEA,
 0xAD, 0xEA, 0x8C, 0xEA, 0x40, 0xCB, 0x10, 0xF0,
-0x23, 0x6A, 0x0E, 0xF5, 0x1C, 0x9A, 0x10, 0xF0,
-0x23, 0x6B, 0x2E, 0xF5, 0x00, 0x4B, 0x40, 0x98,
+0x23, 0x6A, 0x6E, 0xF4, 0x1C, 0x9A, 0x10, 0xF0,
+0x23, 0x6B, 0x8E, 0xF4, 0x00, 0x4B, 0x40, 0x98,
 0x60, 0x9B, 0x0A, 0x6C, 0x6C, 0xEA, 0x10, 0xF0,
-0x23, 0x6B, 0xAE, 0xF2, 0x78, 0x9B, 0x6D, 0xEA,
+0x23, 0x6B, 0x0E, 0xF2, 0x78, 0x9B, 0x6D, 0xEA,
 0x40, 0xD8, 0xCE, 0xF4, 0x5C, 0x99, 0x40, 0xEA,
 0x40, 0x98, 0xDF, 0xF7, 0x01, 0x6B, 0x6B, 0xEB,
-0x6C, 0xEA, 0x10, 0xF0, 0x23, 0x6B, 0x2E, 0xF5,
+0x6C, 0xEA, 0x10, 0xF0, 0x23, 0x6B, 0x8E, 0xF4,
 0x64, 0x9B, 0x0A, 0x6C, 0x6D, 0xEA, 0x40, 0xD8,
 0xCE, 0xF4, 0x5C, 0x99, 0x40, 0xEA, 0x10, 0xF0,
-0x23, 0x6C, 0x2E, 0xF5, 0x00, 0x4C, 0x40, 0x98,
+0x23, 0x6C, 0x8E, 0xF4, 0x00, 0x4C, 0x40, 0x98,
 0x80, 0x9C, 0x8C, 0xEA, 0x40, 0xD8, 0xCE, 0xF4,
 0x5C, 0x99, 0x0A, 0x6C, 0x40, 0xEA, 0x40, 0x98,
 0x1D, 0xF0, 0x01, 0x6B, 0x6B, 0xEB, 0x6C, 0xEA,
-0x10, 0xF0, 0x23, 0x6B, 0x2E, 0xF5, 0x68, 0x9B,
+0x10, 0xF0, 0x23, 0x6B, 0x8E, 0xF4, 0x68, 0x9B,
 0x0A, 0x6C, 0x6D, 0xEA, 0x40, 0xD8, 0xCE, 0xF4,
 0x5C, 0x99, 0x40, 0xEA, 0x07, 0x97, 0x06, 0x91,
 0x05, 0x90, 0x04, 0x63, 0x00, 0xEF, 0x00, 0x65,
-0x10, 0xF0, 0x23, 0x6A, 0x2E, 0xF5, 0x5C, 0x9A,
+0x10, 0xF0, 0x23, 0x6A, 0x8E, 0xF4, 0x5C, 0x9A,
 0x30, 0xF0, 0x20, 0x6B, 0xC0, 0xF1, 0x08, 0x4B,
 0x80, 0xA2, 0xEB, 0xF6, 0xD4, 0xA3, 0xEB, 0xF6,
 0x9C, 0xC3, 0xA0, 0xAA, 0x01, 0xF0, 0x00, 0x6C,
 0xAC, 0xEC, 0x83, 0x35, 0x03, 0x6C, 0xAE, 0x35,
 0x8B, 0xEC, 0xA4, 0x35, 0xCC, 0xEC, 0xAD, 0xEC,
 0xEB, 0xF6, 0x94, 0xC3, 0x10, 0xF0, 0x23, 0x6C,
-0x4E, 0xF5, 0x80, 0x9C, 0xA0, 0xAC, 0xEB, 0xF6,
+0xAE, 0xF4, 0x80, 0x9C, 0xA0, 0xAC, 0xEB, 0xF6,
 0xBE, 0xCB, 0xA0, 0xAA, 0xBF, 0xF7, 0x1F, 0x6B,
 0xAC, 0xEB, 0x60, 0xCA, 0xA0, 0xAA, 0x7F, 0xF7,
 0x1F, 0x6B, 0xAC, 0xEB, 0x60, 0xCA, 0xC0, 0xAA,
@@ -38951,15 +38770,15 @@ u8 array_mp_8821c_fw_spic[] = {
 0x21, 0x4B, 0xAC, 0xEA, 0x6D, 0xEA, 0xAC, 0xEA,
 0x40, 0xCC, 0x20, 0xE8, 0x30, 0xF0, 0x20, 0x6A,
 0xC0, 0xF1, 0x08, 0x4A, 0x10, 0xF0, 0x23, 0x6B,
-0xEB, 0xF6, 0x9C, 0xA2, 0x2E, 0xF5, 0x7C, 0x9B,
+0xEB, 0xF6, 0x9C, 0xA2, 0x8E, 0xF4, 0x7C, 0x9B,
 0x01, 0x6E, 0x80, 0xC3, 0x10, 0xF0, 0x23, 0x6C,
-0xEB, 0xF6, 0xBE, 0xAA, 0x4E, 0xF5, 0x80, 0x9C,
+0xEB, 0xF6, 0xBE, 0xAA, 0xAE, 0xF4, 0x80, 0x9C,
 0xA0, 0xCC, 0xEB, 0xF6, 0x54, 0xA2, 0x80, 0xAB,
 0xFF, 0xF7, 0x1F, 0x6D, 0x46, 0x32, 0xCC, 0xEA,
 0xAC, 0xEC, 0x40, 0x32, 0xFE, 0xF7, 0x1E, 0x4E,
 0x4C, 0x32, 0xCC, 0xEC, 0x8D, 0xEA, 0xAC, 0xEA,
 0x40, 0xCB, 0x20, 0xE8, 0xFC, 0x63, 0x07, 0x62,
-0x06, 0xD0, 0x10, 0xF0, 0x23, 0x6B, 0x6E, 0xF4,
+0x06, 0xD0, 0x10, 0xF0, 0x23, 0x6B, 0xCE, 0xF3,
 0x64, 0x9B, 0xE9, 0xA4, 0x48, 0xA4, 0xA0, 0xAB,
 0xE0, 0x37, 0x5D, 0xE7, 0xFF, 0xF7, 0x1F, 0x6A,
 0x4C, 0xEF, 0x4C, 0xED, 0x4A, 0xA4, 0xCB, 0xA4,
@@ -38971,8 +38790,8 @@ u8 array_mp_8821c_fw_spic[] = {
 0x1F, 0x60, 0x30, 0xF0, 0x20, 0x6B, 0x30, 0xF0,
 0x20, 0x6A, 0xAB, 0xF7, 0x03, 0x4B, 0x2B, 0xF6,
 0xE2, 0xC2, 0xB5, 0xE6, 0x10, 0xF0, 0x23, 0x6E,
-0x00, 0x6A, 0x4E, 0xF5, 0x04, 0x9E, 0x10, 0xF0,
-0x23, 0x6E, 0x04, 0xD2, 0x05, 0xD2, 0x8E, 0xF2,
+0x00, 0x6A, 0xAE, 0xF4, 0x04, 0x9E, 0x10, 0xF0,
+0x23, 0x6E, 0x04, 0xD2, 0x05, 0xD2, 0xEE, 0xF1,
 0xCC, 0x9E, 0x30, 0xF0, 0x20, 0x6A, 0xAE, 0xF2,
 0x40, 0x9A, 0xBC, 0x35, 0x00, 0x6C, 0x15, 0xE5,
 0xD9, 0xE3, 0x40, 0xEA, 0x00, 0x6A, 0x01, 0x10,
@@ -38982,16 +38801,16 @@ u8 array_mp_8821c_fw_spic[] = {
 0x30, 0xF0, 0x20, 0x6C, 0xC0, 0xF1, 0x08, 0x4C,
 0xCB, 0xF6, 0xDD, 0xA4, 0x38, 0x26, 0x8D, 0xE2,
 0x4B, 0xF4, 0x78, 0xA3, 0x34, 0x23, 0x10, 0xF0,
-0x23, 0x6B, 0x6E, 0xF4, 0x64, 0x9B, 0xFF, 0xF7,
+0x23, 0x6B, 0xCE, 0xF3, 0x64, 0x9B, 0xFF, 0xF7,
 0x1F, 0x6D, 0x01, 0x72, 0x60, 0xAB, 0x6C, 0xED,
 0x03, 0x60, 0x02, 0x72, 0x08, 0x60, 0x27, 0x10,
 0x30, 0xF0, 0x20, 0x6B, 0xAB, 0xF6, 0x03, 0x4B,
 0x4B, 0xF4, 0xF9, 0xA4, 0x06, 0x10, 0x4B, 0xF4,
 0xFA, 0xA4, 0x30, 0xF0, 0x20, 0x6B, 0xAB, 0xF7,
 0x03, 0x4B, 0xE1, 0xF7, 0x1F, 0x6A, 0xAC, 0xEA,
-0x10, 0xF0, 0x23, 0x6D, 0x8E, 0xF2, 0xAC, 0x9D,
+0x10, 0xF0, 0x23, 0x6D, 0xEE, 0xF1, 0xAC, 0x9D,
 0xD9, 0xE2, 0x00, 0x6A, 0xB5, 0xE3, 0x10, 0xF0,
-0x23, 0x6B, 0x04, 0xD2, 0x05, 0xD2, 0x4E, 0xF5,
+0x23, 0x6B, 0x04, 0xD2, 0x05, 0xD2, 0xAE, 0xF4,
 0x64, 0x9B, 0x30, 0xF0, 0x20, 0x6A, 0xAE, 0xF2,
 0x40, 0x9A, 0xDC, 0x36, 0x00, 0x6C, 0x79, 0xE6,
 0x40, 0xEA, 0x01, 0x6A, 0x01, 0x10, 0x00, 0x6A,
@@ -39015,7 +38834,7 @@ u8 array_mp_8821c_fw_spic[] = {
 0x8D, 0xC2, 0xC1, 0xF7, 0x8B, 0xA2, 0x01, 0x6B,
 0x64, 0xEC, 0xC1, 0xF7, 0x70, 0xDA, 0xC1, 0xF7,
 0x78, 0xDA, 0x10, 0xF0, 0x30, 0x6A, 0x00, 0xF0,
-0x00, 0x4A, 0x10, 0xF0, 0x23, 0x6B, 0x2E, 0xF2,
+0x00, 0x4A, 0x10, 0xF0, 0x23, 0x6B, 0x8E, 0xF1,
 0x78, 0x9B, 0xC1, 0xF7, 0x90, 0x9A, 0x83, 0xEB,
 0x01, 0x6B, 0x01, 0x61, 0x00, 0x6B, 0xC1, 0xF7,
 0x7C, 0xC2, 0xC1, 0xF7, 0x7D, 0xC2, 0x20, 0xE8,
@@ -39031,27 +38850,27 @@ u8 array_mp_8821c_fw_spic[] = {
 0x70, 0xDA, 0xC1, 0xF7, 0x78, 0xDA, 0x00, 0x6B,
 0xC1, 0xF7, 0x7C, 0xC2, 0xC1, 0xF7, 0x7D, 0xC2,
 0x20, 0xE8, 0x00, 0x65, 0xFD, 0x63, 0x05, 0x62,
-0x04, 0xD0, 0x10, 0xF0, 0x23, 0x6A, 0x4E, 0xF5,
-0x68, 0x9A, 0x10, 0xF0, 0x23, 0x6C, 0x2E, 0xF3,
+0x04, 0xD0, 0x10, 0xF0, 0x23, 0x6A, 0xAE, 0xF4,
+0x68, 0x9A, 0x10, 0xF0, 0x23, 0x6C, 0x8E, 0xF2,
 0x8C, 0x9C, 0x40, 0x9B, 0x00, 0x6D, 0x10, 0xF0,
 0x23, 0x6F, 0x8D, 0xEA, 0x40, 0xDB, 0x10, 0xF0,
-0x23, 0x6A, 0x4E, 0xF5, 0x8C, 0x9A, 0x10, 0xF0,
-0x23, 0x6B, 0x4E, 0xF5, 0x70, 0x9B, 0x00, 0x6A,
+0x23, 0x6A, 0xAE, 0xF4, 0x8C, 0x9A, 0x10, 0xF0,
+0x23, 0x6B, 0xAE, 0xF4, 0x70, 0x9B, 0x00, 0x6A,
 0x40, 0xC4, 0x01, 0x6A, 0x40, 0xC3, 0x10, 0xF0,
-0x23, 0x6B, 0x4E, 0xF5, 0x74, 0x9B, 0xEE, 0xF2,
+0x23, 0x6B, 0xAE, 0xF4, 0x74, 0x9B, 0x4E, 0xF2,
 0xE4, 0x9F, 0x10, 0xF0, 0x30, 0x68, 0x40, 0xC3,
-0x10, 0xF0, 0x23, 0x6B, 0x4E, 0xF5, 0x78, 0x9B,
+0x10, 0xF0, 0x23, 0x6B, 0xAE, 0xF4, 0x78, 0x9B,
 0xC1, 0xF7, 0x08, 0x48, 0xA0, 0xDB, 0x10, 0xF0,
-0x23, 0x6B, 0x4E, 0xF5, 0xDC, 0x9B, 0x60, 0x9E,
+0x23, 0x6B, 0xAE, 0xF4, 0xDC, 0x9B, 0x60, 0x9E,
 0xED, 0xEB, 0x60, 0xDE, 0x10, 0xF0, 0x23, 0x6B,
-0x6E, 0xF5, 0x60, 0x9B, 0x18, 0x6E, 0xA0, 0xC3,
+0xCE, 0xF4, 0x60, 0x9B, 0x18, 0x6E, 0xA0, 0xC3,
 0x40, 0xC4, 0x30, 0xF0, 0x20, 0x6A, 0x4E, 0xF2,
 0x4C, 0x9A, 0x90, 0x67, 0x40, 0xEA, 0x30, 0xF0,
 0x20, 0x6A, 0x8E, 0xF5, 0x50, 0x9A, 0x81, 0x40,
 0x40, 0xEA, 0x01, 0x72, 0x21, 0x61, 0x00, 0x18,
-0xAE, 0xD8, 0x10, 0xF0, 0x30, 0x6A, 0x00, 0xF0,
+0x86, 0xD8, 0x10, 0xF0, 0x30, 0x6A, 0x00, 0xF0,
 0x00, 0x4A, 0x10, 0xF0, 0x23, 0x6B, 0xC1, 0xF7,
-0x90, 0x9A, 0x2E, 0xF2, 0x78, 0x9B, 0x83, 0xEB,
+0x90, 0x9A, 0x8E, 0xF1, 0x78, 0x9B, 0x83, 0xEB,
 0x09, 0x60, 0xC1, 0xF7, 0x7D, 0xA2, 0x06, 0x2B,
 0xC1, 0xF7, 0x6D, 0xA2, 0x00, 0xF6, 0x60, 0x33,
 0xC1, 0xF7, 0x78, 0xDA, 0x10, 0xF0, 0x30, 0x6A,
@@ -39059,54 +38878,54 @@ u8 array_mp_8821c_fw_spic[] = {
 0x01, 0x6B, 0x8D, 0xEB, 0xC1, 0xF7, 0x68, 0xC2,
 0x05, 0x97, 0x04, 0x90, 0x03, 0x63, 0x00, 0xEF,
 0x10, 0xF0, 0x23, 0x6B, 0xFF, 0x6A, 0x8C, 0xEA,
-0x4E, 0xF5, 0x8C, 0x9B, 0x10, 0xF0, 0x23, 0x6B,
-0x6E, 0xF5, 0xC4, 0x9B, 0x00, 0x6D, 0xA0, 0xC4,
+0xAE, 0xF4, 0x8C, 0x9B, 0x10, 0xF0, 0x23, 0x6B,
+0xCE, 0xF4, 0xC4, 0x9B, 0x00, 0x6D, 0xA0, 0xC4,
 0x60, 0x9E, 0x00, 0xF3, 0x01, 0x6F, 0xEB, 0xEF,
 0xEC, 0xEB, 0x60, 0xDE, 0x10, 0xF0, 0x23, 0x6E,
-0x6E, 0xF5, 0xC8, 0x9E, 0x01, 0x6B, 0x60, 0xC6,
-0x10, 0xF0, 0x23, 0x6E, 0x6E, 0xF5, 0xCC, 0x9E,
-0xA0, 0xC6, 0x10, 0xF0, 0x23, 0x6D, 0x6E, 0xF5,
+0xCE, 0xF4, 0xC8, 0x9E, 0x01, 0x6B, 0x60, 0xC6,
+0x10, 0xF0, 0x23, 0x6E, 0xCE, 0xF4, 0xCC, 0x9E,
+0xA0, 0xC6, 0x10, 0xF0, 0x23, 0x6D, 0xCE, 0xF4,
 0xB0, 0x9D, 0x40, 0xC5, 0x60, 0xC4, 0x20, 0xE8,
-0x10, 0xF0, 0x23, 0x6B, 0x4E, 0xF5, 0xAC, 0x9B,
+0x10, 0xF0, 0x23, 0x6B, 0xAE, 0xF4, 0xAC, 0x9B,
 0x00, 0x6B, 0xFF, 0x6A, 0x60, 0xC5, 0x10, 0xF0,
-0x23, 0x6B, 0x8C, 0xEA, 0x6E, 0xF5, 0x84, 0x9B,
+0x23, 0x6B, 0x8C, 0xEA, 0xCE, 0xF4, 0x84, 0x9B,
 0x00, 0xF3, 0x00, 0x6E, 0x10, 0xF0, 0x23, 0x6F,
-0x60, 0x9C, 0x6E, 0xF5, 0xF8, 0x9F, 0xCD, 0xEB,
-0x60, 0xDC, 0x10, 0xF0, 0x23, 0x6C, 0x6E, 0xF5,
+0x60, 0x9C, 0xCE, 0xF4, 0xF8, 0x9F, 0xCD, 0xEB,
+0x60, 0xDC, 0x10, 0xF0, 0x23, 0x6C, 0xCE, 0xF4,
 0x88, 0x9C, 0x01, 0x6B, 0x60, 0xC4, 0x10, 0xF0,
-0x23, 0x6C, 0x6E, 0xF5, 0x94, 0x9C, 0x60, 0xC4,
-0x10, 0xF0, 0x23, 0x6C, 0x6E, 0xF5, 0x8C, 0x9C,
-0x60, 0xC4, 0x10, 0xF0, 0x23, 0x6C, 0x4E, 0xF5,
+0x23, 0x6C, 0xCE, 0xF4, 0x94, 0x9C, 0x60, 0xC4,
+0x10, 0xF0, 0x23, 0x6C, 0xCE, 0xF4, 0x8C, 0x9C,
+0x60, 0xC4, 0x10, 0xF0, 0x23, 0x6C, 0xAE, 0xF4,
 0xDC, 0x9C, 0x80, 0x9E, 0xEC, 0xEC, 0x80, 0xDE,
-0x10, 0xF0, 0x23, 0x6C, 0x6E, 0xF5, 0x90, 0x9C,
+0x10, 0xF0, 0x23, 0x6C, 0xCE, 0xF4, 0x90, 0x9C,
 0x40, 0xC4, 0x60, 0xC5, 0x10, 0xF0, 0x23, 0x6A,
-0x6E, 0xF5, 0x5C, 0x9A, 0x60, 0xA2, 0x01, 0x6A,
+0xCE, 0xF4, 0x5C, 0x9A, 0x60, 0xA2, 0x01, 0x6A,
 0x6C, 0xEA, 0xF8, 0x2A, 0x10, 0xF0, 0x23, 0x6A,
-0x6E, 0xF5, 0x50, 0x9A, 0xFF, 0x6B, 0x40, 0xA2,
+0xCE, 0xF4, 0x50, 0x9A, 0xFF, 0x6B, 0x40, 0xA2,
 0x6C, 0xEA, 0x20, 0xE8, 0xFD, 0x63, 0x05, 0x62,
-0x05, 0x6C, 0x00, 0x18, 0x3C, 0xD9, 0x01, 0x6B,
+0x05, 0x6C, 0x00, 0x18, 0x14, 0xD9, 0x01, 0x6B,
 0x4C, 0xEB, 0xFA, 0x2B, 0x05, 0x97, 0x03, 0x63,
 0x00, 0xEF, 0x00, 0x65, 0xFD, 0x63, 0x05, 0x62,
-0x06, 0x6C, 0x00, 0x18, 0x2A, 0xD9, 0x10, 0xF0,
-0x23, 0x6A, 0x6E, 0xF5, 0x5C, 0x9A, 0x60, 0xA2,
+0x06, 0x6C, 0x00, 0x18, 0x02, 0xD9, 0x10, 0xF0,
+0x23, 0x6A, 0xCE, 0xF4, 0x5C, 0x9A, 0x60, 0xA2,
 0x01, 0x6A, 0x6C, 0xEA, 0xF8, 0x2A, 0x00, 0x18,
-0x5D, 0xD9, 0x05, 0x97, 0x01, 0x6A, 0x03, 0x63,
+0x35, 0xD9, 0x05, 0x97, 0x01, 0x6A, 0x03, 0x63,
 0x00, 0xEF, 0x00, 0x65, 0x10, 0xF0, 0x23, 0x6A,
-0x4E, 0xF5, 0xAC, 0x9A, 0x00, 0x6A, 0x00, 0xF3,
+0xAE, 0xF4, 0xAC, 0x9A, 0x00, 0x6A, 0x00, 0xF3,
 0x00, 0x6E, 0x40, 0xC5, 0x10, 0xF0, 0x23, 0x6A,
-0x6E, 0xF5, 0x64, 0x9A, 0x10, 0xF0, 0x23, 0x6F,
-0x6E, 0xF5, 0xF8, 0x9F, 0x40, 0x9B, 0xCD, 0xEA,
-0x40, 0xDB, 0x10, 0xF0, 0x23, 0x6B, 0x6E, 0xF5,
+0xCE, 0xF4, 0x64, 0x9A, 0x10, 0xF0, 0x23, 0x6F,
+0xCE, 0xF4, 0xF8, 0x9F, 0x40, 0x9B, 0xCD, 0xEA,
+0x40, 0xDB, 0x10, 0xF0, 0x23, 0x6B, 0xCE, 0xF4,
 0x68, 0x9B, 0x01, 0x6A, 0x03, 0x6E, 0x40, 0xC3,
-0x10, 0xF0, 0x23, 0x6B, 0x6E, 0xF5, 0x74, 0x9B,
-0xC0, 0xC3, 0x10, 0xF0, 0x23, 0x6B, 0x6E, 0xF5,
+0x10, 0xF0, 0x23, 0x6B, 0xCE, 0xF4, 0x74, 0x9B,
+0xC0, 0xC3, 0x10, 0xF0, 0x23, 0x6B, 0xCE, 0xF4,
 0x6C, 0x9B, 0x40, 0xC3, 0x10, 0xF0, 0x23, 0x6B,
-0x4E, 0xF5, 0xDC, 0x9B, 0x60, 0x9E, 0xEC, 0xEB,
-0x60, 0xDE, 0x10, 0xF0, 0x23, 0x6B, 0x6E, 0xF5,
+0xAE, 0xF4, 0xDC, 0x9B, 0x60, 0x9E, 0xEC, 0xEB,
+0x60, 0xDE, 0x10, 0xF0, 0x23, 0x6B, 0xCE, 0xF4,
 0x70, 0x9B, 0x61, 0x6E, 0xCB, 0xEE, 0xC0, 0xC3,
-0x40, 0xC5, 0x10, 0xF0, 0x23, 0x6A, 0x6E, 0xF5,
+0x40, 0xC5, 0x10, 0xF0, 0x23, 0x6A, 0xCE, 0xF4,
 0x5C, 0x9A, 0x60, 0xA2, 0x01, 0x6A, 0x6C, 0xEA,
-0xF8, 0x2A, 0x10, 0xF0, 0x23, 0x6A, 0x6E, 0xF5,
+0xF8, 0x2A, 0x10, 0xF0, 0x23, 0x6A, 0xCE, 0xF4,
 0x50, 0x9A, 0x60, 0xA2, 0x60, 0xC4, 0x60, 0xA2,
 0x61, 0xC4, 0x40, 0xA2, 0x42, 0xC4, 0x01, 0x6A,
 0x20, 0xE8, 0x00, 0x65, 0xFC, 0x63, 0x07, 0x62,
@@ -39114,18 +38933,18 @@ u8 array_mp_8821c_fw_spic[] = {
 0x8E, 0xF5, 0x48, 0x98, 0x24, 0x67, 0x40, 0xEA,
 0x30, 0xF0, 0x20, 0x6A, 0x8E, 0xF5, 0x44, 0x9A,
 0x02, 0x6C, 0x40, 0xEA, 0x8E, 0xF5, 0x48, 0x98,
-0x40, 0xEA, 0x10, 0xF0, 0x23, 0x6A, 0x4E, 0xF5,
+0x40, 0xEA, 0x10, 0xF0, 0x23, 0x6A, 0xAE, 0xF4,
 0xAC, 0x9A, 0x00, 0x6A, 0x00, 0xF3, 0x01, 0x6C,
-0x40, 0xC5, 0x10, 0xF0, 0x23, 0x6A, 0x6E, 0xF5,
+0x40, 0xC5, 0x10, 0xF0, 0x23, 0x6A, 0xCE, 0xF4,
 0x64, 0x9A, 0x8B, 0xEC, 0x01, 0x6E, 0x40, 0x9B,
 0x22, 0x37, 0x8C, 0xEA, 0x40, 0xDB, 0x10, 0xF0,
-0x23, 0x6A, 0x6E, 0xF5, 0x48, 0x9A, 0x03, 0x6B,
+0x23, 0x6A, 0xCE, 0xF4, 0x48, 0x9A, 0x03, 0x6B,
 0xE2, 0x34, 0xC0, 0xC2, 0x10, 0xF0, 0x23, 0x6A,
-0x6E, 0xF5, 0x4C, 0x9A, 0x60, 0xC2, 0x10, 0xF0,
-0x23, 0x6A, 0x6E, 0xF5, 0x50, 0x9A, 0x52, 0x6B,
+0xCE, 0xF4, 0x4C, 0x9A, 0x60, 0xC2, 0x10, 0xF0,
+0x23, 0x6A, 0xCE, 0xF4, 0x50, 0x9A, 0x52, 0x6B,
 0x60, 0xC2, 0xFF, 0x6B, 0x6C, 0xEC, 0x6C, 0xEF,
 0x6C, 0xE9, 0x80, 0xC2, 0xE0, 0xC2, 0x20, 0xC2,
-0xC0, 0xC5, 0x10, 0xF0, 0x23, 0x6A, 0x6E, 0xF5,
+0xC0, 0xC5, 0x10, 0xF0, 0x23, 0x6A, 0xCE, 0xF4,
 0x5C, 0x9A, 0x60, 0xA2, 0x01, 0x6A, 0x6C, 0xEA,
 0xF8, 0x2A, 0x30, 0xF0, 0x20, 0x6A, 0x8E, 0xF5,
 0x40, 0x9A, 0x40, 0xEA, 0x01, 0x6B, 0x4C, 0xEB,
@@ -39140,18 +38959,18 @@ u8 array_mp_8821c_fw_spic[] = {
 0x24, 0x67, 0x40, 0xEA, 0x30, 0xF0, 0x20, 0x6A,
 0x8E, 0xF5, 0x44, 0x9A, 0x02, 0x6C, 0x40, 0xEA,
 0x8E, 0xF5, 0x48, 0x98, 0x40, 0xEA, 0x10, 0xF0,
-0x23, 0x6A, 0x4E, 0xF5, 0xAC, 0x9A, 0x00, 0x6A,
+0x23, 0x6A, 0xAE, 0xF4, 0xAC, 0x9A, 0x00, 0x6A,
 0x00, 0xF3, 0x01, 0x6C, 0x40, 0xC5, 0x10, 0xF0,
-0x23, 0x6A, 0x6E, 0xF5, 0x64, 0x9A, 0x8B, 0xEC,
+0x23, 0x6A, 0xCE, 0xF4, 0x64, 0x9A, 0x8B, 0xEC,
 0x01, 0x6E, 0x40, 0x9B, 0x22, 0x37, 0x8C, 0xEA,
-0x40, 0xDB, 0x10, 0xF0, 0x23, 0x6A, 0x6E, 0xF5,
+0x40, 0xDB, 0x10, 0xF0, 0x23, 0x6A, 0xCE, 0xF4,
 0x48, 0x9A, 0x03, 0x6B, 0xE2, 0x34, 0xC0, 0xC2,
-0x10, 0xF0, 0x23, 0x6A, 0x6E, 0xF5, 0x4C, 0x9A,
-0x60, 0xC2, 0x10, 0xF0, 0x23, 0x6A, 0x6E, 0xF5,
+0x10, 0xF0, 0x23, 0x6A, 0xCE, 0xF4, 0x4C, 0x9A,
+0x60, 0xC2, 0x10, 0xF0, 0x23, 0x6A, 0xCE, 0xF4,
 0x50, 0x9A, 0x20, 0x6B, 0x60, 0xC2, 0xFF, 0x6B,
 0x6C, 0xEC, 0x6C, 0xEF, 0x6C, 0xE9, 0x80, 0xC2,
 0xE0, 0xC2, 0x20, 0xC2, 0xC0, 0xC5, 0x10, 0xF0,
-0x23, 0x6A, 0x6E, 0xF5, 0x5C, 0x9A, 0x60, 0xA2,
+0x23, 0x6A, 0xCE, 0xF4, 0x5C, 0x9A, 0x60, 0xA2,
 0x01, 0x6A, 0x6C, 0xEA, 0xF8, 0x2A, 0x30, 0xF0,
 0x20, 0x6A, 0x8E, 0xF5, 0x40, 0x9A, 0x40, 0xEA,
 0x01, 0x6B, 0x4C, 0xEB, 0xF8, 0x2B, 0x30, 0xF0,
@@ -39162,30 +38981,30 @@ u8 array_mp_8821c_fw_spic[] = {
 0x06, 0x91, 0x05, 0x90, 0x01, 0x6A, 0x04, 0x63,
 0x00, 0xEF, 0x00, 0x65, 0xFF, 0x63, 0x01, 0xD1,
 0x00, 0xD0, 0x00, 0x6A, 0x04, 0xD6, 0x62, 0x67,
-0x6C, 0x10, 0x10, 0xF0, 0x23, 0x6E, 0x4E, 0xF5,
+0x6C, 0x10, 0x10, 0xF0, 0x23, 0x6E, 0xAE, 0xF4,
 0xCC, 0x9E, 0x00, 0x6F, 0x10, 0xF0, 0x23, 0x68,
-0xE0, 0xC6, 0x10, 0xF0, 0x23, 0x6E, 0x6E, 0xF5,
-0xE4, 0x9E, 0xEE, 0xF4, 0x08, 0x98, 0x0C, 0x5D,
+0xE0, 0xC6, 0x10, 0xF0, 0x23, 0x6E, 0xCE, 0xF4,
+0xE4, 0x9E, 0x4E, 0xF4, 0x08, 0x98, 0x0C, 0x5D,
 0xC0, 0x9F, 0x0C, 0xEE, 0x00, 0xF3, 0x00, 0x68,
 0x0D, 0xEE, 0xC0, 0xDF, 0x10, 0xF0, 0x23, 0x6E,
-0x6E, 0xF5, 0xC8, 0x9E, 0x01, 0x6F, 0x10, 0xF0,
+0xCE, 0xF4, 0xC8, 0x9E, 0x01, 0x6F, 0x10, 0xF0,
 0x23, 0x68, 0xE0, 0xC6, 0x10, 0xF0, 0x23, 0x6E,
-0x4E, 0xF5, 0xFC, 0x9E, 0x6E, 0xF5, 0x18, 0x98,
+0xAE, 0xF4, 0xFC, 0x9E, 0xCE, 0xF4, 0x18, 0x98,
 0xC0, 0x9F, 0x0C, 0xEE, 0xC0, 0xDF, 0x08, 0x61,
-0x10, 0xF0, 0x23, 0x6E, 0x6E, 0xF5, 0xD4, 0x9E,
+0x10, 0xF0, 0x23, 0x6E, 0xCE, 0xF4, 0xD4, 0x9E,
 0x0B, 0x6F, 0x0B, 0x4A, 0xE0, 0xC6, 0x08, 0x10,
-0x10, 0xF0, 0x23, 0x6F, 0x6E, 0xF5, 0xF4, 0x9F,
+0x10, 0xF0, 0x23, 0x6F, 0xCE, 0xF4, 0xF4, 0x9F,
 0xFF, 0x6E, 0xAC, 0xEE, 0xC0, 0xC7, 0xA9, 0xE2,
-0x10, 0xF0, 0x23, 0x6E, 0x6E, 0xF5, 0xCC, 0x9E,
+0x10, 0xF0, 0x23, 0x6E, 0xCE, 0xF4, 0xCC, 0x9E,
 0x03, 0x6F, 0x82, 0x31, 0xE0, 0xC6, 0x10, 0xF0,
-0x23, 0x6E, 0x6E, 0xF5, 0xD0, 0x9E, 0x22, 0x30,
+0x23, 0x6E, 0xCE, 0xF4, 0xD0, 0x9E, 0x22, 0x30,
 0xE0, 0xC6, 0xFF, 0x6F, 0xEC, 0xE8, 0xEC, 0xE9,
 0x8C, 0xEF, 0x00, 0xC6, 0x20, 0xC6, 0xE0, 0xC6,
-0x10, 0xF0, 0x23, 0x6E, 0x4E, 0xF5, 0xCC, 0x9E,
+0x10, 0xF0, 0x23, 0x6E, 0xAE, 0xF4, 0xCC, 0x9E,
 0x01, 0x6F, 0xE0, 0xC6, 0x10, 0xF0, 0x23, 0x6E,
-0x6E, 0xF5, 0xDC, 0x9E, 0xE0, 0xA6, 0x01, 0x6E,
+0xCE, 0xF4, 0xDC, 0x9E, 0xE0, 0xA6, 0x01, 0x6E,
 0xEC, 0xEE, 0xF8, 0x2E, 0x04, 0x97, 0x79, 0xE7,
-0x08, 0x10, 0x10, 0xF0, 0x23, 0x6F, 0x6E, 0xF5,
+0x08, 0x10, 0x10, 0xF0, 0x23, 0x6F, 0xCE, 0xF4,
 0xF0, 0x9F, 0x01, 0x4B, 0xE0, 0xA7, 0xE0, 0xC6,
 0x01, 0x4E, 0x43, 0xEB, 0xF6, 0x61, 0x0C, 0x5D,
 0x02, 0x60, 0x00, 0x6D, 0x02, 0x10, 0x0B, 0x4C,
@@ -39198,25 +39017,25 @@ u8 array_mp_8821c_fw_spic[] = {
 0x02, 0x6C, 0x00, 0x69, 0x40, 0xEA, 0x04, 0xD1,
 0x66, 0x10, 0x30, 0xF0, 0x20, 0x6A, 0x8E, 0xF5,
 0x48, 0x9A, 0x40, 0xEA, 0x10, 0xF0, 0x23, 0x6A,
-0x4E, 0xF5, 0x4C, 0x9A, 0x00, 0x6B, 0x00, 0xF3,
+0xAE, 0xF4, 0x4C, 0x9A, 0x00, 0x6B, 0x00, 0xF3,
 0x01, 0x6C, 0x60, 0xC2, 0x10, 0xF0, 0x23, 0x6A,
-0x6E, 0xF5, 0x64, 0x9A, 0x8B, 0xEC, 0x0C, 0x58,
+0xCE, 0xF4, 0x64, 0x9A, 0x8B, 0xEC, 0x0C, 0x58,
 0x40, 0x9B, 0x8C, 0xEA, 0x40, 0xDB, 0x10, 0xF0,
-0x23, 0x6A, 0x6E, 0xF5, 0x48, 0x9A, 0x01, 0x6B,
-0x60, 0xC2, 0x10, 0xF0, 0x23, 0x6A, 0x6E, 0xF5,
+0x23, 0x6A, 0xCE, 0xF4, 0x48, 0x9A, 0x01, 0x6B,
+0x60, 0xC2, 0x10, 0xF0, 0x23, 0x6A, 0xCE, 0xF4,
 0x4C, 0x9A, 0x03, 0x6B, 0x60, 0xC2, 0x10, 0xF0,
-0x23, 0x6A, 0x6E, 0xF5, 0x50, 0x9A, 0x02, 0x6B,
+0x23, 0x6A, 0xCE, 0xF4, 0x50, 0x9A, 0x02, 0x6B,
 0x60, 0xC2, 0x0A, 0x93, 0x62, 0x35, 0xA2, 0x34,
 0xFF, 0x6B, 0x6C, 0xEC, 0x6C, 0xED, 0x80, 0xC2,
 0xA0, 0xC2, 0x0A, 0x94, 0x8C, 0xEB, 0x60, 0xC2,
 0x05, 0x61, 0x0B, 0x49, 0x0C, 0x93, 0x04, 0x94,
 0x89, 0xE3, 0x0C, 0x10, 0x05, 0xE1, 0xFA, 0x17,
-0x10, 0xF0, 0x23, 0x6B, 0x80, 0xA2, 0x6E, 0xF5,
+0x10, 0xF0, 0x23, 0x6B, 0x80, 0xA2, 0xCE, 0xF4,
 0x70, 0x9B, 0x01, 0x4A, 0x80, 0xC3, 0x04, 0x93,
 0x01, 0x4B, 0x04, 0xD3, 0x04, 0x94, 0x23, 0xEC,
-0xF3, 0x61, 0x10, 0xF0, 0x23, 0x6A, 0x4E, 0xF5,
+0xF3, 0x61, 0x10, 0xF0, 0x23, 0x6A, 0xAE, 0xF4,
 0x4C, 0x9A, 0x01, 0x6B, 0x60, 0xC2, 0x10, 0xF0,
-0x23, 0x6A, 0x6E, 0xF5, 0x5C, 0x9A, 0x60, 0xA2,
+0x23, 0x6A, 0xCE, 0xF4, 0x5C, 0x9A, 0x60, 0xA2,
 0x01, 0x6A, 0x6C, 0xEA, 0xF8, 0x2A, 0x30, 0xF0,
 0x20, 0x6A, 0x8E, 0xF5, 0x40, 0x9A, 0x40, 0xEA,
 0x01, 0x6B, 0x4C, 0xEB, 0xF8, 0x2B, 0x0C, 0x58,
@@ -39233,17 +39052,17 @@ u8 array_mp_8821c_fw_spic[] = {
 0x40, 0xEA, 0x30, 0xF0, 0x20, 0x6A, 0x8E, 0xF5,
 0x44, 0x9A, 0x02, 0x6C, 0x40, 0xEA, 0x8E, 0xF5,
 0x48, 0x98, 0x40, 0xEA, 0x10, 0xF0, 0x23, 0x6A,
-0x4E, 0xF5, 0x6C, 0x9A, 0x00, 0x6A, 0x00, 0xF3,
+0xAE, 0xF4, 0x6C, 0x9A, 0x00, 0x6A, 0x00, 0xF3,
 0x01, 0x6D, 0x40, 0xC3, 0x10, 0xF0, 0x23, 0x6A,
-0x6E, 0xF5, 0x84, 0x9A, 0xAB, 0xED, 0x40, 0x9C,
+0xCE, 0xF4, 0x84, 0x9A, 0xAB, 0xED, 0x40, 0x9C,
 0xAC, 0xEA, 0x40, 0xDC, 0x10, 0xF0, 0x23, 0x6C,
-0x6E, 0xF5, 0x88, 0x9C, 0x01, 0x6A, 0x3E, 0x6D,
-0x40, 0xC4, 0x10, 0xF0, 0x23, 0x6C, 0x6E, 0xF5,
+0xCE, 0xF4, 0x88, 0x9C, 0x01, 0x6A, 0x3E, 0x6D,
+0x40, 0xC4, 0x10, 0xF0, 0x23, 0x6C, 0xCE, 0xF4,
 0x8C, 0x9C, 0xAB, 0xED, 0x40, 0xC4, 0x10, 0xF0,
-0x23, 0x6C, 0x6E, 0xF5, 0x90, 0x9C, 0xA0, 0xC4,
+0x23, 0x6C, 0xCE, 0xF4, 0x90, 0x9C, 0xA0, 0xC4,
 0x20, 0xC4, 0x40, 0xC3, 0x10, 0xF0, 0x23, 0x6A,
-0x6E, 0xF5, 0x5C, 0x9A, 0x60, 0xA2, 0x01, 0x6A,
-0x6C, 0xEA, 0xF8, 0x2A, 0x00, 0x18, 0x5D, 0xD9,
+0xCE, 0xF4, 0x5C, 0x9A, 0x60, 0xA2, 0x01, 0x6A,
+0x6C, 0xEA, 0xF8, 0x2A, 0x00, 0x18, 0x35, 0xD9,
 0x30, 0xF0, 0x20, 0x6A, 0x8E, 0xF5, 0x40, 0x9A,
 0x40, 0xEA, 0x01, 0x6B, 0x4C, 0xEB, 0xF8, 0x2B,
 0x30, 0xF0, 0x20, 0x6A, 0x8E, 0xF5, 0x48, 0x9A,
@@ -39258,18 +39077,18 @@ u8 array_mp_8821c_fw_spic[] = {
 0xFF, 0x69, 0x8C, 0xE9, 0x40, 0xEA, 0x30, 0xF0,
 0x20, 0x6A, 0x8E, 0xF5, 0x44, 0x9A, 0x02, 0x6C,
 0x40, 0xEA, 0x8E, 0xF5, 0x48, 0x98, 0x40, 0xEA,
-0x10, 0xF0, 0x23, 0x6A, 0x4E, 0xF5, 0x6C, 0x9A,
+0x10, 0xF0, 0x23, 0x6A, 0xAE, 0xF4, 0x6C, 0x9A,
 0x00, 0x6A, 0x00, 0xF3, 0x01, 0x6D, 0x40, 0xC3,
-0x10, 0xF0, 0x23, 0x6A, 0x6E, 0xF5, 0x84, 0x9A,
+0x10, 0xF0, 0x23, 0x6A, 0xCE, 0xF4, 0x84, 0x9A,
 0xAB, 0xED, 0x40, 0x9C, 0xAC, 0xEA, 0x40, 0xDC,
-0x10, 0xF0, 0x23, 0x6C, 0x6E, 0xF5, 0x88, 0x9C,
+0x10, 0xF0, 0x23, 0x6C, 0xCE, 0xF4, 0x88, 0x9C,
 0x01, 0x6A, 0x3B, 0x6D, 0x40, 0xC4, 0x10, 0xF0,
-0x23, 0x6C, 0x6E, 0xF5, 0x8C, 0x9C, 0xAB, 0xED,
-0x40, 0xC4, 0x10, 0xF0, 0x23, 0x6C, 0x6E, 0xF5,
+0x23, 0x6C, 0xCE, 0xF4, 0x8C, 0x9C, 0xAB, 0xED,
+0x40, 0xC4, 0x10, 0xF0, 0x23, 0x6C, 0xCE, 0xF4,
 0x90, 0x9C, 0xA0, 0xC4, 0x20, 0xC4, 0x40, 0xC3,
-0x10, 0xF0, 0x23, 0x6A, 0x6E, 0xF5, 0x5C, 0x9A,
+0x10, 0xF0, 0x23, 0x6A, 0xCE, 0xF4, 0x5C, 0x9A,
 0x60, 0xA2, 0x01, 0x6A, 0x6C, 0xEA, 0xF8, 0x2A,
-0x00, 0x18, 0x5D, 0xD9, 0x30, 0xF0, 0x20, 0x6A,
+0x00, 0x18, 0x35, 0xD9, 0x30, 0xF0, 0x20, 0x6A,
 0x8E, 0xF5, 0x40, 0x9A, 0x40, 0xEA, 0x01, 0x6B,
 0x4C, 0xEB, 0xF8, 0x2B, 0x30, 0xF0, 0x20, 0x6A,
 0x8E, 0xF5, 0x48, 0x9A, 0x40, 0xEA, 0x30, 0xF0,
@@ -39287,24 +39106,24 @@ u8 array_mp_8821c_fw_spic[] = {
 0xF8, 0x60, 0x10, 0xF0, 0x30, 0x6B, 0x00, 0xF0,
 0x00, 0x4B, 0xC1, 0xF7, 0x4E, 0xA3, 0x04, 0xD3,
 0x2E, 0xEA, 0x06, 0x22, 0x91, 0x67, 0x00, 0x18,
-0x7D, 0xDA, 0x04, 0x92, 0xC1, 0xF7, 0x2E, 0xC2,
+0x55, 0xDA, 0x04, 0x92, 0xC1, 0xF7, 0x2E, 0xC2,
 0x10, 0xF0, 0x30, 0x6A, 0xC1, 0xF7, 0x5D, 0xA2,
 0x01, 0x72, 0x08, 0x61, 0x10, 0xF0, 0x23, 0x6A,
-0xCE, 0xF3, 0x58, 0x9A, 0x00, 0xF6, 0x02, 0x31,
+0x2E, 0xF3, 0x58, 0x9A, 0x00, 0xF6, 0x02, 0x31,
 0x4C, 0xE8, 0x08, 0x10, 0x10, 0xF0, 0x23, 0x6A,
-0xCE, 0xF3, 0x58, 0x9A, 0x00, 0x69, 0x03, 0xEA,
+0x2E, 0xF3, 0x58, 0x9A, 0x00, 0x69, 0x03, 0xEA,
 0x51, 0x67, 0x33, 0x61, 0x10, 0xF0, 0x30, 0x6B,
 0x00, 0xF0, 0x00, 0x4B, 0xC1, 0xF7, 0x4F, 0xA3,
 0x04, 0xD3, 0x2E, 0xEA, 0x06, 0x22, 0x91, 0x67,
-0x00, 0x18, 0xB0, 0xDA, 0x04, 0x92, 0xC1, 0xF7,
+0x00, 0x18, 0x88, 0xDA, 0x04, 0x92, 0xC1, 0xF7,
 0x2F, 0xC2, 0x05, 0x93, 0x06, 0x2B, 0x0B, 0x95,
-0x0C, 0x96, 0x90, 0x67, 0x00, 0x18, 0xF7, 0xD9,
+0x0C, 0x96, 0x90, 0x67, 0x00, 0x18, 0xCF, 0xD9,
 0x1C, 0x10, 0x05, 0x92, 0x01, 0x72, 0x06, 0x61,
 0x0B, 0x95, 0x0C, 0x96, 0x90, 0x67, 0x00, 0x18,
-0x34, 0xDA, 0x13, 0x10, 0x05, 0x93, 0x02, 0x73,
-0x04, 0x61, 0x90, 0x67, 0x00, 0x18, 0xC4, 0xD9,
+0x0C, 0xDA, 0x13, 0x10, 0x05, 0x93, 0x02, 0x73,
+0x04, 0x61, 0x90, 0x67, 0x00, 0x18, 0x9C, 0xD9,
 0x0C, 0x10, 0x05, 0x92, 0x03, 0x72, 0x04, 0x61,
-0x90, 0x67, 0x00, 0x18, 0x91, 0xD9, 0x05, 0x10,
+0x90, 0x67, 0x00, 0x18, 0x69, 0xD9, 0x05, 0x10,
 0x05, 0x93, 0x00, 0x6A, 0x04, 0x73, 0x01, 0x60,
 0x01, 0x6A, 0x09, 0x97, 0x08, 0x91, 0x07, 0x90,
 0x05, 0x63, 0x00, 0xEF, 0xDB, 0xEC, 0x01, 0x2E,
@@ -39316,33 +39135,33 @@ u8 array_mp_8821c_fw_spic[] = {
 0x04, 0xD2, 0xC1, 0xF7, 0x58, 0x9B, 0x0A, 0xD4,
 0x91, 0xE5, 0x83, 0xEA, 0x0B, 0xD5, 0x0C, 0xD6,
 0x00, 0x6A, 0x45, 0x61, 0x0A, 0x94, 0xC1, 0xF7,
-0xD0, 0x9B, 0x00, 0x18, 0x1D, 0xDB, 0x22, 0x67,
+0xD0, 0x9B, 0x00, 0x18, 0xF5, 0xDA, 0x22, 0x67,
 0x1A, 0x22, 0xA2, 0x67, 0x10, 0xF0, 0x23, 0x6A,
-0x0A, 0x94, 0x2E, 0xF2, 0xD8, 0x9A, 0x00, 0x18,
-0x1D, 0xDB, 0x02, 0x67, 0x07, 0x22, 0x0A, 0x94,
+0x0A, 0x94, 0x8E, 0xF1, 0xD8, 0x9A, 0x00, 0x18,
+0xF5, 0xDA, 0x02, 0x67, 0x07, 0x22, 0x0A, 0x94,
 0x0C, 0x96, 0x04, 0x97, 0xA2, 0x67, 0x00, 0x18,
-0xE0, 0xDA, 0x2C, 0x22, 0x0A, 0x93, 0x0C, 0x92,
+0xB8, 0xDA, 0x2C, 0x22, 0x0A, 0x93, 0x0C, 0x92,
 0x04, 0x97, 0x71, 0xE0, 0x17, 0xE1, 0x19, 0xE2,
-0x00, 0x18, 0xE0, 0xDA, 0x23, 0x22, 0x0B, 0x92,
+0x00, 0x18, 0xB8, 0xDA, 0x23, 0x22, 0x0B, 0x92,
 0x0A, 0x93, 0x37, 0xE2, 0x10, 0xF0, 0x23, 0x6A,
-0x2E, 0xF2, 0xD8, 0x9A, 0x6D, 0xE1, 0x83, 0x67,
-0x05, 0xD3, 0x00, 0x18, 0x1D, 0xDB, 0x02, 0x67,
+0x8E, 0xF1, 0xD8, 0x9A, 0x6D, 0xE1, 0x83, 0x67,
+0x05, 0xD3, 0x00, 0x18, 0xF5, 0xDA, 0x02, 0x67,
 0x08, 0x22, 0x0C, 0x93, 0x05, 0x94, 0x04, 0x97,
-0xA2, 0x67, 0x39, 0xE3, 0x00, 0x18, 0xE0, 0xDA,
+0xA2, 0x67, 0x39, 0xE3, 0x00, 0x18, 0xB8, 0xDA,
 0x0D, 0x22, 0x0A, 0x92, 0x0B, 0x93, 0x04, 0x97,
 0x51, 0xE1, 0x0C, 0x92, 0x37, 0xE3, 0x39, 0xE0,
 0x11, 0xE4, 0x17, 0xE5, 0xD9, 0xE2, 0x00, 0x18,
-0xE0, 0xDA, 0x01, 0x10, 0x00, 0x6A, 0x09, 0x97,
+0xB8, 0xDA, 0x01, 0x10, 0x00, 0x6A, 0x09, 0x97,
 0x08, 0x91, 0x07, 0x90, 0x05, 0x63, 0x00, 0xEF,
 0xFD, 0x63, 0x05, 0x62, 0x00, 0x6D, 0xC5, 0x67,
-0x03, 0x6F, 0x00, 0x18, 0x23, 0xDB, 0x05, 0x97,
+0x03, 0x6F, 0x00, 0x18, 0xFB, 0xDA, 0x05, 0x97,
 0x03, 0x63, 0x00, 0xEF, 0xFD, 0x63, 0x05, 0x62,
 0x00, 0x6D, 0xC5, 0x67, 0x02, 0x6F, 0x00, 0x18,
-0x23, 0xDB, 0x05, 0x97, 0x03, 0x63, 0x00, 0xEF,
+0xFB, 0xDA, 0x05, 0x97, 0x03, 0x63, 0x00, 0xEF,
 0xFD, 0x63, 0x05, 0x62, 0x00, 0x6F, 0x00, 0x18,
-0x23, 0xDB, 0x05, 0x97, 0x03, 0x63, 0x00, 0xEF,
+0xFB, 0xDA, 0x05, 0x97, 0x03, 0x63, 0x00, 0xEF,
 0xFD, 0x63, 0x05, 0x62, 0x01, 0x6F, 0x00, 0x18,
-0x23, 0xDB, 0x05, 0x97, 0x03, 0x63, 0x00, 0xEF,
+0xFB, 0xDA, 0x05, 0x97, 0x03, 0x63, 0x00, 0xEF,
 0xDB, 0x63, 0x49, 0x62, 0x48, 0xD1, 0x47, 0xD0,
 0x52, 0xA4, 0x33, 0xA4, 0x6A, 0xA4, 0x40, 0x32,
 0x40, 0x32, 0x00, 0xF6, 0x20, 0x31, 0x45, 0xE1,
@@ -39359,7 +39178,7 @@ u8 array_mp_8821c_fw_spic[] = {
 0x8F, 0x10, 0x30, 0xF0, 0x20, 0x6A, 0x8E, 0xF5,
 0x58, 0x9A, 0x04, 0x10, 0x30, 0xF0, 0x20, 0x6A,
 0x8E, 0xF5, 0x5C, 0x9A, 0x91, 0x67, 0x40, 0xEA,
-0x83, 0x10, 0x10, 0xF0, 0x23, 0x6A, 0x6E, 0xF4,
+0x83, 0x10, 0x10, 0xF0, 0x23, 0x6A, 0xCE, 0xF3,
 0x44, 0x9A, 0x80, 0xAA, 0xFF, 0xF7, 0x1F, 0x6A,
 0x8C, 0xEA, 0x49, 0xE3, 0x5C, 0x32, 0x30, 0x4A,
 0x45, 0xD2, 0x30, 0xF0, 0x20, 0x6A, 0x8E, 0xF5,
@@ -39371,7 +39190,7 @@ u8 array_mp_8821c_fw_spic[] = {
 0x01, 0x4B, 0x4F, 0xE3, 0x44, 0xD3, 0x08, 0x10,
 0x00, 0xF1, 0x00, 0x58, 0x04, 0x61, 0xFF, 0x6A,
 0x01, 0x4A, 0x44, 0xD2, 0x01, 0x10, 0x44, 0xD0,
-0x10, 0xF0, 0x23, 0x6A, 0xAE, 0xF3, 0x64, 0x9A,
+0x10, 0xF0, 0x23, 0x6A, 0x0E, 0xF3, 0x64, 0x9A,
 0x45, 0x94, 0x00, 0x6A, 0x6D, 0xE4, 0xA0, 0xA3,
 0x04, 0x06, 0x51, 0xE6, 0xA0, 0xC4, 0x44, 0x95,
 0x01, 0x4A, 0x01, 0x4B, 0xA3, 0xEA, 0xF7, 0x61,
@@ -39379,7 +39198,7 @@ u8 array_mp_8821c_fw_spic[] = {
 0x91, 0x67, 0x40, 0xEA, 0x44, 0x92, 0x45, 0x93,
 0x43, 0xE0, 0x4D, 0xE3, 0x45, 0xD3, 0x45, 0xE1,
 0xCC, 0x28, 0x36, 0x10, 0x10, 0xF0, 0x23, 0x6A,
-0x6E, 0xF4, 0x44, 0x9A, 0x02, 0xF0, 0x01, 0x58,
+0xCE, 0xF3, 0x44, 0x9A, 0x02, 0xF0, 0x01, 0x58,
 0x80, 0xAA, 0xFF, 0xF7, 0x1F, 0x6A, 0x8C, 0xEA,
 0x4D, 0xE3, 0x7C, 0x33, 0x45, 0xD3, 0x27, 0x61,
 0x02, 0xF0, 0x00, 0x68, 0x24, 0x10, 0x00, 0xF1,
@@ -39387,12 +39206,12 @@ u8 array_mp_8821c_fw_spic[] = {
 0x01, 0x4C, 0x44, 0xD4, 0x30, 0xF0, 0x20, 0x6A,
 0x44, 0x95, 0xAE, 0xF5, 0x44, 0x9A, 0x91, 0x67,
 0x04, 0x06, 0x40, 0xEA, 0x10, 0xF0, 0x23, 0x6A,
-0xAE, 0xF3, 0x64, 0x9A, 0x45, 0x95, 0x00, 0x6A,
+0x0E, 0xF3, 0x64, 0x9A, 0x45, 0x95, 0x00, 0x6A,
 0x6D, 0xE5, 0xBD, 0x67, 0x51, 0xE5, 0x90, 0xA4,
 0x01, 0x4A, 0x80, 0xC3, 0x44, 0x94, 0x01, 0x4B,
 0x83, 0xEA, 0xF7, 0x61, 0x45, 0x95, 0x83, 0xE0,
 0x85, 0xE1, 0x95, 0xE5, 0x45, 0xD5, 0xDB, 0x28,
-0x10, 0xF0, 0x23, 0x6A, 0xEE, 0xF4, 0x74, 0x9A,
+0x10, 0xF0, 0x23, 0x6A, 0x4E, 0xF4, 0x74, 0x9A,
 0x02, 0x6C, 0x8B, 0xEC, 0x40, 0x9B, 0x8C, 0xEA,
 0x40, 0xDB, 0x49, 0x97, 0x48, 0x91, 0x47, 0x90,
 0x01, 0x6A, 0x25, 0x63, 0x00, 0xEF, 0x00, 0x65,
@@ -39424,10 +39243,10 @@ u8 array_mp_8821c_fw_spic[] = {
 0x07, 0x90, 0x05, 0x63, 0x00, 0xEF, 0x00, 0x65,
 0xFA, 0x63, 0x0B, 0x62, 0x0A, 0xD1, 0x09, 0xD0,
 0xFF, 0xF7, 0x1F, 0x6B, 0xAC, 0xEB, 0x06, 0xD3,
-0x10, 0xF0, 0x23, 0x6B, 0x6E, 0xF4, 0x64, 0x9B,
+0x10, 0xF0, 0x23, 0x6B, 0xCE, 0xF3, 0x64, 0x9B,
 0xFF, 0x6A, 0x8C, 0xEA, 0x80, 0xAB, 0xE1, 0xF7,
 0x1F, 0x6B, 0x00, 0x68, 0x8C, 0xEB, 0x69, 0xE2,
-0x10, 0xF0, 0x23, 0x6B, 0xAE, 0xF5, 0x84, 0x9B,
+0x10, 0xF0, 0x23, 0x6B, 0x0E, 0xF5, 0x84, 0x9B,
 0x5C, 0x32, 0x91, 0xE2, 0x04, 0xD4, 0x22, 0x10,
 0x04, 0x92, 0x40, 0x9A, 0x05, 0xD2, 0x0D, 0x28,
 0x30, 0xF0, 0x20, 0x69, 0xCE, 0xF4, 0x50, 0x99,
@@ -39460,30 +39279,30 @@ u8 array_mp_8821c_fw_spic[] = {
 0xE3, 0x28, 0x10, 0x80, 0xF3, 0x28, 0x10, 0x80,
 0x09, 0x29, 0x10, 0x80, 0x1F, 0x29, 0x10, 0x80,
 0x1F, 0x29, 0x10, 0x80, 0x3B, 0x29, 0x10, 0x80,
-0x1B, 0x3A, 0x03, 0x80, 0x31, 0x3A, 0x03, 0x80,
-0x65, 0x3A, 0x03, 0x80, 0x65, 0x3A, 0x03, 0x80,
-0x65, 0x3A, 0x03, 0x80, 0x65, 0x3A, 0x03, 0x80,
-0x3D, 0x3A, 0x03, 0x80, 0x47, 0x3A, 0x03, 0x80,
-0x51, 0x3A, 0x03, 0x80, 0x5B, 0x3A, 0x03, 0x80,
-0x23, 0x3A, 0x03, 0x80, 0x11, 0x3A, 0x03, 0x80,
-0xA1, 0x40, 0x03, 0x80, 0xC3, 0x40, 0x03, 0x80,
-0xE5, 0x40, 0x03, 0x80, 0x07, 0x41, 0x03, 0x80,
-0x2B, 0x41, 0x03, 0x80, 0x65, 0x41, 0x03, 0x80,
-0x89, 0x41, 0x03, 0x80, 0xAD, 0x41, 0x03, 0x80,
-0xD1, 0x41, 0x03, 0x80, 0xF7, 0x41, 0x03, 0x80,
-0x29, 0x47, 0x03, 0x80, 0x29, 0x47, 0x03, 0x80,
-0x29, 0x47, 0x03, 0x80, 0x43, 0x47, 0x03, 0x80,
-0x29, 0x47, 0x03, 0x80, 0x29, 0x47, 0x03, 0x80,
-0x29, 0x47, 0x03, 0x80, 0x25, 0x47, 0x03, 0x80,
-0x25, 0x47, 0x03, 0x80, 0x25, 0x47, 0x03, 0x80,
-0x25, 0x47, 0x03, 0x80, 0x25, 0x47, 0x03, 0x80,
-0xA1, 0x47, 0x03, 0x80, 0xAB, 0x47, 0x03, 0x80,
-0x47, 0x53, 0x03, 0x80, 0x57, 0x53, 0x03, 0x80,
-0x61, 0x53, 0x03, 0x80, 0x6B, 0x53, 0x03, 0x80,
-0x7D, 0x53, 0x03, 0x80, 0xA9, 0x5F, 0x03, 0x80,
-0xDB, 0x5F, 0x03, 0x80, 0xBD, 0x5F, 0x03, 0x80,
-0xE5, 0x5F, 0x03, 0x80, 0xC7, 0x5F, 0x03, 0x80,
-0xF1, 0x5F, 0x03, 0x80, 0xD1, 0x5F, 0x03, 0x80,
+0x7B, 0x39, 0x03, 0x80, 0x91, 0x39, 0x03, 0x80,
+0xC5, 0x39, 0x03, 0x80, 0xC5, 0x39, 0x03, 0x80,
+0xC5, 0x39, 0x03, 0x80, 0xC5, 0x39, 0x03, 0x80,
+0x9D, 0x39, 0x03, 0x80, 0xA7, 0x39, 0x03, 0x80,
+0xB1, 0x39, 0x03, 0x80, 0xBB, 0x39, 0x03, 0x80,
+0x83, 0x39, 0x03, 0x80, 0x71, 0x39, 0x03, 0x80,
+0x01, 0x40, 0x03, 0x80, 0x23, 0x40, 0x03, 0x80,
+0x45, 0x40, 0x03, 0x80, 0x67, 0x40, 0x03, 0x80,
+0x8B, 0x40, 0x03, 0x80, 0xC5, 0x40, 0x03, 0x80,
+0xE9, 0x40, 0x03, 0x80, 0x0D, 0x41, 0x03, 0x80,
+0x31, 0x41, 0x03, 0x80, 0x57, 0x41, 0x03, 0x80,
+0x89, 0x46, 0x03, 0x80, 0x89, 0x46, 0x03, 0x80,
+0x89, 0x46, 0x03, 0x80, 0xA3, 0x46, 0x03, 0x80,
+0x89, 0x46, 0x03, 0x80, 0x89, 0x46, 0x03, 0x80,
+0x89, 0x46, 0x03, 0x80, 0x85, 0x46, 0x03, 0x80,
+0x85, 0x46, 0x03, 0x80, 0x85, 0x46, 0x03, 0x80,
+0x85, 0x46, 0x03, 0x80, 0x85, 0x46, 0x03, 0x80,
+0x01, 0x47, 0x03, 0x80, 0x0B, 0x47, 0x03, 0x80,
+0xA7, 0x52, 0x03, 0x80, 0xB7, 0x52, 0x03, 0x80,
+0xC1, 0x52, 0x03, 0x80, 0xCB, 0x52, 0x03, 0x80,
+0xDD, 0x52, 0x03, 0x80, 0x09, 0x5F, 0x03, 0x80,
+0x3B, 0x5F, 0x03, 0x80, 0x1D, 0x5F, 0x03, 0x80,
+0x45, 0x5F, 0x03, 0x80, 0x27, 0x5F, 0x03, 0x80,
+0x51, 0x5F, 0x03, 0x80, 0x31, 0x5F, 0x03, 0x80,
 0xFC, 0x10, 0x60, 0xB8, 0xFA, 0xFA, 0xFA, 0xFA,
 0x8C, 0x04, 0x64, 0xB8, 0x90, 0x04, 0x64, 0xB8,
 0x94, 0x04, 0x64, 0xB8, 0x98, 0x04, 0x64, 0xB8,
@@ -39602,7 +39421,7 @@ u8 array_mp_8821c_fw_spic[] = {
 0xEB, 0x00, 0x60, 0xB8, 0xE5, 0x00, 0x60, 0xB8,
 0x44, 0x00, 0x02, 0x00, 0xA0, 0x07, 0x64, 0xB8,
 0xF4, 0x00, 0x60, 0xB8, 0x30, 0x00, 0x78, 0xB8,
-0x51, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x8E, 0x6A, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
@@ -40290,13 +40109,13 @@ u8 array_mp_8821c_fw_spic[] = {
 0xFB, 0x61, 0x42, 0xF4, 0x10, 0x6A, 0x1F, 0xF7,
 0x00, 0x6B, 0x4C, 0xEB, 0x02, 0xF0, 0x00, 0x73,
 0x01, 0x60, 0x05, 0x2B, 0x10, 0xF0, 0x23, 0x6B,
-0x2E, 0xF2, 0x68, 0x9B, 0x04, 0x10, 0x10, 0xF0,
-0x23, 0x6B, 0x2E, 0xF2, 0x6C, 0x9B, 0x6D, 0xE2,
+0x8E, 0xF1, 0x68, 0x9B, 0x04, 0x10, 0x10, 0xF0,
+0x23, 0x6B, 0x8E, 0xF1, 0x6C, 0x9B, 0x6D, 0xE2,
 0x04, 0x4A, 0x00, 0x6C, 0x62, 0xF4, 0x00, 0x72,
 0x80, 0xDB, 0xE9, 0x61, 0x20, 0xE8, 0x00, 0x65,
 0xFD, 0x63, 0x05, 0x62, 0x10, 0xF0, 0x23, 0x6A,
-0xAE, 0xF2, 0x50, 0x9A, 0x03, 0x6D, 0xFF, 0x6B,
-0x80, 0x9A, 0x10, 0xF0, 0x23, 0x6A, 0xAE, 0xF2,
+0x0E, 0xF2, 0x50, 0x9A, 0x03, 0x6D, 0xFF, 0x6B,
+0x80, 0x9A, 0x10, 0xF0, 0x23, 0x6A, 0x0E, 0xF2,
 0x54, 0x9A, 0x00, 0xF5, 0x82, 0x34, 0xAC, 0xEC,
 0x40, 0x9A, 0x01, 0x74, 0x42, 0x32, 0x52, 0x32,
 0xAC, 0xEA, 0x06, 0x60, 0x0A, 0x2C, 0x02, 0x5A,
@@ -40306,10 +40125,10 @@ u8 array_mp_8821c_fw_spic[] = {
 0x14, 0x6C, 0x84, 0xEA, 0x6C, 0xEC, 0x80, 0x18,
 0x3C, 0x06, 0x30, 0xF0, 0x20, 0x6A, 0xAF, 0xF4,
 0x18, 0x4A, 0x00, 0x6B, 0xA0, 0xF1, 0x6B, 0xC2,
-0x10, 0xF0, 0x23, 0x6B, 0x6E, 0xF2, 0x68, 0x9B,
+0x10, 0xF0, 0x23, 0x6B, 0xCE, 0xF1, 0x68, 0x9B,
 0x00, 0x6A, 0x40, 0xDB, 0x10, 0xF0, 0x23, 0x6B,
-0xEE, 0xF1, 0x78, 0x9B, 0x40, 0xDB, 0x10, 0xF0,
-0x23, 0x6B, 0x6E, 0xF2, 0x64, 0x9B, 0x40, 0xC3,
+0x4E, 0xF1, 0x78, 0x9B, 0x40, 0xDB, 0x10, 0xF0,
+0x23, 0x6B, 0xCE, 0xF1, 0x64, 0x9B, 0x40, 0xC3,
 0x05, 0x97, 0x03, 0x63, 0x00, 0xEF, 0x00, 0x65,
 0xFB, 0x63, 0x09, 0x62, 0x08, 0xD1, 0x07, 0xD0,
 0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A,
@@ -40330,31 +40149,31 @@ u8 array_mp_8821c_fw_spic[] = {
 0x80, 0x18, 0xB1, 0x05, 0x80, 0x18, 0xBC, 0x07,
 0x30, 0xF0, 0x20, 0x6A, 0xCE, 0xF5, 0x44, 0x9A,
 0x40, 0xEA, 0x80, 0x18, 0x60, 0x06, 0x00, 0x18,
-0x20, 0xD5, 0x00, 0x18, 0x43, 0xD5, 0x05, 0x97,
+0xF8, 0xD4, 0x00, 0x18, 0x1B, 0xD5, 0x05, 0x97,
 0x03, 0x63, 0x00, 0xEF, 0x30, 0xF0, 0x20, 0x6A,
 0x00, 0x6B, 0xAF, 0xF4, 0x18, 0x4A, 0xA0, 0xF0,
 0x60, 0xC2, 0xA0, 0xF0, 0x61, 0xC2, 0x10, 0xF0,
 0x30, 0x6A, 0x00, 0xF0, 0x00, 0x4A, 0x40, 0xF0,
 0x60, 0xC2, 0x40, 0xF0, 0x61, 0xC2, 0x20, 0xE8,
-0x10, 0xF0, 0x23, 0x6A, 0xEE, 0xF3, 0x40, 0x9A,
+0x10, 0xF0, 0x23, 0x6A, 0x4E, 0xF3, 0x40, 0x9A,
 0x01, 0x6B, 0x60, 0xC2, 0x20, 0xE8, 0x00, 0x65,
-0x10, 0xF0, 0x23, 0x6A, 0xEE, 0xF3, 0x84, 0x9A,
+0x10, 0xF0, 0x23, 0x6A, 0x4E, 0xF3, 0x84, 0x9A,
 0xFF, 0x6B, 0x20, 0x6D, 0x40, 0xA4, 0x6C, 0xEA,
 0xAD, 0xEA, 0x6C, 0xEA, 0x40, 0xC4, 0x10, 0xF0,
-0x23, 0x6A, 0xEE, 0xF3, 0x88, 0x9A, 0x08, 0x6D,
+0x23, 0x6A, 0x4E, 0xF3, 0x88, 0x9A, 0x08, 0x6D,
 0x40, 0xA4, 0x6C, 0xEA, 0xAD, 0xEA, 0x6C, 0xEA,
 0x40, 0xC4, 0x20, 0xE8, 0x10, 0xF0, 0x23, 0x6A,
-0xEE, 0xF3, 0x70, 0x9A, 0xFD, 0x6A, 0xFF, 0x6C,
+0x4E, 0xF3, 0x70, 0x9A, 0xFD, 0x6A, 0xFF, 0x6C,
 0xA0, 0xA3, 0xAC, 0xEA, 0x40, 0xC3, 0x40, 0xA3,
 0x01, 0x6D, 0x8C, 0xEA, 0xAD, 0xEA, 0x8C, 0xEA,
 0x40, 0xC3, 0x20, 0xE8, 0xFD, 0x63, 0x05, 0x62,
-0x04, 0xD0, 0x10, 0xF0, 0x23, 0x6A, 0xEE, 0xF3,
+0x04, 0xD0, 0x10, 0xF0, 0x23, 0x6A, 0x4E, 0xF3,
 0x14, 0x9A, 0x30, 0xF0, 0x20, 0x6A, 0x4E, 0xF2,
 0x4C, 0x9A, 0x90, 0x67, 0x00, 0x6D, 0x02, 0xF0,
 0x00, 0x6E, 0x40, 0xEA, 0x04, 0x6A, 0x40, 0xC0,
-0x10, 0xF0, 0x23, 0x6A, 0xEE, 0xF3, 0x58, 0x9A,
+0x10, 0xF0, 0x23, 0x6A, 0x4E, 0xF3, 0x58, 0x9A,
 0x20, 0x48, 0x0E, 0xEA, 0xF7, 0x2A, 0x10, 0xF0,
-0x23, 0x6B, 0x30, 0xF0, 0x20, 0x6A, 0xEE, 0xF3,
+0x23, 0x6B, 0x30, 0xF0, 0x20, 0x6A, 0x4E, 0xF3,
 0x9C, 0x9B, 0x4E, 0xF2, 0x4C, 0x9A, 0x00, 0x6D,
 0x00, 0xF4, 0x00, 0x6E, 0x40, 0xEA, 0x05, 0x97,
 0x04, 0x90, 0x03, 0x63, 0x00, 0xEF, 0x00, 0x65,
@@ -40362,31 +40181,31 @@ u8 array_mp_8821c_fw_spic[] = {
 0xC0, 0xF1, 0xC8, 0xDB, 0x01, 0xF7, 0x01, 0x6A,
 0xC0, 0xF1, 0x08, 0x4B, 0x08, 0xF0, 0x00, 0x6D,
 0x00, 0x6C, 0x42, 0xDB, 0x43, 0xDB, 0xA1, 0xDB,
-0x84, 0xDB, 0x10, 0xF0, 0x23, 0x6B, 0x0E, 0xF4,
+0x84, 0xDB, 0x10, 0xF0, 0x23, 0x6B, 0x6E, 0xF3,
 0x78, 0x9B, 0xC0, 0xDB, 0x10, 0xF0, 0x23, 0x6B,
-0x2E, 0xF4, 0x60, 0x9B, 0xA0, 0xDB, 0x10, 0xF0,
-0x23, 0x6B, 0x2E, 0xF4, 0x68, 0x9B, 0x40, 0xDB,
-0x10, 0xF0, 0x23, 0x6B, 0x2E, 0xF4, 0x70, 0x9B,
-0x40, 0xDB, 0x10, 0xF0, 0x23, 0x6A, 0x2E, 0xF4,
+0x8E, 0xF3, 0x60, 0x9B, 0xA0, 0xDB, 0x10, 0xF0,
+0x23, 0x6B, 0x8E, 0xF3, 0x68, 0x9B, 0x40, 0xDB,
+0x10, 0xF0, 0x23, 0x6B, 0x8E, 0xF3, 0x70, 0x9B,
+0x40, 0xDB, 0x10, 0xF0, 0x23, 0x6A, 0x8E, 0xF3,
 0x58, 0x9A, 0x80, 0xDA, 0x20, 0xE8, 0x00, 0x65,
 0xFF, 0x6A, 0x01, 0x4A, 0x30, 0xF0, 0x20, 0x6B,
 0xE0, 0xF1, 0x58, 0xDB, 0x10, 0xF0, 0x23, 0x6B,
-0x0E, 0xF4, 0x64, 0x9B, 0x40, 0xDB, 0x20, 0xE8,
-0x10, 0xF0, 0x23, 0x6B, 0x4E, 0xF4, 0x94, 0x9B,
+0x6E, 0xF3, 0x64, 0x9B, 0x40, 0xDB, 0x20, 0xE8,
+0x10, 0xF0, 0x23, 0x6B, 0xAE, 0xF3, 0x94, 0x9B,
 0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A,
 0x80, 0xF1, 0x06, 0x6D, 0xFF, 0x6B, 0xAE, 0xDA,
 0x8F, 0xDA, 0x70, 0xDA, 0x10, 0xF0, 0x23, 0x6A,
-0x4E, 0xF4, 0x40, 0x9A, 0xA0, 0xDA, 0x10, 0xF0,
-0x23, 0x6A, 0x4E, 0xF4, 0x48, 0x9A, 0x80, 0xDA,
-0x10, 0xF0, 0x23, 0x6A, 0x4E, 0xF4, 0x50, 0x9A,
+0xAE, 0xF3, 0x40, 0x9A, 0xA0, 0xDA, 0x10, 0xF0,
+0x23, 0x6A, 0xAE, 0xF3, 0x48, 0x9A, 0x80, 0xDA,
+0x10, 0xF0, 0x23, 0x6A, 0xAE, 0xF3, 0x50, 0x9A,
 0x60, 0xDA, 0x20, 0xE8, 0xFD, 0x63, 0x05, 0x62,
 0x30, 0xF0, 0x20, 0x6A, 0x6E, 0xF5, 0x5C, 0x9A,
 0x40, 0xEA, 0x05, 0x97, 0x03, 0x63, 0x00, 0xEF,
 0xFD, 0x63, 0x05, 0x62, 0x80, 0x18, 0xFB, 0x06,
 0x30, 0xF0, 0x20, 0x6B, 0xE8, 0xF2, 0x5C, 0xC3,
-0x80, 0x18, 0xC9, 0x05, 0x00, 0x18, 0x04, 0xD8,
+0x80, 0x18, 0xC9, 0x05, 0x00, 0x18, 0xDC, 0xD7,
 0x80, 0x18, 0x11, 0x06, 0x10, 0xF0, 0x23, 0x6A,
-0x4E, 0xF4, 0x58, 0x9A, 0x3F, 0x6B, 0x60, 0xC2,
+0xAE, 0xF3, 0x58, 0x9A, 0x3F, 0x6B, 0x60, 0xC2,
 0x80, 0x18, 0xBA, 0x05, 0x80, 0x18, 0xBE, 0x05,
 0x80, 0x18, 0xD1, 0x05, 0x80, 0x18, 0x4D, 0x06,
 0x05, 0x97, 0x03, 0x63, 0x00, 0xEF, 0x00, 0x65,
@@ -40397,7 +40216,7 @@ u8 array_mp_8821c_fw_spic[] = {
 0xD0, 0xA8, 0x01, 0x6C, 0x03, 0x6D, 0xC2, 0x36,
 0x00, 0x18, 0xA9, 0xC9, 0x05, 0x97, 0x04, 0x90,
 0x03, 0x63, 0x00, 0xEF, 0xFD, 0x63, 0x05, 0x62,
-0x00, 0x18, 0xC3, 0xD0, 0x00, 0x18, 0xE2, 0xD0,
+0x00, 0x18, 0x9B, 0xD0, 0x00, 0x18, 0xBA, 0xD0,
 0x80, 0x18, 0xE6, 0x05, 0x80, 0x18, 0x02, 0x06,
 0x80, 0x18, 0xFC, 0x05, 0x80, 0x18, 0x26, 0x06,
 0x05, 0x97, 0x03, 0x63, 0x00, 0xEF, 0x00, 0x65,
@@ -40420,53 +40239,53 @@ u8 array_mp_8821c_fw_spic[] = {
 0x9F, 0xF7, 0x03, 0x6D, 0xC4, 0x67, 0x00, 0x18,
 0xA9, 0xC9, 0x05, 0x97, 0x03, 0x63, 0x00, 0xEF,
 0x20, 0xE8, 0x00, 0x65, 0x10, 0xF0, 0x23, 0x6A,
-0xEE, 0xF4, 0x5C, 0x9A, 0xE0, 0xF1, 0x1B, 0x6B,
+0x4E, 0xF4, 0x5C, 0x9A, 0xE0, 0xF1, 0x1B, 0x6B,
 0x6B, 0xEB, 0x60, 0xCA, 0x10, 0xF0, 0x23, 0x6A,
-0x0E, 0xF5, 0x60, 0x9A, 0xFB, 0x6A, 0x80, 0xA3,
+0x6E, 0xF4, 0x60, 0x9A, 0xFB, 0x6A, 0x80, 0xA3,
 0x8C, 0xEA, 0x40, 0xC3, 0x20, 0xE8, 0x00, 0x65,
 0x10, 0xF0, 0x23, 0x6A, 0x65, 0xF4, 0x19, 0x4A,
 0x30, 0xF0, 0x20, 0x6B, 0x4E, 0xF2, 0x4C, 0xDB,
 0x10, 0xF0, 0x23, 0x6A, 0x85, 0xF4, 0x0D, 0x4A,
 0x30, 0xF0, 0x20, 0x6B, 0x4E, 0xF2, 0x50, 0xDB,
-0x10, 0xF0, 0x23, 0x6A, 0x08, 0xF2, 0x1D, 0x4A,
+0x10, 0xF0, 0x23, 0x6A, 0x68, 0xF1, 0x1D, 0x4A,
 0x30, 0xF0, 0x20, 0x6B, 0x4E, 0xF2, 0x54, 0xDB,
 0x10, 0xF0, 0x30, 0x6A, 0x83, 0xF1, 0x05, 0x4A,
 0x30, 0xF0, 0x20, 0x6B, 0x4E, 0xF2, 0x58, 0xDB,
-0x10, 0xF0, 0x23, 0x6A, 0xAB, 0xF6, 0x19, 0x4A,
+0x10, 0xF0, 0x23, 0x6A, 0x0B, 0xF6, 0x19, 0x4A,
 0x30, 0xF0, 0x20, 0x6B, 0x4E, 0xF2, 0x5C, 0xDB,
-0x10, 0xF0, 0x23, 0x6A, 0x0A, 0xF2, 0x05, 0x4A,
+0x10, 0xF0, 0x23, 0x6A, 0x6A, 0xF1, 0x05, 0x4A,
 0x30, 0xF0, 0x20, 0x6B, 0x6E, 0xF2, 0x58, 0xDB,
-0x10, 0xF0, 0x23, 0x6A, 0x2A, 0xF2, 0x09, 0x4A,
+0x10, 0xF0, 0x23, 0x6A, 0x8A, 0xF1, 0x09, 0x4A,
 0x30, 0xF0, 0x20, 0x6B, 0x6E, 0xF2, 0x5C, 0xDB,
-0x10, 0xF0, 0x23, 0x6A, 0x26, 0xF3, 0x01, 0x4A,
+0x10, 0xF0, 0x23, 0x6A, 0x86, 0xF2, 0x01, 0x4A,
 0x30, 0xF0, 0x20, 0x6B, 0x8E, 0xF2, 0x5C, 0xDB,
 0x10, 0xF0, 0x23, 0x6A, 0x64, 0xF7, 0x01, 0x4A,
 0x30, 0xF0, 0x20, 0x6B, 0xAE, 0xF2, 0x40, 0xDB,
 0x10, 0xF0, 0x23, 0x6A, 0x04, 0xF7, 0x09, 0x4A,
 0x30, 0xF0, 0x20, 0x6B, 0xAE, 0xF2, 0x44, 0xDB,
-0x10, 0xF0, 0x23, 0x6A, 0xA9, 0xF2, 0x01, 0x4A,
+0x10, 0xF0, 0x23, 0x6A, 0x09, 0xF2, 0x01, 0x4A,
 0x30, 0xF0, 0x20, 0x6B, 0xAE, 0xF2, 0x48, 0xDB,
-0x10, 0xF0, 0x23, 0x6A, 0x67, 0xF6, 0x11, 0x4A,
+0x10, 0xF0, 0x23, 0x6A, 0xC7, 0xF5, 0x11, 0x4A,
 0x30, 0xF0, 0x20, 0x6B, 0xAE, 0xF2, 0x4C, 0xDB,
-0x10, 0xF0, 0x23, 0x6A, 0xA7, 0xF6, 0x19, 0x4A,
+0x10, 0xF0, 0x23, 0x6A, 0x07, 0xF6, 0x19, 0x4A,
 0x30, 0xF0, 0x20, 0x6B, 0xAE, 0xF2, 0x50, 0xDB,
-0x10, 0xF0, 0x23, 0x6A, 0x4B, 0xF6, 0x09, 0x4A,
+0x10, 0xF0, 0x23, 0x6A, 0xAB, 0xF5, 0x09, 0x4A,
 0x30, 0xF0, 0x20, 0x6B, 0xAE, 0xF2, 0x54, 0xDB,
 0x10, 0xF0, 0x30, 0x6A, 0x83, 0xF4, 0x05, 0x4A,
 0x30, 0xF0, 0x20, 0x6B, 0xEE, 0xF4, 0x48, 0xDB,
-0x10, 0xF0, 0x23, 0x6A, 0x2C, 0xF2, 0x05, 0x4A,
+0x10, 0xF0, 0x23, 0x6A, 0x8C, 0xF1, 0x05, 0x4A,
 0x30, 0xF0, 0x20, 0x6B, 0xCE, 0xF5, 0x4C, 0xDB,
-0x10, 0xF0, 0x23, 0x6A, 0x8C, 0xF1, 0x0D, 0x4A,
+0x10, 0xF0, 0x23, 0x6A, 0xEC, 0xF0, 0x0D, 0x4A,
 0x30, 0xF0, 0x20, 0x6B, 0xEE, 0xF5, 0x44, 0xDB,
-0x10, 0xF0, 0x23, 0x6A, 0xCC, 0xF0, 0x11, 0x4A,
+0x10, 0xF0, 0x23, 0x6A, 0x2C, 0xF0, 0x11, 0x4A,
 0x30, 0xF0, 0x20, 0x6B, 0xEE, 0xF4, 0x50, 0xDB,
-0x10, 0xF0, 0x23, 0x6A, 0x4C, 0xF1, 0x05, 0x4A,
+0x10, 0xF0, 0x23, 0x6A, 0xAC, 0xF0, 0x05, 0x4A,
 0x30, 0xF0, 0x20, 0x6B, 0xEE, 0xF4, 0x54, 0xDB,
 0x10, 0xF0, 0x23, 0x6A, 0x25, 0xF6, 0x19, 0x4A,
 0x30, 0xF0, 0x20, 0x6B, 0xAE, 0xF2, 0x58, 0xDB,
 0x10, 0xF0, 0x23, 0x6A, 0x26, 0xF0, 0x1D, 0x4A,
 0x30, 0xF0, 0x20, 0x6B, 0xAE, 0xF2, 0x5C, 0xDB,
-0x10, 0xF0, 0x23, 0x6A, 0x49, 0xF5, 0x11, 0x4A,
+0x10, 0xF0, 0x23, 0x6A, 0xA9, 0xF4, 0x11, 0x4A,
 0x30, 0xF0, 0x20, 0x6B, 0xCE, 0xF2, 0x40, 0xDB,
 0x10, 0xF0, 0x23, 0x6A, 0x24, 0xF4, 0x15, 0x4A,
 0x30, 0xF0, 0x20, 0x6B, 0x2E, 0xF4, 0x4C, 0xDB,
@@ -40478,26 +40297,26 @@ u8 array_mp_8821c_fw_spic[] = {
 0x30, 0xF0, 0x20, 0x6B, 0xCE, 0xF4, 0x5C, 0xDB,
 0x10, 0xF0, 0x23, 0x6A, 0x25, 0xF4, 0x05, 0x4A,
 0x30, 0xF0, 0x20, 0x6B, 0xCE, 0xF4, 0x58, 0xDB,
-0x10, 0xF0, 0x23, 0x6A, 0xE8, 0xF6, 0x0D, 0x4A,
+0x10, 0xF0, 0x23, 0x6A, 0x48, 0xF6, 0x0D, 0x4A,
 0x30, 0xF0, 0x20, 0x6B, 0xEE, 0xF4, 0x40, 0xDB,
-0x10, 0xF0, 0x23, 0x6A, 0xCC, 0xF3, 0x0D, 0x4A,
+0x10, 0xF0, 0x23, 0x6A, 0x2C, 0xF3, 0x0D, 0x4A,
 0x30, 0xF0, 0x20, 0x6B, 0x6E, 0xF5, 0x5C, 0xDB,
-0x10, 0xF0, 0x23, 0x6A, 0x8C, 0xF5, 0x0D, 0x4A,
+0x10, 0xF0, 0x23, 0x6A, 0xEC, 0xF4, 0x0D, 0x4A,
 0x30, 0xF0, 0x20, 0x6B, 0x8E, 0xF5, 0x48, 0xDB,
-0x10, 0xF0, 0x23, 0x6A, 0xAC, 0xF5, 0x15, 0x4A,
+0x10, 0xF0, 0x23, 0x6A, 0x0C, 0xF5, 0x15, 0x4A,
 0x30, 0xF0, 0x20, 0x6B, 0x8E, 0xF5, 0x50, 0xDB,
-0x10, 0xF0, 0x23, 0x6A, 0x4D, 0xF5, 0x09, 0x4A,
+0x10, 0xF0, 0x23, 0x6A, 0xAD, 0xF4, 0x09, 0x4A,
 0x30, 0xF0, 0x20, 0x6B, 0x8E, 0xF5, 0x58, 0xDB,
-0x10, 0xF0, 0x23, 0x6A, 0x4D, 0xF5, 0x1D, 0x4A,
+0x10, 0xF0, 0x23, 0x6A, 0xAD, 0xF4, 0x1D, 0x4A,
 0x30, 0xF0, 0x20, 0x6B, 0x8E, 0xF5, 0x5C, 0xDB,
-0x10, 0xF0, 0x23, 0x6A, 0x6D, 0xF5, 0x11, 0x4A,
+0x10, 0xF0, 0x23, 0x6A, 0xCD, 0xF4, 0x11, 0x4A,
 0x30, 0xF0, 0x20, 0x6B, 0xAE, 0xF5, 0x44, 0xDB,
-0x10, 0xF0, 0x23, 0x6A, 0x8D, 0xF5, 0x01, 0x4A,
+0x10, 0xF0, 0x23, 0x6A, 0xED, 0xF4, 0x01, 0x4A,
 0x30, 0xF0, 0x20, 0x6B, 0xAE, 0xF5, 0x40, 0xDB,
-0x10, 0xF0, 0x23, 0x6A, 0x8D, 0xF5, 0x11, 0x4A,
+0x10, 0xF0, 0x23, 0x6A, 0xED, 0xF4, 0x11, 0x4A,
 0x30, 0xF0, 0x20, 0x6B, 0xAE, 0xF5, 0x54, 0xDB,
 0x20, 0xE8, 0x00, 0x65, 0x10, 0xF0, 0x23, 0x6A,
-0xAE, 0xF5, 0x40, 0x9A, 0x60, 0x9A, 0x03, 0x6A,
+0x0E, 0xF5, 0x40, 0x9A, 0x60, 0x9A, 0x03, 0x6A,
 0x62, 0x33, 0x72, 0x33, 0x4C, 0xEB, 0x02, 0x6A,
 0x04, 0x23, 0x01, 0x73, 0x01, 0x6A, 0x01, 0x60,
 0x03, 0x6A, 0x20, 0xE8, 0x15, 0xF0, 0xFF, 0x0F,
@@ -40516,49 +40335,49 @@ u8 array_mp_8821c_fw_spic[] = {
 0x00, 0x00, 0x00, 0x00, 0x00, 0xF0, 0xFF, 0xFF,
 0xFF, 0x03, 0x00, 0x00, 0x15, 0xF0, 0xFF, 0xFF,
 0x0F, 0x00, 0x00, 0x00, 0x10, 0xF0, 0x23, 0x6B,
-0x2E, 0xF5, 0x6C, 0x9B, 0xFF, 0x6A, 0x8C, 0xEA,
+0x8E, 0xF4, 0x6C, 0x9B, 0xFF, 0x6A, 0x8C, 0xEA,
 0x60, 0x9B, 0x80, 0xF1, 0x01, 0x6C, 0x8B, 0xEC,
-0x8C, 0xEB, 0x10, 0xF0, 0x23, 0x6C, 0xAE, 0xF2,
+0x8C, 0xEB, 0x10, 0xF0, 0x23, 0x6C, 0x0E, 0xF2,
 0x90, 0x9C, 0x01, 0x72, 0x80, 0x9C, 0x05, 0x60,
 0x02, 0x72, 0x05, 0x61, 0xFF, 0x6A, 0x01, 0x4A,
 0x01, 0x10, 0x80, 0x6A, 0x4D, 0xEB, 0x10, 0xF0,
-0x23, 0x6A, 0x2E, 0xF5, 0x4C, 0x9A, 0x60, 0xDA,
-0x10, 0xF0, 0x23, 0x6A, 0x2E, 0xF5, 0x50, 0x9A,
-0x10, 0xF0, 0x23, 0x6B, 0xAE, 0xF2, 0x70, 0x9B,
+0x23, 0x6A, 0x8E, 0xF4, 0x4C, 0x9A, 0x60, 0xDA,
+0x10, 0xF0, 0x23, 0x6A, 0x8E, 0xF4, 0x50, 0x9A,
+0x10, 0xF0, 0x23, 0x6B, 0x0E, 0xF2, 0x70, 0x9B,
 0x8C, 0xEA, 0x40, 0xDB, 0x10, 0xF0, 0x23, 0x6B,
-0x2E, 0xF5, 0x74, 0x9B, 0x50, 0x6A, 0x40, 0xC3,
-0x10, 0xF0, 0x23, 0x6B, 0x2E, 0xF5, 0x78, 0x9B,
+0x8E, 0xF4, 0x74, 0x9B, 0x50, 0x6A, 0x40, 0xC3,
+0x10, 0xF0, 0x23, 0x6B, 0x8E, 0xF4, 0x78, 0x9B,
 0x40, 0xC3, 0x20, 0xE8, 0xFF, 0x6A, 0x4C, 0xEC,
 0x03, 0x6B, 0x8C, 0xEB, 0x4C, 0xEE, 0x3C, 0x2B,
-0x10, 0xF0, 0x23, 0x6B, 0x8E, 0xF5, 0x60, 0x9B,
+0x10, 0xF0, 0x23, 0x6B, 0xEE, 0xF4, 0x60, 0x9B,
 0x80, 0xC3, 0x0F, 0x6B, 0xCC, 0xEB, 0x34, 0x23,
 0x01, 0x6C, 0x6C, 0xEC, 0x06, 0x24, 0x10, 0xF0,
-0x23, 0x6C, 0x8E, 0xF5, 0x84, 0x9C, 0xAC, 0xEA,
+0x23, 0x6C, 0xEE, 0xF4, 0x84, 0x9C, 0xAC, 0xEA,
 0x40, 0xC4, 0x02, 0x6A, 0x6C, 0xEA, 0x08, 0x22,
 0xFF, 0x6C, 0xA2, 0x32, 0x8C, 0xEA, 0x10, 0xF0,
-0x23, 0x6C, 0x8E, 0xF5, 0x88, 0x9C, 0x40, 0xC4,
+0x23, 0x6C, 0xEE, 0xF4, 0x88, 0x9C, 0x40, 0xC4,
 0x04, 0x6A, 0x6C, 0xEA, 0x09, 0x22, 0xA2, 0x32,
 0xFF, 0x6C, 0x42, 0x32, 0x8C, 0xEA, 0x10, 0xF0,
-0x23, 0x6C, 0x8E, 0xF5, 0x8C, 0x9C, 0x40, 0xC4,
+0x23, 0x6C, 0xEE, 0xF4, 0x8C, 0x9C, 0x40, 0xC4,
 0x6E, 0x32, 0x07, 0x22, 0x10, 0xF0, 0x23, 0x6A,
-0x8E, 0xF5, 0x50, 0x9A, 0x00, 0xF6, 0xA2, 0x35,
+0xEE, 0xF4, 0x50, 0x9A, 0x00, 0xF6, 0xA2, 0x35,
 0xA0, 0xC2, 0x20, 0x6A, 0x6D, 0xEA, 0x10, 0xF0,
-0x23, 0x6B, 0x8E, 0xF5, 0x74, 0x9B, 0x40, 0xC3,
+0x23, 0x6B, 0xEE, 0xF4, 0x74, 0x9B, 0x40, 0xC3,
 0x00, 0x6A, 0x40, 0xC3, 0x01, 0x6A, 0x20, 0xE8,
 0x00, 0x6A, 0x20, 0xE8, 0xFF, 0x6A, 0x8C, 0xEA,
 0x03, 0x6B, 0x4C, 0xEB, 0x03, 0x23, 0x01, 0x6A,
 0x4B, 0xEA, 0x20, 0xE8, 0x10, 0xF0, 0x23, 0x6C,
-0x8E, 0xF5, 0x80, 0x9C, 0x40, 0xC4, 0x10, 0xF0,
-0x23, 0x6A, 0x8E, 0xF5, 0x94, 0x9A, 0x30, 0x6A,
-0x40, 0xC4, 0x10, 0xF0, 0x23, 0x6A, 0x8E, 0xF5,
+0xEE, 0xF4, 0x80, 0x9C, 0x40, 0xC4, 0x10, 0xF0,
+0x23, 0x6A, 0xEE, 0xF4, 0x94, 0x9A, 0x30, 0x6A,
+0x40, 0xC4, 0x10, 0xF0, 0x23, 0x6A, 0xEE, 0xF4,
 0x44, 0x9A, 0x40, 0x9A, 0x60, 0xC4, 0x20, 0xE8,
 0xFD, 0x63, 0x05, 0x62, 0x10, 0xF0, 0x23, 0x6A,
-0x8E, 0xF5, 0xB8, 0x9A, 0xE0, 0xF3, 0x10, 0x6C,
+0xEE, 0xF4, 0xB8, 0x9A, 0xE0, 0xF3, 0x10, 0x6C,
 0x0F, 0x6E, 0x80, 0x18, 0x3B, 0x07, 0xE0, 0xF3,
 0x0C, 0x6C, 0x80, 0x18, 0x5D, 0x07, 0xFF, 0x6B,
 0x4C, 0xEB, 0x0B, 0x73, 0x0B, 0x61, 0x10, 0xF0,
-0x23, 0x6A, 0x8E, 0xF5, 0x7C, 0x9A, 0x10, 0xF0,
-0x23, 0x6C, 0x8E, 0xF4, 0x90, 0x9C, 0x40, 0x9B,
+0x23, 0x6A, 0xEE, 0xF4, 0x7C, 0x9A, 0x10, 0xF0,
+0x23, 0x6C, 0xEE, 0xF3, 0x90, 0x9C, 0x40, 0x9B,
 0x8C, 0xEA, 0x40, 0xDB, 0x05, 0x97, 0x03, 0x63,
 0x00, 0xEF, 0x00, 0x65, 0x30, 0xF0, 0x20, 0x6A,
 0xC0, 0xF1, 0x08, 0x4A, 0x05, 0x6B, 0x65, 0xF4,
@@ -40572,29 +40391,29 @@ u8 array_mp_8821c_fw_spic[] = {
 0x05, 0x67, 0x0C, 0xD6, 0x27, 0x67, 0x1F, 0x22,
 0x1F, 0xF7, 0x00, 0x6A, 0xAC, 0xEA, 0x02, 0xF0,
 0x00, 0x72, 0x01, 0x60, 0x05, 0x2A, 0x10, 0xF0,
-0x23, 0x6A, 0x2E, 0xF2, 0x48, 0x9A, 0x04, 0x10,
-0x10, 0xF0, 0x23, 0x6A, 0x2E, 0xF2, 0x4C, 0x9A,
+0x23, 0x6A, 0x8E, 0xF1, 0x48, 0x9A, 0x04, 0x10,
+0x10, 0xF0, 0x23, 0x6A, 0x8E, 0xF1, 0x4C, 0x9A,
 0x49, 0xE0, 0x40, 0x9A, 0x0C, 0x94, 0x04, 0xD2,
 0x30, 0xF0, 0x20, 0x6A, 0xAE, 0xF4, 0x50, 0x9A,
 0x40, 0xEA, 0x0C, 0x93, 0x24, 0xEA, 0x6F, 0xEA,
 0x04, 0x93, 0x6C, 0xEA, 0x4D, 0xE9, 0x1F, 0xF7,
 0x00, 0x6A, 0x0C, 0xEA, 0x02, 0xF0, 0x00, 0x72,
 0x01, 0x60, 0x05, 0x2A, 0x10, 0xF0, 0x23, 0x6A,
-0x2E, 0xF2, 0x48, 0x9A, 0x04, 0x10, 0x10, 0xF0,
-0x23, 0x6A, 0x2E, 0xF2, 0x4C, 0x9A, 0x41, 0xE0,
+0x8E, 0xF1, 0x48, 0x9A, 0x04, 0x10, 0x10, 0xF0,
+0x23, 0x6A, 0x8E, 0xF1, 0x4C, 0x9A, 0x41, 0xE0,
 0x20, 0xD8, 0x09, 0x97, 0x08, 0x91, 0x07, 0x90,
 0x05, 0x63, 0x00, 0xEF, 0xFC, 0x63, 0x07, 0x62,
 0x06, 0xD1, 0x05, 0xD0, 0x1F, 0xF7, 0x00, 0x6A,
 0xAC, 0xEA, 0x02, 0xF0, 0x00, 0x72, 0x26, 0x67,
 0x01, 0x60, 0x05, 0x2A, 0x10, 0xF0, 0x23, 0x6A,
-0x2E, 0xF2, 0x48, 0x9A, 0x04, 0x10, 0x10, 0xF0,
-0x23, 0x6A, 0x2E, 0xF2, 0x4C, 0x9A, 0x55, 0xE5,
+0x8E, 0xF1, 0x48, 0x9A, 0x04, 0x10, 0x10, 0xF0,
+0x23, 0x6A, 0x8E, 0xF1, 0x4C, 0x9A, 0x55, 0xE5,
 0x30, 0xF0, 0x20, 0x6A, 0x00, 0x9D, 0xAE, 0xF4,
 0x50, 0x9A, 0x91, 0x67, 0x2C, 0xE8, 0x40, 0xEA,
 0x06, 0xEA, 0x50, 0x67, 0x07, 0x97, 0x06, 0x91,
 0x05, 0x90, 0x04, 0x63, 0x00, 0xEF, 0x00, 0x65,
 0xFD, 0x63, 0x05, 0x62, 0x00, 0x6A, 0x10, 0xF0,
-0x23, 0x6B, 0xEE, 0xF2, 0x7C, 0x9B, 0x54, 0x34,
+0x23, 0x6B, 0x4E, 0xF2, 0x7C, 0x9B, 0x54, 0x34,
 0x01, 0x4A, 0x71, 0xE4, 0xA0, 0xA4, 0xF8, 0x6B,
 0xAC, 0xEB, 0x60, 0xC4, 0xFF, 0x6B, 0x6C, 0xEA,
 0x80, 0x72, 0xF1, 0x61, 0x80, 0x18, 0x7B, 0x07,
@@ -40617,50 +40436,50 @@ u8 array_mp_8821c_fw_spic[] = {
 0xFD, 0x63, 0x05, 0x62, 0xFF, 0x6A, 0x8C, 0xEA,
 0x11, 0x72, 0x04, 0x61, 0x85, 0x67, 0x80, 0x18,
 0xD7, 0x07, 0x0C, 0x10, 0x10, 0xF0, 0x23, 0x6A,
-0x6E, 0xF2, 0x68, 0x9A, 0x10, 0xF0, 0x23, 0x6C,
-0xAE, 0xF2, 0x98, 0x9C, 0x40, 0x9B, 0x8D, 0xEA,
+0xCE, 0xF1, 0x68, 0x9A, 0x10, 0xF0, 0x23, 0x6C,
+0x0E, 0xF2, 0x98, 0x9C, 0x40, 0x9B, 0x8D, 0xEA,
 0x40, 0xDB, 0xFF, 0x6A, 0x05, 0x97, 0x03, 0x63,
 0x00, 0xEF, 0x00, 0x65, 0x01, 0x6A, 0x20, 0xE8,
 0x20, 0xE8, 0x00, 0x65, 0x20, 0xE8, 0x00, 0x65,
 0x20, 0xE8, 0x00, 0x65, 0xFC, 0x63, 0x07, 0x62,
 0x06, 0xD1, 0x05, 0xD0, 0x01, 0x75, 0x1F, 0x61,
-0x10, 0xF0, 0x23, 0x6A, 0x0E, 0xF3, 0x20, 0x9A,
+0x10, 0xF0, 0x23, 0x6A, 0x6E, 0xF2, 0x20, 0x9A,
 0x30, 0xF0, 0x20, 0x68, 0xCE, 0xF4, 0x50, 0x98,
 0xB1, 0x67, 0x41, 0xF1, 0x08, 0x6C, 0x02, 0x6E,
 0x40, 0xEA, 0xCE, 0xF4, 0x50, 0x98, 0xB1, 0x67,
 0x41, 0xF1, 0x0C, 0x6C, 0x02, 0x6E, 0x40, 0xEA,
-0x10, 0xF0, 0x23, 0x6A, 0x8E, 0xF2, 0x2C, 0x9A,
+0x10, 0xF0, 0x23, 0x6A, 0xEE, 0xF1, 0x2C, 0x9A,
 0x21, 0xF4, 0x00, 0x6C, 0xCE, 0xF4, 0x50, 0x98,
 0xB1, 0x67, 0x00, 0x6E, 0x46, 0x10, 0x02, 0x75,
-0x26, 0x61, 0x10, 0xF0, 0x23, 0x6A, 0x0E, 0xF3,
+0x26, 0x61, 0x10, 0xF0, 0x23, 0x6A, 0x6E, 0xF2,
 0x20, 0x9A, 0x30, 0xF0, 0x20, 0x68, 0xCE, 0xF4,
 0x50, 0x98, 0xB1, 0x67, 0x41, 0xF1, 0x08, 0x6C,
 0x02, 0x6E, 0x40, 0xEA, 0xCE, 0xF4, 0x50, 0x98,
 0xB1, 0x67, 0x41, 0xF1, 0x0C, 0x6C, 0x01, 0x6E,
-0x40, 0xEA, 0x10, 0xF0, 0x23, 0x6A, 0x8E, 0xF2,
+0x40, 0xEA, 0x10, 0xF0, 0x23, 0x6A, 0xEE, 0xF1,
 0x2C, 0x9A, 0xCE, 0xF4, 0x50, 0x98, 0x21, 0xF4,
 0x00, 0x6C, 0xB1, 0x67, 0x00, 0x6E, 0x40, 0xEA,
 0xCE, 0xF4, 0x50, 0x98, 0xE1, 0xF0, 0x10, 0x6C,
 0xB1, 0x67, 0x01, 0x6E, 0x25, 0x10, 0x10, 0xF0,
-0x23, 0x6A, 0x0E, 0xF3, 0x20, 0x9A, 0x30, 0xF0,
+0x23, 0x6A, 0x6E, 0xF2, 0x20, 0x9A, 0x30, 0xF0,
 0x20, 0x68, 0xCE, 0xF4, 0x50, 0x98, 0xB1, 0x67,
 0x41, 0xF1, 0x08, 0x6C, 0x02, 0x6E, 0x40, 0xEA,
 0xCE, 0xF4, 0x50, 0x98, 0xB1, 0x67, 0x41, 0xF1,
 0x0C, 0x6C, 0x02, 0x6E, 0x40, 0xEA, 0x10, 0xF0,
-0x23, 0x6A, 0x8E, 0xF2, 0x2C, 0x9A, 0xCE, 0xF4,
+0x23, 0x6A, 0xEE, 0xF1, 0x2C, 0x9A, 0xCE, 0xF4,
 0x50, 0x98, 0x21, 0xF4, 0x00, 0x6C, 0xB1, 0x67,
 0x01, 0x6E, 0x40, 0xEA, 0xCE, 0xF4, 0x50, 0x98,
 0xE1, 0xF0, 0x10, 0x6C, 0xB1, 0x67, 0x00, 0x6E,
 0x40, 0xEA, 0x07, 0x97, 0x06, 0x91, 0x05, 0x90,
 0x04, 0x63, 0x00, 0xEF, 0xFD, 0x63, 0x05, 0x62,
 0x03, 0x25, 0x01, 0x6A, 0x4B, 0xEA, 0x0C, 0x10,
-0x10, 0xF0, 0x23, 0x6A, 0xFF, 0x6C, 0x0E, 0xF3,
+0x10, 0xF0, 0x23, 0x6A, 0xFF, 0x6C, 0x6E, 0xF2,
 0xBC, 0x9A, 0xCC, 0xEC, 0x88, 0x34, 0x05, 0xF0,
-0x00, 0x4C, 0xEC, 0xED, 0x00, 0x18, 0xC2, 0xD2,
+0x00, 0x4C, 0xEC, 0xED, 0x00, 0x18, 0x9A, 0xD2,
 0x05, 0x97, 0x03, 0x63, 0x00, 0xEF, 0x00, 0x65,
 0xFB, 0x63, 0x09, 0x62, 0x08, 0xD1, 0x07, 0xD0,
 0x0E, 0x90, 0x41, 0x2D, 0x10, 0xF0, 0x23, 0x6A,
-0x0E, 0xF3, 0x5C, 0x9A, 0xFF, 0x69, 0xCC, 0xE9,
+0x6E, 0xF2, 0x5C, 0x9A, 0xFF, 0x69, 0xCC, 0xE9,
 0x4C, 0xEF, 0x4A, 0xEF, 0x04, 0xD7, 0x19, 0x60,
 0xD1, 0x67, 0xE2, 0x67, 0x80, 0x18, 0x33, 0x08,
 0x61, 0x42, 0x31, 0x23, 0x00, 0x6C, 0x64, 0x67,
@@ -40668,8 +40487,8 @@ u8 array_mp_8821c_fw_spic[] = {
 0x07, 0x2D, 0x01, 0x4B, 0xFF, 0x6D, 0xAC, 0xEB,
 0x14, 0x73, 0x01, 0x4C, 0xF5, 0x61, 0x14, 0x6B,
 0x04, 0x94, 0x04, 0xEB, 0x8F, 0xEB, 0x4C, 0xEB,
-0x6D, 0xE8, 0x10, 0xF0, 0x23, 0x6A, 0x0E, 0xF3,
-0x7C, 0x9A, 0x10, 0xF0, 0x23, 0x6E, 0x2E, 0xF3,
+0x6D, 0xE8, 0x10, 0xF0, 0x23, 0x6A, 0x6E, 0xF2,
+0x7C, 0x9A, 0x10, 0xF0, 0x23, 0x6E, 0x8E, 0xF2,
 0xC0, 0x9E, 0x30, 0xF0, 0x20, 0x6A, 0xCE, 0xF4,
 0x50, 0x9A, 0x0C, 0xEB, 0x00, 0xF5, 0x20, 0x31,
 0x2D, 0xEB, 0x01, 0x6D, 0x81, 0xF4, 0x10, 0x6C,
@@ -40681,27 +40500,27 @@ u8 array_mp_8821c_fw_spic[] = {
 0x0C, 0xD1, 0x0B, 0xD0, 0x0E, 0xD4, 0x6B, 0xA4,
 0xFF, 0x68, 0xAC, 0xE8, 0x01, 0x6A, 0x60, 0xF1,
 0x0B, 0x2B, 0x30, 0xF0, 0x21, 0x6A, 0xF1, 0xF0,
-0x1C, 0xC2, 0x10, 0xF0, 0x23, 0x6A, 0x0E, 0xF3,
+0x1C, 0xC2, 0x10, 0xF0, 0x23, 0x6A, 0x6E, 0xF2,
 0xFC, 0x9A, 0x00, 0x6D, 0x18, 0x6E, 0x80, 0x18,
 0x33, 0x08, 0x08, 0xD2, 0x08, 0x93, 0x00, 0x6A,
 0x01, 0x4B, 0x01, 0x23, 0x01, 0x6A, 0x01, 0x6B,
 0x4C, 0xEB, 0x07, 0xD3, 0x0E, 0x93, 0x60, 0xF2,
 0x50, 0xA3, 0x00, 0x6B, 0x06, 0xD3, 0x12, 0x2A,
-0x10, 0xF0, 0x23, 0x6A, 0x0E, 0x94, 0x0E, 0xF3,
+0x10, 0xF0, 0x23, 0x6A, 0x0E, 0x94, 0x6E, 0xF2,
 0xFC, 0x9A, 0xA3, 0x67, 0xB8, 0x6E, 0x80, 0x18,
 0x33, 0x08, 0x06, 0xD2, 0x06, 0x93, 0x00, 0x6A,
 0x01, 0x4B, 0x01, 0x23, 0x01, 0x6A, 0x07, 0x93,
 0x4C, 0xEB, 0x07, 0xD3, 0x0F, 0x58, 0x69, 0x60,
-0x10, 0xF0, 0x23, 0x6A, 0x2E, 0xF3, 0x24, 0x9A,
+0x10, 0xF0, 0x23, 0x6A, 0x8E, 0xF2, 0x24, 0x9A,
 0x08, 0x92, 0x30, 0xF0, 0x20, 0x6B, 0x01, 0xF4,
 0x1C, 0x6C, 0x4C, 0xE9, 0xCE, 0xF4, 0x50, 0x9B,
 0x01, 0xF7, 0x00, 0x6D, 0x00, 0x6E, 0x40, 0xEA,
 0x30, 0xF0, 0x20, 0x6B, 0xCE, 0xF4, 0x50, 0x9B,
-0x10, 0xF0, 0x23, 0x6B, 0x2E, 0xF3, 0xA8, 0x9B,
+0x10, 0xF0, 0x23, 0x6B, 0x8E, 0xF2, 0xA8, 0x9B,
 0x61, 0xF0, 0x00, 0x6C, 0x61, 0xF1, 0x0A, 0x6E,
 0x40, 0xEA, 0x0E, 0x93, 0x0D, 0xE9, 0x60, 0xF2,
 0x50, 0xA3, 0x07, 0x2A, 0x10, 0xF0, 0x23, 0x6A,
-0x06, 0x93, 0x2E, 0xF3, 0x4C, 0x9A, 0x4D, 0xEB,
+0x06, 0x93, 0x8E, 0xF2, 0x4C, 0x9A, 0x4D, 0xEB,
 0x06, 0xD3, 0x0E, 0x70, 0x1C, 0x61, 0x30, 0xF0,
 0x20, 0x68, 0xCE, 0xF4, 0x50, 0x98, 0x01, 0x6D,
 0x21, 0xF2, 0x04, 0x6C, 0xAB, 0xED, 0x17, 0xF0,
@@ -40711,22 +40530,22 @@ u8 array_mp_8821c_fw_spic[] = {
 0x50, 0x98, 0xA1, 0xF2, 0x0C, 0x6C, 0xAB, 0xED,
 0x66, 0xF6, 0x07, 0x6E, 0x20, 0x10, 0x30, 0xF0,
 0x20, 0x68, 0x10, 0xF0, 0x23, 0x6A, 0xCE, 0xF4,
-0x70, 0x98, 0x2E, 0xF3, 0xD0, 0x9A, 0x01, 0x6D,
+0x70, 0x98, 0x8E, 0xF2, 0xD0, 0x9A, 0x01, 0x6D,
 0x21, 0xF2, 0x04, 0x6C, 0xAB, 0xED, 0x40, 0xEB,
 0xCE, 0xF4, 0x50, 0x98, 0x21, 0xF2, 0x08, 0x6C,
 0xFF, 0xF7, 0x1F, 0x6D, 0x11, 0xF0, 0x10, 0x6E,
 0x40, 0xEA, 0x10, 0xF0, 0x23, 0x6B, 0xCE, 0xF4,
-0x50, 0x98, 0x2E, 0xF3, 0xD4, 0x9B, 0x01, 0x6D,
+0x50, 0x98, 0x8E, 0xF2, 0xD4, 0x9B, 0x01, 0x6D,
 0xA1, 0xF2, 0x0C, 0x6C, 0xAB, 0xED, 0x40, 0xEA,
 0xAE, 0x10, 0x24, 0x58, 0xC0, 0xF0, 0x0F, 0x61,
-0x10, 0xF0, 0x23, 0x6A, 0x2E, 0xF3, 0x24, 0x9A,
+0x10, 0xF0, 0x23, 0x6A, 0x8E, 0xF2, 0x24, 0x9A,
 0x08, 0x92, 0x68, 0x40, 0xE4, 0x4B, 0x4C, 0xE9,
 0xFF, 0x6A, 0x4C, 0xEB, 0x1D, 0x5B, 0x0D, 0xE9,
 0x12, 0x61, 0x68, 0x40, 0xA4, 0x4B, 0x4C, 0xEB,
 0x29, 0x5B, 0x05, 0x60, 0x10, 0xF0, 0x23, 0x6A,
-0xAE, 0xF2, 0x58, 0x9A, 0x07, 0x10, 0x8D, 0x58,
+0x0E, 0xF2, 0x58, 0x9A, 0x07, 0x10, 0x8D, 0x58,
 0xA0, 0xF0, 0x15, 0x61, 0x10, 0xF0, 0x23, 0x6A,
-0xEE, 0xF2, 0x54, 0x9A, 0x4D, 0xE9, 0x68, 0x40,
+0x4E, 0xF2, 0x54, 0x9A, 0x4D, 0xE9, 0x68, 0x40,
 0xE4, 0x4B, 0xFF, 0x6A, 0x4C, 0xEB, 0x1D, 0x5B,
 0x0A, 0x60, 0x30, 0xF0, 0x20, 0x6A, 0xCE, 0xF4,
 0x50, 0x9A, 0x01, 0xF4, 0x1C, 0x6C, 0x01, 0xF7,
@@ -40741,32 +40560,32 @@ u8 array_mp_8821c_fw_spic[] = {
 0xE4, 0x4B, 0xFF, 0x6A, 0x4C, 0xEB, 0x0D, 0x5B,
 0x0D, 0x60, 0x30, 0xF0, 0x20, 0x6A, 0x10, 0xF0,
 0x23, 0x6B, 0xCE, 0xF4, 0x50, 0x9A, 0x61, 0xF0,
-0x00, 0x6C, 0x2E, 0xF3, 0xA8, 0x9B, 0x80, 0xF4,
+0x00, 0x6C, 0x8E, 0xF2, 0xA8, 0x9B, 0x80, 0xF4,
 0x14, 0x6E, 0x35, 0x10, 0x68, 0x40, 0xD4, 0x4B,
 0x4C, 0xEB, 0x0D, 0x5B, 0x0D, 0x60, 0x30, 0xF0,
 0x20, 0x6A, 0x10, 0xF0, 0x23, 0x6B, 0xCE, 0xF4,
-0x50, 0x9A, 0x61, 0xF0, 0x00, 0x6C, 0x2E, 0xF3,
+0x50, 0x9A, 0x61, 0xF0, 0x00, 0x6C, 0x8E, 0xF2,
 0xA8, 0x9B, 0x40, 0xF4, 0x13, 0x6E, 0x23, 0x10,
 0x68, 0x40, 0xA4, 0x4B, 0x4C, 0xEB, 0x11, 0x5B,
 0x0D, 0x60, 0x30, 0xF0, 0x20, 0x6A, 0x10, 0xF0,
 0x23, 0x6B, 0xCE, 0xF4, 0x50, 0x9A, 0x61, 0xF0,
-0x00, 0x6C, 0x2E, 0xF3, 0xA8, 0x9B, 0x40, 0xF4,
+0x00, 0x6C, 0x8E, 0xF2, 0xA8, 0x9B, 0x40, 0xF4,
 0x12, 0x6E, 0x11, 0x10, 0x68, 0x40, 0x92, 0x4B,
 0x4C, 0xEB, 0x3C, 0x5B, 0x48, 0x60, 0x30, 0xF0,
 0x20, 0x6A, 0x10, 0xF0, 0x23, 0x6B, 0xCE, 0xF4,
-0x50, 0x9A, 0x2E, 0xF3, 0xA8, 0x9B, 0x61, 0xF0,
+0x50, 0x9A, 0x8E, 0xF2, 0xA8, 0x9B, 0x61, 0xF0,
 0x00, 0x6C, 0x00, 0xF4, 0x12, 0x6E, 0x40, 0xEA,
 0x0E, 0x93, 0x60, 0xF2, 0x50, 0xA3, 0x13, 0x2A,
 0xC7, 0x48, 0xFF, 0x6A, 0x4C, 0xE8, 0x13, 0x58,
-0x07, 0x60, 0x10, 0xF0, 0x23, 0x6A, 0x2E, 0xF3,
+0x07, 0x60, 0x10, 0xF0, 0x23, 0x6A, 0x8E, 0xF2,
 0x58, 0x9A, 0x06, 0x93, 0x4C, 0xEB, 0x06, 0x10,
-0x10, 0xF0, 0x23, 0x6A, 0x2E, 0xF3, 0x4C, 0x9A,
+0x10, 0xF0, 0x23, 0x6A, 0x8E, 0xF2, 0x4C, 0x9A,
 0x06, 0x93, 0x4D, 0xEB, 0x06, 0xD3, 0x10, 0xF0,
-0x23, 0x6A, 0x0E, 0xF3, 0x1C, 0x4A, 0x0E, 0x94,
+0x23, 0x6A, 0x6E, 0xF2, 0x1C, 0x4A, 0x0E, 0x94,
 0xE0, 0x9A, 0x00, 0x6D, 0x18, 0x6E, 0x04, 0xD1,
 0x80, 0x18, 0x3E, 0x08, 0x07, 0x90, 0x0E, 0x93,
 0x4C, 0xE8, 0x60, 0xF2, 0x50, 0xA3, 0x0F, 0x2A,
-0x83, 0x67, 0x10, 0xF0, 0x23, 0x6B, 0x0E, 0xF3,
+0x83, 0x67, 0x10, 0xF0, 0x23, 0x6B, 0x6E, 0xF2,
 0x1C, 0x4B, 0x06, 0x92, 0xE0, 0x9B, 0x00, 0x6D,
 0xB8, 0x6E, 0x04, 0xD2, 0x80, 0x18, 0x3E, 0x08,
 0x4C, 0xE8, 0xFF, 0x6A, 0x4C, 0xE8, 0x0B, 0xE8,
@@ -40776,37 +40595,37 @@ u8 array_mp_8821c_fw_spic[] = {
 0x0A, 0xD1, 0x09, 0xD0, 0xFF, 0x6A, 0xAC, 0xEA,
 0x06, 0xD2, 0x6B, 0xA4, 0x24, 0x67, 0x01, 0x6A,
 0x80, 0xF0, 0x16, 0x2B, 0x10, 0xF0, 0x23, 0x6A,
-0x0E, 0xF3, 0xFC, 0x9A, 0x00, 0x6D, 0x18, 0x6E,
+0x6E, 0xF2, 0xFC, 0x9A, 0x00, 0x6D, 0x18, 0x6E,
 0x80, 0x18, 0x33, 0x08, 0x07, 0xD2, 0x06, 0x92,
 0x0F, 0x5A, 0x36, 0x60, 0x30, 0xF0, 0x20, 0x68,
-0x10, 0xF0, 0x23, 0x6B, 0xCE, 0xF2, 0xB0, 0x9B,
+0x10, 0xF0, 0x23, 0x6B, 0x2E, 0xF2, 0xB0, 0x9B,
 0xCE, 0xF4, 0x50, 0x98, 0x01, 0xF0, 0x08, 0x6C,
 0x01, 0x6E, 0x40, 0xEA, 0xCE, 0xF4, 0x50, 0x98,
 0x40, 0xF4, 0x14, 0x6C, 0x80, 0x6D, 0x00, 0x6E,
 0x40, 0xEA, 0x10, 0xF0, 0x23, 0x6B, 0xCE, 0xF4,
-0x50, 0x98, 0xEE, 0xF2, 0xB4, 0x9B, 0x81, 0xF2,
+0x50, 0x98, 0x4E, 0xF2, 0xB4, 0x9B, 0x81, 0xF2,
 0x00, 0x6C, 0x00, 0x6E, 0x40, 0xEA, 0xCE, 0xF4,
 0x50, 0x98, 0x01, 0xF0, 0x14, 0x6C, 0x1F, 0xF4,
 0x00, 0x6D, 0x0F, 0x6E, 0x40, 0xEA, 0x10, 0xF0,
-0x23, 0x6A, 0x2E, 0xF3, 0x1C, 0x9A, 0x07, 0x92,
+0x23, 0x6A, 0x8E, 0xF2, 0x1C, 0x9A, 0x07, 0x92,
 0x4C, 0xE8, 0x30, 0xF0, 0x21, 0x6A, 0x90, 0xF2,
 0x59, 0xA2, 0x03, 0x22, 0x91, 0x67, 0x00, 0x6D,
 0x38, 0x10, 0x91, 0x67, 0x01, 0x6D, 0x35, 0x10,
 0x06, 0x92, 0x24, 0x5A, 0x50, 0x61, 0x30, 0xF0,
-0x20, 0x68, 0x10, 0xF0, 0x23, 0x6B, 0xEE, 0xF2,
+0x20, 0x68, 0x10, 0xF0, 0x23, 0x6B, 0x4E, 0xF2,
 0xB4, 0x9B, 0xCE, 0xF4, 0x50, 0x98, 0x81, 0xF2,
 0x00, 0x6C, 0x01, 0x6E, 0x40, 0xEA, 0xCE, 0xF4,
 0x50, 0x98, 0x40, 0xF4, 0x14, 0x6C, 0x80, 0x6D,
 0x01, 0x6E, 0x40, 0xEA, 0x10, 0xF0, 0x23, 0x6B,
-0xCE, 0xF4, 0x50, 0x98, 0xCE, 0xF2, 0xB0, 0x9B,
+0xCE, 0xF4, 0x50, 0x98, 0x2E, 0xF2, 0xB0, 0x9B,
 0x01, 0xF0, 0x08, 0x6C, 0x00, 0x6E, 0x40, 0xEA,
 0xCE, 0xF4, 0x50, 0x98, 0x01, 0xF0, 0x14, 0x6C,
 0x1F, 0xF4, 0x00, 0x6D, 0x0F, 0x6E, 0x40, 0xEA,
-0x10, 0xF0, 0x23, 0x6A, 0x2E, 0xF3, 0x1C, 0x9A,
+0x10, 0xF0, 0x23, 0x6A, 0x8E, 0xF2, 0x1C, 0x9A,
 0x07, 0x92, 0x91, 0x67, 0x02, 0x6D, 0x4C, 0xE8,
-0x10, 0xF0, 0x23, 0x6A, 0x4E, 0xF3, 0x40, 0x9A,
+0x10, 0xF0, 0x23, 0x6A, 0xAE, 0xF2, 0x40, 0x9A,
 0x4D, 0xE8, 0x00, 0x18, 0x6A, 0xC7, 0x10, 0xF0,
-0x23, 0x6A, 0x0E, 0xF3, 0xFC, 0x9A, 0x91, 0x67,
+0x23, 0x6A, 0x6E, 0xF2, 0xFC, 0x9A, 0x91, 0x67,
 0x00, 0x6D, 0x18, 0x6E, 0x04, 0xD0, 0x80, 0x18,
 0x3E, 0x08, 0x06, 0x95, 0x91, 0x67, 0x02, 0x67,
 0x80, 0x18, 0xF3, 0x07, 0x0C, 0x22, 0x07, 0x92,
@@ -40822,69 +40641,69 @@ u8 array_mp_8821c_fw_spic[] = {
 0x04, 0x10, 0x0C, 0x93, 0x02, 0x73, 0x03, 0x61,
 0x05, 0x58, 0x00, 0xF1, 0x13, 0x60, 0x0C, 0x93,
 0x30, 0xF0, 0x21, 0x6A, 0x0A, 0x94, 0xF1, 0xF0,
-0x78, 0xDA, 0x10, 0xF0, 0x23, 0x6A, 0x0E, 0xF3,
+0x78, 0xDA, 0x10, 0xF0, 0x23, 0x6A, 0x6E, 0xF2,
 0xFC, 0x9A, 0x00, 0x6D, 0x18, 0x6E, 0x80, 0x18,
 0x33, 0x08, 0x22, 0x67, 0x0C, 0x92, 0x06, 0x5A,
 0x08, 0x60, 0x48, 0x33, 0x10, 0xF0, 0x23, 0x6A,
-0x0E, 0xF1, 0x04, 0x4A, 0x69, 0xE2, 0x40, 0x9A,
+0x6E, 0xF0, 0x04, 0x4A, 0x69, 0xE2, 0x40, 0x9A,
 0x00, 0xEA, 0x51, 0x67, 0xDF, 0x10, 0x01, 0x6D,
 0xA1, 0xF0, 0x0C, 0x6C, 0xAB, 0xED, 0x00, 0x18,
-0xC2, 0xD2, 0x10, 0xF0, 0x23, 0x6B, 0x4E, 0xF3,
+0x9A, 0xD2, 0x10, 0xF0, 0x23, 0x6B, 0xAE, 0xF2,
 0x64, 0x9B, 0x30, 0xF0, 0x20, 0x68, 0xCE, 0xF4,
 0xF0, 0x98, 0x4C, 0xEB, 0x10, 0xF0, 0x23, 0x6A,
-0x4E, 0xF3, 0xC8, 0x9A, 0x01, 0x6D, 0xA1, 0xF0,
+0xAE, 0xF2, 0xC8, 0x9A, 0x01, 0x6D, 0xA1, 0xF0,
 0x0C, 0x6C, 0xAB, 0xED, 0x6D, 0xEE, 0x40, 0xEF,
 0x10, 0xF0, 0x23, 0x6B, 0xCE, 0xF4, 0x50, 0x98,
-0xC1, 0xF0, 0x04, 0x6C, 0xCE, 0xF2, 0xAC, 0x9B,
+0xC1, 0xF0, 0x04, 0x6C, 0x2E, 0xF2, 0xAC, 0x9B,
 0xB8, 0x10, 0x01, 0x70, 0x09, 0x61, 0x30, 0xF0,
 0x20, 0x6A, 0xCE, 0xF4, 0x50, 0x9A, 0x01, 0xF2,
 0x00, 0x6C, 0x10, 0x6D, 0x01, 0x6E, 0x08, 0x10,
 0x30, 0xF0, 0x20, 0x6A, 0xCE, 0xF4, 0x50, 0x9A,
 0x01, 0xF2, 0x00, 0x6C, 0x10, 0x6D, 0x00, 0x6E,
 0x40, 0xEA, 0x01, 0x6D, 0xA1, 0xF0, 0x0C, 0x6C,
-0xAB, 0xED, 0x00, 0x18, 0xC2, 0xD2, 0x10, 0xF0,
-0x23, 0x6B, 0x4E, 0xF3, 0xEC, 0x9B, 0x0F, 0x6E,
+0xAB, 0xED, 0x00, 0x18, 0x9A, 0xD2, 0x10, 0xF0,
+0x23, 0x6B, 0xAE, 0xF2, 0xEC, 0x9B, 0x0F, 0x6E,
 0x0C, 0xEE, 0x4C, 0xEF, 0x10, 0xF0, 0x23, 0x6A,
-0x4E, 0xF3, 0x50, 0x9A, 0xC8, 0x36, 0x01, 0x6D,
+0xAE, 0xF2, 0x50, 0x9A, 0xC8, 0x36, 0x01, 0x6D,
 0x4D, 0xEE, 0x30, 0xF0, 0x20, 0x6A, 0xCE, 0xF4,
 0x70, 0x9A, 0xED, 0xEE, 0xA1, 0xF0, 0x0C, 0x6C,
 0xAB, 0xED, 0x40, 0xEB, 0x30, 0xF0, 0x20, 0x6B,
 0xCE, 0xF4, 0x50, 0x9B, 0x10, 0xF0, 0x23, 0x6B,
-0xCE, 0xF2, 0xAC, 0x9B, 0xC1, 0xF0, 0x04, 0x6C,
+0x2E, 0xF2, 0xAC, 0x9B, 0xC1, 0xF0, 0x04, 0x6C,
 0x01, 0x6E, 0x40, 0xEA, 0x01, 0xF4, 0x01, 0x6A,
 0x4B, 0xEA, 0x2C, 0xEA, 0x01, 0xF0, 0x00, 0x6B,
 0x2F, 0x10, 0x01, 0x6D, 0xA1, 0xF0, 0x0C, 0x6C,
-0xAB, 0xED, 0x00, 0x18, 0xC2, 0xD2, 0x10, 0xF0,
-0x23, 0x6B, 0x4E, 0xF3, 0xF4, 0x9B, 0x0F, 0x6E,
+0xAB, 0xED, 0x00, 0x18, 0x9A, 0xD2, 0x10, 0xF0,
+0x23, 0x6B, 0xAE, 0xF2, 0xF4, 0x9B, 0x0F, 0x6E,
 0x0C, 0xEE, 0x4C, 0xEF, 0x10, 0xF0, 0x23, 0x6A,
-0x4E, 0xF3, 0x58, 0x9A, 0xC8, 0x36, 0x01, 0x6D,
+0xAE, 0xF2, 0x58, 0x9A, 0xC8, 0x36, 0x01, 0x6D,
 0x4D, 0xEE, 0x30, 0xF0, 0x20, 0x6A, 0xCE, 0xF4,
 0x70, 0x9A, 0xED, 0xEE, 0xA1, 0xF0, 0x0C, 0x6C,
 0xAB, 0xED, 0x40, 0xEB, 0x30, 0xF0, 0x20, 0x6B,
 0xCE, 0xF4, 0x50, 0x9B, 0x10, 0xF0, 0x23, 0x6B,
-0xCE, 0xF2, 0xAC, 0x9B, 0xC1, 0xF0, 0x04, 0x6C,
+0x2E, 0xF2, 0xAC, 0x9B, 0xC1, 0xF0, 0x04, 0x6C,
 0x01, 0x6E, 0x40, 0xEA, 0x01, 0xF4, 0x01, 0x6A,
 0x4B, 0xEA, 0x2C, 0xEA, 0x00, 0xF4, 0x00, 0x6B,
 0x6D, 0xEA, 0x48, 0x10, 0x01, 0x6D, 0xA1, 0xF0,
-0x0C, 0x6C, 0xAB, 0xED, 0x00, 0x18, 0xC2, 0xD2,
-0x10, 0xF0, 0x23, 0x6B, 0x4E, 0xF3, 0x7C, 0x9B,
+0x0C, 0x6C, 0xAB, 0xED, 0x00, 0x18, 0x9A, 0xD2,
+0x10, 0xF0, 0x23, 0x6B, 0xAE, 0xF2, 0x7C, 0x9B,
 0x30, 0xF0, 0x20, 0x68, 0x01, 0x6D, 0x4C, 0xEB,
 0x10, 0xF0, 0x23, 0x6A, 0xCE, 0xF4, 0xF0, 0x98,
-0xA1, 0xF0, 0x0C, 0x6C, 0xAB, 0xED, 0x6E, 0xF3,
+0xA1, 0xF0, 0x0C, 0x6C, 0xAB, 0xED, 0xCE, 0xF2,
 0xC0, 0x9A, 0x17, 0x10, 0x01, 0x6D, 0xA1, 0xF0,
-0x0C, 0x6C, 0xAB, 0xED, 0x00, 0x18, 0xC2, 0xD2,
-0x10, 0xF0, 0x23, 0x6B, 0x4E, 0xF3, 0x7C, 0x9B,
+0x0C, 0x6C, 0xAB, 0xED, 0x00, 0x18, 0x9A, 0xD2,
+0x10, 0xF0, 0x23, 0x6B, 0xAE, 0xF2, 0x7C, 0x9B,
 0x30, 0xF0, 0x20, 0x68, 0xCE, 0xF4, 0xF0, 0x98,
-0x4C, 0xEB, 0x10, 0xF0, 0x23, 0x6A, 0x6E, 0xF3,
+0x4C, 0xEB, 0x10, 0xF0, 0x23, 0x6A, 0xCE, 0xF2,
 0xC4, 0x9A, 0x01, 0x6D, 0xA1, 0xF0, 0x0C, 0x6C,
 0xAB, 0xED, 0x6D, 0xEE, 0x40, 0xEF, 0x10, 0xF0,
-0x23, 0x6B, 0xCE, 0xF2, 0xAC, 0x9B, 0xCE, 0xF4,
+0x23, 0x6B, 0x2E, 0xF2, 0xAC, 0x9B, 0xCE, 0xF4,
 0x50, 0x98, 0xC1, 0xF0, 0x04, 0x6C, 0x00, 0x6E,
 0x40, 0xEA, 0x10, 0xF0, 0x23, 0x6B, 0xCE, 0xF4,
-0x50, 0x98, 0x8E, 0xF2, 0xAC, 0x9B, 0xC1, 0xF0,
+0x50, 0x98, 0xEE, 0xF1, 0xAC, 0x9B, 0xC1, 0xF0,
 0x08, 0x6C, 0x01, 0x6E, 0x40, 0xEA, 0x01, 0xF4,
 0x00, 0x6A, 0x2D, 0xEA, 0x04, 0xD2, 0x10, 0xF0,
-0x23, 0x6A, 0x0A, 0x94, 0x0E, 0xF3, 0xFC, 0x9A,
+0x23, 0x6A, 0x0A, 0x94, 0x6E, 0xF2, 0xFC, 0x9A,
 0x00, 0x6D, 0x18, 0x6E, 0x01, 0x49, 0x80, 0x18,
 0x3E, 0x08, 0x00, 0x6C, 0x01, 0x21, 0x01, 0x6C,
 0xFF, 0x6B, 0x4C, 0xEB, 0x8C, 0xEB, 0x06, 0x23,
@@ -40905,7 +40724,7 @@ u8 array_mp_8821c_fw_spic[] = {
 0xC0, 0xF5, 0x7C, 0xC2, 0xFF, 0x6D, 0xFF, 0x4B,
 0xAC, 0xEB, 0x00, 0x6C, 0x07, 0x5B, 0xC0, 0xF5,
 0x9F, 0xC2, 0x08, 0x60, 0x10, 0xF0, 0x23, 0x6A,
-0x68, 0x33, 0x0E, 0xF1, 0x1C, 0x4A, 0x69, 0xE2,
+0x68, 0x33, 0x6E, 0xF0, 0x1C, 0x4A, 0x69, 0xE2,
 0x40, 0x9A, 0x00, 0xEA, 0x01, 0x6B, 0xC0, 0xF5,
 0x7D, 0xC2, 0xC0, 0xF5, 0x9E, 0xC2, 0x0A, 0x10,
 0x30, 0xF0, 0x20, 0x6A, 0xAF, 0xF4, 0x18, 0x4A,
@@ -40935,26 +40754,26 @@ u8 array_mp_8821c_fw_spic[] = {
 0x6E, 0xE9, 0x05, 0x2A, 0x3B, 0x10, 0x01, 0x6A,
 0x4E, 0xE9, 0x04, 0xD2, 0x02, 0x10, 0x00, 0x6A,
 0x04, 0xD2, 0x10, 0xF0, 0x23, 0x6B, 0x30, 0xF0,
-0x20, 0x68, 0x6E, 0xF3, 0xA8, 0x9B, 0xCE, 0xF4,
+0x20, 0x68, 0xCE, 0xF2, 0xA8, 0x9B, 0xCE, 0xF4,
 0x50, 0x98, 0x4C, 0x6C, 0x02, 0x6E, 0x40, 0xEA,
 0x04, 0x93, 0x14, 0x2B, 0xCE, 0xF4, 0x50, 0x98,
 0xA1, 0xF4, 0x14, 0x6C, 0xFF, 0x6D, 0x77, 0x6E,
 0x40, 0xEA, 0x01, 0x59, 0x38, 0x67, 0x10, 0xF0,
 0x23, 0x6B, 0x02, 0x6E, 0xCE, 0xF4, 0x50, 0x98,
-0xA1, 0xF4, 0x14, 0x6C, 0x0E, 0xF3, 0xA0, 0x9B,
+0xA1, 0xF4, 0x14, 0x6C, 0x6E, 0xF2, 0xA0, 0x9B,
 0x3B, 0xE6, 0x12, 0x10, 0xCE, 0xF4, 0x50, 0x98,
 0xA1, 0xF4, 0x14, 0x6C, 0xFF, 0x6D, 0x66, 0x6E,
 0x40, 0xEA, 0x10, 0xF0, 0x23, 0x6B, 0x01, 0x59,
-0xCE, 0xF4, 0x50, 0x98, 0x0E, 0xF3, 0xA0, 0x9B,
+0xCE, 0xF4, 0x50, 0x98, 0x6E, 0xF2, 0xA0, 0x9B,
 0xD8, 0x67, 0xA1, 0xF4, 0x14, 0x6C, 0x01, 0x4E,
 0x40, 0xEA, 0x06, 0x10, 0x30, 0xF0, 0x21, 0x6A,
 0x90, 0xF2, 0x59, 0xA2, 0xC0, 0x22, 0xC3, 0x17,
 0x09, 0x97, 0x08, 0x91, 0x07, 0x90, 0x05, 0x63,
 0x00, 0xEF, 0x00, 0x65, 0xFF, 0x6A, 0x4C, 0xEC,
 0x0F, 0x5C, 0x09, 0x60, 0x10, 0xF0, 0x23, 0x6A,
-0x6E, 0xF3, 0x6C, 0x9A, 0xFC, 0x6A, 0x80, 0xA3,
+0xCE, 0xF2, 0x6C, 0x9A, 0xFC, 0x6A, 0x80, 0xA3,
 0x8C, 0xEA, 0x40, 0xC3, 0x20, 0xE8, 0x24, 0x5C,
-0x0A, 0x61, 0x10, 0xF0, 0x23, 0x6B, 0x6E, 0xF3,
+0x0A, 0x61, 0x10, 0xF0, 0x23, 0x6B, 0xCE, 0xF2,
 0x8C, 0x9B, 0x03, 0x6D, 0x60, 0xA4, 0x4C, 0xEB,
 0xAD, 0xEB, 0x4C, 0xEB, 0x60, 0xC4, 0x20, 0xE8,
 0x10, 0xF0, 0x21, 0x6A, 0x84, 0xF4, 0x08, 0x4A,
@@ -40988,21 +40807,21 @@ u8 array_mp_8821c_fw_spic[] = {
 0x10, 0xF0, 0x21, 0x6A, 0xC6, 0xF1, 0x0C, 0x4A,
 0x30, 0xF0, 0x20, 0x6B, 0xCE, 0xF6, 0x40, 0xDB,
 0x20, 0xE8, 0x00, 0x65, 0x00, 0x00, 0x00, 0x00,
-0x3F, 0x9C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
+0xE7, 0x91, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
 };
 
-u32 array_length_mp_8821c_fw_spic = 73216;
+u32 array_length_mp_8821c_fw_spic = 73056;
 
 #ifdef CONFIG_WOWLAN
 
 u8 array_mp_8821c_fw_wowlan[] = {
-0x21, 0x88, 0x00, 0x00, 0x18, 0x00, 0x08, 0x00,
-0x0C, 0xBC, 0x11, 0xA2, 0x00, 0x00, 0x00, 0x00,
-0x01, 0x0C, 0x12, 0x0D, 0xE4, 0x07, 0x00, 0x00,
+0x21, 0x88, 0x00, 0x00, 0x18, 0x00, 0x05, 0x00,
+0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00,
+0x09, 0x06, 0x0F, 0x14, 0xE3, 0x07, 0x00, 0x00,
 0x18, 0x00, 0x00, 0x00, 0x0C, 0x00, 0x00, 0x00,
 0x00, 0x00, 0x20, 0x80, 0xC0, 0x7C, 0x00, 0x00,
 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00,
-0x38, 0xBA, 0x00, 0x00, 0x38, 0x5C, 0x00, 0x00,
+0x50, 0xB8, 0x00, 0x00, 0x68, 0x5B, 0x00, 0x00,
 0x00, 0x00, 0x10, 0x80, 0x00, 0x00, 0x03, 0x80,
 0x00, 0x00, 0x04, 0x04, 0x08, 0x08, 0x08, 0x08,
 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C,
@@ -41053,7 +40872,7 @@ u8 array_mp_8821c_fw_wowlan[] = {
 0x01, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00,
 0x00, 0x01, 0x10, 0x00, 0x01, 0x00, 0x03, 0x80,
 0x99, 0x01, 0x03, 0x80, 0x99, 0x01, 0x03, 0x80,
-0x01, 0x58, 0x03, 0x80, 0x00, 0x00, 0x00, 0x00,
+0xD9, 0x56, 0x03, 0x80, 0x00, 0x00, 0x00, 0x00,
 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
@@ -44849,7 +44668,7 @@ u8 array_mp_8821c_fw_wowlan[] = {
 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-0xF5, 0x59, 0x03, 0x80, 0x01, 0x00, 0x00, 0x00,
+0xCD, 0x58, 0x03, 0x80, 0x01, 0x00, 0x00, 0x00,
 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
@@ -44996,7 +44815,7 @@ u8 array_mp_8821c_fw_wowlan[] = {
 0x00, 0x0C, 0x0E, 0x38, 0x18, 0x00, 0x00, 0x00,
 0x00, 0x83, 0x01, 0x06, 0x80, 0x03, 0x00, 0x00,
 0x00, 0x00, 0x70, 0xE0, 0x00, 0x00, 0x00, 0x00,
-0x30, 0xC6, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0xD0, 0xC9, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
 0x30, 0xF0, 0x21, 0x6C, 0x18, 0xF0, 0x00, 0x4C,
 0xBC, 0x65, 0x1F, 0xF7, 0x00, 0x6C, 0x8C, 0xB9,
 0x00, 0x65, 0x00, 0x65, 0x00, 0x65, 0x77, 0xF0,
@@ -45022,7 +44841,7 @@ u8 array_mp_8821c_fw_wowlan[] = {
 0xE3, 0xEC, 0xB8, 0x67, 0xFB, 0x2D, 0x10, 0xF0,
 0x23, 0x6C, 0xC0, 0xF0, 0x01, 0x4C, 0x00, 0xEC,
 0xFD, 0x63, 0x05, 0x62, 0x04, 0xD0, 0x10, 0xF0,
-0x24, 0x6B, 0x76, 0xF4, 0x7C, 0x9B, 0x10, 0xF0,
+0x24, 0x6B, 0x96, 0xF2, 0x78, 0x9B, 0x10, 0xF0,
 0x23, 0x6A, 0xC0, 0xF0, 0x01, 0x4A, 0x40, 0xDB,
 0x00, 0x1C, 0x94, 0x00, 0x80, 0x18, 0xBB, 0x06,
 0x80, 0x18, 0xB4, 0x05, 0x80, 0x18, 0xD6, 0x05,
@@ -45042,7 +44861,7 @@ u8 array_mp_8821c_fw_wowlan[] = {
 0x15, 0xF4, 0x00, 0x4A, 0x43, 0xDC, 0xCE, 0xF7,
 0x40, 0x98, 0x00, 0x6D, 0x40, 0xEA, 0x30, 0xF0,
 0x21, 0x6B, 0xD0, 0xF3, 0x4C, 0xDB, 0x10, 0xF0,
-0x24, 0x6A, 0x56, 0xF7, 0x6C, 0x9A, 0xFF, 0xF7,
+0x24, 0x6A, 0x76, 0xF5, 0x68, 0x9A, 0xFF, 0xF7,
 0x1F, 0x6C, 0x10, 0xF0, 0x00, 0x6D, 0x40, 0xAB,
 0xAB, 0xED, 0x8C, 0xEA, 0xAD, 0xEA, 0x8C, 0xEA,
 0x40, 0xCB, 0x30, 0xF0, 0x20, 0x6A, 0xAE, 0xF7,
@@ -45183,292 +45002,292 @@ u8 array_mp_8821c_fw_wowlan[] = {
 0x05, 0x97, 0x03, 0x63, 0x00, 0xEF, 0x00, 0x65,
 0xFD, 0x63, 0x05, 0x62, 0x00, 0x18, 0x74, 0xC1,
 0x05, 0x97, 0x03, 0x63, 0x00, 0xEF, 0x00, 0x65,
-0x10, 0xF0, 0x24, 0x6B, 0x76, 0xF4, 0x7C, 0x9B,
+0x10, 0xF0, 0x24, 0x6B, 0x96, 0xF2, 0x78, 0x9B,
 0x10, 0xF0, 0x23, 0x6A, 0xC0, 0xF5, 0x11, 0x4A,
 0x40, 0xDB, 0x01, 0x4A, 0x40, 0xDB, 0x20, 0xE8,
-0x10, 0xF0, 0x24, 0x6B, 0x76, 0xF4, 0x7C, 0x9B,
+0x10, 0xF0, 0x24, 0x6B, 0x96, 0xF2, 0x78, 0x9B,
 0x10, 0xF0, 0x23, 0x6A, 0xE0, 0xF5, 0x09, 0x4A,
 0x40, 0xDB, 0x01, 0x4A, 0x40, 0xDB, 0x20, 0xE8,
-0x10, 0xF0, 0x24, 0x6B, 0x76, 0xF4, 0x7C, 0x9B,
+0x10, 0xF0, 0x24, 0x6B, 0x96, 0xF2, 0x78, 0x9B,
 0x10, 0xF0, 0x23, 0x6A, 0x00, 0xF6, 0x01, 0x4A,
-0x40, 0xDB, 0x10, 0xF0, 0x24, 0x6A, 0x57, 0xF1,
-0x4C, 0x9A, 0xC0, 0x9A, 0x10, 0xF0, 0x24, 0x6A,
-0x57, 0xF1, 0x50, 0x9A, 0xA0, 0x9A, 0x10, 0xF0,
-0x24, 0x6A, 0x57, 0xF1, 0x54, 0x9A, 0x80, 0x9A,
-0x10, 0xF0, 0x24, 0x6A, 0x57, 0xF1, 0x58, 0x9A,
+0x40, 0xDB, 0x10, 0xF0, 0x24, 0x6A, 0x76, 0xF7,
+0x44, 0x9A, 0xC0, 0x9A, 0x10, 0xF0, 0x24, 0x6A,
+0x76, 0xF7, 0x48, 0x9A, 0xA0, 0x9A, 0x10, 0xF0,
+0x24, 0x6A, 0x76, 0xF7, 0x4C, 0x9A, 0x80, 0x9A,
+0x10, 0xF0, 0x24, 0x6A, 0x76, 0xF7, 0x50, 0x9A,
 0x40, 0x9A, 0x33, 0x22, 0x10, 0xF0, 0x24, 0x6A,
-0x16, 0xF5, 0x7C, 0x9A, 0x10, 0xF0, 0x24, 0x6F,
-0x57, 0xF1, 0xFC, 0x9F, 0x40, 0x9B, 0xED, 0xEA,
-0x40, 0xDB, 0x10, 0xF0, 0x24, 0x6A, 0x77, 0xF1,
-0x40, 0x9A, 0xFF, 0x6B, 0xC0, 0xDA, 0x10, 0xF0,
-0x24, 0x6A, 0x77, 0xF1, 0x44, 0x9A, 0xA0, 0xDA,
-0x10, 0xF0, 0x24, 0x6A, 0xD6, 0xF6, 0x54, 0x9A,
+0x36, 0xF3, 0x78, 0x9A, 0x10, 0xF0, 0x24, 0x6F,
+0x76, 0xF7, 0xF4, 0x9F, 0x40, 0x9B, 0xED, 0xEA,
+0x40, 0xDB, 0x10, 0xF0, 0x24, 0x6A, 0x76, 0xF7,
+0x58, 0x9A, 0xFF, 0x6B, 0xC0, 0xDA, 0x10, 0xF0,
+0x24, 0x6A, 0x76, 0xF7, 0x5C, 0x9A, 0xA0, 0xDA,
+0x10, 0xF0, 0x24, 0x6A, 0xF6, 0xF4, 0x50, 0x9A,
 0x10, 0x6D, 0xAB, 0xED, 0x80, 0xDA, 0x10, 0xF0,
-0x24, 0x6A, 0x77, 0xF1, 0x88, 0x9A, 0x40, 0xA4,
+0x24, 0x6A, 0x96, 0xF7, 0x80, 0x9A, 0x40, 0xA4,
 0x6C, 0xEA, 0xAC, 0xEA, 0x02, 0x6D, 0xAD, 0xEA,
 0x6C, 0xEA, 0x40, 0xC4, 0x10, 0xF0, 0x24, 0x6A,
-0x16, 0xF7, 0x94, 0x9A, 0x80, 0x6D, 0xAB, 0xED,
+0x36, 0xF5, 0x90, 0x9A, 0x80, 0x6D, 0xAB, 0xED,
 0x40, 0xA4, 0x6C, 0xEA, 0xAE, 0xEA, 0x6C, 0xEA,
-0x40, 0xC4, 0x10, 0xF0, 0x24, 0x6B, 0x76, 0xF4,
-0x7C, 0x9B, 0x10, 0xF0, 0x23, 0x6A, 0x00, 0xF6,
+0x40, 0xC4, 0x10, 0xF0, 0x24, 0x6B, 0x96, 0xF2,
+0x78, 0x9B, 0x10, 0xF0, 0x23, 0x6A, 0x00, 0xF6,
 0x02, 0x4A, 0x40, 0xDB, 0x20, 0xE8, 0x00, 0x65,
 0xFD, 0x63, 0x05, 0x62, 0x10, 0xF0, 0x24, 0x6B,
-0x76, 0xF4, 0x7C, 0x9B, 0x10, 0xF0, 0x23, 0x6A,
+0x96, 0xF2, 0x78, 0x9B, 0x10, 0xF0, 0x23, 0x6A,
 0xA0, 0xF6, 0x19, 0x4A, 0x40, 0xDB, 0x00, 0x18,
-0xF9, 0xE1, 0x30, 0xF0, 0x20, 0x6A, 0x00, 0xF2,
+0x87, 0xE1, 0x30, 0xF0, 0x20, 0x6A, 0x00, 0xF2,
 0x6C, 0x9A, 0x6C, 0x23, 0x01, 0x6A, 0x6C, 0xEA,
-0x02, 0x22, 0x00, 0x18, 0x36, 0xE2, 0x30, 0xF0,
+0x02, 0x22, 0x00, 0x18, 0xC4, 0xE1, 0x30, 0xF0,
 0x20, 0x6A, 0x00, 0xF2, 0x4C, 0x9A, 0x02, 0x6B,
-0x6C, 0xEA, 0x02, 0x22, 0x00, 0x18, 0x52, 0xE3,
+0x6C, 0xEA, 0x02, 0x22, 0x00, 0x18, 0xD9, 0xE2,
 0x30, 0xF0, 0x20, 0x6A, 0x00, 0xF2, 0x4C, 0x9A,
 0x04, 0x6B, 0x6C, 0xEA, 0x02, 0x22, 0x00, 0x18,
-0x39, 0xE3, 0x30, 0xF0, 0x20, 0x6A, 0x00, 0xF2,
+0xC0, 0xE2, 0x30, 0xF0, 0x20, 0x6A, 0x00, 0xF2,
 0x4C, 0x9A, 0x08, 0x6B, 0x6C, 0xEA, 0x02, 0x22,
-0x00, 0x18, 0x37, 0xE2, 0x30, 0xF0, 0x20, 0x6A,
+0x00, 0x18, 0xC5, 0xE1, 0x30, 0xF0, 0x20, 0x6A,
 0x00, 0xF2, 0x4C, 0x9A, 0x10, 0x6B, 0x6C, 0xEA,
-0x02, 0x22, 0x00, 0x18, 0x38, 0xE2, 0x30, 0xF0,
+0x02, 0x22, 0x00, 0x18, 0xC6, 0xE1, 0x30, 0xF0,
 0x20, 0x6A, 0x00, 0xF2, 0x4C, 0x9A, 0x20, 0x6B,
-0x6C, 0xEA, 0x02, 0x22, 0x00, 0x18, 0x39, 0xE2,
+0x6C, 0xEA, 0x02, 0x22, 0x00, 0x18, 0xC7, 0xE1,
 0x30, 0xF0, 0x20, 0x6A, 0x00, 0xF2, 0x4C, 0x9A,
 0x40, 0x6B, 0x6C, 0xEA, 0x02, 0x22, 0x00, 0x18,
-0x3A, 0xE2, 0x30, 0xF0, 0x20, 0x6A, 0x00, 0xF2,
+0xC8, 0xE1, 0x30, 0xF0, 0x20, 0x6A, 0x00, 0xF2,
 0x4C, 0x9A, 0x80, 0x6B, 0x6C, 0xEA, 0x02, 0x22,
-0x00, 0x18, 0x35, 0xE3, 0x30, 0xF0, 0x20, 0x6B,
+0x00, 0x18, 0xBC, 0xE2, 0x30, 0xF0, 0x20, 0x6B,
 0x00, 0xF2, 0x6C, 0x9B, 0xFF, 0x6A, 0x01, 0x4A,
-0x6C, 0xEA, 0x02, 0x22, 0x00, 0x18, 0x2D, 0xE3,
+0x6C, 0xEA, 0x02, 0x22, 0x00, 0x18, 0xB4, 0xE2,
 0x30, 0xF0, 0x20, 0x6B, 0x00, 0xF2, 0x6C, 0x9B,
 0x04, 0xF0, 0x00, 0x6A, 0x6C, 0xEA, 0x02, 0x22,
-0x00, 0x18, 0x3B, 0xE2, 0x30, 0xF0, 0x20, 0x6B,
+0x00, 0x18, 0xC9, 0xE1, 0x30, 0xF0, 0x20, 0x6B,
 0x00, 0xF2, 0x6C, 0x9B, 0x08, 0xF0, 0x00, 0x6A,
-0x6C, 0xEA, 0x02, 0x22, 0x00, 0x18, 0x3C, 0xE2,
+0x6C, 0xEA, 0x02, 0x22, 0x00, 0x18, 0xCA, 0xE1,
 0x30, 0xF0, 0x20, 0x6B, 0x00, 0xF2, 0x6C, 0x9B,
 0x10, 0xF0, 0x00, 0x6A, 0x6C, 0xEA, 0x02, 0x22,
-0x00, 0x18, 0x3D, 0xE2, 0x30, 0xF0, 0x20, 0x6A,
+0x00, 0x18, 0xCB, 0xE1, 0x30, 0xF0, 0x20, 0x6A,
 0x00, 0xF2, 0x70, 0x9A, 0x3C, 0x23, 0x01, 0x6A,
-0x6C, 0xEA, 0x02, 0x22, 0x00, 0x18, 0x0C, 0xE3,
+0x6C, 0xEA, 0x02, 0x22, 0x00, 0x18, 0x9A, 0xE2,
 0x30, 0xF0, 0x20, 0x6A, 0x00, 0xF2, 0x50, 0x9A,
 0x02, 0x6B, 0x6C, 0xEA, 0x02, 0x22, 0x00, 0x18,
-0x3E, 0xE2, 0x30, 0xF0, 0x20, 0x6B, 0x00, 0xF2,
+0xCC, 0xE1, 0x30, 0xF0, 0x20, 0x6B, 0x00, 0xF2,
 0x70, 0x9B, 0x04, 0xF0, 0x00, 0x6A, 0x6C, 0xEA,
-0x03, 0x22, 0x00, 0x6C, 0x00, 0x18, 0xF2, 0xE2,
+0x03, 0x22, 0x00, 0x6C, 0x00, 0x18, 0x80, 0xE2,
 0x30, 0xF0, 0x20, 0x6B, 0x00, 0xF2, 0x70, 0x9B,
 0x08, 0xF0, 0x00, 0x6A, 0x6C, 0xEA, 0x03, 0x22,
-0x00, 0x6C, 0x00, 0x18, 0xD5, 0xE2, 0x10, 0xF0,
-0x24, 0x6A, 0x30, 0xF0, 0x20, 0x6B, 0xB6, 0xF5,
-0x50, 0x9A, 0x00, 0xF2, 0x70, 0x9B, 0x6C, 0xEA,
-0x02, 0x22, 0x00, 0x18, 0x40, 0xE2, 0x10, 0xF0,
-0x24, 0x6A, 0x30, 0xF0, 0x20, 0x6B, 0x16, 0xF7,
-0x50, 0x9A, 0x00, 0xF2, 0x70, 0x9B, 0x6C, 0xEA,
-0x02, 0x22, 0x00, 0x18, 0xD1, 0xE2, 0x30, 0xF0,
+0x00, 0x6C, 0x00, 0x18, 0x63, 0xE2, 0x10, 0xF0,
+0x24, 0x6A, 0x30, 0xF0, 0x20, 0x6B, 0xD6, 0xF3,
+0x4C, 0x9A, 0x00, 0xF2, 0x70, 0x9B, 0x6C, 0xEA,
+0x02, 0x22, 0x00, 0x18, 0xCE, 0xE1, 0x10, 0xF0,
+0x24, 0x6A, 0x30, 0xF0, 0x20, 0x6B, 0x36, 0xF5,
+0x4C, 0x9A, 0x00, 0xF2, 0x70, 0x9B, 0x6C, 0xEA,
+0x02, 0x22, 0x00, 0x18, 0x5F, 0xE2, 0x30, 0xF0,
 0x20, 0x6A, 0x00, 0xF2, 0x74, 0x9A, 0x55, 0x23,
 0x01, 0x6A, 0x6C, 0xEA, 0x03, 0x22, 0x01, 0x6C,
-0x00, 0x18, 0xF2, 0xE2, 0x30, 0xF0, 0x20, 0x6A,
+0x00, 0x18, 0x80, 0xE2, 0x30, 0xF0, 0x20, 0x6A,
 0x00, 0xF2, 0x54, 0x9A, 0x02, 0x6B, 0x6C, 0xEA,
-0x03, 0x22, 0x01, 0x6C, 0x00, 0x18, 0xD5, 0xE2,
+0x03, 0x22, 0x01, 0x6C, 0x00, 0x18, 0x63, 0xE2,
 0x30, 0xF0, 0x20, 0x6A, 0x00, 0xF2, 0x54, 0x9A,
 0x04, 0x6B, 0x6C, 0xEA, 0x03, 0x22, 0x02, 0x6C,
-0x00, 0x18, 0xF2, 0xE2, 0x30, 0xF0, 0x20, 0x6A,
+0x00, 0x18, 0x80, 0xE2, 0x30, 0xF0, 0x20, 0x6A,
 0x00, 0xF2, 0x54, 0x9A, 0x08, 0x6B, 0x6C, 0xEA,
-0x03, 0x22, 0x02, 0x6C, 0x00, 0x18, 0xD5, 0xE2,
+0x03, 0x22, 0x02, 0x6C, 0x00, 0x18, 0x63, 0xE2,
 0x30, 0xF0, 0x20, 0x6A, 0x00, 0xF2, 0x54, 0x9A,
 0x10, 0x6B, 0x6C, 0xEA, 0x03, 0x22, 0x03, 0x6C,
-0x00, 0x18, 0xF2, 0xE2, 0x30, 0xF0, 0x20, 0x6A,
+0x00, 0x18, 0x80, 0xE2, 0x30, 0xF0, 0x20, 0x6A,
 0x00, 0xF2, 0x54, 0x9A, 0x20, 0x6B, 0x6C, 0xEA,
-0x03, 0x22, 0x03, 0x6C, 0x00, 0x18, 0xD5, 0xE2,
+0x03, 0x22, 0x03, 0x6C, 0x00, 0x18, 0x63, 0xE2,
 0x30, 0xF0, 0x20, 0x6A, 0x00, 0xF2, 0x54, 0x9A,
 0x40, 0x6B, 0x6C, 0xEA, 0x03, 0x22, 0x04, 0x6C,
-0x00, 0x18, 0xF2, 0xE2, 0x30, 0xF0, 0x20, 0x6A,
+0x00, 0x18, 0x80, 0xE2, 0x30, 0xF0, 0x20, 0x6A,
 0x00, 0xF2, 0x54, 0x9A, 0x80, 0x6B, 0x6C, 0xEA,
-0x03, 0x22, 0x04, 0x6C, 0x00, 0x18, 0xD5, 0xE2,
-0x10, 0xF0, 0x24, 0x6B, 0x76, 0xF4, 0x7C, 0x9B,
+0x03, 0x22, 0x04, 0x6C, 0x00, 0x18, 0x63, 0xE2,
+0x10, 0xF0, 0x24, 0x6B, 0x96, 0xF2, 0x78, 0x9B,
 0x10, 0xF0, 0x23, 0x6A, 0xA0, 0xF6, 0x1A, 0x4A,
 0x40, 0xDB, 0x05, 0x97, 0x03, 0x63, 0x00, 0xEF,
 0xFD, 0x63, 0x05, 0x62, 0x04, 0xD0, 0x10, 0xF0,
-0x24, 0x6B, 0x76, 0xF4, 0x7C, 0x9B, 0x10, 0xF0,
+0x24, 0x6B, 0x96, 0xF2, 0x78, 0x9B, 0x10, 0xF0,
 0x23, 0x6A, 0xE1, 0xF0, 0x11, 0x4A, 0x40, 0xDB,
-0x00, 0x18, 0xC9, 0xE1, 0x30, 0xF0, 0x20, 0x6A,
+0x00, 0x18, 0x57, 0xE1, 0x30, 0xF0, 0x20, 0x6A,
 0xE0, 0xF1, 0x5C, 0x9A, 0x22, 0x22, 0x00, 0x68,
 0x30, 0xF0, 0x20, 0x6B, 0xE0, 0xF1, 0x7C, 0x9B,
 0x02, 0xF0, 0x00, 0x6A, 0x44, 0xE8, 0x6C, 0xEA,
-0x03, 0x22, 0x90, 0x67, 0x00, 0x18, 0x35, 0xE2,
+0x03, 0x22, 0x90, 0x67, 0x00, 0x18, 0xC3, 0xE1,
 0x01, 0x48, 0x10, 0x70, 0xF1, 0x61, 0x30, 0xF0,
 0x20, 0x6A, 0xE0, 0xF1, 0x5C, 0x9A, 0x80, 0x6B,
-0x6C, 0xEA, 0x02, 0x22, 0x00, 0x18, 0x73, 0xE3,
-0x10, 0xF0, 0x24, 0x6B, 0x76, 0xF4, 0x7C, 0x9B,
+0x6C, 0xEA, 0x02, 0x22, 0x00, 0x18, 0xFA, 0xE2,
+0x10, 0xF0, 0x24, 0x6B, 0x96, 0xF2, 0x78, 0x9B,
 0x10, 0xF0, 0x23, 0x6A, 0xE1, 0xF0, 0x12, 0x4A,
 0x40, 0xDB, 0x05, 0x97, 0x04, 0x90, 0x03, 0x63,
 0x00, 0xEF, 0x00, 0x65, 0xFD, 0x63, 0x05, 0x62,
-0x10, 0xF0, 0x24, 0x6B, 0x76, 0xF4, 0x7C, 0x9B,
+0x10, 0xF0, 0x24, 0x6B, 0x96, 0xF2, 0x78, 0x9B,
 0x10, 0xF0, 0x23, 0x6A, 0x61, 0xF1, 0x05, 0x4A,
-0x40, 0xDB, 0x00, 0x18, 0xD0, 0xE1, 0x30, 0xF0,
+0x40, 0xDB, 0x00, 0x18, 0x5E, 0xE1, 0x30, 0xF0,
 0x20, 0x6A, 0xC0, 0xF1, 0x7C, 0x9A, 0x3E, 0x23,
 0x08, 0x6A, 0x6C, 0xEA, 0x03, 0x22, 0x00, 0x6C,
-0x00, 0x18, 0x64, 0xE2, 0x30, 0xF0, 0x20, 0x6A,
+0x00, 0x18, 0xF2, 0xE1, 0x30, 0xF0, 0x20, 0x6A,
 0xC0, 0xF1, 0x5C, 0x9A, 0x02, 0x6B, 0x6C, 0xEA,
-0x02, 0x22, 0x00, 0x18, 0x0E, 0xE2, 0x30, 0xF0,
+0x02, 0x22, 0x00, 0x18, 0x9C, 0xE1, 0x30, 0xF0,
 0x20, 0x6A, 0xC0, 0xF1, 0x5C, 0x9A, 0x10, 0x6B,
-0x6C, 0xEA, 0x02, 0x22, 0x00, 0x18, 0x6F, 0xE3,
+0x6C, 0xEA, 0x02, 0x22, 0x00, 0x18, 0xF6, 0xE2,
 0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1, 0x5C, 0x9A,
 0x20, 0x6B, 0x6C, 0xEA, 0x02, 0x22, 0x00, 0x18,
-0x6B, 0xE3, 0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1,
+0xF2, 0xE2, 0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1,
 0x5C, 0x9A, 0x40, 0x6B, 0x6C, 0xEA, 0x02, 0x22,
-0x00, 0x18, 0x13, 0xE2, 0x30, 0xF0, 0x20, 0x6B,
+0x00, 0x18, 0xA1, 0xE1, 0x30, 0xF0, 0x20, 0x6B,
 0xC0, 0xF1, 0x7C, 0x9B, 0xFF, 0x6A, 0x01, 0x4A,
-0x6C, 0xEA, 0x02, 0x22, 0x00, 0x18, 0x67, 0xE3,
+0x6C, 0xEA, 0x02, 0x22, 0x00, 0x18, 0xEE, 0xE2,
 0x30, 0xF0, 0x20, 0x6B, 0xC0, 0xF1, 0x7C, 0x9B,
 0x00, 0xF2, 0x00, 0x6A, 0x6C, 0xEA, 0x02, 0x22,
-0x00, 0x18, 0x63, 0xE3, 0x30, 0xF0, 0x20, 0x6A,
+0x00, 0x18, 0xEA, 0xE2, 0x30, 0xF0, 0x20, 0x6A,
 0xE0, 0xF1, 0x60, 0x9A, 0x7D, 0x23, 0x10, 0xF0,
-0x24, 0x6A, 0x77, 0xF1, 0x4C, 0x9A, 0x6C, 0xEA,
-0x03, 0x22, 0x00, 0x6C, 0x00, 0x18, 0xBF, 0xE2,
+0x24, 0x6A, 0x96, 0xF7, 0x44, 0x9A, 0x6C, 0xEA,
+0x03, 0x22, 0x00, 0x6C, 0x00, 0x18, 0x4D, 0xE2,
 0x10, 0xF0, 0x24, 0x6A, 0x30, 0xF0, 0x20, 0x6B,
-0x36, 0xF5, 0x40, 0x9A, 0xE0, 0xF1, 0x60, 0x9B,
+0x36, 0xF3, 0x5C, 0x9A, 0xE0, 0xF1, 0x60, 0x9B,
 0x6C, 0xEA, 0x03, 0x22, 0x01, 0x6C, 0x00, 0x18,
-0xBF, 0xE2, 0x10, 0xF0, 0x24, 0x6A, 0x30, 0xF0,
-0x20, 0x6B, 0x37, 0xF1, 0x5C, 0x9A, 0xE0, 0xF1,
+0x4D, 0xE2, 0x10, 0xF0, 0x24, 0x6A, 0x30, 0xF0,
+0x20, 0x6B, 0x56, 0xF7, 0x54, 0x9A, 0xE0, 0xF1,
 0x60, 0x9B, 0x6C, 0xEA, 0x03, 0x22, 0x02, 0x6C,
-0x00, 0x18, 0xBF, 0xE2, 0x10, 0xF0, 0x24, 0x6A,
-0x30, 0xF0, 0x20, 0x6B, 0xB6, 0xF5, 0x50, 0x9A,
+0x00, 0x18, 0x4D, 0xE2, 0x10, 0xF0, 0x24, 0x6A,
+0x30, 0xF0, 0x20, 0x6B, 0xD6, 0xF3, 0x4C, 0x9A,
 0xE0, 0xF1, 0x60, 0x9B, 0x6C, 0xEA, 0x03, 0x22,
-0x03, 0x6C, 0x00, 0x18, 0xBF, 0xE2, 0x10, 0xF0,
-0x24, 0x6A, 0x30, 0xF0, 0x20, 0x6B, 0x16, 0xF7,
-0x50, 0x9A, 0xE0, 0xF1, 0x60, 0x9B, 0x6C, 0xEA,
-0x03, 0x22, 0x04, 0x6C, 0x00, 0x18, 0xBF, 0xE2,
+0x03, 0x6C, 0x00, 0x18, 0x4D, 0xE2, 0x10, 0xF0,
+0x24, 0x6A, 0x30, 0xF0, 0x20, 0x6B, 0x36, 0xF5,
+0x4C, 0x9A, 0xE0, 0xF1, 0x60, 0x9B, 0x6C, 0xEA,
+0x03, 0x22, 0x04, 0x6C, 0x00, 0x18, 0x4D, 0xE2,
 0x10, 0xF0, 0x24, 0x6A, 0x30, 0xF0, 0x20, 0x6B,
-0x36, 0xF5, 0x54, 0x9A, 0xE0, 0xF1, 0x60, 0x9B,
+0x56, 0xF3, 0x50, 0x9A, 0xE0, 0xF1, 0x60, 0x9B,
 0x6C, 0xEA, 0x03, 0x22, 0x00, 0x6C, 0x00, 0x18,
-0x47, 0xE2, 0x10, 0xF0, 0x24, 0x6A, 0x30, 0xF0,
-0x20, 0x6B, 0x36, 0xF5, 0x58, 0x9A, 0xE0, 0xF1,
+0xD5, 0xE1, 0x10, 0xF0, 0x24, 0x6A, 0x30, 0xF0,
+0x20, 0x6B, 0x56, 0xF3, 0x54, 0x9A, 0xE0, 0xF1,
 0x60, 0x9B, 0x6C, 0xEA, 0x03, 0x22, 0x00, 0x6C,
-0x00, 0x18, 0x85, 0xE2, 0x10, 0xF0, 0x24, 0x6A,
-0x30, 0xF0, 0x20, 0x6B, 0x36, 0xF5, 0x5C, 0x9A,
+0x00, 0x18, 0x13, 0xE2, 0x10, 0xF0, 0x24, 0x6A,
+0x30, 0xF0, 0x20, 0x6B, 0x56, 0xF3, 0x58, 0x9A,
 0xE0, 0xF1, 0x60, 0x9B, 0x6C, 0xEA, 0x03, 0x22,
-0x00, 0x6C, 0x00, 0x18, 0xA6, 0xE2, 0x10, 0xF0,
-0x24, 0x6A, 0x30, 0xF0, 0x20, 0x6B, 0x57, 0xF1,
-0x5C, 0x9A, 0xE0, 0xF1, 0x60, 0x9B, 0x6C, 0xEA,
-0x03, 0x22, 0x00, 0x6C, 0x00, 0x18, 0x6D, 0xE2,
+0x00, 0x6C, 0x00, 0x18, 0x34, 0xE2, 0x10, 0xF0,
+0x24, 0x6A, 0x30, 0xF0, 0x20, 0x6B, 0x76, 0xF7,
+0x54, 0x9A, 0xE0, 0xF1, 0x60, 0x9B, 0x6C, 0xEA,
+0x03, 0x22, 0x00, 0x6C, 0x00, 0x18, 0xFB, 0xE1,
 0x10, 0xF0, 0x24, 0x6A, 0x30, 0xF0, 0x20, 0x6B,
-0x36, 0xF5, 0x50, 0x9A, 0xE0, 0xF1, 0x60, 0x9B,
-0x6C, 0xEA, 0x02, 0x22, 0x00, 0x18, 0x2B, 0xE2,
+0x56, 0xF3, 0x4C, 0x9A, 0xE0, 0xF1, 0x60, 0x9B,
+0x6C, 0xEA, 0x02, 0x22, 0x00, 0x18, 0xB9, 0xE1,
 0x30, 0xF0, 0x20, 0x6A, 0xE0, 0xF1, 0x64, 0x9A,
 0x32, 0x23, 0x01, 0x6A, 0x6C, 0xEA, 0x03, 0x22,
-0x00, 0x6C, 0x00, 0x18, 0xB6, 0xE3, 0x30, 0xF0,
+0x00, 0x6C, 0x00, 0x18, 0x3D, 0xE3, 0x30, 0xF0,
 0x20, 0x6B, 0xE0, 0xF1, 0x64, 0x9B, 0xFF, 0x6A,
 0x01, 0x4A, 0x6C, 0xEA, 0x03, 0x22, 0x01, 0x6C,
-0x00, 0x18, 0xB6, 0xE3, 0x30, 0xF0, 0x20, 0x6B,
+0x00, 0x18, 0x3D, 0xE3, 0x30, 0xF0, 0x20, 0x6B,
 0xE0, 0xF1, 0x64, 0x9B, 0x00, 0xF2, 0x00, 0x6A,
 0x6C, 0xEA, 0x03, 0x22, 0x02, 0x6C, 0x00, 0x18,
-0xB6, 0xE3, 0x30, 0xF0, 0x20, 0x6B, 0xE0, 0xF1,
+0x3D, 0xE3, 0x30, 0xF0, 0x20, 0x6B, 0xE0, 0xF1,
 0x64, 0x9B, 0x00, 0xF4, 0x00, 0x6A, 0x6C, 0xEA,
-0x03, 0x22, 0x03, 0x6C, 0x00, 0x18, 0xB6, 0xE3,
+0x03, 0x22, 0x03, 0x6C, 0x00, 0x18, 0x3D, 0xE3,
 0x30, 0xF0, 0x20, 0x6B, 0xE0, 0xF1, 0x64, 0x9B,
 0x01, 0xF0, 0x00, 0x6A, 0x6C, 0xEA, 0x03, 0x22,
-0x04, 0x6C, 0x00, 0x18, 0xB6, 0xE3, 0x30, 0xF0,
+0x04, 0x6C, 0x00, 0x18, 0x3D, 0xE3, 0x30, 0xF0,
 0x20, 0x6A, 0xE0, 0xF1, 0x68, 0x9A, 0x6D, 0x23,
 0x01, 0x6A, 0x6C, 0xEA, 0x03, 0x22, 0x00, 0x6C,
-0x00, 0x18, 0x5D, 0xE3, 0x30, 0xF0, 0x20, 0x6B,
+0x00, 0x18, 0xE4, 0xE2, 0x30, 0xF0, 0x20, 0x6B,
 0xE0, 0xF1, 0x68, 0x9B, 0xFF, 0x6A, 0x01, 0x4A,
 0x6C, 0xEA, 0x03, 0x22, 0x01, 0x6C, 0x00, 0x18,
-0x5D, 0xE3, 0x30, 0xF0, 0x20, 0x6B, 0xE0, 0xF1,
+0xE4, 0xE2, 0x30, 0xF0, 0x20, 0x6B, 0xE0, 0xF1,
 0x68, 0x9B, 0x00, 0xF2, 0x00, 0x6A, 0x6C, 0xEA,
-0x03, 0x22, 0x02, 0x6C, 0x00, 0x18, 0x5D, 0xE3,
+0x03, 0x22, 0x02, 0x6C, 0x00, 0x18, 0xE4, 0xE2,
 0x30, 0xF0, 0x20, 0x6B, 0xE0, 0xF1, 0x68, 0x9B,
 0x00, 0xF4, 0x00, 0x6A, 0x6C, 0xEA, 0x03, 0x22,
-0x03, 0x6C, 0x00, 0x18, 0x5D, 0xE3, 0x30, 0xF0,
+0x03, 0x6C, 0x00, 0x18, 0xE4, 0xE2, 0x30, 0xF0,
 0x20, 0x6B, 0xE0, 0xF1, 0x68, 0x9B, 0x01, 0xF0,
 0x00, 0x6A, 0x6C, 0xEA, 0x03, 0x22, 0x04, 0x6C,
-0x00, 0x18, 0x5D, 0xE3, 0x30, 0xF0, 0x20, 0x6B,
+0x00, 0x18, 0xE4, 0xE2, 0x30, 0xF0, 0x20, 0x6B,
 0xE0, 0xF1, 0x68, 0x9B, 0x10, 0xF0, 0x00, 0x6A,
 0x6C, 0xEA, 0x03, 0x22, 0x00, 0x6C, 0x00, 0x18,
 0xB5, 0xC4, 0x10, 0xF0, 0x24, 0x6A, 0x30, 0xF0,
-0x20, 0x6B, 0xD6, 0xF4, 0x58, 0x9A, 0xE0, 0xF1,
+0x20, 0x6B, 0xF6, 0xF2, 0x54, 0x9A, 0xE0, 0xF1,
 0x68, 0x9B, 0x6C, 0xEA, 0x03, 0x22, 0x01, 0x6C,
 0x00, 0x18, 0xB5, 0xC4, 0x10, 0xF0, 0x24, 0x6A,
-0x30, 0xF0, 0x20, 0x6B, 0xD6, 0xF4, 0x5C, 0x9A,
+0x30, 0xF0, 0x20, 0x6B, 0xF6, 0xF2, 0x58, 0x9A,
 0xE0, 0xF1, 0x68, 0x9B, 0x6C, 0xEA, 0x03, 0x22,
 0x02, 0x6C, 0x00, 0x18, 0xB5, 0xC4, 0x10, 0xF0,
-0x24, 0x6A, 0x30, 0xF0, 0x20, 0x6B, 0xF6, 0xF4,
-0x44, 0x9A, 0xE0, 0xF1, 0x68, 0x9B, 0x6C, 0xEA,
+0x24, 0x6A, 0x30, 0xF0, 0x20, 0x6B, 0x16, 0xF3,
+0x40, 0x9A, 0xE0, 0xF1, 0x68, 0x9B, 0x6C, 0xEA,
 0x03, 0x22, 0x03, 0x6C, 0x00, 0x18, 0xB5, 0xC4,
 0x30, 0xF0, 0x20, 0x6A, 0xE0, 0xF1, 0x48, 0x9A,
 0x00, 0x52, 0x03, 0x60, 0x04, 0x6C, 0x00, 0x18,
 0xB5, 0xC4, 0x30, 0xF0, 0x20, 0x6A, 0xE0, 0xF1,
 0x6C, 0x9A, 0xC0, 0xF0, 0x18, 0x23, 0x01, 0x6A,
 0x6C, 0xEA, 0x03, 0x22, 0x01, 0x6C, 0x00, 0x18,
-0x47, 0xE2, 0x30, 0xF0, 0x20, 0x6A, 0xE0, 0xF1,
+0xD5, 0xE1, 0x30, 0xF0, 0x20, 0x6A, 0xE0, 0xF1,
 0x4C, 0x9A, 0x02, 0x6B, 0x6C, 0xEA, 0x03, 0x22,
-0x01, 0x6C, 0x00, 0x18, 0x85, 0xE2, 0x30, 0xF0,
+0x01, 0x6C, 0x00, 0x18, 0x13, 0xE2, 0x30, 0xF0,
 0x20, 0x6A, 0xE0, 0xF1, 0x4C, 0x9A, 0x04, 0x6B,
 0x6C, 0xEA, 0x03, 0x22, 0x01, 0x6C, 0x00, 0x18,
-0xA6, 0xE2, 0x30, 0xF0, 0x20, 0x6A, 0xE0, 0xF1,
+0x34, 0xE2, 0x30, 0xF0, 0x20, 0x6A, 0xE0, 0xF1,
 0x4C, 0x9A, 0x08, 0x6B, 0x6C, 0xEA, 0x03, 0x22,
-0x01, 0x6C, 0x00, 0x18, 0x6D, 0xE2, 0x30, 0xF0,
+0x01, 0x6C, 0x00, 0x18, 0xFB, 0xE1, 0x30, 0xF0,
 0x20, 0x6A, 0xE0, 0xF1, 0x4C, 0x9A, 0x10, 0x6B,
 0x6C, 0xEA, 0x03, 0x22, 0x02, 0x6C, 0x00, 0x18,
-0x47, 0xE2, 0x30, 0xF0, 0x20, 0x6A, 0xE0, 0xF1,
+0xD5, 0xE1, 0x30, 0xF0, 0x20, 0x6A, 0xE0, 0xF1,
 0x4C, 0x9A, 0x20, 0x6B, 0x6C, 0xEA, 0x03, 0x22,
-0x02, 0x6C, 0x00, 0x18, 0x85, 0xE2, 0x30, 0xF0,
+0x02, 0x6C, 0x00, 0x18, 0x13, 0xE2, 0x30, 0xF0,
 0x20, 0x6A, 0xE0, 0xF1, 0x4C, 0x9A, 0x40, 0x6B,
 0x6C, 0xEA, 0x03, 0x22, 0x02, 0x6C, 0x00, 0x18,
-0xA6, 0xE2, 0x30, 0xF0, 0x20, 0x6A, 0xE0, 0xF1,
+0x34, 0xE2, 0x30, 0xF0, 0x20, 0x6A, 0xE0, 0xF1,
 0x4C, 0x9A, 0x80, 0x6B, 0x6C, 0xEA, 0x03, 0x22,
-0x02, 0x6C, 0x00, 0x18, 0x6D, 0xE2, 0x30, 0xF0,
+0x02, 0x6C, 0x00, 0x18, 0xFB, 0xE1, 0x30, 0xF0,
 0x20, 0x6B, 0xE0, 0xF1, 0x6C, 0x9B, 0xFF, 0x6A,
 0x01, 0x4A, 0x6C, 0xEA, 0x03, 0x22, 0x03, 0x6C,
-0x00, 0x18, 0x47, 0xE2, 0x30, 0xF0, 0x20, 0x6B,
+0x00, 0x18, 0xD5, 0xE1, 0x30, 0xF0, 0x20, 0x6B,
 0xE0, 0xF1, 0x6C, 0x9B, 0x00, 0xF2, 0x00, 0x6A,
 0x6C, 0xEA, 0x03, 0x22, 0x03, 0x6C, 0x00, 0x18,
-0x85, 0xE2, 0x30, 0xF0, 0x20, 0x6B, 0xE0, 0xF1,
+0x13, 0xE2, 0x30, 0xF0, 0x20, 0x6B, 0xE0, 0xF1,
 0x6C, 0x9B, 0x00, 0xF4, 0x00, 0x6A, 0x6C, 0xEA,
-0x03, 0x22, 0x03, 0x6C, 0x00, 0x18, 0xA6, 0xE2,
+0x03, 0x22, 0x03, 0x6C, 0x00, 0x18, 0x34, 0xE2,
 0x30, 0xF0, 0x20, 0x6B, 0xE0, 0xF1, 0x6C, 0x9B,
 0x01, 0xF0, 0x00, 0x6A, 0x6C, 0xEA, 0x03, 0x22,
-0x03, 0x6C, 0x00, 0x18, 0x6D, 0xE2, 0x30, 0xF0,
+0x03, 0x6C, 0x00, 0x18, 0xFB, 0xE1, 0x30, 0xF0,
 0x20, 0x6B, 0xE0, 0xF1, 0x6C, 0x9B, 0x02, 0xF0,
 0x00, 0x6A, 0x6C, 0xEA, 0x03, 0x22, 0x04, 0x6C,
-0x00, 0x18, 0x47, 0xE2, 0x30, 0xF0, 0x20, 0x6B,
+0x00, 0x18, 0xD5, 0xE1, 0x30, 0xF0, 0x20, 0x6B,
 0xE0, 0xF1, 0x6C, 0x9B, 0x04, 0xF0, 0x00, 0x6A,
 0x6C, 0xEA, 0x03, 0x22, 0x04, 0x6C, 0x00, 0x18,
-0x85, 0xE2, 0x30, 0xF0, 0x20, 0x6B, 0xE0, 0xF1,
+0x13, 0xE2, 0x30, 0xF0, 0x20, 0x6B, 0xE0, 0xF1,
 0x6C, 0x9B, 0x08, 0xF0, 0x00, 0x6A, 0x6C, 0xEA,
-0x03, 0x22, 0x04, 0x6C, 0x00, 0x18, 0xA6, 0xE2,
+0x03, 0x22, 0x04, 0x6C, 0x00, 0x18, 0x34, 0xE2,
 0x30, 0xF0, 0x20, 0x6B, 0xE0, 0xF1, 0x6C, 0x9B,
 0x10, 0xF0, 0x00, 0x6A, 0x6C, 0xEA, 0x03, 0x22,
-0x04, 0x6C, 0x00, 0x18, 0x6D, 0xE2, 0x10, 0xF0,
-0x24, 0x6A, 0x30, 0xF0, 0x20, 0x6B, 0x36, 0xF5,
-0x50, 0x9A, 0xE0, 0xF1, 0x6C, 0x9B, 0x6C, 0xEA,
-0x03, 0x22, 0x01, 0x6C, 0x00, 0x18, 0x64, 0xE2,
+0x04, 0x6C, 0x00, 0x18, 0xFB, 0xE1, 0x10, 0xF0,
+0x24, 0x6A, 0x30, 0xF0, 0x20, 0x6B, 0x56, 0xF3,
+0x4C, 0x9A, 0xE0, 0xF1, 0x6C, 0x9B, 0x6C, 0xEA,
+0x03, 0x22, 0x01, 0x6C, 0x00, 0x18, 0xF2, 0xE1,
 0x10, 0xF0, 0x24, 0x6A, 0x30, 0xF0, 0x20, 0x6B,
-0x36, 0xF5, 0x54, 0x9A, 0xE0, 0xF1, 0x6C, 0x9B,
+0x56, 0xF3, 0x50, 0x9A, 0xE0, 0xF1, 0x6C, 0x9B,
 0x6C, 0xEA, 0x03, 0x22, 0x02, 0x6C, 0x00, 0x18,
-0x64, 0xE2, 0x10, 0xF0, 0x24, 0x6A, 0x30, 0xF0,
-0x20, 0x6B, 0x36, 0xF5, 0x58, 0x9A, 0xE0, 0xF1,
+0xF2, 0xE1, 0x10, 0xF0, 0x24, 0x6A, 0x30, 0xF0,
+0x20, 0x6B, 0x56, 0xF3, 0x54, 0x9A, 0xE0, 0xF1,
 0x6C, 0x9B, 0x6C, 0xEA, 0x03, 0x22, 0x03, 0x6C,
-0x00, 0x18, 0x64, 0xE2, 0x10, 0xF0, 0x24, 0x6A,
-0x30, 0xF0, 0x20, 0x6B, 0x36, 0xF5, 0x5C, 0x9A,
+0x00, 0x18, 0xF2, 0xE1, 0x10, 0xF0, 0x24, 0x6A,
+0x30, 0xF0, 0x20, 0x6B, 0x56, 0xF3, 0x58, 0x9A,
 0xE0, 0xF1, 0x6C, 0x9B, 0x6C, 0xEA, 0x03, 0x22,
-0x04, 0x6C, 0x00, 0x18, 0x64, 0xE2, 0x10, 0xF0,
-0x24, 0x6B, 0x76, 0xF4, 0x7C, 0x9B, 0x10, 0xF0,
+0x04, 0x6C, 0x00, 0x18, 0xF2, 0xE1, 0x10, 0xF0,
+0x24, 0x6B, 0x96, 0xF2, 0x78, 0x9B, 0x10, 0xF0,
 0x23, 0x6A, 0x61, 0xF1, 0x06, 0x4A, 0x40, 0xDB,
 0x05, 0x97, 0x03, 0x63, 0x00, 0xEF, 0x00, 0x65,
 0xFC, 0x63, 0x07, 0x62, 0x06, 0xD1, 0x05, 0xD0,
-0x10, 0xF0, 0x24, 0x6B, 0x36, 0xF5, 0x10, 0x4B,
+0x10, 0xF0, 0x24, 0x6B, 0x56, 0xF3, 0x0C, 0x4B,
 0x30, 0xF0, 0x20, 0x69, 0xFF, 0x68, 0xAC, 0xE8,
 0xCE, 0xF4, 0x50, 0x99, 0xA0, 0x9B, 0x82, 0xF0,
 0x00, 0x6C, 0x01, 0x6E, 0x40, 0xEA, 0x10, 0xF0,
-0x24, 0x6B, 0x36, 0xF7, 0xA8, 0x9B, 0xCE, 0xF4,
+0x24, 0x6B, 0x56, 0xF5, 0xA4, 0x9B, 0xCE, 0xF4,
 0x50, 0x99, 0x00, 0x6C, 0x01, 0x6E, 0x40, 0xEA,
 0x01, 0x6D, 0xA1, 0xF4, 0x18, 0x6C, 0xAB, 0xED,
-0x00, 0x18, 0xD5, 0xE3, 0x01, 0x70, 0x0F, 0x60,
+0x00, 0x18, 0x5C, 0xE3, 0x01, 0x70, 0x0F, 0x60,
 0x03, 0x20, 0x02, 0x70, 0x16, 0x60, 0x1F, 0x10,
-0x10, 0xF0, 0x24, 0x6B, 0x36, 0xF5, 0x10, 0x4B,
+0x10, 0xF0, 0x24, 0x6B, 0x56, 0xF3, 0x0C, 0x4B,
 0x60, 0x9B, 0x6D, 0xEA, 0x10, 0xF0, 0x24, 0x6B,
-0x76, 0xF7, 0x6C, 0x9B, 0x13, 0x10, 0x10, 0xF0,
-0x24, 0x6B, 0x76, 0xF7, 0x70, 0x9B, 0x6D, 0xEA,
-0x10, 0xF0, 0x24, 0x6B, 0x76, 0xF7, 0x74, 0x9B,
-0x09, 0x10, 0x10, 0xF0, 0x24, 0x6B, 0x76, 0xF7,
-0x78, 0x9B, 0x6D, 0xEA, 0x10, 0xF0, 0x24, 0x6B,
-0x76, 0xF7, 0x7C, 0x9B, 0x6C, 0xEA, 0x30, 0xF0,
+0x96, 0xF5, 0x68, 0x9B, 0x13, 0x10, 0x10, 0xF0,
+0x24, 0x6B, 0x96, 0xF5, 0x6C, 0x9B, 0x6D, 0xEA,
+0x10, 0xF0, 0x24, 0x6B, 0x96, 0xF5, 0x70, 0x9B,
+0x09, 0x10, 0x10, 0xF0, 0x24, 0x6B, 0x96, 0xF5,
+0x74, 0x9B, 0x6D, 0xEA, 0x10, 0xF0, 0x24, 0x6B,
+0x96, 0xF5, 0x78, 0x9B, 0x6C, 0xEA, 0x30, 0xF0,
 0x20, 0x6B, 0xCE, 0xF4, 0x70, 0x9B, 0x01, 0x6D,
 0xA1, 0xF4, 0x18, 0x6C, 0xAB, 0xED, 0xC2, 0x67,
 0x40, 0xEB, 0x07, 0x97, 0x06, 0x91, 0x05, 0x90,
@@ -45496,24 +45315,24 @@ u8 array_mp_8821c_fw_wowlan[] = {
 0x40, 0xEA, 0xCE, 0xF2, 0x44, 0x99, 0x0A, 0x94,
 0x09, 0x95, 0x0B, 0x96, 0x02, 0x6F, 0x40, 0xEA,
 0x0F, 0x58, 0x08, 0x60, 0x10, 0xF0, 0x24, 0x6A,
-0x08, 0x33, 0x16, 0xF3, 0x18, 0x4A, 0x69, 0xE2,
+0x08, 0x33, 0x36, 0xF1, 0x14, 0x4A, 0x69, 0xE2,
 0x40, 0x9A, 0x00, 0xEA, 0x00, 0x6A, 0x44, 0x10,
 0xD0, 0xF4, 0x44, 0x40, 0x1F, 0xF7, 0x00, 0x6B,
 0x6C, 0xEA, 0x05, 0x2A, 0x10, 0xF0, 0x24, 0x6A,
-0x17, 0xF0, 0x50, 0x9A, 0x34, 0x10, 0x10, 0xF0,
-0x24, 0x6A, 0x17, 0xF0, 0x54, 0x9A, 0x2F, 0x10,
+0x36, 0xF6, 0x4C, 0x9A, 0x34, 0x10, 0x10, 0xF0,
+0x24, 0x6A, 0x36, 0xF6, 0x50, 0x9A, 0x2F, 0x10,
 0x80, 0xF4, 0x44, 0x40, 0x1F, 0xF7, 0x00, 0x6B,
 0x6C, 0xEA, 0x05, 0x2A, 0x10, 0xF0, 0x24, 0x6A,
-0x17, 0xF0, 0x58, 0x9A, 0x24, 0x10, 0x10, 0xF0,
-0x24, 0x6A, 0x17, 0xF0, 0x5C, 0x9A, 0x1F, 0x10,
+0x36, 0xF6, 0x54, 0x9A, 0x24, 0x10, 0x10, 0xF0,
+0x24, 0x6A, 0x36, 0xF6, 0x58, 0x9A, 0x1F, 0x10,
 0xC0, 0xF4, 0x48, 0x40, 0x1F, 0xF7, 0x00, 0x6B,
 0x6C, 0xEA, 0x05, 0x2A, 0x10, 0xF0, 0x24, 0x6A,
-0x37, 0xF0, 0x40, 0x9A, 0x14, 0x10, 0x10, 0xF0,
-0x24, 0x6A, 0x37, 0xF0, 0x44, 0x9A, 0x0F, 0x10,
+0x36, 0xF6, 0x5C, 0x9A, 0x14, 0x10, 0x10, 0xF0,
+0x24, 0x6A, 0x56, 0xF6, 0x40, 0x9A, 0x0F, 0x10,
 0x70, 0xF4, 0x48, 0x40, 0x1F, 0xF7, 0x00, 0x6B,
 0x6C, 0xEA, 0x05, 0x2A, 0x10, 0xF0, 0x24, 0x6A,
-0x37, 0xF0, 0x48, 0x9A, 0x04, 0x10, 0x10, 0xF0,
-0x24, 0x6A, 0x37, 0xF0, 0x4C, 0x9A, 0x49, 0xE0,
+0x56, 0xF6, 0x44, 0x9A, 0x04, 0x10, 0x10, 0xF0,
+0x24, 0x6A, 0x56, 0xF6, 0x48, 0x9A, 0x49, 0xE0,
 0x60, 0xAA, 0xFF, 0xF7, 0x1F, 0x6A, 0x6C, 0xEA,
 0x7D, 0x67, 0x53, 0xC3, 0x42, 0x32, 0x54, 0xC3,
 0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A,
@@ -45538,7 +45357,7 @@ u8 array_mp_8821c_fw_wowlan[] = {
 0x58, 0x9A, 0x90, 0x67, 0xB1, 0x67, 0x53, 0x6E,
 0x40, 0xEA, 0x7D, 0x67, 0x20, 0x6A, 0x50, 0xC3,
 0x03, 0x6A, 0x4F, 0xCB, 0x10, 0xF0, 0x24, 0x6A,
-0x36, 0xF5, 0x4C, 0x9A, 0x9D, 0x67, 0x40, 0xA2,
+0x56, 0xF3, 0x48, 0x9A, 0x9D, 0x67, 0x40, 0xA2,
 0x52, 0xC3, 0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1,
 0x08, 0x4A, 0x2C, 0xF7, 0x7E, 0xA2, 0x2C, 0xF7,
 0x5F, 0xA2, 0x73, 0xC4, 0x54, 0xC4, 0x30, 0xF0,
@@ -45568,17 +45387,17 @@ u8 array_mp_8821c_fw_wowlan[] = {
 0xB8, 0xA3, 0x4C, 0xEC, 0x84, 0x34, 0xBA, 0x35,
 0x8D, 0xEF, 0x4E, 0xED, 0x86, 0x67, 0x0C, 0xEC,
 0x4C, 0xED, 0x0C, 0xF5, 0xF9, 0xC3, 0x00, 0x18,
-0xDA, 0xDD, 0x07, 0x97, 0x06, 0x91, 0x05, 0x90,
+0x68, 0xDD, 0x07, 0x97, 0x06, 0x91, 0x05, 0x90,
 0x04, 0x63, 0x00, 0xEF, 0xFC, 0x63, 0x07, 0x62,
 0x30, 0xF0, 0x20, 0x6A, 0x4E, 0xF2, 0x50, 0x9A,
 0xA4, 0x67, 0x30, 0xF0, 0x20, 0x6C, 0x4F, 0xF7,
 0x14, 0x4C, 0x07, 0x6E, 0x40, 0xEA, 0x30, 0xF0,
 0x20, 0x6A, 0x4F, 0xF7, 0x54, 0xA2, 0x05, 0x5A,
 0x13, 0x60, 0x10, 0xF0, 0x24, 0x6B, 0x48, 0x32,
-0x96, 0xF3, 0x04, 0x4B, 0x4D, 0xE3, 0x40, 0x9B,
+0xB6, 0xF1, 0x00, 0x4B, 0x4D, 0xE3, 0x40, 0x9B,
 0x00, 0xEA, 0x00, 0x6C, 0x07, 0x10, 0x01, 0x6C,
 0x05, 0x10, 0x02, 0x6C, 0x03, 0x10, 0x03, 0x6C,
-0x01, 0x10, 0x04, 0x6C, 0x00, 0x18, 0xB7, 0xE0,
+0x01, 0x10, 0x04, 0x6C, 0x00, 0x18, 0x45, 0xE0,
 0x30, 0xF0, 0x20, 0x6B, 0xC0, 0xF1, 0x08, 0x4B,
 0x69, 0xF3, 0x48, 0xA3, 0x1F, 0x6C, 0x01, 0x6D,
 0x4A, 0x32, 0x8C, 0xEA, 0x30, 0xF0, 0x20, 0x6C,
@@ -45588,49 +45407,49 @@ u8 array_mp_8821c_fw_wowlan[] = {
 0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A,
 0x69, 0xF3, 0x88, 0xA2, 0x02, 0x6B, 0x8C, 0xEB,
 0x1C, 0x23, 0x03, 0x6B, 0x6B, 0xEB, 0x8C, 0xEB,
-0x69, 0xF3, 0x68, 0xC2, 0x00, 0x18, 0x22, 0xE6,
+0x69, 0xF3, 0x68, 0xC2, 0x00, 0x18, 0xA9, 0xE5,
 0x04, 0xD2, 0x30, 0xF0, 0x20, 0x6A, 0x04, 0x93,
 0x4F, 0xF6, 0x54, 0x9A, 0x6E, 0xEA, 0x03, 0x22,
-0x04, 0x94, 0x00, 0x18, 0x43, 0xE6, 0x30, 0xF0,
+0x04, 0x94, 0x00, 0x18, 0xCA, 0xE5, 0x30, 0xF0,
 0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A, 0x69, 0xF3,
 0x88, 0xA2, 0x02, 0x6B, 0x8D, 0xEB, 0x69, 0xF3,
 0x68, 0xC2, 0x07, 0x97, 0x04, 0x63, 0x00, 0xEF,
 0xFD, 0x63, 0x05, 0x62, 0x30, 0xF0, 0x20, 0x6A,
 0x4E, 0xF2, 0x50, 0x9A, 0xA4, 0x67, 0x30, 0xF0,
 0x20, 0x6C, 0x8F, 0xF5, 0x08, 0x4C, 0x04, 0x6E,
-0x40, 0xEA, 0x00, 0x18, 0x3A, 0xC9, 0x05, 0x97,
+0x40, 0xEA, 0x00, 0x18, 0x2B, 0xC9, 0x05, 0x97,
 0x03, 0x63, 0x00, 0xEF, 0xFD, 0x63, 0x05, 0x62,
 0x04, 0xD0, 0xFF, 0x68, 0x8C, 0xE8, 0x90, 0x67,
 0x00, 0x18, 0x91, 0xC8, 0x90, 0x67, 0x00, 0x18,
-0xA3, 0xE9, 0x01, 0x6C, 0x00, 0x18, 0xA5, 0xC7,
-0x90, 0x67, 0x00, 0x18, 0x5E, 0xC9, 0x05, 0x97,
+0x2A, 0xE9, 0x01, 0x6C, 0x00, 0x18, 0xA5, 0xC7,
+0x90, 0x67, 0x00, 0x18, 0x4F, 0xC9, 0x05, 0x97,
 0x04, 0x90, 0x03, 0x63, 0x00, 0xEF, 0x00, 0x65,
 0xFC, 0x63, 0x07, 0x62, 0x06, 0xD1, 0x05, 0xD0,
 0xFF, 0x6A, 0x27, 0x67, 0x4C, 0xE9, 0x6F, 0x41,
 0x4C, 0xEB, 0x04, 0x67, 0x02, 0x5B, 0x4C, 0xE8,
 0x4C, 0xED, 0x4C, 0xEE, 0x03, 0x61, 0x90, 0x67,
-0x00, 0x18, 0x2E, 0xE5, 0x30, 0xF0, 0x20, 0x6A,
+0x00, 0x18, 0xB5, 0xE4, 0x30, 0xF0, 0x20, 0x6A,
 0xC0, 0xF1, 0x08, 0x4A, 0x49, 0xE0, 0x0C, 0xF7,
 0x7E, 0xA2, 0x2C, 0xF7, 0x4E, 0xA2, 0x10, 0x58,
 0x6D, 0xEA, 0xFF, 0x6B, 0x6C, 0xEA, 0x49, 0x60,
-0x10, 0xF0, 0x24, 0x6B, 0x08, 0x34, 0x16, 0xF4,
-0x0C, 0x4B, 0x8D, 0xE3, 0x60, 0x9B, 0x00, 0xEB,
+0x10, 0xF0, 0x24, 0x6B, 0x08, 0x34, 0x36, 0xF2,
+0x08, 0x4B, 0x8D, 0xE3, 0x60, 0x9B, 0x00, 0xEB,
 0xD0, 0xF4, 0x64, 0x40, 0x1F, 0xF7, 0x00, 0x6C,
 0x8C, 0xEB, 0x05, 0x2B, 0x10, 0xF0, 0x24, 0x6B,
-0x17, 0xF0, 0x70, 0x9B, 0x34, 0x10, 0x10, 0xF0,
-0x24, 0x6B, 0x17, 0xF0, 0x74, 0x9B, 0x2F, 0x10,
+0x36, 0xF6, 0x6C, 0x9B, 0x34, 0x10, 0x10, 0xF0,
+0x24, 0x6B, 0x36, 0xF6, 0x70, 0x9B, 0x2F, 0x10,
 0x80, 0xF4, 0x64, 0x40, 0x1F, 0xF7, 0x00, 0x6C,
 0x8C, 0xEB, 0x05, 0x2B, 0x10, 0xF0, 0x24, 0x6B,
-0x17, 0xF0, 0x78, 0x9B, 0x24, 0x10, 0x10, 0xF0,
-0x24, 0x6B, 0x17, 0xF0, 0x7C, 0x9B, 0x1F, 0x10,
+0x36, 0xF6, 0x74, 0x9B, 0x24, 0x10, 0x10, 0xF0,
+0x24, 0x6B, 0x36, 0xF6, 0x78, 0x9B, 0x1F, 0x10,
 0xC0, 0xF4, 0x68, 0x40, 0x1F, 0xF7, 0x00, 0x6C,
 0x8C, 0xEB, 0x05, 0x2B, 0x10, 0xF0, 0x24, 0x6B,
-0x37, 0xF0, 0x60, 0x9B, 0x14, 0x10, 0x10, 0xF0,
-0x24, 0x6B, 0x37, 0xF0, 0x64, 0x9B, 0x0F, 0x10,
+0x36, 0xF6, 0x7C, 0x9B, 0x14, 0x10, 0x10, 0xF0,
+0x24, 0x6B, 0x56, 0xF6, 0x60, 0x9B, 0x0F, 0x10,
 0x70, 0xF4, 0x68, 0x40, 0x1F, 0xF7, 0x00, 0x6C,
 0x8C, 0xEB, 0x05, 0x2B, 0x10, 0xF0, 0x24, 0x6B,
-0x37, 0xF0, 0x68, 0x9B, 0x04, 0x10, 0x10, 0xF0,
-0x24, 0x6B, 0x37, 0xF0, 0x6C, 0x9B, 0x61, 0xE0,
+0x56, 0xF6, 0x64, 0x9B, 0x04, 0x10, 0x10, 0xF0,
+0x24, 0x6B, 0x56, 0xF6, 0x68, 0x9B, 0x61, 0xE0,
 0x40, 0xC0, 0x30, 0xF0, 0x20, 0x6A, 0xE8, 0xF2,
 0x3B, 0xC2, 0x07, 0x97, 0x06, 0x91, 0x05, 0x90,
 0x04, 0x63, 0x00, 0xEF, 0xFD, 0x63, 0x05, 0x62,
@@ -45638,41 +45457,41 @@ u8 array_mp_8821c_fw_wowlan[] = {
 0x42, 0xF1, 0x18, 0x6C, 0x01, 0x6D, 0x02, 0x6E,
 0x40, 0xEA, 0x05, 0x97, 0x05, 0x6A, 0x03, 0x63,
 0x00, 0xEF, 0x00, 0x65, 0x10, 0xF0, 0x24, 0x6B,
-0x76, 0xF4, 0x7C, 0x9B, 0x10, 0xF0, 0x23, 0x6A,
+0x96, 0xF2, 0x78, 0x9B, 0x10, 0xF0, 0x23, 0x6A,
 0x02, 0xF4, 0x05, 0x4A, 0x40, 0xDB, 0x01, 0x4A,
 0x40, 0xDB, 0xF4, 0x17, 0xFB, 0x63, 0x09, 0x62,
 0x08, 0xD1, 0x07, 0xD0, 0x10, 0xF0, 0x24, 0x6A,
-0x96, 0xF4, 0x60, 0x9A, 0x10, 0xF0, 0x24, 0x6A,
-0x76, 0xF4, 0x5C, 0x9A, 0x01, 0x6C, 0xA4, 0x67,
-0x60, 0xDA, 0x00, 0x18, 0x33, 0xD5, 0x30, 0xF0,
+0x96, 0xF2, 0x7C, 0x9A, 0x10, 0xF0, 0x24, 0x6A,
+0x96, 0xF2, 0x58, 0x9A, 0x01, 0x6C, 0xA4, 0x67,
+0x60, 0xDA, 0x00, 0x18, 0xE9, 0xD4, 0x30, 0xF0,
 0x20, 0x6A, 0x00, 0xF1, 0x00, 0x4A, 0x10, 0xF0,
-0x24, 0x6B, 0xEF, 0x9A, 0x96, 0xF4, 0x64, 0x9B,
+0x24, 0x6B, 0xEF, 0x9A, 0xB6, 0xF2, 0x60, 0x9B,
 0x8C, 0x9A, 0xCE, 0x9A, 0xAD, 0x9A, 0xE0, 0xDB,
-0x10, 0xF0, 0x24, 0x6B, 0x96, 0xF4, 0x68, 0x9B,
+0x10, 0xF0, 0x24, 0x6B, 0xB6, 0xF2, 0x64, 0x9B,
 0x00, 0x68, 0xC0, 0xDB, 0x10, 0xF0, 0x24, 0x6B,
-0x96, 0xF4, 0x6C, 0x9B, 0xA0, 0xDB, 0x10, 0xF0,
-0x24, 0x6B, 0x96, 0xF4, 0x70, 0x9B, 0x80, 0xDB,
-0x10, 0xF0, 0x24, 0x6B, 0x89, 0x9A, 0x96, 0xF4,
-0x74, 0x9B, 0x80, 0xDB, 0x68, 0x9A, 0x10, 0xF0,
-0x24, 0x6A, 0x96, 0xF4, 0x58, 0x9A, 0x60, 0xDA,
+0xB6, 0xF2, 0x68, 0x9B, 0xA0, 0xDB, 0x10, 0xF0,
+0x24, 0x6B, 0xB6, 0xF2, 0x6C, 0x9B, 0x80, 0xDB,
+0x10, 0xF0, 0x24, 0x6B, 0x89, 0x9A, 0xB6, 0xF2,
+0x70, 0x9B, 0x80, 0xDB, 0x68, 0x9A, 0x10, 0xF0,
+0x24, 0x6A, 0xB6, 0xF2, 0x54, 0x9A, 0x60, 0xDA,
 0x30, 0xF0, 0x20, 0x6A, 0x60, 0xF1, 0x48, 0xAA,
 0x0B, 0x10, 0x30, 0xF0, 0x20, 0x6B, 0x08, 0x34,
 0x2E, 0xF2, 0x0C, 0x4B, 0x6D, 0xE4, 0x60, 0x9B,
 0x05, 0x23, 0x01, 0x48, 0xFF, 0x6B, 0x6C, 0xE8,
 0x43, 0xE8, 0xF3, 0x61, 0x10, 0xF0, 0x24, 0x6A,
-0x96, 0xF4, 0x7C, 0x9A, 0x7F, 0x6A, 0x00, 0x69,
+0xB6, 0xF2, 0x78, 0x9A, 0x7F, 0x6A, 0x00, 0x69,
 0x80, 0xA3, 0x20, 0xF0, 0x20, 0x6D, 0x00, 0xF1,
 0x00, 0x4D, 0x8C, 0xEA, 0x40, 0xC3, 0x30, 0xF0,
 0x20, 0x6B, 0xAE, 0xF2, 0x40, 0x9B, 0x10, 0xF0,
-0x24, 0x6B, 0xB6, 0xF4, 0xC0, 0x9B, 0x91, 0x67,
+0x24, 0x6B, 0xB6, 0xF2, 0xDC, 0x9B, 0x91, 0x67,
 0x48, 0x6F, 0x04, 0xD1, 0x05, 0xD1, 0x40, 0xEA,
 0x30, 0xF0, 0x20, 0x6B, 0xAE, 0xF2, 0x40, 0x9B,
-0x10, 0xF0, 0x24, 0x6B, 0xB6, 0xF4, 0xC4, 0x9B,
+0x10, 0xF0, 0x24, 0x6B, 0xD6, 0xF2, 0xC0, 0x9B,
 0x20, 0xF0, 0x20, 0x6D, 0x91, 0x67, 0xAD, 0xF1,
 0x08, 0x4D, 0x00, 0xF4, 0x00, 0x6F, 0x04, 0xD1,
 0x05, 0xD1, 0x40, 0xEA, 0x30, 0xF0, 0x20, 0x6B,
 0xAE, 0xF2, 0x40, 0x9B, 0x10, 0xF0, 0x24, 0x6B,
-0xB6, 0xF4, 0xC8, 0x9B, 0x20, 0xF0, 0x21, 0x6D,
+0xD6, 0xF2, 0xC4, 0x9B, 0x20, 0xF0, 0x21, 0x6D,
 0x00, 0x37, 0x91, 0x67, 0x15, 0xF0, 0x00, 0x4D,
 0xE8, 0x37, 0x04, 0xD1, 0x05, 0xD1, 0x40, 0xEA,
 0x00, 0x1C, 0x96, 0x45, 0xFF, 0x17, 0x00, 0x65,
@@ -45696,20 +45515,20 @@ u8 array_mp_8821c_fw_wowlan[] = {
 0x02, 0xF0, 0x00, 0x75, 0x01, 0x60, 0x25, 0x2D,
 0x1F, 0xF7, 0x00, 0x6A, 0x6C, 0xEA, 0x02, 0xF0,
 0x00, 0x72, 0x01, 0x60, 0x07, 0x2A, 0x10, 0xF0,
-0x24, 0x6A, 0xB6, 0xF4, 0xAC, 0x9A, 0xB5, 0xE3,
+0x24, 0x6A, 0xD6, 0xF2, 0xA8, 0x9A, 0xB5, 0xE3,
 0x60, 0xA5, 0x0B, 0x10, 0x10, 0xF0, 0x24, 0x6A,
-0xB6, 0xF4, 0xAC, 0x9A, 0x10, 0xF0, 0x24, 0x6A,
-0xB6, 0xF4, 0x50, 0x9A, 0xB5, 0xE3, 0x4D, 0xE3,
+0xD6, 0xF2, 0xA8, 0x9A, 0x10, 0xF0, 0x24, 0x6A,
+0xD6, 0xF2, 0x4C, 0x9A, 0xB5, 0xE3, 0x4D, 0xE3,
 0x60, 0xA3, 0x01, 0x6A, 0x00, 0xF6, 0x60, 0x33,
 0x44, 0xEE, 0x00, 0xF6, 0x63, 0x33, 0x4F, 0xEA,
 0x6C, 0xEA, 0xFF, 0x6B, 0x6C, 0xEA, 0x40, 0xC5,
-0x0E, 0x10, 0x10, 0xF0, 0x24, 0x6D, 0xB6, 0xF4,
-0xB0, 0x9D, 0x0F, 0xE8, 0xAD, 0xE3, 0xA0, 0xA3,
+0x0E, 0x10, 0x10, 0xF0, 0x24, 0x6D, 0xD6, 0xF2,
+0xAC, 0x9D, 0x0F, 0xE8, 0xAD, 0xE3, 0xA0, 0xA3,
 0x00, 0xF6, 0xA0, 0x35, 0x00, 0xF6, 0xA3, 0x35,
 0x0C, 0xED, 0x4C, 0xED, 0xA0, 0xC3, 0x30, 0xF0,
 0x20, 0x6A, 0x4F, 0xF7, 0x55, 0xA2, 0x4E, 0xEC,
-0x52, 0x2C, 0x10, 0xF0, 0x24, 0x6A, 0xB6, 0xF4,
-0x54, 0x9A, 0x60, 0x9A, 0x30, 0xF0, 0x20, 0x6A,
+0x52, 0x2C, 0x10, 0xF0, 0x24, 0x6A, 0xD6, 0xF2,
+0x50, 0x9A, 0x60, 0x9A, 0x30, 0xF0, 0x20, 0x6A,
 0x70, 0x33, 0x00, 0xF5, 0x62, 0x33, 0x48, 0xF5,
 0x68, 0xCA, 0x45, 0x10, 0x30, 0xF0, 0x20, 0x6C,
 0xC0, 0xF1, 0x08, 0x4C, 0x9D, 0xE7, 0xE8, 0xF2,
@@ -45718,71 +45537,71 @@ u8 array_mp_8821c_fw_wowlan[] = {
 0x00, 0x6C, 0x6C, 0xEC, 0x02, 0xF0, 0x00, 0x74,
 0x01, 0x60, 0x24, 0x2C, 0x1F, 0xF7, 0x00, 0x6A,
 0x6C, 0xEA, 0x02, 0xF0, 0x00, 0x72, 0x01, 0x60,
-0x07, 0x2A, 0x10, 0xF0, 0x24, 0x6A, 0xB6, 0xF4,
-0x8C, 0x9A, 0x91, 0xE3, 0x60, 0xA4, 0x0B, 0x10,
-0x10, 0xF0, 0x24, 0x6A, 0xB6, 0xF4, 0x8C, 0x9A,
-0x10, 0xF0, 0x24, 0x6A, 0xB6, 0xF4, 0x50, 0x9A,
+0x07, 0x2A, 0x10, 0xF0, 0x24, 0x6A, 0xD6, 0xF2,
+0x88, 0x9A, 0x91, 0xE3, 0x60, 0xA4, 0x0B, 0x10,
+0x10, 0xF0, 0x24, 0x6A, 0xD6, 0xF2, 0x88, 0x9A,
+0x10, 0xF0, 0x24, 0x6A, 0xD6, 0xF2, 0x4C, 0x9A,
 0x91, 0xE3, 0x4D, 0xE3, 0x60, 0xA3, 0x00, 0xF6,
 0x60, 0x33, 0x01, 0x6A, 0x00, 0xF6, 0x63, 0x33,
 0x44, 0xEE, 0x6D, 0xEA, 0xFF, 0x6B, 0x6C, 0xEA,
 0x40, 0xC4, 0x0D, 0x10, 0x10, 0xF0, 0x24, 0x6C,
-0xB6, 0xF4, 0x90, 0x9C, 0x8D, 0xE3, 0x80, 0xA3,
+0xD6, 0xF2, 0x8C, 0x9C, 0x8D, 0xE3, 0x80, 0xA3,
 0x00, 0xF6, 0x80, 0x34, 0x00, 0xF6, 0x83, 0x34,
 0xAD, 0xEC, 0x4C, 0xEC, 0x80, 0xC3, 0x01, 0x90,
 0x01, 0x63, 0x20, 0xE8, 0xFF, 0x6A, 0x4C, 0xEC,
 0x05, 0x5C, 0xAC, 0xEA, 0x4B, 0x60, 0x10, 0xF0,
-0x24, 0x6B, 0x88, 0x34, 0xB6, 0xF1, 0x1C, 0x4B,
+0x24, 0x6B, 0x88, 0x34, 0xD5, 0xF7, 0x18, 0x4B,
 0x8D, 0xE3, 0x60, 0x9B, 0x00, 0xEB, 0x05, 0x22,
-0x10, 0xF0, 0x24, 0x6A, 0xB6, 0xF4, 0x78, 0x9A,
-0x2D, 0x10, 0x10, 0xF0, 0x24, 0x6A, 0xB6, 0xF4,
-0x78, 0x9A, 0x20, 0x10, 0x05, 0x22, 0x10, 0xF0,
-0x24, 0x6A, 0xB6, 0xF4, 0x7C, 0x9A, 0x22, 0x10,
-0x10, 0xF0, 0x24, 0x6A, 0xB6, 0xF4, 0x7C, 0x9A,
+0x10, 0xF0, 0x24, 0x6A, 0xD6, 0xF2, 0x74, 0x9A,
+0x2D, 0x10, 0x10, 0xF0, 0x24, 0x6A, 0xD6, 0xF2,
+0x74, 0x9A, 0x20, 0x10, 0x05, 0x22, 0x10, 0xF0,
+0x24, 0x6A, 0xD6, 0xF2, 0x78, 0x9A, 0x22, 0x10,
+0x10, 0xF0, 0x24, 0x6A, 0xD6, 0xF2, 0x78, 0x9A,
 0x15, 0x10, 0x05, 0x22, 0x10, 0xF0, 0x24, 0x6A,
-0xD6, 0xF4, 0x60, 0x9A, 0x17, 0x10, 0x10, 0xF0,
-0x24, 0x6A, 0xD6, 0xF4, 0x60, 0x9A, 0x0A, 0x10,
-0x05, 0x22, 0x10, 0xF0, 0x24, 0x6A, 0xD6, 0xF4,
-0x64, 0x9A, 0x0C, 0x10, 0x10, 0xF0, 0x24, 0x6A,
-0xD6, 0xF4, 0x64, 0x9A, 0x80, 0xA3, 0xF7, 0x6A,
+0xD6, 0xF2, 0x7C, 0x9A, 0x17, 0x10, 0x10, 0xF0,
+0x24, 0x6A, 0xD6, 0xF2, 0x7C, 0x9A, 0x0A, 0x10,
+0x05, 0x22, 0x10, 0xF0, 0x24, 0x6A, 0xF6, 0xF2,
+0x60, 0x9A, 0x0C, 0x10, 0x10, 0xF0, 0x24, 0x6A,
+0xF6, 0xF2, 0x60, 0x9A, 0x80, 0xA3, 0xF7, 0x6A,
 0x0A, 0x10, 0x0C, 0x22, 0x10, 0xF0, 0x24, 0x6A,
-0xD6, 0xF4, 0x68, 0x9A, 0x40, 0xA3, 0xFF, 0x6C,
+0xF6, 0xF2, 0x64, 0x9A, 0x40, 0xA3, 0xFF, 0x6C,
 0x08, 0x6D, 0x8C, 0xEA, 0xAD, 0xEA, 0x8C, 0xEA,
 0x40, 0xC3, 0x20, 0xE8, 0x10, 0xF0, 0x24, 0x6A,
-0xD6, 0xF4, 0x68, 0x9A, 0xF7, 0x6A, 0x80, 0xA3,
+0xF6, 0xF2, 0x64, 0x9A, 0xF7, 0x6A, 0x80, 0xA3,
 0x8C, 0xEA, 0x40, 0xC3, 0x20, 0xE8, 0x00, 0x65,
 0xFF, 0x6A, 0x4C, 0xEC, 0x01, 0x6B, 0xAC, 0xEA,
 0x6E, 0xEA, 0x01, 0x5A, 0x58, 0x67, 0x05, 0x5C,
 0x48, 0x32, 0x08, 0x60, 0x10, 0xF0, 0x24, 0x6B,
-0x88, 0x34, 0xD6, 0xF1, 0x10, 0x4B, 0x8D, 0xE3,
+0x88, 0x34, 0xF5, 0xF7, 0x0C, 0x4B, 0x8D, 0xE3,
 0x60, 0x9B, 0x00, 0xEB, 0x01, 0x6A, 0x4B, 0xEA,
-0x20, 0xE8, 0x10, 0xF0, 0x24, 0x6B, 0xB6, 0xF4,
-0x94, 0x9B, 0x10, 0xF0, 0x24, 0x6D, 0xD6, 0xF4,
-0xAC, 0x9D, 0x60, 0x9C, 0xAC, 0xEB, 0x1E, 0x10,
-0x10, 0xF0, 0x24, 0x6B, 0xB6, 0xF4, 0x94, 0x9B,
-0x10, 0xF0, 0x24, 0x6D, 0xD6, 0xF4, 0xAC, 0x9D,
+0x20, 0xE8, 0x10, 0xF0, 0x24, 0x6B, 0xD6, 0xF2,
+0x90, 0x9B, 0x10, 0xF0, 0x24, 0x6D, 0xF6, 0xF2,
+0xA8, 0x9D, 0x60, 0x9C, 0xAC, 0xEB, 0x1E, 0x10,
+0x10, 0xF0, 0x24, 0x6B, 0xD6, 0xF2, 0x90, 0x9B,
+0x10, 0xF0, 0x24, 0x6D, 0xF6, 0xF2, 0xA8, 0x9D,
 0x60, 0x9C, 0xAC, 0xEB, 0x10, 0xF0, 0x24, 0x6D,
-0xD6, 0xF4, 0xB8, 0x9D, 0x0E, 0x10, 0x10, 0xF0,
-0x24, 0x6B, 0xB6, 0xF4, 0x94, 0x9B, 0x10, 0xF0,
-0x24, 0x6D, 0xD6, 0xF4, 0xAC, 0x9D, 0x60, 0x9C,
-0xAC, 0xEB, 0x10, 0xF0, 0x24, 0x6D, 0xD6, 0xF4,
-0xBC, 0x9D, 0xAD, 0xEB, 0x60, 0xDC, 0x60, 0xF5,
+0xF6, 0xF2, 0xB4, 0x9D, 0x0E, 0x10, 0x10, 0xF0,
+0x24, 0x6B, 0xD6, 0xF2, 0x90, 0x9B, 0x10, 0xF0,
+0x24, 0x6D, 0xF6, 0xF2, 0xA8, 0x9D, 0x60, 0x9C,
+0xAC, 0xEB, 0x10, 0xF0, 0x24, 0x6D, 0xF6, 0xF2,
+0xB8, 0x9D, 0xAD, 0xEB, 0x60, 0xDC, 0x60, 0xF5,
 0x60, 0x42, 0x1F, 0xF7, 0x00, 0x6C, 0x8C, 0xEB,
 0x02, 0xF0, 0x00, 0x73, 0x10, 0x61, 0x2E, 0x10,
-0x10, 0xF0, 0x24, 0x6B, 0xB6, 0xF4, 0x94, 0x9B,
-0x10, 0xF0, 0x24, 0x6D, 0xD6, 0xF4, 0xAC, 0x9D,
+0x10, 0xF0, 0x24, 0x6B, 0xD6, 0xF2, 0x90, 0x9B,
+0x10, 0xF0, 0x24, 0x6D, 0xF6, 0xF2, 0xA8, 0x9D,
 0x60, 0x9C, 0xAC, 0xEB, 0x10, 0xF0, 0x24, 0x6D,
-0xF6, 0xF4, 0xA0, 0x9D, 0xE6, 0x17, 0x1E, 0x23,
-0x10, 0xF0, 0x24, 0x6B, 0xD6, 0xF4, 0x74, 0x9B,
-0x1D, 0x10, 0x10, 0xF0, 0x24, 0x6B, 0xB6, 0xF4,
-0x94, 0x9B, 0x10, 0xF0, 0x24, 0x6D, 0xD6, 0xF4,
-0xAC, 0x9D, 0x60, 0x9C, 0xAC, 0xEB, 0x10, 0xF0,
-0x24, 0x6D, 0xF6, 0xF4, 0xA4, 0x9D, 0xAD, 0xEB,
+0xF6, 0xF2, 0xBC, 0x9D, 0xE6, 0x17, 0x1E, 0x23,
+0x10, 0xF0, 0x24, 0x6B, 0xF6, 0xF2, 0x70, 0x9B,
+0x1D, 0x10, 0x10, 0xF0, 0x24, 0x6B, 0xD6, 0xF2,
+0x90, 0x9B, 0x10, 0xF0, 0x24, 0x6D, 0xF6, 0xF2,
+0xA8, 0x9D, 0x60, 0x9C, 0xAC, 0xEB, 0x10, 0xF0,
+0x24, 0x6D, 0x16, 0xF3, 0xA0, 0x9D, 0xAD, 0xEB,
 0x60, 0xDC, 0x60, 0xF5, 0x60, 0x42, 0x1F, 0xF7,
 0x00, 0x6C, 0x8C, 0xEB, 0x02, 0xF0, 0x00, 0x73,
 0x01, 0x60, 0x07, 0x2B, 0x10, 0xF0, 0x24, 0x6B,
-0xD6, 0xF4, 0x70, 0x9B, 0x69, 0xE2, 0x40, 0x9A,
-0x20, 0xE8, 0x10, 0xF0, 0x24, 0x6B, 0xD6, 0xF4,
-0x74, 0x9B, 0x69, 0xE2, 0x40, 0x9A, 0x20, 0xE8,
+0xF6, 0xF2, 0x6C, 0x9B, 0x69, 0xE2, 0x40, 0x9A,
+0x20, 0xE8, 0x10, 0xF0, 0x24, 0x6B, 0xF6, 0xF2,
+0x70, 0x9B, 0x69, 0xE2, 0x40, 0x9A, 0x20, 0xE8,
 0xFF, 0x6A, 0x4C, 0xEC, 0x01, 0x74, 0xAC, 0xEA,
 0x13, 0x60, 0x03, 0x24, 0x02, 0x74, 0x15, 0x60,
 0x18, 0x10, 0x30, 0xF0, 0x20, 0x6B, 0xC0, 0xF1,
@@ -45791,21 +45610,21 @@ u8 array_mp_8821c_fw_wowlan[] = {
 0xAD, 0xEA, 0x68, 0xF3, 0x59, 0xC3, 0x09, 0x10,
 0x30, 0xF0, 0x20, 0x6B, 0x48, 0xF5, 0x44, 0xC3,
 0x04, 0x10, 0x30, 0xF0, 0x20, 0x6B, 0x48, 0xF5,
-0x40, 0xC3, 0x10, 0xF0, 0x24, 0x6A, 0xF6, 0xF4,
-0x48, 0x9A, 0x60, 0xA2, 0x10, 0x6A, 0x6C, 0xEA,
+0x40, 0xC3, 0x10, 0xF0, 0x24, 0x6A, 0x16, 0xF3,
+0x44, 0x9A, 0x60, 0xA2, 0x10, 0x6A, 0x6C, 0xEA,
 0x24, 0x22, 0x02, 0x5C, 0x03, 0x61, 0x02, 0x74,
 0x17, 0x60, 0x20, 0xE8, 0x30, 0xF0, 0x20, 0x6B,
 0xC0, 0xF1, 0x08, 0x4B, 0x68, 0xF3, 0x99, 0xA3,
 0x01, 0x6A, 0x8C, 0xEA, 0x68, 0xF3, 0x9C, 0xA3,
 0x7F, 0x6B, 0x5C, 0x32, 0x8C, 0xEB, 0x6D, 0xEA,
 0xFF, 0x6B, 0x6C, 0xEA, 0x10, 0xF0, 0x24, 0x6B,
-0xF6, 0xF4, 0x6C, 0x9B, 0x40, 0xC3, 0x20, 0xE8,
+0x16, 0xF3, 0x68, 0x9B, 0x40, 0xC3, 0x20, 0xE8,
 0x30, 0xF0, 0x20, 0x6A, 0x48, 0xF5, 0x60, 0xA2,
-0x10, 0xF0, 0x24, 0x6A, 0xF6, 0xF4, 0x50, 0x9A,
+0x10, 0xF0, 0x24, 0x6A, 0x16, 0xF3, 0x4C, 0x9A,
 0x60, 0xC2, 0x20, 0xE8, 0x10, 0xF0, 0x24, 0x6A,
-0xF6, 0xF4, 0x54, 0x9A, 0x60, 0xA2, 0xFF, 0x6A,
+0x16, 0xF3, 0x50, 0x9A, 0x60, 0xA2, 0xFF, 0x6A,
 0x6C, 0xEA, 0xFF, 0x72, 0x00, 0x6A, 0x0B, 0x61,
-0x10, 0xF0, 0x24, 0x6A, 0xF6, 0xF4, 0x58, 0x9A,
+0x10, 0xF0, 0x24, 0x6A, 0x16, 0xF3, 0x54, 0x9A,
 0x60, 0xA2, 0x07, 0x6A, 0x6C, 0xEA, 0x07, 0x6B,
 0x6E, 0xEA, 0x01, 0x5A, 0x58, 0x67, 0x20, 0xE8,
 0xFF, 0x6A, 0x4C, 0xEC, 0x01, 0x74, 0xAC, 0xEA,
@@ -45852,7 +45671,7 @@ u8 array_mp_8821c_fw_wowlan[] = {
 0x01, 0x6D, 0x40, 0xEA, 0x05, 0x97, 0x03, 0x63,
 0x00, 0xEF, 0x00, 0x65, 0xFF, 0x63, 0x01, 0xD1,
 0x00, 0xD0, 0x10, 0xF0, 0x24, 0x6B, 0x30, 0xF0,
-0x20, 0x69, 0xF6, 0xF4, 0xFC, 0x9B, 0xCF, 0xF4,
+0x20, 0x69, 0x16, 0xF3, 0xF8, 0x9B, 0xCF, 0xF4,
 0x60, 0x99, 0xFF, 0x6A, 0x4C, 0xEC, 0xEC, 0xEB,
 0xEE, 0xEB, 0x4C, 0xED, 0x4C, 0xEE, 0x80, 0xF0,
 0x1E, 0x23, 0x30, 0xF0, 0x20, 0x6B, 0xC0, 0xF1,
@@ -45884,10 +45703,10 @@ u8 array_mp_8821c_fw_wowlan[] = {
 0x18, 0x6B, 0x8C, 0xEB, 0x10, 0x73, 0x07, 0x61,
 0xC8, 0xF3, 0x79, 0xA2, 0x03, 0x6C, 0x76, 0x33,
 0x8C, 0xEB, 0x88, 0xF3, 0x64, 0xC2, 0x10, 0xF0,
-0x24, 0x6A, 0x16, 0xF5, 0x40, 0x9A, 0x60, 0xA2,
+0x24, 0x6A, 0x16, 0xF3, 0x5C, 0x9A, 0x60, 0xA2,
 0x07, 0x23, 0x60, 0xA2, 0xFF, 0x6A, 0x4C, 0xEB,
 0x30, 0xF0, 0x20, 0x6A, 0x48, 0xF5, 0x72, 0xCA,
-0x10, 0xF0, 0x24, 0x6A, 0x16, 0xF5, 0x44, 0x9A,
+0x10, 0xF0, 0x24, 0x6A, 0x36, 0xF3, 0x40, 0x9A,
 0x30, 0xF0, 0x20, 0x6C, 0x48, 0xF5, 0x92, 0xAC,
 0xA0, 0xA2, 0xFF, 0x6B, 0x6C, 0xED, 0x8E, 0xED,
 0x02, 0x25, 0x8C, 0xEB, 0x60, 0xC2, 0x30, 0xF0,
@@ -45993,12 +45812,12 @@ u8 array_mp_8821c_fw_wowlan[] = {
 0x0F, 0x6A, 0x6C, 0xEA, 0x01, 0x72, 0x25, 0x61,
 0x05, 0x59, 0x03, 0x61, 0xA0, 0xF6, 0x08, 0x6A,
 0x07, 0x10, 0x10, 0xF0, 0x24, 0x6A, 0x24, 0x31,
-0x76, 0xF2, 0x1C, 0x4A, 0x49, 0xE1, 0x40, 0xAA,
+0x96, 0xF0, 0x18, 0x4A, 0x49, 0xE1, 0x40, 0xAA,
 0x61, 0x42, 0x1F, 0xF7, 0x00, 0x6C, 0x8C, 0xEB,
 0x02, 0xF0, 0x00, 0x73, 0x01, 0x60, 0x05, 0x2B,
-0x10, 0xF0, 0x24, 0x6B, 0x16, 0xF5, 0x68, 0x9B,
-0x04, 0x10, 0x10, 0xF0, 0x24, 0x6B, 0x16, 0xF5,
-0x6C, 0x9B, 0x69, 0xE2, 0x60, 0xA2, 0x20, 0x6A,
+0x10, 0xF0, 0x24, 0x6B, 0x36, 0xF3, 0x64, 0x9B,
+0x04, 0x10, 0x10, 0xF0, 0x24, 0x6B, 0x36, 0xF3,
+0x68, 0x9B, 0x69, 0xE2, 0x60, 0xA2, 0x20, 0x6A,
 0x6C, 0xEA, 0x4B, 0xEA, 0xC0, 0xF7, 0x42, 0x32,
 0x01, 0x10, 0x01, 0x6A, 0x07, 0x97, 0x06, 0x91,
 0x05, 0x90, 0x04, 0x63, 0x00, 0xEF, 0x00, 0x65,
@@ -46012,17 +45831,17 @@ u8 array_mp_8821c_fw_wowlan[] = {
 0x8F, 0xF5, 0x48, 0xA2, 0x01, 0x6B, 0x46, 0x32,
 0x6C, 0xEA, 0x20, 0xE8, 0xFD, 0x63, 0x05, 0x62,
 0x00, 0x18, 0xE7, 0xC7, 0x17, 0x2A, 0x10, 0xF0,
-0x24, 0x6A, 0x16, 0xF5, 0x50, 0x9A, 0x40, 0xA2,
+0x24, 0x6A, 0x36, 0xF3, 0x4C, 0x9A, 0x40, 0xA2,
 0x2A, 0x2A, 0x30, 0xF0, 0x20, 0x6A, 0xC8, 0xF5,
 0x69, 0xA2, 0x01, 0x6A, 0x6C, 0xEA, 0xFF, 0x6B,
 0x6C, 0xEA, 0x21, 0x2A, 0x10, 0xF0, 0x24, 0x6A,
-0x16, 0xF5, 0x54, 0x9A, 0x60, 0xA2, 0x02, 0x6A,
+0x36, 0xF3, 0x50, 0x9A, 0x60, 0xA2, 0x02, 0x6A,
 0x6C, 0xEA, 0x19, 0x22, 0x10, 0xF0, 0x24, 0x6A,
-0x16, 0xF5, 0x58, 0x9A, 0x60, 0xAA, 0x02, 0xF0,
+0x36, 0xF3, 0x54, 0x9A, 0x60, 0xAA, 0x02, 0xF0,
 0x00, 0x6A, 0x6C, 0xEA, 0x10, 0x2A, 0x00, 0x18,
 0x4B, 0xC6, 0x01, 0x72, 0x01, 0x6A, 0x0C, 0x60,
-0x10, 0xF0, 0x24, 0x6A, 0x16, 0xF5, 0x7C, 0x9A,
-0x10, 0xF0, 0x24, 0x6C, 0x36, 0xF5, 0x80, 0x9C,
+0x10, 0xF0, 0x24, 0x6A, 0x36, 0xF3, 0x78, 0x9A,
+0x10, 0xF0, 0x24, 0x6C, 0x36, 0xF3, 0x9C, 0x9C,
 0x40, 0x9B, 0x8D, 0xEA, 0x40, 0xDB, 0x00, 0x6A,
 0x05, 0x97, 0x03, 0x63, 0x00, 0xEF, 0x00, 0x65,
 0x30, 0xF0, 0x20, 0x6A, 0x8F, 0xF5, 0x68, 0xA2,
@@ -46052,15 +45871,15 @@ u8 array_mp_8821c_fw_wowlan[] = {
 0x7D, 0xC0, 0xCF, 0xF4, 0x80, 0xA1, 0x01, 0x6B,
 0x8C, 0xEB, 0x4C, 0xEB, 0x29, 0x23, 0xCF, 0xF4,
 0x00, 0x49, 0x42, 0xA1, 0xFF, 0x72, 0x54, 0x60,
-0x10, 0xF0, 0x24, 0x6A, 0x36, 0xF5, 0x44, 0x9A,
+0x10, 0xF0, 0x24, 0x6A, 0x56, 0xF3, 0x40, 0x9A,
 0x00, 0x6B, 0x30, 0xF0, 0x20, 0x68, 0x60, 0xC2,
-0x10, 0xF0, 0x24, 0x6A, 0x36, 0xF5, 0x48, 0x9A,
+0x10, 0xF0, 0x24, 0x6A, 0x56, 0xF3, 0x44, 0x9A,
 0x04, 0x6B, 0xFF, 0x6C, 0x60, 0xC2, 0xAE, 0xF2,
 0x50, 0x98, 0x59, 0x4C, 0x00, 0x6D, 0x05, 0x6E,
 0x40, 0xEA, 0xC2, 0xA1, 0xAE, 0xF2, 0x50, 0x98,
 0xFF, 0x6C, 0x55, 0x4C, 0x00, 0x6D, 0x05, 0x4E,
 0x40, 0xEA, 0x00, 0x18, 0x08, 0xC8, 0x34, 0x2A,
-0x04, 0x94, 0x00, 0x18, 0xC9, 0xE9, 0x30, 0x10,
+0x04, 0x94, 0x00, 0x18, 0x50, 0xE9, 0x30, 0x10,
 0x88, 0xF3, 0x65, 0xA0, 0x02, 0x5B, 0x13, 0x60,
 0x88, 0xF3, 0xC4, 0xA0, 0x30, 0xF0, 0x20, 0x6A,
 0xAE, 0xF2, 0x50, 0x9A, 0xFF, 0x6C, 0xD9, 0xE3,
@@ -46102,7 +45921,7 @@ u8 array_mp_8821c_fw_wowlan[] = {
 0x30, 0xF0, 0x20, 0x6A, 0x4F, 0xF7, 0x95, 0xA3,
 0x6E, 0xF5, 0x58, 0x9A, 0x40, 0xEA, 0x01, 0x72,
 0x78, 0x67, 0x04, 0xD3, 0x1A, 0x2B, 0x88, 0xF3,
-0xA2, 0xA0, 0x91, 0x67, 0x00, 0x18, 0x68, 0xEA,
+0xA2, 0xA0, 0x91, 0x67, 0x00, 0x18, 0xEF, 0xE9,
 0x91, 0x67, 0x00, 0x6D, 0x00, 0x18, 0xE2, 0xC5,
 0x68, 0xF3, 0x7A, 0xA0, 0xC8, 0xF3, 0x54, 0xD8,
 0x20, 0x6A, 0x6D, 0xEA, 0x68, 0xF3, 0x5A, 0xC0,
@@ -46113,25 +45932,26 @@ u8 array_mp_8821c_fw_wowlan[] = {
 0x08, 0xD1, 0x07, 0xD0, 0xFF, 0x6A, 0x4C, 0xEC,
 0x30, 0xF0, 0x20, 0x69, 0x04, 0xD4, 0xCF, 0xF4,
 0x00, 0x49, 0xC0, 0xF0, 0x88, 0xA1, 0x04, 0x6B,
-0x8C, 0xEB, 0x4C, 0xEB, 0x37, 0x23, 0xC0, 0xF0,
+0x8C, 0xEB, 0x4C, 0xEB, 0x32, 0x23, 0xC0, 0xF0,
 0x0A, 0xA1, 0xC0, 0xF0, 0x49, 0xA1, 0x58, 0xE8,
 0x12, 0xE8, 0xC0, 0xF0, 0x10, 0xC1, 0x00, 0x18,
 0xDA, 0xC7, 0x03, 0x22, 0xC0, 0xF0, 0x11, 0xC1,
 0x03, 0x10, 0x01, 0x6A, 0xC0, 0xF0, 0x51, 0xC1,
 0x30, 0xF0, 0x20, 0x6A, 0x8F, 0xF5, 0x11, 0xA2,
 0x02, 0x58, 0x11, 0x61, 0x00, 0x18, 0xDA, 0xC7,
-0x06, 0x22, 0x04, 0x94, 0x00, 0x18, 0xD0, 0xE9,
-0x04, 0x94, 0x00, 0x18, 0xC9, 0xE9, 0x04, 0x94,
-0x00, 0x18, 0x99, 0xE9, 0x04, 0x94, 0xB0, 0x67,
-0x00, 0x18, 0x68, 0xEA, 0x0F, 0x10, 0x01, 0x70,
-0x04, 0x61, 0x04, 0x94, 0x00, 0x18, 0xA3, 0xE9,
-0x09, 0x10, 0x00, 0x18, 0xDA, 0xC7, 0x06, 0x22,
-0x04, 0x94, 0x00, 0x18, 0xD0, 0xE9, 0x04, 0x94,
-0x00, 0x18, 0xC9, 0xE9, 0x09, 0x97, 0x08, 0x91,
+0x06, 0x22, 0x04, 0x94, 0x00, 0x18, 0x57, 0xE9,
+0x04, 0x94, 0x00, 0x18, 0x50, 0xE9, 0x04, 0x94,
+0x00, 0x18, 0x20, 0xE9, 0x04, 0x94, 0xB0, 0x67,
+0x00, 0x18, 0xEF, 0xE9, 0x13, 0x10, 0x01, 0x70,
+0x04, 0x61, 0x04, 0x94, 0x00, 0x18, 0x2A, 0xE9,
+0x0D, 0x10, 0x00, 0x18, 0xDA, 0xC7, 0x0A, 0x22,
+0x03, 0x10, 0x04, 0x94, 0x00, 0x18, 0x46, 0xE9,
+0x04, 0x94, 0x00, 0x18, 0x57, 0xE9, 0x04, 0x94,
+0x00, 0x18, 0x50, 0xE9, 0x09, 0x97, 0x08, 0x91,
 0x07, 0x90, 0x05, 0x63, 0x00, 0xEF, 0x00, 0x65,
 0xFC, 0x63, 0x07, 0x62, 0x06, 0xD0, 0xFF, 0x6A,
 0x4C, 0xEC, 0x12, 0x2C, 0x10, 0xF0, 0x23, 0x6C,
-0xE4, 0xF5, 0x01, 0x4C, 0x00, 0x18, 0xCF, 0xE6,
+0xA4, 0xF5, 0x05, 0x4C, 0x00, 0x18, 0x56, 0xE6,
 0x30, 0xF0, 0x20, 0x6A, 0xCF, 0xF4, 0x00, 0x4A,
 0xC0, 0xF0, 0x92, 0xA2, 0x02, 0x6B, 0x6B, 0xEB,
 0x8C, 0xEB, 0xC0, 0xF0, 0x72, 0xC2, 0x1F, 0x10,
@@ -46139,18 +45959,18 @@ u8 array_mp_8821c_fw_wowlan[] = {
 0xC0, 0xF0, 0x88, 0xA0, 0x04, 0x6B, 0x8C, 0xEB,
 0x4C, 0xEB, 0x15, 0x23, 0xC0, 0xF0, 0xCB, 0xA0,
 0x00, 0x6A, 0x04, 0xD2, 0xA2, 0x67, 0x0A, 0x6A,
-0x58, 0xEE, 0x10, 0xF0, 0x23, 0x6C, 0xE4, 0xF5,
-0x01, 0x4C, 0x01, 0x6F, 0x12, 0xEE, 0x00, 0x18,
-0xE2, 0xE6, 0xC0, 0xF0, 0x72, 0xA0, 0x01, 0x6A,
+0x58, 0xEE, 0x10, 0xF0, 0x23, 0x6C, 0xA4, 0xF5,
+0x05, 0x4C, 0x01, 0x6F, 0x12, 0xEE, 0x00, 0x18,
+0x69, 0xE6, 0xC0, 0xF0, 0x72, 0xA0, 0x01, 0x6A,
 0x6D, 0xEA, 0xC0, 0xF0, 0x52, 0xC0, 0x07, 0x97,
 0x06, 0x90, 0x04, 0x63, 0x00, 0xEF, 0x00, 0x65,
-0xFD, 0x63, 0x05, 0x62, 0x00, 0x18, 0x73, 0xEA,
+0xFD, 0x63, 0x05, 0x62, 0x00, 0x18, 0xFA, 0xE9,
 0x30, 0xF0, 0x20, 0x6A, 0x6E, 0xF2, 0x58, 0x9A,
 0x00, 0x6D, 0xC5, 0x67, 0xFF, 0x6C, 0x40, 0xEA,
 0x01, 0x6C, 0x0C, 0x6D, 0x00, 0x18, 0x24, 0xC6,
 0x05, 0x97, 0x03, 0x63, 0x00, 0xEF, 0x00, 0x65,
 0xFD, 0x63, 0x05, 0x62, 0x04, 0xD0, 0xFF, 0x68,
-0x8C, 0xE8, 0x00, 0x18, 0x73, 0xEA, 0x08, 0x20,
+0x8C, 0xE8, 0x00, 0x18, 0xFA, 0xE9, 0x08, 0x20,
 0x30, 0xF0, 0x20, 0x6A, 0x6E, 0xF2, 0x58, 0x9A,
 0x00, 0x6D, 0xFF, 0x6C, 0xC5, 0x67, 0x40, 0xEA,
 0x01, 0x6C, 0x04, 0x6D, 0x00, 0x18, 0x24, 0xC6,
@@ -46159,1180 +45979,1142 @@ u8 array_mp_8821c_fw_wowlan[] = {
 0x6E, 0xF2, 0x58, 0x9A, 0xFF, 0x6C, 0xA4, 0x67,
 0x2F, 0x6E, 0x40, 0xEA, 0x30, 0xF0, 0x20, 0x6A,
 0xCE, 0xF2, 0x40, 0x9A, 0x40, 0xEA, 0x00, 0x18,
-0xA8, 0xEA, 0x01, 0x6C, 0x08, 0x6D, 0x00, 0x18,
+0x2F, 0xEA, 0x01, 0x6C, 0x08, 0x6D, 0x00, 0x18,
 0x24, 0xC6, 0x05, 0x97, 0x03, 0x63, 0x00, 0xEF,
 0xFC, 0x63, 0x07, 0x62, 0x06, 0xD1, 0x05, 0xD0,
 0xFF, 0x69, 0x04, 0x67, 0x2C, 0xE8, 0xAC, 0xE9,
 0x00, 0x18, 0xDA, 0xC7, 0x07, 0x22, 0x03, 0x28,
-0x00, 0x18, 0x0C, 0xC9, 0x0D, 0x10, 0x00, 0x18,
-0xF6, 0xC8, 0x0A, 0x10, 0x01, 0x70, 0x08, 0x61,
+0x00, 0x18, 0x0E, 0xC9, 0x0D, 0x10, 0x00, 0x18,
+0xF8, 0xC8, 0x0A, 0x10, 0x01, 0x70, 0x08, 0x61,
 0x30, 0xF0, 0x20, 0x6A, 0x2E, 0xF4, 0x48, 0x9A,
 0x04, 0x6C, 0x01, 0x6D, 0xD1, 0x67, 0x40, 0xEA,
 0x07, 0x97, 0x06, 0x91, 0x05, 0x90, 0x04, 0x63,
 0x00, 0xEF, 0x00, 0x65, 0xFD, 0x63, 0x05, 0x62,
 0x04, 0xD0, 0x30, 0xF0, 0x20, 0x6A, 0x8F, 0xF5,
-0x08, 0xA2, 0x00, 0x6C, 0x16, 0x30, 0x00, 0x18,
-0xD8, 0xC8, 0x00, 0x18, 0x08, 0xC8, 0x10, 0x22,
-0x00, 0x18, 0xDA, 0xC7, 0x0D, 0x22, 0x90, 0x67,
-0x00, 0x18, 0xBF, 0xE9, 0x90, 0x67, 0x00, 0x18,
-0xD0, 0xE9, 0x90, 0x67, 0x00, 0x18, 0xC9, 0xE9,
-0x00, 0x6C, 0xB0, 0x67, 0x00, 0x18, 0x18, 0xC9,
+0x08, 0xA2, 0x00, 0x6C, 0x00, 0x18, 0xDA, 0xC8,
+0x00, 0x18, 0x08, 0xC8, 0x16, 0x30, 0x01, 0x6C,
+0x04, 0x22, 0x90, 0x67, 0x00, 0x18, 0xB1, 0xC8,
+0x00, 0x6C, 0xB0, 0x67, 0x00, 0x18, 0x1A, 0xC9,
 0x05, 0x97, 0x04, 0x90, 0x03, 0x63, 0x00, 0xEF,
 0xFD, 0x63, 0x05, 0x62, 0x04, 0xD0, 0x30, 0xF0,
-0x20, 0x6A, 0x8F, 0xF5, 0x08, 0xA2, 0x00, 0x6C,
-0x00, 0x18, 0xD8, 0xC8, 0x00, 0x18, 0x08, 0xC8,
-0x16, 0x30, 0x01, 0x6C, 0x04, 0x22, 0x90, 0x67,
-0x00, 0x18, 0xB1, 0xC8, 0x00, 0x6C, 0xB0, 0x67,
-0x00, 0x18, 0x18, 0xC9, 0x05, 0x97, 0x04, 0x90,
-0x03, 0x63, 0x00, 0xEF, 0xFD, 0x63, 0x05, 0x62,
-0x04, 0xD0, 0x30, 0xF0, 0x20, 0x6B, 0xCF, 0xF4,
-0x00, 0x4B, 0x04, 0x67, 0xC0, 0xF0, 0x88, 0xA3,
-0xFF, 0x6A, 0x4C, 0xE8, 0x96, 0x34, 0x0E, 0xEC,
-0xAC, 0xEA, 0x19, 0x2C, 0xC0, 0xF0, 0xB0, 0xA3,
-0x43, 0xED, 0x04, 0x61, 0x4B, 0xE5, 0xC0, 0xF0,
-0x50, 0xC3, 0x02, 0x10, 0xC0, 0xF0, 0x90, 0xC3,
-0x30, 0xF0, 0x20, 0x6A, 0x8F, 0xF5, 0x50, 0xA2,
-0x0A, 0x2A, 0x90, 0x67, 0x00, 0x18, 0xB1, 0xC8,
-0x01, 0x6C, 0xB0, 0x67, 0x00, 0x18, 0x18, 0xC9,
-0x01, 0x6C, 0x00, 0x18, 0xD8, 0xC8, 0x05, 0x97,
-0x04, 0x90, 0x03, 0x63, 0x00, 0xEF, 0x00, 0x65,
-0xFD, 0x63, 0x05, 0x62, 0x04, 0xD0, 0xFF, 0x68,
-0x8C, 0xE8, 0x00, 0x18, 0x08, 0xC8, 0x0E, 0x22,
-0x90, 0x67, 0x00, 0x18, 0x0C, 0xC8, 0x0A, 0x22,
-0x00, 0x18, 0xDA, 0xC7, 0x07, 0x22, 0x30, 0xF0,
-0x20, 0x6A, 0x8F, 0xF5, 0xB1, 0xA2, 0x90, 0x67,
-0x00, 0x18, 0x47, 0xC9, 0x05, 0x97, 0x04, 0x90,
-0x03, 0x63, 0x00, 0xEF, 0xFD, 0x63, 0x05, 0x62,
+0x20, 0x6B, 0xCF, 0xF4, 0x00, 0x4B, 0x04, 0x67,
+0xC0, 0xF0, 0x88, 0xA3, 0xFF, 0x6A, 0x4C, 0xE8,
+0x96, 0x34, 0x0E, 0xEC, 0xAC, 0xEA, 0x19, 0x2C,
+0xC0, 0xF0, 0xB0, 0xA3, 0x43, 0xED, 0x04, 0x61,
+0x4B, 0xE5, 0xC0, 0xF0, 0x50, 0xC3, 0x02, 0x10,
+0xC0, 0xF0, 0x90, 0xC3, 0x30, 0xF0, 0x20, 0x6A,
+0x8F, 0xF5, 0x50, 0xA2, 0x0A, 0x2A, 0x90, 0x67,
+0x00, 0x18, 0xB1, 0xC8, 0x01, 0x6C, 0xB0, 0x67,
+0x00, 0x18, 0x1A, 0xC9, 0x01, 0x6C, 0x00, 0x18,
+0xDA, 0xC8, 0x05, 0x97, 0x04, 0x90, 0x03, 0x63,
+0x00, 0xEF, 0x00, 0x65, 0xFD, 0x63, 0x05, 0x62,
 0x04, 0xD0, 0xFF, 0x68, 0x8C, 0xE8, 0x00, 0x18,
 0x08, 0xC8, 0x0E, 0x22, 0x90, 0x67, 0x00, 0x18,
 0x0C, 0xC8, 0x0A, 0x22, 0x00, 0x18, 0xDA, 0xC7,
-0x07, 0x2A, 0x30, 0xF0, 0x20, 0x6A, 0x8F, 0xF5,
-0xB1, 0xA2, 0x90, 0x67, 0x00, 0x18, 0x47, 0xC9,
+0x07, 0x22, 0x30, 0xF0, 0x20, 0x6A, 0x8F, 0xF5,
+0xB1, 0xA2, 0x90, 0x67, 0x00, 0x18, 0x38, 0xC9,
 0x05, 0x97, 0x04, 0x90, 0x03, 0x63, 0x00, 0xEF,
-0xFD, 0x63, 0x05, 0x62, 0x30, 0xF0, 0x20, 0x6A,
-0xCF, 0xF4, 0x00, 0x4A, 0xC0, 0xF0, 0x92, 0xA2,
-0xC0, 0xF0, 0xA8, 0xA2, 0x02, 0x6B, 0x6B, 0xEB,
-0x8C, 0xEB, 0xB6, 0x35, 0x00, 0x6C, 0xC0, 0xF0,
-0x72, 0xC2, 0x00, 0x18, 0x18, 0xC9, 0x05, 0x97,
+0xFD, 0x63, 0x05, 0x62, 0x04, 0xD0, 0xFF, 0x68,
+0x8C, 0xE8, 0x00, 0x18, 0x08, 0xC8, 0x0E, 0x22,
+0x90, 0x67, 0x00, 0x18, 0x0C, 0xC8, 0x0A, 0x22,
+0x00, 0x18, 0xDA, 0xC7, 0x07, 0x2A, 0x30, 0xF0,
+0x20, 0x6A, 0x8F, 0xF5, 0xB1, 0xA2, 0x90, 0x67,
+0x00, 0x18, 0x38, 0xC9, 0x05, 0x97, 0x04, 0x90,
 0x03, 0x63, 0x00, 0xEF, 0xFD, 0x63, 0x05, 0x62,
-0x04, 0xD0, 0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1,
-0x08, 0x4A, 0xFF, 0x68, 0x8C, 0xE8, 0x68, 0xF3,
-0x99, 0xA2, 0x03, 0x6B, 0x6B, 0xEB, 0x41, 0x6D,
-0x8C, 0xEB, 0xAB, 0xED, 0xAC, 0xEB, 0x68, 0xF3,
-0xBA, 0xA2, 0x68, 0xF3, 0x79, 0xC2, 0x11, 0x6B,
-0x00, 0x6C, 0x6B, 0xEB, 0x88, 0xF3, 0x85, 0xC2,
-0x68, 0xF3, 0x9D, 0xC2, 0xAC, 0xEB, 0x88, 0xF3,
-0x86, 0xC2, 0x90, 0x67, 0x68, 0xF3, 0x7A, 0xC2,
-0x00, 0x18, 0xAA, 0xE9, 0x90, 0x67, 0x00, 0x18,
-0xA3, 0xE9, 0x90, 0x67, 0x00, 0x18, 0xBF, 0xE9,
-0x05, 0x97, 0x04, 0x90, 0x03, 0x63, 0x00, 0xEF,
-0xFD, 0x63, 0x05, 0x62, 0xF0, 0x6D, 0x01, 0x6C,
-0x00, 0x18, 0x24, 0xC6, 0x00, 0x6C, 0x00, 0x18,
-0xEF, 0xEB, 0x00, 0x18, 0xCE, 0xE4, 0x00, 0x18,
-0x11, 0xE5, 0x01, 0x6C, 0x00, 0x18, 0xEF, 0xEB,
-0x01, 0x6C, 0x00, 0x6D, 0x00, 0x18, 0x24, 0xC6,
-0x05, 0x97, 0x03, 0x63, 0x00, 0xEF, 0x00, 0x65,
-0xFD, 0x63, 0x05, 0x62, 0x30, 0xF0, 0x20, 0x6A,
-0x48, 0xF5, 0x44, 0xA2, 0x02, 0x22, 0x08, 0x72,
-0x06, 0x61, 0x00, 0x18, 0xEB, 0xC7, 0x01, 0x72,
-0x02, 0x61, 0x00, 0x18, 0x9A, 0xC9, 0x05, 0x97,
+0x30, 0xF0, 0x20, 0x6A, 0xCF, 0xF4, 0x00, 0x4A,
+0xC0, 0xF0, 0x92, 0xA2, 0xC0, 0xF0, 0xA8, 0xA2,
+0x02, 0x6B, 0x6B, 0xEB, 0x8C, 0xEB, 0xB6, 0x35,
+0x00, 0x6C, 0xC0, 0xF0, 0x72, 0xC2, 0x00, 0x18,
+0x1A, 0xC9, 0x05, 0x97, 0x03, 0x63, 0x00, 0xEF,
+0xFD, 0x63, 0x05, 0x62, 0x04, 0xD0, 0x30, 0xF0,
+0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A, 0xFF, 0x68,
+0x8C, 0xE8, 0x68, 0xF3, 0x99, 0xA2, 0x03, 0x6B,
+0x6B, 0xEB, 0x41, 0x6D, 0x8C, 0xEB, 0xAB, 0xED,
+0xAC, 0xEB, 0x68, 0xF3, 0xBA, 0xA2, 0x68, 0xF3,
+0x79, 0xC2, 0x11, 0x6B, 0x00, 0x6C, 0x6B, 0xEB,
+0x88, 0xF3, 0x85, 0xC2, 0x68, 0xF3, 0x9D, 0xC2,
+0xAC, 0xEB, 0x88, 0xF3, 0x86, 0xC2, 0x90, 0x67,
+0x68, 0xF3, 0x7A, 0xC2, 0x00, 0x18, 0x31, 0xE9,
+0x90, 0x67, 0x00, 0x18, 0x2A, 0xE9, 0x90, 0x67,
+0x00, 0x18, 0x46, 0xE9, 0x05, 0x97, 0x04, 0x90,
 0x03, 0x63, 0x00, 0xEF, 0xFD, 0x63, 0x05, 0x62,
-0x30, 0xF0, 0x20, 0x6A, 0x48, 0xF5, 0x61, 0xA2,
-0x01, 0x6A, 0x6C, 0xEA, 0x02, 0x22, 0x00, 0x18,
-0xA6, 0xC9, 0x05, 0x97, 0x03, 0x63, 0x00, 0xEF,
-0xFB, 0x63, 0x09, 0x62, 0x08, 0xD1, 0x07, 0xD0,
-0x10, 0xF0, 0x24, 0x6B, 0x36, 0xF5, 0x6C, 0x9B,
-0xFF, 0x6A, 0x24, 0x67, 0x60, 0xA3, 0x4C, 0xE9,
-0x30, 0xF0, 0x20, 0x68, 0x6C, 0xEA, 0x04, 0xD2,
-0x6E, 0xF2, 0x58, 0x98, 0xFF, 0x6C, 0xA4, 0x67,
-0x2D, 0x6E, 0x40, 0xEA, 0x30, 0xF0, 0x20, 0x6A,
-0xCE, 0xF2, 0x40, 0x9A, 0x40, 0xEA, 0x07, 0x2A,
-0x6E, 0xF2, 0x58, 0x98, 0x04, 0x95, 0xFF, 0x6C,
-0x2D, 0x6E, 0x40, 0xEA, 0x2C, 0x10, 0x05, 0x59,
-0x24, 0x60, 0x10, 0xF0, 0x24, 0x6A, 0x28, 0x31,
-0xF6, 0xF1, 0x04, 0x4A, 0x29, 0xE2, 0x40, 0x9A,
-0x00, 0xEA, 0x00, 0x6C, 0x08, 0x6D, 0x17, 0x10,
-0x10, 0xF0, 0x24, 0x6A, 0x04, 0x6C, 0x36, 0xF5,
-0xB0, 0x9A, 0x11, 0x10, 0x10, 0xF0, 0x24, 0x6A,
-0x04, 0x6C, 0x36, 0xF5, 0xB4, 0x9A, 0x0B, 0x10,
-0x10, 0xF0, 0x24, 0x6A, 0x04, 0x6C, 0x36, 0xF5,
-0xB8, 0x9A, 0x05, 0x10, 0x10, 0xF0, 0x24, 0x6A,
-0x36, 0xF5, 0xBC, 0x9A, 0x04, 0x6C, 0x00, 0x18,
-0xAE, 0xDF, 0x00, 0x18, 0xA8, 0xEA, 0x01, 0x6C,
-0x00, 0x6D, 0x00, 0x18, 0x24, 0xC6, 0x09, 0x97,
-0x08, 0x91, 0x07, 0x90, 0x05, 0x63, 0x00, 0xEF,
-0xFD, 0x63, 0x05, 0x62, 0x30, 0xF0, 0x20, 0x6B,
-0x48, 0xF5, 0xA2, 0xA3, 0x08, 0x6B, 0xFF, 0x6A,
-0xAC, 0xEB, 0x4C, 0xEB, 0x4C, 0xEC, 0x03, 0x2B,
-0x01, 0x6C, 0x0C, 0x6D, 0x05, 0x10, 0x01, 0x6D,
-0x00, 0x18, 0x6D, 0xCD, 0x01, 0x6C, 0x04, 0x6D,
-0x00, 0x18, 0x24, 0xC6, 0x30, 0xF0, 0x20, 0x6A,
-0x6E, 0xF2, 0x58, 0x9A, 0x00, 0x6D, 0xFF, 0x6C,
-0xC5, 0x67, 0x40, 0xEA, 0x05, 0x97, 0x03, 0x63,
+0xF0, 0x6D, 0x01, 0x6C, 0x00, 0x18, 0x24, 0xC6,
+0x00, 0x6C, 0x00, 0x18, 0x76, 0xEB, 0x00, 0x18,
+0x55, 0xE4, 0x00, 0x18, 0x98, 0xE4, 0x01, 0x6C,
+0x00, 0x18, 0x76, 0xEB, 0x01, 0x6C, 0x00, 0x6D,
+0x00, 0x18, 0x24, 0xC6, 0x05, 0x97, 0x03, 0x63,
 0x00, 0xEF, 0x00, 0x65, 0xFD, 0x63, 0x05, 0x62,
+0x30, 0xF0, 0x20, 0x6A, 0x48, 0xF5, 0x44, 0xA2,
+0x02, 0x22, 0x08, 0x72, 0x06, 0x61, 0x00, 0x18,
+0xEB, 0xC7, 0x01, 0x72, 0x02, 0x61, 0x00, 0x18,
+0x8B, 0xC9, 0x05, 0x97, 0x03, 0x63, 0x00, 0xEF,
+0xFD, 0x63, 0x05, 0x62, 0x30, 0xF0, 0x20, 0x6A,
+0x48, 0xF5, 0x61, 0xA2, 0x01, 0x6A, 0x6C, 0xEA,
+0x02, 0x22, 0x00, 0x18, 0x97, 0xC9, 0x05, 0x97,
+0x03, 0x63, 0x00, 0xEF, 0xFB, 0x63, 0x09, 0x62,
+0x08, 0xD1, 0x07, 0xD0, 0x10, 0xF0, 0x24, 0x6B,
+0x56, 0xF3, 0x68, 0x9B, 0xFF, 0x6A, 0x24, 0x67,
+0x60, 0xA3, 0x4C, 0xE9, 0x30, 0xF0, 0x20, 0x68,
+0x6C, 0xEA, 0x04, 0xD2, 0x6E, 0xF2, 0x58, 0x98,
+0xFF, 0x6C, 0xA4, 0x67, 0x2D, 0x6E, 0x40, 0xEA,
+0x30, 0xF0, 0x20, 0x6A, 0xCE, 0xF2, 0x40, 0x9A,
+0x40, 0xEA, 0x07, 0x2A, 0x6E, 0xF2, 0x58, 0x98,
+0x04, 0x95, 0xFF, 0x6C, 0x2D, 0x6E, 0x40, 0xEA,
+0x2C, 0x10, 0x05, 0x59, 0x24, 0x60, 0x10, 0xF0,
+0x24, 0x6A, 0x28, 0x31, 0x16, 0xF0, 0x00, 0x4A,
+0x29, 0xE2, 0x40, 0x9A, 0x00, 0xEA, 0x00, 0x6C,
+0x08, 0x6D, 0x17, 0x10, 0x10, 0xF0, 0x24, 0x6A,
+0x04, 0x6C, 0x56, 0xF3, 0xAC, 0x9A, 0x11, 0x10,
+0x10, 0xF0, 0x24, 0x6A, 0x04, 0x6C, 0x56, 0xF3,
+0xB0, 0x9A, 0x0B, 0x10, 0x10, 0xF0, 0x24, 0x6A,
+0x04, 0x6C, 0x56, 0xF3, 0xB4, 0x9A, 0x05, 0x10,
+0x10, 0xF0, 0x24, 0x6A, 0x56, 0xF3, 0xB8, 0x9A,
+0x04, 0x6C, 0x00, 0x18, 0x3C, 0xDF, 0x00, 0x18,
+0x2F, 0xEA, 0x01, 0x6C, 0x00, 0x6D, 0x00, 0x18,
+0x24, 0xC6, 0x09, 0x97, 0x08, 0x91, 0x07, 0x90,
+0x05, 0x63, 0x00, 0xEF, 0xFD, 0x63, 0x05, 0x62,
 0x30, 0xF0, 0x20, 0x6B, 0x48, 0xF5, 0xA2, 0xA3,
-0x04, 0x6B, 0xFF, 0x6A, 0xAC, 0xEB, 0x4C, 0xEB,
-0x4C, 0xEC, 0x06, 0x2B, 0x03, 0x6D, 0x00, 0x18,
-0x6D, 0xCD, 0x01, 0x6C, 0x04, 0x6D, 0x05, 0x10,
-0x00, 0x6D, 0x00, 0x18, 0x6D, 0xCD, 0x01, 0x6C,
-0x0C, 0x6D, 0x00, 0x18, 0x24, 0xC6, 0x30, 0xF0,
+0x08, 0x6B, 0xFF, 0x6A, 0xAC, 0xEB, 0x4C, 0xEB,
+0x4C, 0xEC, 0x03, 0x2B, 0x01, 0x6C, 0x0C, 0x6D,
+0x05, 0x10, 0x01, 0x6D, 0x00, 0x18, 0x5E, 0xCD,
+0x01, 0x6C, 0x04, 0x6D, 0x00, 0x18, 0x24, 0xC6,
+0x30, 0xF0, 0x20, 0x6A, 0x6E, 0xF2, 0x58, 0x9A,
+0x00, 0x6D, 0xFF, 0x6C, 0xC5, 0x67, 0x40, 0xEA,
+0x05, 0x97, 0x03, 0x63, 0x00, 0xEF, 0x00, 0x65,
+0xFD, 0x63, 0x05, 0x62, 0x30, 0xF0, 0x20, 0x6B,
+0x48, 0xF5, 0xA2, 0xA3, 0x04, 0x6B, 0xFF, 0x6A,
+0xAC, 0xEB, 0x4C, 0xEB, 0x4C, 0xEC, 0x06, 0x2B,
+0x03, 0x6D, 0x00, 0x18, 0x5E, 0xCD, 0x01, 0x6C,
+0x04, 0x6D, 0x05, 0x10, 0x00, 0x6D, 0x00, 0x18,
+0x5E, 0xCD, 0x01, 0x6C, 0x0C, 0x6D, 0x00, 0x18,
+0x24, 0xC6, 0x30, 0xF0, 0x20, 0x6A, 0x6E, 0xF2,
+0x58, 0x9A, 0x00, 0x6D, 0xFF, 0x6C, 0xC5, 0x67,
+0x40, 0xEA, 0x05, 0x97, 0x03, 0x63, 0x00, 0xEF,
+0xFD, 0x63, 0x05, 0x62, 0xFF, 0x6A, 0x4C, 0xEC,
+0x00, 0x6D, 0x00, 0x18, 0x5E, 0xCD, 0x30, 0xF0,
 0x20, 0x6A, 0x6E, 0xF2, 0x58, 0x9A, 0x00, 0x6D,
-0xFF, 0x6C, 0xC5, 0x67, 0x40, 0xEA, 0x05, 0x97,
-0x03, 0x63, 0x00, 0xEF, 0xFD, 0x63, 0x05, 0x62,
-0xFF, 0x6A, 0x4C, 0xEC, 0x00, 0x6D, 0x00, 0x18,
-0x6D, 0xCD, 0x30, 0xF0, 0x20, 0x6A, 0x6E, 0xF2,
-0x58, 0x9A, 0x00, 0x6D, 0xC5, 0x67, 0xFF, 0x6C,
-0x40, 0xEA, 0x01, 0x6C, 0x0C, 0x6D, 0x00, 0x18,
-0x24, 0xC6, 0x05, 0x97, 0x03, 0x63, 0x00, 0xEF,
+0xC5, 0x67, 0xFF, 0x6C, 0x40, 0xEA, 0x01, 0x6C,
+0x0C, 0x6D, 0x00, 0x18, 0x24, 0xC6, 0x05, 0x97,
+0x03, 0x63, 0x00, 0xEF, 0xFC, 0x63, 0x07, 0x62,
+0x06, 0xD1, 0x05, 0xD0, 0xFF, 0x69, 0x2C, 0xEC,
+0xAC, 0xE9, 0x38, 0x24, 0x30, 0xF0, 0x20, 0x6B,
+0x30, 0xF0, 0x20, 0x6A, 0x6E, 0xF5, 0x58, 0x9A,
+0x4F, 0xF7, 0x95, 0xA3, 0x40, 0xEA, 0x01, 0x72,
+0x2D, 0x61, 0x30, 0xF0, 0x20, 0x68, 0xC0, 0xF1,
+0x08, 0x48, 0x68, 0xF3, 0x7A, 0xA0, 0x05, 0x6A,
+0x4B, 0xEA, 0x6C, 0xEA, 0x68, 0xF3, 0x5A, 0xC0,
+0x30, 0xF0, 0x20, 0x6A, 0x6E, 0xF2, 0x58, 0x9A,
+0x2B, 0x6E, 0xFF, 0x6C, 0x0F, 0x6D, 0x40, 0xEA,
+0x91, 0x67, 0x02, 0x6D, 0x00, 0x18, 0x5E, 0xCD,
+0x30, 0xF0, 0x20, 0x6A, 0x2E, 0xF4, 0x50, 0x9A,
+0xC8, 0xF2, 0x9F, 0xA0, 0x00, 0x6D, 0x08, 0x6E,
+0xF1, 0x67, 0x40, 0xEA, 0x01, 0x72, 0x0A, 0x61,
+0x68, 0xF3, 0x7A, 0xA0, 0x01, 0x6A, 0x01, 0x6C,
+0x6D, 0xEA, 0x06, 0x6D, 0x68, 0xF3, 0x5A, 0xC0,
+0x00, 0x18, 0x24, 0xC6, 0x07, 0x97, 0x06, 0x91,
+0x05, 0x90, 0x04, 0x63, 0x00, 0xEF, 0x00, 0x65,
 0xFC, 0x63, 0x07, 0x62, 0x06, 0xD1, 0x05, 0xD0,
-0xFF, 0x69, 0x2C, 0xEC, 0xAC, 0xE9, 0x38, 0x24,
-0x30, 0xF0, 0x20, 0x6B, 0x30, 0xF0, 0x20, 0x6A,
-0x6E, 0xF5, 0x58, 0x9A, 0x4F, 0xF7, 0x95, 0xA3,
-0x40, 0xEA, 0x01, 0x72, 0x2D, 0x61, 0x30, 0xF0,
-0x20, 0x68, 0xC0, 0xF1, 0x08, 0x48, 0x68, 0xF3,
-0x7A, 0xA0, 0x05, 0x6A, 0x4B, 0xEA, 0x6C, 0xEA,
-0x68, 0xF3, 0x5A, 0xC0, 0x30, 0xF0, 0x20, 0x6A,
-0x6E, 0xF2, 0x58, 0x9A, 0x2B, 0x6E, 0xFF, 0x6C,
-0x0F, 0x6D, 0x40, 0xEA, 0x91, 0x67, 0x02, 0x6D,
-0x00, 0x18, 0x6D, 0xCD, 0x30, 0xF0, 0x20, 0x6A,
-0x2E, 0xF4, 0x50, 0x9A, 0xC8, 0xF2, 0x9F, 0xA0,
-0x00, 0x6D, 0x08, 0x6E, 0xF1, 0x67, 0x40, 0xEA,
-0x01, 0x72, 0x0A, 0x61, 0x68, 0xF3, 0x7A, 0xA0,
-0x01, 0x6A, 0x01, 0x6C, 0x6D, 0xEA, 0x06, 0x6D,
-0x68, 0xF3, 0x5A, 0xC0, 0x00, 0x18, 0x24, 0xC6,
-0x07, 0x97, 0x06, 0x91, 0x05, 0x90, 0x04, 0x63,
-0x00, 0xEF, 0x00, 0x65, 0xFC, 0x63, 0x07, 0x62,
-0x06, 0xD1, 0x05, 0xD0, 0x25, 0x67, 0x30, 0xF0,
-0x20, 0x6D, 0xC0, 0xF1, 0x08, 0x4D, 0x06, 0x67,
-0x68, 0xF3, 0xDA, 0xA5, 0x03, 0x6B, 0xFF, 0x6A,
-0xCC, 0xEB, 0x4C, 0xEB, 0x4C, 0xEC, 0x4C, 0xE9,
-0x4C, 0xE8, 0xE0, 0xF0, 0x03, 0x2B, 0x68, 0xF3,
-0x5C, 0xA5, 0x8E, 0xEA, 0xC0, 0xF0, 0x1E, 0x22,
-0x0D, 0x5C, 0xC0, 0xF0, 0x1B, 0x60, 0x10, 0xF0,
-0x24, 0x6A, 0x88, 0x34, 0xF6, 0xF1, 0x18, 0x4A,
-0x89, 0xE2, 0x40, 0x9A, 0x00, 0xEA, 0x30, 0xF0,
-0x20, 0x6A, 0x48, 0xF5, 0x44, 0xA2, 0x0E, 0x72,
-0x03, 0x61, 0x90, 0x67, 0x00, 0x18, 0xE0, 0xC9,
-0x30, 0xF0, 0x20, 0x6A, 0x48, 0xF5, 0x44, 0xA2,
-0x03, 0x2A, 0x01, 0x6C, 0x00, 0x18, 0x00, 0xC9,
-0x30, 0xF0, 0x20, 0x6A, 0x48, 0xF5, 0x44, 0xA2,
-0x06, 0x72, 0x03, 0x61, 0x90, 0x67, 0x00, 0x18,
-0xF1, 0xC9, 0x30, 0xF0, 0x20, 0x6A, 0x48, 0xF5,
-0x44, 0xA2, 0x04, 0x72, 0x09, 0x61, 0x05, 0x21,
-0x91, 0x67, 0xB0, 0x67, 0x00, 0x18, 0x0E, 0xCA,
-0x03, 0x10, 0x90, 0x67, 0x00, 0x18, 0x03, 0xCA,
-0x30, 0xF0, 0x20, 0x6A, 0x48, 0xF5, 0x44, 0xA2,
-0x08, 0x72, 0xA0, 0xF0, 0x03, 0x61, 0x00, 0x18,
-0xF6, 0xC8, 0xA0, 0x10, 0x30, 0xF0, 0x20, 0x6A,
+0x25, 0x67, 0x30, 0xF0, 0x20, 0x6D, 0xC0, 0xF1,
+0x08, 0x4D, 0x06, 0x67, 0x68, 0xF3, 0xDA, 0xA5,
+0x03, 0x6B, 0xFF, 0x6A, 0xCC, 0xEB, 0x4C, 0xEB,
+0x4C, 0xEC, 0x4C, 0xE9, 0x4C, 0xE8, 0xE0, 0xF0,
+0x03, 0x2B, 0x68, 0xF3, 0x5C, 0xA5, 0x8E, 0xEA,
+0xC0, 0xF0, 0x1E, 0x22, 0x0D, 0x5C, 0xC0, 0xF0,
+0x1B, 0x60, 0x10, 0xF0, 0x24, 0x6A, 0x88, 0x34,
+0x16, 0xF0, 0x14, 0x4A, 0x89, 0xE2, 0x40, 0x9A,
+0x00, 0xEA, 0x30, 0xF0, 0x20, 0x6A, 0x48, 0xF5,
+0x44, 0xA2, 0x0E, 0x72, 0x03, 0x61, 0x90, 0x67,
+0x00, 0x18, 0xD1, 0xC9, 0x30, 0xF0, 0x20, 0x6A,
 0x48, 0xF5, 0x44, 0xA2, 0x03, 0x2A, 0x01, 0x6C,
-0x00, 0x18, 0x00, 0xC9, 0x30, 0xF0, 0x20, 0x6A,
+0x00, 0x18, 0x02, 0xC9, 0x30, 0xF0, 0x20, 0x6A,
 0x48, 0xF5, 0x44, 0xA2, 0x06, 0x72, 0x03, 0x61,
-0x90, 0x67, 0x00, 0x18, 0xF1, 0xC9, 0x30, 0xF0,
-0x20, 0x6A, 0x48, 0xF5, 0x44, 0xA2, 0x0E, 0x72,
-0x07, 0x61, 0x00, 0x18, 0x6D, 0xC6, 0x01, 0x72,
-0x03, 0x61, 0x90, 0x67, 0x00, 0x18, 0xE0, 0xC9,
-0x30, 0xF0, 0x20, 0x6A, 0x48, 0xF5, 0x44, 0xA2,
-0x0C, 0x72, 0x7C, 0x61, 0x00, 0x18, 0x6D, 0xC6,
-0x01, 0x72, 0x78, 0x61, 0x90, 0x67, 0x00, 0x18,
-0x79, 0xC6, 0x74, 0x10, 0x30, 0xF0, 0x20, 0x6A,
-0x48, 0xF5, 0x44, 0xA2, 0x0E, 0x72, 0x07, 0x61,
-0x00, 0x18, 0x6D, 0xC6, 0x01, 0x72, 0x03, 0x61,
-0x90, 0x67, 0x00, 0x18, 0xE0, 0xC9, 0x30, 0xF0,
-0x20, 0x6A, 0x48, 0xF5, 0x44, 0xA2, 0x06, 0x72,
-0x03, 0x61, 0x90, 0x67, 0x00, 0x18, 0xF1, 0xC9,
+0x90, 0x67, 0x00, 0x18, 0xE2, 0xC9, 0x30, 0xF0,
+0x20, 0x6A, 0x48, 0xF5, 0x44, 0xA2, 0x04, 0x72,
+0x09, 0x61, 0x05, 0x21, 0x91, 0x67, 0xB0, 0x67,
+0x00, 0x18, 0xFF, 0xC9, 0x03, 0x10, 0x90, 0x67,
+0x00, 0x18, 0xF4, 0xC9, 0x30, 0xF0, 0x20, 0x6A,
+0x48, 0xF5, 0x44, 0xA2, 0x08, 0x72, 0xA0, 0xF0,
+0x03, 0x61, 0x00, 0x18, 0xF8, 0xC8, 0xA0, 0x10,
 0x30, 0xF0, 0x20, 0x6A, 0x48, 0xF5, 0x44, 0xA2,
-0x0C, 0x72, 0x07, 0x61, 0x00, 0x18, 0x6D, 0xC6,
-0x01, 0x72, 0x03, 0x61, 0x90, 0x67, 0x00, 0x18,
-0x79, 0xC6, 0x30, 0xF0, 0x20, 0x6A, 0x48, 0xF5,
-0x44, 0xA2, 0x04, 0x72, 0x4B, 0x61, 0x00, 0x18,
-0x1A, 0xC8, 0x01, 0x72, 0x47, 0x61, 0x90, 0x67,
-0x00, 0x18, 0xB6, 0xC9, 0x43, 0x10, 0x30, 0xF0,
-0x20, 0x6A, 0x48, 0xF5, 0x44, 0xA2, 0x0E, 0x72,
-0x07, 0x61, 0x00, 0x18, 0x6D, 0xC6, 0x01, 0x72,
-0x03, 0x61, 0x90, 0x67, 0x00, 0x18, 0xE0, 0xC9,
+0x03, 0x2A, 0x01, 0x6C, 0x00, 0x18, 0x02, 0xC9,
 0x30, 0xF0, 0x20, 0x6A, 0x48, 0xF5, 0x44, 0xA2,
 0x06, 0x72, 0x03, 0x61, 0x90, 0x67, 0x00, 0x18,
-0xF1, 0xC9, 0x30, 0xF0, 0x20, 0x6A, 0x48, 0xF5,
-0x44, 0xA2, 0x0C, 0x72, 0x07, 0x61, 0x00, 0x18,
+0xE2, 0xC9, 0x30, 0xF0, 0x20, 0x6A, 0x48, 0xF5,
+0x44, 0xA2, 0x0E, 0x72, 0x07, 0x61, 0x00, 0x18,
 0x6D, 0xC6, 0x01, 0x72, 0x03, 0x61, 0x90, 0x67,
-0x00, 0x18, 0x79, 0xC6, 0x30, 0xF0, 0x20, 0x6A,
-0x48, 0xF5, 0x44, 0xA2, 0x03, 0x2A, 0x01, 0x6C,
-0x00, 0x18, 0x00, 0xC9, 0x30, 0xF0, 0x20, 0x6A,
-0x48, 0xF5, 0x44, 0xA2, 0x04, 0x72, 0x12, 0x61,
-0x00, 0x18, 0x99, 0xC6, 0x0F, 0x10, 0x30, 0xF0,
-0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A, 0x68, 0xF3,
-0x7C, 0xA2, 0x0C, 0x73, 0x07, 0x61, 0x68, 0xF3,
-0x79, 0xA2, 0x20, 0x6A, 0x6C, 0xEA, 0x02, 0x22,
-0x00, 0x18, 0x0C, 0xC9, 0x07, 0x97, 0x06, 0x91,
-0x05, 0x90, 0x04, 0x63, 0x00, 0xEF, 0x00, 0x65,
-0xFC, 0x63, 0x07, 0x62, 0x06, 0xD1, 0x05, 0xD0,
-0x30, 0xF0, 0x20, 0x6B, 0x48, 0xF5, 0xA1, 0xA3,
-0x04, 0x6B, 0xFF, 0x6A, 0xAC, 0xEB, 0x4C, 0xEB,
-0x4C, 0xEC, 0x06, 0x23, 0x10, 0xF0, 0x24, 0x6A,
-0x36, 0xF5, 0x44, 0x9A, 0x00, 0x6B, 0x60, 0xC2,
-0x02, 0x6D, 0x00, 0x18, 0x22, 0xE5, 0x10, 0xF0,
-0x24, 0x6A, 0x36, 0xF5, 0x48, 0x9A, 0x04, 0x69,
-0x30, 0xF0, 0x20, 0x68, 0x20, 0xDA, 0xC0, 0xF1,
-0x08, 0x48, 0xE8, 0xF3, 0xC6, 0xA0, 0x30, 0xF0,
-0x20, 0x6A, 0xAE, 0xF2, 0x50, 0x9A, 0xFF, 0x6C,
-0x59, 0x4C, 0x00, 0x6D, 0xC6, 0x36, 0x40, 0xEA,
-0x68, 0xF3, 0x59, 0xA0, 0x07, 0x97, 0x4D, 0xE9,
-0x68, 0xF3, 0x39, 0xC0, 0x06, 0x91, 0x05, 0x90,
-0x04, 0x63, 0x00, 0xEF, 0xFD, 0x63, 0x05, 0x62,
-0x04, 0xD0, 0x30, 0xF0, 0x20, 0x6B, 0xC0, 0xF1,
-0x08, 0x4B, 0x68, 0xF3, 0xB4, 0xA3, 0x04, 0x67,
-0x7F, 0x6C, 0xAC, 0xEC, 0xFF, 0x6A, 0x01, 0x74,
-0x4C, 0xE8, 0x26, 0x61, 0x68, 0xF3, 0xB5, 0xA3,
-0x10, 0x6C, 0x8B, 0xEC, 0xAC, 0xEC, 0x4C, 0xEC,
-0x14, 0x24, 0x30, 0xF0, 0x20, 0x6A, 0x2E, 0xF4,
-0x48, 0x9A, 0xD0, 0x67, 0x0C, 0x6C, 0x00, 0x6D,
-0x40, 0xEA, 0x30, 0xF0, 0x20, 0x6A, 0x6E, 0xF2,
-0x58, 0x9A, 0x00, 0x6D, 0xFF, 0x6C, 0xC5, 0x67,
-0x40, 0xEA, 0x90, 0x67, 0x00, 0x18, 0xB0, 0xCA,
-0x0B, 0x10, 0x68, 0xF3, 0x5C, 0xA3, 0x08, 0x2A,
-0x30, 0xF0, 0x20, 0x6A, 0x2E, 0xF4, 0x48, 0x9A,
-0x04, 0x6C, 0x01, 0x6D, 0xD0, 0x67, 0x40, 0xEA,
-0x05, 0x97, 0x04, 0x90, 0x03, 0x63, 0x00, 0xEF,
-0xFD, 0x63, 0x05, 0x62, 0xFF, 0x6A, 0x4C, 0xEC,
-0x00, 0x18, 0xCB, 0xCA, 0x05, 0x97, 0x03, 0x63,
+0x00, 0x18, 0xD1, 0xC9, 0x30, 0xF0, 0x20, 0x6A,
+0x48, 0xF5, 0x44, 0xA2, 0x0C, 0x72, 0x7C, 0x61,
+0x00, 0x18, 0x6D, 0xC6, 0x01, 0x72, 0x78, 0x61,
+0x90, 0x67, 0x00, 0x18, 0x79, 0xC6, 0x74, 0x10,
+0x30, 0xF0, 0x20, 0x6A, 0x48, 0xF5, 0x44, 0xA2,
+0x0E, 0x72, 0x07, 0x61, 0x00, 0x18, 0x6D, 0xC6,
+0x01, 0x72, 0x03, 0x61, 0x90, 0x67, 0x00, 0x18,
+0xD1, 0xC9, 0x30, 0xF0, 0x20, 0x6A, 0x48, 0xF5,
+0x44, 0xA2, 0x06, 0x72, 0x03, 0x61, 0x90, 0x67,
+0x00, 0x18, 0xE2, 0xC9, 0x30, 0xF0, 0x20, 0x6A,
+0x48, 0xF5, 0x44, 0xA2, 0x0C, 0x72, 0x07, 0x61,
+0x00, 0x18, 0x6D, 0xC6, 0x01, 0x72, 0x03, 0x61,
+0x90, 0x67, 0x00, 0x18, 0x79, 0xC6, 0x30, 0xF0,
+0x20, 0x6A, 0x48, 0xF5, 0x44, 0xA2, 0x04, 0x72,
+0x4B, 0x61, 0x00, 0x18, 0x1A, 0xC8, 0x01, 0x72,
+0x47, 0x61, 0x90, 0x67, 0x00, 0x18, 0xA7, 0xC9,
+0x43, 0x10, 0x30, 0xF0, 0x20, 0x6A, 0x48, 0xF5,
+0x44, 0xA2, 0x0E, 0x72, 0x07, 0x61, 0x00, 0x18,
+0x6D, 0xC6, 0x01, 0x72, 0x03, 0x61, 0x90, 0x67,
+0x00, 0x18, 0xD1, 0xC9, 0x30, 0xF0, 0x20, 0x6A,
+0x48, 0xF5, 0x44, 0xA2, 0x06, 0x72, 0x03, 0x61,
+0x90, 0x67, 0x00, 0x18, 0xE2, 0xC9, 0x30, 0xF0,
+0x20, 0x6A, 0x48, 0xF5, 0x44, 0xA2, 0x0C, 0x72,
+0x07, 0x61, 0x00, 0x18, 0x6D, 0xC6, 0x01, 0x72,
+0x03, 0x61, 0x90, 0x67, 0x00, 0x18, 0x79, 0xC6,
+0x30, 0xF0, 0x20, 0x6A, 0x48, 0xF5, 0x44, 0xA2,
+0x03, 0x2A, 0x01, 0x6C, 0x00, 0x18, 0x02, 0xC9,
+0x30, 0xF0, 0x20, 0x6A, 0x48, 0xF5, 0x44, 0xA2,
+0x04, 0x72, 0x12, 0x61, 0x00, 0x18, 0x99, 0xC6,
+0x0F, 0x10, 0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1,
+0x08, 0x4A, 0x68, 0xF3, 0x7C, 0xA2, 0x0C, 0x73,
+0x07, 0x61, 0x68, 0xF3, 0x79, 0xA2, 0x20, 0x6A,
+0x6C, 0xEA, 0x02, 0x22, 0x00, 0x18, 0x0E, 0xC9,
+0x07, 0x97, 0x06, 0x91, 0x05, 0x90, 0x04, 0x63,
 0x00, 0xEF, 0x00, 0x65, 0xFC, 0x63, 0x07, 0x62,
-0x06, 0xD1, 0x05, 0xD0, 0xFF, 0x69, 0x8C, 0xE9,
-0x30, 0xF0, 0x20, 0x68, 0x91, 0x67, 0xC0, 0xF1,
-0x08, 0x48, 0x00, 0x18, 0xB0, 0xCA, 0x68, 0xF3,
-0x5C, 0xA0, 0x0C, 0x72, 0x20, 0x60, 0x30, 0xF0,
-0x20, 0x6A, 0x2E, 0xF4, 0x48, 0x9A, 0x0C, 0x6C,
-0x00, 0x6D, 0xD1, 0x67, 0x40, 0xEA, 0x30, 0xF0,
-0x20, 0x6A, 0x6E, 0xF2, 0x58, 0x9A, 0x00, 0x6D,
-0xC5, 0x67, 0xFF, 0x6C, 0x40, 0xEA, 0x68, 0xF3,
-0x7A, 0xA0, 0x01, 0x6A, 0xC8, 0xF2, 0x9F, 0xA0,
-0x6D, 0xEA, 0x68, 0xF3, 0x5A, 0xC0, 0x30, 0xF0,
-0x20, 0x6A, 0x2E, 0xF4, 0x50, 0x9A, 0x00, 0x6D,
-0x08, 0x6E, 0xF1, 0x67, 0x40, 0xEA, 0x07, 0x97,
+0x06, 0xD1, 0x05, 0xD0, 0x30, 0xF0, 0x20, 0x6B,
+0x48, 0xF5, 0xA1, 0xA3, 0x04, 0x6B, 0xFF, 0x6A,
+0xAC, 0xEB, 0x4C, 0xEB, 0x4C, 0xEC, 0x06, 0x23,
+0x10, 0xF0, 0x24, 0x6A, 0x56, 0xF3, 0x40, 0x9A,
+0x00, 0x6B, 0x60, 0xC2, 0x02, 0x6D, 0x00, 0x18,
+0xA9, 0xE4, 0x10, 0xF0, 0x24, 0x6A, 0x56, 0xF3,
+0x44, 0x9A, 0x04, 0x69, 0x30, 0xF0, 0x20, 0x68,
+0x20, 0xDA, 0xC0, 0xF1, 0x08, 0x48, 0xE8, 0xF3,
+0xC6, 0xA0, 0x30, 0xF0, 0x20, 0x6A, 0xAE, 0xF2,
+0x50, 0x9A, 0xFF, 0x6C, 0x59, 0x4C, 0x00, 0x6D,
+0xC6, 0x36, 0x40, 0xEA, 0x68, 0xF3, 0x59, 0xA0,
+0x07, 0x97, 0x4D, 0xE9, 0x68, 0xF3, 0x39, 0xC0,
 0x06, 0x91, 0x05, 0x90, 0x04, 0x63, 0x00, 0xEF,
+0xFD, 0x63, 0x05, 0x62, 0x04, 0xD0, 0x30, 0xF0,
+0x20, 0x6B, 0xC0, 0xF1, 0x08, 0x4B, 0x68, 0xF3,
+0xB4, 0xA3, 0x04, 0x67, 0x7F, 0x6C, 0xAC, 0xEC,
+0xFF, 0x6A, 0x01, 0x74, 0x4C, 0xE8, 0x26, 0x61,
+0x68, 0xF3, 0xB5, 0xA3, 0x10, 0x6C, 0x8B, 0xEC,
+0xAC, 0xEC, 0x4C, 0xEC, 0x14, 0x24, 0x30, 0xF0,
+0x20, 0x6A, 0x2E, 0xF4, 0x48, 0x9A, 0xD0, 0x67,
+0x0C, 0x6C, 0x00, 0x6D, 0x40, 0xEA, 0x30, 0xF0,
+0x20, 0x6A, 0x6E, 0xF2, 0x58, 0x9A, 0x00, 0x6D,
+0xFF, 0x6C, 0xC5, 0x67, 0x40, 0xEA, 0x90, 0x67,
+0x00, 0x18, 0xA1, 0xCA, 0x0B, 0x10, 0x68, 0xF3,
+0x5C, 0xA3, 0x08, 0x2A, 0x30, 0xF0, 0x20, 0x6A,
+0x2E, 0xF4, 0x48, 0x9A, 0x04, 0x6C, 0x01, 0x6D,
+0xD0, 0x67, 0x40, 0xEA, 0x05, 0x97, 0x04, 0x90,
+0x03, 0x63, 0x00, 0xEF, 0xFD, 0x63, 0x05, 0x62,
+0xFF, 0x6A, 0x4C, 0xEC, 0x00, 0x18, 0xBC, 0xCA,
+0x05, 0x97, 0x03, 0x63, 0x00, 0xEF, 0x00, 0x65,
 0xFC, 0x63, 0x07, 0x62, 0x06, 0xD1, 0x05, 0xD0,
-0x04, 0x67, 0x30, 0xF0, 0x20, 0x6C, 0xC0, 0xF1,
-0x08, 0x4C, 0x68, 0xF3, 0xB9, 0xA4, 0x40, 0x6B,
-0xFF, 0x6A, 0xAC, 0xEB, 0x4C, 0xEB, 0x4C, 0xE8,
-0x0C, 0x23, 0x68, 0xF3, 0x9A, 0xA4, 0x10, 0x6B,
-0x8C, 0xEB, 0x4C, 0xEB, 0x06, 0x23, 0x00, 0x18,
-0x08, 0xC8, 0x03, 0x2A, 0x90, 0x67, 0x00, 0x18,
-0xC9, 0xE9, 0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1,
-0x08, 0x4A, 0x68, 0xF3, 0x99, 0xA2, 0x02, 0x6B,
-0x8C, 0xEB, 0x10, 0x23, 0x03, 0x6B, 0x6B, 0xEB,
-0x6C, 0xEC, 0x68, 0xF3, 0x99, 0xC2, 0x68, 0xF3,
-0x9D, 0xA2, 0x8C, 0xEB, 0x68, 0xF3, 0x7D, 0xC2,
-0x68, 0xF3, 0x5D, 0xA2, 0x07, 0x6B, 0x6C, 0xEA,
-0x6A, 0x2A, 0x66, 0x10, 0x10, 0xF0, 0x24, 0x6B,
-0x56, 0xF5, 0x84, 0x9B, 0xFF, 0xF7, 0x1F, 0x6D,
-0x60, 0xAC, 0xAC, 0xEB, 0x01, 0x4B, 0xAC, 0xEB,
-0x60, 0xCC, 0x88, 0xF3, 0x65, 0xA2, 0x68, 0xF3,
-0x9D, 0xA2, 0x01, 0x4B, 0x88, 0xF3, 0x65, 0xC2,
-0x11, 0x6B, 0x6B, 0xEB, 0x8C, 0xEB, 0x68, 0xF3,
-0x7D, 0xC2, 0x88, 0xF3, 0x65, 0xA2, 0xE8, 0xF3,
-0x44, 0xA2, 0x63, 0xEA, 0x49, 0x60, 0x30, 0xF0,
-0x20, 0x69, 0x71, 0x67, 0xCF, 0xF4, 0x00, 0x4B,
-0x30, 0xF0, 0x20, 0x6A, 0x6E, 0xF5, 0x58, 0x9A,
-0x80, 0xF2, 0x95, 0xA3, 0x40, 0xEA, 0x01, 0x72,
-0x3E, 0x61, 0xCF, 0xF4, 0x60, 0xA1, 0x01, 0x6A,
-0x6C, 0xEA, 0xFF, 0x6B, 0x6C, 0xEA, 0x02, 0x2A,
-0x00, 0x18, 0x06, 0xC7, 0x30, 0xF0, 0x20, 0x6A,
-0xC0, 0xF1, 0x08, 0x4A, 0x68, 0xF3, 0x95, 0xA2,
+0xFF, 0x69, 0x8C, 0xE9, 0x30, 0xF0, 0x20, 0x68,
+0x91, 0x67, 0xC0, 0xF1, 0x08, 0x48, 0x00, 0x18,
+0xA1, 0xCA, 0x68, 0xF3, 0x5C, 0xA0, 0x0C, 0x72,
+0x20, 0x60, 0x30, 0xF0, 0x20, 0x6A, 0x2E, 0xF4,
+0x48, 0x9A, 0x0C, 0x6C, 0x00, 0x6D, 0xD1, 0x67,
+0x40, 0xEA, 0x30, 0xF0, 0x20, 0x6A, 0x6E, 0xF2,
+0x58, 0x9A, 0x00, 0x6D, 0xC5, 0x67, 0xFF, 0x6C,
+0x40, 0xEA, 0x68, 0xF3, 0x7A, 0xA0, 0x01, 0x6A,
+0xC8, 0xF2, 0x9F, 0xA0, 0x6D, 0xEA, 0x68, 0xF3,
+0x5A, 0xC0, 0x30, 0xF0, 0x20, 0x6A, 0x2E, 0xF4,
+0x50, 0x9A, 0x00, 0x6D, 0x08, 0x6E, 0xF1, 0x67,
+0x40, 0xEA, 0x07, 0x97, 0x06, 0x91, 0x05, 0x90,
+0x04, 0x63, 0x00, 0xEF, 0xFC, 0x63, 0x07, 0x62,
+0x06, 0xD1, 0x05, 0xD0, 0x04, 0x67, 0x30, 0xF0,
+0x20, 0x6C, 0xC0, 0xF1, 0x08, 0x4C, 0x68, 0xF3,
+0xB9, 0xA4, 0x40, 0x6B, 0xFF, 0x6A, 0xAC, 0xEB,
+0x4C, 0xEB, 0x4C, 0xE8, 0x0C, 0x23, 0x68, 0xF3,
+0x9A, 0xA4, 0x10, 0x6B, 0x8C, 0xEB, 0x4C, 0xEB,
+0x06, 0x23, 0x00, 0x18, 0x08, 0xC8, 0x03, 0x2A,
+0x90, 0x67, 0x00, 0x18, 0x50, 0xE9, 0x30, 0xF0,
+0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A, 0x68, 0xF3,
+0x99, 0xA2, 0x02, 0x6B, 0x8C, 0xEB, 0x10, 0x23,
+0x03, 0x6B, 0x6B, 0xEB, 0x6C, 0xEC, 0x68, 0xF3,
+0x99, 0xC2, 0x68, 0xF3, 0x9D, 0xA2, 0x8C, 0xEB,
+0x68, 0xF3, 0x7D, 0xC2, 0x68, 0xF3, 0x5D, 0xA2,
+0x07, 0x6B, 0x6C, 0xEA, 0x6A, 0x2A, 0x66, 0x10,
+0x10, 0xF0, 0x24, 0x6B, 0x76, 0xF3, 0x80, 0x9B,
+0xFF, 0xF7, 0x1F, 0x6D, 0x60, 0xAC, 0xAC, 0xEB,
+0x01, 0x4B, 0xAC, 0xEB, 0x60, 0xCC, 0x88, 0xF3,
+0x65, 0xA2, 0x68, 0xF3, 0x9D, 0xA2, 0x01, 0x4B,
+0x88, 0xF3, 0x65, 0xC2, 0x11, 0x6B, 0x6B, 0xEB,
+0x8C, 0xEB, 0x68, 0xF3, 0x7D, 0xC2, 0x88, 0xF3,
+0x65, 0xA2, 0xE8, 0xF3, 0x44, 0xA2, 0x63, 0xEA,
+0x49, 0x60, 0x30, 0xF0, 0x20, 0x69, 0x71, 0x67,
+0xCF, 0xF4, 0x00, 0x4B, 0x30, 0xF0, 0x20, 0x6A,
+0x6E, 0xF5, 0x58, 0x9A, 0x80, 0xF2, 0x95, 0xA3,
+0x40, 0xEA, 0x01, 0x72, 0x3E, 0x61, 0xCF, 0xF4,
+0x60, 0xA1, 0x01, 0x6A, 0x6C, 0xEA, 0xFF, 0x6B,
+0x6C, 0xEA, 0x02, 0x2A, 0x00, 0x18, 0x06, 0xC7,
+0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A,
+0x68, 0xF3, 0x95, 0xA2, 0x10, 0x6B, 0x6B, 0xEB,
+0x8C, 0xEB, 0xFF, 0x6C, 0x8C, 0xEB, 0x07, 0x2B,
+0x68, 0xF3, 0x99, 0xA2, 0xDF, 0x4B, 0x8C, 0xEB,
+0x68, 0xF3, 0x79, 0xC2, 0x22, 0x10, 0x88, 0xF3,
+0x66, 0xA2, 0x01, 0x4B, 0x88, 0xF3, 0x66, 0xC2,
+0x88, 0xF3, 0x66, 0xA2, 0x02, 0x5B, 0x0B, 0x61,
+0x68, 0xF3, 0x99, 0xA2, 0x21, 0x6B, 0x6B, 0xEB,
+0x8C, 0xEB, 0x68, 0xF3, 0x79, 0xC2, 0x00, 0x6B,
+0x88, 0xF3, 0x66, 0xC2, 0x03, 0x10, 0x90, 0x67,
+0x00, 0x18, 0xDE, 0xCA, 0x30, 0xF0, 0x20, 0x6A,
+0xC0, 0xF1, 0x08, 0x4A, 0x00, 0x6B, 0x88, 0xF3,
+0x65, 0xC2, 0x03, 0x10, 0x90, 0x67, 0x00, 0x18,
+0xA2, 0xC6, 0x07, 0x97, 0x06, 0x91, 0x05, 0x90,
+0x04, 0x63, 0x00, 0xEF, 0xFC, 0x63, 0x07, 0x62,
+0x06, 0xD1, 0x05, 0xD0, 0xFF, 0x6A, 0x8C, 0xEA,
+0x05, 0x5A, 0x00, 0x68, 0x24, 0x60, 0x10, 0xF0,
+0x24, 0x6B, 0x48, 0x34, 0x56, 0xF0, 0x08, 0x4B,
+0x8D, 0xE3, 0x60, 0x9B, 0x00, 0xEB, 0x10, 0xF0,
+0x24, 0x6B, 0x76, 0xF3, 0x64, 0x9B, 0x13, 0x10,
+0x10, 0xF0, 0x24, 0x6B, 0x76, 0xF3, 0x68, 0x9B,
+0x0E, 0x10, 0x10, 0xF0, 0x24, 0x6B, 0x76, 0xF3,
+0x6C, 0x9B, 0x09, 0x10, 0x10, 0xF0, 0x24, 0x6B,
+0x76, 0xF3, 0x70, 0x9B, 0x04, 0x10, 0x10, 0xF0,
+0x24, 0x6B, 0x76, 0xF3, 0x74, 0x9B, 0x60, 0xAB,
+0xFF, 0xF7, 0x1F, 0x68, 0x6C, 0xE8, 0x18, 0xF0,
+0x00, 0x6B, 0x0C, 0xEB, 0x13, 0x2B, 0x30, 0xF0,
+0x20, 0x6C, 0xC0, 0xF1, 0x08, 0x4C, 0x68, 0xF3,
+0xBD, 0xA4, 0xFE, 0x4B, 0xAC, 0xEB, 0x05, 0x6D,
+0xAB, 0xED, 0xAC, 0xEB, 0x02, 0x4D, 0xAC, 0xEB,
+0x68, 0xF3, 0x7D, 0xC4, 0x82, 0x67, 0x00, 0x18,
+0xA2, 0xC6, 0x5D, 0x10, 0x08, 0xF0, 0x00, 0x6B,
+0x0C, 0xEB, 0x23, 0x23, 0x30, 0xF0, 0x20, 0x6B,
+0xC0, 0xF1, 0x08, 0x4B, 0x68, 0xF3, 0xB4, 0xA3,
+0x7F, 0x6C, 0xAC, 0xEC, 0x01, 0x74, 0x27, 0x61,
+0x68, 0xF3, 0xBD, 0xA3, 0x01, 0x6C, 0xAD, 0xEC,
+0x68, 0xF3, 0x9D, 0xC3, 0x68, 0xF3, 0x95, 0xA3,
 0x10, 0x6B, 0x6B, 0xEB, 0x8C, 0xEB, 0xFF, 0x6C,
-0x8C, 0xEB, 0x07, 0x2B, 0x68, 0xF3, 0x99, 0xA2,
-0xDF, 0x4B, 0x8C, 0xEB, 0x68, 0xF3, 0x79, 0xC2,
-0x22, 0x10, 0x88, 0xF3, 0x66, 0xA2, 0x01, 0x4B,
-0x88, 0xF3, 0x66, 0xC2, 0x88, 0xF3, 0x66, 0xA2,
-0x02, 0x5B, 0x0B, 0x61, 0x68, 0xF3, 0x99, 0xA2,
-0x21, 0x6B, 0x6B, 0xEB, 0x8C, 0xEB, 0x68, 0xF3,
-0x79, 0xC2, 0x00, 0x6B, 0x88, 0xF3, 0x66, 0xC2,
-0x03, 0x10, 0x90, 0x67, 0x00, 0x18, 0xED, 0xCA,
+0x8C, 0xEB, 0x20, 0x73, 0x06, 0x60, 0x30, 0xF0,
+0x20, 0x6A, 0x2E, 0xF4, 0x54, 0x9A, 0x40, 0xEA,
+0x12, 0x10, 0x82, 0x67, 0x00, 0x18, 0xDE, 0xCA,
+0x0E, 0x10, 0x30, 0xF0, 0x20, 0x6B, 0xC0, 0xF1,
+0x08, 0x4B, 0x68, 0xF3, 0x9D, 0xA3, 0x02, 0x6A,
+0x4B, 0xEA, 0x8C, 0xEA, 0x05, 0x6C, 0x8B, 0xEC,
+0x8C, 0xEA, 0x68, 0xF3, 0x5D, 0xC3, 0x02, 0x30,
+0x1E, 0x30, 0x1A, 0x20, 0x30, 0xF0, 0x20, 0x68,
+0xC0, 0xF1, 0x08, 0x48, 0x68, 0xF3, 0x5D, 0xA0,
+0x02, 0x69, 0xE8, 0xF3, 0xC5, 0xA0, 0x2D, 0xEA,
+0x68, 0xF3, 0x5D, 0xC0, 0x30, 0xF0, 0x20, 0x6A,
+0xAE, 0xF2, 0x50, 0x9A, 0xFF, 0x6C, 0x55, 0x4C,
+0x00, 0x6D, 0x40, 0xEA, 0x68, 0xF3, 0x59, 0xA0,
+0x4D, 0xE9, 0x68, 0xF3, 0x39, 0xC0, 0x0B, 0x10,
 0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A,
-0x00, 0x6B, 0x88, 0xF3, 0x65, 0xC2, 0x03, 0x10,
-0x90, 0x67, 0x00, 0x18, 0xA2, 0xC6, 0x07, 0x97,
+0x68, 0xF3, 0x9D, 0xA2, 0x03, 0x6B, 0x6B, 0xEB,
+0x8C, 0xEB, 0x68, 0xF3, 0x7D, 0xC2, 0x07, 0x97,
 0x06, 0x91, 0x05, 0x90, 0x04, 0x63, 0x00, 0xEF,
-0xFC, 0x63, 0x07, 0x62, 0x06, 0xD1, 0x05, 0xD0,
-0xFF, 0x6A, 0x8C, 0xEA, 0x05, 0x5A, 0x00, 0x68,
-0x24, 0x60, 0x10, 0xF0, 0x24, 0x6B, 0x48, 0x34,
-0x36, 0xF2, 0x0C, 0x4B, 0x8D, 0xE3, 0x60, 0x9B,
-0x00, 0xEB, 0x10, 0xF0, 0x24, 0x6B, 0x56, 0xF5,
-0x68, 0x9B, 0x13, 0x10, 0x10, 0xF0, 0x24, 0x6B,
-0x56, 0xF5, 0x6C, 0x9B, 0x0E, 0x10, 0x10, 0xF0,
-0x24, 0x6B, 0x56, 0xF5, 0x70, 0x9B, 0x09, 0x10,
-0x10, 0xF0, 0x24, 0x6B, 0x56, 0xF5, 0x74, 0x9B,
-0x04, 0x10, 0x10, 0xF0, 0x24, 0x6B, 0x56, 0xF5,
-0x78, 0x9B, 0x60, 0xAB, 0xFF, 0xF7, 0x1F, 0x68,
-0x6C, 0xE8, 0x18, 0xF0, 0x00, 0x6B, 0x0C, 0xEB,
-0x13, 0x2B, 0x30, 0xF0, 0x20, 0x6C, 0xC0, 0xF1,
-0x08, 0x4C, 0x68, 0xF3, 0xBD, 0xA4, 0xFE, 0x4B,
-0xAC, 0xEB, 0x05, 0x6D, 0xAB, 0xED, 0xAC, 0xEB,
-0x02, 0x4D, 0xAC, 0xEB, 0x68, 0xF3, 0x7D, 0xC4,
-0x82, 0x67, 0x00, 0x18, 0xA2, 0xC6, 0x5D, 0x10,
-0x08, 0xF0, 0x00, 0x6B, 0x0C, 0xEB, 0x23, 0x23,
-0x30, 0xF0, 0x20, 0x6B, 0xC0, 0xF1, 0x08, 0x4B,
-0x68, 0xF3, 0xB4, 0xA3, 0x7F, 0x6C, 0xAC, 0xEC,
-0x01, 0x74, 0x27, 0x61, 0x68, 0xF3, 0xBD, 0xA3,
-0x01, 0x6C, 0xAD, 0xEC, 0x68, 0xF3, 0x9D, 0xC3,
-0x68, 0xF3, 0x95, 0xA3, 0x10, 0x6B, 0x6B, 0xEB,
-0x8C, 0xEB, 0xFF, 0x6C, 0x8C, 0xEB, 0x20, 0x73,
-0x06, 0x60, 0x30, 0xF0, 0x20, 0x6A, 0x2E, 0xF4,
-0x54, 0x9A, 0x40, 0xEA, 0x12, 0x10, 0x82, 0x67,
-0x00, 0x18, 0xED, 0xCA, 0x0E, 0x10, 0x30, 0xF0,
+0xFB, 0x63, 0x09, 0x62, 0x08, 0xD1, 0x07, 0xD0,
+0x30, 0xF0, 0x20, 0x6B, 0x30, 0xF0, 0x20, 0x6A,
+0x24, 0x67, 0x6E, 0xF5, 0x58, 0x9A, 0x4F, 0xF7,
+0x95, 0xA3, 0xFF, 0x68, 0x0C, 0xE9, 0x40, 0xEA,
+0x01, 0x72, 0x00, 0xF1, 0x17, 0x61, 0x30, 0xF0,
 0x20, 0x6B, 0xC0, 0xF1, 0x08, 0x4B, 0x68, 0xF3,
-0x9D, 0xA3, 0x02, 0x6A, 0x4B, 0xEA, 0x8C, 0xEA,
-0x05, 0x6C, 0x8B, 0xEC, 0x8C, 0xEA, 0x68, 0xF3,
-0x5D, 0xC3, 0x02, 0x30, 0x1E, 0x30, 0x1A, 0x20,
+0x94, 0xA3, 0x7F, 0x6A, 0x8C, 0xEA, 0x0C, 0xEA,
+0x00, 0xF1, 0x0C, 0x22, 0x68, 0xF3, 0x75, 0xA3,
+0x0F, 0x6A, 0x6C, 0xEA, 0x01, 0x72, 0x69, 0x61,
+0x05, 0x59, 0x5A, 0x60, 0x10, 0xF0, 0x24, 0x6A,
+0x28, 0x33, 0x56, 0xF0, 0x1C, 0x4A, 0x69, 0xE2,
+0x40, 0x9A, 0x00, 0xEA, 0x10, 0xF0, 0x24, 0x6A,
+0x76, 0xF3, 0x58, 0x9A, 0x60, 0xA2, 0x30, 0xF0,
+0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A, 0x88, 0xF3,
+0x63, 0xC2, 0x10, 0xF0, 0x24, 0x6B, 0x76, 0xF3,
+0x7C, 0x9B, 0x3F, 0x10, 0x10, 0xF0, 0x24, 0x6A,
+0x96, 0xF3, 0x40, 0x9A, 0x60, 0xA2, 0x30, 0xF0,
+0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A, 0x88, 0xF3,
+0x63, 0xC2, 0x10, 0xF0, 0x24, 0x6B, 0x96, 0xF3,
+0x64, 0x9B, 0x2F, 0x10, 0x10, 0xF0, 0x24, 0x6A,
+0x96, 0xF3, 0x48, 0x9A, 0x60, 0xA2, 0x30, 0xF0,
+0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A, 0x88, 0xF3,
+0x63, 0xC2, 0x10, 0xF0, 0x24, 0x6B, 0x96, 0xF3,
+0x6C, 0x9B, 0x1F, 0x10, 0x10, 0xF0, 0x24, 0x6A,
+0x96, 0xF3, 0x50, 0x9A, 0x60, 0xA2, 0x30, 0xF0,
+0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A, 0x88, 0xF3,
+0x63, 0xC2, 0x10, 0xF0, 0x24, 0x6B, 0x96, 0xF3,
+0x74, 0x9B, 0x0F, 0x10, 0x10, 0xF0, 0x24, 0x6A,
+0x96, 0xF3, 0x58, 0x9A, 0x60, 0xA2, 0x30, 0xF0,
+0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A, 0x88, 0xF3,
+0x63, 0xC2, 0x10, 0xF0, 0x24, 0x6B, 0x96, 0xF3,
+0x7C, 0x9B, 0x60, 0xA3, 0x88, 0xF3, 0x62, 0xC2,
+0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A,
+0x88, 0xF3, 0x63, 0xA2, 0x02, 0x2B, 0x88, 0xF3,
+0x62, 0xA2, 0x30, 0xF0, 0x20, 0x6A, 0x48, 0xF5,
+0x6B, 0xC2, 0x91, 0x67, 0x00, 0x18, 0x30, 0xC7,
+0x10, 0xF0, 0x24, 0x6B, 0xB6, 0xF3, 0x80, 0x9B,
 0x30, 0xF0, 0x20, 0x68, 0xC0, 0xF1, 0x08, 0x48,
-0x68, 0xF3, 0x5D, 0xA0, 0x02, 0x69, 0xE8, 0xF3,
-0xC5, 0xA0, 0x2D, 0xEA, 0x68, 0xF3, 0x5D, 0xC0,
-0x30, 0xF0, 0x20, 0x6A, 0xAE, 0xF2, 0x50, 0x9A,
-0xFF, 0x6C, 0x55, 0x4C, 0x00, 0x6D, 0x40, 0xEA,
-0x68, 0xF3, 0x59, 0xA0, 0x4D, 0xE9, 0x68, 0xF3,
-0x39, 0xC0, 0x0B, 0x10, 0x30, 0xF0, 0x20, 0x6A,
-0xC0, 0xF1, 0x08, 0x4A, 0x68, 0xF3, 0x9D, 0xA2,
-0x03, 0x6B, 0x6B, 0xEB, 0x8C, 0xEB, 0x68, 0xF3,
-0x7D, 0xC2, 0x07, 0x97, 0x06, 0x91, 0x05, 0x90,
-0x04, 0x63, 0x00, 0xEF, 0xFB, 0x63, 0x09, 0x62,
-0x08, 0xD1, 0x07, 0xD0, 0x30, 0xF0, 0x20, 0x6B,
-0x30, 0xF0, 0x20, 0x6A, 0x24, 0x67, 0x6E, 0xF5,
-0x58, 0x9A, 0x4F, 0xF7, 0x95, 0xA3, 0xFF, 0x68,
-0x0C, 0xE9, 0x40, 0xEA, 0x01, 0x72, 0x00, 0xF1,
-0x17, 0x61, 0x30, 0xF0, 0x20, 0x6B, 0xC0, 0xF1,
-0x08, 0x4B, 0x68, 0xF3, 0x94, 0xA3, 0x7F, 0x6A,
-0x8C, 0xEA, 0x0C, 0xEA, 0x00, 0xF1, 0x0C, 0x22,
-0x68, 0xF3, 0x75, 0xA3, 0x0F, 0x6A, 0x6C, 0xEA,
-0x01, 0x72, 0x69, 0x61, 0x05, 0x59, 0x5A, 0x60,
-0x10, 0xF0, 0x24, 0x6A, 0x28, 0x33, 0x56, 0xF2,
-0x00, 0x4A, 0x69, 0xE2, 0x40, 0x9A, 0x00, 0xEA,
-0x10, 0xF0, 0x24, 0x6A, 0x56, 0xF5, 0x5C, 0x9A,
-0x60, 0xA2, 0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1,
-0x08, 0x4A, 0x88, 0xF3, 0x63, 0xC2, 0x10, 0xF0,
-0x24, 0x6B, 0x76, 0xF5, 0x60, 0x9B, 0x3F, 0x10,
-0x10, 0xF0, 0x24, 0x6A, 0x76, 0xF5, 0x44, 0x9A,
-0x60, 0xA2, 0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1,
-0x08, 0x4A, 0x88, 0xF3, 0x63, 0xC2, 0x10, 0xF0,
-0x24, 0x6B, 0x76, 0xF5, 0x68, 0x9B, 0x2F, 0x10,
-0x10, 0xF0, 0x24, 0x6A, 0x76, 0xF5, 0x4C, 0x9A,
-0x60, 0xA2, 0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1,
-0x08, 0x4A, 0x88, 0xF3, 0x63, 0xC2, 0x10, 0xF0,
-0x24, 0x6B, 0x76, 0xF5, 0x70, 0x9B, 0x1F, 0x10,
-0x10, 0xF0, 0x24, 0x6A, 0x76, 0xF5, 0x54, 0x9A,
-0x60, 0xA2, 0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1,
-0x08, 0x4A, 0x88, 0xF3, 0x63, 0xC2, 0x10, 0xF0,
-0x24, 0x6B, 0x76, 0xF5, 0x78, 0x9B, 0x0F, 0x10,
-0x10, 0xF0, 0x24, 0x6A, 0x76, 0xF5, 0x5C, 0x9A,
-0x60, 0xA2, 0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1,
-0x08, 0x4A, 0x88, 0xF3, 0x63, 0xC2, 0x10, 0xF0,
-0x24, 0x6B, 0x96, 0xF5, 0x60, 0x9B, 0x60, 0xA3,
-0x88, 0xF3, 0x62, 0xC2, 0x30, 0xF0, 0x20, 0x6A,
-0xC0, 0xF1, 0x08, 0x4A, 0x88, 0xF3, 0x63, 0xA2,
-0x02, 0x2B, 0x88, 0xF3, 0x62, 0xA2, 0x30, 0xF0,
-0x20, 0x6A, 0x48, 0xF5, 0x6B, 0xC2, 0x91, 0x67,
-0x00, 0x18, 0x30, 0xC7, 0x10, 0xF0, 0x24, 0x6B,
-0x96, 0xF5, 0x84, 0x9B, 0x30, 0xF0, 0x20, 0x68,
-0xC0, 0xF1, 0x08, 0x48, 0x00, 0x6A, 0x88, 0xF3,
-0x45, 0xC0, 0x88, 0xF3, 0x46, 0xC0, 0x60, 0xAC,
-0xFF, 0xF7, 0x1F, 0x6D, 0xAC, 0xEB, 0x01, 0x4B,
-0xAC, 0xEB, 0x60, 0xCC, 0x10, 0xF0, 0x24, 0x6B,
-0x88, 0xF3, 0x8A, 0xA0, 0x16, 0xF5, 0x64, 0x9B,
-0x80, 0xC3, 0x10, 0xF0, 0x24, 0x6B, 0x96, 0xF5,
-0x68, 0x9B, 0x91, 0x67, 0x40, 0xC3, 0x10, 0xF0,
-0x24, 0x6A, 0x36, 0xF5, 0x48, 0x9A, 0x02, 0x6B,
-0x60, 0xC2, 0x68, 0xF3, 0x7D, 0xA0, 0x03, 0x6A,
-0x4B, 0xEA, 0x6C, 0xEA, 0x11, 0x6B, 0x6B, 0xEB,
-0x6C, 0xEA, 0x68, 0xF3, 0x5D, 0xC0, 0x00, 0x18,
-0x5A, 0xCB, 0x68, 0xF3, 0x79, 0xA0, 0x40, 0x6A,
-0x6C, 0xEA, 0x55, 0x22, 0x68, 0xF3, 0x9A, 0xA0,
-0x10, 0x6B, 0xFF, 0x6D, 0x44, 0x67, 0x6C, 0xEA,
-0xAC, 0xEA, 0x22, 0x2A, 0x88, 0xF3, 0x43, 0xA0,
-0x88, 0xF3, 0xA2, 0xA0, 0xAE, 0xEA, 0x47, 0x2A,
-0x8D, 0xEB, 0x68, 0xF3, 0x7A, 0xC0, 0x91, 0x67,
-0x00, 0x18, 0x68, 0xEA, 0x91, 0x67, 0x00, 0x18,
-0x99, 0xE9, 0x00, 0x18, 0x08, 0xC8, 0x06, 0x2A,
-0x91, 0x67, 0x00, 0x18, 0xD0, 0xE9, 0x91, 0x67,
-0x00, 0x18, 0xC9, 0xE9, 0x30, 0xF0, 0x20, 0x6A,
-0xC0, 0xF1, 0x08, 0x4A, 0x88, 0xF3, 0x63, 0xA2,
-0xFF, 0x4B, 0x88, 0xF3, 0x63, 0xC2, 0x2B, 0x10,
-0x68, 0xF3, 0x75, 0xA0, 0x0F, 0x6A, 0x6C, 0xEA,
-0x01, 0x72, 0x25, 0x61, 0x88, 0xF3, 0x43, 0xA0,
-0x04, 0xD2, 0x04, 0x93, 0x88, 0xF3, 0x42, 0xA0,
-0x6E, 0xEA, 0x1D, 0x22, 0x91, 0x67, 0x00, 0x18,
-0x5D, 0xEA, 0x04, 0x95, 0xAE, 0xEA, 0x17, 0x22,
-0x68, 0xF3, 0x79, 0xA0, 0x20, 0x6A, 0x6C, 0xEA,
-0xFF, 0x6B, 0x6C, 0xEA, 0x10, 0x22, 0x68, 0xF3,
-0x7A, 0xA0, 0x11, 0x6A, 0x4B, 0xEA, 0x6C, 0xEA,
-0x68, 0xF3, 0x5A, 0xC0, 0x91, 0x67, 0x00, 0x18,
-0xBF, 0xE9, 0x91, 0x67, 0x00, 0x18, 0xAA, 0xE9,
-0x91, 0x67, 0x00, 0x18, 0xA3, 0xE9, 0x30, 0xF0,
-0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A, 0x68, 0xF3,
-0x99, 0xA2, 0x01, 0x6B, 0xE8, 0xF3, 0x62, 0xC2,
-0x20, 0x6B, 0x8D, 0xEB, 0x68, 0xF3, 0x79, 0xC2,
-0x09, 0x97, 0x08, 0x91, 0x07, 0x90, 0x05, 0x63,
-0x00, 0xEF, 0x00, 0x65, 0xFD, 0x63, 0x05, 0x62,
-0xFF, 0x6A, 0x4C, 0xED, 0x4C, 0xEC, 0xCC, 0xEA,
-0xA0, 0xF0, 0x1D, 0x25, 0x05, 0x5C, 0xA0, 0xF0,
-0x10, 0x60, 0x10, 0xF0, 0x24, 0x6B, 0x88, 0x34,
-0x56, 0xF2, 0x14, 0x4B, 0x8D, 0xE3, 0x60, 0x9B,
-0x00, 0xEB, 0x02, 0x72, 0x0A, 0x60, 0x10, 0xF0,
-0x24, 0x6A, 0x96, 0xF5, 0xAC, 0x9A, 0x01, 0x6C,
-0x00, 0x18, 0xAE, 0xDF, 0x00, 0x6C, 0x08, 0x6D,
-0x1D, 0x10, 0x10, 0xF0, 0x24, 0x6A, 0x96, 0xF5,
-0xB0, 0x9A, 0x01, 0x6C, 0x00, 0x18, 0xAE, 0xDF,
-0x00, 0x6C, 0x08, 0x6D, 0x00, 0x18, 0xAE, 0xDF,
-0x30, 0xF0, 0x20, 0x6A, 0x4E, 0xF2, 0x54, 0x9A,
-0x01, 0x6C, 0x0C, 0x6D, 0x89, 0x10, 0x02, 0x72,
-0x0C, 0x60, 0x04, 0x6C, 0x0F, 0x6D, 0x00, 0x18,
-0xAE, 0xDF, 0x10, 0xF0, 0x24, 0x6A, 0x36, 0xF5,
-0xB0, 0x9A, 0x04, 0x6C, 0x00, 0x18, 0xAE, 0xDF,
-0x7C, 0x10, 0x04, 0x6C, 0x03, 0x6D, 0x00, 0x18,
-0xAE, 0xDF, 0x10, 0xF0, 0x24, 0x6A, 0x36, 0xF5,
-0xB0, 0x9A, 0x04, 0x6C, 0x00, 0x18, 0xAE, 0xDF,
-0x30, 0xF0, 0x20, 0x6A, 0x10, 0xF0, 0x24, 0x6B,
-0x4E, 0xF2, 0x54, 0x9A, 0x02, 0x6C, 0x96, 0xF5,
-0xB4, 0x9B, 0x66, 0x10, 0x02, 0x72, 0x0A, 0x60,
-0x04, 0x6C, 0xF0, 0x6D, 0x00, 0x18, 0xAE, 0xDF,
-0x10, 0xF0, 0x24, 0x6A, 0x04, 0x6C, 0x36, 0xF5,
-0xB4, 0x9A, 0xDC, 0x17, 0x04, 0x6C, 0x30, 0x6D,
-0x00, 0x18, 0xAE, 0xDF, 0x10, 0xF0, 0x24, 0x6A,
-0x36, 0xF5, 0xB4, 0x9A, 0x04, 0x6C, 0x00, 0x18,
-0xAE, 0xDF, 0x30, 0xF0, 0x20, 0x6A, 0x10, 0xF0,
-0x24, 0x6B, 0x4E, 0xF2, 0x54, 0x9A, 0x02, 0x6C,
-0x96, 0xF5, 0xB8, 0x9B, 0x45, 0x10, 0x02, 0x72,
-0x0B, 0x60, 0x04, 0x6C, 0x01, 0xF7, 0x00, 0x6D,
-0x00, 0x18, 0xAE, 0xDF, 0x10, 0xF0, 0x24, 0x6A,
-0x04, 0x6C, 0x36, 0xF5, 0xB8, 0x9A, 0xBA, 0x17,
-0x04, 0x6C, 0x00, 0xF3, 0x00, 0x6D, 0x00, 0x18,
-0xAE, 0xDF, 0x10, 0xF0, 0x24, 0x6A, 0x36, 0xF5,
-0xB8, 0x9A, 0x04, 0x6C, 0x00, 0x18, 0xAE, 0xDF,
-0x30, 0xF0, 0x20, 0x6A, 0x10, 0xF0, 0x24, 0x6B,
-0x4E, 0xF2, 0x54, 0x9A, 0x02, 0x6C, 0x96, 0xF5,
-0xBC, 0x9B, 0x22, 0x10, 0x02, 0x72, 0x0B, 0x60,
-0x04, 0x6C, 0x1E, 0xF0, 0x00, 0x6D, 0x00, 0x18,
-0xAE, 0xDF, 0x10, 0xF0, 0x24, 0x6A, 0x04, 0x6C,
-0x36, 0xF5, 0xBC, 0x9A, 0x97, 0x17, 0x04, 0x6C,
-0x06, 0xF0, 0x00, 0x6D, 0x00, 0x18, 0xAE, 0xDF,
-0x10, 0xF0, 0x24, 0x6A, 0x36, 0xF5, 0xBC, 0x9A,
-0x04, 0x6C, 0x00, 0x18, 0xAE, 0xDF, 0x30, 0xF0,
+0x00, 0x6A, 0x88, 0xF3, 0x45, 0xC0, 0x88, 0xF3,
+0x46, 0xC0, 0x60, 0xAC, 0xFF, 0xF7, 0x1F, 0x6D,
+0xAC, 0xEB, 0x01, 0x4B, 0xAC, 0xEB, 0x60, 0xCC,
+0x10, 0xF0, 0x24, 0x6B, 0x88, 0xF3, 0x8A, 0xA0,
+0x36, 0xF3, 0x60, 0x9B, 0x80, 0xC3, 0x10, 0xF0,
+0x24, 0x6B, 0xB6, 0xF3, 0x64, 0x9B, 0x91, 0x67,
+0x40, 0xC3, 0x10, 0xF0, 0x24, 0x6A, 0x56, 0xF3,
+0x44, 0x9A, 0x02, 0x6B, 0x60, 0xC2, 0x68, 0xF3,
+0x7D, 0xA0, 0x03, 0x6A, 0x4B, 0xEA, 0x6C, 0xEA,
+0x11, 0x6B, 0x6B, 0xEB, 0x6C, 0xEA, 0x68, 0xF3,
+0x5D, 0xC0, 0x00, 0x18, 0x4B, 0xCB, 0x68, 0xF3,
+0x79, 0xA0, 0x40, 0x6A, 0x6C, 0xEA, 0x55, 0x22,
+0x68, 0xF3, 0x9A, 0xA0, 0x10, 0x6B, 0xFF, 0x6D,
+0x44, 0x67, 0x6C, 0xEA, 0xAC, 0xEA, 0x22, 0x2A,
+0x88, 0xF3, 0x43, 0xA0, 0x88, 0xF3, 0xA2, 0xA0,
+0xAE, 0xEA, 0x47, 0x2A, 0x8D, 0xEB, 0x68, 0xF3,
+0x7A, 0xC0, 0x91, 0x67, 0x00, 0x18, 0xEF, 0xE9,
+0x91, 0x67, 0x00, 0x18, 0x20, 0xE9, 0x00, 0x18,
+0x08, 0xC8, 0x06, 0x2A, 0x91, 0x67, 0x00, 0x18,
+0x57, 0xE9, 0x91, 0x67, 0x00, 0x18, 0x50, 0xE9,
+0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A,
+0x88, 0xF3, 0x63, 0xA2, 0xFF, 0x4B, 0x88, 0xF3,
+0x63, 0xC2, 0x2B, 0x10, 0x68, 0xF3, 0x75, 0xA0,
+0x0F, 0x6A, 0x6C, 0xEA, 0x01, 0x72, 0x25, 0x61,
+0x88, 0xF3, 0x43, 0xA0, 0x04, 0xD2, 0x04, 0x93,
+0x88, 0xF3, 0x42, 0xA0, 0x6E, 0xEA, 0x1D, 0x22,
+0x91, 0x67, 0x00, 0x18, 0xE4, 0xE9, 0x04, 0x95,
+0xAE, 0xEA, 0x17, 0x22, 0x68, 0xF3, 0x79, 0xA0,
+0x20, 0x6A, 0x6C, 0xEA, 0xFF, 0x6B, 0x6C, 0xEA,
+0x10, 0x22, 0x68, 0xF3, 0x7A, 0xA0, 0x11, 0x6A,
+0x4B, 0xEA, 0x6C, 0xEA, 0x68, 0xF3, 0x5A, 0xC0,
+0x91, 0x67, 0x00, 0x18, 0x46, 0xE9, 0x91, 0x67,
+0x00, 0x18, 0x31, 0xE9, 0x91, 0x67, 0x00, 0x18,
+0x2A, 0xE9, 0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1,
+0x08, 0x4A, 0x68, 0xF3, 0x99, 0xA2, 0x01, 0x6B,
+0xE8, 0xF3, 0x62, 0xC2, 0x20, 0x6B, 0x8D, 0xEB,
+0x68, 0xF3, 0x79, 0xC2, 0x09, 0x97, 0x08, 0x91,
+0x07, 0x90, 0x05, 0x63, 0x00, 0xEF, 0x00, 0x65,
+0xFD, 0x63, 0x05, 0x62, 0xFF, 0x6A, 0x4C, 0xED,
+0x4C, 0xEC, 0xCC, 0xEA, 0xA0, 0xF0, 0x1D, 0x25,
+0x05, 0x5C, 0xA0, 0xF0, 0x10, 0x60, 0x10, 0xF0,
+0x24, 0x6B, 0x88, 0x34, 0x76, 0xF0, 0x10, 0x4B,
+0x8D, 0xE3, 0x60, 0x9B, 0x00, 0xEB, 0x02, 0x72,
+0x0A, 0x60, 0x10, 0xF0, 0x24, 0x6A, 0xB6, 0xF3,
+0xA8, 0x9A, 0x01, 0x6C, 0x00, 0x18, 0x3C, 0xDF,
+0x00, 0x6C, 0x08, 0x6D, 0x1D, 0x10, 0x10, 0xF0,
+0x24, 0x6A, 0xB6, 0xF3, 0xAC, 0x9A, 0x01, 0x6C,
+0x00, 0x18, 0x3C, 0xDF, 0x00, 0x6C, 0x08, 0x6D,
+0x00, 0x18, 0x3C, 0xDF, 0x30, 0xF0, 0x20, 0x6A,
+0x4E, 0xF2, 0x54, 0x9A, 0x01, 0x6C, 0x0C, 0x6D,
+0x89, 0x10, 0x02, 0x72, 0x0C, 0x60, 0x04, 0x6C,
+0x0F, 0x6D, 0x00, 0x18, 0x3C, 0xDF, 0x10, 0xF0,
+0x24, 0x6A, 0x56, 0xF3, 0xAC, 0x9A, 0x04, 0x6C,
+0x00, 0x18, 0x3C, 0xDF, 0x7C, 0x10, 0x04, 0x6C,
+0x03, 0x6D, 0x00, 0x18, 0x3C, 0xDF, 0x10, 0xF0,
+0x24, 0x6A, 0x56, 0xF3, 0xAC, 0x9A, 0x04, 0x6C,
+0x00, 0x18, 0x3C, 0xDF, 0x30, 0xF0, 0x20, 0x6A,
+0x10, 0xF0, 0x24, 0x6B, 0x4E, 0xF2, 0x54, 0x9A,
+0x02, 0x6C, 0xB6, 0xF3, 0xB0, 0x9B, 0x66, 0x10,
+0x02, 0x72, 0x0A, 0x60, 0x04, 0x6C, 0xF0, 0x6D,
+0x00, 0x18, 0x3C, 0xDF, 0x10, 0xF0, 0x24, 0x6A,
+0x04, 0x6C, 0x56, 0xF3, 0xB0, 0x9A, 0xDC, 0x17,
+0x04, 0x6C, 0x30, 0x6D, 0x00, 0x18, 0x3C, 0xDF,
+0x10, 0xF0, 0x24, 0x6A, 0x56, 0xF3, 0xB0, 0x9A,
+0x04, 0x6C, 0x00, 0x18, 0x3C, 0xDF, 0x30, 0xF0,
 0x20, 0x6A, 0x10, 0xF0, 0x24, 0x6B, 0x4E, 0xF2,
-0x54, 0x9A, 0xF6, 0xF4, 0xA0, 0x9B, 0x02, 0x6C,
-0x40, 0xEA, 0x10, 0xF0, 0x24, 0x6A, 0x56, 0xF5,
-0x60, 0x9A, 0xFF, 0x6C, 0x07, 0x6D, 0x40, 0xA3,
-0x8C, 0xEA, 0xAD, 0xEA, 0x65, 0x10, 0x05, 0x5C,
-0x5D, 0x60, 0x10, 0xF0, 0x24, 0x6A, 0x88, 0x34,
-0x76, 0xF2, 0x08, 0x4A, 0x89, 0xE2, 0x40, 0x9A,
-0x00, 0xEA, 0x10, 0xF0, 0x24, 0x6A, 0x96, 0xF5,
-0xAC, 0x9A, 0x01, 0x6C, 0x00, 0x18, 0xDF, 0xDF,
-0x00, 0x6C, 0x08, 0x6D, 0x00, 0x18, 0xDF, 0xDF,
-0x01, 0x6C, 0x0C, 0x6D, 0x45, 0x10, 0x04, 0x6C,
-0x0F, 0x6D, 0x00, 0x18, 0xDF, 0xDF, 0x10, 0xF0,
-0x24, 0x6A, 0x36, 0xF5, 0xB0, 0x9A, 0x04, 0x6C,
-0x00, 0x18, 0xDF, 0xDF, 0x10, 0xF0, 0x24, 0x6A,
-0x02, 0x6C, 0x96, 0xF5, 0xB4, 0x9A, 0x34, 0x10,
-0x04, 0x6C, 0xF0, 0x6D, 0x00, 0x18, 0xDF, 0xDF,
-0x10, 0xF0, 0x24, 0x6A, 0x36, 0xF5, 0xB4, 0x9A,
-0x04, 0x6C, 0x00, 0x18, 0xDF, 0xDF, 0x10, 0xF0,
-0x24, 0x6A, 0x02, 0x6C, 0x96, 0xF5, 0xB8, 0x9A,
-0x23, 0x10, 0x04, 0x6C, 0x01, 0xF7, 0x00, 0x6D,
-0x00, 0x18, 0xDF, 0xDF, 0x10, 0xF0, 0x24, 0x6A,
-0x36, 0xF5, 0xB8, 0x9A, 0x04, 0x6C, 0x00, 0x18,
-0xDF, 0xDF, 0x10, 0xF0, 0x24, 0x6A, 0x02, 0x6C,
-0x96, 0xF5, 0xBC, 0x9A, 0x11, 0x10, 0x04, 0x6C,
-0x1E, 0xF0, 0x00, 0x6D, 0x00, 0x18, 0xDF, 0xDF,
-0x10, 0xF0, 0x24, 0x6A, 0x36, 0xF5, 0xBC, 0x9A,
-0x04, 0x6C, 0x00, 0x18, 0xDF, 0xDF, 0x10, 0xF0,
-0x24, 0x6A, 0xF6, 0xF4, 0xA0, 0x9A, 0x02, 0x6C,
-0x00, 0x18, 0x2F, 0xE0, 0x10, 0xF0, 0x24, 0x6A,
-0x56, 0xF5, 0x60, 0x9A, 0xFC, 0x6A, 0x80, 0xA3,
-0x8C, 0xEA, 0x40, 0xC3, 0x05, 0x97, 0x03, 0x63,
-0x00, 0xEF, 0x00, 0x65, 0xFB, 0x63, 0x09, 0x62,
-0x08, 0xD1, 0x07, 0xD0, 0x30, 0xF0, 0x20, 0x68,
-0xC0, 0xF1, 0x08, 0x48, 0x68, 0xF3, 0x54, 0xA0,
-0x7F, 0x6E, 0xFF, 0x69, 0x4C, 0xEE, 0x2C, 0xEC,
-0x01, 0x6D, 0x2C, 0xEE, 0x04, 0xD4, 0x00, 0x18,
-0x45, 0xCC, 0x88, 0xF3, 0x6A, 0xA8, 0x10, 0xF0,
-0x24, 0x6A, 0x16, 0xF5, 0x44, 0x9A, 0x2C, 0xEB,
-0x60, 0xC2, 0xC8, 0xF3, 0x99, 0xA0, 0x80, 0x6A,
-0x4B, 0xEA, 0x1F, 0x6B, 0x8C, 0xEA, 0x8C, 0xEB,
-0x2C, 0xEA, 0x2C, 0xEB, 0x11, 0x22, 0x6F, 0x32,
-0x2C, 0xEA, 0x82, 0x42, 0x01, 0x4A, 0xC8, 0xF3,
-0x5D, 0xC0, 0x07, 0x6A, 0x6C, 0xEA, 0x68, 0xF3,
-0x77, 0xA0, 0xC8, 0xF3, 0x9C, 0xC0, 0x76, 0x33,
-0x6C, 0x33, 0x6D, 0xEA, 0x2C, 0xEA, 0x06, 0x10,
-0x04, 0x6B, 0xC8, 0xF3, 0x7C, 0xC0, 0x03, 0x6B,
-0xC8, 0xF3, 0x7D, 0xC0, 0x10, 0xF0, 0x24, 0x6B,
-0xB6, 0xF5, 0x60, 0x9B, 0x40, 0xC3, 0x30, 0xF0,
-0x20, 0x6B, 0x30, 0xF0, 0x20, 0x6A, 0x6E, 0xF5,
-0x58, 0x9A, 0x4F, 0xF7, 0x95, 0xA3, 0x40, 0xEA,
-0x01, 0x72, 0x19, 0x61, 0x30, 0xF0, 0x20, 0x6A,
-0xC0, 0xF1, 0x08, 0x4A, 0x68, 0xF3, 0x99, 0xA2,
-0x21, 0x6B, 0x6B, 0xEB, 0x8C, 0xEB, 0x68, 0xF3,
-0x79, 0xC2, 0x68, 0xF3, 0x5C, 0xA2, 0x04, 0x6B,
-0x6C, 0xEA, 0x13, 0x2A, 0x30, 0xF0, 0x20, 0x6A,
-0x2E, 0xF4, 0x48, 0x9A, 0x04, 0x96, 0x83, 0x67,
-0x01, 0x6D, 0x40, 0xEA, 0x0A, 0x10, 0x30, 0xF0,
-0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A, 0x68, 0xF3,
-0x99, 0xA2, 0x20, 0x6B, 0x8D, 0xEB, 0x68, 0xF3,
-0x79, 0xC2, 0x09, 0x97, 0x08, 0x91, 0x07, 0x90,
-0x05, 0x63, 0x00, 0xEF, 0xFB, 0x63, 0x09, 0x62,
-0x08, 0xD1, 0x07, 0xD0, 0xFF, 0x6A, 0x4C, 0xEC,
-0x25, 0x67, 0x04, 0xD4, 0x4C, 0xE9, 0x5D, 0x2C,
+0x54, 0x9A, 0x02, 0x6C, 0xB6, 0xF3, 0xB4, 0x9B,
+0x45, 0x10, 0x02, 0x72, 0x0B, 0x60, 0x04, 0x6C,
+0x01, 0xF7, 0x00, 0x6D, 0x00, 0x18, 0x3C, 0xDF,
+0x10, 0xF0, 0x24, 0x6A, 0x04, 0x6C, 0x56, 0xF3,
+0xB4, 0x9A, 0xBA, 0x17, 0x04, 0x6C, 0x00, 0xF3,
+0x00, 0x6D, 0x00, 0x18, 0x3C, 0xDF, 0x10, 0xF0,
+0x24, 0x6A, 0x56, 0xF3, 0xB4, 0x9A, 0x04, 0x6C,
+0x00, 0x18, 0x3C, 0xDF, 0x30, 0xF0, 0x20, 0x6A,
+0x10, 0xF0, 0x24, 0x6B, 0x4E, 0xF2, 0x54, 0x9A,
+0x02, 0x6C, 0xB6, 0xF3, 0xB8, 0x9B, 0x22, 0x10,
+0x02, 0x72, 0x0B, 0x60, 0x04, 0x6C, 0x1E, 0xF0,
+0x00, 0x6D, 0x00, 0x18, 0x3C, 0xDF, 0x10, 0xF0,
+0x24, 0x6A, 0x04, 0x6C, 0x56, 0xF3, 0xB8, 0x9A,
+0x97, 0x17, 0x04, 0x6C, 0x06, 0xF0, 0x00, 0x6D,
+0x00, 0x18, 0x3C, 0xDF, 0x10, 0xF0, 0x24, 0x6A,
+0x56, 0xF3, 0xB8, 0x9A, 0x04, 0x6C, 0x00, 0x18,
+0x3C, 0xDF, 0x30, 0xF0, 0x20, 0x6A, 0x10, 0xF0,
+0x24, 0x6B, 0x4E, 0xF2, 0x54, 0x9A, 0xF6, 0xF2,
+0xBC, 0x9B, 0x02, 0x6C, 0x40, 0xEA, 0x10, 0xF0,
+0x24, 0x6A, 0x56, 0xF3, 0x7C, 0x9A, 0xFF, 0x6C,
+0x07, 0x6D, 0x40, 0xA3, 0x8C, 0xEA, 0xAD, 0xEA,
+0x65, 0x10, 0x05, 0x5C, 0x5D, 0x60, 0x10, 0xF0,
+0x24, 0x6A, 0x88, 0x34, 0x96, 0xF0, 0x04, 0x4A,
+0x89, 0xE2, 0x40, 0x9A, 0x00, 0xEA, 0x10, 0xF0,
+0x24, 0x6A, 0xB6, 0xF3, 0xA8, 0x9A, 0x01, 0x6C,
+0x00, 0x18, 0x6D, 0xDF, 0x00, 0x6C, 0x08, 0x6D,
+0x00, 0x18, 0x6D, 0xDF, 0x01, 0x6C, 0x0C, 0x6D,
+0x45, 0x10, 0x04, 0x6C, 0x0F, 0x6D, 0x00, 0x18,
+0x6D, 0xDF, 0x10, 0xF0, 0x24, 0x6A, 0x56, 0xF3,
+0xAC, 0x9A, 0x04, 0x6C, 0x00, 0x18, 0x6D, 0xDF,
+0x10, 0xF0, 0x24, 0x6A, 0x02, 0x6C, 0xB6, 0xF3,
+0xB0, 0x9A, 0x34, 0x10, 0x04, 0x6C, 0xF0, 0x6D,
+0x00, 0x18, 0x6D, 0xDF, 0x10, 0xF0, 0x24, 0x6A,
+0x56, 0xF3, 0xB0, 0x9A, 0x04, 0x6C, 0x00, 0x18,
+0x6D, 0xDF, 0x10, 0xF0, 0x24, 0x6A, 0x02, 0x6C,
+0xB6, 0xF3, 0xB4, 0x9A, 0x23, 0x10, 0x04, 0x6C,
+0x01, 0xF7, 0x00, 0x6D, 0x00, 0x18, 0x6D, 0xDF,
+0x10, 0xF0, 0x24, 0x6A, 0x56, 0xF3, 0xB4, 0x9A,
+0x04, 0x6C, 0x00, 0x18, 0x6D, 0xDF, 0x10, 0xF0,
+0x24, 0x6A, 0x02, 0x6C, 0xB6, 0xF3, 0xB8, 0x9A,
+0x11, 0x10, 0x04, 0x6C, 0x1E, 0xF0, 0x00, 0x6D,
+0x00, 0x18, 0x6D, 0xDF, 0x10, 0xF0, 0x24, 0x6A,
+0x56, 0xF3, 0xB8, 0x9A, 0x04, 0x6C, 0x00, 0x18,
+0x6D, 0xDF, 0x10, 0xF0, 0x24, 0x6A, 0xF6, 0xF2,
+0xBC, 0x9A, 0x02, 0x6C, 0x00, 0x18, 0xBD, 0xDF,
+0x10, 0xF0, 0x24, 0x6A, 0x56, 0xF3, 0x7C, 0x9A,
+0xFC, 0x6A, 0x80, 0xA3, 0x8C, 0xEA, 0x40, 0xC3,
+0x05, 0x97, 0x03, 0x63, 0x00, 0xEF, 0x00, 0x65,
+0xFB, 0x63, 0x09, 0x62, 0x08, 0xD1, 0x07, 0xD0,
 0x30, 0xF0, 0x20, 0x68, 0xC0, 0xF1, 0x08, 0x48,
-0x68, 0xF3, 0x74, 0xA0, 0x7F, 0x6E, 0x91, 0x67,
-0x6C, 0xEE, 0x4C, 0xEE, 0x00, 0x6D, 0x00, 0x18,
-0x45, 0xCC, 0x7D, 0x67, 0x87, 0x43, 0x09, 0x4C,
-0x10, 0xF0, 0x24, 0x6A, 0x60, 0xA4, 0x96, 0xF5,
-0x48, 0x9A, 0x60, 0xC2, 0x10, 0xF0, 0x24, 0x6A,
-0x36, 0xF5, 0x48, 0x9A, 0x02, 0x6B, 0x60, 0xDA,
-0x30, 0xF0, 0x20, 0x6A, 0x30, 0xF0, 0x20, 0x6B,
-0x6E, 0xF5, 0x58, 0x9A, 0x4F, 0xF7, 0x95, 0xA3,
-0x40, 0xEA, 0x10, 0x2A, 0x00, 0x18, 0x73, 0xEA,
-0x91, 0x67, 0x00, 0x18, 0x03, 0xCA, 0x68, 0xF3,
-0x7A, 0xA0, 0x02, 0x6A, 0x4B, 0xEA, 0x6C, 0xEA,
-0x03, 0x6B, 0x6B, 0xEB, 0x6C, 0xEA, 0x68, 0xF3,
-0x5A, 0xC0, 0x08, 0x10, 0x30, 0xF0, 0x20, 0x6A,
-0x2E, 0xF4, 0x48, 0x9A, 0x0C, 0x6C, 0x01, 0x6D,
-0xD1, 0x67, 0x40, 0xEA, 0x30, 0xF0, 0x20, 0x6A,
-0xC0, 0xF1, 0x08, 0x4A, 0x68, 0xF3, 0x99, 0xA2,
-0x05, 0x6B, 0x6B, 0xEB, 0x8C, 0xEB, 0x68, 0xF3,
-0x79, 0xC2, 0x30, 0xF0, 0x20, 0x6A, 0xCF, 0xF4,
-0x60, 0xA2, 0x01, 0x6A, 0x6C, 0xEA, 0x13, 0x22,
-0x10, 0xF0, 0x24, 0x6A, 0x36, 0xF5, 0x44, 0x9A,
-0x00, 0x6B, 0x60, 0xC2, 0x10, 0xF0, 0x24, 0x6A,
-0x36, 0xF5, 0x48, 0x9A, 0x04, 0x6B, 0x60, 0xC2,
-0x06, 0x10, 0x04, 0x94, 0x01, 0x74, 0x03, 0x61,
-0x91, 0x67, 0x00, 0x18, 0xDD, 0xCC, 0x09, 0x97,
+0x68, 0xF3, 0x54, 0xA0, 0x7F, 0x6E, 0xFF, 0x69,
+0x4C, 0xEE, 0x2C, 0xEC, 0x01, 0x6D, 0x2C, 0xEE,
+0x04, 0xD4, 0x00, 0x18, 0x36, 0xCC, 0x88, 0xF3,
+0x6A, 0xA8, 0x10, 0xF0, 0x24, 0x6A, 0x36, 0xF3,
+0x40, 0x9A, 0x2C, 0xEB, 0x60, 0xC2, 0xC8, 0xF3,
+0x99, 0xA0, 0x80, 0x6A, 0x4B, 0xEA, 0x1F, 0x6B,
+0x8C, 0xEA, 0x8C, 0xEB, 0x2C, 0xEA, 0x2C, 0xEB,
+0x11, 0x22, 0x6F, 0x32, 0x2C, 0xEA, 0x82, 0x42,
+0x01, 0x4A, 0xC8, 0xF3, 0x5D, 0xC0, 0x07, 0x6A,
+0x6C, 0xEA, 0x68, 0xF3, 0x77, 0xA0, 0xC8, 0xF3,
+0x9C, 0xC0, 0x76, 0x33, 0x6C, 0x33, 0x6D, 0xEA,
+0x2C, 0xEA, 0x06, 0x10, 0x04, 0x6B, 0xC8, 0xF3,
+0x7C, 0xC0, 0x03, 0x6B, 0xC8, 0xF3, 0x7D, 0xC0,
+0x10, 0xF0, 0x24, 0x6B, 0xB6, 0xF3, 0x7C, 0x9B,
+0x40, 0xC3, 0x30, 0xF0, 0x20, 0x6B, 0x30, 0xF0,
+0x20, 0x6A, 0x6E, 0xF5, 0x58, 0x9A, 0x4F, 0xF7,
+0x95, 0xA3, 0x40, 0xEA, 0x01, 0x72, 0x19, 0x61,
+0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A,
+0x68, 0xF3, 0x99, 0xA2, 0x21, 0x6B, 0x6B, 0xEB,
+0x8C, 0xEB, 0x68, 0xF3, 0x79, 0xC2, 0x68, 0xF3,
+0x5C, 0xA2, 0x04, 0x6B, 0x6C, 0xEA, 0x13, 0x2A,
+0x30, 0xF0, 0x20, 0x6A, 0x2E, 0xF4, 0x48, 0x9A,
+0x04, 0x96, 0x83, 0x67, 0x01, 0x6D, 0x40, 0xEA,
+0x0A, 0x10, 0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1,
+0x08, 0x4A, 0x68, 0xF3, 0x99, 0xA2, 0x20, 0x6B,
+0x8D, 0xEB, 0x68, 0xF3, 0x79, 0xC2, 0x09, 0x97,
 0x08, 0x91, 0x07, 0x90, 0x05, 0x63, 0x00, 0xEF,
 0xFB, 0x63, 0x09, 0x62, 0x08, 0xD1, 0x07, 0xD0,
-0xFF, 0x69, 0x2C, 0xED, 0x30, 0xF0, 0x20, 0x68,
-0x0A, 0xD4, 0xC0, 0xF1, 0x08, 0x48, 0x85, 0x67,
-0x04, 0xD5, 0x00, 0x18, 0x83, 0xC9, 0x68, 0xF3,
-0x94, 0xA0, 0x7F, 0x6A, 0x04, 0x95, 0x4C, 0xEC,
-0x2C, 0xEC, 0x00, 0x18, 0x17, 0xCD, 0x68, 0xF3,
-0x54, 0xA0, 0x7F, 0x6B, 0x6C, 0xEA, 0x2C, 0xEA,
-0x18, 0x22, 0x0A, 0x93, 0x0F, 0x6C, 0x41, 0xA3,
-0xA2, 0xA3, 0x4C, 0xEC, 0x2C, 0xEC, 0x00, 0x18,
-0x56, 0xC6, 0x28, 0xF1, 0x54, 0xA0, 0x03, 0x72,
-0x0C, 0x61, 0x10, 0xF0, 0x24, 0x6A, 0xB6, 0xF5,
-0x64, 0x9A, 0x40, 0xA3, 0x4C, 0xE9, 0x02, 0x6A,
-0x2C, 0xEA, 0x03, 0x22, 0xFD, 0x6A, 0x2C, 0xEA,
-0x40, 0xC3, 0x09, 0x97, 0x08, 0x91, 0x07, 0x90,
-0x05, 0x63, 0x00, 0xEF, 0xFF, 0x6A, 0x4C, 0xEC,
-0xAC, 0xEA, 0x0B, 0x2A, 0x10, 0xF0, 0x24, 0x6B,
-0xB6, 0xF5, 0xA8, 0x9B, 0x10, 0xF0, 0x24, 0x6E,
-0xB6, 0xF5, 0xCC, 0x9E, 0x60, 0x9D, 0xCC, 0xEB,
-0x0C, 0x10, 0x01, 0x72, 0x0B, 0x61, 0x10, 0xF0,
-0x24, 0x6B, 0xB6, 0xF5, 0xA8, 0x9B, 0x10, 0xF0,
-0x24, 0x6E, 0xB6, 0xF5, 0xD0, 0x9E, 0x60, 0x9D,
-0xCD, 0xEB, 0x60, 0xDD, 0x05, 0x5C, 0x60, 0xF1,
-0x06, 0x60, 0x10, 0xF0, 0x24, 0x6B, 0x88, 0x34,
-0x96, 0xF2, 0x08, 0x4B, 0x8D, 0xE3, 0x60, 0x9B,
-0x00, 0xEB, 0x05, 0x2A, 0x10, 0xF0, 0x24, 0x6A,
-0xB6, 0xF5, 0x68, 0x9A, 0x0D, 0x11, 0x01, 0x72,
-0x10, 0x61, 0x10, 0xF0, 0x24, 0x6A, 0xB6, 0xF5,
-0x68, 0x9A, 0xFF, 0x6C, 0x40, 0x6D, 0x40, 0xA3,
-0x8C, 0xEA, 0xAD, 0xEA, 0x8C, 0xEA, 0x40, 0xC3,
-0x40, 0xA3, 0x80, 0x4D, 0xC0, 0x4D, 0x8C, 0xEA,
-0x14, 0x10, 0x02, 0x72, 0x07, 0x61, 0x10, 0xF0,
-0x24, 0x6A, 0xB6, 0xF5, 0x68, 0x9A, 0xBF, 0x6A,
-0x80, 0xA3, 0xF4, 0x10, 0x03, 0x72, 0x20, 0xF1,
-0x1A, 0x61, 0x10, 0xF0, 0x24, 0x6A, 0xB6, 0xF5,
-0x68, 0x9A, 0xFF, 0x6C, 0x40, 0x6D, 0x40, 0xA3,
-0x8C, 0xEA, 0xAD, 0xEA, 0xE7, 0x10, 0x07, 0x2A,
-0x10, 0xF0, 0x24, 0x6A, 0xB6, 0xF5, 0x74, 0x9A,
-0xFD, 0x6A, 0x80, 0xA3, 0xDF, 0x10, 0x01, 0x72,
-0x19, 0x61, 0x10, 0xF0, 0x24, 0x6A, 0xB6, 0xF5,
-0x88, 0x9A, 0xFF, 0x6A, 0x40, 0x6D, 0x60, 0xA4,
-0x4C, 0xEB, 0xAD, 0xEB, 0x4C, 0xEB, 0x60, 0xC4,
-0x10, 0xF0, 0x24, 0x6B, 0xB6, 0xF5, 0x94, 0x9B,
-0x01, 0x6D, 0x60, 0xA4, 0x4C, 0xEB, 0xAD, 0xEB,
-0x4C, 0xEB, 0x60, 0xC4, 0x60, 0xA4, 0x02, 0x6D,
-0x4C, 0xEB, 0xE1, 0x10, 0x02, 0x72, 0x0F, 0x61,
-0x10, 0xF0, 0x24, 0x6A, 0xB6, 0xF5, 0x68, 0x9A,
-0xBF, 0x6A, 0x80, 0xA3, 0x8C, 0xEA, 0x40, 0xC3,
-0x10, 0xF0, 0x24, 0x6A, 0xB6, 0xF5, 0x74, 0x9A,
-0xFE, 0x6A, 0x80, 0xA3, 0xB3, 0x10, 0x03, 0x72,
-0xE0, 0xF0, 0x19, 0x61, 0x10, 0xF0, 0x24, 0x6A,
-0xB6, 0xF5, 0x88, 0x9A, 0xFF, 0x6B, 0x40, 0x6D,
-0x40, 0xA4, 0x6C, 0xEA, 0xAD, 0xEA, 0x6C, 0xEA,
-0x40, 0xC4, 0x10, 0xF0, 0x24, 0x6A, 0xB6, 0xF5,
-0x94, 0x9A, 0x01, 0x6D, 0x40, 0xA4, 0x6C, 0xEA,
-0x92, 0x10, 0x07, 0x2A, 0x10, 0xF0, 0x24, 0x6A,
-0xB6, 0xF5, 0x74, 0x9A, 0xF7, 0x6A, 0x80, 0xA3,
-0x95, 0x10, 0x01, 0x72, 0x19, 0x61, 0x10, 0xF0,
-0x24, 0x6A, 0xB6, 0xF5, 0x88, 0x9A, 0xFF, 0x6A,
+0xFF, 0x6A, 0x4C, 0xEC, 0x25, 0x67, 0x04, 0xD4,
+0x4C, 0xE9, 0x5D, 0x2C, 0x30, 0xF0, 0x20, 0x68,
+0xC0, 0xF1, 0x08, 0x48, 0x68, 0xF3, 0x74, 0xA0,
+0x7F, 0x6E, 0x91, 0x67, 0x6C, 0xEE, 0x4C, 0xEE,
+0x00, 0x6D, 0x00, 0x18, 0x36, 0xCC, 0x7D, 0x67,
+0x87, 0x43, 0x09, 0x4C, 0x10, 0xF0, 0x24, 0x6A,
+0x60, 0xA4, 0xB6, 0xF3, 0x44, 0x9A, 0x60, 0xC2,
+0x10, 0xF0, 0x24, 0x6A, 0x56, 0xF3, 0x44, 0x9A,
+0x02, 0x6B, 0x60, 0xDA, 0x30, 0xF0, 0x20, 0x6A,
+0x30, 0xF0, 0x20, 0x6B, 0x6E, 0xF5, 0x58, 0x9A,
+0x4F, 0xF7, 0x95, 0xA3, 0x40, 0xEA, 0x10, 0x2A,
+0x00, 0x18, 0xFA, 0xE9, 0x91, 0x67, 0x00, 0x18,
+0xF4, 0xC9, 0x68, 0xF3, 0x7A, 0xA0, 0x02, 0x6A,
+0x4B, 0xEA, 0x6C, 0xEA, 0x03, 0x6B, 0x6B, 0xEB,
+0x6C, 0xEA, 0x68, 0xF3, 0x5A, 0xC0, 0x08, 0x10,
+0x30, 0xF0, 0x20, 0x6A, 0x2E, 0xF4, 0x48, 0x9A,
+0x0C, 0x6C, 0x01, 0x6D, 0xD1, 0x67, 0x40, 0xEA,
+0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A,
+0x68, 0xF3, 0x99, 0xA2, 0x05, 0x6B, 0x6B, 0xEB,
+0x8C, 0xEB, 0x68, 0xF3, 0x79, 0xC2, 0x30, 0xF0,
+0x20, 0x6A, 0xCF, 0xF4, 0x60, 0xA2, 0x01, 0x6A,
+0x6C, 0xEA, 0x13, 0x22, 0x10, 0xF0, 0x24, 0x6A,
+0x56, 0xF3, 0x40, 0x9A, 0x00, 0x6B, 0x60, 0xC2,
+0x10, 0xF0, 0x24, 0x6A, 0x56, 0xF3, 0x44, 0x9A,
+0x04, 0x6B, 0x60, 0xC2, 0x06, 0x10, 0x04, 0x94,
+0x01, 0x74, 0x03, 0x61, 0x91, 0x67, 0x00, 0x18,
+0xCE, 0xCC, 0x09, 0x97, 0x08, 0x91, 0x07, 0x90,
+0x05, 0x63, 0x00, 0xEF, 0xFB, 0x63, 0x09, 0x62,
+0x08, 0xD1, 0x07, 0xD0, 0xFF, 0x69, 0x2C, 0xED,
+0x30, 0xF0, 0x20, 0x68, 0x0A, 0xD4, 0xC0, 0xF1,
+0x08, 0x48, 0x85, 0x67, 0x04, 0xD5, 0x00, 0x18,
+0x74, 0xC9, 0x68, 0xF3, 0x94, 0xA0, 0x7F, 0x6A,
+0x04, 0x95, 0x4C, 0xEC, 0x2C, 0xEC, 0x00, 0x18,
+0x08, 0xCD, 0x68, 0xF3, 0x54, 0xA0, 0x7F, 0x6B,
+0x6C, 0xEA, 0x2C, 0xEA, 0x18, 0x22, 0x0A, 0x93,
+0x0F, 0x6C, 0x41, 0xA3, 0xA2, 0xA3, 0x4C, 0xEC,
+0x2C, 0xEC, 0x00, 0x18, 0x56, 0xC6, 0x28, 0xF1,
+0x54, 0xA0, 0x03, 0x72, 0x0C, 0x61, 0x10, 0xF0,
+0x24, 0x6A, 0xD6, 0xF3, 0x60, 0x9A, 0x40, 0xA3,
+0x4C, 0xE9, 0x02, 0x6A, 0x2C, 0xEA, 0x03, 0x22,
+0xFD, 0x6A, 0x2C, 0xEA, 0x40, 0xC3, 0x09, 0x97,
+0x08, 0x91, 0x07, 0x90, 0x05, 0x63, 0x00, 0xEF,
+0xFF, 0x6A, 0x4C, 0xEC, 0xAC, 0xEA, 0x0B, 0x2A,
+0x10, 0xF0, 0x24, 0x6B, 0xD6, 0xF3, 0xA4, 0x9B,
+0x10, 0xF0, 0x24, 0x6E, 0xD6, 0xF3, 0xC8, 0x9E,
+0x60, 0x9D, 0xCC, 0xEB, 0x0C, 0x10, 0x01, 0x72,
+0x0B, 0x61, 0x10, 0xF0, 0x24, 0x6B, 0xD6, 0xF3,
+0xA4, 0x9B, 0x10, 0xF0, 0x24, 0x6E, 0xD6, 0xF3,
+0xCC, 0x9E, 0x60, 0x9D, 0xCD, 0xEB, 0x60, 0xDD,
+0x05, 0x5C, 0x60, 0xF1, 0x06, 0x60, 0x10, 0xF0,
+0x24, 0x6B, 0x88, 0x34, 0xB6, 0xF0, 0x04, 0x4B,
+0x8D, 0xE3, 0x60, 0x9B, 0x00, 0xEB, 0x05, 0x2A,
+0x10, 0xF0, 0x24, 0x6A, 0xD6, 0xF3, 0x64, 0x9A,
+0x0D, 0x11, 0x01, 0x72, 0x10, 0x61, 0x10, 0xF0,
+0x24, 0x6A, 0xD6, 0xF3, 0x64, 0x9A, 0xFF, 0x6C,
+0x40, 0x6D, 0x40, 0xA3, 0x8C, 0xEA, 0xAD, 0xEA,
+0x8C, 0xEA, 0x40, 0xC3, 0x40, 0xA3, 0x80, 0x4D,
+0xC0, 0x4D, 0x8C, 0xEA, 0x14, 0x10, 0x02, 0x72,
+0x07, 0x61, 0x10, 0xF0, 0x24, 0x6A, 0xD6, 0xF3,
+0x64, 0x9A, 0xBF, 0x6A, 0x80, 0xA3, 0xF4, 0x10,
+0x03, 0x72, 0x20, 0xF1, 0x1A, 0x61, 0x10, 0xF0,
+0x24, 0x6A, 0xD6, 0xF3, 0x64, 0x9A, 0xFF, 0x6C,
+0x40, 0x6D, 0x40, 0xA3, 0x8C, 0xEA, 0xAD, 0xEA,
+0xE7, 0x10, 0x07, 0x2A, 0x10, 0xF0, 0x24, 0x6A,
+0xD6, 0xF3, 0x70, 0x9A, 0xFD, 0x6A, 0x80, 0xA3,
+0xDF, 0x10, 0x01, 0x72, 0x19, 0x61, 0x10, 0xF0,
+0x24, 0x6A, 0xD6, 0xF3, 0x84, 0x9A, 0xFF, 0x6A,
 0x40, 0x6D, 0x60, 0xA4, 0x4C, 0xEB, 0xAD, 0xEB,
 0x4C, 0xEB, 0x60, 0xC4, 0x10, 0xF0, 0x24, 0x6B,
-0xB6, 0xF5, 0x94, 0x9B, 0x04, 0x6D, 0x60, 0xA4,
+0xD6, 0xF3, 0x90, 0x9B, 0x01, 0x6D, 0x60, 0xA4,
 0x4C, 0xEB, 0xAD, 0xEB, 0x4C, 0xEB, 0x60, 0xC4,
-0x60, 0xA4, 0x08, 0x6D, 0x4C, 0xEB, 0x97, 0x10,
+0x60, 0xA4, 0x02, 0x6D, 0x4C, 0xEB, 0xE1, 0x10,
 0x02, 0x72, 0x0F, 0x61, 0x10, 0xF0, 0x24, 0x6A,
-0xB6, 0xF5, 0x68, 0x9A, 0xBF, 0x6A, 0x80, 0xA3,
+0xD6, 0xF3, 0x64, 0x9A, 0xBF, 0x6A, 0x80, 0xA3,
 0x8C, 0xEA, 0x40, 0xC3, 0x10, 0xF0, 0x24, 0x6A,
-0xB6, 0xF5, 0x74, 0x9A, 0xFB, 0x6A, 0x80, 0xA3,
-0x69, 0x10, 0x03, 0x72, 0xA0, 0xF0, 0x0F, 0x61,
-0x10, 0xF0, 0x24, 0x6A, 0xB6, 0xF5, 0x88, 0x9A,
+0xD6, 0xF3, 0x70, 0x9A, 0xFE, 0x6A, 0x80, 0xA3,
+0xB3, 0x10, 0x03, 0x72, 0xE0, 0xF0, 0x19, 0x61,
+0x10, 0xF0, 0x24, 0x6A, 0xD6, 0xF3, 0x84, 0x9A,
 0xFF, 0x6B, 0x40, 0x6D, 0x40, 0xA4, 0x6C, 0xEA,
 0xAD, 0xEA, 0x6C, 0xEA, 0x40, 0xC4, 0x10, 0xF0,
-0x24, 0x6A, 0xB6, 0xF5, 0x94, 0x9A, 0x04, 0x6D,
-0x40, 0xA4, 0x6C, 0xEA, 0x48, 0x10, 0x07, 0x2A,
-0x10, 0xF0, 0x24, 0x6A, 0xB6, 0xF5, 0x74, 0x9A,
-0xDF, 0x6A, 0x80, 0xA3, 0x4B, 0x10, 0x01, 0x72,
-0x19, 0x61, 0x10, 0xF0, 0x24, 0x6A, 0xB6, 0xF5,
-0x88, 0x9A, 0xFF, 0x6A, 0x40, 0x6D, 0x60, 0xA4,
+0x24, 0x6A, 0xD6, 0xF3, 0x90, 0x9A, 0x01, 0x6D,
+0x40, 0xA4, 0x6C, 0xEA, 0x92, 0x10, 0x07, 0x2A,
+0x10, 0xF0, 0x24, 0x6A, 0xD6, 0xF3, 0x70, 0x9A,
+0xF7, 0x6A, 0x80, 0xA3, 0x95, 0x10, 0x01, 0x72,
+0x19, 0x61, 0x10, 0xF0, 0x24, 0x6A, 0xD6, 0xF3,
+0x84, 0x9A, 0xFF, 0x6A, 0x40, 0x6D, 0x60, 0xA4,
 0x4C, 0xEB, 0xAD, 0xEB, 0x4C, 0xEB, 0x60, 0xC4,
-0x10, 0xF0, 0x24, 0x6B, 0xB6, 0xF5, 0x94, 0x9B,
-0x10, 0x6D, 0x60, 0xA4, 0x4C, 0xEB, 0xAD, 0xEB,
-0x4C, 0xEB, 0x60, 0xC4, 0x60, 0xA4, 0x20, 0x6D,
-0x4C, 0xEB, 0x4D, 0x10, 0x02, 0x72, 0x0F, 0x61,
-0x10, 0xF0, 0x24, 0x6A, 0xB6, 0xF5, 0x68, 0x9A,
+0x10, 0xF0, 0x24, 0x6B, 0xD6, 0xF3, 0x90, 0x9B,
+0x04, 0x6D, 0x60, 0xA4, 0x4C, 0xEB, 0xAD, 0xEB,
+0x4C, 0xEB, 0x60, 0xC4, 0x60, 0xA4, 0x08, 0x6D,
+0x4C, 0xEB, 0x97, 0x10, 0x02, 0x72, 0x0F, 0x61,
+0x10, 0xF0, 0x24, 0x6A, 0xD6, 0xF3, 0x64, 0x9A,
 0xBF, 0x6A, 0x80, 0xA3, 0x8C, 0xEA, 0x40, 0xC3,
-0x10, 0xF0, 0x24, 0x6A, 0xB6, 0xF5, 0x74, 0x9A,
-0xEF, 0x6A, 0x80, 0xA3, 0x1F, 0x10, 0x03, 0x72,
-0x66, 0x61, 0x10, 0xF0, 0x24, 0x6A, 0xB6, 0xF5,
-0x88, 0x9A, 0xFF, 0x6B, 0x40, 0x6D, 0x40, 0xA4,
-0x6C, 0xEA, 0xAD, 0xEA, 0x6C, 0xEA, 0x40, 0xC4,
-0x10, 0xF0, 0x24, 0x6A, 0xB6, 0xF5, 0x94, 0x9A,
-0x10, 0x6D, 0x40, 0xA4, 0x6C, 0xEA, 0xAD, 0xEA,
-0x6C, 0xEA, 0x40, 0xC4, 0x20, 0xE8, 0x09, 0x2A,
-0x10, 0xF0, 0x24, 0x6A, 0xB6, 0xF5, 0x74, 0x9A,
-0x80, 0xA3, 0x7F, 0x6A, 0x8C, 0xEA, 0x40, 0xC3,
-0x20, 0xE8, 0x01, 0x72, 0x1C, 0x61, 0x10, 0xF0,
-0x24, 0x6A, 0xB6, 0xF5, 0x88, 0x9A, 0xFF, 0x6A,
+0x10, 0xF0, 0x24, 0x6A, 0xD6, 0xF3, 0x70, 0x9A,
+0xFB, 0x6A, 0x80, 0xA3, 0x69, 0x10, 0x03, 0x72,
+0xA0, 0xF0, 0x0F, 0x61, 0x10, 0xF0, 0x24, 0x6A,
+0xD6, 0xF3, 0x84, 0x9A, 0xFF, 0x6B, 0x40, 0x6D,
+0x40, 0xA4, 0x6C, 0xEA, 0xAD, 0xEA, 0x6C, 0xEA,
+0x40, 0xC4, 0x10, 0xF0, 0x24, 0x6A, 0xD6, 0xF3,
+0x90, 0x9A, 0x04, 0x6D, 0x40, 0xA4, 0x6C, 0xEA,
+0x48, 0x10, 0x07, 0x2A, 0x10, 0xF0, 0x24, 0x6A,
+0xD6, 0xF3, 0x70, 0x9A, 0xDF, 0x6A, 0x80, 0xA3,
+0x4B, 0x10, 0x01, 0x72, 0x19, 0x61, 0x10, 0xF0,
+0x24, 0x6A, 0xD6, 0xF3, 0x84, 0x9A, 0xFF, 0x6A,
 0x40, 0x6D, 0x60, 0xA4, 0x4C, 0xEB, 0xAD, 0xEB,
 0x4C, 0xEB, 0x60, 0xC4, 0x10, 0xF0, 0x24, 0x6B,
-0xB6, 0xF5, 0x94, 0x9B, 0x60, 0xA4, 0x4C, 0xEB,
-0xAD, 0xEB, 0x4C, 0xEB, 0x60, 0xC4, 0x60, 0xA4,
-0x80, 0x4D, 0xC0, 0x4D, 0x4C, 0xEB, 0xAD, 0xEB,
-0x4C, 0xEB, 0x60, 0xC4, 0x20, 0xE8, 0x02, 0x72,
-0x10, 0x61, 0x10, 0xF0, 0x24, 0x6A, 0xB6, 0xF5,
-0x48, 0x9A, 0xBF, 0x6B, 0x80, 0xA2, 0x6C, 0xEC,
-0x80, 0xC2, 0x10, 0xF0, 0x24, 0x6A, 0xB6, 0xF5,
-0x54, 0x9A, 0x80, 0xA2, 0x8C, 0xEB, 0x60, 0xC2,
-0x20, 0xE8, 0x03, 0x72, 0x14, 0x61, 0x10, 0xF0,
-0x24, 0x6A, 0xB6, 0xF5, 0x88, 0x9A, 0xFF, 0x6B,
+0xD6, 0xF3, 0x90, 0x9B, 0x10, 0x6D, 0x60, 0xA4,
+0x4C, 0xEB, 0xAD, 0xEB, 0x4C, 0xEB, 0x60, 0xC4,
+0x60, 0xA4, 0x20, 0x6D, 0x4C, 0xEB, 0x4D, 0x10,
+0x02, 0x72, 0x0F, 0x61, 0x10, 0xF0, 0x24, 0x6A,
+0xD6, 0xF3, 0x64, 0x9A, 0xBF, 0x6A, 0x80, 0xA3,
+0x8C, 0xEA, 0x40, 0xC3, 0x10, 0xF0, 0x24, 0x6A,
+0xD6, 0xF3, 0x70, 0x9A, 0xEF, 0x6A, 0x80, 0xA3,
+0x1F, 0x10, 0x03, 0x72, 0x66, 0x61, 0x10, 0xF0,
+0x24, 0x6A, 0xD6, 0xF3, 0x84, 0x9A, 0xFF, 0x6B,
 0x40, 0x6D, 0x40, 0xA4, 0x6C, 0xEA, 0xAD, 0xEA,
 0x6C, 0xEA, 0x40, 0xC4, 0x10, 0xF0, 0x24, 0x6A,
-0xB6, 0xF5, 0x94, 0x9A, 0x40, 0xA4, 0x6C, 0xEA,
-0xAD, 0xEA, 0x6C, 0xEA, 0x40, 0xC4, 0x20, 0xE8,
-0xFF, 0x63, 0x01, 0xD0, 0x10, 0xF0, 0x24, 0x6B,
-0xB6, 0xF5, 0x78, 0x9B, 0xFF, 0x6A, 0x4C, 0xEC,
-0x6D, 0xE5, 0x00, 0xA3, 0x3F, 0x6F, 0x01, 0x74,
-0x0C, 0xEF, 0x4C, 0xEE, 0xE0, 0xC3, 0x15, 0x60,
-0x07, 0x24, 0x30, 0xF0, 0x20, 0x6C, 0x48, 0xF5,
-0x84, 0xA4, 0x08, 0x6F, 0xEC, 0xEC, 0x0D, 0x24,
-0x10, 0xF0, 0x24, 0x6C, 0xB6, 0xF5, 0xFC, 0x9C,
-0xEF, 0x6C, 0xFD, 0xE5, 0x00, 0xA7, 0x0C, 0xEC,
-0x80, 0xC7, 0x80, 0xA3, 0x40, 0x6F, 0x4C, 0xEC,
-0x0F, 0x10, 0x10, 0xF0, 0x24, 0x6C, 0xB6, 0xF5,
-0xFC, 0x9C, 0x10, 0x68, 0xFD, 0xE5, 0x80, 0xA7,
-0x4C, 0xEC, 0x0D, 0xEC, 0x4C, 0xEC, 0x80, 0xC7,
-0x80, 0xA3, 0x80, 0x6F, 0xEB, 0xEF, 0x4C, 0xEC,
-0xED, 0xEC, 0x4C, 0xEC, 0x10, 0xF0, 0x24, 0x6A,
-0xD6, 0xF5, 0x40, 0x9A, 0x80, 0xC3, 0x80, 0xF4,
-0xC0, 0x36, 0x55, 0xE5, 0x40, 0x9D, 0x4D, 0xEE,
-0xC0, 0xDD, 0x01, 0x90, 0x01, 0x63, 0x20, 0xE8,
-0xFD, 0x63, 0x05, 0x62, 0x10, 0xF0, 0x24, 0x6A,
-0xD6, 0xF5, 0x44, 0x9A, 0xFF, 0x6B, 0x40, 0xA2,
-0x6C, 0xEA, 0x52, 0x32, 0x6C, 0xEA, 0x11, 0x2A,
-0x30, 0xF0, 0x20, 0x6B, 0x30, 0xF0, 0x20, 0x6A,
-0x6E, 0xF2, 0x5C, 0x9A, 0xA8, 0xF4, 0x86, 0xA3,
-0x00, 0x6D, 0x18, 0x6E, 0xE5, 0x67, 0x40, 0xEA,
-0x30, 0xF0, 0x20, 0x6A, 0x8E, 0xF2, 0x5C, 0x9A,
-0x40, 0xEA, 0x05, 0x97, 0x03, 0x63, 0x00, 0xEF,
-0xFD, 0x63, 0x05, 0x62, 0x04, 0xD0, 0xFF, 0x6A,
-0x64, 0x67, 0x4C, 0xEB, 0x85, 0x67, 0x02, 0x5B,
-0x4C, 0xEC, 0x43, 0x60, 0x10, 0xF0, 0x24, 0x6D,
-0xD6, 0xF5, 0xA8, 0x9D, 0xFF, 0xF7, 0x1F, 0x6E,
-0x30, 0xF0, 0x20, 0x68, 0xE0, 0xAD, 0x10, 0xF0,
-0x24, 0x6D, 0xD6, 0xF5, 0xAC, 0x9D, 0xCC, 0xEF,
-0xC0, 0xF1, 0x08, 0x48, 0xA0, 0xAD, 0xAC, 0xEE,
-0xD7, 0xE7, 0xC8, 0xF2, 0xDF, 0xA0, 0x4C, 0xED,
-0xCE, 0xED, 0x2B, 0x2D, 0x68, 0xF3, 0x5C, 0xA0,
-0x0E, 0x72, 0x0F, 0x61, 0x26, 0x2B, 0x68, 0xF3,
-0x7A, 0xA0, 0x03, 0x6A, 0x4B, 0xEA, 0x6C, 0xEA,
-0x68, 0xF3, 0x5A, 0xC0, 0x00, 0x18, 0x6D, 0xCD,
-0x01, 0x6C, 0x0C, 0x6D, 0x00, 0x18, 0x24, 0xC6,
-0x10, 0x10, 0x06, 0x72, 0x16, 0x61, 0x15, 0x23,
-0x68, 0xF3, 0x7A, 0xA0, 0x02, 0x6A, 0x4B, 0xEA,
-0x6C, 0xEA, 0x01, 0x6D, 0x68, 0xF3, 0x5A, 0xC0,
-0x00, 0x18, 0x6D, 0xCD, 0x04, 0x6A, 0x68, 0xF3,
-0x5C, 0xC0, 0x30, 0xF0, 0x20, 0x6A, 0x6E, 0xF2,
-0x58, 0x9A, 0x00, 0x6D, 0xFF, 0x6C, 0xC5, 0x67,
-0x40, 0xEA, 0x05, 0x97, 0x04, 0x90, 0x03, 0x63,
-0x00, 0xEF, 0x00, 0x65, 0xFA, 0x63, 0x0B, 0x62,
-0x0A, 0xD1, 0x09, 0xD0, 0x10, 0xF0, 0x24, 0x6B,
-0xFF, 0x6A, 0xD6, 0xF5, 0x64, 0x9B, 0x4C, 0xEE,
-0x4C, 0xEF, 0x05, 0xD6, 0x04, 0xD7, 0x60, 0xA3,
-0xFF, 0xF7, 0x1F, 0x68, 0x25, 0x67, 0x4C, 0xEB,
-0x72, 0x33, 0x4C, 0xEB, 0x8C, 0xE8, 0x4C, 0xE9,
-0x34, 0x23, 0x10, 0xF0, 0x24, 0x6B, 0x36, 0xF5,
-0x6C, 0x9B, 0x00, 0x6C, 0xFF, 0x6D, 0x60, 0xA3,
-0x26, 0x6E, 0x6C, 0xEA, 0x06, 0xD2, 0x30, 0xF0,
-0x20, 0x6A, 0x6E, 0xF2, 0x58, 0x9A, 0x40, 0xEA,
-0x30, 0xF0, 0x20, 0x6A, 0xCE, 0xF2, 0x40, 0x9A,
-0x40, 0xEA, 0x01, 0x72, 0x11, 0x61, 0x30, 0xF0,
-0x20, 0x6A, 0x05, 0x96, 0x6E, 0xF2, 0x5C, 0x9A,
-0x90, 0x67, 0x01, 0x6D, 0x00, 0x6F, 0x40, 0xEA,
-0x30, 0xF0, 0x20, 0x6B, 0x2E, 0xF4, 0x6C, 0x9B,
-0x04, 0x96, 0x91, 0x67, 0xA2, 0x67, 0x40, 0xEB,
-0x30, 0xF0, 0x20, 0x6A, 0x06, 0x95, 0x6E, 0xF2,
-0x58, 0x9A, 0x00, 0x6C, 0x27, 0x6E, 0x40, 0xEA,
-0x04, 0x95, 0x91, 0x67, 0x00, 0x18, 0x62, 0xCE,
-0x15, 0x10, 0x04, 0x95, 0x91, 0x67, 0x00, 0x18,
-0x62, 0xCE, 0x30, 0xF0, 0x20, 0x6A, 0x05, 0x96,
+0xD6, 0xF3, 0x90, 0x9A, 0x10, 0x6D, 0x40, 0xA4,
+0x6C, 0xEA, 0xAD, 0xEA, 0x6C, 0xEA, 0x40, 0xC4,
+0x20, 0xE8, 0x09, 0x2A, 0x10, 0xF0, 0x24, 0x6A,
+0xD6, 0xF3, 0x70, 0x9A, 0x80, 0xA3, 0x7F, 0x6A,
+0x8C, 0xEA, 0x40, 0xC3, 0x20, 0xE8, 0x01, 0x72,
+0x1C, 0x61, 0x10, 0xF0, 0x24, 0x6A, 0xD6, 0xF3,
+0x84, 0x9A, 0xFF, 0x6A, 0x40, 0x6D, 0x60, 0xA4,
+0x4C, 0xEB, 0xAD, 0xEB, 0x4C, 0xEB, 0x60, 0xC4,
+0x10, 0xF0, 0x24, 0x6B, 0xD6, 0xF3, 0x90, 0x9B,
+0x60, 0xA4, 0x4C, 0xEB, 0xAD, 0xEB, 0x4C, 0xEB,
+0x60, 0xC4, 0x60, 0xA4, 0x80, 0x4D, 0xC0, 0x4D,
+0x4C, 0xEB, 0xAD, 0xEB, 0x4C, 0xEB, 0x60, 0xC4,
+0x20, 0xE8, 0x02, 0x72, 0x10, 0x61, 0x10, 0xF0,
+0x24, 0x6A, 0xD6, 0xF3, 0x44, 0x9A, 0xBF, 0x6B,
+0x80, 0xA2, 0x6C, 0xEC, 0x80, 0xC2, 0x10, 0xF0,
+0x24, 0x6A, 0xD6, 0xF3, 0x50, 0x9A, 0x80, 0xA2,
+0x8C, 0xEB, 0x60, 0xC2, 0x20, 0xE8, 0x03, 0x72,
+0x14, 0x61, 0x10, 0xF0, 0x24, 0x6A, 0xD6, 0xF3,
+0x84, 0x9A, 0xFF, 0x6B, 0x40, 0x6D, 0x40, 0xA4,
+0x6C, 0xEA, 0xAD, 0xEA, 0x6C, 0xEA, 0x40, 0xC4,
+0x10, 0xF0, 0x24, 0x6A, 0xD6, 0xF3, 0x90, 0x9A,
+0x40, 0xA4, 0x6C, 0xEA, 0xAD, 0xEA, 0x6C, 0xEA,
+0x40, 0xC4, 0x20, 0xE8, 0xFF, 0x63, 0x01, 0xD0,
+0x10, 0xF0, 0x24, 0x6B, 0xD6, 0xF3, 0x74, 0x9B,
+0xFF, 0x6A, 0x4C, 0xEC, 0x6D, 0xE5, 0x00, 0xA3,
+0x3F, 0x6F, 0x01, 0x74, 0x0C, 0xEF, 0x4C, 0xEE,
+0xE0, 0xC3, 0x15, 0x60, 0x07, 0x24, 0x30, 0xF0,
+0x20, 0x6C, 0x48, 0xF5, 0x84, 0xA4, 0x08, 0x6F,
+0xEC, 0xEC, 0x0D, 0x24, 0x10, 0xF0, 0x24, 0x6C,
+0xD6, 0xF3, 0xF8, 0x9C, 0xEF, 0x6C, 0xFD, 0xE5,
+0x00, 0xA7, 0x0C, 0xEC, 0x80, 0xC7, 0x80, 0xA3,
+0x40, 0x6F, 0x4C, 0xEC, 0x0F, 0x10, 0x10, 0xF0,
+0x24, 0x6C, 0xD6, 0xF3, 0xF8, 0x9C, 0x10, 0x68,
+0xFD, 0xE5, 0x80, 0xA7, 0x4C, 0xEC, 0x0D, 0xEC,
+0x4C, 0xEC, 0x80, 0xC7, 0x80, 0xA3, 0x80, 0x6F,
+0xEB, 0xEF, 0x4C, 0xEC, 0xED, 0xEC, 0x4C, 0xEC,
+0x10, 0xF0, 0x24, 0x6A, 0xD6, 0xF3, 0x5C, 0x9A,
+0x80, 0xC3, 0x80, 0xF4, 0xC0, 0x36, 0x55, 0xE5,
+0x40, 0x9D, 0x4D, 0xEE, 0xC0, 0xDD, 0x01, 0x90,
+0x01, 0x63, 0x20, 0xE8, 0xFD, 0x63, 0x05, 0x62,
+0x10, 0xF0, 0x24, 0x6A, 0xF6, 0xF3, 0x40, 0x9A,
+0xFF, 0x6B, 0x40, 0xA2, 0x6C, 0xEA, 0x52, 0x32,
+0x6C, 0xEA, 0x11, 0x2A, 0x30, 0xF0, 0x20, 0x6B,
+0x30, 0xF0, 0x20, 0x6A, 0x6E, 0xF2, 0x5C, 0x9A,
+0xA8, 0xF4, 0x86, 0xA3, 0x00, 0x6D, 0x18, 0x6E,
+0xE5, 0x67, 0x40, 0xEA, 0x30, 0xF0, 0x20, 0x6A,
+0x8E, 0xF2, 0x5C, 0x9A, 0x40, 0xEA, 0x05, 0x97,
+0x03, 0x63, 0x00, 0xEF, 0xFD, 0x63, 0x05, 0x62,
+0x04, 0xD0, 0xFF, 0x6A, 0x64, 0x67, 0x4C, 0xEB,
+0x85, 0x67, 0x02, 0x5B, 0x4C, 0xEC, 0x43, 0x60,
+0x10, 0xF0, 0x24, 0x6D, 0xF6, 0xF3, 0xA4, 0x9D,
+0xFF, 0xF7, 0x1F, 0x6E, 0x30, 0xF0, 0x20, 0x68,
+0xE0, 0xAD, 0x10, 0xF0, 0x24, 0x6D, 0xF6, 0xF3,
+0xA8, 0x9D, 0xCC, 0xEF, 0xC0, 0xF1, 0x08, 0x48,
+0xA0, 0xAD, 0xAC, 0xEE, 0xD7, 0xE7, 0xC8, 0xF2,
+0xDF, 0xA0, 0x4C, 0xED, 0xCE, 0xED, 0x2B, 0x2D,
+0x68, 0xF3, 0x5C, 0xA0, 0x0E, 0x72, 0x0F, 0x61,
+0x26, 0x2B, 0x68, 0xF3, 0x7A, 0xA0, 0x03, 0x6A,
+0x4B, 0xEA, 0x6C, 0xEA, 0x68, 0xF3, 0x5A, 0xC0,
+0x00, 0x18, 0x5E, 0xCD, 0x01, 0x6C, 0x0C, 0x6D,
+0x00, 0x18, 0x24, 0xC6, 0x10, 0x10, 0x06, 0x72,
+0x16, 0x61, 0x15, 0x23, 0x68, 0xF3, 0x7A, 0xA0,
+0x02, 0x6A, 0x4B, 0xEA, 0x6C, 0xEA, 0x01, 0x6D,
+0x68, 0xF3, 0x5A, 0xC0, 0x00, 0x18, 0x5E, 0xCD,
+0x04, 0x6A, 0x68, 0xF3, 0x5C, 0xC0, 0x30, 0xF0,
+0x20, 0x6A, 0x6E, 0xF2, 0x58, 0x9A, 0x00, 0x6D,
+0xFF, 0x6C, 0xC5, 0x67, 0x40, 0xEA, 0x05, 0x97,
+0x04, 0x90, 0x03, 0x63, 0x00, 0xEF, 0x00, 0x65,
+0xFA, 0x63, 0x0B, 0x62, 0x0A, 0xD1, 0x09, 0xD0,
+0x10, 0xF0, 0x24, 0x6B, 0xFF, 0x6A, 0xF6, 0xF3,
+0x60, 0x9B, 0x4C, 0xEE, 0x4C, 0xEF, 0x05, 0xD6,
+0x04, 0xD7, 0x60, 0xA3, 0xFF, 0xF7, 0x1F, 0x68,
+0x25, 0x67, 0x4C, 0xEB, 0x72, 0x33, 0x4C, 0xEB,
+0x8C, 0xE8, 0x4C, 0xE9, 0x34, 0x23, 0x10, 0xF0,
+0x24, 0x6B, 0x56, 0xF3, 0x68, 0x9B, 0x00, 0x6C,
+0xFF, 0x6D, 0x60, 0xA3, 0x26, 0x6E, 0x6C, 0xEA,
+0x06, 0xD2, 0x30, 0xF0, 0x20, 0x6A, 0x6E, 0xF2,
+0x58, 0x9A, 0x40, 0xEA, 0x30, 0xF0, 0x20, 0x6A,
+0xCE, 0xF2, 0x40, 0x9A, 0x40, 0xEA, 0x01, 0x72,
+0x11, 0x61, 0x30, 0xF0, 0x20, 0x6A, 0x05, 0x96,
 0x6E, 0xF2, 0x5C, 0x9A, 0x90, 0x67, 0x01, 0x6D,
 0x00, 0x6F, 0x40, 0xEA, 0x30, 0xF0, 0x20, 0x6B,
 0x2E, 0xF4, 0x6C, 0x9B, 0x04, 0x96, 0x91, 0x67,
 0xA2, 0x67, 0x40, 0xEB, 0x30, 0xF0, 0x20, 0x6A,
-0x8E, 0xF2, 0x5C, 0x9A, 0x40, 0xEA, 0x0B, 0x97,
-0x0A, 0x91, 0x09, 0x90, 0x06, 0x63, 0x00, 0xEF,
-0xFB, 0x63, 0x09, 0x62, 0x10, 0xF0, 0x24, 0x6A,
-0xD6, 0xF5, 0x50, 0x9A, 0x00, 0x6B, 0x00, 0x6E,
-0x60, 0xC2, 0x10, 0xF0, 0x24, 0x6A, 0xD6, 0xF5,
-0x78, 0x9A, 0x10, 0xF0, 0x24, 0x6A, 0xD6, 0xF5,
-0x54, 0x9A, 0x04, 0xF7, 0x10, 0x6F, 0x80, 0x6D,
-0x60, 0xDA, 0x06, 0x02, 0x04, 0xD2, 0x30, 0xF0,
-0x20, 0x6A, 0xAE, 0xF4, 0x54, 0x9A, 0x80, 0xF1,
-0x07, 0x6C, 0x40, 0xEA, 0x30, 0xF0, 0x20, 0x6A,
-0xCE, 0xF4, 0x5C, 0x9A, 0xC8, 0x6C, 0x40, 0xEA,
-0x30, 0xF0, 0x20, 0x6A, 0x49, 0xF2, 0x88, 0xA2,
-0x30, 0xF0, 0x20, 0x6A, 0x6E, 0xF4, 0x48, 0x9A,
-0x90, 0x34, 0x40, 0xEA, 0x30, 0xF0, 0x20, 0x6A,
-0x6E, 0xF4, 0x40, 0x9A, 0x03, 0x6C, 0x01, 0x6D,
-0x40, 0xEA, 0x09, 0x97, 0x05, 0x63, 0x00, 0xEF,
-0xFC, 0x63, 0x07, 0x62, 0x06, 0xD0, 0x30, 0xF0,
-0x20, 0x6A, 0x4E, 0xF2, 0x50, 0x9A, 0xFF, 0x68,
-0x8C, 0xE8, 0x04, 0x6E, 0x04, 0x04, 0x40, 0xEA,
-0x10, 0xF0, 0x24, 0x6A, 0x04, 0x93, 0xD6, 0xF5,
-0x5C, 0x9A, 0x01, 0x6C, 0x60, 0xDA, 0x10, 0xF0,
-0x24, 0x6A, 0xF6, 0xF5, 0x40, 0x9A, 0x10, 0xF0,
-0x24, 0x6B, 0xF6, 0xF5, 0x64, 0x9B, 0x0D, 0xEA,
-0x40, 0xDB, 0x30, 0xF0, 0x20, 0x6A, 0xCE, 0xF4,
-0x5C, 0x9A, 0x40, 0xEA, 0x07, 0x97, 0x06, 0x90,
-0x04, 0x63, 0x00, 0xEF, 0xF9, 0x63, 0x0D, 0x62,
-0x0C, 0xD1, 0x0B, 0xD0, 0xFF, 0x6A, 0x30, 0xF0,
-0x20, 0x68, 0x8C, 0xEA, 0x06, 0xD2, 0xFF, 0x6B,
-0x4E, 0xF2, 0x50, 0x98, 0x04, 0x01, 0xAC, 0xEB,
-0x10, 0xD6, 0xA6, 0x67, 0x07, 0xD3, 0x04, 0x6E,
-0x91, 0x67, 0x40, 0xEA, 0x06, 0x92, 0xFF, 0x6B,
-0xB1, 0x67, 0x4C, 0x34, 0x02, 0x4C, 0x6C, 0xEC,
-0x00, 0x18, 0xDC, 0xCE, 0x10, 0x95, 0x4E, 0xF2,
-0x50, 0x98, 0x04, 0x6E, 0x91, 0x67, 0x04, 0x4D,
-0x40, 0xEA, 0x06, 0x92, 0xFF, 0x6B, 0xB1, 0x67,
-0x4C, 0x32, 0x82, 0x67, 0x03, 0x4C, 0x6C, 0xEC,
-0x08, 0xD2, 0x00, 0x18, 0xDC, 0xCE, 0x10, 0x95,
-0x4E, 0xF2, 0x50, 0x98, 0x04, 0x6E, 0x91, 0x67,
-0x08, 0x4D, 0x40, 0xEA, 0x06, 0x92, 0xFF, 0x6B,
-0xB1, 0x67, 0x4C, 0x34, 0x04, 0x4C, 0x6C, 0xEC,
-0x00, 0x18, 0xDC, 0xCE, 0x10, 0x95, 0x4E, 0xF2,
-0x50, 0x98, 0x91, 0x67, 0x0C, 0x4D, 0x04, 0x6E,
-0x40, 0xEA, 0x08, 0x94, 0xFF, 0x6A, 0xB1, 0x67,
-0x05, 0x4C, 0x4C, 0xEC, 0x00, 0x18, 0xDC, 0xCE,
-0x07, 0x93, 0x48, 0x6A, 0x02, 0x73, 0x04, 0x60,
-0x07, 0x92, 0x04, 0x72, 0x05, 0x61, 0x50, 0x6A,
-0x06, 0x93, 0x6D, 0xEA, 0x7D, 0x67, 0x50, 0xC3,
-0x80, 0x6A, 0x7D, 0x67, 0x4B, 0xEA, 0x51, 0xC3,
-0x06, 0x92, 0x01, 0x68, 0x0B, 0xE8, 0x4C, 0x31,
-0xFF, 0x6C, 0x12, 0xC3, 0x13, 0xC3, 0x2C, 0xEC,
-0x04, 0x05, 0x00, 0x18, 0xDC, 0xCE, 0x7D, 0x67,
-0xFF, 0x6A, 0x81, 0x41, 0x10, 0xC3, 0x11, 0xC3,
-0x12, 0xC3, 0x13, 0xC3, 0x4C, 0xEC, 0x04, 0x05,
-0x00, 0x18, 0xDC, 0xCE, 0x10, 0xF0, 0x24, 0x6A,
-0xF6, 0xF5, 0x48, 0x9A, 0x00, 0x6B, 0x60, 0xC2,
-0x0D, 0x97, 0x0C, 0x91, 0x0B, 0x90, 0x07, 0x63,
-0x00, 0xEF, 0x00, 0x65, 0xFF, 0x6A, 0xEC, 0xEA,
-0x04, 0x72, 0x0F, 0x61, 0x40, 0xA4, 0x40, 0xC5,
-0x41, 0xA4, 0x41, 0xC5, 0x44, 0xA4, 0x42, 0xC5,
-0x45, 0xA4, 0x43, 0xC5, 0x46, 0xA4, 0x44, 0xC5,
-0x47, 0xA4, 0x45, 0xC5, 0x43, 0xA4, 0x40, 0xC6,
-0x20, 0xE8, 0x02, 0x72, 0x0E, 0x61, 0x42, 0xA4,
-0x40, 0xC5, 0x40, 0xA4, 0x41, 0xC5, 0x44, 0xA4,
-0x42, 0xC5, 0x45, 0xA4, 0x43, 0xC5, 0x46, 0xA4,
-0x44, 0xC5, 0x47, 0xA4, 0x45, 0xC5, 0x43, 0xA4,
-0x40, 0xC6, 0x20, 0xE8, 0xFF, 0x6A, 0xEC, 0xEA,
-0x04, 0x6B, 0x4E, 0xEB, 0x06, 0x2B, 0x40, 0xA5,
-0x40, 0xC4, 0x41, 0xA5, 0x62, 0xC4, 0x41, 0xC4,
-0x0C, 0x10, 0x02, 0x72, 0x0A, 0x61, 0x41, 0xA5,
-0x40, 0xC4, 0x61, 0xA5, 0x5F, 0x6A, 0x6C, 0xEA,
-0x20, 0x6B, 0x6D, 0xEA, 0x41, 0xC4, 0x40, 0xA5,
-0x42, 0xC4, 0x63, 0x44, 0xC0, 0xA3, 0x20, 0x6A,
-0xCD, 0xEA, 0x40, 0xC3, 0x42, 0xA5, 0x44, 0xC4,
-0x43, 0xA5, 0x45, 0xC4, 0x44, 0xA5, 0x46, 0xC4,
-0x45, 0xA5, 0x47, 0xC4, 0x20, 0xE8, 0x00, 0x65,
-0xF5, 0x63, 0x15, 0x62, 0x14, 0xD1, 0x13, 0xD0,
-0xFF, 0xF7, 0x1F, 0x6A, 0x24, 0x67, 0x4C, 0xE9,
-0x6F, 0x41, 0x4C, 0xEB, 0x02, 0x5B, 0x20, 0xF1,
-0x1C, 0x60, 0x30, 0xF0, 0x21, 0x6A, 0xD0, 0xF3,
-0x1C, 0x4A, 0x10, 0xD2, 0x30, 0xF0, 0x20, 0x6A,
-0x28, 0xF7, 0x4E, 0xA2, 0x30, 0xF0, 0x20, 0x68,
-0x10, 0x94, 0x11, 0xD2, 0x11, 0x96, 0x4E, 0xF2,
-0x50, 0x98, 0x30, 0xF0, 0x20, 0x6D, 0x8F, 0xF5,
-0x13, 0x4D, 0x40, 0xEA, 0x01, 0x6B, 0x6E, 0xE9,
-0x31, 0x29, 0x4E, 0xF2, 0x50, 0x98, 0x30, 0xF0,
-0x20, 0x6D, 0x07, 0x04, 0xE8, 0xF6, 0x1D, 0x4D,
-0x10, 0x6E, 0x40, 0xEA, 0x4E, 0xF2, 0x50, 0x98,
-0x30, 0xF0, 0x20, 0x6D, 0x0B, 0x04, 0x88, 0xF6,
-0x1C, 0x4D, 0x10, 0x6E, 0x40, 0xEA, 0x30, 0xF0,
-0x20, 0x6A, 0x8E, 0xF4, 0x50, 0x9A, 0x11, 0x96,
-0x00, 0x6C, 0xA4, 0x67, 0x04, 0xD1, 0x20, 0x6F,
+0x06, 0x95, 0x6E, 0xF2, 0x58, 0x9A, 0x00, 0x6C,
+0x27, 0x6E, 0x40, 0xEA, 0x04, 0x95, 0x91, 0x67,
+0x00, 0x18, 0x53, 0xCE, 0x15, 0x10, 0x04, 0x95,
+0x91, 0x67, 0x00, 0x18, 0x53, 0xCE, 0x30, 0xF0,
+0x20, 0x6A, 0x05, 0x96, 0x6E, 0xF2, 0x5C, 0x9A,
+0x90, 0x67, 0x01, 0x6D, 0x00, 0x6F, 0x40, 0xEA,
+0x30, 0xF0, 0x20, 0x6B, 0x2E, 0xF4, 0x6C, 0x9B,
+0x04, 0x96, 0x91, 0x67, 0xA2, 0x67, 0x40, 0xEB,
+0x30, 0xF0, 0x20, 0x6A, 0x8E, 0xF2, 0x5C, 0x9A,
+0x40, 0xEA, 0x0B, 0x97, 0x0A, 0x91, 0x09, 0x90,
+0x06, 0x63, 0x00, 0xEF, 0xFB, 0x63, 0x09, 0x62,
+0x10, 0xF0, 0x24, 0x6A, 0xF6, 0xF3, 0x4C, 0x9A,
+0x00, 0x6B, 0x00, 0x6E, 0x60, 0xC2, 0x10, 0xF0,
+0x24, 0x6A, 0xF6, 0xF3, 0x74, 0x9A, 0x10, 0xF0,
+0x24, 0x6A, 0xF6, 0xF3, 0x50, 0x9A, 0x04, 0xF7,
+0x10, 0x6F, 0x80, 0x6D, 0x60, 0xDA, 0x06, 0x02,
+0x04, 0xD2, 0x30, 0xF0, 0x20, 0x6A, 0xAE, 0xF4,
+0x54, 0x9A, 0x80, 0xF1, 0x07, 0x6C, 0x40, 0xEA,
+0x30, 0xF0, 0x20, 0x6A, 0xCE, 0xF4, 0x5C, 0x9A,
+0xC8, 0x6C, 0x40, 0xEA, 0x30, 0xF0, 0x20, 0x6A,
+0x49, 0xF2, 0x88, 0xA2, 0x30, 0xF0, 0x20, 0x6A,
+0x6E, 0xF4, 0x48, 0x9A, 0x90, 0x34, 0x40, 0xEA,
+0x30, 0xF0, 0x20, 0x6A, 0x6E, 0xF4, 0x40, 0x9A,
+0x03, 0x6C, 0x01, 0x6D, 0x40, 0xEA, 0x09, 0x97,
+0x05, 0x63, 0x00, 0xEF, 0xFC, 0x63, 0x07, 0x62,
+0x06, 0xD0, 0x30, 0xF0, 0x20, 0x6A, 0x4E, 0xF2,
+0x50, 0x9A, 0xFF, 0x68, 0x8C, 0xE8, 0x04, 0x6E,
+0x04, 0x04, 0x40, 0xEA, 0x10, 0xF0, 0x24, 0x6A,
+0x04, 0x93, 0xF6, 0xF3, 0x58, 0x9A, 0x01, 0x6C,
+0x60, 0xDA, 0x10, 0xF0, 0x24, 0x6A, 0xF6, 0xF3,
+0x5C, 0x9A, 0x10, 0xF0, 0x24, 0x6B, 0x16, 0xF4,
+0x60, 0x9B, 0x0D, 0xEA, 0x40, 0xDB, 0x30, 0xF0,
+0x20, 0x6A, 0xCE, 0xF4, 0x5C, 0x9A, 0x40, 0xEA,
+0x07, 0x97, 0x06, 0x90, 0x04, 0x63, 0x00, 0xEF,
+0xF9, 0x63, 0x0D, 0x62, 0x0C, 0xD1, 0x0B, 0xD0,
+0xFF, 0x6A, 0x30, 0xF0, 0x20, 0x68, 0x8C, 0xEA,
+0x06, 0xD2, 0xFF, 0x6B, 0x4E, 0xF2, 0x50, 0x98,
+0x04, 0x01, 0xAC, 0xEB, 0x10, 0xD6, 0xA6, 0x67,
+0x07, 0xD3, 0x04, 0x6E, 0x91, 0x67, 0x40, 0xEA,
+0x06, 0x92, 0xFF, 0x6B, 0xB1, 0x67, 0x4C, 0x34,
+0x02, 0x4C, 0x6C, 0xEC, 0x00, 0x18, 0xCD, 0xCE,
+0x10, 0x95, 0x4E, 0xF2, 0x50, 0x98, 0x04, 0x6E,
+0x91, 0x67, 0x04, 0x4D, 0x40, 0xEA, 0x06, 0x92,
+0xFF, 0x6B, 0xB1, 0x67, 0x4C, 0x32, 0x82, 0x67,
+0x03, 0x4C, 0x6C, 0xEC, 0x08, 0xD2, 0x00, 0x18,
+0xCD, 0xCE, 0x10, 0x95, 0x4E, 0xF2, 0x50, 0x98,
+0x04, 0x6E, 0x91, 0x67, 0x08, 0x4D, 0x40, 0xEA,
+0x06, 0x92, 0xFF, 0x6B, 0xB1, 0x67, 0x4C, 0x34,
+0x04, 0x4C, 0x6C, 0xEC, 0x00, 0x18, 0xCD, 0xCE,
+0x10, 0x95, 0x4E, 0xF2, 0x50, 0x98, 0x91, 0x67,
+0x0C, 0x4D, 0x04, 0x6E, 0x40, 0xEA, 0x08, 0x94,
+0xFF, 0x6A, 0xB1, 0x67, 0x05, 0x4C, 0x4C, 0xEC,
+0x00, 0x18, 0xCD, 0xCE, 0x07, 0x93, 0x48, 0x6A,
+0x02, 0x73, 0x04, 0x60, 0x07, 0x92, 0x04, 0x72,
+0x05, 0x61, 0x50, 0x6A, 0x06, 0x93, 0x6D, 0xEA,
+0x7D, 0x67, 0x50, 0xC3, 0x80, 0x6A, 0x7D, 0x67,
+0x4B, 0xEA, 0x51, 0xC3, 0x06, 0x92, 0x01, 0x68,
+0x0B, 0xE8, 0x4C, 0x31, 0xFF, 0x6C, 0x12, 0xC3,
+0x13, 0xC3, 0x2C, 0xEC, 0x04, 0x05, 0x00, 0x18,
+0xCD, 0xCE, 0x7D, 0x67, 0xFF, 0x6A, 0x81, 0x41,
+0x10, 0xC3, 0x11, 0xC3, 0x12, 0xC3, 0x13, 0xC3,
+0x4C, 0xEC, 0x04, 0x05, 0x00, 0x18, 0xCD, 0xCE,
+0x10, 0xF0, 0x24, 0x6A, 0x16, 0xF4, 0x44, 0x9A,
+0x00, 0x6B, 0x60, 0xC2, 0x0D, 0x97, 0x0C, 0x91,
+0x0B, 0x90, 0x07, 0x63, 0x00, 0xEF, 0x00, 0x65,
+0xFF, 0x6A, 0xEC, 0xEA, 0x04, 0x72, 0x0F, 0x61,
+0x40, 0xA4, 0x40, 0xC5, 0x41, 0xA4, 0x41, 0xC5,
+0x44, 0xA4, 0x42, 0xC5, 0x45, 0xA4, 0x43, 0xC5,
+0x46, 0xA4, 0x44, 0xC5, 0x47, 0xA4, 0x45, 0xC5,
+0x43, 0xA4, 0x40, 0xC6, 0x20, 0xE8, 0x02, 0x72,
+0x0E, 0x61, 0x42, 0xA4, 0x40, 0xC5, 0x40, 0xA4,
+0x41, 0xC5, 0x44, 0xA4, 0x42, 0xC5, 0x45, 0xA4,
+0x43, 0xC5, 0x46, 0xA4, 0x44, 0xC5, 0x47, 0xA4,
+0x45, 0xC5, 0x43, 0xA4, 0x40, 0xC6, 0x20, 0xE8,
+0xFF, 0x6A, 0xEC, 0xEA, 0x04, 0x6B, 0x4E, 0xEB,
+0x06, 0x2B, 0x40, 0xA5, 0x40, 0xC4, 0x41, 0xA5,
+0x62, 0xC4, 0x41, 0xC4, 0x0C, 0x10, 0x02, 0x72,
+0x0A, 0x61, 0x41, 0xA5, 0x40, 0xC4, 0x61, 0xA5,
+0x5F, 0x6A, 0x6C, 0xEA, 0x20, 0x6B, 0x6D, 0xEA,
+0x41, 0xC4, 0x40, 0xA5, 0x42, 0xC4, 0x63, 0x44,
+0xC0, 0xA3, 0x20, 0x6A, 0xCD, 0xEA, 0x40, 0xC3,
+0x42, 0xA5, 0x44, 0xC4, 0x43, 0xA5, 0x45, 0xC4,
+0x44, 0xA5, 0x46, 0xC4, 0x45, 0xA5, 0x47, 0xC4,
+0x20, 0xE8, 0x00, 0x65, 0xF5, 0x63, 0x15, 0x62,
+0x14, 0xD1, 0x13, 0xD0, 0xFF, 0xF7, 0x1F, 0x6A,
+0x24, 0x67, 0x4C, 0xE9, 0x6F, 0x41, 0x4C, 0xEB,
+0x02, 0x5B, 0x20, 0xF1, 0x1C, 0x60, 0x30, 0xF0,
+0x21, 0x6A, 0xD0, 0xF3, 0x1C, 0x4A, 0x10, 0xD2,
+0x30, 0xF0, 0x20, 0x6A, 0x28, 0xF7, 0x4E, 0xA2,
+0x30, 0xF0, 0x20, 0x68, 0x10, 0x94, 0x11, 0xD2,
+0x11, 0x96, 0x4E, 0xF2, 0x50, 0x98, 0x30, 0xF0,
+0x20, 0x6D, 0x8F, 0xF5, 0x13, 0x4D, 0x40, 0xEA,
+0x01, 0x6B, 0x6E, 0xE9, 0x31, 0x29, 0x4E, 0xF2,
+0x50, 0x98, 0x30, 0xF0, 0x20, 0x6D, 0x07, 0x04,
+0xE8, 0xF6, 0x1D, 0x4D, 0x10, 0x6E, 0x40, 0xEA,
+0x4E, 0xF2, 0x50, 0x98, 0x30, 0xF0, 0x20, 0x6D,
+0x0B, 0x04, 0x88, 0xF6, 0x1C, 0x4D, 0x10, 0x6E,
 0x40, 0xEA, 0x30, 0xF0, 0x20, 0x6A, 0x8E, 0xF4,
-0x40, 0x9A, 0x10, 0x95, 0x30, 0xF0, 0x21, 0x69,
-0x11, 0x97, 0x10, 0xF4, 0x1C, 0x49, 0x07, 0x04,
-0xD1, 0x67, 0x40, 0xEA, 0x30, 0xF0, 0x21, 0x6C,
-0x4E, 0xF2, 0x50, 0x98, 0x50, 0xF4, 0x1C, 0x4C,
-0xB1, 0x67, 0x29, 0x10, 0x4E, 0xF2, 0x50, 0x98,
-0x30, 0xF0, 0x20, 0x6D, 0x07, 0x04, 0x88, 0xF6,
-0x1C, 0x4D, 0x10, 0x6E, 0x40, 0xEA, 0x00, 0x6A,
-0x04, 0xD2, 0x30, 0xF0, 0x20, 0x6A, 0x8E, 0xF4,
 0x50, 0x9A, 0x11, 0x96, 0x00, 0x6C, 0xA4, 0x67,
-0x10, 0x6F, 0x40, 0xEA, 0x30, 0xF0, 0x20, 0x6A,
-0x6E, 0xF4, 0x50, 0x9A, 0x10, 0x95, 0x30, 0xF0,
-0x21, 0x69, 0x11, 0x97, 0x10, 0xF4, 0x1C, 0x49,
-0x07, 0x04, 0xD1, 0x67, 0x40, 0xEA, 0x4E, 0xF2,
-0x50, 0x98, 0x30, 0xF0, 0x21, 0x6C, 0xA7, 0x41,
-0x50, 0xF4, 0x1C, 0x4C, 0x01, 0x4D, 0x28, 0x6E,
+0x04, 0xD1, 0x20, 0x6F, 0x40, 0xEA, 0x30, 0xF0,
+0x20, 0x6A, 0x8E, 0xF4, 0x40, 0x9A, 0x10, 0x95,
+0x30, 0xF0, 0x21, 0x69, 0x11, 0x97, 0x10, 0xF4,
+0x1C, 0x49, 0x07, 0x04, 0xD1, 0x67, 0x40, 0xEA,
+0x30, 0xF0, 0x21, 0x6C, 0x4E, 0xF2, 0x50, 0x98,
+0x50, 0xF4, 0x1C, 0x4C, 0xB1, 0x67, 0x29, 0x10,
+0x4E, 0xF2, 0x50, 0x98, 0x30, 0xF0, 0x20, 0x6D,
+0x07, 0x04, 0x88, 0xF6, 0x1C, 0x4D, 0x10, 0x6E,
+0x40, 0xEA, 0x00, 0x6A, 0x04, 0xD2, 0x30, 0xF0,
+0x20, 0x6A, 0x8E, 0xF4, 0x50, 0x9A, 0x11, 0x96,
+0x00, 0x6C, 0xA4, 0x67, 0x10, 0x6F, 0x40, 0xEA,
+0x30, 0xF0, 0x20, 0x6A, 0x6E, 0xF4, 0x50, 0x9A,
+0x10, 0x95, 0x30, 0xF0, 0x21, 0x69, 0x11, 0x97,
+0x10, 0xF4, 0x1C, 0x49, 0x07, 0x04, 0xD1, 0x67,
+0x40, 0xEA, 0x4E, 0xF2, 0x50, 0x98, 0x30, 0xF0,
+0x21, 0x6C, 0xA7, 0x41, 0x50, 0xF4, 0x1C, 0x4C,
+0x01, 0x4D, 0x28, 0x6E, 0x40, 0xEA, 0x30, 0xF0,
+0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A, 0x08, 0xF5,
+0x68, 0xA2, 0xFE, 0x73, 0x14, 0x61, 0x08, 0xF5,
+0x4A, 0xA2, 0x30, 0x6B, 0x9D, 0x67, 0x6C, 0xEA,
+0x53, 0x32, 0x58, 0xC4, 0x30, 0xF0, 0x21, 0x6D,
+0x30, 0xF0, 0x20, 0x6A, 0x30, 0xF0, 0x21, 0x6C,
+0x4E, 0xF2, 0x50, 0x9A, 0x90, 0xF4, 0x04, 0x4C,
+0x50, 0xF4, 0x1C, 0x4D, 0x17, 0x10, 0xFE, 0x4B,
+0xFF, 0x6A, 0x4C, 0xEB, 0x02, 0x5B, 0x15, 0x60,
+0x30, 0xF0, 0x21, 0x6D, 0x50, 0xF4, 0x1C, 0x4D,
+0x66, 0xA5, 0x03, 0x6A, 0x30, 0xF0, 0x21, 0x6C,
+0x6C, 0xEA, 0x7D, 0x67, 0x58, 0xC3, 0x30, 0xF0,
+0x20, 0x6A, 0x4E, 0xF2, 0x50, 0x9A, 0x90, 0xF4,
+0x04, 0x4C, 0x08, 0x4D, 0x20, 0x6E, 0x40, 0xEA,
+0x0D, 0x10, 0x05, 0x6B, 0x9D, 0x67, 0x78, 0xC4,
+0x10, 0xF0, 0x24, 0x6B, 0x16, 0xF4, 0x88, 0x9B,
+0x10, 0x6D, 0x60, 0xA4, 0x4C, 0xEB, 0xAD, 0xEB,
+0x4C, 0xEB, 0x60, 0xC4, 0x30, 0xF0, 0x20, 0x6A,
+0xEF, 0xF5, 0x10, 0x4A, 0x30, 0xF0, 0x21, 0x6B,
+0xA7, 0x42, 0x90, 0xF4, 0x04, 0x4B, 0x19, 0x4D,
+0x01, 0x6C, 0xE0, 0xA2, 0xC0, 0xA3, 0x01, 0x4A,
+0x01, 0x4B, 0xEE, 0xEE, 0x01, 0x5E, 0xD8, 0x67,
+0xCB, 0xEE, 0xAA, 0xEA, 0xCC, 0xEC, 0xF5, 0x61,
+0x01, 0x74, 0x0C, 0x61, 0x10, 0xF0, 0x24, 0x6A,
+0x16, 0xF4, 0x68, 0x9A, 0xFF, 0x6C, 0x08, 0x6D,
+0x40, 0xA3, 0x8C, 0xEA, 0xAD, 0xEA, 0x8C, 0xEA,
+0x40, 0xC3, 0x61, 0x10, 0x7D, 0x67, 0x58, 0xA3,
+0x04, 0x5A, 0x4F, 0x60, 0x30, 0xF0, 0x20, 0x68,
+0xCF, 0xF4, 0x00, 0x48, 0x40, 0xF1, 0x74, 0xA0,
+0x40, 0xF1, 0x50, 0xC0, 0x02, 0x6A, 0x4B, 0xEA,
+0x6C, 0xEA, 0x40, 0xF1, 0x54, 0xC0, 0x30, 0xF0,
+0x20, 0x6A, 0x4E, 0xF2, 0x50, 0x9A, 0x30, 0xF0,
+0x20, 0x6C, 0x30, 0xF0, 0x21, 0x6D, 0xEF, 0xF5,
+0x10, 0x4C, 0x90, 0xF4, 0x04, 0x4D, 0x20, 0x6E,
 0x40, 0xEA, 0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1,
-0x08, 0x4A, 0x08, 0xF5, 0x68, 0xA2, 0xFE, 0x73,
-0x14, 0x61, 0x08, 0xF5, 0x4A, 0xA2, 0x30, 0x6B,
-0x9D, 0x67, 0x6C, 0xEA, 0x53, 0x32, 0x58, 0xC4,
-0x30, 0xF0, 0x21, 0x6D, 0x30, 0xF0, 0x20, 0x6A,
-0x30, 0xF0, 0x21, 0x6C, 0x4E, 0xF2, 0x50, 0x9A,
-0x90, 0xF4, 0x04, 0x4C, 0x50, 0xF4, 0x1C, 0x4D,
-0x17, 0x10, 0xFE, 0x4B, 0xFF, 0x6A, 0x4C, 0xEB,
-0x02, 0x5B, 0x15, 0x60, 0x30, 0xF0, 0x21, 0x6D,
-0x50, 0xF4, 0x1C, 0x4D, 0x66, 0xA5, 0x03, 0x6A,
-0x30, 0xF0, 0x21, 0x6C, 0x6C, 0xEA, 0x7D, 0x67,
-0x58, 0xC3, 0x30, 0xF0, 0x20, 0x6A, 0x4E, 0xF2,
-0x50, 0x9A, 0x90, 0xF4, 0x04, 0x4C, 0x08, 0x4D,
-0x20, 0x6E, 0x40, 0xEA, 0x0D, 0x10, 0x05, 0x6B,
-0x9D, 0x67, 0x78, 0xC4, 0x10, 0xF0, 0x24, 0x6B,
-0xF6, 0xF5, 0x8C, 0x9B, 0x10, 0x6D, 0x60, 0xA4,
-0x4C, 0xEB, 0xAD, 0xEB, 0x4C, 0xEB, 0x60, 0xC4,
-0x30, 0xF0, 0x20, 0x6A, 0xEF, 0xF5, 0x10, 0x4A,
-0x30, 0xF0, 0x21, 0x6B, 0xA7, 0x42, 0x90, 0xF4,
-0x04, 0x4B, 0x19, 0x4D, 0x01, 0x6C, 0xE0, 0xA2,
-0xC0, 0xA3, 0x01, 0x4A, 0x01, 0x4B, 0xEE, 0xEE,
-0x01, 0x5E, 0xD8, 0x67, 0xCB, 0xEE, 0xAA, 0xEA,
-0xCC, 0xEC, 0xF5, 0x61, 0x01, 0x74, 0x0C, 0x61,
-0x10, 0xF0, 0x24, 0x6A, 0xF6, 0xF5, 0x6C, 0x9A,
-0xFF, 0x6C, 0x08, 0x6D, 0x40, 0xA3, 0x8C, 0xEA,
-0xAD, 0xEA, 0x8C, 0xEA, 0x40, 0xC3, 0x61, 0x10,
-0x7D, 0x67, 0x58, 0xA3, 0x04, 0x5A, 0x4F, 0x60,
-0x30, 0xF0, 0x20, 0x68, 0xCF, 0xF4, 0x00, 0x48,
-0x40, 0xF1, 0x74, 0xA0, 0x40, 0xF1, 0x50, 0xC0,
-0x02, 0x6A, 0x4B, 0xEA, 0x6C, 0xEA, 0x40, 0xF1,
-0x54, 0xC0, 0x30, 0xF0, 0x20, 0x6A, 0x4E, 0xF2,
-0x50, 0x9A, 0x30, 0xF0, 0x20, 0x6C, 0x30, 0xF0,
-0x21, 0x6D, 0xEF, 0xF5, 0x10, 0x4C, 0x90, 0xF4,
-0x04, 0x4D, 0x20, 0x6E, 0x40, 0xEA, 0x30, 0xF0,
-0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A, 0x10, 0xF0,
-0x24, 0x6C, 0x80, 0xF0, 0x6C, 0x9A, 0x36, 0xF5,
-0x90, 0x9C, 0x8D, 0xEB, 0x80, 0xF0, 0x6C, 0xDA,
-0x40, 0xF1, 0x50, 0xA0, 0x01, 0x72, 0x0B, 0x60,
-0x05, 0x22, 0x02, 0x72, 0x0D, 0x60, 0x03, 0x72,
-0x10, 0x60, 0x2B, 0x10, 0x30, 0xF0, 0x20, 0x6C,
-0x2F, 0xF6, 0x00, 0x4C, 0x0E, 0x10, 0x30, 0xF0,
-0x20, 0x6C, 0x2F, 0xF6, 0x08, 0x4C, 0x09, 0x10,
-0x30, 0xF0, 0x20, 0x6C, 0x2F, 0xF6, 0x10, 0x4C,
-0x04, 0x10, 0x30, 0xF0, 0x20, 0x6C, 0x2F, 0xF6,
-0x18, 0x4C, 0x40, 0xF1, 0xF1, 0xA0, 0x30, 0xF0,
-0x20, 0x6D, 0x08, 0xF7, 0x0D, 0x4D, 0x06, 0x06,
-0x00, 0x18, 0x3F, 0xCF, 0x0E, 0x10, 0x30, 0xF0,
-0x20, 0x6A, 0xCF, 0xF4, 0x00, 0x4A, 0x05, 0x6B,
-0x40, 0xF1, 0x94, 0xA2, 0x40, 0xF1, 0x70, 0xC2,
-0x02, 0x6B, 0x6B, 0xEB, 0x8C, 0xEB, 0x40, 0xF1,
-0x74, 0xC2, 0x15, 0x97, 0x14, 0x91, 0x13, 0x90,
-0x0B, 0x63, 0x00, 0xEF, 0xF9, 0x63, 0x0D, 0x62,
-0x0C, 0xD1, 0x0B, 0xD0, 0xFF, 0x6A, 0x4C, 0xEE,
-0x08, 0xD6, 0x08, 0x97, 0x4C, 0xED, 0x05, 0x00,
-0x09, 0xD5, 0x04, 0x06, 0xB0, 0x67, 0x24, 0x67,
-0x00, 0x18, 0x2D, 0xCF, 0x09, 0x92, 0x10, 0x2A,
-0x60, 0xA0, 0xFF, 0x6C, 0x8E, 0xEB, 0x07, 0x2B,
-0x01, 0x4A, 0x8C, 0xEA, 0x06, 0x72, 0x60, 0xC0,
-0x01, 0x48, 0xF6, 0x61, 0x05, 0x10, 0x04, 0x03,
-0x49, 0xE3, 0x64, 0xA2, 0x01, 0x4B, 0x64, 0xC2,
-0x08, 0x97, 0x91, 0x67, 0x05, 0x05, 0x04, 0x06,
-0x00, 0x18, 0x3F, 0xCF, 0x0D, 0x97, 0x0C, 0x91,
-0x0B, 0x90, 0x07, 0x63, 0x00, 0xEF, 0x00, 0x65,
-0xFB, 0x63, 0x09, 0x62, 0x08, 0xD1, 0x07, 0xD0,
-0x30, 0xF0, 0x20, 0x6A, 0x4E, 0xF2, 0x50, 0x9A,
-0x24, 0x67, 0xFF, 0x68, 0xAC, 0xE8, 0x04, 0x04,
-0xB1, 0x67, 0x03, 0x6E, 0x40, 0xEA, 0x24, 0x28,
-0x5D, 0x67, 0x70, 0xA2, 0xFF, 0x6A, 0x4E, 0xEB,
-0x00, 0x6A, 0x11, 0x2B, 0x5D, 0x67, 0x70, 0xC2,
-0x71, 0xA2, 0xFF, 0x6A, 0x4E, 0xEB, 0x01, 0x6A,
-0x0A, 0x2B, 0x5D, 0x67, 0x71, 0xC2, 0x52, 0xA2,
-0xFF, 0x6B, 0x6E, 0xEA, 0x03, 0x2A, 0x7D, 0x67,
-0x52, 0xC3, 0x06, 0x10, 0x02, 0x6A, 0x04, 0x03,
-0x49, 0xE3, 0x60, 0xA2, 0x01, 0x4B, 0x60, 0xC2,
-0x30, 0xF0, 0x20, 0x6A, 0x4E, 0xF2, 0x50, 0x9A,
-0x91, 0x67, 0x04, 0x05, 0x03, 0x6E, 0x40, 0xEA,
-0x09, 0x97, 0x08, 0x91, 0x07, 0x90, 0x05, 0x63,
-0x00, 0xEF, 0x00, 0x65, 0xF9, 0x63, 0x0D, 0x62,
-0x0C, 0xD1, 0x0B, 0xD0, 0x30, 0xF0, 0x20, 0x69,
-0x4E, 0xF2, 0x4C, 0x99, 0xFF, 0x68, 0xAC, 0xE8,
-0x0E, 0xD4, 0x00, 0x6D, 0x05, 0x04, 0x08, 0x6E,
-0x40, 0xEA, 0x4E, 0xF2, 0x4C, 0x99, 0x07, 0x04,
-0x00, 0x6D, 0x08, 0x6E, 0x40, 0xEA, 0x0E, 0x94,
-0x05, 0x05, 0x00, 0xF0, 0x11, 0x06, 0xF0, 0x67,
-0x00, 0x18, 0x2D, 0xCF, 0x30, 0xF0, 0x20, 0x6C,
-0xCF, 0xF5, 0x13, 0x4C, 0x07, 0x05, 0x04, 0x06,
-0xF0, 0x67, 0x00, 0x18, 0x2D, 0xCF, 0x00, 0x6B,
-0x07, 0x6A, 0x9D, 0x67, 0x75, 0xE4, 0x85, 0x67,
-0x9B, 0xA4, 0x20, 0xF0, 0xA3, 0xA5, 0xAE, 0xEC,
-0x08, 0x2C, 0xFF, 0x4A, 0x00, 0xF6, 0x40, 0x32,
-0x00, 0xF6, 0x43, 0x32, 0x81, 0x42, 0xFF, 0x4B,
-0xF0, 0x2C, 0x04, 0x03, 0x49, 0xE3, 0x6C, 0xA2,
-0x44, 0xA2, 0x0D, 0x97, 0x0C, 0x91, 0x4B, 0xE3,
-0x01, 0x52, 0x0B, 0x90, 0x58, 0x67, 0x01, 0x6B,
-0x6E, 0xEA, 0x07, 0x63, 0x00, 0xEF, 0x00, 0x65,
-0xFB, 0x63, 0x09, 0x62, 0x08, 0xD1, 0x07, 0xD0,
-0x30, 0xF0, 0x20, 0x68, 0x4E, 0xF2, 0x4C, 0x98,
-0x04, 0x01, 0x0A, 0xD4, 0x00, 0x6D, 0x91, 0x67,
-0x08, 0x6E, 0x40, 0xEA, 0x4E, 0xF2, 0x4C, 0x98,
-0x05, 0x04, 0x00, 0x6D, 0x08, 0x6E, 0x30, 0xF0,
-0x20, 0x68, 0x40, 0xEA, 0x4E, 0xF2, 0x50, 0x98,
-0x30, 0xF0, 0x20, 0x6D, 0x91, 0x67, 0xCF, 0xF5,
-0x13, 0x4D, 0x03, 0x6E, 0x40, 0xEA, 0x4E, 0xF2,
-0x50, 0x98, 0x0A, 0x95, 0x05, 0x04, 0x03, 0x6E,
-0x40, 0xEA, 0x5D, 0x67, 0x72, 0xA2, 0x56, 0xA2,
-0x4E, 0xEB, 0x02, 0x6A, 0x0D, 0x2B, 0x9D, 0x67,
-0x55, 0xA4, 0x71, 0xA4, 0x4E, 0xEB, 0x01, 0x6A,
-0x07, 0x2B, 0x5D, 0x67, 0x70, 0xA2, 0x54, 0xA2,
-0x6E, 0xEA, 0xFF, 0x4A, 0xC0, 0xF7, 0x43, 0x32,
-0x04, 0x03, 0x49, 0xE3, 0x60, 0xA2, 0x44, 0xA2,
-0x09, 0x97, 0x08, 0x91, 0x4B, 0xE3, 0x01, 0x52,
-0x07, 0x90, 0x58, 0x67, 0x01, 0x6B, 0x6E, 0xEA,
-0x05, 0x63, 0x00, 0xEF, 0xF5, 0x63, 0x15, 0x62,
-0x14, 0xD1, 0x13, 0xD0, 0xFF, 0xF7, 0x1F, 0x6A,
-0x8C, 0xEA, 0x10, 0xD2, 0x30, 0xF0, 0x20, 0x6A,
-0xFF, 0x69, 0x4E, 0xF2, 0x4C, 0x9A, 0x2C, 0xED,
-0x30, 0xF0, 0x21, 0x6C, 0x11, 0xD5, 0xB0, 0xF4,
-0x04, 0x4C, 0x00, 0x6D, 0x80, 0x6E, 0x40, 0xEA,
-0x10, 0xF0, 0x24, 0x6A, 0xD6, 0xF5, 0x4C, 0x9A,
-0x60, 0xAA, 0xE1, 0xF7, 0x1F, 0x6A, 0x6C, 0xEA,
-0x30, 0xF0, 0x20, 0x6B, 0x49, 0xF2, 0x06, 0xA3,
-0x10, 0x93, 0x01, 0xE2, 0x01, 0x73, 0x1C, 0x30,
-0x12, 0x61, 0x30, 0xF0, 0x21, 0x6B, 0x90, 0xF3,
-0x5C, 0xA3, 0x0D, 0x2A, 0x10, 0xF0, 0x24, 0x6A,
-0xF6, 0xF5, 0x98, 0x9A, 0x91, 0xE0, 0x40, 0xA4,
-0x2C, 0xEA, 0x08, 0x4A, 0x2C, 0xEA, 0x40, 0xC4,
-0x01, 0x6A, 0x90, 0xF3, 0x5C, 0xC3, 0x10, 0xF0,
-0x24, 0x6A, 0xB6, 0xF5, 0x5C, 0x9A, 0x41, 0x6B,
-0x87, 0x40, 0x49, 0xE0, 0x60, 0xC2, 0x11, 0x95,
-0x29, 0x4C, 0x80, 0x18, 0xD6, 0x0D, 0x30, 0xF0,
-0x21, 0x6A, 0x01, 0x6B, 0xB0, 0xF4, 0x64, 0xC2,
-0xB0, 0xF4, 0x04, 0x4A, 0x03, 0x6B, 0x61, 0xC2,
-0x00, 0x6B, 0x62, 0xC2, 0x5F, 0x6B, 0x63, 0xC2,
-0x30, 0xF0, 0x20, 0x6A, 0xC8, 0xF6, 0x50, 0xA2,
-0x87, 0x40, 0x55, 0x4C, 0xFE, 0x72, 0xFE, 0x6D,
-0x01, 0x60, 0x02, 0x6D, 0x10, 0xF0, 0x24, 0x6A,
-0xF6, 0xF5, 0x78, 0x9A, 0x69, 0xE4, 0xA0, 0xC2,
-0xA0, 0xA2, 0x30, 0xF0, 0x21, 0x6A, 0xB0, 0xF4,
-0x04, 0x4A, 0xA4, 0xC2, 0x10, 0x95, 0x01, 0x4C,
-0x01, 0x75, 0x0A, 0x61, 0x6D, 0xE4, 0x03, 0x6D,
-0xA0, 0xC3, 0x10, 0xF0, 0x24, 0x6B, 0xF6, 0xF5,
-0xDC, 0x9B, 0x01, 0x6B, 0xD9, 0xE4, 0x09, 0x10,
+0x08, 0x4A, 0x10, 0xF0, 0x24, 0x6C, 0x80, 0xF0,
+0x6C, 0x9A, 0x56, 0xF3, 0x8C, 0x9C, 0x8D, 0xEB,
+0x80, 0xF0, 0x6C, 0xDA, 0x40, 0xF1, 0x50, 0xA0,
+0x01, 0x72, 0x0B, 0x60, 0x05, 0x22, 0x02, 0x72,
+0x0D, 0x60, 0x03, 0x72, 0x10, 0x60, 0x2B, 0x10,
+0x30, 0xF0, 0x20, 0x6C, 0x2F, 0xF6, 0x00, 0x4C,
+0x0E, 0x10, 0x30, 0xF0, 0x20, 0x6C, 0x2F, 0xF6,
+0x08, 0x4C, 0x09, 0x10, 0x30, 0xF0, 0x20, 0x6C,
+0x2F, 0xF6, 0x10, 0x4C, 0x04, 0x10, 0x30, 0xF0,
+0x20, 0x6C, 0x2F, 0xF6, 0x18, 0x4C, 0x40, 0xF1,
+0xF1, 0xA0, 0x30, 0xF0, 0x20, 0x6D, 0x08, 0xF7,
+0x0D, 0x4D, 0x06, 0x06, 0x00, 0x18, 0x30, 0xCF,
+0x0E, 0x10, 0x30, 0xF0, 0x20, 0x6A, 0xCF, 0xF4,
+0x00, 0x4A, 0x05, 0x6B, 0x40, 0xF1, 0x94, 0xA2,
+0x40, 0xF1, 0x70, 0xC2, 0x02, 0x6B, 0x6B, 0xEB,
+0x8C, 0xEB, 0x40, 0xF1, 0x74, 0xC2, 0x15, 0x97,
+0x14, 0x91, 0x13, 0x90, 0x0B, 0x63, 0x00, 0xEF,
+0xF9, 0x63, 0x0D, 0x62, 0x0C, 0xD1, 0x0B, 0xD0,
+0xFF, 0x6A, 0x4C, 0xEE, 0x08, 0xD6, 0x08, 0x97,
+0x4C, 0xED, 0x05, 0x00, 0x09, 0xD5, 0x04, 0x06,
+0xB0, 0x67, 0x24, 0x67, 0x00, 0x18, 0x1E, 0xCF,
+0x09, 0x92, 0x10, 0x2A, 0x60, 0xA0, 0xFF, 0x6C,
+0x8E, 0xEB, 0x07, 0x2B, 0x01, 0x4A, 0x8C, 0xEA,
+0x06, 0x72, 0x60, 0xC0, 0x01, 0x48, 0xF6, 0x61,
+0x05, 0x10, 0x04, 0x03, 0x49, 0xE3, 0x64, 0xA2,
+0x01, 0x4B, 0x64, 0xC2, 0x08, 0x97, 0x91, 0x67,
+0x05, 0x05, 0x04, 0x06, 0x00, 0x18, 0x30, 0xCF,
+0x0D, 0x97, 0x0C, 0x91, 0x0B, 0x90, 0x07, 0x63,
+0x00, 0xEF, 0x00, 0x65, 0xFB, 0x63, 0x09, 0x62,
+0x08, 0xD1, 0x07, 0xD0, 0x30, 0xF0, 0x20, 0x6A,
+0x4E, 0xF2, 0x50, 0x9A, 0x24, 0x67, 0xFF, 0x68,
+0xAC, 0xE8, 0x04, 0x04, 0xB1, 0x67, 0x03, 0x6E,
+0x40, 0xEA, 0x24, 0x28, 0x5D, 0x67, 0x70, 0xA2,
+0xFF, 0x6A, 0x4E, 0xEB, 0x00, 0x6A, 0x11, 0x2B,
+0x5D, 0x67, 0x70, 0xC2, 0x71, 0xA2, 0xFF, 0x6A,
+0x4E, 0xEB, 0x01, 0x6A, 0x0A, 0x2B, 0x5D, 0x67,
+0x71, 0xC2, 0x52, 0xA2, 0xFF, 0x6B, 0x6E, 0xEA,
+0x03, 0x2A, 0x7D, 0x67, 0x52, 0xC3, 0x06, 0x10,
+0x02, 0x6A, 0x04, 0x03, 0x49, 0xE3, 0x60, 0xA2,
+0x01, 0x4B, 0x60, 0xC2, 0x30, 0xF0, 0x20, 0x6A,
+0x4E, 0xF2, 0x50, 0x9A, 0x91, 0x67, 0x04, 0x05,
+0x03, 0x6E, 0x40, 0xEA, 0x09, 0x97, 0x08, 0x91,
+0x07, 0x90, 0x05, 0x63, 0x00, 0xEF, 0x00, 0x65,
+0xF9, 0x63, 0x0D, 0x62, 0x0C, 0xD1, 0x0B, 0xD0,
+0x30, 0xF0, 0x20, 0x69, 0x4E, 0xF2, 0x4C, 0x99,
+0xFF, 0x68, 0xAC, 0xE8, 0x0E, 0xD4, 0x00, 0x6D,
+0x05, 0x04, 0x08, 0x6E, 0x40, 0xEA, 0x4E, 0xF2,
+0x4C, 0x99, 0x07, 0x04, 0x00, 0x6D, 0x08, 0x6E,
+0x40, 0xEA, 0x0E, 0x94, 0x05, 0x05, 0x00, 0xF0,
+0x11, 0x06, 0xF0, 0x67, 0x00, 0x18, 0x1E, 0xCF,
+0x30, 0xF0, 0x20, 0x6C, 0xCF, 0xF5, 0x13, 0x4C,
+0x07, 0x05, 0x04, 0x06, 0xF0, 0x67, 0x00, 0x18,
+0x1E, 0xCF, 0x00, 0x6B, 0x07, 0x6A, 0x9D, 0x67,
+0x75, 0xE4, 0x85, 0x67, 0x9B, 0xA4, 0x20, 0xF0,
+0xA3, 0xA5, 0xAE, 0xEC, 0x08, 0x2C, 0xFF, 0x4A,
+0x00, 0xF6, 0x40, 0x32, 0x00, 0xF6, 0x43, 0x32,
+0x81, 0x42, 0xFF, 0x4B, 0xF0, 0x2C, 0x04, 0x03,
+0x49, 0xE3, 0x6C, 0xA2, 0x44, 0xA2, 0x0D, 0x97,
+0x0C, 0x91, 0x4B, 0xE3, 0x01, 0x52, 0x0B, 0x90,
+0x58, 0x67, 0x01, 0x6B, 0x6E, 0xEA, 0x07, 0x63,
+0x00, 0xEF, 0x00, 0x65, 0xFB, 0x63, 0x09, 0x62,
+0x08, 0xD1, 0x07, 0xD0, 0x30, 0xF0, 0x20, 0x68,
+0x4E, 0xF2, 0x4C, 0x98, 0x04, 0x01, 0x0A, 0xD4,
+0x00, 0x6D, 0x91, 0x67, 0x08, 0x6E, 0x40, 0xEA,
+0x4E, 0xF2, 0x4C, 0x98, 0x05, 0x04, 0x00, 0x6D,
+0x08, 0x6E, 0x30, 0xF0, 0x20, 0x68, 0x40, 0xEA,
+0x4E, 0xF2, 0x50, 0x98, 0x30, 0xF0, 0x20, 0x6D,
+0x91, 0x67, 0xCF, 0xF5, 0x13, 0x4D, 0x03, 0x6E,
+0x40, 0xEA, 0x4E, 0xF2, 0x50, 0x98, 0x0A, 0x95,
+0x05, 0x04, 0x03, 0x6E, 0x40, 0xEA, 0x5D, 0x67,
+0x72, 0xA2, 0x56, 0xA2, 0x4E, 0xEB, 0x02, 0x6A,
+0x0D, 0x2B, 0x9D, 0x67, 0x55, 0xA4, 0x71, 0xA4,
+0x4E, 0xEB, 0x01, 0x6A, 0x07, 0x2B, 0x5D, 0x67,
+0x70, 0xA2, 0x54, 0xA2, 0x6E, 0xEA, 0xFF, 0x4A,
+0xC0, 0xF7, 0x43, 0x32, 0x04, 0x03, 0x49, 0xE3,
+0x60, 0xA2, 0x44, 0xA2, 0x09, 0x97, 0x08, 0x91,
+0x4B, 0xE3, 0x01, 0x52, 0x07, 0x90, 0x58, 0x67,
+0x01, 0x6B, 0x6E, 0xEA, 0x05, 0x63, 0x00, 0xEF,
+0xF5, 0x63, 0x15, 0x62, 0x14, 0xD1, 0x13, 0xD0,
+0xFF, 0xF7, 0x1F, 0x6A, 0x8C, 0xEA, 0x10, 0xD2,
+0x30, 0xF0, 0x20, 0x6A, 0xFF, 0x69, 0x4E, 0xF2,
+0x4C, 0x9A, 0x2C, 0xED, 0x30, 0xF0, 0x21, 0x6C,
+0x11, 0xD5, 0xB0, 0xF4, 0x04, 0x4C, 0x00, 0x6D,
+0x80, 0x6E, 0x40, 0xEA, 0x10, 0xF0, 0x24, 0x6A,
+0xF6, 0xF3, 0x48, 0x9A, 0x60, 0xAA, 0xE1, 0xF7,
+0x1F, 0x6A, 0x6C, 0xEA, 0x30, 0xF0, 0x20, 0x6B,
+0x49, 0xF2, 0x06, 0xA3, 0x10, 0x93, 0x01, 0xE2,
+0x01, 0x73, 0x1C, 0x30, 0x12, 0x61, 0x30, 0xF0,
+0x21, 0x6B, 0x90, 0xF3, 0x5C, 0xA3, 0x0D, 0x2A,
+0x10, 0xF0, 0x24, 0x6A, 0x16, 0xF4, 0x94, 0x9A,
+0x91, 0xE0, 0x40, 0xA4, 0x2C, 0xEA, 0x08, 0x4A,
+0x2C, 0xEA, 0x40, 0xC4, 0x01, 0x6A, 0x90, 0xF3,
+0x5C, 0xC3, 0x10, 0xF0, 0x24, 0x6A, 0xD6, 0xF3,
+0x58, 0x9A, 0x41, 0x6B, 0x87, 0x40, 0x49, 0xE0,
+0x60, 0xC2, 0x11, 0x95, 0x29, 0x4C, 0x80, 0x18,
+0xE9, 0x0D, 0x30, 0xF0, 0x21, 0x6A, 0x01, 0x6B,
+0xB0, 0xF4, 0x64, 0xC2, 0xB0, 0xF4, 0x04, 0x4A,
+0x03, 0x6B, 0x61, 0xC2, 0x00, 0x6B, 0x62, 0xC2,
+0x5F, 0x6B, 0x63, 0xC2, 0x30, 0xF0, 0x20, 0x6A,
+0xC8, 0xF6, 0x50, 0xA2, 0x87, 0x40, 0x55, 0x4C,
+0xFE, 0x72, 0xFE, 0x6D, 0x01, 0x60, 0x02, 0x6D,
+0x10, 0xF0, 0x24, 0x6A, 0x16, 0xF4, 0x74, 0x9A,
+0x69, 0xE4, 0xA0, 0xC2, 0xA0, 0xA2, 0x30, 0xF0,
+0x21, 0x6A, 0xB0, 0xF4, 0x04, 0x4A, 0xA4, 0xC2,
+0x10, 0x95, 0x01, 0x4C, 0x01, 0x75, 0x0A, 0x61,
 0x6D, 0xE4, 0x03, 0x6D, 0xA0, 0xC3, 0x10, 0xF0,
-0x24, 0x6B, 0xF6, 0xF5, 0xDC, 0x9B, 0x02, 0x6B,
-0xD9, 0xE4, 0x60, 0xC6, 0x66, 0xC2, 0xA5, 0xC2,
-0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A,
-0x08, 0xF5, 0x68, 0xA2, 0x02, 0x4C, 0xFE, 0x73,
-0x33, 0x61, 0x10, 0xF0, 0x24, 0x6B, 0x16, 0xF6,
-0xC0, 0x9B, 0x30, 0xF0, 0x20, 0x6D, 0xCF, 0xF4,
-0x00, 0x4D, 0xD9, 0xE4, 0x60, 0xA6, 0x40, 0xF1,
-0x30, 0xA5, 0xFF, 0x6F, 0xEC, 0xEB, 0x30, 0x31,
-0x2D, 0xEB, 0xEC, 0xEB, 0x60, 0xC6, 0x30, 0xF0,
-0x21, 0x6B, 0xB0, 0xF4, 0x04, 0x4B, 0x40, 0xF1,
-0xB0, 0xA5, 0xC6, 0xA3, 0xB0, 0x35, 0xCD, 0xED,
-0xA6, 0xC3, 0x10, 0xF0, 0x24, 0x6D, 0xF6, 0xF5,
-0xB8, 0x9D, 0x08, 0xF5, 0xCB, 0xA2, 0xB5, 0xE4,
-0xC0, 0xC5, 0x10, 0xF0, 0x24, 0x6D, 0xF6, 0xF5,
-0xBC, 0x9D, 0xB1, 0xE4, 0x08, 0xF5, 0xAC, 0xA2,
-0xA0, 0xC4, 0x08, 0xF5, 0x8B, 0xA2, 0x08, 0xF5,
-0x4C, 0xA2, 0x87, 0xC3, 0x48, 0xC3, 0x13, 0x10,
-0x10, 0xF0, 0x24, 0x6A, 0xF6, 0xF5, 0x58, 0x9A,
-0x00, 0x6B, 0x49, 0xE4, 0x60, 0xC2, 0x10, 0xF0,
-0x24, 0x6A, 0xF6, 0xF5, 0x5C, 0x9A, 0x51, 0xE4,
-0x30, 0xF0, 0x21, 0x6A, 0xB0, 0xF4, 0x04, 0x4A,
-0x60, 0xC4, 0x67, 0xC2, 0x68, 0xC2, 0x10, 0xF0,
-0x24, 0x6B, 0xF6, 0xF5, 0x94, 0x9B, 0x30, 0xF0,
-0x20, 0x6A, 0xC8, 0xF6, 0x15, 0x4A, 0x30, 0xF0,
-0x21, 0x6B, 0xA7, 0x42, 0x91, 0xE0, 0xB0, 0xF4,
-0x0D, 0x4B, 0x01, 0x4D, 0xC0, 0xA2, 0xC0, 0xC4,
-0xC0, 0xA2, 0x01, 0x4A, 0xAA, 0xEA, 0xC0, 0xC3,
-0x01, 0x4C, 0x01, 0x4B, 0xF7, 0x61, 0x00, 0x6A,
-0x7D, 0x67, 0x51, 0xE3, 0x30, 0xF0, 0x20, 0x6B,
-0xC0, 0xF1, 0x08, 0x4B, 0x4D, 0xE3, 0xC8, 0xF4,
-0x64, 0xA3, 0x01, 0x4A, 0x10, 0x72, 0x78, 0xC4,
-0xF3, 0x61, 0x00, 0x69, 0x10, 0xF0, 0x24, 0x6A,
-0x10, 0xF0, 0x24, 0x6B, 0xF6, 0xF5, 0x50, 0x9A,
-0x16, 0xF6, 0x64, 0x9B, 0x49, 0xE0, 0x6D, 0xE0,
-0x00, 0x6C, 0x80, 0xC2, 0x01, 0x4A, 0x6A, 0xEA,
-0xFB, 0x61, 0x30, 0xF0, 0x20, 0x6A, 0xCE, 0xF4,
-0x5C, 0x9A, 0x64, 0x6C, 0x40, 0xEA, 0x10, 0xF0,
-0x24, 0x6A, 0x16, 0xF6, 0x68, 0x9A, 0xFB, 0x6A,
-0x10, 0x6F, 0x80, 0xA3, 0x8C, 0xEA, 0x40, 0xC3,
-0x10, 0xF0, 0x24, 0x6A, 0xD6, 0xF5, 0x4C, 0x9A,
-0xFF, 0xF7, 0x1F, 0x6B, 0xC0, 0xAA, 0x30, 0xF0,
-0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A, 0x69, 0xF0,
-0xBF, 0xA2, 0x69, 0xF0, 0x9E, 0xA2, 0xE1, 0xF7,
-0x1F, 0x6A, 0xCC, 0xEA, 0xA9, 0xE2, 0x50, 0x32,
-0x6C, 0xEA, 0xB3, 0xE4, 0x04, 0xD2, 0x30, 0xF0,
-0x20, 0x6A, 0x9C, 0x34, 0x8E, 0xF4, 0x50, 0x9A,
-0x58, 0x4C, 0x00, 0x6D, 0x6C, 0xEC, 0x63, 0x6E,
-0x40, 0xEA, 0x10, 0x95, 0x01, 0x75, 0x05, 0x61,
-0x30, 0xF0, 0x20, 0x6A, 0x6E, 0xF4, 0x5C, 0x9A,
-0x04, 0x10, 0x30, 0xF0, 0x20, 0x6A, 0x6E, 0xF4,
-0x58, 0x9A, 0x30, 0xF0, 0x21, 0x6D, 0x06, 0x04,
-0xB0, 0xF4, 0x04, 0x4D, 0x0A, 0x06, 0x10, 0x6F,
-0x40, 0xEA, 0x01, 0x49, 0xFF, 0x6A, 0x4C, 0xE9,
-0x10, 0xF0, 0x24, 0x6A, 0x16, 0xF6, 0x48, 0x9A,
-0x60, 0xA2, 0x04, 0x6A, 0x6C, 0xEA, 0x03, 0x22,
-0x0A, 0x71, 0xA0, 0x61, 0x02, 0x10, 0x0A, 0x59,
-0x0B, 0x61, 0x10, 0xF0, 0x24, 0x6A, 0x16, 0xF6,
-0x6C, 0x9A, 0xFF, 0x6C, 0x20, 0x6D, 0x40, 0xA3,
-0x8C, 0xEA, 0xAD, 0xEA, 0x8C, 0xEA, 0x40, 0xC3,
-0x10, 0xF0, 0x24, 0x6B, 0xF6, 0xF5, 0x70, 0x9B,
-0x0A, 0x02, 0x61, 0xE0, 0x0E, 0x03, 0x80, 0xA2,
-0x01, 0x4A, 0x6A, 0xEA, 0x80, 0xC0, 0x01, 0x48,
-0xFA, 0x61, 0x10, 0x92, 0x01, 0x72, 0x07, 0x61,
-0x30, 0xF0, 0x20, 0x6A, 0x49, 0xF2, 0x86, 0xA2,
-0x20, 0x6D, 0x80, 0x18, 0xE1, 0x09, 0x10, 0xF0,
-0x24, 0x6A, 0x16, 0xF5, 0x58, 0x9A, 0x02, 0xF0,
-0x00, 0x6B, 0x40, 0x9A, 0x6C, 0xEA, 0x29, 0x22,
-0x10, 0xF0, 0x24, 0x6A, 0x36, 0xF5, 0x4C, 0x9A,
-0xFF, 0x69, 0x30, 0xF0, 0x20, 0x68, 0x40, 0xA2,
-0x00, 0x6C, 0xFF, 0x6D, 0x4C, 0xE9, 0x6E, 0xF2,
-0x58, 0x98, 0x1D, 0x6E, 0x40, 0xEA, 0x30, 0xF0,
-0x20, 0x6A, 0xCE, 0xF2, 0x40, 0x9A, 0x40, 0xEA,
-0x01, 0x72, 0x1F, 0x61, 0x30, 0xF0, 0x20, 0x6B,
-0x30, 0xF0, 0x20, 0x6A, 0x49, 0xF2, 0x86, 0xA3,
-0x6E, 0xF2, 0x5C, 0x9A, 0x01, 0x6D, 0x18, 0x6E,
-0x00, 0x6F, 0x40, 0xEA, 0x6E, 0xF2, 0x58, 0x98,
-0x00, 0x6C, 0xB1, 0x67, 0x1E, 0x6E, 0x40, 0xEA,
-0x0C, 0x10, 0x30, 0xF0, 0x20, 0x6A, 0x30, 0xF0,
-0x20, 0x6B, 0x6E, 0xF2, 0x5C, 0x9A, 0x49, 0xF2,
-0x86, 0xA3, 0x01, 0x6D, 0x18, 0x6E, 0x00, 0x6F,
-0x40, 0xEA, 0x30, 0xF0, 0x20, 0x6A, 0x48, 0xF5,
-0x44, 0xA2, 0x03, 0x2A, 0x01, 0x6C, 0x00, 0x18,
-0x00, 0xC9, 0x30, 0xF0, 0x20, 0x6A, 0x8E, 0xF2,
-0x5C, 0x9A, 0x40, 0xEA, 0x15, 0x97, 0x14, 0x91,
-0x13, 0x90, 0x0B, 0x63, 0x00, 0xEF, 0x00, 0x65,
-0xFC, 0x63, 0x07, 0x62, 0x06, 0xD1, 0x05, 0xD0,
-0xFF, 0xF7, 0x1F, 0x69, 0x8C, 0xE9, 0xFF, 0x68,
-0xAC, 0xE8, 0x00, 0x18, 0xC0, 0xCE, 0x91, 0x67,
-0x00, 0x18, 0x52, 0xCF, 0x91, 0x67, 0xB0, 0x67,
-0x00, 0x18, 0x73, 0xD0, 0x07, 0x97, 0x06, 0x91,
-0x05, 0x90, 0x04, 0x63, 0x00, 0xEF, 0x00, 0x65,
-0xFB, 0x63, 0x09, 0x62, 0x08, 0xD1, 0x07, 0xD0,
-0x10, 0xF0, 0x24, 0x6A, 0x16, 0xF6, 0x68, 0x9A,
-0xFF, 0x6E, 0x19, 0x6F, 0x40, 0xA3, 0xEB, 0xEF,
-0x08, 0x4C, 0xCC, 0xEA, 0xEC, 0xEA, 0x08, 0x6F,
-0xED, 0xEA, 0xCC, 0xEA, 0x40, 0xC3, 0x30, 0xF0,
-0x20, 0x6A, 0x4E, 0xF2, 0x4C, 0x9A, 0xA5, 0xE4,
-0x30, 0xF0, 0x20, 0x6C, 0x00, 0x6D, 0x84, 0x6E,
-0x30, 0xF0, 0x20, 0x68, 0xC8, 0xF6, 0x0C, 0x4C,
-0x40, 0xEA, 0xCE, 0xF4, 0x4C, 0x98, 0x81, 0x41,
-0x40, 0xEA, 0x30, 0xF0, 0x20, 0x6B, 0xC0, 0xF1,
-0x08, 0x4B, 0x08, 0xF5, 0x45, 0xC3, 0xCE, 0xF4,
-0x4C, 0x98, 0x04, 0xD3, 0x84, 0x41, 0x40, 0xEA,
-0x04, 0x93, 0x85, 0x41, 0x08, 0xF5, 0x48, 0xC3,
+0x24, 0x6B, 0x16, 0xF4, 0xD8, 0x9B, 0x01, 0x6B,
+0xD9, 0xE4, 0x09, 0x10, 0x6D, 0xE4, 0x03, 0x6D,
+0xA0, 0xC3, 0x10, 0xF0, 0x24, 0x6B, 0x16, 0xF4,
+0xD8, 0x9B, 0x02, 0x6B, 0xD9, 0xE4, 0x60, 0xC6,
+0x66, 0xC2, 0xA5, 0xC2, 0x30, 0xF0, 0x20, 0x6A,
+0xC0, 0xF1, 0x08, 0x4A, 0x08, 0xF5, 0x68, 0xA2,
+0x02, 0x4C, 0xFE, 0x73, 0x33, 0x61, 0x10, 0xF0,
+0x24, 0x6B, 0x16, 0xF4, 0xDC, 0x9B, 0x30, 0xF0,
+0x20, 0x6D, 0xCF, 0xF4, 0x00, 0x4D, 0xD9, 0xE4,
+0x60, 0xA6, 0x40, 0xF1, 0x30, 0xA5, 0xFF, 0x6F,
+0xEC, 0xEB, 0x30, 0x31, 0x2D, 0xEB, 0xEC, 0xEB,
+0x60, 0xC6, 0x30, 0xF0, 0x21, 0x6B, 0xB0, 0xF4,
+0x04, 0x4B, 0x40, 0xF1, 0xB0, 0xA5, 0xC6, 0xA3,
+0xB0, 0x35, 0xCD, 0xED, 0xA6, 0xC3, 0x10, 0xF0,
+0x24, 0x6D, 0x16, 0xF4, 0xB4, 0x9D, 0x08, 0xF5,
+0xCB, 0xA2, 0xB5, 0xE4, 0xC0, 0xC5, 0x10, 0xF0,
+0x24, 0x6D, 0x16, 0xF4, 0xB8, 0x9D, 0xB1, 0xE4,
+0x08, 0xF5, 0xAC, 0xA2, 0xA0, 0xC4, 0x08, 0xF5,
+0x8B, 0xA2, 0x08, 0xF5, 0x4C, 0xA2, 0x87, 0xC3,
+0x48, 0xC3, 0x13, 0x10, 0x10, 0xF0, 0x24, 0x6A,
+0x16, 0xF4, 0x54, 0x9A, 0x00, 0x6B, 0x49, 0xE4,
+0x60, 0xC2, 0x10, 0xF0, 0x24, 0x6A, 0x16, 0xF4,
+0x58, 0x9A, 0x51, 0xE4, 0x30, 0xF0, 0x21, 0x6A,
+0xB0, 0xF4, 0x04, 0x4A, 0x60, 0xC4, 0x67, 0xC2,
+0x68, 0xC2, 0x10, 0xF0, 0x24, 0x6B, 0x16, 0xF4,
+0x90, 0x9B, 0x30, 0xF0, 0x20, 0x6A, 0xC8, 0xF6,
+0x15, 0x4A, 0x30, 0xF0, 0x21, 0x6B, 0xA7, 0x42,
+0x91, 0xE0, 0xB0, 0xF4, 0x0D, 0x4B, 0x01, 0x4D,
+0xC0, 0xA2, 0xC0, 0xC4, 0xC0, 0xA2, 0x01, 0x4A,
+0xAA, 0xEA, 0xC0, 0xC3, 0x01, 0x4C, 0x01, 0x4B,
+0xF7, 0x61, 0x00, 0x6A, 0x7D, 0x67, 0x51, 0xE3,
+0x30, 0xF0, 0x20, 0x6B, 0xC0, 0xF1, 0x08, 0x4B,
+0x4D, 0xE3, 0xC8, 0xF4, 0x64, 0xA3, 0x01, 0x4A,
+0x10, 0x72, 0x78, 0xC4, 0xF3, 0x61, 0x00, 0x69,
+0x10, 0xF0, 0x24, 0x6A, 0x10, 0xF0, 0x24, 0x6B,
+0x16, 0xF4, 0x4C, 0x9A, 0x36, 0xF4, 0x60, 0x9B,
+0x49, 0xE0, 0x6D, 0xE0, 0x00, 0x6C, 0x80, 0xC2,
+0x01, 0x4A, 0x6A, 0xEA, 0xFB, 0x61, 0x30, 0xF0,
+0x20, 0x6A, 0xCE, 0xF4, 0x5C, 0x9A, 0x64, 0x6C,
+0x40, 0xEA, 0x10, 0xF0, 0x24, 0x6A, 0x36, 0xF4,
+0x64, 0x9A, 0xFB, 0x6A, 0x10, 0x6F, 0x80, 0xA3,
+0x8C, 0xEA, 0x40, 0xC3, 0x10, 0xF0, 0x24, 0x6A,
+0xF6, 0xF3, 0x48, 0x9A, 0xFF, 0xF7, 0x1F, 0x6B,
+0xC0, 0xAA, 0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1,
+0x08, 0x4A, 0x69, 0xF0, 0xBF, 0xA2, 0x69, 0xF0,
+0x9E, 0xA2, 0xE1, 0xF7, 0x1F, 0x6A, 0xCC, 0xEA,
+0xA9, 0xE2, 0x50, 0x32, 0x6C, 0xEA, 0xB3, 0xE4,
+0x04, 0xD2, 0x30, 0xF0, 0x20, 0x6A, 0x9C, 0x34,
+0x8E, 0xF4, 0x50, 0x9A, 0x58, 0x4C, 0x00, 0x6D,
+0x6C, 0xEC, 0x63, 0x6E, 0x40, 0xEA, 0x10, 0x95,
+0x01, 0x75, 0x05, 0x61, 0x30, 0xF0, 0x20, 0x6A,
+0x6E, 0xF4, 0x5C, 0x9A, 0x04, 0x10, 0x30, 0xF0,
+0x20, 0x6A, 0x6E, 0xF4, 0x58, 0x9A, 0x30, 0xF0,
+0x21, 0x6D, 0x06, 0x04, 0xB0, 0xF4, 0x04, 0x4D,
+0x0A, 0x06, 0x10, 0x6F, 0x40, 0xEA, 0x01, 0x49,
+0xFF, 0x6A, 0x4C, 0xE9, 0x10, 0xF0, 0x24, 0x6A,
+0x36, 0xF4, 0x44, 0x9A, 0x60, 0xA2, 0x04, 0x6A,
+0x6C, 0xEA, 0x03, 0x22, 0x0A, 0x71, 0xA0, 0x61,
+0x02, 0x10, 0x0A, 0x59, 0x0B, 0x61, 0x10, 0xF0,
+0x24, 0x6A, 0x36, 0xF4, 0x68, 0x9A, 0xFF, 0x6C,
+0x20, 0x6D, 0x40, 0xA3, 0x8C, 0xEA, 0xAD, 0xEA,
+0x8C, 0xEA, 0x40, 0xC3, 0x10, 0xF0, 0x24, 0x6B,
+0x16, 0xF4, 0x6C, 0x9B, 0x0A, 0x02, 0x61, 0xE0,
+0x0E, 0x03, 0x80, 0xA2, 0x01, 0x4A, 0x6A, 0xEA,
+0x80, 0xC0, 0x01, 0x48, 0xFA, 0x61, 0x10, 0x92,
+0x01, 0x72, 0x07, 0x61, 0x30, 0xF0, 0x20, 0x6A,
+0x49, 0xF2, 0x86, 0xA2, 0x20, 0x6D, 0x80, 0x18,
+0xF4, 0x09, 0x10, 0xF0, 0x24, 0x6A, 0x36, 0xF3,
+0x54, 0x9A, 0x02, 0xF0, 0x00, 0x6B, 0x40, 0x9A,
+0x6C, 0xEA, 0x29, 0x22, 0x10, 0xF0, 0x24, 0x6A,
+0x56, 0xF3, 0x48, 0x9A, 0xFF, 0x69, 0x30, 0xF0,
+0x20, 0x68, 0x40, 0xA2, 0x00, 0x6C, 0xFF, 0x6D,
+0x4C, 0xE9, 0x6E, 0xF2, 0x58, 0x98, 0x1D, 0x6E,
+0x40, 0xEA, 0x30, 0xF0, 0x20, 0x6A, 0xCE, 0xF2,
+0x40, 0x9A, 0x40, 0xEA, 0x01, 0x72, 0x1F, 0x61,
+0x30, 0xF0, 0x20, 0x6B, 0x30, 0xF0, 0x20, 0x6A,
+0x49, 0xF2, 0x86, 0xA3, 0x6E, 0xF2, 0x5C, 0x9A,
+0x01, 0x6D, 0x18, 0x6E, 0x00, 0x6F, 0x40, 0xEA,
+0x6E, 0xF2, 0x58, 0x98, 0x00, 0x6C, 0xB1, 0x67,
+0x1E, 0x6E, 0x40, 0xEA, 0x0C, 0x10, 0x30, 0xF0,
+0x20, 0x6A, 0x30, 0xF0, 0x20, 0x6B, 0x6E, 0xF2,
+0x5C, 0x9A, 0x49, 0xF2, 0x86, 0xA3, 0x01, 0x6D,
+0x18, 0x6E, 0x00, 0x6F, 0x40, 0xEA, 0x30, 0xF0,
+0x20, 0x6A, 0x48, 0xF5, 0x44, 0xA2, 0x03, 0x2A,
+0x01, 0x6C, 0x00, 0x18, 0x02, 0xC9, 0x30, 0xF0,
+0x20, 0x6A, 0x8E, 0xF2, 0x5C, 0x9A, 0x40, 0xEA,
+0x15, 0x97, 0x14, 0x91, 0x13, 0x90, 0x0B, 0x63,
+0x00, 0xEF, 0x00, 0x65, 0xFC, 0x63, 0x07, 0x62,
+0x06, 0xD1, 0x05, 0xD0, 0xFF, 0xF7, 0x1F, 0x69,
+0x8C, 0xE9, 0xFF, 0x68, 0xAC, 0xE8, 0x00, 0x18,
+0xB1, 0xCE, 0x91, 0x67, 0x00, 0x18, 0x43, 0xCF,
+0x91, 0x67, 0xB0, 0x67, 0x00, 0x18, 0x64, 0xD0,
+0x07, 0x97, 0x06, 0x91, 0x05, 0x90, 0x04, 0x63,
+0x00, 0xEF, 0x00, 0x65, 0xFB, 0x63, 0x09, 0x62,
+0x08, 0xD1, 0x07, 0xD0, 0x10, 0xF0, 0x24, 0x6A,
+0x36, 0xF4, 0x64, 0x9A, 0xFF, 0x6E, 0x19, 0x6F,
+0x40, 0xA3, 0xEB, 0xEF, 0x08, 0x4C, 0xCC, 0xEA,
+0xEC, 0xEA, 0x08, 0x6F, 0xED, 0xEA, 0xCC, 0xEA,
+0x40, 0xC3, 0x30, 0xF0, 0x20, 0x6A, 0x4E, 0xF2,
+0x4C, 0x9A, 0xA5, 0xE4, 0x30, 0xF0, 0x20, 0x6C,
+0x00, 0x6D, 0x84, 0x6E, 0x30, 0xF0, 0x20, 0x68,
+0xC8, 0xF6, 0x0C, 0x4C, 0x40, 0xEA, 0xCE, 0xF4,
+0x4C, 0x98, 0x81, 0x41, 0x40, 0xEA, 0x30, 0xF0,
+0x20, 0x6B, 0xC0, 0xF1, 0x08, 0x4B, 0x08, 0xF5,
+0x45, 0xC3, 0xCE, 0xF4, 0x4C, 0x98, 0x04, 0xD3,
+0x84, 0x41, 0x40, 0xEA, 0x04, 0x93, 0x85, 0x41,
+0x08, 0xF5, 0x48, 0xC3, 0xCE, 0xF4, 0x4C, 0x98,
+0x40, 0xEA, 0x04, 0x93, 0x86, 0x41, 0x08, 0xF5,
+0x49, 0xC3, 0xCE, 0xF4, 0x4C, 0x98, 0x40, 0xEA,
+0x04, 0x93, 0x87, 0x41, 0x08, 0xF5, 0x4A, 0xC3,
 0xCE, 0xF4, 0x4C, 0x98, 0x40, 0xEA, 0x04, 0x93,
-0x86, 0x41, 0x08, 0xF5, 0x49, 0xC3, 0xCE, 0xF4,
-0x4C, 0x98, 0x40, 0xEA, 0x04, 0x93, 0x87, 0x41,
-0x08, 0xF5, 0x4A, 0xC3, 0xCE, 0xF4, 0x4C, 0x98,
-0x40, 0xEA, 0x04, 0x93, 0x87, 0x41, 0x01, 0x4C,
-0x08, 0xF5, 0x4B, 0xC3, 0xCE, 0xF4, 0x4C, 0x98,
-0x30, 0xF0, 0x20, 0x68, 0xC8, 0xF6, 0x15, 0x48,
-0x40, 0xEA, 0x04, 0x93, 0x08, 0xF5, 0x4C, 0xC3,
-0x47, 0x41, 0x30, 0xF0, 0x20, 0x6B, 0x02, 0x4A,
-0xC8, 0xF6, 0x1D, 0x4B, 0x05, 0xD2, 0x04, 0xD3,
-0x30, 0xF0, 0x20, 0x6A, 0xCE, 0xF4, 0x4C, 0x9A,
-0x05, 0x94, 0x40, 0xEA, 0x40, 0xC0, 0x04, 0x93,
-0x05, 0x92, 0x01, 0x48, 0x6A, 0xE8, 0x01, 0x4A,
-0x05, 0xD2, 0xF2, 0x61, 0x47, 0x41, 0x2A, 0x4A,
-0x30, 0xF0, 0x20, 0x68, 0x04, 0xD2, 0xE8, 0xF6,
-0x1D, 0x48, 0x30, 0xF0, 0x20, 0x6B, 0xCE, 0xF4,
-0x4C, 0x9B, 0x04, 0x94, 0x40, 0xEA, 0x40, 0xC0,
-0x04, 0x92, 0x30, 0xF0, 0x20, 0x6B, 0x01, 0x48,
-0x08, 0xF7, 0x0D, 0x4B, 0x01, 0x4A, 0x6A, 0xE8,
-0x04, 0xD2, 0xEF, 0x61, 0x30, 0xF0, 0x20, 0x6B,
-0xCE, 0xF4, 0x4C, 0x9B, 0x87, 0x41, 0x5A, 0x4C,
-0x30, 0xF0, 0x20, 0x68, 0x40, 0xEA, 0xC0, 0xF1,
-0x08, 0x48, 0x30, 0xF0, 0x20, 0x6B, 0x68, 0xF5,
-0x45, 0xC0, 0xCE, 0xF4, 0x4C, 0x9B, 0x87, 0x41,
-0x5B, 0x4C, 0x40, 0xEA, 0x68, 0xF5, 0x46, 0xC0,
-0x68, 0xF5, 0x45, 0xA0, 0x40, 0x32, 0x04, 0xD2,
-0x04, 0x93, 0x68, 0xF5, 0x46, 0xA0, 0x00, 0x68,
-0x4D, 0xEB, 0x04, 0xD3, 0x12, 0x10, 0x30, 0xF0,
-0x20, 0x6A, 0x87, 0x41, 0xCE, 0xF4, 0x4C, 0x9A,
-0x5C, 0x4C, 0x11, 0xE4, 0x40, 0xEA, 0x30, 0xF0,
-0x20, 0x6B, 0xCF, 0xF4, 0x00, 0x4B, 0x6D, 0xE0,
-0xC0, 0xF0, 0x53, 0xC3, 0x01, 0x48, 0xFF, 0x6A,
-0x4C, 0xE8, 0x04, 0x92, 0x43, 0xE8, 0xEB, 0x61,
-0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A,
-0x08, 0xF5, 0x69, 0xA2, 0x08, 0xF5, 0x8A, 0xA2,
-0x60, 0x33, 0x8D, 0xEB, 0x08, 0x6C, 0x6C, 0xEC,
-0x0A, 0x24, 0x10, 0xF0, 0x24, 0x6A, 0x16, 0xF6,
-0x50, 0x9A, 0x03, 0x6B, 0x01, 0x6C, 0x60, 0xC2,
-0x80, 0x18, 0x96, 0x0B, 0x1E, 0x10, 0x07, 0x6C,
-0x6C, 0xEC, 0xAF, 0x44, 0xFF, 0xF7, 0x1F, 0x6E,
-0xCC, 0xED, 0x02, 0x5D, 0x16, 0x60, 0x30, 0x6D,
-0x6C, 0xED, 0xB3, 0x35, 0x88, 0xF5, 0xBE, 0xC2,
-0x00, 0x6D, 0x00, 0x18, 0x5A, 0xD1, 0x10, 0xF0,
-0x24, 0x6A, 0x16, 0xF6, 0x68, 0x9A, 0xFF, 0x6C,
-0x19, 0x6D, 0x40, 0xA3, 0xAB, 0xED, 0x8C, 0xEA,
-0xAC, 0xEA, 0x10, 0x6D, 0xAD, 0xEA, 0x8C, 0xEA,
-0x40, 0xC3, 0x09, 0x97, 0x08, 0x91, 0x07, 0x90,
-0x00, 0x6A, 0x05, 0x63, 0x00, 0xEF, 0x00, 0x65,
-0xFC, 0x63, 0x07, 0x62, 0x06, 0xD1, 0x05, 0xD0,
-0xFF, 0x6A, 0x8C, 0xEA, 0x3E, 0x22, 0x10, 0xF0,
-0x24, 0x6A, 0xD6, 0xF5, 0x0C, 0x4A, 0x40, 0x9A,
-0x30, 0xF0, 0x20, 0x68, 0xC0, 0xF1, 0x08, 0x48,
-0xA0, 0xAA, 0x69, 0xF0, 0x5F, 0xA0, 0xE1, 0xF7,
-0x1F, 0x6B, 0x6C, 0xED, 0x55, 0xE5, 0x10, 0xF0,
-0x24, 0x6A, 0xF6, 0xF5, 0x58, 0x9A, 0xBC, 0x35,
-0x30, 0xF0, 0x20, 0x6C, 0x40, 0x6E, 0x88, 0xF6,
-0x0C, 0x4C, 0x55, 0xE5, 0x30, 0xF0, 0x20, 0x69,
-0x00, 0x18, 0xBE, 0xD6, 0x6E, 0xF4, 0x40, 0x99,
-0x00, 0x6D, 0x03, 0x6C, 0x40, 0xEA, 0x10, 0xF0,
-0x24, 0x6A, 0xD6, 0xF5, 0x0C, 0x4A, 0x40, 0x9A,
-0xE1, 0xF7, 0x1F, 0x6B, 0x80, 0xAA, 0x89, 0xF0,
-0x40, 0xA0, 0x6C, 0xEC, 0x51, 0xE4, 0x30, 0xF0,
-0x20, 0x6A, 0x6E, 0xF4, 0x48, 0x9A, 0xFF, 0xF7,
-0x1F, 0x6B, 0x90, 0x34, 0x6C, 0xEC, 0x40, 0xEA,
-0x6E, 0xF4, 0x40, 0x99, 0x03, 0x6C, 0x01, 0x6D,
-0x40, 0xEA, 0x07, 0x97, 0x06, 0x91, 0x05, 0x90,
-0x04, 0x63, 0x00, 0xEF, 0xFB, 0x63, 0x09, 0x62,
-0x08, 0xD1, 0x07, 0xD0, 0x30, 0xF0, 0x20, 0x6B,
-0x30, 0xF0, 0x20, 0x6A, 0x6E, 0xF5, 0x58, 0x9A,
-0x4F, 0xF7, 0x95, 0xA3, 0x40, 0xEA, 0x01, 0x72,
-0x62, 0x61, 0x10, 0xF0, 0x24, 0x6A, 0x16, 0xF5,
-0x58, 0x9A, 0xFF, 0x69, 0xFF, 0x6C, 0x40, 0x9A,
-0x10, 0xF0, 0x24, 0x6A, 0x36, 0xF5, 0x4C, 0x9A,
-0xA4, 0x67, 0x26, 0x6E, 0x40, 0xA2, 0x00, 0x68,
-0x4C, 0xE9, 0x30, 0xF0, 0x20, 0x6A, 0x6E, 0xF2,
-0x58, 0x9A, 0x40, 0xEA, 0x30, 0xF0, 0x20, 0x6A,
-0xCE, 0xF2, 0x40, 0x9A, 0x40, 0xEA, 0x01, 0x72,
-0x0D, 0x61, 0x30, 0xF0, 0x20, 0x6B, 0x30, 0xF0,
-0x20, 0x6A, 0x6E, 0xF2, 0x5C, 0x9A, 0x69, 0xF2,
-0x83, 0xA3, 0xF0, 0x67, 0x01, 0x6D, 0x08, 0x6E,
-0x40, 0xEA, 0x02, 0x67, 0x30, 0xF0, 0x20, 0x6A,
-0x6E, 0xF2, 0x58, 0x9A, 0xB1, 0x67, 0x00, 0x6C,
-0x26, 0x6E, 0x40, 0xEA, 0x10, 0xF0, 0x24, 0x6A,
-0x36, 0xF6, 0x50, 0x9A, 0xFF, 0x69, 0x49, 0xE0,
-0x80, 0xA2, 0x10, 0xF0, 0x24, 0x6A, 0xB6, 0xF5,
-0x5C, 0x9A, 0x2C, 0xEC, 0x49, 0xE0, 0xA0, 0xA2,
-0x10, 0xF0, 0x24, 0x6A, 0x36, 0xF6, 0x54, 0x9A,
-0x2C, 0xED, 0x49, 0xE0, 0xC0, 0xA2, 0x2C, 0xEE,
-0x80, 0x18, 0x4F, 0x09, 0x87, 0x40, 0x29, 0x4C,
-0x00, 0x6D, 0x04, 0xD2, 0x80, 0x18, 0xD6, 0x0D,
-0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A,
-0x69, 0xF0, 0x74, 0xA2, 0x02, 0x73, 0x06, 0x61,
-0x04, 0x95, 0x89, 0xF0, 0x9B, 0xA2, 0x2C, 0xED,
-0x80, 0x18, 0xE1, 0x09, 0x30, 0xF0, 0x20, 0x6A,
-0x8E, 0xF2, 0x5C, 0x9A, 0x40, 0xEA, 0x09, 0x97,
-0x08, 0x91, 0x07, 0x90, 0x05, 0x63, 0x00, 0xEF,
+0x87, 0x41, 0x01, 0x4C, 0x08, 0xF5, 0x4B, 0xC3,
+0xCE, 0xF4, 0x4C, 0x98, 0x30, 0xF0, 0x20, 0x68,
+0xC8, 0xF6, 0x15, 0x48, 0x40, 0xEA, 0x04, 0x93,
+0x08, 0xF5, 0x4C, 0xC3, 0x47, 0x41, 0x30, 0xF0,
+0x20, 0x6B, 0x02, 0x4A, 0xC8, 0xF6, 0x1D, 0x4B,
+0x05, 0xD2, 0x04, 0xD3, 0x30, 0xF0, 0x20, 0x6A,
+0xCE, 0xF4, 0x4C, 0x9A, 0x05, 0x94, 0x40, 0xEA,
+0x40, 0xC0, 0x04, 0x93, 0x05, 0x92, 0x01, 0x48,
+0x6A, 0xE8, 0x01, 0x4A, 0x05, 0xD2, 0xF2, 0x61,
+0x47, 0x41, 0x2A, 0x4A, 0x30, 0xF0, 0x20, 0x68,
+0x04, 0xD2, 0xE8, 0xF6, 0x1D, 0x48, 0x30, 0xF0,
+0x20, 0x6B, 0xCE, 0xF4, 0x4C, 0x9B, 0x04, 0x94,
+0x40, 0xEA, 0x40, 0xC0, 0x04, 0x92, 0x30, 0xF0,
+0x20, 0x6B, 0x01, 0x48, 0x08, 0xF7, 0x0D, 0x4B,
+0x01, 0x4A, 0x6A, 0xE8, 0x04, 0xD2, 0xEF, 0x61,
+0x30, 0xF0, 0x20, 0x6B, 0xCE, 0xF4, 0x4C, 0x9B,
+0x87, 0x41, 0x5A, 0x4C, 0x30, 0xF0, 0x20, 0x68,
+0x40, 0xEA, 0xC0, 0xF1, 0x08, 0x48, 0x30, 0xF0,
+0x20, 0x6B, 0x68, 0xF5, 0x45, 0xC0, 0xCE, 0xF4,
+0x4C, 0x9B, 0x87, 0x41, 0x5B, 0x4C, 0x40, 0xEA,
+0x68, 0xF5, 0x46, 0xC0, 0x68, 0xF5, 0x45, 0xA0,
+0x40, 0x32, 0x04, 0xD2, 0x04, 0x93, 0x68, 0xF5,
+0x46, 0xA0, 0x00, 0x68, 0x4D, 0xEB, 0x04, 0xD3,
+0x12, 0x10, 0x30, 0xF0, 0x20, 0x6A, 0x87, 0x41,
+0xCE, 0xF4, 0x4C, 0x9A, 0x5C, 0x4C, 0x11, 0xE4,
+0x40, 0xEA, 0x30, 0xF0, 0x20, 0x6B, 0xCF, 0xF4,
+0x00, 0x4B, 0x6D, 0xE0, 0xC0, 0xF0, 0x53, 0xC3,
+0x01, 0x48, 0xFF, 0x6A, 0x4C, 0xE8, 0x04, 0x92,
+0x43, 0xE8, 0xEB, 0x61, 0x30, 0xF0, 0x20, 0x6A,
+0xC0, 0xF1, 0x08, 0x4A, 0x08, 0xF5, 0x69, 0xA2,
+0x08, 0xF5, 0x8A, 0xA2, 0x60, 0x33, 0x8D, 0xEB,
+0x08, 0x6C, 0x6C, 0xEC, 0x0A, 0x24, 0x10, 0xF0,
+0x24, 0x6A, 0x36, 0xF4, 0x4C, 0x9A, 0x03, 0x6B,
+0x01, 0x6C, 0x60, 0xC2, 0x80, 0x18, 0xA9, 0x0B,
+0x1E, 0x10, 0x07, 0x6C, 0x6C, 0xEC, 0xAF, 0x44,
+0xFF, 0xF7, 0x1F, 0x6E, 0xCC, 0xED, 0x02, 0x5D,
+0x16, 0x60, 0x30, 0x6D, 0x6C, 0xED, 0xB3, 0x35,
+0x88, 0xF5, 0xBE, 0xC2, 0x00, 0x6D, 0x00, 0x18,
+0x4B, 0xD1, 0x10, 0xF0, 0x24, 0x6A, 0x36, 0xF4,
+0x64, 0x9A, 0xFF, 0x6C, 0x19, 0x6D, 0x40, 0xA3,
+0xAB, 0xED, 0x8C, 0xEA, 0xAC, 0xEA, 0x10, 0x6D,
+0xAD, 0xEA, 0x8C, 0xEA, 0x40, 0xC3, 0x09, 0x97,
+0x08, 0x91, 0x07, 0x90, 0x00, 0x6A, 0x05, 0x63,
+0x00, 0xEF, 0x00, 0x65, 0xFC, 0x63, 0x07, 0x62,
+0x06, 0xD1, 0x05, 0xD0, 0xFF, 0x6A, 0x8C, 0xEA,
+0x3E, 0x22, 0x10, 0xF0, 0x24, 0x6A, 0xF6, 0xF3,
+0x08, 0x4A, 0x40, 0x9A, 0x30, 0xF0, 0x20, 0x68,
+0xC0, 0xF1, 0x08, 0x48, 0xA0, 0xAA, 0x69, 0xF0,
+0x5F, 0xA0, 0xE1, 0xF7, 0x1F, 0x6B, 0x6C, 0xED,
+0x55, 0xE5, 0x10, 0xF0, 0x24, 0x6A, 0x16, 0xF4,
+0x54, 0x9A, 0xBC, 0x35, 0x30, 0xF0, 0x20, 0x6C,
+0x40, 0x6E, 0x88, 0xF6, 0x0C, 0x4C, 0x55, 0xE5,
+0x30, 0xF0, 0x20, 0x69, 0x00, 0x18, 0x74, 0xD6,
+0x6E, 0xF4, 0x40, 0x99, 0x00, 0x6D, 0x03, 0x6C,
+0x40, 0xEA, 0x10, 0xF0, 0x24, 0x6A, 0xF6, 0xF3,
+0x08, 0x4A, 0x40, 0x9A, 0xE1, 0xF7, 0x1F, 0x6B,
+0x80, 0xAA, 0x89, 0xF0, 0x40, 0xA0, 0x6C, 0xEC,
+0x51, 0xE4, 0x30, 0xF0, 0x20, 0x6A, 0x6E, 0xF4,
+0x48, 0x9A, 0xFF, 0xF7, 0x1F, 0x6B, 0x90, 0x34,
+0x6C, 0xEC, 0x40, 0xEA, 0x6E, 0xF4, 0x40, 0x99,
+0x03, 0x6C, 0x01, 0x6D, 0x40, 0xEA, 0x07, 0x97,
+0x06, 0x91, 0x05, 0x90, 0x04, 0x63, 0x00, 0xEF,
 0xFD, 0x63, 0x05, 0x62, 0x30, 0xF0, 0x20, 0x6A,
 0x4E, 0xF2, 0x50, 0x9A, 0xA4, 0x67, 0x30, 0xF0,
 0x20, 0x6C, 0x49, 0xF2, 0x18, 0x4C, 0x07, 0x6E,
@@ -47342,38 +47124,38 @@ u8 array_mp_8821c_fw_wowlan[] = {
 0x8C, 0xEB, 0xE8, 0xF3, 0x73, 0xC2, 0x00, 0x6B,
 0x28, 0xF6, 0x6C, 0xC2, 0x28, 0xF6, 0x6D, 0xC2,
 0x20, 0xE8, 0x00, 0x65, 0x10, 0xF0, 0x24, 0x6A,
-0xD6, 0xF5, 0x4C, 0x9A, 0xFF, 0x6D, 0x60, 0xAA,
+0xF6, 0xF3, 0x48, 0x9A, 0xFF, 0x6D, 0x60, 0xAA,
 0xE1, 0xF7, 0x1F, 0x6A, 0x6C, 0xEA, 0x30, 0xF0,
 0x20, 0x6B, 0xC0, 0xF1, 0x08, 0x4B, 0x89, 0xF0,
 0x91, 0xA3, 0x89, 0xE2, 0x10, 0xF0, 0x24, 0x6C,
-0xF6, 0xF5, 0x98, 0x9C, 0x5C, 0x32, 0xC4, 0x42,
+0x16, 0xF4, 0x94, 0x9C, 0x5C, 0x32, 0xC4, 0x42,
 0x91, 0xE2, 0x80, 0xA4, 0x28, 0xF6, 0x8C, 0xC3,
-0x10, 0xF0, 0x24, 0x6C, 0xF6, 0xF5, 0x9C, 0x9C,
+0x10, 0xF0, 0x24, 0x6C, 0x16, 0xF4, 0x98, 0x9C,
 0x91, 0xE2, 0x80, 0xA4, 0x28, 0xF6, 0x8D, 0xC3,
 0x28, 0xF6, 0x6C, 0xA3, 0x0A, 0x2B, 0x10, 0xF0,
-0x24, 0x6B, 0xF6, 0xF6, 0x80, 0x9B, 0x01, 0x6F,
+0x24, 0x6B, 0xF6, 0xF4, 0x9C, 0x9B, 0x01, 0x6F,
 0x60, 0xA4, 0xAC, 0xEB, 0xED, 0xEB, 0xAC, 0xEB,
-0x60, 0xC4, 0x10, 0xF0, 0x24, 0x6B, 0xF6, 0xF5,
-0x78, 0x9B, 0x30, 0xF0, 0x20, 0x6C, 0x6D, 0xE6,
+0x60, 0xC4, 0x10, 0xF0, 0x24, 0x6B, 0x16, 0xF4,
+0x74, 0x9B, 0x30, 0xF0, 0x20, 0x6C, 0x6D, 0xE6,
 0x60, 0x9B, 0xE8, 0xF7, 0x78, 0xDC, 0x10, 0xF0,
-0x24, 0x6C, 0xF6, 0xF6, 0x84, 0x9C, 0x8E, 0xEB,
-0x0B, 0x23, 0x10, 0xF0, 0x24, 0x6B, 0xF6, 0xF6,
-0x80, 0x9B, 0xFF, 0x6D, 0x02, 0x6E, 0x60, 0xA4,
+0x24, 0x6C, 0x16, 0xF5, 0x80, 0x9C, 0x8E, 0xEB,
+0x0B, 0x23, 0x10, 0xF0, 0x24, 0x6B, 0xF6, 0xF4,
+0x9C, 0x9B, 0xFF, 0x6D, 0x02, 0x6E, 0x60, 0xA4,
 0xAC, 0xEB, 0xCD, 0xEB, 0xAC, 0xEB, 0x60, 0xC4,
-0x10, 0xF0, 0x24, 0x6B, 0x96, 0xF6, 0x9C, 0x9B,
+0x10, 0xF0, 0x24, 0x6B, 0xB6, 0xF4, 0x98, 0x9B,
 0x30, 0xF0, 0x20, 0x6B, 0x09, 0xF0, 0x04, 0x4B,
 0xA7, 0x43, 0x91, 0xE2, 0x09, 0x4D, 0xC0, 0xA4,
 0x01, 0x4C, 0xC0, 0xC3, 0x01, 0x4B, 0xAA, 0xEB,
-0xFA, 0x61, 0x10, 0xF0, 0x24, 0x6B, 0xD6, 0xF6,
-0x9C, 0x9B, 0x30, 0xF0, 0x20, 0x6B, 0x09, 0xF0,
+0xFA, 0x61, 0x10, 0xF0, 0x24, 0x6B, 0xF6, 0xF4,
+0x98, 0x9B, 0x30, 0xF0, 0x20, 0x6B, 0x09, 0xF0,
 0x14, 0x4B, 0xA7, 0x43, 0x91, 0xE2, 0x09, 0x4D,
 0xC0, 0xA4, 0x01, 0x4C, 0xC0, 0xC3, 0x01, 0x4B,
 0xAA, 0xEB, 0xFA, 0x61, 0x10, 0xF0, 0x24, 0x6B,
-0x36, 0xF6, 0x88, 0x9B, 0x30, 0xF0, 0x20, 0x6B,
+0x56, 0xF4, 0x84, 0x9B, 0x30, 0xF0, 0x20, 0x6B,
 0x29, 0xF0, 0x14, 0x4B, 0xA7, 0x43, 0x91, 0xE2,
 0x01, 0x4D, 0xC0, 0xA4, 0x01, 0x4C, 0xC0, 0xC3,
 0x01, 0x4B, 0xAA, 0xEB, 0xFA, 0x61, 0x10, 0xF0,
-0x24, 0x6B, 0x36, 0xF6, 0x64, 0x9B, 0x00, 0x6C,
+0x24, 0x6B, 0x56, 0xF4, 0x60, 0x9B, 0x00, 0x6C,
 0x69, 0xE2, 0x0A, 0x10, 0xE0, 0xA5, 0x01, 0x4D,
 0xCA, 0xED, 0xE0, 0xC3, 0x01, 0x4B, 0xFA, 0x61,
 0x01, 0x4C, 0x10, 0x74, 0x20, 0x4A, 0x0C, 0x60,
@@ -47382,18 +47164,18 @@ u8 array_mp_8821c_fw_wowlan[] = {
 0x14, 0x4B, 0x19, 0x4E, 0xA2, 0x67, 0xEA, 0x17,
 0x20, 0xE8, 0x00, 0x65, 0xFD, 0x63, 0x05, 0x62,
 0xFF, 0x6A, 0x4C, 0xEC, 0x0E, 0x24, 0x10, 0xF0,
-0x24, 0x6B, 0x16, 0xF6, 0x88, 0x9B, 0x80, 0x6D,
+0x24, 0x6B, 0x36, 0xF4, 0x84, 0x9B, 0x80, 0x6D,
 0xAB, 0xED, 0x60, 0xA4, 0x4C, 0xEB, 0xAD, 0xEB,
-0x4C, 0xEB, 0x60, 0xC4, 0x00, 0x18, 0x51, 0xD2,
-0x1D, 0x10, 0x30, 0xF0, 0x20, 0x6B, 0x30, 0xF0,
+0x4C, 0xEB, 0x60, 0xC4, 0x00, 0x18, 0x07, 0xD2,
+0x1E, 0x10, 0x30, 0xF0, 0x20, 0x6B, 0x30, 0xF0,
 0x20, 0x6A, 0x2E, 0xF4, 0x48, 0x9A, 0x4F, 0xF7,
 0xD4, 0xA3, 0x0C, 0x6C, 0x00, 0x6D, 0x40, 0xEA,
 0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A,
 0x68, 0xF3, 0x99, 0xA2, 0x21, 0x6B, 0x6B, 0xEB,
-0x8C, 0xEB, 0xEB, 0xF6, 0x94, 0xA2, 0x68, 0xF3,
-0x79, 0xC2, 0x02, 0x6B, 0x6B, 0xEB, 0x8C, 0xEB,
-0xEB, 0xF6, 0x74, 0xC2, 0x05, 0x97, 0x03, 0x63,
-0x00, 0xEF, 0x00, 0x65, 0xF5, 0x63, 0x15, 0x62,
+0x8C, 0xEB, 0x02, 0x6C, 0x8B, 0xEC, 0x8C, 0xEB,
+0x68, 0xF3, 0x79, 0xC2, 0xEB, 0xF6, 0x74, 0xA2,
+0x6C, 0xEC, 0xEB, 0xF6, 0x94, 0xC2, 0x05, 0x97,
+0x03, 0x63, 0x00, 0xEF, 0xF5, 0x63, 0x15, 0x62,
 0x14, 0xD1, 0x13, 0xD0, 0xFF, 0xF7, 0x1F, 0x6B,
 0x6C, 0xED, 0x30, 0xF0, 0x20, 0x6A, 0xE5, 0x67,
 0x4E, 0xF3, 0x58, 0x9A, 0x0F, 0xD5, 0xDC, 0x4F,
@@ -47460,11 +47242,11 @@ u8 array_mp_8821c_fw_wowlan[] = {
 0x6C, 0xEA, 0x02, 0x6B, 0x6B, 0xEB, 0x6C, 0xEA,
 0x68, 0xF3, 0x59, 0xC0, 0xEB, 0xF6, 0x54, 0xA0,
 0x4C, 0xEB, 0xEB, 0xF6, 0x74, 0xC0, 0x0D, 0x92,
-0x80, 0xF2, 0x94, 0xA2, 0x00, 0x18, 0xA3, 0xE9,
+0x80, 0xF2, 0x94, 0xA2, 0x00, 0x18, 0x2A, 0xE9,
 0x0D, 0x93, 0x80, 0xF2, 0x94, 0xA3, 0x00, 0x18,
-0x92, 0xE9, 0x0D, 0x92, 0x80, 0xF2, 0x94, 0xA2,
-0x00, 0x18, 0xAA, 0xE9, 0x10, 0xF0, 0x24, 0x6A,
-0x16, 0xF6, 0x50, 0x9A, 0x55, 0x6B, 0x60, 0xC2,
+0x19, 0xE9, 0x0D, 0x92, 0x80, 0xF2, 0x94, 0xA2,
+0x00, 0x18, 0x31, 0xE9, 0x10, 0xF0, 0x24, 0x6A,
+0x36, 0xF4, 0x4C, 0x9A, 0x55, 0x6B, 0x60, 0xC2,
 0x08, 0xF4, 0x61, 0xA0, 0x01, 0x6A, 0x6D, 0xEA,
 0x08, 0xF4, 0x41, 0xC0, 0x0C, 0x93, 0xFF, 0x6A,
 0x01, 0x4B, 0x4C, 0xEB, 0x0C, 0xD3, 0x30, 0xF0,
@@ -47481,25 +47263,25 @@ u8 array_mp_8821c_fw_wowlan[] = {
 0x00, 0xEF, 0x00, 0x65, 0x20, 0xE8, 0x00, 0x65,
 0xFD, 0x63, 0x05, 0x62, 0x30, 0xF0, 0x20, 0x6A,
 0xA8, 0xF5, 0x7B, 0xA2, 0x40, 0x6A, 0x6C, 0xEA,
-0x02, 0x22, 0x00, 0x18, 0x55, 0xD3, 0x05, 0x97,
+0x02, 0x22, 0x00, 0x18, 0x0B, 0xD3, 0x05, 0x97,
 0x03, 0x63, 0x00, 0xEF, 0x10, 0xF0, 0x24, 0x6A,
-0xD6, 0xF5, 0x4C, 0x9A, 0xE1, 0xF7, 0x1F, 0x6B,
+0xF6, 0xF3, 0x48, 0x9A, 0xE1, 0xF7, 0x1F, 0x6B,
 0x40, 0xAA, 0x4C, 0xEB, 0x30, 0xF0, 0x20, 0x6A,
 0xC0, 0xF1, 0x08, 0x4A, 0x89, 0xF0, 0x85, 0xA2,
-0x8D, 0xE3, 0x10, 0xF0, 0x24, 0x6C, 0xF6, 0xF5,
-0x98, 0x9C, 0x7C, 0x33, 0x91, 0xE3, 0x80, 0xAC,
+0x8D, 0xE3, 0x10, 0xF0, 0x24, 0x6C, 0x16, 0xF4,
+0x94, 0x9C, 0x7C, 0x33, 0x91, 0xE3, 0x80, 0xAC,
 0xC8, 0xF5, 0x94, 0xCA, 0x10, 0xF0, 0x24, 0x6C,
-0xF6, 0xF6, 0x88, 0x9C, 0x91, 0xE3, 0x80, 0xAC,
+0x16, 0xF5, 0x84, 0x9C, 0x91, 0xE3, 0x80, 0xAC,
 0xC8, 0xF5, 0x96, 0xCA, 0x10, 0xF0, 0x24, 0x6C,
-0x16, 0xF6, 0x98, 0x9C, 0x91, 0xE3, 0x80, 0xAC,
+0x36, 0xF4, 0x94, 0x9C, 0x91, 0xE3, 0x80, 0xAC,
 0xC8, 0xF5, 0x98, 0xCA, 0x10, 0xF0, 0x24, 0x6C,
-0xF6, 0xF6, 0x8C, 0x9C, 0x91, 0xE3, 0x80, 0xAC,
+0x16, 0xF5, 0x88, 0x9C, 0x91, 0xE3, 0x80, 0xAC,
 0xC8, 0xF5, 0x9A, 0xCA, 0x10, 0xF0, 0x24, 0x6C,
-0xB6, 0xF6, 0x80, 0x9C, 0x91, 0xE3, 0x80, 0xAC,
+0xB6, 0xF4, 0x9C, 0x9C, 0x91, 0xE3, 0x80, 0xAC,
 0xC8, 0xF5, 0x9C, 0xCA, 0xE8, 0xF3, 0x95, 0xA2,
 0x80, 0x6A, 0x4B, 0xEA, 0x8C, 0xEA, 0xFF, 0x6C,
 0x8C, 0xEA, 0x0A, 0x22, 0x10, 0xF0, 0x24, 0x6A,
-0xF6, 0xF6, 0x50, 0x9A, 0x4D, 0xE3, 0x60, 0x9B,
+0x16, 0xF5, 0x4C, 0x9A, 0x4D, 0xE3, 0x60, 0x9B,
 0x30, 0xF0, 0x20, 0x6A, 0xCF, 0xF5, 0x7C, 0xDA,
 0x20, 0xE8, 0x00, 0x65, 0xFC, 0x63, 0x07, 0x62,
 0x06, 0xD1, 0x05, 0xD0, 0x30, 0xF0, 0x20, 0x6A,
@@ -47511,7 +47293,7 @@ u8 array_mp_8821c_fw_wowlan[] = {
 0xFF, 0x6A, 0x4C, 0xE8, 0x30, 0xF0, 0x20, 0x69,
 0xC0, 0xF1, 0x08, 0x49, 0xC8, 0xF5, 0x5A, 0xA9,
 0x43, 0xE8, 0xE8, 0x61, 0x10, 0xF0, 0x24, 0x6A,
-0xF6, 0xF6, 0x74, 0x9A, 0xFF, 0x6C, 0x40, 0x6D,
+0x16, 0xF5, 0x70, 0x9A, 0xFF, 0x6C, 0x40, 0x6D,
 0x40, 0xA3, 0x8C, 0xEA, 0xAD, 0xEA, 0x8C, 0xEA,
 0x40, 0xC3, 0x00, 0x6A, 0xE8, 0xF5, 0x46, 0xC9,
 0x01, 0x6A, 0x01, 0x10, 0x00, 0x6A, 0x07, 0x97,
@@ -47519,9 +47301,9 @@ u8 array_mp_8821c_fw_wowlan[] = {
 0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A,
 0xC8, 0xF5, 0x7E, 0xAA, 0x01, 0x4B, 0xC8, 0xF5,
 0x7E, 0xCA, 0x10, 0xF0, 0x24, 0x6B, 0xC8, 0xF5,
-0xBE, 0xAA, 0x16, 0xF6, 0x78, 0x9B, 0xA2, 0x35,
+0xBE, 0xAA, 0x36, 0xF4, 0x74, 0x9B, 0xA2, 0x35,
 0x6D, 0xE4, 0xA0, 0xC3, 0x10, 0xF0, 0x24, 0x6B,
-0x16, 0xF6, 0x7C, 0x9B, 0xC8, 0xF5, 0x5E, 0xA2,
+0x36, 0xF4, 0x78, 0x9B, 0xC8, 0xF5, 0x5E, 0xA2,
 0x71, 0xE4, 0x40, 0xC4, 0x20, 0xE8, 0x00, 0x65,
 0xFC, 0x63, 0x07, 0x62, 0x06, 0xD1, 0x05, 0xD0,
 0x30, 0xF0, 0x20, 0x68, 0x27, 0x44, 0x09, 0x49,
@@ -47541,9 +47323,9 @@ u8 array_mp_8821c_fw_wowlan[] = {
 0x20, 0x6A, 0xA8, 0xF7, 0x4C, 0xAA, 0x07, 0x90,
 0x4E, 0xEB, 0x01, 0x5B, 0x58, 0x67, 0x05, 0x63,
 0x00, 0xEF, 0x00, 0x65, 0xFD, 0x63, 0x05, 0x62,
-0x10, 0xF0, 0x24, 0x6A, 0x16, 0xF6, 0x50, 0x9A,
+0x10, 0xF0, 0x24, 0x6A, 0x36, 0xF4, 0x4C, 0x9A,
 0x32, 0x6B, 0x01, 0x6C, 0x60, 0xC2, 0x80, 0x18,
-0x96, 0x0B, 0x05, 0x97, 0x03, 0x63, 0x00, 0xEF,
+0xA9, 0x0B, 0x05, 0x97, 0x03, 0x63, 0x00, 0xEF,
 0xFC, 0x63, 0x07, 0x62, 0x06, 0xD1, 0x05, 0xD0,
 0x00, 0x68, 0x08, 0xD4, 0x12, 0x10, 0x08, 0x94,
 0x30, 0xF0, 0x20, 0x6A, 0xCE, 0xF4, 0x4C, 0x9A,
@@ -47552,56 +47334,56 @@ u8 array_mp_8821c_fw_wowlan[] = {
 0x00, 0x6A, 0x21, 0x10, 0x01, 0x48, 0xFF, 0x6A,
 0x4C, 0xE8, 0x30, 0xF0, 0x20, 0x69, 0xC0, 0xF1,
 0x08, 0x49, 0xC8, 0xF5, 0x5C, 0xA9, 0x43, 0xE8,
-0xE6, 0x61, 0x10, 0xF0, 0x24, 0x6A, 0xF6, 0xF6,
-0x74, 0x9A, 0xFF, 0x6C, 0x80, 0x6D, 0x40, 0xA3,
+0xE6, 0x61, 0x10, 0xF0, 0x24, 0x6A, 0x16, 0xF5,
+0x70, 0x9A, 0xFF, 0x6C, 0x80, 0x6D, 0x40, 0xA3,
 0xAB, 0xED, 0x8C, 0xEA, 0xAD, 0xEA, 0x8C, 0xEA,
-0x40, 0xC3, 0x10, 0xF0, 0x24, 0x6A, 0x16, 0xF6,
-0x50, 0x9A, 0x30, 0x6B, 0x01, 0x6C, 0x60, 0xC2,
-0x80, 0x18, 0x96, 0x0B, 0x01, 0x6A, 0x07, 0x97,
+0x40, 0xC3, 0x10, 0xF0, 0x24, 0x6A, 0x36, 0xF4,
+0x4C, 0x9A, 0x30, 0x6B, 0x01, 0x6C, 0x60, 0xC2,
+0x80, 0x18, 0xA9, 0x0B, 0x01, 0x6A, 0x07, 0x97,
 0x06, 0x91, 0x05, 0x90, 0x04, 0x63, 0x00, 0xEF,
 0xFB, 0x63, 0x09, 0x62, 0x08, 0xD1, 0x07, 0xD0,
-0x10, 0xF0, 0x24, 0x6B, 0xD6, 0xF5, 0x0C, 0x4B,
+0x10, 0xF0, 0x24, 0x6B, 0xF6, 0xF3, 0x08, 0x4B,
 0x60, 0x9B, 0x30, 0xF0, 0x20, 0x68, 0xC0, 0xF1,
 0x08, 0x48, 0x40, 0xAB, 0xE1, 0xF7, 0x1F, 0x6B,
 0xFF, 0x69, 0x6C, 0xEA, 0x89, 0xF0, 0x66, 0xA0,
 0x69, 0xE2, 0x5C, 0x32, 0x04, 0xD2, 0x10, 0xF0,
-0x24, 0x6A, 0x04, 0x93, 0x36, 0xF6, 0x50, 0x9A,
+0x24, 0x6A, 0x04, 0x93, 0x56, 0xF4, 0x4C, 0x9A,
 0x49, 0xE3, 0x80, 0xA2, 0x10, 0xF0, 0x24, 0x6A,
-0xB6, 0xF5, 0x5C, 0x9A, 0x2C, 0xEC, 0x49, 0xE3,
-0xA0, 0xA2, 0x10, 0xF0, 0x24, 0x6A, 0x36, 0xF6,
-0x54, 0x9A, 0x2C, 0xED, 0x49, 0xE3, 0xC0, 0xA2,
-0x2C, 0xEE, 0x80, 0x18, 0x4F, 0x09, 0x04, 0x93,
-0x10, 0xF0, 0x24, 0x6C, 0x16, 0xF6, 0x9C, 0x9C,
+0xD6, 0xF3, 0x58, 0x9A, 0x2C, 0xEC, 0x49, 0xE3,
+0xA0, 0xA2, 0x10, 0xF0, 0x24, 0x6A, 0x56, 0xF4,
+0x50, 0x9A, 0x2C, 0xED, 0x49, 0xE3, 0xC0, 0xA2,
+0x2C, 0xEE, 0x80, 0x18, 0x62, 0x09, 0x04, 0x93,
+0x10, 0xF0, 0x24, 0x6C, 0x36, 0xF4, 0x98, 0x9C,
 0x38, 0x4B, 0x49, 0xE3, 0x10, 0xF0, 0x24, 0x6B,
-0x16, 0xF6, 0x78, 0x9B, 0x91, 0xE2, 0x6D, 0xE2,
+0x36, 0xF4, 0x74, 0x9B, 0x91, 0xE2, 0x6D, 0xE2,
 0x60, 0xA3, 0x80, 0xA4, 0x2C, 0xEB, 0x60, 0x33,
 0x8C, 0xE9, 0x65, 0xE1, 0x10, 0xF0, 0x24, 0x6B,
-0xF6, 0xF6, 0x70, 0x9B, 0xC8, 0xF5, 0x3E, 0xC8,
+0x16, 0xF5, 0x6C, 0x9B, 0xC8, 0xF5, 0x3E, 0xC8,
 0x6D, 0xE2, 0x60, 0xA3, 0xE8, 0xF5, 0x60, 0xC0,
-0x10, 0xF0, 0x24, 0x6B, 0xF6, 0xF6, 0x78, 0x9B,
+0x10, 0xF0, 0x24, 0x6B, 0x16, 0xF5, 0x74, 0x9B,
 0x6D, 0xE2, 0x60, 0xA3, 0xE8, 0xF5, 0x61, 0xC0,
-0x10, 0xF0, 0x24, 0x6B, 0xF6, 0xF6, 0x7C, 0x9B,
+0x10, 0xF0, 0x24, 0x6B, 0x16, 0xF5, 0x78, 0x9B,
 0x6D, 0xE2, 0x60, 0xA3, 0xE8, 0xF5, 0x62, 0xC0,
-0x10, 0xF0, 0x24, 0x6B, 0x16, 0xF7, 0x60, 0x9B,
+0x10, 0xF0, 0x24, 0x6B, 0x16, 0xF5, 0x7C, 0x9B,
 0x6D, 0xE2, 0x60, 0xA3, 0xE8, 0xF5, 0x63, 0xC0,
-0x10, 0xF0, 0x24, 0x6B, 0xD6, 0xF5, 0x60, 0x9B,
+0x10, 0xF0, 0x24, 0x6B, 0xD6, 0xF3, 0x7C, 0x9B,
 0x69, 0xE2, 0x40, 0xAA, 0xE1, 0xF7, 0x1F, 0x6B,
 0xE8, 0xF5, 0x44, 0xC8, 0x10, 0xF0, 0x24, 0x6A,
-0xD6, 0xF5, 0x0C, 0x4A, 0x40, 0x9A, 0x80, 0xAA,
+0xF6, 0xF3, 0x08, 0x4A, 0x40, 0x9A, 0x80, 0xAA,
 0x89, 0xF0, 0x47, 0xA0, 0x6C, 0xEC, 0xC8, 0xF5,
 0x7A, 0xA8, 0x51, 0xE4, 0x9C, 0x34, 0x00, 0x6A,
 0x12, 0x2B, 0x13, 0x10, 0x10, 0xF0, 0x24, 0x6D,
-0xF6, 0xF5, 0xB8, 0x9D, 0xB5, 0xE4, 0x55, 0xE5,
+0x16, 0xF4, 0xB4, 0x9D, 0xB5, 0xE4, 0x55, 0xE5,
 0xC0, 0xA5, 0x30, 0xF0, 0x20, 0x6D, 0xC0, 0xF1,
 0x08, 0x4D, 0xB5, 0xE2, 0xE8, 0xF5, 0xC8, 0xC5,
 0x01, 0x4A, 0xFF, 0x6D, 0xAC, 0xEA, 0x63, 0xEA,
-0xED, 0x61, 0x10, 0xF0, 0x24, 0x6A, 0xD6, 0xF5,
-0x4C, 0x9A, 0xE1, 0xF7, 0x1F, 0x6B, 0x40, 0xAA,
+0xED, 0x61, 0x10, 0xF0, 0x24, 0x6A, 0xF6, 0xF3,
+0x48, 0x9A, 0xE1, 0xF7, 0x1F, 0x6B, 0x40, 0xAA,
 0x4C, 0xEB, 0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1,
 0x08, 0x4A, 0x89, 0xF0, 0x88, 0xA2, 0x91, 0xE3,
 0x9C, 0x34, 0xC8, 0xF5, 0x7C, 0xAA, 0x00, 0x6A,
-0x11, 0x10, 0x10, 0xF0, 0x24, 0x6D, 0xF6, 0xF5,
-0xB8, 0x9D, 0xB5, 0xE4, 0x55, 0xE5, 0xC0, 0xA5,
+0x11, 0x10, 0x10, 0xF0, 0x24, 0x6D, 0x16, 0xF4,
+0xB4, 0x9D, 0xB5, 0xE4, 0x55, 0xE5, 0xC0, 0xA5,
 0x30, 0xF0, 0x20, 0x6D, 0xC0, 0xF1, 0x08, 0x4D,
 0xB5, 0xE2, 0x08, 0xF6, 0xC8, 0xC5, 0x01, 0x4A,
 0xFF, 0x6D, 0xAC, 0xEA, 0x63, 0xEA, 0xED, 0x61,
@@ -47610,42 +47392,42 @@ u8 array_mp_8821c_fw_wowlan[] = {
 0x8C, 0xEA, 0x63, 0xEA, 0xFB, 0x61, 0x09, 0x97,
 0x08, 0x91, 0x07, 0x90, 0x05, 0x63, 0x00, 0xEF,
 0xFC, 0x63, 0x07, 0x62, 0x06, 0xD0, 0xFF, 0x68,
-0x0C, 0xEC, 0x20, 0x24, 0x00, 0x18, 0x6B, 0xD3,
-0x00, 0x18, 0x04, 0xD4, 0x30, 0xF0, 0x20, 0x6A,
+0x0C, 0xEC, 0x20, 0x24, 0x00, 0x18, 0x21, 0xD3,
+0x00, 0x18, 0xBA, 0xD3, 0x30, 0xF0, 0x20, 0x6A,
 0xA8, 0xF5, 0x7D, 0xA2, 0x80, 0x6A, 0x4B, 0xEA,
 0x6C, 0xEA, 0x0C, 0xEA, 0x19, 0x22, 0x30, 0xF0,
 0x20, 0x6A, 0xCF, 0xF5, 0x5C, 0x9A, 0xE0, 0xF3,
 0x08, 0x6E, 0x01, 0x6B, 0x58, 0xEE, 0x10, 0xF0,
-0x23, 0x6C, 0x69, 0xF7, 0x1D, 0x4C, 0x00, 0x6D,
+0x23, 0x6C, 0x49, 0xF6, 0x15, 0x4C, 0x00, 0x6D,
 0xE3, 0x67, 0x04, 0xD3, 0x12, 0xEE, 0x00, 0x18,
-0xE2, 0xE6, 0x06, 0x10, 0x10, 0xF0, 0x23, 0x6C,
-0x69, 0xF7, 0x1D, 0x4C, 0x00, 0x18, 0xCF, 0xE6,
+0x69, 0xE6, 0x06, 0x10, 0x10, 0xF0, 0x23, 0x6C,
+0x49, 0xF6, 0x15, 0x4C, 0x00, 0x18, 0x56, 0xE6,
 0x07, 0x97, 0x06, 0x90, 0x04, 0x63, 0x00, 0xEF,
 0xFA, 0x63, 0x0B, 0x62, 0x0A, 0xD1, 0x09, 0xD0,
-0x10, 0xF0, 0x24, 0x6A, 0xF6, 0xF6, 0x74, 0x9A,
+0x10, 0xF0, 0x24, 0x6A, 0x16, 0xF5, 0x70, 0x9A,
 0xFF, 0x68, 0x20, 0x6C, 0x40, 0xA3, 0x0C, 0xEA,
 0x8D, 0xEA, 0x0C, 0xEA, 0x40, 0xC3, 0x10, 0xF0,
-0x24, 0x6A, 0xD6, 0xF5, 0x4C, 0x9A, 0x60, 0xAA,
+0x24, 0x6A, 0xF6, 0xF3, 0x48, 0x9A, 0x60, 0xAA,
 0xE1, 0xF7, 0x1F, 0x6A, 0x6C, 0xEA, 0x30, 0xF0,
 0x20, 0x6B, 0xC0, 0xF1, 0x08, 0x4B, 0x89, 0xF0,
 0x26, 0xA3, 0x04, 0xD3, 0x25, 0xE2, 0x10, 0xF0,
-0x24, 0x6A, 0x36, 0xF6, 0x50, 0x9A, 0x3C, 0x31,
+0x24, 0x6A, 0x56, 0xF4, 0x4C, 0x9A, 0x3C, 0x31,
 0x49, 0xE1, 0x80, 0xA2, 0x10, 0xF0, 0x24, 0x6A,
-0xB6, 0xF5, 0x5C, 0x9A, 0x0C, 0xEC, 0x49, 0xE1,
-0xA0, 0xA2, 0x10, 0xF0, 0x24, 0x6A, 0x36, 0xF6,
-0x54, 0x9A, 0x0C, 0xED, 0x49, 0xE1, 0xC0, 0xA2,
-0x0C, 0xEE, 0x80, 0x18, 0x4F, 0x09, 0x87, 0x41,
+0xD6, 0xF3, 0x58, 0x9A, 0x0C, 0xEC, 0x49, 0xE1,
+0xA0, 0xA2, 0x10, 0xF0, 0x24, 0x6A, 0x56, 0xF4,
+0x50, 0x9A, 0x0C, 0xED, 0x49, 0xE1, 0xC0, 0xA2,
+0x0C, 0xEE, 0x80, 0x18, 0x62, 0x09, 0x87, 0x41,
 0x00, 0x6D, 0x29, 0x4C, 0x06, 0xD2, 0x80, 0x18,
-0xD6, 0x0D, 0x06, 0x92, 0x38, 0x49, 0x45, 0xE1,
-0x91, 0x67, 0x05, 0xD1, 0x00, 0x18, 0xAE, 0xD3,
+0xE9, 0x0D, 0x06, 0x92, 0x38, 0x49, 0x45, 0xE1,
+0x91, 0x67, 0x05, 0xD1, 0x00, 0x18, 0x64, 0xD3,
 0x04, 0x93, 0x30, 0xF0, 0x20, 0x69, 0x0E, 0xF5,
 0x48, 0x99, 0x89, 0xF0, 0xC6, 0xA3, 0x05, 0x95,
 0x00, 0x6C, 0x40, 0xEA, 0x04, 0x93, 0x0E, 0xF5,
 0x48, 0x99, 0x05, 0x95, 0x89, 0xF0, 0xC6, 0xA3,
 0x11, 0x6C, 0x40, 0xEA, 0x10, 0xF0, 0x24, 0x6A,
-0x16, 0xF5, 0x58, 0x9A, 0xFF, 0x6C, 0xA4, 0x67,
-0x40, 0x9A, 0x10, 0xF0, 0x24, 0x6A, 0x36, 0xF5,
-0x4C, 0x9A, 0x26, 0x6E, 0x20, 0xA2, 0x0C, 0xE9,
+0x36, 0xF3, 0x54, 0x9A, 0xFF, 0x6C, 0xA4, 0x67,
+0x40, 0x9A, 0x10, 0xF0, 0x24, 0x6A, 0x56, 0xF3,
+0x48, 0x9A, 0x26, 0x6E, 0x20, 0xA2, 0x0C, 0xE9,
 0x30, 0xF0, 0x20, 0x68, 0x6E, 0xF2, 0x58, 0x98,
 0x40, 0xEA, 0x30, 0xF0, 0x20, 0x6A, 0xCE, 0xF2,
 0x40, 0x9A, 0x40, 0xEA, 0x01, 0x72, 0x11, 0x61,
@@ -47656,10 +47438,10 @@ u8 array_mp_8821c_fw_wowlan[] = {
 0x40, 0xEA, 0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1,
 0x08, 0x4A, 0x69, 0xF0, 0x74, 0xA2, 0x02, 0x73,
 0x07, 0x61, 0x89, 0xF0, 0x86, 0xA2, 0x06, 0x92,
-0xFF, 0x6D, 0x4C, 0xED, 0x80, 0x18, 0xE1, 0x09,
+0xFF, 0x6D, 0x4C, 0xED, 0x80, 0x18, 0xF4, 0x09,
 0x30, 0xF0, 0x20, 0x68, 0xC0, 0xF1, 0x08, 0x48,
 0x68, 0xF3, 0x97, 0xA0, 0x96, 0x34, 0x00, 0x18,
-0xCB, 0xCA, 0x30, 0xF0, 0x20, 0x6A, 0x8E, 0xF2,
+0xBC, 0xCA, 0x30, 0xF0, 0x20, 0x6A, 0x8E, 0xF2,
 0x5C, 0x9A, 0x40, 0xEA, 0xE8, 0xF5, 0x46, 0xA8,
 0x01, 0x4A, 0xE8, 0xF5, 0x46, 0xC8, 0x0B, 0x97,
 0x0A, 0x91, 0x09, 0x90, 0x06, 0x63, 0x00, 0xEF,
@@ -47672,14 +47454,14 @@ u8 array_mp_8821c_fw_wowlan[] = {
 0x4C, 0xEB, 0x44, 0x23, 0x30, 0xF0, 0x21, 0x6A,
 0x90, 0xF3, 0x5F, 0xA2, 0x3F, 0x2A, 0x05, 0x5C,
 0x01, 0x6A, 0x23, 0x60, 0x10, 0xF0, 0x24, 0x6A,
-0x88, 0x34, 0xB6, 0xF2, 0x18, 0x4A, 0x89, 0xE2,
+0x88, 0x34, 0xD6, 0xF0, 0x14, 0x4A, 0x89, 0xE2,
 0x40, 0x9A, 0x00, 0xEA, 0x10, 0xF0, 0x24, 0x6A,
-0x76, 0xF5, 0x40, 0x9A, 0x13, 0x10, 0x10, 0xF0,
-0x24, 0x6A, 0x76, 0xF5, 0x48, 0x9A, 0x0E, 0x10,
-0x10, 0xF0, 0x24, 0x6A, 0x76, 0xF5, 0x50, 0x9A,
-0x09, 0x10, 0x10, 0xF0, 0x24, 0x6A, 0x76, 0xF5,
-0x58, 0x9A, 0x04, 0x10, 0x10, 0xF0, 0x24, 0x6A,
-0x96, 0xF5, 0x40, 0x9A, 0x60, 0xA2, 0xFF, 0x6A,
+0x76, 0xF3, 0x5C, 0x9A, 0x13, 0x10, 0x10, 0xF0,
+0x24, 0x6A, 0x96, 0xF3, 0x44, 0x9A, 0x0E, 0x10,
+0x10, 0xF0, 0x24, 0x6A, 0x96, 0xF3, 0x4C, 0x9A,
+0x09, 0x10, 0x10, 0xF0, 0x24, 0x6A, 0x96, 0xF3,
+0x54, 0x9A, 0x04, 0x10, 0x10, 0xF0, 0x24, 0x6A,
+0x96, 0xF3, 0x5C, 0x9A, 0x60, 0xA2, 0xFF, 0x6A,
 0x6C, 0xEA, 0x7D, 0x67, 0x50, 0xC3, 0x7D, 0x67,
 0x50, 0xA3, 0x14, 0x22, 0x70, 0xA3, 0xFF, 0x6A,
 0x4C, 0xEB, 0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1,
@@ -47692,32 +47474,32 @@ u8 array_mp_8821c_fw_wowlan[] = {
 0x28, 0xF6, 0x68, 0xAA, 0x12, 0xEC, 0x63, 0xEC,
 0x01, 0x4B, 0x18, 0x60, 0xE8, 0xF5, 0x66, 0xAA,
 0xC8, 0xF5, 0x58, 0xAA, 0x4E, 0xEB, 0x0B, 0x2B,
-0x0A, 0x22, 0x10, 0xF0, 0x24, 0x6A, 0x16, 0xF6,
-0x50, 0x9A, 0x31, 0x6B, 0x01, 0x6C, 0x60, 0xC2,
-0x80, 0x18, 0x96, 0x0B, 0x09, 0x10, 0x00, 0x18,
-0x80, 0xD4, 0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1,
+0x0A, 0x22, 0x10, 0xF0, 0x24, 0x6A, 0x36, 0xF4,
+0x4C, 0x9A, 0x31, 0x6B, 0x01, 0x6C, 0x60, 0xC2,
+0x80, 0x18, 0xA9, 0x0B, 0x09, 0x10, 0x00, 0x18,
+0x36, 0xD4, 0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1,
 0x08, 0x4A, 0x00, 0x6B, 0x28, 0xF6, 0x68, 0xCA,
 0x07, 0x97, 0x04, 0x63, 0x00, 0xEF, 0x00, 0x65,
-0x10, 0xF0, 0x24, 0x6A, 0x16, 0xF7, 0x44, 0x9A,
+0x10, 0xF0, 0x24, 0x6A, 0x36, 0xF5, 0x40, 0x9A,
 0xFF, 0x6B, 0x80, 0xA2, 0x00, 0xF6, 0x80, 0x34,
 0x00, 0xF6, 0x83, 0x34, 0x00, 0x54, 0x24, 0x60,
 0xA0, 0xA2, 0x7F, 0x6C, 0xAC, 0xEC, 0x80, 0xC2,
 0x80, 0xA2, 0x40, 0x6D, 0x6C, 0xEC, 0xAD, 0xEC,
 0x6C, 0xEC, 0x80, 0xC2, 0x80, 0xA2, 0x10, 0xF0,
-0x24, 0x6C, 0xF6, 0xF4, 0x8C, 0x9C, 0x3F, 0x6D,
-0x80, 0xA4, 0x10, 0xF0, 0x24, 0x6C, 0xF6, 0xF4,
-0x90, 0x9C, 0x80, 0xA4, 0x10, 0xF0, 0x24, 0x6C,
-0x16, 0xF7, 0x88, 0x9C, 0x80, 0xA4, 0x80, 0xA2,
+0x24, 0x6C, 0x16, 0xF3, 0x88, 0x9C, 0x3F, 0x6D,
+0x80, 0xA4, 0x10, 0xF0, 0x24, 0x6C, 0x16, 0xF3,
+0x8C, 0x9C, 0x80, 0xA4, 0x10, 0xF0, 0x24, 0x6C,
+0x36, 0xF5, 0x84, 0x9C, 0x80, 0xA4, 0x80, 0xA2,
 0x6C, 0xEC, 0xAD, 0xEC, 0x6C, 0xEC, 0x80, 0xC2,
 0x80, 0xA2, 0xBF, 0x6B, 0x8C, 0xEB, 0x60, 0xC2,
 0x20, 0xE8, 0x00, 0x65, 0x10, 0xF0, 0x24, 0x6B,
-0x16, 0xF7, 0x6C, 0x9B, 0xFF, 0x6A, 0x4C, 0xEC,
+0x36, 0xF5, 0x68, 0x9B, 0xFF, 0x6A, 0x4C, 0xEC,
 0xC0, 0xA3, 0x4C, 0xED, 0x0C, 0x26, 0x10, 0xF0,
-0x24, 0x6A, 0x16, 0xF5, 0x7C, 0x9A, 0x10, 0xF0,
-0x24, 0x6C, 0x16, 0xF7, 0x90, 0x9C, 0x40, 0x9B,
+0x24, 0x6A, 0x36, 0xF3, 0x78, 0x9A, 0x10, 0xF0,
+0x24, 0x6C, 0x36, 0xF5, 0x8C, 0x9C, 0x40, 0x9B,
 0x8D, 0xEA, 0x40, 0xDB, 0x20, 0xE8, 0x80, 0xC3,
-0x0B, 0x25, 0x10, 0xF0, 0x24, 0x6B, 0x16, 0xF7,
-0x94, 0x9B, 0x80, 0x6D, 0xAB, 0xED, 0x60, 0xA4,
+0x0B, 0x25, 0x10, 0xF0, 0x24, 0x6B, 0x36, 0xF5,
+0x90, 0x9B, 0x80, 0x6D, 0xAB, 0xED, 0x60, 0xA4,
 0x4C, 0xEB, 0xAE, 0xEB, 0x4C, 0xEB, 0x60, 0xC4,
 0x20, 0xE8, 0x00, 0x65, 0xFB, 0x63, 0x09, 0x62,
 0x08, 0xD1, 0x07, 0xD0, 0xFF, 0xF7, 0x1F, 0x6A,
@@ -47729,34 +47511,34 @@ u8 array_mp_8821c_fw_wowlan[] = {
 0x40, 0xA8, 0x01, 0x4A, 0x40, 0xC8, 0x1F, 0xF7,
 0x00, 0x6A, 0x2C, 0xEA, 0x02, 0xF0, 0x00, 0x72,
 0x01, 0x60, 0x05, 0x2A, 0x10, 0xF0, 0x24, 0x6A,
-0xB6, 0xF4, 0x4C, 0x9A, 0x04, 0x10, 0x10, 0xF0,
-0x24, 0x6A, 0xB6, 0xF4, 0x50, 0x9A, 0x49, 0xE1,
+0xD6, 0xF2, 0x48, 0x9A, 0x04, 0x10, 0x10, 0xF0,
+0x24, 0x6A, 0xD6, 0xF2, 0x4C, 0x9A, 0x49, 0xE1,
 0x0B, 0x93, 0x40, 0x9A, 0x6C, 0xEA, 0x0C, 0x93,
 0x6E, 0xEA, 0x04, 0x22, 0x40, 0xA8, 0x04, 0x93,
 0x63, 0xEA, 0xDC, 0x61, 0x40, 0xA8, 0x04, 0x93,
 0x63, 0xEA, 0x58, 0x67, 0x09, 0x97, 0x08, 0x91,
 0x07, 0x90, 0x05, 0x63, 0x00, 0xEF, 0x00, 0x65,
-0x10, 0xF0, 0x24, 0x6B, 0x16, 0xF7, 0x78, 0x9B,
+0x10, 0xF0, 0x24, 0x6B, 0x36, 0xF5, 0x74, 0x9B,
 0xFF, 0x6A, 0xCC, 0xEA, 0x6D, 0xEA, 0xE0, 0xF1,
 0x1F, 0x6B, 0xAC, 0xEB, 0x10, 0xF0, 0x24, 0x6C,
-0x16, 0xF7, 0x9C, 0x9C, 0x60, 0x33, 0x60, 0x33,
+0x36, 0xF5, 0x98, 0x9C, 0x60, 0x33, 0x60, 0x33,
 0x6D, 0xEA, 0x40, 0xDC, 0x10, 0xF0, 0x24, 0x6A,
-0xD6, 0xF4, 0x5C, 0x9A, 0x6D, 0xEA, 0x40, 0xDC,
+0xF6, 0xF2, 0x58, 0x9A, 0x6D, 0xEA, 0x40, 0xDC,
 0x20, 0xE8, 0x00, 0x65, 0xE0, 0xF1, 0x1F, 0x6A,
-0x10, 0xF0, 0x24, 0x6B, 0xD6, 0xF4, 0x7C, 0x9B,
+0x10, 0xF0, 0x24, 0x6B, 0xF6, 0xF2, 0x78, 0x9B,
 0xAC, 0xEA, 0x40, 0x32, 0x40, 0x32, 0x6D, 0xEA,
-0x10, 0xF0, 0x24, 0x6B, 0x16, 0xF7, 0x7C, 0x9B,
-0x40, 0xDB, 0x10, 0xF0, 0x24, 0x6A, 0x36, 0xF7,
-0x40, 0x9A, 0xFF, 0x6B, 0x40, 0xA2, 0x6C, 0xEA,
+0x10, 0xF0, 0x24, 0x6B, 0x36, 0xF5, 0x78, 0x9B,
+0x40, 0xDB, 0x10, 0xF0, 0x24, 0x6A, 0x36, 0xF5,
+0x5C, 0x9A, 0xFF, 0x6B, 0x40, 0xA2, 0x6C, 0xEA,
 0x20, 0xE8, 0x00, 0x65, 0xFC, 0x63, 0x07, 0x62,
 0x06, 0xD1, 0x05, 0xD0, 0x01, 0x68, 0x04, 0xEC,
 0x04, 0xF7, 0x10, 0x69, 0x13, 0x10, 0x30, 0xF0,
 0x20, 0x6A, 0xCE, 0xF4, 0x5C, 0x9A, 0x01, 0x6C,
 0xFF, 0x49, 0x40, 0xEA, 0x0B, 0x29, 0x10, 0xF0,
-0x24, 0x6A, 0x16, 0xF5, 0x7C, 0x9A, 0x08, 0xF0,
+0x24, 0x6A, 0x36, 0xF3, 0x78, 0x9A, 0x08, 0xF0,
 0x00, 0x6C, 0x40, 0x9B, 0x8D, 0xEA, 0x40, 0xDB,
 0x00, 0x6A, 0x0B, 0x10, 0x10, 0xF0, 0x24, 0x6A,
-0x36, 0xF7, 0x44, 0x9A, 0x60, 0xAA, 0xFF, 0xF7,
+0x56, 0xF5, 0x40, 0x9A, 0x60, 0xAA, 0xFF, 0xF7,
 0x1F, 0x6A, 0x6C, 0xEA, 0x0C, 0xEA, 0xE3, 0x2A,
 0x01, 0x6A, 0x07, 0x97, 0x06, 0x91, 0x05, 0x90,
 0x04, 0x63, 0x00, 0xEF, 0xFB, 0x63, 0x09, 0x62,
@@ -47764,81 +47546,81 @@ u8 array_mp_8821c_fw_wowlan[] = {
 0x0F, 0x91, 0x04, 0xD2, 0x04, 0x93, 0xFF, 0x6A,
 0x4C, 0xE8, 0x4C, 0xEB, 0x90, 0x67, 0x0B, 0xD5,
 0x0C, 0xD6, 0x0D, 0xD7, 0x04, 0xD3, 0x4C, 0xE9,
-0x00, 0x18, 0x7F, 0xD5, 0x80, 0xF0, 0x07, 0x22,
+0x00, 0x18, 0x35, 0xD5, 0x80, 0xF0, 0x07, 0x22,
 0x06, 0x58, 0x80, 0xF0, 0x04, 0x60, 0x10, 0xF0,
-0x24, 0x6A, 0x08, 0x30, 0xD6, 0xF2, 0x0C, 0x4A,
+0x24, 0x6A, 0x08, 0x30, 0xF6, 0xF0, 0x08, 0x4A,
 0x09, 0xE2, 0x40, 0x9A, 0x00, 0xEA, 0x02, 0xF2,
 0x10, 0x6A, 0x0E, 0x10, 0x02, 0xF2, 0x00, 0x6A,
 0x0B, 0x10, 0x22, 0xF2, 0x00, 0x6A, 0x08, 0x10,
 0x22, 0xF2, 0x10, 0x6A, 0x05, 0x10, 0x42, 0xF2,
 0x00, 0x6A, 0x02, 0x10, 0x42, 0xF2, 0x10, 0x6A,
-0x10, 0xF0, 0x24, 0x6B, 0x0D, 0x94, 0xB6, 0xF6,
-0x74, 0x9B, 0x8C, 0xEB, 0x10, 0xF0, 0x24, 0x6C,
-0xD6, 0xF5, 0x98, 0x9C, 0x8D, 0xEB, 0x06, 0x21,
-0x10, 0xF0, 0x24, 0x6C, 0x36, 0xF7, 0x88, 0x9C,
+0x10, 0xF0, 0x24, 0x6B, 0x0D, 0x94, 0xD6, 0xF4,
+0x70, 0x9B, 0x8C, 0xEB, 0x10, 0xF0, 0x24, 0x6C,
+0xF6, 0xF3, 0x94, 0x9C, 0x8D, 0xEB, 0x06, 0x21,
+0x10, 0xF0, 0x24, 0x6C, 0x56, 0xF5, 0x84, 0x9C,
 0x6D, 0xEC, 0x05, 0x10, 0x10, 0xF0, 0x24, 0x6C,
-0x36, 0xF7, 0x8C, 0x9C, 0x6C, 0xEC, 0x04, 0x96,
-0x06, 0x26, 0x10, 0xF0, 0x24, 0x6B, 0xD6, 0xF4,
-0x7C, 0x9B, 0x8D, 0xEB, 0x05, 0x10, 0x10, 0xF0,
-0x24, 0x6B, 0x36, 0xF7, 0x70, 0x9B, 0x8C, 0xEB,
+0x56, 0xF5, 0x88, 0x9C, 0x6C, 0xEC, 0x04, 0x96,
+0x06, 0x26, 0x10, 0xF0, 0x24, 0x6B, 0xF6, 0xF2,
+0x78, 0x9B, 0x8D, 0xEB, 0x05, 0x10, 0x10, 0xF0,
+0x24, 0x6B, 0x56, 0xF5, 0x6C, 0x9B, 0x8C, 0xEB,
 0x1F, 0xF7, 0x00, 0x6C, 0x4C, 0xEC, 0x02, 0xF0,
 0x00, 0x74, 0x01, 0x60, 0x05, 0x2C, 0x10, 0xF0,
-0x24, 0x6C, 0xB6, 0xF4, 0xAC, 0x9C, 0x04, 0x10,
-0x10, 0xF0, 0x24, 0x6C, 0xB6, 0xF4, 0xB0, 0x9C,
-0x10, 0xF0, 0x24, 0x6C, 0x0B, 0x96, 0x36, 0xF7,
-0x94, 0x9C, 0xB5, 0xE2, 0xCC, 0xEC, 0x80, 0xDD,
+0x24, 0x6C, 0xD6, 0xF2, 0xA8, 0x9C, 0x04, 0x10,
+0x10, 0xF0, 0x24, 0x6C, 0xD6, 0xF2, 0xAC, 0x9C,
+0x10, 0xF0, 0x24, 0x6C, 0x0B, 0x96, 0x56, 0xF5,
+0x90, 0x9C, 0xB5, 0xE2, 0xCC, 0xEC, 0x80, 0xDD,
 0x84, 0x42, 0x1F, 0xF7, 0x00, 0x6D, 0xAC, 0xEC,
 0x02, 0xF0, 0x00, 0x74, 0x01, 0x60, 0x05, 0x2C,
-0x10, 0xF0, 0x24, 0x6C, 0x36, 0xF7, 0xB8, 0x9C,
-0x04, 0x10, 0x10, 0xF0, 0x24, 0x6C, 0x36, 0xF7,
-0xBC, 0x9C, 0x10, 0xF0, 0x24, 0x6C, 0x0C, 0x96,
-0x36, 0xF7, 0x94, 0x9C, 0xB5, 0xE2, 0xCC, 0xEC,
+0x10, 0xF0, 0x24, 0x6C, 0x56, 0xF5, 0xB4, 0x9C,
+0x04, 0x10, 0x10, 0xF0, 0x24, 0x6C, 0x56, 0xF5,
+0xB8, 0x9C, 0x10, 0xF0, 0x24, 0x6C, 0x0C, 0x96,
+0x56, 0xF5, 0x90, 0x9C, 0xB5, 0xE2, 0xCC, 0xEC,
 0x80, 0xDD, 0x87, 0x42, 0x01, 0x4C, 0x1F, 0xF7,
 0x00, 0x6D, 0xAC, 0xEC, 0x02, 0xF0, 0x00, 0x74,
 0x01, 0x60, 0x05, 0x2C, 0x10, 0xF0, 0x24, 0x6C,
-0x56, 0xF7, 0x80, 0x9C, 0x04, 0x10, 0x10, 0xF0,
-0x24, 0x6C, 0x56, 0xF7, 0x84, 0x9C, 0x89, 0xE2,
+0x56, 0xF5, 0x9C, 0x9C, 0x04, 0x10, 0x10, 0xF0,
+0x24, 0x6C, 0x76, 0xF5, 0x80, 0x9C, 0x89, 0xE2,
 0x60, 0xDA, 0x01, 0x6A, 0x01, 0x10, 0x00, 0x6A,
 0x09, 0x97, 0x08, 0x91, 0x07, 0x90, 0x05, 0x63,
 0x00, 0xEF, 0x00, 0x65, 0xFD, 0x63, 0x05, 0x62,
 0x04, 0xD0, 0x04, 0xF7, 0x10, 0x68, 0x13, 0x10,
 0x30, 0xF0, 0x20, 0x6A, 0xCE, 0xF4, 0x5C, 0x9A,
 0x05, 0x6C, 0xFF, 0x48, 0x40, 0xEA, 0x0B, 0x28,
-0x10, 0xF0, 0x24, 0x6A, 0x16, 0xF5, 0x7C, 0x9A,
+0x10, 0xF0, 0x24, 0x6A, 0x36, 0xF3, 0x78, 0x9A,
 0x08, 0xF0, 0x00, 0x6C, 0x40, 0x9B, 0x8D, 0xEA,
 0x40, 0xDB, 0x00, 0x6A, 0x09, 0x10, 0x10, 0xF0,
-0x24, 0x6A, 0x36, 0xF7, 0x44, 0x9A, 0x60, 0xAA,
+0x24, 0x6A, 0x56, 0xF5, 0x40, 0x9A, 0x60, 0xAA,
 0x3F, 0x6A, 0x6C, 0xEA, 0xE5, 0x2A, 0x01, 0x6A,
 0x05, 0x97, 0x04, 0x90, 0x03, 0x63, 0x00, 0xEF,
-0x10, 0xF0, 0x24, 0x6A, 0x36, 0xF7, 0x44, 0x9A,
+0x10, 0xF0, 0x24, 0x6A, 0x56, 0xF5, 0x40, 0x9A,
 0x40, 0xAA, 0x20, 0xE8, 0x10, 0xF0, 0x24, 0x6A,
-0x36, 0xF7, 0x44, 0x9A, 0x40, 0xAA, 0x20, 0xE8,
+0x56, 0xF5, 0x40, 0x9A, 0x40, 0xAA, 0x20, 0xE8,
 0xFB, 0x63, 0x09, 0x62, 0x08, 0xD1, 0x07, 0xD0,
 0x00, 0x6A, 0x04, 0xD2, 0x04, 0x92, 0x01, 0x72,
 0x58, 0x67, 0x04, 0xD2, 0x10, 0xF0, 0x23, 0x6A,
-0x78, 0x67, 0x0B, 0xF0, 0x01, 0x4A, 0x69, 0xE2,
-0x10, 0xF0, 0x24, 0x6B, 0x76, 0xF4, 0x7C, 0x9B,
+0x78, 0x67, 0xCA, 0xF6, 0x19, 0x4A, 0x69, 0xE2,
+0x10, 0xF0, 0x24, 0x6B, 0x96, 0xF2, 0x78, 0x9B,
 0x40, 0xDB, 0x00, 0x1C, 0x96, 0x45, 0x00, 0x18,
-0x1A, 0xD5, 0x00, 0x1C, 0x95, 0x45, 0x00, 0x1C,
+0xD0, 0xD4, 0x00, 0x1C, 0x95, 0x45, 0x00, 0x1C,
 0x96, 0x45, 0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1,
 0x08, 0x4A, 0x80, 0xF0, 0x8C, 0x9A, 0x02, 0x6B,
 0x8C, 0xEB, 0x09, 0x23, 0x03, 0x6B, 0x6B, 0xEB,
 0x8C, 0xEB, 0x80, 0xF0, 0x6C, 0xDA, 0x00, 0x18,
-0x69, 0xDC, 0x00, 0x18, 0xCB, 0xDC, 0x00, 0x1C,
+0xF7, 0xDB, 0x00, 0x18, 0x59, 0xDC, 0x00, 0x1C,
 0x95, 0x45, 0x00, 0x1C, 0x96, 0x45, 0x30, 0xF0,
 0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A, 0x80, 0xF0,
 0x8C, 0x9A, 0x04, 0x6B, 0x8C, 0xEB, 0x09, 0x23,
 0x05, 0x6B, 0x6B, 0xEB, 0x8C, 0xEB, 0x80, 0xF0,
-0x6C, 0xDA, 0x00, 0x18, 0xC1, 0xD8, 0x00, 0x18,
-0x07, 0xD8, 0x00, 0x1C, 0x95, 0x45, 0x30, 0xF0,
+0x6C, 0xDA, 0x00, 0x18, 0x4F, 0xD8, 0x00, 0x18,
+0xBD, 0xD7, 0x00, 0x1C, 0x95, 0x45, 0x30, 0xF0,
 0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A, 0x10, 0xF0,
-0x24, 0x6B, 0x36, 0xF5, 0x70, 0x9B, 0x80, 0xF0,
+0x24, 0x6B, 0x56, 0xF3, 0x6C, 0x9B, 0x80, 0xF0,
 0x8C, 0x9A, 0x8C, 0xEB, 0x13, 0x23, 0x10, 0xF0,
-0x24, 0x6B, 0x56, 0xF7, 0x70, 0x9B, 0x69, 0xF0,
+0x24, 0x6B, 0x76, 0xF5, 0x6C, 0x9B, 0x69, 0xF0,
 0xB5, 0xA2, 0x30, 0xF0, 0x20, 0x6E, 0x8C, 0xEB,
 0x80, 0xF0, 0x6C, 0xDA, 0x30, 0xF0, 0x20, 0x6B,
 0x0F, 0xF6, 0x90, 0xA3, 0xEF, 0xF5, 0x10, 0x4E,
-0x00, 0x18, 0xEF, 0xCE, 0x00, 0x1C, 0x96, 0x45,
+0x00, 0x18, 0xE0, 0xCE, 0x00, 0x1C, 0x96, 0x45,
 0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A,
 0x68, 0xF3, 0x94, 0xA2, 0x7F, 0x6B, 0x8C, 0xEB,
 0x0D, 0x23, 0x68, 0xF3, 0x98, 0xA2, 0x68, 0xF3,
@@ -47846,39 +47628,39 @@ u8 array_mp_8821c_fw_wowlan[] = {
 0x97, 0xA2, 0xFF, 0x6A, 0x96, 0x34, 0x4C, 0xEC,
 0x00, 0x18, 0xA2, 0xC6, 0x30, 0xF0, 0x20, 0x6A,
 0x40, 0xF2, 0x54, 0x9A, 0x02, 0x2A, 0x00, 0x18,
-0xAF, 0xC9, 0x00, 0x1C, 0x95, 0x45, 0x00, 0x1C,
+0xA0, 0xC9, 0x00, 0x1C, 0x95, 0x45, 0x00, 0x1C,
 0x96, 0x45, 0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1,
 0x08, 0x4A, 0x80, 0xF0, 0x8C, 0x9A, 0x02, 0xF0,
 0x00, 0x6B, 0x8C, 0xEB, 0x08, 0x23, 0x02, 0xF0,
 0x01, 0x6B, 0x6B, 0xEB, 0x8C, 0xEB, 0x80, 0xF0,
-0x6C, 0xDA, 0x00, 0x18, 0x93, 0xE7, 0x00, 0x1C,
+0x6C, 0xDA, 0x00, 0x18, 0x1A, 0xE7, 0x00, 0x1C,
 0x95, 0x45, 0x00, 0x1C, 0x96, 0x45, 0x30, 0xF0,
 0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A, 0x10, 0xF0,
-0x24, 0x6B, 0x36, 0xF5, 0x74, 0x9B, 0x80, 0xF0,
+0x24, 0x6B, 0x56, 0xF3, 0x70, 0x9B, 0x80, 0xF0,
 0x8C, 0x9A, 0x8C, 0xEB, 0x20, 0x23, 0x10, 0xF0,
-0x24, 0x6B, 0x56, 0xF7, 0x74, 0x9B, 0x8C, 0xEB,
+0x24, 0x6B, 0x76, 0xF5, 0x70, 0x9B, 0x8C, 0xEB,
 0x68, 0xF3, 0x94, 0xA2, 0x80, 0xF0, 0x6C, 0xDA,
 0x7F, 0x6B, 0x8C, 0xEB, 0x07, 0x2B, 0x68, 0xF3,
 0x5C, 0xA2, 0x0C, 0x72, 0x03, 0x61, 0x00, 0x18,
-0x53, 0xDA, 0x0D, 0x10, 0x30, 0xF0, 0x20, 0x6A,
+0xE1, 0xD9, 0x0D, 0x10, 0x30, 0xF0, 0x20, 0x6A,
 0xC0, 0xF1, 0x08, 0x4A, 0x10, 0xF0, 0x24, 0x6C,
-0x80, 0xF0, 0x6C, 0x9A, 0x36, 0xF5, 0x94, 0x9C,
+0x80, 0xF0, 0x6C, 0x9A, 0x56, 0xF3, 0x90, 0x9C,
 0x8D, 0xEB, 0x80, 0xF0, 0x6C, 0xDA, 0x00, 0x1C,
 0x95, 0x45, 0x30, 0xF0, 0x20, 0x6A, 0xCC, 0xF1,
 0x53, 0xA2, 0x0F, 0x2A, 0x10, 0xF0, 0x24, 0x6A,
-0x56, 0xF7, 0x58, 0x9A, 0x01, 0x6B, 0x80, 0xA2,
+0x76, 0xF5, 0x54, 0x9A, 0x01, 0x6B, 0x80, 0xA2,
 0x8C, 0xEB, 0x07, 0x23, 0x80, 0xA2, 0xFE, 0x6B,
 0x8C, 0xEB, 0x60, 0xC2, 0x03, 0x6C, 0x00, 0x18,
-0xA2, 0xDD, 0x30, 0xF0, 0x20, 0x69, 0xCF, 0xF4,
+0x30, 0xDD, 0x30, 0xF0, 0x20, 0x69, 0xCF, 0xF4,
 0x00, 0x49, 0x80, 0xF2, 0x1C, 0xA1, 0x01, 0x6A,
 0x4E, 0xE8, 0x05, 0x28, 0x0B, 0x6C, 0x00, 0x18,
-0xA2, 0xDD, 0x80, 0xF2, 0x1C, 0xC1, 0x30, 0xF0,
+0x30, 0xDD, 0x80, 0xF2, 0x1C, 0xC1, 0x30, 0xF0,
 0x21, 0x6B, 0x30, 0xF0, 0x20, 0x6A, 0xD0, 0xF3,
 0x94, 0x9B, 0xEE, 0xF7, 0x58, 0x9A, 0x40, 0xEA,
 0x0D, 0x17, 0x00, 0x65, 0xFD, 0x63, 0x05, 0x62,
 0x04, 0xD0, 0x00, 0x68, 0x10, 0xF0, 0x24, 0x6B,
-0x76, 0xF4, 0x7C, 0x9B, 0x10, 0xF0, 0x23, 0x6A,
-0xEB, 0xF1, 0x15, 0x4A, 0x0A, 0x70, 0x40, 0xDB,
+0x96, 0xF2, 0x78, 0x9B, 0x10, 0xF0, 0x23, 0x6A,
+0xCB, 0xF0, 0x0D, 0x4A, 0x0A, 0x70, 0x40, 0xDB,
 0x0C, 0x61, 0x30, 0xF0, 0x21, 0x6B, 0x30, 0xF0,
 0x20, 0x6A, 0xEE, 0xF7, 0x54, 0x9A, 0xD0, 0xF3,
 0x94, 0x9B, 0x01, 0x6D, 0xAB, 0xED, 0x40, 0xEA,
@@ -47886,20 +47668,20 @@ u8 array_mp_8821c_fw_wowlan[] = {
 0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A, 0x80, 0xF0,
 0x8C, 0x9A, 0x08, 0x6B, 0x8C, 0xEB, 0x07, 0x23,
 0x09, 0x6B, 0x6B, 0xEB, 0x8C, 0xEB, 0x80, 0xF0,
-0x6C, 0xDA, 0x80, 0x18, 0x11, 0x11, 0x00, 0x1C,
+0x6C, 0xDA, 0x80, 0x18, 0x1E, 0x11, 0x00, 0x1C,
 0x95, 0x45, 0x10, 0xF0, 0x24, 0x6B, 0xFF, 0x6A,
-0x01, 0x48, 0x76, 0xF4, 0x7C, 0x9B, 0x4C, 0xE8,
-0x10, 0xF0, 0x23, 0x6A, 0xEB, 0xF1, 0x16, 0x4A,
+0x01, 0x48, 0x96, 0xF2, 0x78, 0x9B, 0x4C, 0xE8,
+0x10, 0xF0, 0x23, 0x6A, 0xCB, 0xF0, 0x0E, 0x4A,
 0x40, 0xDB, 0xC8, 0x17, 0x10, 0xF0, 0x24, 0x6A,
-0x56, 0xF7, 0x7C, 0x9A, 0xDF, 0x6A, 0x80, 0xA3,
+0x76, 0xF5, 0x78, 0x9A, 0xDF, 0x6A, 0x80, 0xA3,
 0x8C, 0xEA, 0x40, 0xC3, 0x20, 0xE8, 0x00, 0x65,
-0x10, 0xF0, 0x24, 0x6B, 0x56, 0xF7, 0xBC, 0x9B,
+0x10, 0xF0, 0x24, 0x6B, 0x76, 0xF5, 0xB8, 0x9B,
 0xFF, 0x6A, 0x20, 0x6E, 0x60, 0xA5, 0x4C, 0xEC,
 0x4C, 0xEB, 0xCD, 0xEB, 0x4C, 0xEB, 0x07, 0xF7,
 0x01, 0x4A, 0x4D, 0xEC, 0x10, 0xF0, 0x24, 0x6A,
-0x76, 0xF7, 0x40, 0x9A, 0x60, 0xC5, 0x80, 0xCA,
+0x76, 0xF5, 0x5C, 0x9A, 0x60, 0xC5, 0x80, 0xCA,
 0x20, 0xE8, 0x00, 0x65, 0x10, 0xF0, 0x24, 0x6A,
-0x76, 0xF7, 0x40, 0x9A, 0x68, 0xF0, 0x04, 0x6B,
+0x76, 0xF5, 0x5C, 0x9A, 0x68, 0xF0, 0x04, 0x6B,
 0x60, 0xCA, 0x20, 0xE8, 0x03, 0x6F, 0x8C, 0xEF,
 0x64, 0x67, 0x46, 0x67, 0x04, 0x27, 0x07, 0x10,
 0xA0, 0xDB, 0xFC, 0x4A, 0x04, 0x4B, 0x04, 0x5A,
@@ -47939,8 +47721,8 @@ u8 array_mp_8821c_fw_wowlan[] = {
 0x22, 0x6B, 0x30, 0xF0, 0x21, 0x6A, 0xB0, 0xF3,
 0x64, 0xDA, 0x11, 0xF0, 0x00, 0x6B, 0x09, 0x10,
 0x43, 0x6B, 0x30, 0xF0, 0x21, 0x6A, 0xB0, 0xF3,
-0x64, 0xDA, 0x10, 0xF0, 0x24, 0x6A, 0x76, 0xF7,
-0x64, 0x9A, 0x30, 0xF0, 0x21, 0x6A, 0xB0, 0xF3,
+0x64, 0xDA, 0x10, 0xF0, 0x24, 0x6A, 0x96, 0xF5,
+0x60, 0x9A, 0x30, 0xF0, 0x21, 0x6A, 0xB0, 0xF3,
 0x68, 0xDA, 0x20, 0xE8, 0x30, 0xF0, 0x21, 0x6A,
 0xB0, 0xF3, 0x40, 0x9A, 0x20, 0xE8, 0x00, 0x65,
 0xFF, 0x63, 0x0C, 0x24, 0x30, 0xF0, 0x21, 0x6A,
@@ -47952,81 +47734,81 @@ u8 array_mp_8821c_fw_wowlan[] = {
 0x00, 0xD4, 0x00, 0x92, 0x04, 0x22, 0x00, 0x92,
 0xFF, 0x4A, 0x00, 0xD2, 0xFA, 0x17, 0x01, 0x63,
 0x20, 0xE8, 0x00, 0x65, 0xFD, 0x63, 0x05, 0x62,
-0x00, 0x18, 0xC4, 0xD6, 0x05, 0x97, 0x03, 0x63,
+0x00, 0x18, 0x7A, 0xD6, 0x05, 0x97, 0x03, 0x63,
 0x00, 0xEF, 0x00, 0x65, 0xFD, 0x63, 0x05, 0x62,
-0xFF, 0x6A, 0x4C, 0xED, 0x00, 0x18, 0xB9, 0xD6,
+0xFF, 0x6A, 0x4C, 0xED, 0x00, 0x18, 0x6F, 0xD6,
 0x05, 0x97, 0x00, 0x6A, 0x03, 0x63, 0x00, 0xEF,
 0xFD, 0x63, 0x05, 0x62, 0x04, 0xD0, 0xFF, 0x6A,
-0x04, 0x67, 0x4C, 0xEE, 0x00, 0x18, 0xBE, 0xD6,
+0x04, 0x67, 0x4C, 0xEE, 0x00, 0x18, 0x74, 0xD6,
 0x50, 0x67, 0x05, 0x97, 0x04, 0x90, 0x03, 0x63,
 0x00, 0xEF, 0x00, 0x65, 0xFC, 0x63, 0x07, 0x62,
 0x06, 0xD1, 0x05, 0xD0, 0x10, 0xF0, 0x24, 0x6A,
-0x25, 0x67, 0x36, 0xF5, 0xB0, 0x9A, 0xFF, 0x68,
+0x25, 0x67, 0x56, 0xF3, 0xAC, 0x9A, 0xFF, 0x68,
 0x8C, 0xE8, 0xA1, 0xF4, 0x18, 0x6C, 0x00, 0x18,
-0xD5, 0xE3, 0x28, 0x22, 0x27, 0x20, 0x03, 0x21,
+0x5C, 0xE3, 0x28, 0x22, 0x27, 0x20, 0x03, 0x21,
 0x01, 0x71, 0x12, 0x60, 0x34, 0x10, 0x10, 0xF0,
-0x24, 0x6A, 0x96, 0xF7, 0x00, 0x9A, 0x00, 0x6C,
-0x01, 0x6D, 0xD0, 0x67, 0x00, 0x18, 0x20, 0xE4,
+0x24, 0x6A, 0x96, 0xF5, 0x1C, 0x9A, 0x00, 0x6C,
+0x01, 0x6D, 0xD0, 0x67, 0x00, 0x18, 0xA7, 0xE3,
 0x0E, 0x6B, 0x6B, 0xEB, 0x4C, 0xEB, 0x00, 0x6C,
 0x01, 0x6D, 0xD0, 0x67, 0x09, 0x6F, 0x10, 0x10,
-0x10, 0xF0, 0x24, 0x6A, 0x96, 0xF7, 0x00, 0x9A,
+0x10, 0xF0, 0x24, 0x6A, 0x96, 0xF5, 0x1C, 0x9A,
 0x00, 0x6C, 0x01, 0x6D, 0xD0, 0x67, 0x00, 0x18,
-0x20, 0xE4, 0x0E, 0x6B, 0x6B, 0xEB, 0x4C, 0xEB,
+0xA7, 0xE3, 0x0E, 0x6B, 0x6B, 0xEB, 0x4C, 0xEB,
 0x00, 0x6C, 0x01, 0x6D, 0xD0, 0x67, 0x05, 0x6F,
 0x6D, 0xEF, 0x0F, 0x10, 0x10, 0xF0, 0x24, 0x6A,
-0x96, 0xF7, 0x00, 0x9A, 0x00, 0x6C, 0x01, 0x6D,
-0xD0, 0x67, 0x00, 0x18, 0x20, 0xE4, 0x02, 0x6F,
+0x96, 0xF5, 0x1C, 0x9A, 0x00, 0x6C, 0x01, 0x6D,
+0xD0, 0x67, 0x00, 0x18, 0xA7, 0xE3, 0x02, 0x6F,
 0xEB, 0xEF, 0x00, 0x6C, 0x01, 0x6D, 0xD0, 0x67,
-0x4C, 0xEF, 0x00, 0x18, 0x33, 0xE4, 0x07, 0x97,
+0x4C, 0xEF, 0x00, 0x18, 0xBA, 0xE3, 0x07, 0x97,
 0x06, 0x91, 0x05, 0x90, 0x04, 0x63, 0x00, 0xEF,
 0xFD, 0x63, 0x05, 0x62, 0x04, 0xD0, 0x00, 0x68,
 0x17, 0x10, 0xE0, 0xF3, 0x08, 0x70, 0x0A, 0x61,
-0x10, 0xF0, 0x24, 0x6A, 0x16, 0xF5, 0x7C, 0x9A,
+0x10, 0xF0, 0x24, 0x6A, 0x36, 0xF3, 0x78, 0x9A,
 0x80, 0x6C, 0x40, 0x9B, 0x8D, 0xEA, 0x40, 0xDB,
 0x00, 0x6A, 0x13, 0x10, 0xFF, 0xF7, 0x1F, 0x6A,
 0x01, 0x48, 0x4C, 0xE8, 0x30, 0xF0, 0x20, 0x6A,
 0xCE, 0xF4, 0x5C, 0x9A, 0x0A, 0x6C, 0x40, 0xEA,
-0x10, 0xF0, 0x24, 0x6A, 0xD6, 0xF7, 0x50, 0x9A,
+0x10, 0xF0, 0x24, 0x6A, 0xF6, 0xF5, 0x4C, 0x9A,
 0x60, 0xA2, 0x01, 0x6A, 0x6C, 0xEA, 0xE1, 0x2A,
 0x01, 0x6A, 0x05, 0x97, 0x04, 0x90, 0x03, 0x63,
 0x00, 0xEF, 0x00, 0x65, 0xFF, 0xF7, 0x1F, 0x6A,
 0x8C, 0xEA, 0x10, 0xF0, 0x24, 0x6B, 0x10, 0xF0,
-0x24, 0x6C, 0xD6, 0xF7, 0x74, 0x9B, 0xD6, 0xF7,
-0x98, 0x9C, 0x6D, 0xE5, 0x91, 0xE5, 0x00, 0x6E,
+0x24, 0x6C, 0xF6, 0xF5, 0x70, 0x9B, 0xF6, 0xF5,
+0x94, 0x9C, 0x6D, 0xE5, 0x91, 0xE5, 0x00, 0x6E,
 0xC0, 0xDB, 0x04, 0x4B, 0x8A, 0xEB, 0xFB, 0x61,
 0xE7, 0xF7, 0x1F, 0x6B, 0x4C, 0xEB, 0x10, 0xF0,
-0x24, 0x6A, 0xD6, 0xF5, 0x58, 0x9A, 0x10, 0x6C,
-0x4D, 0xEB, 0x10, 0xF0, 0x24, 0x6A, 0xD6, 0xF7,
-0x54, 0x9A, 0x49, 0xE5, 0x60, 0xDA, 0x10, 0xF0,
-0x24, 0x6A, 0xD6, 0xF7, 0x5C, 0x9A, 0xFF, 0x6B,
+0x24, 0x6A, 0xF6, 0xF3, 0x54, 0x9A, 0x10, 0x6C,
+0x4D, 0xEB, 0x10, 0xF0, 0x24, 0x6A, 0xF6, 0xF5,
+0x50, 0x9A, 0x49, 0xE5, 0x60, 0xDA, 0x10, 0xF0,
+0x24, 0x6A, 0xF6, 0xF5, 0x58, 0x9A, 0xFF, 0x6B,
 0x55, 0xE5, 0x40, 0xA5, 0x6C, 0xEA, 0x8D, 0xEA,
 0x6C, 0xEA, 0x40, 0xC5, 0x20, 0xE8, 0x00, 0x65,
 0xFC, 0x63, 0x07, 0x62, 0x06, 0xD1, 0x05, 0xD0,
 0x30, 0xF0, 0x21, 0x6A, 0xD0, 0xF3, 0x61, 0xA2,
 0x08, 0xD4, 0x30, 0xF0, 0x20, 0x69, 0x61, 0xC5,
 0x01, 0x4B, 0xD0, 0xF3, 0x61, 0xC2, 0x10, 0xF0,
-0x24, 0x6B, 0xD6, 0xF7, 0x94, 0x9B, 0x08, 0x93,
+0x24, 0x6B, 0xF6, 0xF5, 0x90, 0x9B, 0x08, 0x93,
 0x4E, 0xF2, 0x50, 0x99, 0x02, 0x6E, 0x91, 0xE3,
 0x05, 0x67, 0x40, 0xEA, 0x10, 0xF0, 0x24, 0x6B,
-0xF6, 0xF7, 0x80, 0x9B, 0x08, 0x93, 0xCE, 0xA0,
+0xF6, 0xF5, 0x9C, 0x9B, 0x08, 0x93, 0xCE, 0xA0,
 0x4E, 0xF2, 0x50, 0x99, 0xA2, 0x40, 0x91, 0xE3,
 0x40, 0xEA, 0x07, 0x97, 0x06, 0x91, 0x05, 0x90,
 0x04, 0x63, 0x00, 0xEF, 0xFC, 0x63, 0x07, 0x62,
 0x06, 0xD1, 0x05, 0xD0, 0x24, 0x67, 0x00, 0x18,
-0x4C, 0xD7, 0x00, 0x6B, 0x36, 0x22, 0x10, 0xF0,
-0x24, 0x6A, 0xB6, 0xF6, 0x50, 0x9A, 0xFF, 0xF7,
+0x02, 0xD7, 0x00, 0x6B, 0x36, 0x22, 0x10, 0xF0,
+0x24, 0x6A, 0xD6, 0xF4, 0x4C, 0x9A, 0xFF, 0xF7,
 0x1F, 0x6E, 0xFF, 0x6F, 0x00, 0x9A, 0x10, 0xF0,
-0x24, 0x6A, 0xB6, 0xF6, 0x54, 0x9A, 0x10, 0x6C,
+0x24, 0x6A, 0xD6, 0xF4, 0x50, 0x9A, 0x10, 0x6C,
 0x8B, 0xEC, 0x4C, 0xE8, 0x10, 0xF0, 0x24, 0x6A,
-0xA1, 0x40, 0xF6, 0xF7, 0x44, 0x9A, 0x65, 0x67,
+0xA1, 0x40, 0x16, 0xF6, 0x40, 0x9A, 0x65, 0x67,
 0xCC, 0xEB, 0x60, 0xCA, 0x10, 0xF0, 0x24, 0x6A,
-0xF6, 0xF7, 0x48, 0x9A, 0x60, 0xA2, 0xFA, 0x65,
+0x16, 0xF6, 0x44, 0x9A, 0x60, 0xA2, 0xFA, 0x65,
 0xA2, 0x32, 0xEC, 0xEB, 0x8C, 0xEB, 0x42, 0x32,
 0x6D, 0xEA, 0xEC, 0xEA, 0x7F, 0x67, 0x40, 0xC3,
 0x87, 0xA9, 0x02, 0x4C, 0xCC, 0xEC, 0x00, 0x18,
-0x61, 0xD7, 0x87, 0x40, 0x12, 0x4C, 0xB1, 0x67,
-0x00, 0x18, 0x78, 0xD7, 0x10, 0xF0, 0x24, 0x6A,
-0xD6, 0xF7, 0x50, 0x9A, 0x01, 0x6B, 0x60, 0xC2,
+0x17, 0xD7, 0x87, 0x40, 0x12, 0x4C, 0xB1, 0x67,
+0x00, 0x18, 0x2E, 0xD7, 0x10, 0xF0, 0x24, 0x6A,
+0xF6, 0xF5, 0x4C, 0x9A, 0x01, 0x6B, 0x60, 0xC2,
 0x01, 0x6B, 0x07, 0x97, 0x06, 0x91, 0x05, 0x90,
 0x43, 0x67, 0x04, 0x63, 0x00, 0xEF, 0x00, 0x65,
 0xFD, 0x63, 0x05, 0x62, 0x04, 0xD0, 0x30, 0xF0,
@@ -48037,10 +47819,10 @@ u8 array_mp_8821c_fw_wowlan[] = {
 0x01, 0xF1, 0x00, 0x72, 0x07, 0x60, 0xA0, 0xF0,
 0x6E, 0xA0, 0xA0, 0xF0, 0x4F, 0xA0, 0xFF, 0x4B,
 0x4E, 0xEB, 0x0A, 0x2B, 0x10, 0xF0, 0x24, 0x6A,
-0x16, 0xF5, 0x7C, 0x9A, 0x00, 0xF2, 0x00, 0x6C,
+0x36, 0xF3, 0x78, 0x9A, 0x00, 0xF2, 0x00, 0x6C,
 0x40, 0x9B, 0x8D, 0xEA, 0x40, 0xDB, 0x12, 0x10,
 0x50, 0x32, 0x51, 0xE0, 0x0E, 0x4C, 0x10, 0x6E,
-0x00, 0x18, 0xBE, 0xD6, 0xA0, 0xF0, 0x4F, 0xA0,
+0x00, 0x18, 0x74, 0xD6, 0xA0, 0xF0, 0x4F, 0xA0,
 0x0A, 0x6B, 0x01, 0x4A, 0xA0, 0xF0, 0x4F, 0xC0,
 0xA0, 0xF0, 0x4F, 0xA0, 0x6E, 0xEA, 0x02, 0x2A,
 0xA0, 0xF0, 0x4F, 0xC0, 0x05, 0x97, 0x04, 0x90,
@@ -48054,35 +47836,35 @@ u8 array_mp_8821c_fw_wowlan[] = {
 0xEF, 0x46, 0xE2, 0xEA, 0xF4, 0x61, 0x30, 0xF0,
 0x21, 0x6A, 0xD0, 0xF3, 0x60, 0xA2, 0x01, 0x4B,
 0xD0, 0xF3, 0x60, 0xC2, 0x10, 0xF0, 0x24, 0x6B,
-0xD6, 0xF7, 0x74, 0x9B, 0x30, 0xF0, 0x20, 0x6A,
+0xF6, 0xF5, 0x70, 0x9B, 0x30, 0xF0, 0x20, 0x6A,
 0x4E, 0xF2, 0x50, 0x9A, 0x71, 0xE4, 0x40, 0xEA,
 0x05, 0x97, 0x04, 0x90, 0x03, 0x63, 0x00, 0xEF,
 0xFC, 0x63, 0x07, 0x62, 0x06, 0xD1, 0x05, 0xD0,
-0x24, 0x67, 0x00, 0x18, 0x4C, 0xD7, 0x00, 0x6B,
-0x2E, 0x22, 0x10, 0xF0, 0x24, 0x6A, 0xB6, 0xF6,
-0x50, 0x9A, 0x0F, 0x6C, 0xFF, 0xF7, 0x1F, 0x6B,
-0x00, 0x9A, 0x10, 0xF0, 0x24, 0x6A, 0xB6, 0xF6,
-0x54, 0x9A, 0x4C, 0xE8, 0xA1, 0x40, 0xA2, 0x32,
+0x24, 0x67, 0x00, 0x18, 0x02, 0xD7, 0x00, 0x6B,
+0x2E, 0x22, 0x10, 0xF0, 0x24, 0x6A, 0xD6, 0xF4,
+0x4C, 0x9A, 0x0F, 0x6C, 0xFF, 0xF7, 0x1F, 0x6B,
+0x00, 0x9A, 0x10, 0xF0, 0x24, 0x6A, 0xD6, 0xF4,
+0x50, 0x9A, 0x4C, 0xE8, 0xA1, 0x40, 0xA2, 0x32,
 0x42, 0x32, 0x8C, 0xEA, 0x10, 0xF0, 0x24, 0x6C,
-0xF6, 0xF7, 0x84, 0x9C, 0xC5, 0x67, 0x6C, 0xEE,
-0xC0, 0xCC, 0x10, 0xF0, 0x24, 0x6C, 0xF6, 0xF7,
-0x88, 0x9C, 0x40, 0xC4, 0xE0, 0xF0, 0x87, 0xA1,
-0x6C, 0xEC, 0x00, 0x18, 0x61, 0xD7, 0x87, 0x40,
-0x12, 0x4C, 0xB1, 0x67, 0x00, 0x18, 0xCF, 0xD7,
-0x10, 0xF0, 0x24, 0x6A, 0xD6, 0xF7, 0x50, 0x9A,
+0x16, 0xF6, 0x80, 0x9C, 0xC5, 0x67, 0x6C, 0xEE,
+0xC0, 0xCC, 0x10, 0xF0, 0x24, 0x6C, 0x16, 0xF6,
+0x84, 0x9C, 0x40, 0xC4, 0xE0, 0xF0, 0x87, 0xA1,
+0x6C, 0xEC, 0x00, 0x18, 0x17, 0xD7, 0x87, 0x40,
+0x12, 0x4C, 0xB1, 0x67, 0x00, 0x18, 0x85, 0xD7,
+0x10, 0xF0, 0x24, 0x6A, 0xF6, 0xF5, 0x4C, 0x9A,
 0x01, 0x6B, 0x60, 0xC2, 0x01, 0x6B, 0x07, 0x97,
 0x06, 0x91, 0x05, 0x90, 0x43, 0x67, 0x04, 0x63,
 0x00, 0xEF, 0x00, 0x65, 0xFD, 0x63, 0x05, 0x62,
-0x04, 0xD0, 0x10, 0xF0, 0x24, 0x6B, 0x76, 0xF4,
-0x7C, 0x9B, 0x10, 0xF0, 0x23, 0x6A, 0x0C, 0xF0,
-0x1D, 0x4A, 0x10, 0xF0, 0x30, 0x68, 0x40, 0xDB,
+0x04, 0xD0, 0x10, 0xF0, 0x24, 0x6B, 0x96, 0xF2,
+0x78, 0x9B, 0x10, 0xF0, 0x23, 0x6A, 0xEB, 0xF6,
+0x15, 0x4A, 0x10, 0xF0, 0x30, 0x68, 0x40, 0xDB,
 0x00, 0xF0, 0x00, 0x48, 0xC1, 0xF6, 0x62, 0xA0,
 0xC1, 0xF6, 0x43, 0xA0, 0x6E, 0xEA, 0x39, 0x22,
-0x10, 0xF0, 0x24, 0x6A, 0xF6, 0xF7, 0x4C, 0x9A,
-0x10, 0xF0, 0x24, 0x6C, 0x36, 0xF5, 0x98, 0x9C,
+0x10, 0xF0, 0x24, 0x6A, 0x16, 0xF6, 0x48, 0x9A,
+0x10, 0xF0, 0x24, 0x6C, 0x56, 0xF3, 0x94, 0x9C,
 0x40, 0x9A, 0x8C, 0xEA, 0x2E, 0x2A, 0xE8, 0x6A,
 0x58, 0xEB, 0x87, 0x40, 0x3B, 0x4C, 0x12, 0xEB,
-0x71, 0xE4, 0x00, 0x18, 0xE8, 0xD7, 0x16, 0x22,
+0x71, 0xE4, 0x00, 0x18, 0x9E, 0xD7, 0x16, 0x22,
 0xC1, 0xF6, 0x42, 0xA0, 0x10, 0x6B, 0x01, 0x4A,
 0xC1, 0xF6, 0x42, 0xC0, 0xC1, 0xF6, 0x42, 0xA0,
 0x6E, 0xEA, 0x02, 0x2A, 0xC1, 0xF6, 0x42, 0xC0,
@@ -48100,8 +47882,8 @@ u8 array_mp_8821c_fw_wowlan[] = {
 0x0F, 0x72, 0x0B, 0x60, 0x10, 0xF0, 0x30, 0x68,
 0x00, 0xF0, 0x00, 0x48, 0xC1, 0xF6, 0x42, 0xA0,
 0xC1, 0xF6, 0x83, 0xA0, 0xFF, 0x4A, 0x8E, 0xEA,
-0x09, 0x2A, 0x10, 0xF0, 0x24, 0x6A, 0x16, 0xF5,
-0x7C, 0x9A, 0xFF, 0x6A, 0x80, 0xA3, 0x8C, 0xEA,
+0x09, 0x2A, 0x10, 0xF0, 0x24, 0x6A, 0x36, 0xF3,
+0x78, 0x9A, 0xFF, 0x6A, 0x80, 0xA3, 0x8C, 0xEA,
 0x40, 0xC3, 0xA7, 0x10, 0x23, 0xA5, 0xC1, 0xF6,
 0x45, 0xA0, 0xFF, 0x6B, 0x04, 0x49, 0x6C, 0xE9,
 0x1F, 0x2A, 0xE8, 0x6A, 0x58, 0xEC, 0x30, 0xF0,
@@ -48145,37 +47927,17 @@ u8 array_mp_8821c_fw_wowlan[] = {
 0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A,
 0x80, 0xF0, 0x6C, 0x9A, 0x8D, 0xEB, 0x80, 0xF0,
 0x6C, 0xDA, 0x07, 0x97, 0x06, 0x91, 0x05, 0x90,
-0x04, 0x63, 0x00, 0xEF, 0xFC, 0x63, 0x07, 0x62,
-0x06, 0xD1, 0x05, 0xD0, 0xFF, 0xF7, 0x1F, 0x68,
-0x0C, 0xED, 0x08, 0xD4, 0xA0, 0xCC, 0x08, 0x92,
-0xCC, 0xE8, 0x22, 0x67, 0x01, 0xCA, 0x04, 0x49,
-0x0B, 0x27, 0x0A, 0x20, 0x30, 0xF0, 0x20, 0x6A,
-0x4E, 0xF2, 0x50, 0x9A, 0xFF, 0x6E, 0x91, 0x67,
-0xA7, 0x67, 0x0C, 0xEE, 0x40, 0xEA, 0x05, 0xE1,
-0x08, 0x92, 0x07, 0x97, 0x05, 0x90, 0x47, 0xE1,
-0xFF, 0xF7, 0x1F, 0x6A, 0x2C, 0xEA, 0x06, 0x91,
-0x04, 0x63, 0x00, 0xEF, 0xDF, 0x63, 0x41, 0x62,
-0x40, 0xD1, 0x3F, 0xD0, 0x30, 0xF0, 0x20, 0x6A,
-0x4E, 0xF2, 0x4C, 0x9A, 0xFF, 0x68, 0xCC, 0xE8,
-0x24, 0x67, 0x43, 0xD5, 0x04, 0x04, 0x00, 0x6D,
-0xE8, 0x6E, 0x40, 0xEA, 0x01, 0x6A, 0x7D, 0x67,
-0x4B, 0xEA, 0x50, 0xC3, 0x1B, 0x6A, 0x52, 0xC3,
-0x44, 0x40, 0x53, 0xC3, 0x30, 0xF0, 0x20, 0x6A,
-0x43, 0x95, 0x4E, 0xF2, 0x50, 0x9A, 0xD0, 0x67,
-0x05, 0xD1, 0x06, 0x04, 0x40, 0xEA, 0x30, 0xF0,
-0x20, 0x6A, 0xAE, 0xF2, 0x5C, 0x9A, 0x04, 0x04,
-0x40, 0xEA, 0x41, 0x97, 0x40, 0x91, 0x3F, 0x90,
-0x21, 0x63, 0x00, 0xEF, 0xFD, 0x63, 0x05, 0x62,
-0x04, 0xD0, 0x10, 0xF0, 0x24, 0x6B, 0x76, 0xF4,
-0x7C, 0x9B, 0x10, 0xF0, 0x23, 0x6A, 0x0C, 0xF3,
-0x05, 0x4A, 0x30, 0xF0, 0x20, 0x68, 0x40, 0xDB,
+0x04, 0x63, 0x00, 0xEF, 0xFD, 0x63, 0x05, 0x62,
+0x04, 0xD0, 0x10, 0xF0, 0x24, 0x6B, 0x96, 0xF2,
+0x78, 0x9B, 0x10, 0xF0, 0x23, 0x6A, 0x2C, 0xF1,
+0x1D, 0x4A, 0x30, 0xF0, 0x20, 0x68, 0x40, 0xDB,
 0xCF, 0xF4, 0x00, 0x48, 0xA0, 0xF0, 0x8E, 0xA0,
 0xA0, 0xF0, 0x4F, 0xA0, 0x8E, 0xEA, 0x3D, 0x22,
-0x10, 0xF0, 0x24, 0x6A, 0xF6, 0xF7, 0x4C, 0x9A,
-0x10, 0xF0, 0x24, 0x6B, 0x36, 0xF5, 0x78, 0x9B,
+0x10, 0xF0, 0x24, 0x6A, 0x16, 0xF6, 0x48, 0x9A,
+0x10, 0xF0, 0x24, 0x6B, 0x56, 0xF3, 0x74, 0x9B,
 0x40, 0x9A, 0x6C, 0xEA, 0x32, 0x2A, 0x47, 0x40,
 0x90, 0x34, 0x07, 0x4A, 0x91, 0xE2, 0x00, 0x18,
-0x8D, 0xD7, 0x0B, 0x2A, 0x30, 0xF0, 0x20, 0x6A,
+0x43, 0xD7, 0x0B, 0x2A, 0x30, 0xF0, 0x20, 0x6A,
 0xC0, 0xF1, 0x08, 0x4A, 0x80, 0xF0, 0x6C, 0x9A,
 0x04, 0x6C, 0x8D, 0xEB, 0x80, 0xF0, 0x6C, 0xDA,
 0x22, 0x10, 0xA0, 0xF0, 0x4E, 0xA0, 0x01, 0x4A,
@@ -48186,16 +47948,16 @@ u8 array_mp_8821c_fw_wowlan[] = {
 0x80, 0xF0, 0x6C, 0xDA, 0x30, 0xF0, 0x20, 0x6A,
 0xCF, 0xF4, 0x00, 0x4A, 0xA0, 0xF0, 0x6E, 0xA2,
 0x0A, 0x6C, 0x8E, 0xEB, 0x02, 0x2B, 0xA0, 0xF0,
-0x6E, 0xC2, 0x00, 0x18, 0x24, 0xD9, 0x05, 0x97,
+0x6E, 0xC2, 0x00, 0x18, 0xB2, 0xD8, 0x05, 0x97,
 0x04, 0x90, 0x03, 0x63, 0x00, 0xEF, 0x00, 0x65,
 0xFB, 0x63, 0x09, 0x62, 0x08, 0xD0, 0x10, 0xF0,
-0x24, 0x6A, 0x16, 0xF5, 0x78, 0x9A, 0x10, 0xF0,
-0x24, 0x6C, 0xD6, 0xF4, 0x1C, 0x9C, 0x40, 0x9B,
+0x24, 0x6A, 0x36, 0xF3, 0x74, 0x9A, 0x10, 0xF0,
+0x24, 0x6C, 0xF6, 0xF2, 0x18, 0x9C, 0x40, 0x9B,
 0x00, 0xF4, 0x1D, 0x6C, 0x10, 0x6D, 0x0D, 0xEA,
 0x40, 0xDB, 0x06, 0x02, 0x04, 0xD2, 0x30, 0xF0,
 0x20, 0x6A, 0xAE, 0xF4, 0x54, 0x9A, 0x00, 0x6E,
 0x82, 0xF3, 0x08, 0x6F, 0x40, 0xEA, 0x07, 0x2A,
-0x10, 0xF0, 0x24, 0x6B, 0x16, 0xF5, 0x9C, 0x9B,
+0x10, 0xF0, 0x24, 0x6B, 0x36, 0xF3, 0x98, 0x9B,
 0x60, 0x9C, 0x0D, 0xEB, 0x60, 0xDC, 0x09, 0x97,
 0x08, 0x90, 0x05, 0x63, 0x00, 0xEF, 0x00, 0x65,
 0x60, 0xA4, 0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1,
@@ -48216,12 +47978,12 @@ u8 array_mp_8821c_fw_wowlan[] = {
 0x88, 0xF3, 0x6A, 0xCA, 0x07, 0x97, 0x06, 0x91,
 0x05, 0x90, 0x04, 0x63, 0x00, 0xEF, 0x00, 0x65,
 0xFB, 0x63, 0x09, 0x62, 0x08, 0xD1, 0x07, 0xD0,
-0x10, 0xF0, 0x24, 0x6A, 0xF6, 0xF7, 0x50, 0x9A,
+0x10, 0xF0, 0x24, 0x6A, 0x16, 0xF6, 0x4C, 0x9A,
 0x60, 0xA2, 0x03, 0x6A, 0x6C, 0xEA, 0x10, 0x6B,
 0x64, 0xEA, 0xFF, 0x6A, 0x4C, 0xEB, 0x10, 0xF0,
-0x24, 0x6A, 0xF6, 0xF7, 0x54, 0x9A, 0x04, 0xD3,
+0x24, 0x6A, 0x16, 0xF6, 0x50, 0x9A, 0x04, 0xD3,
 0x40, 0x9A, 0x05, 0xD2, 0x10, 0xF0, 0x24, 0x6A,
-0xF6, 0xF7, 0x58, 0x9A, 0x00, 0x9A, 0x05, 0x92,
+0x16, 0xF6, 0x54, 0x9A, 0x00, 0x9A, 0x05, 0x92,
 0x0A, 0xEA, 0x00, 0xF1, 0x05, 0x60, 0x30, 0xF0,
 0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A, 0x80, 0xF0,
 0x6C, 0x9A, 0x02, 0x6C, 0x8D, 0xEB, 0x80, 0xF0,
@@ -48231,10 +47993,10 @@ u8 array_mp_8821c_fw_wowlan[] = {
 0x10, 0xF0, 0x30, 0x69, 0x00, 0xF0, 0x00, 0x49,
 0xC1, 0xF7, 0x86, 0xA1, 0xC1, 0xF7, 0x47, 0xA1,
 0x6F, 0x44, 0x4E, 0xEB, 0x0A, 0x2B, 0x10, 0xF0,
-0x24, 0x6A, 0x16, 0xF5, 0x7C, 0x9A, 0xFF, 0x6C,
+0x24, 0x6A, 0x36, 0xF3, 0x78, 0x9A, 0xFF, 0x6C,
 0x01, 0x4C, 0x40, 0x9B, 0x8D, 0xEA, 0x40, 0xDB,
-0xDB, 0x10, 0x10, 0xF0, 0x24, 0x6B, 0xF6, 0xF5,
-0xB8, 0x9B, 0x7F, 0x6B, 0xB5, 0xE0, 0xC0, 0xA5,
+0xDB, 0x10, 0x10, 0xF0, 0x24, 0x6B, 0x16, 0xF4,
+0xB4, 0x9B, 0x7F, 0x6B, 0xB5, 0xE0, 0xC0, 0xA5,
 0x6C, 0xEE, 0x80, 0xF0, 0x0C, 0x2E, 0x03, 0x2C,
 0x04, 0x72, 0xC0, 0xF0, 0x0D, 0x60, 0x10, 0xF0,
 0x30, 0x6A, 0x00, 0xF0, 0x00, 0x4A, 0xC1, 0xF7,
@@ -48266,13 +48028,13 @@ u8 array_mp_8821c_fw_wowlan[] = {
 0x63, 0x24, 0x01, 0x72, 0x02, 0x61, 0x07, 0x73,
 0x5F, 0x60, 0x10, 0xF0, 0x30, 0x69, 0x00, 0xF0,
 0x00, 0x49, 0x10, 0xF0, 0x24, 0x6A, 0xC1, 0xF7,
-0x87, 0xA1, 0x16, 0xF6, 0x58, 0x9A, 0x10, 0xF0,
-0x24, 0x6D, 0x76, 0x4C, 0xF6, 0xF5, 0xB8, 0x9D,
+0x87, 0xA1, 0x36, 0xF4, 0x54, 0x9A, 0x10, 0xF0,
+0x24, 0x6D, 0x76, 0x4C, 0x16, 0xF4, 0xB4, 0x9D,
 0x49, 0xE0, 0x94, 0x34, 0x60, 0xAA, 0x91, 0xE1,
 0x30, 0xF0, 0x20, 0x6A, 0x4E, 0xF2, 0x50, 0x9A,
 0x06, 0x4C, 0xB5, 0xE0, 0x13, 0x10, 0x80, 0xA5,
 0x8C, 0xEB, 0x01, 0x73, 0x1F, 0x61, 0x10, 0xF0,
-0x24, 0x6B, 0x16, 0xF6, 0x78, 0x9B, 0x87, 0x42,
+0x24, 0x6B, 0x36, 0xF4, 0x74, 0x9B, 0x87, 0x42,
 0x6F, 0x4C, 0x6D, 0xE0, 0x30, 0xF0, 0x20, 0x6A,
 0x94, 0x34, 0x60, 0xAB, 0x4E, 0xF2, 0x50, 0x9A,
 0x91, 0xE1, 0x06, 0x4C, 0xFF, 0x6E, 0x6C, 0xEE,
@@ -48280,18 +48042,18 @@ u8 array_mp_8821c_fw_wowlan[] = {
 0x01, 0x4A, 0xC1, 0xF7, 0x47, 0xC1, 0xC1, 0xF7,
 0x47, 0xA1, 0x6E, 0xEA, 0x0E, 0x2A, 0xC1, 0xF7,
 0x47, 0xC1, 0x0B, 0x10, 0x10, 0xF0, 0x24, 0x6A,
-0x16, 0xF5, 0x7C, 0x9A, 0x10, 0xF0, 0x24, 0x6C,
-0xB6, 0xF5, 0x90, 0x9C, 0x40, 0x9B, 0x8D, 0xEA,
-0x40, 0xDB, 0x10, 0xF0, 0x24, 0x6A, 0xF6, 0xF7,
-0x5C, 0x9A, 0x04, 0x93, 0x40, 0x9A, 0x0E, 0xEA,
+0x36, 0xF3, 0x78, 0x9A, 0x10, 0xF0, 0x24, 0x6C,
+0xD6, 0xF3, 0x8C, 0x9C, 0x40, 0x9B, 0x8D, 0xEA,
+0x40, 0xDB, 0x10, 0xF0, 0x24, 0x6A, 0x16, 0xF6,
+0x58, 0x9A, 0x04, 0x93, 0x40, 0x9A, 0x0E, 0xEA,
 0x61, 0xE0, 0x05, 0x2A, 0x10, 0xF0, 0x24, 0x6A,
-0x17, 0xF0, 0x40, 0x9A, 0x00, 0x9A, 0x10, 0xF0,
-0x24, 0x6A, 0xF6, 0xF7, 0x58, 0x9A, 0x00, 0xDA,
+0x16, 0xF6, 0x5C, 0x9A, 0x00, 0x9A, 0x10, 0xF0,
+0x24, 0x6A, 0x16, 0xF6, 0x54, 0x9A, 0x00, 0xDA,
 0x05, 0x92, 0x4A, 0xE8, 0x1F, 0xF7, 0x05, 0x61,
 0x09, 0x97, 0x08, 0x91, 0x07, 0x90, 0x05, 0x63,
 0x00, 0xEF, 0x00, 0x65, 0xFE, 0x63, 0x03, 0xD1,
-0x02, 0xD0, 0x10, 0xF0, 0x24, 0x6A, 0x17, 0xF0,
-0x44, 0x9A, 0x0F, 0x6B, 0x40, 0xA2, 0x4C, 0xEB,
+0x02, 0xD0, 0x10, 0xF0, 0x24, 0x6A, 0x36, 0xF6,
+0x40, 0x9A, 0x0F, 0x6B, 0x40, 0xA2, 0x4C, 0xEB,
 0x0A, 0x23, 0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1,
 0x08, 0x4A, 0x80, 0xF0, 0x8C, 0x9A, 0x02, 0x6D,
 0xAD, 0xEC, 0x80, 0xF0, 0x8C, 0xDA, 0x10, 0xF0,
@@ -48301,7 +48063,7 @@ u8 array_mp_8821c_fw_wowlan[] = {
 0x41, 0xA2, 0x07, 0x72, 0x09, 0x60, 0x10, 0xF0,
 0x30, 0x6A, 0x00, 0xF0, 0x00, 0x4A, 0x40, 0xF0,
 0x01, 0xA2, 0x01, 0x94, 0x8A, 0xE8, 0x0A, 0x61,
-0x10, 0xF0, 0x24, 0x6A, 0x16, 0xF5, 0x7C, 0x9A,
+0x10, 0xF0, 0x24, 0x6A, 0x36, 0xF3, 0x78, 0x9A,
 0xFF, 0x6C, 0x01, 0x4C, 0x40, 0x9B, 0x8D, 0xEA,
 0x40, 0xDB, 0xCC, 0x10, 0x30, 0xF0, 0x21, 0x6D,
 0xD0, 0xF3, 0x82, 0xA5, 0xC3, 0x67, 0xC7, 0xEC,
@@ -48316,9 +48078,9 @@ u8 array_mp_8821c_fw_wowlan[] = {
 0x30, 0xF0, 0x21, 0x6C, 0xD0, 0xF3, 0x22, 0xA4,
 0xFF, 0x6C, 0x10, 0xF0, 0x24, 0x6E, 0x8C, 0xE9,
 0x74, 0x49, 0x28, 0x31, 0xE2, 0x67, 0x25, 0xE2,
-0xB6, 0xF4, 0xCC, 0x9E, 0x0B, 0x10, 0xD0, 0xF3,
-0x22, 0xA6, 0x10, 0xF0, 0x24, 0x6E, 0xB6, 0xF4,
-0xD0, 0x9E, 0x8C, 0xE9, 0x74, 0x49, 0x28, 0x31,
+0xD6, 0xF2, 0xC8, 0x9E, 0x0B, 0x10, 0xD0, 0xF3,
+0x22, 0xA6, 0x10, 0xF0, 0x24, 0x6E, 0xD6, 0xF2,
+0xCC, 0x9E, 0x8C, 0xE9, 0x74, 0x49, 0x28, 0x31,
 0xE2, 0x67, 0x25, 0xE2, 0xD9, 0xE1, 0xC0, 0xA6,
 0x0C, 0x31, 0xFD, 0xE1, 0xCC, 0xEC, 0x10, 0xF0,
 0x30, 0x6E, 0x00, 0xF0, 0x00, 0x4E, 0xDD, 0xE7,
@@ -48330,17 +48092,17 @@ u8 array_mp_8821c_fw_wowlan[] = {
 0xE8, 0x37, 0xFD, 0xE2, 0x2C, 0xEF, 0x0E, 0x2F,
 0x30, 0xF0, 0x21, 0x6C, 0xD0, 0xF3, 0xE2, 0xA4,
 0xFF, 0x6C, 0x10, 0xF0, 0x24, 0x6E, 0x8C, 0xEF,
-0x7C, 0x4F, 0xE8, 0x37, 0xFD, 0xE2, 0xB6, 0xF4,
-0xCC, 0x9E, 0x0A, 0x10, 0xD0, 0xF3, 0xE2, 0xA6,
-0x10, 0xF0, 0x24, 0x6E, 0xB6, 0xF4, 0xD0, 0x9E,
+0x7C, 0x4F, 0xE8, 0x37, 0xFD, 0xE2, 0xD6, 0xF2,
+0xC8, 0x9E, 0x0A, 0x10, 0xD0, 0xF3, 0xE2, 0xA6,
+0x10, 0xF0, 0x24, 0x6E, 0xD6, 0xF2, 0xCC, 0x9E,
 0x8C, 0xEF, 0x7C, 0x4F, 0xE8, 0x37, 0xFD, 0xE2,
 0xD9, 0xE7, 0xC0, 0xA6, 0x01, 0x4A, 0x04, 0x72,
 0xCC, 0xEC, 0x80, 0xC5, 0x01, 0x4D, 0x8D, 0x61,
 0x30, 0xF0, 0x21, 0x6A, 0xD0, 0xF3, 0xA2, 0xA2,
 0x01, 0x6C, 0xC4, 0x67, 0xC4, 0xED, 0xCF, 0xED,
 0xD0, 0xF3, 0xC2, 0xA2, 0xAC, 0xEB, 0xFF, 0x6D,
-0x84, 0xEE, 0x10, 0xF0, 0x24, 0x6E, 0x17, 0xF0,
-0xC4, 0x9E, 0xAC, 0xEC, 0x80, 0xC6, 0xD0, 0xF3,
+0x84, 0xEE, 0x10, 0xF0, 0x24, 0x6E, 0x36, 0xF6,
+0xC0, 0x9E, 0xAC, 0xEC, 0x80, 0xC6, 0xD0, 0xF3,
 0x82, 0xA2, 0xAC, 0xEC, 0x01, 0x4C, 0xAC, 0xEC,
 0xD0, 0xF3, 0x82, 0xC2, 0xD0, 0xF3, 0xA2, 0xA2,
 0x03, 0x6C, 0xAC, 0xEC, 0xD0, 0xF3, 0x82, 0xC2,
@@ -48348,27 +48110,27 @@ u8 array_mp_8821c_fw_wowlan[] = {
 0x40, 0xF0, 0x81, 0xA2, 0x08, 0x6D, 0x01, 0x4C,
 0x40, 0xF0, 0x81, 0xC2, 0x40, 0xF0, 0x81, 0xA2,
 0xAE, 0xEC, 0x1A, 0x2C, 0x40, 0xF0, 0x81, 0xC2,
-0x17, 0x10, 0x10, 0xF0, 0x24, 0x6A, 0x16, 0xF5,
-0x9C, 0x9A, 0x02, 0x6E, 0x40, 0x9C, 0xCD, 0xEA,
-0x40, 0xDC, 0x10, 0xF0, 0x24, 0x6A, 0x17, 0xF0,
-0x48, 0x9A, 0x60, 0xC2, 0xD0, 0xF3, 0x62, 0xA5,
+0x17, 0x10, 0x10, 0xF0, 0x24, 0x6A, 0x36, 0xF3,
+0x98, 0x9A, 0x02, 0x6E, 0x40, 0x9C, 0xCD, 0xEA,
+0x40, 0xDC, 0x10, 0xF0, 0x24, 0x6A, 0x36, 0xF6,
+0x44, 0x9A, 0x60, 0xC2, 0xD0, 0xF3, 0x62, 0xA5,
 0xFF, 0x6A, 0x4C, 0xEB, 0x10, 0xF0, 0x24, 0x6A,
-0x17, 0xF0, 0x4C, 0x9A, 0x60, 0xC2, 0x02, 0x10,
+0x36, 0xF6, 0x48, 0x9A, 0x60, 0xC2, 0x02, 0x10,
 0x1F, 0xF7, 0x19, 0x2B, 0x03, 0x91, 0x02, 0x90,
 0x02, 0x63, 0x20, 0xE8, 0xFD, 0x63, 0x05, 0x62,
-0x04, 0xD0, 0x10, 0xF0, 0x24, 0x6A, 0x37, 0xF0,
-0x50, 0x9A, 0xFF, 0x68, 0x60, 0xA2, 0x6C, 0xE8,
+0x04, 0xD0, 0x10, 0xF0, 0x24, 0x6A, 0x56, 0xF6,
+0x4C, 0x9A, 0xFF, 0x68, 0x60, 0xA2, 0x6C, 0xE8,
 0x1D, 0x20, 0x00, 0x6B, 0x60, 0xC2, 0x30, 0xF0,
 0x20, 0x6A, 0xCE, 0xF4, 0x5C, 0x9A, 0x01, 0x6C,
-0x40, 0xEA, 0x10, 0xF0, 0x24, 0x6A, 0x37, 0xF0,
-0x54, 0x9A, 0x20, 0x6B, 0x20, 0x70, 0x60, 0xC2,
+0x40, 0xEA, 0x10, 0xF0, 0x24, 0x6A, 0x56, 0xF6,
+0x50, 0x9A, 0x20, 0x6B, 0x20, 0x70, 0x60, 0xC2,
 0x0D, 0x61, 0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1,
 0x08, 0x4A, 0x10, 0xF0, 0x24, 0x6C, 0x80, 0xF0,
-0x6C, 0x9A, 0x36, 0xF5, 0x94, 0x9C, 0x8D, 0xEB,
+0x6C, 0x9A, 0x56, 0xF3, 0x90, 0x9C, 0x8D, 0xEB,
 0x80, 0xF0, 0x6C, 0xDA, 0x05, 0x97, 0x04, 0x90,
 0x03, 0x63, 0x00, 0xEF, 0xFD, 0x63, 0x05, 0x62,
-0x00, 0x1C, 0x96, 0x45, 0x00, 0x18, 0x4E, 0xE0,
-0x05, 0x6C, 0x01, 0x6D, 0x00, 0x18, 0x33, 0xD5,
+0x00, 0x1C, 0x96, 0x45, 0x00, 0x18, 0xDC, 0xDF,
+0x05, 0x6C, 0x01, 0x6D, 0x00, 0x18, 0xE9, 0xD4,
 0x00, 0x65, 0x00, 0x65, 0x00, 0x65, 0x00, 0x65,
 0x00, 0x65, 0x00, 0x65, 0x00, 0x65, 0x00, 0x65,
 0x00, 0x65, 0x00, 0x65, 0x00, 0x65, 0x00, 0x65,
@@ -48423,20 +48185,20 @@ u8 array_mp_8821c_fw_wowlan[] = {
 0x6C, 0xEA, 0x02, 0x6B, 0x6B, 0xEB, 0x6C, 0xEA,
 0xEB, 0xF6, 0x60, 0xA0, 0x68, 0xF3, 0x59, 0xC0,
 0x04, 0x6A, 0x6C, 0xEA, 0xFF, 0x6B, 0x6C, 0xEA,
-0x18, 0x22, 0x10, 0xF0, 0x24, 0x6A, 0x37, 0xF0,
-0x58, 0x9A, 0xEB, 0xF6, 0xCC, 0x98, 0x00, 0x6B,
-0x40, 0x9A, 0x10, 0xF0, 0x24, 0x6A, 0xD6, 0xF4,
-0x54, 0x9A, 0x10, 0xF0, 0x24, 0x6C, 0x54, 0xF0,
-0x05, 0x4C, 0x40, 0x9A, 0xA3, 0x67, 0x01, 0x6F,
-0x5B, 0xE6, 0x04, 0xD3, 0x00, 0x18, 0xE2, 0xE6,
-0x5B, 0x10, 0x00, 0x18, 0x11, 0xE8, 0x58, 0x10,
+0x18, 0x22, 0x10, 0xF0, 0x24, 0x6A, 0x56, 0xF6,
+0x54, 0x9A, 0xEB, 0xF6, 0xCC, 0x98, 0x00, 0x6B,
+0x40, 0x9A, 0x10, 0xF0, 0x24, 0x6A, 0xF6, 0xF2,
+0x50, 0x9A, 0x10, 0xF0, 0x24, 0x6C, 0x73, 0xF6,
+0x01, 0x4C, 0x40, 0x9A, 0xA3, 0x67, 0x01, 0x6F,
+0x5B, 0xE6, 0x04, 0xD3, 0x00, 0x18, 0x69, 0xE6,
+0x5B, 0x10, 0x00, 0x18, 0x98, 0xE7, 0x58, 0x10,
 0x30, 0xF0, 0x20, 0x6A, 0xEE, 0xF4, 0x54, 0x9A,
 0x30, 0xF0, 0x20, 0x69, 0xCF, 0xF4, 0x00, 0x49,
 0x40, 0xEA, 0xEB, 0xF6, 0xB2, 0xA8, 0x00, 0x6C,
-0x00, 0x18, 0xBB, 0xE7, 0x80, 0xF2, 0x94, 0xA1,
-0x00, 0x18, 0xC9, 0xE9, 0x80, 0xF2, 0x94, 0xA1,
-0x00, 0x18, 0xB8, 0xE9, 0x80, 0xF2, 0x94, 0xA1,
-0x00, 0x18, 0xD0, 0xE9, 0x68, 0xF3, 0x79, 0xA0,
+0x00, 0x18, 0x42, 0xE7, 0x80, 0xF2, 0x94, 0xA1,
+0x00, 0x18, 0x50, 0xE9, 0x80, 0xF2, 0x94, 0xA1,
+0x00, 0x18, 0x3F, 0xE9, 0x80, 0xF2, 0x94, 0xA1,
+0x00, 0x18, 0x57, 0xE9, 0x68, 0xF3, 0x79, 0xA0,
 0x20, 0x6A, 0x08, 0x6C, 0x6D, 0xEA, 0x68, 0xF3,
 0x59, 0xC0, 0x30, 0xF0, 0x20, 0x6A, 0x2E, 0xF4,
 0x48, 0x9A, 0x80, 0xF2, 0xD4, 0xA1, 0x00, 0x6D,
@@ -48456,12 +48218,12 @@ u8 array_mp_8821c_fw_wowlan[] = {
 0x00, 0xEF, 0x00, 0x65, 0xFD, 0x63, 0x05, 0x62,
 0xFF, 0x6A, 0x4C, 0xEC, 0x68, 0x44, 0xFA, 0x4B,
 0x4C, 0xEB, 0x04, 0x5B, 0x03, 0x60, 0x80, 0x18,
-0x22, 0x14, 0x3D, 0x10, 0xFE, 0x4C, 0x4C, 0xEC,
+0xEE, 0x13, 0x3D, 0x10, 0xFE, 0x4C, 0x4C, 0xEC,
 0x0C, 0x5C, 0x2D, 0x60, 0x10, 0xF0, 0x24, 0x6A,
-0x88, 0x34, 0x56, 0xF3, 0x14, 0x4A, 0x89, 0xE2,
+0x88, 0x34, 0x76, 0xF1, 0x10, 0x4A, 0x89, 0xE2,
 0x40, 0x9A, 0x00, 0xEA, 0x30, 0xF0, 0x20, 0x6A,
 0xCE, 0xF5, 0x48, 0x9A, 0x08, 0x10, 0x85, 0x67,
-0x00, 0x18, 0xD1, 0xE7, 0x28, 0x10, 0x30, 0xF0,
+0x00, 0x18, 0x58, 0xE7, 0x28, 0x10, 0x30, 0xF0,
 0x20, 0x6A, 0xEE, 0xF5, 0x44, 0x9A, 0x85, 0x67,
 0x40, 0xEA, 0x21, 0x10, 0x30, 0xF0, 0x20, 0x6A,
 0xCE, 0xF5, 0x54, 0x9A, 0x40, 0xEA, 0x1B, 0x10,
@@ -48469,27 +48231,27 @@ u8 array_mp_8821c_fw_wowlan[] = {
 0xF2, 0x17, 0x30, 0xF0, 0x20, 0x6A, 0xCE, 0xF5,
 0x5C, 0x9A, 0xED, 0x17, 0x30, 0xF0, 0x20, 0x6A,
 0xEE, 0xF5, 0x40, 0x9A, 0xE8, 0x17, 0x10, 0xF0,
-0x24, 0x6A, 0x16, 0xF5, 0x7C, 0x9A, 0x10, 0xF0,
-0x24, 0x6C, 0x36, 0xF5, 0x94, 0x9C, 0x40, 0x9B,
+0x24, 0x6A, 0x36, 0xF3, 0x78, 0x9A, 0x10, 0xF0,
+0x24, 0x6C, 0x56, 0xF3, 0x90, 0x9C, 0x40, 0x9B,
 0x8D, 0xEA, 0x40, 0xDB, 0xFF, 0x6A, 0x05, 0x97,
 0x03, 0x63, 0x00, 0xEF, 0xFA, 0x63, 0x0B, 0x62,
 0x0A, 0xD1, 0x09, 0xD0, 0x60, 0xA4, 0x01, 0x6A,
 0x04, 0x67, 0x4C, 0xEB, 0x68, 0x23, 0x61, 0xA4,
 0x08, 0x5B, 0x17, 0x60, 0x10, 0xF0, 0x24, 0x6C,
-0x37, 0xF0, 0xBC, 0x9C, 0xC7, 0x43, 0x22, 0x67,
+0x56, 0xF6, 0xB8, 0x9C, 0xC7, 0x43, 0x22, 0x67,
 0xE0, 0x9D, 0x10, 0x4B, 0x01, 0x4E, 0x82, 0x67,
 0x24, 0xEB, 0x84, 0xEE, 0x71, 0x67, 0xED, 0xEB,
 0x8F, 0xEC, 0x6C, 0xEC, 0x60, 0xA0, 0x66, 0x33,
 0x4C, 0xEB, 0x64, 0xEE, 0x6D, 0xEC, 0x80, 0xDD,
-0x15, 0x10, 0x10, 0xF0, 0x24, 0x6C, 0x57, 0xF0,
-0xC0, 0x9C, 0x87, 0x43, 0x01, 0x4C, 0xA0, 0x9E,
+0x15, 0x10, 0x10, 0xF0, 0x24, 0x6C, 0x56, 0xF6,
+0xDC, 0x9C, 0x87, 0x43, 0x01, 0x4C, 0xA0, 0x9E,
 0xE2, 0x67, 0xE4, 0xEC, 0x87, 0x67, 0xAD, 0xEC,
 0xA2, 0x67, 0xA4, 0xEB, 0xAF, 0xED, 0xAC, 0xEC,
 0xA0, 0xA0, 0xA6, 0x35, 0x4C, 0xED, 0xA4, 0xEB,
 0xAD, 0xEC, 0x80, 0xDE, 0x41, 0xA0, 0x08, 0x5A,
-0x07, 0x60, 0x10, 0xF0, 0x24, 0x6B, 0x37, 0xF0,
-0x9C, 0x9B, 0x08, 0x4A, 0xA0, 0x9C, 0x05, 0x10,
-0x10, 0xF0, 0x24, 0x6B, 0x57, 0xF0, 0x80, 0x9B,
+0x07, 0x60, 0x10, 0xF0, 0x24, 0x6B, 0x56, 0xF6,
+0x98, 0x9B, 0x08, 0x4A, 0xA0, 0x9C, 0x05, 0x10,
+0x10, 0xF0, 0x24, 0x6B, 0x56, 0xF6, 0x9C, 0x9B,
 0xA0, 0x9C, 0x01, 0x6B, 0x64, 0xEA, 0xAE, 0xEB,
 0x60, 0xDC, 0x80, 0xA0, 0x00, 0x6D, 0x92, 0x34,
 0x00, 0x18, 0xE2, 0xC5, 0x80, 0xA0, 0x01, 0x6D,
@@ -48515,14 +48277,14 @@ u8 array_mp_8821c_fw_wowlan[] = {
 0x59, 0xC0, 0x66, 0xA1, 0x03, 0x6C, 0xB6, 0x35,
 0x76, 0x33, 0x8C, 0xEB, 0x74, 0x34, 0x61, 0x6B,
 0x6B, 0xEB, 0x4C, 0xEB, 0x8D, 0xEB, 0x91, 0x67,
-0xC8, 0xF3, 0x79, 0xC0, 0x00, 0x18, 0x50, 0xCD,
+0xC8, 0xF3, 0x79, 0xC0, 0x00, 0x18, 0x41, 0xCD,
 0x68, 0xF3, 0x58, 0xA0, 0x0C, 0x72, 0x04, 0x61,
-0x00, 0x6C, 0x01, 0x6D, 0x00, 0x18, 0x25, 0xD7,
+0x00, 0x6C, 0x01, 0x6D, 0x00, 0x18, 0xDB, 0xD6,
 0x07, 0x97, 0x06, 0x91, 0x05, 0x90, 0x04, 0x63,
 0x00, 0xEF, 0x00, 0x65, 0xF9, 0x63, 0x0D, 0x62,
 0x0C, 0xD1, 0x0B, 0xD0, 0x10, 0xF0, 0x24, 0x6B,
-0x76, 0xF4, 0x7C, 0x9B, 0x10, 0xF0, 0x23, 0x6A,
-0x0D, 0xF6, 0x15, 0x4A, 0x08, 0xD4, 0x40, 0xDB,
+0x96, 0xF2, 0x78, 0x9B, 0x10, 0xF0, 0x23, 0x6A,
+0x4D, 0xF4, 0x0D, 0x4A, 0x08, 0xD4, 0x40, 0xDB,
 0x41, 0xA4, 0x24, 0x67, 0x06, 0xD2, 0x60, 0xA4,
 0x02, 0x6A, 0x6C, 0xEA, 0x06, 0x93, 0x07, 0xD3,
 0x02, 0x22, 0x42, 0xA4, 0x07, 0xD2, 0x06, 0x90,
@@ -48538,8 +48300,8 @@ u8 array_mp_8821c_fw_wowlan[] = {
 0x06, 0x92, 0x8E, 0xEA, 0x22, 0x2A, 0x30, 0xF0,
 0x20, 0x6A, 0x6E, 0xF5, 0x58, 0x9A, 0x40, 0xEA,
 0x1C, 0x2A, 0x30, 0xF0, 0x20, 0x68, 0xC0, 0xF1,
-0x08, 0x48, 0x00, 0x18, 0x73, 0xEA, 0x68, 0xF3,
-0x97, 0xA0, 0x96, 0x34, 0x00, 0x18, 0x03, 0xCA,
+0x08, 0x48, 0x00, 0x18, 0xFA, 0xE9, 0x68, 0xF3,
+0x97, 0xA0, 0x96, 0x34, 0x00, 0x18, 0xF4, 0xC9,
 0x68, 0xF3, 0x79, 0xA0, 0x05, 0x6A, 0x4B, 0xEA,
 0x6C, 0xEA, 0x68, 0xF3, 0x7A, 0xA0, 0x68, 0xF3,
 0x59, 0xC0, 0x02, 0x6A, 0x4B, 0xEA, 0x6C, 0xEA,
@@ -48547,16 +48309,16 @@ u8 array_mp_8821c_fw_wowlan[] = {
 0x5A, 0xC0, 0x30, 0xF0, 0x20, 0x6A, 0x60, 0xA1,
 0xCC, 0xF1, 0x50, 0xA2, 0x72, 0x34, 0x15, 0x2A,
 0x04, 0x6A, 0x6C, 0xEA, 0xFF, 0x6B, 0x6C, 0xEA,
-0x10, 0x22, 0x10, 0xF0, 0x24, 0x6A, 0x57, 0xF0,
-0x44, 0x9A, 0x00, 0x6B, 0x60, 0xC2, 0x10, 0xF0,
-0x24, 0x6A, 0x57, 0xF0, 0x68, 0x9A, 0x10, 0xF0,
-0x24, 0x6A, 0x76, 0xF4, 0x5C, 0x9A, 0x60, 0xDA,
+0x10, 0x22, 0x10, 0xF0, 0x24, 0x6A, 0x76, 0xF6,
+0x40, 0x9A, 0x00, 0x6B, 0x60, 0xC2, 0x10, 0xF0,
+0x24, 0x6A, 0x76, 0xF6, 0x64, 0x9A, 0x10, 0xF0,
+0x24, 0x6A, 0x96, 0xF2, 0x58, 0x9A, 0x60, 0xDA,
 0xF0, 0x17, 0x05, 0x74, 0x15, 0x61, 0x30, 0xF0,
 0x20, 0x6A, 0xCC, 0xF1, 0x52, 0xA2, 0x10, 0x2A,
-0x10, 0xF0, 0x24, 0x6A, 0x57, 0xF0, 0x44, 0x9A,
+0x10, 0xF0, 0x24, 0x6A, 0x76, 0xF6, 0x40, 0x9A,
 0x00, 0x6B, 0x60, 0xC2, 0x10, 0xF0, 0x24, 0x6A,
-0x57, 0xF0, 0x6C, 0x9A, 0x10, 0xF0, 0x24, 0x6A,
-0x76, 0xF4, 0x5C, 0x9A, 0x60, 0xDA, 0xF0, 0x17,
+0x76, 0xF6, 0x68, 0x9A, 0x10, 0xF0, 0x24, 0x6A,
+0x96, 0xF2, 0x58, 0x9A, 0x60, 0xDA, 0xF0, 0x17,
 0x63, 0xA1, 0x07, 0x6A, 0x01, 0x6C, 0x6C, 0xEA,
 0x60, 0xA1, 0x8C, 0xEB, 0x1E, 0x2B, 0x30, 0xF0,
 0x20, 0x6B, 0xC0, 0xF1, 0x08, 0x4B, 0x69, 0xF3,
@@ -48576,10 +48338,10 @@ u8 array_mp_8821c_fw_wowlan[] = {
 0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A,
 0x69, 0xF3, 0x88, 0xA2, 0x02, 0x6B, 0x8C, 0xEB,
 0x1C, 0x23, 0x03, 0x6B, 0x6B, 0xEB, 0x8C, 0xEB,
-0x69, 0xF3, 0x68, 0xC2, 0x00, 0x18, 0x22, 0xE6,
+0x69, 0xF3, 0x68, 0xC2, 0x00, 0x18, 0xA9, 0xE5,
 0x04, 0xD2, 0x30, 0xF0, 0x20, 0x6A, 0x04, 0x93,
 0x4F, 0xF6, 0x54, 0x9A, 0x6E, 0xEA, 0x03, 0x22,
-0x04, 0x94, 0x00, 0x18, 0x43, 0xE6, 0x30, 0xF0,
+0x04, 0x94, 0x00, 0x18, 0xCA, 0xE5, 0x30, 0xF0,
 0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A, 0x69, 0xF3,
 0x88, 0xA2, 0x02, 0x6B, 0x8D, 0xEB, 0x69, 0xF3,
 0x68, 0xC2, 0x0D, 0x97, 0x0C, 0x91, 0x0B, 0x90,
@@ -48588,7 +48350,7 @@ u8 array_mp_8821c_fw_wowlan[] = {
 0xC8, 0x4B, 0x4C, 0xEB, 0x20, 0x5B, 0x05, 0x67,
 0x09, 0x60, 0x30, 0xF0, 0x20, 0x6A, 0x4F, 0xF7,
 0x5B, 0xA2, 0xA0, 0xF0, 0x11, 0x2A, 0x80, 0x18,
-0x0D, 0x14, 0xAE, 0x10, 0x2C, 0x74, 0x69, 0x60,
+0xD9, 0x13, 0xAE, 0x10, 0x2C, 0x74, 0x69, 0x60,
 0x2D, 0x5C, 0x21, 0x60, 0x1E, 0x74, 0x59, 0x60,
 0x1F, 0x5C, 0x0D, 0x60, 0x03, 0x74, 0x45, 0x60,
 0x04, 0x5C, 0x04, 0x60, 0x3A, 0x24, 0x01, 0x74,
@@ -48606,41 +48368,41 @@ u8 array_mp_8821c_fw_wowlan[] = {
 0x05, 0x60, 0x88, 0x74, 0x4A, 0x60, 0x89, 0x74,
 0x50, 0x60, 0x5F, 0x10, 0xC3, 0x74, 0x59, 0x60,
 0xC9, 0x74, 0x53, 0x60, 0x8F, 0x74, 0x4D, 0x60,
-0x58, 0x10, 0x85, 0x67, 0x00, 0x18, 0x02, 0xD9,
-0x63, 0x10, 0x85, 0x67, 0x00, 0x18, 0x85, 0xDB,
-0x5F, 0x10, 0x85, 0x67, 0x80, 0x18, 0xCC, 0x12,
-0x5B, 0x10, 0x85, 0x67, 0x80, 0x18, 0xA2, 0x07,
+0x58, 0x10, 0x85, 0x67, 0x00, 0x18, 0x90, 0xD8,
+0x63, 0x10, 0x85, 0x67, 0x00, 0x18, 0x13, 0xDB,
+0x5F, 0x10, 0x85, 0x67, 0x80, 0x18, 0x91, 0x07,
+0x5B, 0x10, 0x85, 0x67, 0x80, 0x18, 0xB5, 0x07,
 0x57, 0x10, 0x85, 0x67, 0x00, 0x18, 0x47, 0xC4,
 0x53, 0x10, 0x85, 0x67, 0x00, 0x18, 0xC4, 0xC3,
 0x4F, 0x10, 0x85, 0x67, 0x00, 0x18, 0x2D, 0xC4,
-0x4B, 0x10, 0x85, 0x67, 0x00, 0x18, 0x62, 0xDB,
+0x4B, 0x10, 0x85, 0x67, 0x00, 0x18, 0xF0, 0xDA,
 0x47, 0x10, 0x85, 0x67, 0x00, 0x18, 0xAC, 0xC4,
 0x43, 0x10, 0x85, 0x67, 0x00, 0x18, 0x79, 0xC4,
-0x3F, 0x10, 0x85, 0x67, 0x00, 0x18, 0x0F, 0xD9,
-0x3B, 0x10, 0x85, 0x67, 0x80, 0x18, 0xE4, 0x0C,
-0x37, 0x10, 0x85, 0x67, 0x80, 0x18, 0x32, 0x0C,
-0x33, 0x10, 0x85, 0x67, 0x80, 0x18, 0x76, 0x0B,
-0x2F, 0x10, 0x85, 0x67, 0x80, 0x18, 0x7C, 0x0B,
-0x2B, 0x10, 0x85, 0x67, 0x80, 0x18, 0x84, 0x0B,
-0x27, 0x10, 0x85, 0x67, 0x80, 0x18, 0x8C, 0x0B,
-0x23, 0x10, 0x85, 0x67, 0x00, 0x18, 0x40, 0xD2,
-0x1F, 0x10, 0x85, 0x67, 0x00, 0x18, 0xB5, 0xDE,
-0x1B, 0x10, 0x85, 0x67, 0x80, 0x18, 0x54, 0x0A,
-0x17, 0x10, 0x85, 0x67, 0x00, 0x18, 0x27, 0xDB,
-0x13, 0x10, 0x85, 0x67, 0x00, 0x18, 0xBF, 0xDD,
-0x0F, 0x10, 0x10, 0xF0, 0x24, 0x6A, 0x16, 0xF5,
-0x7C, 0x9A, 0x01, 0x6D, 0x40, 0x9B, 0xAD, 0xEA,
-0x40, 0xDB, 0x10, 0xF0, 0x24, 0x6A, 0x96, 0xF4,
-0x44, 0x9A, 0x80, 0xC2, 0x0E, 0x6A, 0x01, 0x10,
+0x3F, 0x10, 0x85, 0x67, 0x00, 0x18, 0x9D, 0xD8,
+0x3B, 0x10, 0x85, 0x67, 0x80, 0x18, 0xF7, 0x0C,
+0x37, 0x10, 0x85, 0x67, 0x80, 0x18, 0x45, 0x0C,
+0x33, 0x10, 0x85, 0x67, 0x80, 0x18, 0x89, 0x0B,
+0x2F, 0x10, 0x85, 0x67, 0x80, 0x18, 0x8F, 0x0B,
+0x2B, 0x10, 0x85, 0x67, 0x80, 0x18, 0x97, 0x0B,
+0x27, 0x10, 0x85, 0x67, 0x80, 0x18, 0x9F, 0x0B,
+0x23, 0x10, 0x85, 0x67, 0x00, 0x18, 0xF6, 0xD1,
+0x1F, 0x10, 0x85, 0x67, 0x00, 0x18, 0x43, 0xDE,
+0x1B, 0x10, 0x85, 0x67, 0x80, 0x18, 0x67, 0x0A,
+0x17, 0x10, 0x85, 0x67, 0x00, 0x18, 0xB5, 0xDA,
+0x13, 0x10, 0x85, 0x67, 0x00, 0x18, 0x4D, 0xDD,
+0x0F, 0x10, 0x10, 0xF0, 0x24, 0x6A, 0x36, 0xF3,
+0x78, 0x9A, 0x01, 0x6D, 0x40, 0x9B, 0xAD, 0xEA,
+0x40, 0xDB, 0x10, 0xF0, 0x24, 0x6A, 0xB6, 0xF2,
+0x40, 0x9A, 0x80, 0xC2, 0x0E, 0x6A, 0x01, 0x10,
 0x00, 0x6A, 0x40, 0xC0, 0x05, 0x97, 0x04, 0x90,
 0x03, 0x63, 0x00, 0xEF, 0xFD, 0x63, 0x05, 0x62,
-0x04, 0xD0, 0x10, 0xF0, 0x24, 0x6B, 0x76, 0xF4,
-0x7C, 0x9B, 0x10, 0xF0, 0x23, 0x6A, 0xAE, 0xF1,
-0x05, 0x4A, 0x10, 0xF0, 0x30, 0x68, 0x40, 0xDB,
+0x04, 0xD0, 0x10, 0xF0, 0x24, 0x6B, 0x96, 0xF2,
+0x78, 0x9B, 0x10, 0xF0, 0x23, 0x6A, 0xCD, 0xF7,
+0x1D, 0x4A, 0x10, 0xF0, 0x30, 0x68, 0x40, 0xDB,
 0x00, 0xF0, 0x00, 0x48, 0x40, 0xF0, 0x40, 0xA0,
 0x40, 0xF0, 0x61, 0xA0, 0x4E, 0xEB, 0x29, 0x23,
 0x4C, 0x32, 0x0D, 0xE2, 0x80, 0xA3, 0xA1, 0x42,
-0xB5, 0xE0, 0x00, 0x18, 0x05, 0xDC, 0x40, 0xF0,
+0xB5, 0xE0, 0x00, 0x18, 0x93, 0xDB, 0x40, 0xF0,
 0x40, 0xA0, 0x01, 0x4A, 0x40, 0xF0, 0x40, 0xC0,
 0x40, 0xF0, 0x60, 0xA0, 0x40, 0xF0, 0x41, 0xA0,
 0x6E, 0xEA, 0x0A, 0x22, 0x30, 0xF0, 0x20, 0x6A,
@@ -48649,43 +48411,43 @@ u8 array_mp_8821c_fw_wowlan[] = {
 0x10, 0xF0, 0x30, 0x6A, 0x00, 0xF0, 0x00, 0x4A,
 0x40, 0xF0, 0x60, 0xA2, 0x08, 0x6C, 0x8E, 0xEB,
 0x02, 0x2B, 0x40, 0xF0, 0x60, 0xC2, 0x00, 0x18,
-0xB9, 0xD9, 0x05, 0x97, 0x04, 0x90, 0x03, 0x63,
+0x47, 0xD9, 0x05, 0x97, 0x04, 0x90, 0x03, 0x63,
 0x00, 0xEF, 0x00, 0x65, 0xFD, 0x63, 0x05, 0x62,
 0x04, 0xD0, 0x10, 0xF0, 0x30, 0x68, 0x00, 0xF0,
 0x00, 0x48, 0xC1, 0xF7, 0x66, 0xA0, 0x7F, 0x6C,
 0xA7, 0x43, 0x6F, 0x4D, 0xB4, 0x35, 0xB5, 0xE0,
 0x46, 0xA5, 0x8C, 0xEA, 0x20, 0x2A, 0x74, 0x33,
 0x69, 0xE0, 0xC1, 0xF6, 0x8E, 0xA2, 0xA2, 0x67,
-0xC1, 0xF6, 0x0F, 0x4D, 0x00, 0x18, 0x05, 0xDC,
+0xC1, 0xF6, 0x0F, 0x4D, 0x00, 0x18, 0x93, 0xDB,
 0xC1, 0xF7, 0x46, 0xA0, 0x10, 0xF0, 0x24, 0x6C,
-0x57, 0xF0, 0x90, 0x9C, 0x54, 0x33, 0x6D, 0xE0,
+0x76, 0xF6, 0x8C, 0x9C, 0x54, 0x33, 0x6D, 0xE0,
 0xC1, 0xF6, 0xAC, 0xA3, 0x76, 0x4A, 0x54, 0x32,
 0xA0, 0xC4, 0xC1, 0xF6, 0x8D, 0xA3, 0x10, 0xF0,
-0x24, 0x6B, 0x57, 0xF0, 0x74, 0x9B, 0x41, 0xE0,
+0x24, 0x6B, 0x76, 0xF6, 0x70, 0x9B, 0x41, 0xE0,
 0x80, 0xC3, 0x86, 0x40, 0x49, 0x10, 0x01, 0x72,
 0x49, 0x61, 0x74, 0x33, 0x6D, 0xE0, 0xC1, 0xF6,
 0x47, 0xA3, 0xFF, 0x72, 0x0C, 0x61, 0xC1, 0xF6,
-0x88, 0xA3, 0x06, 0x4D, 0x00, 0x18, 0x01, 0xDB,
+0x88, 0xA3, 0x06, 0x4D, 0x00, 0x18, 0x8F, 0xDA,
 0xC1, 0xF7, 0x66, 0xA0, 0x74, 0x33, 0x61, 0xE0,
 0xC1, 0xF6, 0x4E, 0xC0, 0x04, 0x10, 0x01, 0x6A,
 0x4B, 0xEA, 0xC1, 0xF6, 0x4E, 0xC3, 0x10, 0xF0,
 0x30, 0x6A, 0x00, 0xF0, 0x00, 0x4A, 0xC1, 0xF7,
-0x66, 0xA2, 0x10, 0xF0, 0x24, 0x6D, 0x57, 0xF0,
-0xB0, 0x9D, 0x74, 0x34, 0x91, 0xE2, 0xC1, 0xF6,
+0x66, 0xA2, 0x10, 0xF0, 0x24, 0x6D, 0x76, 0xF6,
+0xAC, 0x9D, 0x74, 0x34, 0x91, 0xE2, 0xC1, 0xF6,
 0xCC, 0xA4, 0x76, 0x4B, 0x74, 0x33, 0xC0, 0xC5,
 0xC1, 0xF6, 0xAD, 0xA4, 0x10, 0xF0, 0x24, 0x6C,
-0x57, 0xF0, 0x94, 0x9C, 0x69, 0xE2, 0xA0, 0xC4,
+0x76, 0xF6, 0x90, 0x9C, 0x69, 0xE2, 0xA0, 0xC4,
 0x46, 0x82, 0x00, 0x52, 0x0B, 0x60, 0x10, 0xF0,
-0x24, 0x6A, 0x16, 0xF5, 0x7C, 0x9A, 0x10, 0xF0,
-0x24, 0x6C, 0xD6, 0xF4, 0x98, 0x9C, 0x40, 0x9B,
+0x24, 0x6A, 0x36, 0xF3, 0x78, 0x9A, 0x10, 0xF0,
+0x24, 0x6C, 0xF6, 0xF2, 0x94, 0x9C, 0x40, 0x9B,
 0x8D, 0xEA, 0x40, 0xDB, 0x10, 0xF0, 0x30, 0x6A,
 0x00, 0xF0, 0x00, 0x4A, 0xC1, 0xF7, 0x66, 0xA2,
 0x76, 0x4B, 0x74, 0x33, 0x69, 0xE2, 0x86, 0x42,
-0x00, 0x18, 0x74, 0xDA, 0x05, 0x97, 0x04, 0x90,
+0x00, 0x18, 0x02, 0xDA, 0x05, 0x97, 0x04, 0x90,
 0x03, 0x63, 0x00, 0xEF, 0xFD, 0x63, 0x05, 0x62,
-0x04, 0xD0, 0x10, 0xF0, 0x24, 0x6B, 0x76, 0xF4,
-0x7C, 0x9B, 0x10, 0xF0, 0x23, 0x6A, 0x2E, 0xF3,
-0x0D, 0x4A, 0x10, 0xF0, 0x30, 0x68, 0x40, 0xDB,
+0x04, 0xD0, 0x10, 0xF0, 0x24, 0x6B, 0x96, 0xF2,
+0x78, 0x9B, 0x10, 0xF0, 0x23, 0x6A, 0x6E, 0xF1,
+0x05, 0x4A, 0x10, 0xF0, 0x30, 0x68, 0x40, 0xDB,
 0x00, 0xF0, 0x00, 0x48, 0xC1, 0xF7, 0x66, 0xA0,
 0xC1, 0xF7, 0x47, 0xA0, 0x6E, 0xEA, 0x4A, 0x22,
 0x30, 0xF0, 0x20, 0x6A, 0xCF, 0xF4, 0x00, 0x4A,
@@ -48697,7 +48459,7 @@ u8 array_mp_8821c_fw_wowlan[] = {
 0x0D, 0x2C, 0x30, 0xF0, 0x20, 0x6B, 0xC0, 0xF1,
 0x08, 0x4B, 0x80, 0xF0, 0x4C, 0x9B, 0x04, 0x6C,
 0x8D, 0xEA, 0x02, 0x6C, 0x8D, 0xEA, 0x80, 0xF0,
-0x4C, 0xDB, 0x24, 0x10, 0x00, 0x18, 0x8B, 0xDC,
+0x4C, 0xDB, 0x24, 0x10, 0x00, 0x18, 0x19, 0xDC,
 0xC1, 0xF7, 0x46, 0xA0, 0x01, 0x4A, 0xC1, 0xF7,
 0x46, 0xC0, 0xC1, 0xF7, 0x66, 0xA0, 0xC1, 0xF7,
 0x47, 0xA0, 0x6E, 0xEA, 0x0A, 0x22, 0x30, 0xF0,
@@ -48706,7 +48468,7 @@ u8 array_mp_8821c_fw_wowlan[] = {
 0x6C, 0xDA, 0x10, 0xF0, 0x30, 0x6A, 0x00, 0xF0,
 0x00, 0x4A, 0xC1, 0xF7, 0x66, 0xA2, 0x08, 0x6C,
 0x8E, 0xEB, 0x02, 0x2B, 0xC1, 0xF7, 0x66, 0xC2,
-0x00, 0x18, 0x24, 0xD9, 0x05, 0x97, 0x04, 0x90,
+0x00, 0x18, 0xB2, 0xD8, 0x05, 0x97, 0x04, 0x90,
 0x03, 0x63, 0x00, 0xEF, 0xFD, 0x63, 0x05, 0x62,
 0x30, 0xF0, 0x20, 0x6A, 0xEE, 0xF4, 0x44, 0x9A,
 0xFF, 0xF7, 0x1F, 0x6B, 0x6C, 0xEC, 0x40, 0xEA,
@@ -48715,7 +48477,7 @@ u8 array_mp_8821c_fw_wowlan[] = {
 0x00, 0xEF, 0x00, 0x65, 0xFB, 0x63, 0x09, 0x62,
 0x08, 0xD1, 0x07, 0xD0, 0xE0, 0xF1, 0x14, 0x68,
 0x0A, 0xD4, 0x24, 0x67, 0x90, 0x67, 0x04, 0x05,
-0x00, 0x18, 0xFD, 0xDC, 0x7D, 0x67, 0x50, 0xA3,
+0x00, 0x18, 0x8B, 0xDC, 0x7D, 0x67, 0x50, 0xA3,
 0x01, 0x48, 0xE0, 0xF1, 0x1A, 0x70, 0x40, 0xC1,
 0x01, 0x49, 0xF4, 0x61, 0x30, 0xF0, 0x20, 0x6A,
 0xC0, 0xF1, 0x08, 0x4A, 0x0C, 0xF0, 0x6D, 0xA2,
@@ -48728,48 +48490,48 @@ u8 array_mp_8821c_fw_wowlan[] = {
 0x00, 0xEF, 0x00, 0x65, 0xFB, 0x63, 0x09, 0x62,
 0x08, 0xD1, 0x07, 0xD0, 0xE0, 0xF1, 0x10, 0x68,
 0x0A, 0xD4, 0x24, 0x67, 0x90, 0x67, 0x04, 0x05,
-0x00, 0x18, 0xFD, 0xDC, 0x7D, 0x67, 0x50, 0xA3,
+0x00, 0x18, 0x8B, 0xDC, 0x7D, 0x67, 0x50, 0xA3,
 0x01, 0x48, 0xE0, 0xF1, 0x14, 0x70, 0x40, 0xC1,
 0x01, 0x49, 0xF4, 0x61, 0xE0, 0xF1, 0x1C, 0x6C,
-0x04, 0x05, 0x00, 0x18, 0xFD, 0xDC, 0x7D, 0x67,
+0x04, 0x05, 0x00, 0x18, 0x8B, 0xDC, 0x7D, 0x67,
 0x50, 0xA3, 0x0A, 0x93, 0x44, 0xC3, 0x09, 0x97,
 0x08, 0x91, 0x07, 0x90, 0x05, 0x63, 0x00, 0xEF,
 0xFB, 0x63, 0x09, 0x62, 0x08, 0xD0, 0x04, 0x00,
-0x90, 0x67, 0x00, 0x18, 0x07, 0xDD, 0xA0, 0xF1,
+0x90, 0x67, 0x00, 0x18, 0x95, 0xDC, 0xA0, 0xF1,
 0x02, 0x6A, 0x1F, 0xF7, 0x00, 0x6B, 0x4C, 0xEB,
 0x02, 0xF0, 0x00, 0x73, 0x01, 0x60, 0x05, 0x2B,
-0x10, 0xF0, 0x24, 0x6B, 0xB6, 0xF4, 0x6C, 0x9B,
-0x04, 0x10, 0x10, 0xF0, 0x24, 0x6B, 0xB6, 0xF4,
-0x70, 0x9B, 0x80, 0xA0, 0x6D, 0xE2, 0x01, 0x4A,
+0x10, 0xF0, 0x24, 0x6B, 0xD6, 0xF2, 0x68, 0x9B,
+0x04, 0x10, 0x10, 0xF0, 0x24, 0x6B, 0xD6, 0xF2,
+0x6C, 0x9B, 0x80, 0xA0, 0x6D, 0xE2, 0x01, 0x4A,
 0xA0, 0xF1, 0x0A, 0x72, 0x80, 0xC3, 0x01, 0x48,
 0xE8, 0x61, 0x04, 0x00, 0x90, 0x67, 0x00, 0x18,
-0x21, 0xDD, 0xA0, 0xF1, 0x0A, 0x6A, 0x1F, 0xF7,
+0xAF, 0xDC, 0xA0, 0xF1, 0x0A, 0x6A, 0x1F, 0xF7,
 0x00, 0x6B, 0x4C, 0xEB, 0x02, 0xF0, 0x00, 0x73,
 0x01, 0x60, 0x05, 0x2B, 0x10, 0xF0, 0x24, 0x6B,
-0xB6, 0xF4, 0x6C, 0x9B, 0x04, 0x10, 0x10, 0xF0,
-0x24, 0x6B, 0xB6, 0xF4, 0x70, 0x9B, 0x80, 0xA0,
+0xD6, 0xF2, 0x68, 0x9B, 0x04, 0x10, 0x10, 0xF0,
+0x24, 0x6B, 0xD6, 0xF2, 0x6C, 0x9B, 0x80, 0xA0,
 0x6D, 0xE2, 0x01, 0x4A, 0xA0, 0xF1, 0x0F, 0x72,
 0x80, 0xC3, 0x01, 0x48, 0xE8, 0x61, 0x10, 0xF0,
-0x24, 0x6A, 0x57, 0xF0, 0x58, 0x9A, 0x19, 0x6B,
+0x24, 0x6A, 0x76, 0xF6, 0x54, 0x9A, 0x19, 0x6B,
 0x60, 0xC2, 0x09, 0x97, 0x08, 0x90, 0x05, 0x63,
 0x00, 0xEF, 0x00, 0x65, 0xFC, 0x63, 0x07, 0x62,
 0x06, 0xD0, 0x30, 0xF0, 0x20, 0x68, 0xC0, 0xF1,
 0x08, 0x48, 0x0C, 0xF0, 0x4C, 0xA0, 0x0B, 0x2A,
 0xE0, 0xF1, 0x1A, 0x6C, 0x04, 0x05, 0x00, 0x18,
-0xFD, 0xDC, 0x9D, 0x67, 0x70, 0xA4, 0x07, 0x6A,
+0x8B, 0xDC, 0x9D, 0x67, 0x70, 0xA4, 0x07, 0x6A,
 0x6C, 0xEA, 0x0C, 0xF0, 0x4C, 0xC0, 0x30, 0xF0,
 0x20, 0x68, 0xC0, 0xF1, 0x08, 0x48, 0x0C, 0xF0,
 0x4E, 0xA0, 0x0A, 0x2A, 0xE0, 0xF1, 0x1A, 0x6C,
-0x04, 0x05, 0x00, 0x18, 0xFD, 0xDC, 0x7D, 0x67,
+0x04, 0x05, 0x00, 0x18, 0x8B, 0xDC, 0x7D, 0x67,
 0x50, 0xA3, 0x56, 0x32, 0x0C, 0xF0, 0x4E, 0xC0,
 0x30, 0xF0, 0x20, 0x68, 0xC0, 0xF1, 0x08, 0x48,
 0x0C, 0xF0, 0x4F, 0xA0, 0x0B, 0x2A, 0xE0, 0xF1,
-0x1D, 0x6C, 0x04, 0x05, 0x00, 0x18, 0xFD, 0xDC,
+0x1D, 0x6C, 0x04, 0x05, 0x00, 0x18, 0x8B, 0xDC,
 0x9D, 0x67, 0x70, 0xA4, 0x03, 0x6A, 0x6C, 0xEA,
 0x0C, 0xF0, 0x4F, 0xC0, 0x30, 0xF0, 0x20, 0x68,
 0xC0, 0xF1, 0x08, 0x48, 0x0C, 0xF0, 0x50, 0xA0,
 0x0C, 0x2A, 0xE0, 0xF1, 0x1D, 0x6C, 0x04, 0x05,
-0x00, 0x18, 0xFD, 0xDC, 0x7D, 0x67, 0x50, 0xA3,
+0x00, 0x18, 0x8B, 0xDC, 0x7D, 0x67, 0x50, 0xA3,
 0x30, 0x6B, 0x6C, 0xEA, 0x53, 0x32, 0x0C, 0xF0,
 0x50, 0xC0, 0x07, 0x97, 0x06, 0x90, 0x04, 0x63,
 0x00, 0xEF, 0x00, 0x65, 0xFB, 0x63, 0x09, 0x62,
@@ -48778,17 +48540,17 @@ u8 array_mp_8821c_fw_wowlan[] = {
 0xE0, 0xF1, 0x1B, 0x6C, 0xB1, 0x67, 0x0C, 0xF0,
 0x48, 0xC0, 0x0C, 0xF0, 0x49, 0xC0, 0x0C, 0xF0,
 0x4A, 0xC0, 0x0C, 0xF0, 0x4B, 0xC0, 0x00, 0x18,
-0xFD, 0xDC, 0x9D, 0x67, 0x70, 0xA4, 0x07, 0x6A,
+0x8B, 0xDC, 0x9D, 0x67, 0x70, 0xA4, 0x07, 0x6A,
 0xE0, 0xF1, 0x1D, 0x6C, 0x6C, 0xEA, 0x0C, 0xF0,
 0x4C, 0xC0, 0x18, 0x6A, 0x6C, 0xEA, 0x4F, 0x32,
 0x76, 0x33, 0xB1, 0x67, 0x0C, 0xF0, 0x4D, 0xC0,
-0x0C, 0xF0, 0x6E, 0xC0, 0x00, 0x18, 0xFD, 0xDC,
+0x0C, 0xF0, 0x6E, 0xC0, 0x00, 0x18, 0x8B, 0xDC,
 0x5D, 0x67, 0x70, 0xA2, 0x0C, 0x6A, 0x6C, 0xEA,
 0x4B, 0x32, 0x7A, 0x33, 0x0C, 0xF0, 0x4F, 0xC0,
-0x0C, 0xF0, 0x70, 0xC0, 0x00, 0x18, 0x57, 0xDD,
-0x10, 0xF0, 0x24, 0x6A, 0x57, 0xF0, 0x58, 0x9A,
+0x0C, 0xF0, 0x70, 0xC0, 0x00, 0x18, 0xE5, 0xDC,
+0x10, 0xF0, 0x24, 0x6A, 0x76, 0xF6, 0x54, 0x9A,
 0x60, 0xA2, 0xFF, 0x6A, 0x6C, 0xEA, 0xFD, 0x72,
-0x02, 0x61, 0x00, 0x18, 0x32, 0xDD, 0x09, 0x97,
+0x02, 0x61, 0x00, 0x18, 0xC0, 0xDC, 0x09, 0x97,
 0x08, 0x91, 0x07, 0x90, 0x05, 0x63, 0x00, 0xEF,
 0xFB, 0x63, 0x09, 0x62, 0x22, 0x6A, 0x7D, 0x67,
 0x50, 0xC3, 0x01, 0x6A, 0x4F, 0xCB, 0x30, 0xF0,
@@ -48797,31 +48559,31 @@ u8 array_mp_8821c_fw_wowlan[] = {
 0x00, 0xEF, 0x00, 0x65, 0xFB, 0x63, 0x09, 0x62,
 0x1A, 0x6A, 0x7D, 0x67, 0x50, 0xC3, 0x00, 0xF0,
 0x12, 0x04, 0x05, 0x6A, 0x4F, 0xCB, 0x00, 0x18,
-0x21, 0xDD, 0x30, 0xF0, 0x20, 0x6A, 0xAE, 0xF2,
+0xAF, 0xDC, 0x30, 0xF0, 0x20, 0x6A, 0xAE, 0xF2,
 0x58, 0x9A, 0x04, 0x04, 0x40, 0xEA, 0x09, 0x97,
 0x05, 0x63, 0x00, 0xEF, 0xFB, 0x63, 0x09, 0x62,
 0x19, 0x6A, 0x7D, 0x67, 0x50, 0xC3, 0x00, 0xF0,
 0x12, 0x04, 0x08, 0x6A, 0x4F, 0xCB, 0x00, 0x18,
-0x07, 0xDD, 0x30, 0xF0, 0x20, 0x6A, 0xAE, 0xF2,
+0x95, 0xDC, 0x30, 0xF0, 0x20, 0x6A, 0xAE, 0xF2,
 0x58, 0x9A, 0x04, 0x04, 0x40, 0xEA, 0x09, 0x97,
 0x05, 0x63, 0x00, 0xEF, 0xFD, 0x63, 0x05, 0x62,
 0x40, 0xA4, 0x01, 0x72, 0x04, 0x61, 0x00, 0x18,
-0xB5, 0xDD, 0x00, 0x18, 0xAB, 0xDD, 0x05, 0x97,
+0x43, 0xDD, 0x00, 0x18, 0x39, 0xDD, 0x05, 0x97,
 0x03, 0x63, 0x00, 0xEF, 0x30, 0xF0, 0x20, 0x6A,
 0xC0, 0xF1, 0x08, 0x4A, 0x00, 0x6B, 0x0C, 0xF5,
 0x7A, 0xC2, 0x00, 0x6B, 0x0C, 0xF5, 0x78, 0xC2,
 0x20, 0xE8, 0x00, 0x65, 0xFF, 0x6A, 0x8C, 0xEA,
 0x08, 0x5A, 0x05, 0x60, 0x10, 0xF0, 0x24, 0x6B,
-0x37, 0xF0, 0x7C, 0x9B, 0x05, 0x10, 0x10, 0xF0,
-0x24, 0x6B, 0x57, 0xF0, 0x60, 0x9B, 0xF8, 0x4A,
+0x56, 0xF6, 0x78, 0x9B, 0x05, 0x10, 0x10, 0xF0,
+0x24, 0x6B, 0x56, 0xF6, 0x7C, 0x9B, 0xF8, 0x4A,
 0x01, 0x6C, 0xA0, 0x9B, 0x84, 0xEA, 0x00, 0xF6,
 0x80, 0x32, 0x4F, 0xEA, 0xAC, 0xEA, 0x40, 0xDB,
 0x40, 0x9B, 0x80, 0x34, 0x80, 0x34, 0x8F, 0xEC,
 0x4C, 0xEC, 0x80, 0xDB, 0x20, 0xE8, 0x00, 0x65,
 0xFF, 0x6A, 0x4C, 0xEC, 0x08, 0x5C, 0xAC, 0xEA,
-0x05, 0x60, 0x10, 0xF0, 0x24, 0x6B, 0x37, 0xF0,
-0x7C, 0x9B, 0x05, 0x10, 0x10, 0xF0, 0x24, 0x6B,
-0x57, 0xF0, 0x60, 0x9B, 0xF8, 0x4C, 0x01, 0x6D,
+0x05, 0x60, 0x10, 0xF0, 0x24, 0x6B, 0x56, 0xF6,
+0x78, 0x9B, 0x05, 0x10, 0x10, 0xF0, 0x24, 0x6B,
+0x56, 0xF6, 0x7C, 0x9B, 0xF8, 0x4C, 0x01, 0x6D,
 0xC0, 0x9B, 0xA4, 0xEC, 0x00, 0xF6, 0xA0, 0x34,
 0x8F, 0xEC, 0xCC, 0xEC, 0x80, 0xDB, 0xC0, 0x9B,
 0xA0, 0x35, 0xA0, 0x34, 0xCD, 0xEC, 0x80, 0xDB,
@@ -48845,22 +48607,22 @@ u8 array_mp_8821c_fw_wowlan[] = {
 0x28, 0x23, 0xE8, 0xF3, 0x7A, 0xA0, 0xFF, 0x6C,
 0x6C, 0xEA, 0x8C, 0xEA, 0x12, 0x22, 0xE8, 0xF3,
 0x9B, 0xA0, 0x7F, 0x6D, 0xFF, 0x6A, 0xAC, 0xEC,
-0x4C, 0xEC, 0x00, 0x6D, 0x00, 0x18, 0xDA, 0xDD,
+0x4C, 0xEC, 0x00, 0x6D, 0x00, 0x18, 0x68, 0xDD,
 0xE8, 0xF3, 0x9B, 0xA0, 0x7F, 0x6B, 0xFF, 0x6D,
-0x6C, 0xEC, 0xAC, 0xEC, 0x00, 0x18, 0xCB, 0xDD,
+0x6C, 0xEC, 0xAC, 0xEC, 0x00, 0x18, 0x59, 0xDD,
 0x2C, 0x10, 0xE8, 0xF3, 0x9B, 0xA0, 0x7F, 0x6A,
 0xFF, 0x6B, 0x4C, 0xEC, 0x6C, 0xEC, 0x00, 0x18,
-0xCB, 0xDD, 0xE8, 0xF3, 0x9B, 0xA0, 0x7F, 0x6D,
+0x59, 0xDD, 0xE8, 0xF3, 0x9B, 0xA0, 0x7F, 0x6D,
 0xFF, 0x6A, 0xAC, 0xEC, 0x4C, 0xEC, 0x00, 0x6D,
 0x1A, 0x10, 0xE8, 0xF3, 0xBA, 0xA0, 0xE8, 0xF3,
 0x9B, 0xA0, 0x01, 0x6A, 0x7F, 0x6B, 0xB6, 0x35,
 0x4E, 0xED, 0x6C, 0xEC, 0xFF, 0x6B, 0x6C, 0xEC,
-0x4C, 0xED, 0x00, 0x18, 0xDA, 0xDD, 0xE8, 0xF3,
+0x4C, 0xED, 0x00, 0x18, 0x68, 0xDD, 0xE8, 0xF3,
 0x9B, 0xA0, 0x7F, 0x6D, 0x01, 0x6A, 0xAC, 0xEC,
 0xE8, 0xF3, 0xBA, 0xA0, 0xFF, 0x6B, 0x6C, 0xEC,
 0xB6, 0x35, 0x4C, 0xED, 0x6C, 0xED, 0x00, 0x18,
-0xDA, 0xDD, 0x07, 0x94, 0x00, 0xF1, 0x08, 0x24,
-0x04, 0x95, 0x91, 0x67, 0x00, 0x18, 0xED, 0xDD,
+0x68, 0xDD, 0x07, 0x94, 0x00, 0xF1, 0x08, 0x24,
+0x04, 0x95, 0x91, 0x67, 0x00, 0x18, 0x7B, 0xDD,
 0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A,
 0xE8, 0xF3, 0xBE, 0xA2, 0x20, 0x6C, 0xFF, 0x6B,
 0x8C, 0xED, 0x14, 0x25, 0xE8, 0xF3, 0xBA, 0xA2,
@@ -48868,28 +48630,28 @@ u8 array_mp_8821c_fw_wowlan[] = {
 0x5B, 0xA2, 0x7F, 0x6C, 0x00, 0x6D, 0x4C, 0xEC,
 0x6C, 0xEC, 0x13, 0x10, 0xE8, 0xF3, 0x5B, 0xA2,
 0x7F, 0x6C, 0x4C, 0xEC, 0x6C, 0xEC, 0x00, 0x18,
-0xCB, 0xDD, 0x0D, 0x10, 0xE8, 0xF3, 0xBB, 0xA2,
+0x59, 0xDD, 0x0D, 0x10, 0xE8, 0xF3, 0xBB, 0xA2,
 0x7F, 0x6C, 0xAC, 0xEC, 0xE8, 0xF3, 0xBA, 0xA2,
 0x01, 0x6A, 0x6C, 0xEC, 0xB6, 0x35, 0x4E, 0xED,
-0x4C, 0xED, 0x00, 0x18, 0xDA, 0xDD, 0x05, 0x93,
+0x4C, 0xED, 0x00, 0x18, 0x68, 0xDD, 0x05, 0x93,
 0x00, 0x68, 0xC0, 0xF0, 0x12, 0x23, 0x30, 0xF0,
 0x20, 0x68, 0xC0, 0xF1, 0x08, 0x48, 0xE8, 0xF3,
 0x5A, 0xA0, 0x01, 0x6C, 0x8C, 0xEA, 0xC0, 0xF0,
-0x0B, 0x22, 0x10, 0xF0, 0x24, 0x6A, 0x57, 0xF0,
-0x5C, 0x9A, 0x60, 0xA2, 0x10, 0x6A, 0x6C, 0xEA,
+0x0B, 0x22, 0x10, 0xF0, 0x24, 0x6A, 0x76, 0xF6,
+0x58, 0x9A, 0x60, 0xA2, 0x10, 0x6A, 0x6C, 0xEA,
 0xC0, 0xF0, 0x02, 0x2A, 0x04, 0x95, 0x91, 0x67,
-0x00, 0x18, 0xED, 0xDD, 0xE8, 0xF3, 0x7E, 0xA0,
+0x00, 0x18, 0x7B, 0xDD, 0xE8, 0xF3, 0x7E, 0xA0,
 0x20, 0x6A, 0xFF, 0x6D, 0x4C, 0xEB, 0xAC, 0xEB,
 0x15, 0x23, 0xE8, 0xF3, 0x7A, 0xA0, 0x6C, 0xEA,
 0xAC, 0xEA, 0x08, 0x22, 0xE8, 0xF3, 0x5B, 0xA0,
 0x7F, 0x6C, 0x4C, 0xEC, 0xAC, 0xEC, 0x00, 0x18,
-0xCB, 0xDD, 0x16, 0x10, 0xE8, 0xF3, 0x5B, 0xA0,
+0x59, 0xDD, 0x16, 0x10, 0xE8, 0xF3, 0x5B, 0xA0,
 0x7F, 0x6C, 0x00, 0x6D, 0x4C, 0xEC, 0xFF, 0x6A,
 0x4C, 0xEC, 0x0C, 0x10, 0xE8, 0xF3, 0xBA, 0xA0,
 0xE8, 0xF3, 0x5B, 0xA0, 0x7F, 0x6C, 0xB6, 0x35,
 0x01, 0x6B, 0x4C, 0xEC, 0x6C, 0xED, 0xFF, 0x6A,
-0x4C, 0xEC, 0x4C, 0xED, 0x00, 0x18, 0xDA, 0xDD,
-0x04, 0x95, 0x91, 0x67, 0x00, 0x18, 0xED, 0xDD,
+0x4C, 0xEC, 0x4C, 0xED, 0x00, 0x18, 0x68, 0xDD,
+0x04, 0x95, 0x91, 0x67, 0x00, 0x18, 0x7B, 0xDD,
 0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A,
 0xE8, 0xF3, 0xBE, 0xA2, 0x20, 0x6C, 0xFF, 0x6B,
 0x8C, 0xED, 0x14, 0x25, 0xE8, 0xF3, 0xBA, 0xA2,
@@ -48897,34 +48659,34 @@ u8 array_mp_8821c_fw_wowlan[] = {
 0x5B, 0xA2, 0x7F, 0x6C, 0x00, 0x6D, 0x4C, 0xEC,
 0x6C, 0xEC, 0x13, 0x10, 0xE8, 0xF3, 0x5B, 0xA2,
 0x7F, 0x6C, 0x4C, 0xEC, 0x6C, 0xEC, 0x00, 0x18,
-0xCB, 0xDD, 0x9D, 0x17, 0xE8, 0xF3, 0xBB, 0xA2,
+0x59, 0xDD, 0x9D, 0x17, 0xE8, 0xF3, 0xBB, 0xA2,
 0x7F, 0x6C, 0xAC, 0xEC, 0xE8, 0xF3, 0xBA, 0xA2,
 0x01, 0x6A, 0x6C, 0xEC, 0xB6, 0x35, 0x4E, 0xED,
-0x4C, 0xED, 0x00, 0x18, 0xDA, 0xDD, 0x8F, 0x17,
-0x04, 0x95, 0x91, 0x67, 0x00, 0x18, 0xED, 0xDD,
+0x4C, 0xED, 0x00, 0x18, 0x68, 0xDD, 0x8F, 0x17,
+0x04, 0x95, 0x91, 0x67, 0x00, 0x18, 0x7B, 0xDD,
 0x30, 0xF0, 0x20, 0x6B, 0xC0, 0xF1, 0x08, 0x4B,
 0xE8, 0xF3, 0xBE, 0xA3, 0x20, 0x6C, 0xFF, 0x6A,
 0x8C, 0xED, 0x14, 0x25, 0xE8, 0xF3, 0xBA, 0xA3,
 0xAC, 0xEC, 0x4C, 0xEC, 0x08, 0x24, 0xE8, 0xF3,
 0x7B, 0xA3, 0x7F, 0x6C, 0x6C, 0xEC, 0x4C, 0xEC,
-0x00, 0x18, 0xCB, 0xDD, 0x14, 0x10, 0xE8, 0xF3,
+0x00, 0x18, 0x59, 0xDD, 0x14, 0x10, 0xE8, 0xF3,
 0x7B, 0xA3, 0x7F, 0x6C, 0x00, 0x6D, 0x6C, 0xEC,
 0x4C, 0xEC, 0x0B, 0x10, 0xE8, 0xF3, 0xBB, 0xA3,
 0x7F, 0x6C, 0xAC, 0xEC, 0xE8, 0xF3, 0xBA, 0xA3,
 0x01, 0x6B, 0x4C, 0xEC, 0xB6, 0x35, 0x6C, 0xED,
-0x4C, 0xED, 0x00, 0x18, 0xDA, 0xDD, 0x04, 0x95,
-0x91, 0x67, 0x00, 0x18, 0xED, 0xDD, 0x30, 0xF0,
+0x4C, 0xED, 0x00, 0x18, 0x68, 0xDD, 0x04, 0x95,
+0x91, 0x67, 0x00, 0x18, 0x7B, 0xDD, 0x30, 0xF0,
 0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A, 0xE8, 0xF3,
 0xBE, 0xA2, 0x20, 0x6C, 0xFF, 0x6B, 0x8C, 0xED,
 0x14, 0x25, 0xE8, 0xF3, 0xBA, 0xA2, 0xAC, 0xEC,
 0x6C, 0xEC, 0x07, 0x24, 0xE8, 0xF3, 0x5B, 0xA2,
 0x7F, 0x6C, 0x00, 0x6D, 0x4C, 0xEC, 0x6C, 0xEC,
 0x13, 0x10, 0xE8, 0xF3, 0x5B, 0xA2, 0x7F, 0x6C,
-0x4C, 0xEC, 0x6C, 0xEC, 0x00, 0x18, 0xCB, 0xDD,
+0x4C, 0xEC, 0x6C, 0xEC, 0x00, 0x18, 0x59, 0xDD,
 0x0D, 0x10, 0xE8, 0xF3, 0xBB, 0xA2, 0x7F, 0x6C,
 0xAC, 0xEC, 0xE8, 0xF3, 0xBA, 0xA2, 0x01, 0x6A,
 0x6C, 0xEC, 0xB6, 0x35, 0x4E, 0xED, 0x4C, 0xED,
-0x00, 0x18, 0xDA, 0xDD, 0x01, 0x48, 0xFF, 0x6A,
+0x00, 0x18, 0x68, 0xDD, 0x01, 0x48, 0xFF, 0x6A,
 0x4C, 0xE8, 0x06, 0x93, 0x63, 0xE8, 0x9C, 0x61,
 0x0B, 0x97, 0x0A, 0x91, 0x09, 0x90, 0x06, 0x63,
 0x00, 0xEF, 0x00, 0x65, 0xFD, 0x63, 0x05, 0x62,
@@ -48933,14 +48695,14 @@ u8 array_mp_8821c_fw_wowlan[] = {
 0x00, 0x4C, 0x07, 0x6E, 0x40, 0xEA, 0x05, 0x97,
 0x03, 0x63, 0x00, 0xEF, 0xFB, 0x63, 0x09, 0x62,
 0x08, 0xD1, 0x07, 0xD0, 0x10, 0xF0, 0x24, 0x69,
-0x16, 0xF6, 0x30, 0x99, 0x0E, 0x93, 0xFF, 0x6A,
+0x36, 0xF4, 0x2C, 0x99, 0x0E, 0x93, 0xFF, 0x6A,
 0x20, 0xA1, 0x4C, 0xED, 0x4C, 0xEE, 0x19, 0x65,
 0x38, 0x67, 0x4C, 0xEF, 0x4C, 0xEB, 0x2C, 0xEA,
 0x30, 0xF0, 0x20, 0x69, 0x4F, 0xF6, 0x21, 0xA1,
 0xFF, 0xF7, 0x1F, 0x68, 0x0C, 0xEC, 0x2E, 0xEA,
 0x06, 0x2A, 0x03, 0x6A, 0x58, 0xEC, 0x04, 0xD3,
 0x12, 0xEC, 0x0C, 0xEC, 0x01, 0x10, 0x04, 0xD3,
-0x00, 0x18, 0xF9, 0xDD, 0x09, 0x97, 0x08, 0x91,
+0x00, 0x18, 0x87, 0xDD, 0x09, 0x97, 0x08, 0x91,
 0x07, 0x90, 0x05, 0x63, 0x00, 0xEF, 0x00, 0x65,
 0xFC, 0x63, 0x07, 0x62, 0x06, 0xD0, 0x30, 0xF0,
 0x20, 0x6B, 0xCF, 0xF4, 0x00, 0x4B, 0x80, 0xF1,
@@ -48952,24 +48714,24 @@ u8 array_mp_8821c_fw_wowlan[] = {
 0xBE, 0xA3, 0xE8, 0xF3, 0x7C, 0xA3, 0x01, 0x6F,
 0xAA, 0x35, 0xEC, 0xED, 0x06, 0x36, 0x0C, 0xEF,
 0x7E, 0x33, 0x4C, 0xEC, 0x4C, 0xED, 0x4C, 0xEE,
-0x4C, 0xEF, 0x04, 0xD3, 0x00, 0x18, 0xBD, 0xDE,
+0x4C, 0xEF, 0x04, 0xD3, 0x00, 0x18, 0x4B, 0xDE,
 0x78, 0x10, 0x3F, 0x74, 0x1A, 0x61, 0x10, 0xF0,
-0x24, 0x6C, 0x16, 0xF6, 0x90, 0x9C, 0x80, 0xF1,
+0x24, 0x6C, 0x36, 0xF4, 0x8C, 0x9C, 0x80, 0xF1,
 0xA1, 0xA3, 0x80, 0xA4, 0x4C, 0xEC, 0xAE, 0xEC,
 0x51, 0x2C, 0x80, 0xF1, 0xA2, 0xA3, 0x7F, 0x6C,
 0x80, 0xF1, 0x03, 0xA3, 0xAC, 0xEC, 0x80, 0xF1,
 0xA0, 0xA3, 0x01, 0x6F, 0x06, 0x36, 0xBA, 0x35,
 0xEC, 0xED, 0x80, 0xF1, 0x62, 0xA3, 0x0C, 0xEF,
 0x54, 0x10, 0x3E, 0x74, 0x3F, 0x61, 0x10, 0xF0,
-0x24, 0x6C, 0x16, 0xF6, 0x90, 0x9C, 0x80, 0xF1,
+0x24, 0x6C, 0x36, 0xF4, 0x8C, 0x9C, 0x80, 0xF1,
 0xA1, 0xA3, 0x80, 0xA4, 0x4C, 0xEC, 0xAE, 0xEC,
 0x17, 0x2C, 0x80, 0xF1, 0xA2, 0xA3, 0x7F, 0x6C,
 0x80, 0xF1, 0x03, 0xA3, 0xAC, 0xEC, 0x80, 0xF1,
 0xA0, 0xA3, 0x80, 0xF1, 0x62, 0xA3, 0x01, 0x6F,
 0xBA, 0x35, 0xEC, 0xED, 0x06, 0x36, 0x0C, 0xEF,
 0x7E, 0x33, 0x4C, 0xEC, 0x4C, 0xED, 0x4C, 0xEE,
-0x4C, 0xEF, 0x04, 0xD3, 0x00, 0x18, 0xF9, 0xDD,
-0x10, 0xF0, 0x24, 0x6A, 0x16, 0xF6, 0x50, 0x9A,
+0x4C, 0xEF, 0x04, 0xD3, 0x00, 0x18, 0x87, 0xDD,
+0x10, 0xF0, 0x24, 0x6A, 0x36, 0xF4, 0x4C, 0x9A,
 0x30, 0xF0, 0x20, 0x6B, 0xCF, 0xF4, 0x00, 0x4B,
 0x80, 0xA2, 0x80, 0xF1, 0xA4, 0xA3, 0xFF, 0x6A,
 0x4C, 0xEC, 0xAE, 0xEC, 0x0F, 0x2C, 0x80, 0xF1,
@@ -48983,239 +48745,239 @@ u8 array_mp_8821c_fw_wowlan[] = {
 0x01, 0x6F, 0xAA, 0x35, 0xEC, 0xED, 0x06, 0x36,
 0x0C, 0xEF, 0x7E, 0x33, 0x4C, 0xEC, 0x4C, 0xED,
 0x4C, 0xEE, 0x4C, 0xEF, 0x04, 0xD3, 0x00, 0x18,
-0xF9, 0xDD, 0x07, 0x97, 0x06, 0x90, 0x04, 0x63,
+0x87, 0xDD, 0x07, 0x97, 0x06, 0x90, 0x04, 0x63,
 0x00, 0xEF, 0x00, 0x65, 0xFF, 0xF7, 0x1F, 0x6A,
-0x10, 0xF0, 0x24, 0x6B, 0x8C, 0xEA, 0x77, 0xF0,
-0x60, 0x9B, 0x10, 0xF0, 0x24, 0x6C, 0x77, 0xF0,
-0x84, 0x9C, 0xCC, 0xEB, 0x40, 0xF6, 0xA0, 0x35,
+0x10, 0xF0, 0x24, 0x6B, 0x8C, 0xEA, 0x76, 0xF6,
+0x7C, 0x9B, 0x10, 0xF0, 0x24, 0x6C, 0x96, 0xF6,
+0x80, 0x9C, 0xCC, 0xEB, 0x40, 0xF6, 0xA0, 0x35,
 0x8D, 0xEB, 0x1F, 0xF7, 0x00, 0x6C, 0x4C, 0xEC,
 0x02, 0xF0, 0x00, 0x74, 0xAD, 0xEB, 0x01, 0x60,
-0x05, 0x2C, 0x10, 0xF0, 0x24, 0x6C, 0xB6, 0xF4,
-0x8C, 0x9C, 0x04, 0x10, 0x10, 0xF0, 0x24, 0x6C,
-0xB6, 0xF4, 0x90, 0x9C, 0x89, 0xE2, 0x60, 0xDA,
+0x05, 0x2C, 0x10, 0xF0, 0x24, 0x6C, 0xD6, 0xF2,
+0x88, 0x9C, 0x04, 0x10, 0x10, 0xF0, 0x24, 0x6C,
+0xD6, 0xF2, 0x8C, 0x9C, 0x89, 0xE2, 0x60, 0xDA,
 0x20, 0xE8, 0x00, 0x65, 0xFF, 0xF7, 0x1F, 0x6A,
 0x8C, 0xEA, 0x1F, 0xF7, 0x00, 0x6C, 0x4C, 0xEC,
 0xFF, 0x6B, 0x02, 0xF0, 0x00, 0x74, 0xAC, 0xEB,
 0x01, 0x60, 0x05, 0x2C, 0x10, 0xF0, 0x24, 0x6C,
-0xB6, 0xF4, 0x8C, 0x9C, 0x04, 0x10, 0x10, 0xF0,
-0x24, 0x6C, 0xB6, 0xF4, 0x90, 0x9C, 0x91, 0xE2,
+0xD6, 0xF2, 0x88, 0x9C, 0x04, 0x10, 0x10, 0xF0,
+0x24, 0x6C, 0xD6, 0xF2, 0x8C, 0x9C, 0x91, 0xE2,
 0x00, 0x6D, 0xA0, 0xDC, 0x10, 0xF0, 0x24, 0x6C,
-0x77, 0xF0, 0x80, 0x9C, 0xD4, 0x36, 0x40, 0xF6,
+0x76, 0xF6, 0x9C, 0x9C, 0xD4, 0x36, 0x40, 0xF6,
 0x60, 0x33, 0x8C, 0xEE, 0x6D, 0xEE, 0x10, 0xF0,
-0x24, 0x6B, 0x77, 0xF0, 0x64, 0x9B, 0x6D, 0xEE,
+0x24, 0x6B, 0x96, 0xF6, 0x60, 0x9B, 0x6D, 0xEE,
 0x1F, 0xF7, 0x00, 0x6B, 0x4C, 0xEB, 0x02, 0xF0,
 0x00, 0x73, 0x01, 0x60, 0x05, 0x2B, 0x10, 0xF0,
-0x24, 0x6B, 0xB6, 0xF4, 0x6C, 0x9B, 0x04, 0x10,
-0x10, 0xF0, 0x24, 0x6B, 0xB6, 0xF4, 0x70, 0x9B,
+0x24, 0x6B, 0xD6, 0xF2, 0x68, 0x9B, 0x04, 0x10,
+0x10, 0xF0, 0x24, 0x6B, 0xD6, 0xF2, 0x6C, 0x9B,
 0x69, 0xE2, 0xC0, 0xDA, 0x20, 0xE8, 0x00, 0x65,
 0x0F, 0xF5, 0x00, 0x6B, 0x78, 0xEE, 0xFF, 0xF7,
 0x1F, 0x6A, 0x8C, 0xEA, 0x10, 0xF0, 0x24, 0x6C,
-0x77, 0xF0, 0x80, 0x9C, 0x40, 0xF6, 0xA0, 0x35,
+0x76, 0xF6, 0x9C, 0x9C, 0x40, 0xF6, 0xA0, 0x35,
 0x12, 0xEB, 0x8C, 0xEB, 0x10, 0xF0, 0x24, 0x6C,
-0x77, 0xF0, 0x84, 0x9C, 0xAD, 0xEB, 0x8D, 0xEB,
+0x96, 0xF6, 0x80, 0x9C, 0xAD, 0xEB, 0x8D, 0xEB,
 0x1F, 0xF7, 0x00, 0x6C, 0x4C, 0xEC, 0x02, 0xF0,
 0x00, 0x74, 0x01, 0x60, 0x05, 0x2C, 0x10, 0xF0,
-0x24, 0x6C, 0xB6, 0xF4, 0x8C, 0x9C, 0x04, 0x10,
-0x10, 0xF0, 0x24, 0x6C, 0xB6, 0xF4, 0x90, 0x9C,
+0x24, 0x6C, 0xD6, 0xF2, 0x88, 0x9C, 0x04, 0x10,
+0x10, 0xF0, 0x24, 0x6C, 0xD6, 0xF2, 0x8C, 0x9C,
 0x89, 0xE2, 0x60, 0xDA, 0x20, 0xE8, 0x00, 0x65,
-0x10, 0xF0, 0x24, 0x6A, 0x77, 0xF0, 0x54, 0x9A,
+0x10, 0xF0, 0x24, 0x6A, 0x96, 0xF6, 0x50, 0x9A,
 0x40, 0x9A, 0x20, 0xE8, 0x30, 0xF0, 0x20, 0x6B,
 0xC0, 0xF1, 0x08, 0x4B, 0x4C, 0x9B, 0x8D, 0xEA,
-0x4C, 0xDB, 0x10, 0xF0, 0x24, 0x6B, 0x97, 0xF0,
-0x68, 0x9B, 0x80, 0xDB, 0x10, 0xF0, 0x24, 0x6B,
-0x97, 0xF0, 0x6C, 0x9B, 0x40, 0xDB, 0x20, 0xE8,
+0x4C, 0xDB, 0x10, 0xF0, 0x24, 0x6B, 0xB6, 0xF6,
+0x64, 0x9B, 0x80, 0xDB, 0x10, 0xF0, 0x24, 0x6B,
+0xB6, 0xF6, 0x68, 0x9B, 0x40, 0xDB, 0x20, 0xE8,
 0xFD, 0x63, 0x05, 0x62, 0x04, 0xD0, 0x10, 0xF0,
-0x24, 0x6A, 0x97, 0xF0, 0x70, 0x9A, 0xC0, 0x6A,
+0x24, 0x6A, 0xB6, 0xF6, 0x6C, 0x9A, 0xC0, 0x6A,
 0xFF, 0x68, 0x80, 0xA3, 0x8C, 0xEA, 0x40, 0xC3,
 0x30, 0xF0, 0x20, 0x6A, 0xCE, 0xF4, 0x5C, 0x9A,
 0x0A, 0x6C, 0x40, 0xEA, 0x10, 0xF0, 0x24, 0x6A,
-0x97, 0xF0, 0x54, 0x9A, 0x01, 0x6B, 0x05, 0x97,
+0xB6, 0xF6, 0x50, 0x9A, 0x01, 0x6B, 0x05, 0x97,
 0x40, 0xA2, 0x0C, 0xEA, 0x5E, 0x32, 0x6E, 0xEA,
 0x6C, 0xEA, 0x0C, 0xEA, 0x04, 0x90, 0x03, 0x63,
 0x00, 0xEF, 0x00, 0x65, 0xFD, 0x63, 0x05, 0x62,
-0x04, 0xD0, 0x10, 0xF0, 0x24, 0x6B, 0x76, 0xF4,
-0x7C, 0x9B, 0x10, 0xF0, 0x23, 0x6A, 0x0F, 0xF6,
-0x1D, 0x4A, 0x40, 0xDB, 0x00, 0x68, 0x28, 0x10,
+0x04, 0xD0, 0x10, 0xF0, 0x24, 0x6B, 0x96, 0xF2,
+0x78, 0x9B, 0x10, 0xF0, 0x23, 0x6A, 0x4F, 0xF4,
+0x15, 0x4A, 0x40, 0xDB, 0x00, 0x68, 0x28, 0x10,
 0x82, 0xF3, 0x08, 0x70, 0x11, 0x61, 0x10, 0xF0,
-0x24, 0x6A, 0x16, 0xF5, 0x7C, 0x9A, 0x02, 0xF0,
+0x24, 0x6A, 0x36, 0xF3, 0x78, 0x9A, 0x02, 0xF0,
 0x00, 0x6C, 0x40, 0x9B, 0x8D, 0xEA, 0x40, 0xDB,
-0x10, 0xF0, 0x24, 0x6A, 0x16, 0xF6, 0x50, 0x9A,
+0x10, 0xF0, 0x24, 0x6A, 0x36, 0xF4, 0x4C, 0x9A,
 0x03, 0x6B, 0x6B, 0xEB, 0x60, 0xC2, 0x18, 0x10,
 0xFF, 0xF7, 0x1F, 0x6A, 0x01, 0x48, 0x4C, 0xE8,
 0x30, 0xF0, 0x20, 0x6A, 0xCE, 0xF4, 0x5C, 0x9A,
 0x14, 0x6C, 0x40, 0xEA, 0x33, 0x58, 0x08, 0x61,
-0x10, 0xF0, 0x24, 0x6A, 0x57, 0xF0, 0x5C, 0x9A,
+0x10, 0xF0, 0x24, 0x6A, 0x76, 0xF6, 0x58, 0x9A,
 0x60, 0xA2, 0x08, 0x6A, 0x6C, 0xEA, 0x04, 0x2A,
-0x00, 0x18, 0x76, 0xDF, 0x01, 0x72, 0xD4, 0x61,
-0x10, 0xF0, 0x24, 0x6A, 0x16, 0xF6, 0x50, 0x9A,
+0x00, 0x18, 0x04, 0xDF, 0x01, 0x72, 0xD4, 0x61,
+0x10, 0xF0, 0x24, 0x6A, 0x36, 0xF4, 0x4C, 0x9A,
 0x02, 0x6B, 0x6B, 0xEB, 0x60, 0xC2, 0x10, 0xF0,
-0x24, 0x6B, 0x76, 0xF4, 0x7C, 0x9B, 0x10, 0xF0,
-0x23, 0x6A, 0x0F, 0xF6, 0x1E, 0x4A, 0x40, 0xDB,
+0x24, 0x6B, 0x96, 0xF2, 0x78, 0x9B, 0x10, 0xF0,
+0x23, 0x6A, 0x4F, 0xF4, 0x16, 0x4A, 0x40, 0xDB,
 0x05, 0x97, 0x04, 0x90, 0x03, 0x63, 0x00, 0xEF,
 0x05, 0x5C, 0x5E, 0x60, 0x10, 0xF0, 0x24, 0x6A,
-0x88, 0x34, 0x96, 0xF3, 0x18, 0x4A, 0x89, 0xE2,
+0x88, 0x34, 0xB6, 0xF1, 0x14, 0x4A, 0x89, 0xE2,
 0x40, 0x9A, 0x00, 0xEA, 0x30, 0xF0, 0x20, 0x6B,
 0xC0, 0xF1, 0x48, 0x9B, 0xAD, 0xEA, 0xC0, 0xF1,
-0x48, 0xDB, 0x10, 0xF0, 0x24, 0x6B, 0x37, 0xF0,
-0x74, 0x9B, 0xA0, 0xDB, 0x10, 0xF0, 0x24, 0x6B,
-0x97, 0xF0, 0x78, 0x9B, 0x32, 0x10, 0x30, 0xF0,
+0x48, 0xDB, 0x10, 0xF0, 0x24, 0x6B, 0x56, 0xF6,
+0x70, 0x9B, 0xA0, 0xDB, 0x10, 0xF0, 0x24, 0x6B,
+0xB6, 0xF6, 0x74, 0x9B, 0x32, 0x10, 0x30, 0xF0,
 0x20, 0x6B, 0xC0, 0xF1, 0x08, 0x4B, 0x41, 0x9B,
 0xAD, 0xEA, 0x41, 0xDB, 0x10, 0xF0, 0x24, 0x6B,
-0x36, 0xF6, 0x78, 0x9B, 0xA0, 0xDB, 0x10, 0xF0,
-0x24, 0x6B, 0x97, 0xF0, 0x7C, 0x9B, 0x21, 0x10,
+0x56, 0xF4, 0x74, 0x9B, 0xA0, 0xDB, 0x10, 0xF0,
+0x24, 0x6B, 0xB6, 0xF6, 0x78, 0x9B, 0x21, 0x10,
 0x30, 0xF0, 0x20, 0x6B, 0xC0, 0xF1, 0x08, 0x4B,
 0x42, 0x9B, 0xAD, 0xEA, 0x42, 0xDB, 0x10, 0xF0,
-0x24, 0x6B, 0xB7, 0xF0, 0x60, 0x9B, 0xA0, 0xDB,
-0x10, 0xF0, 0x24, 0x6B, 0xB7, 0xF0, 0x64, 0x9B,
+0x24, 0x6B, 0xB6, 0xF6, 0x7C, 0x9B, 0xA0, 0xDB,
+0x10, 0xF0, 0x24, 0x6B, 0xD6, 0xF6, 0x60, 0x9B,
 0x10, 0x10, 0x30, 0xF0, 0x20, 0x6B, 0xC0, 0xF1,
 0x08, 0x4B, 0x43, 0x9B, 0xAD, 0xEA, 0x43, 0xDB,
-0x10, 0xF0, 0x24, 0x6B, 0xB7, 0xF0, 0x68, 0x9B,
-0xA0, 0xDB, 0x10, 0xF0, 0x24, 0x6B, 0xB7, 0xF0,
-0x6C, 0x9B, 0x40, 0xDB, 0x20, 0xE8, 0x30, 0xF0,
+0x10, 0xF0, 0x24, 0x6B, 0xD6, 0xF6, 0x64, 0x9B,
+0xA0, 0xDB, 0x10, 0xF0, 0x24, 0x6B, 0xD6, 0xF6,
+0x68, 0x9B, 0x40, 0xDB, 0x20, 0xE8, 0x30, 0xF0,
 0x20, 0x6B, 0xC0, 0xF1, 0x08, 0x4B, 0x44, 0x9B,
 0xAD, 0xEA, 0x44, 0xDB, 0x10, 0xF0, 0x24, 0x6B,
-0xB7, 0xF0, 0x70, 0x9B, 0xA0, 0xDB, 0x10, 0xF0,
-0x24, 0x6B, 0xB7, 0xF0, 0x74, 0x9B, 0x40, 0xDB,
+0xD6, 0xF6, 0x6C, 0x9B, 0xA0, 0xDB, 0x10, 0xF0,
+0x24, 0x6B, 0xD6, 0xF6, 0x70, 0x9B, 0x40, 0xDB,
 0x20, 0xE8, 0x00, 0x65, 0x05, 0x5C, 0x63, 0x60,
-0x10, 0xF0, 0x24, 0x6A, 0x88, 0x34, 0xB6, 0xF3,
-0x0C, 0x4A, 0x89, 0xE2, 0x40, 0x9A, 0x00, 0xEA,
+0x10, 0xF0, 0x24, 0x6A, 0x88, 0x34, 0xD6, 0xF1,
+0x08, 0x4A, 0x89, 0xE2, 0x40, 0x9A, 0x00, 0xEA,
 0x30, 0xF0, 0x20, 0x6B, 0xC0, 0xF1, 0x88, 0x9B,
 0xAF, 0xEA, 0x8C, 0xEA, 0xC0, 0xF1, 0x48, 0xDB,
-0x10, 0xF0, 0x24, 0x6B, 0x97, 0xF0, 0x78, 0x9B,
-0x40, 0xDB, 0x10, 0xF0, 0x24, 0x6A, 0x37, 0xF0,
-0x54, 0x9A, 0x35, 0x10, 0x30, 0xF0, 0x20, 0x6B,
+0x10, 0xF0, 0x24, 0x6B, 0xB6, 0xF6, 0x74, 0x9B,
+0x40, 0xDB, 0x10, 0xF0, 0x24, 0x6A, 0x56, 0xF6,
+0x50, 0x9A, 0x35, 0x10, 0x30, 0xF0, 0x20, 0x6B,
 0xC0, 0xF1, 0x08, 0x4B, 0x81, 0x9B, 0xAF, 0xEA,
 0x8C, 0xEA, 0x41, 0xDB, 0x10, 0xF0, 0x24, 0x6B,
-0x97, 0xF0, 0x7C, 0x9B, 0x40, 0xDB, 0x10, 0xF0,
-0x24, 0x6A, 0x36, 0xF6, 0x58, 0x9A, 0x23, 0x10,
+0xB6, 0xF6, 0x78, 0x9B, 0x40, 0xDB, 0x10, 0xF0,
+0x24, 0x6A, 0x56, 0xF4, 0x54, 0x9A, 0x23, 0x10,
 0x30, 0xF0, 0x20, 0x6B, 0xC0, 0xF1, 0x08, 0x4B,
 0x82, 0x9B, 0xAF, 0xEA, 0x8C, 0xEA, 0x42, 0xDB,
-0x10, 0xF0, 0x24, 0x6B, 0xB7, 0xF0, 0x64, 0x9B,
-0x40, 0xDB, 0x10, 0xF0, 0x24, 0x6A, 0xB7, 0xF0,
-0x40, 0x9A, 0x11, 0x10, 0x30, 0xF0, 0x20, 0x6B,
+0x10, 0xF0, 0x24, 0x6B, 0xD6, 0xF6, 0x60, 0x9B,
+0x40, 0xDB, 0x10, 0xF0, 0x24, 0x6A, 0xB6, 0xF6,
+0x5C, 0x9A, 0x11, 0x10, 0x30, 0xF0, 0x20, 0x6B,
 0xC0, 0xF1, 0x08, 0x4B, 0x83, 0x9B, 0xAF, 0xEA,
 0x8C, 0xEA, 0x43, 0xDB, 0x10, 0xF0, 0x24, 0x6B,
-0xB7, 0xF0, 0x6C, 0x9B, 0x40, 0xDB, 0x10, 0xF0,
-0x24, 0x6A, 0xB7, 0xF0, 0x48, 0x9A, 0xA0, 0xDA,
+0xD6, 0xF6, 0x68, 0x9B, 0x40, 0xDB, 0x10, 0xF0,
+0x24, 0x6A, 0xD6, 0xF6, 0x44, 0x9A, 0xA0, 0xDA,
 0x20, 0xE8, 0x30, 0xF0, 0x20, 0x6B, 0xC0, 0xF1,
 0x08, 0x4B, 0x84, 0x9B, 0xAF, 0xEA, 0x8C, 0xEA,
-0x44, 0xDB, 0x10, 0xF0, 0x24, 0x6B, 0xB7, 0xF0,
-0x74, 0x9B, 0x40, 0xDB, 0x10, 0xF0, 0x24, 0x6A,
-0xB7, 0xF0, 0x50, 0x9A, 0xA0, 0xDA, 0x20, 0xE8,
+0x44, 0xDB, 0x10, 0xF0, 0x24, 0x6B, 0xD6, 0xF6,
+0x70, 0x9B, 0x40, 0xDB, 0x10, 0xF0, 0x24, 0x6A,
+0xD6, 0xF6, 0x4C, 0x9A, 0xA0, 0xDA, 0x20, 0xE8,
 0x01, 0x74, 0x15, 0x60, 0x03, 0x24, 0x02, 0x74,
 0x23, 0x60, 0x20, 0xE8, 0x30, 0xF0, 0x20, 0x6B,
 0xC0, 0xF1, 0x08, 0x4B, 0x4E, 0x9B, 0xAD, 0xEA,
-0x4E, 0xDB, 0x10, 0xF0, 0x24, 0x6B, 0x36, 0xF5,
-0x68, 0x9B, 0xA0, 0xDB, 0x10, 0xF0, 0x24, 0x6B,
-0xB7, 0xF0, 0x78, 0x9B, 0x21, 0x10, 0x30, 0xF0,
+0x4E, 0xDB, 0x10, 0xF0, 0x24, 0x6B, 0x56, 0xF3,
+0x64, 0x9B, 0xA0, 0xDB, 0x10, 0xF0, 0x24, 0x6B,
+0xD6, 0xF6, 0x74, 0x9B, 0x21, 0x10, 0x30, 0xF0,
 0x20, 0x6B, 0xC0, 0xF1, 0x08, 0x4B, 0x4F, 0x9B,
 0xAD, 0xEA, 0x4F, 0xDB, 0x10, 0xF0, 0x24, 0x6B,
-0xB7, 0xF0, 0x7C, 0x9B, 0xA0, 0xDB, 0x10, 0xF0,
-0x24, 0x6B, 0xD7, 0xF0, 0x60, 0x9B, 0x10, 0x10,
+0xD6, 0xF6, 0x78, 0x9B, 0xA0, 0xDB, 0x10, 0xF0,
+0x24, 0x6B, 0xD6, 0xF6, 0x7C, 0x9B, 0x10, 0x10,
 0x30, 0xF0, 0x20, 0x6B, 0xC0, 0xF1, 0x08, 0x4B,
 0x50, 0x9B, 0xAD, 0xEA, 0x50, 0xDB, 0x10, 0xF0,
-0x24, 0x6B, 0xD7, 0xF0, 0x64, 0x9B, 0xA0, 0xDB,
-0x10, 0xF0, 0x24, 0x6B, 0xD7, 0xF0, 0x68, 0x9B,
+0x24, 0x6B, 0xF6, 0xF6, 0x60, 0x9B, 0xA0, 0xDB,
+0x10, 0xF0, 0x24, 0x6B, 0xF6, 0xF6, 0x64, 0x9B,
 0x40, 0xDB, 0x20, 0xE8, 0x01, 0x74, 0x16, 0x60,
 0x03, 0x24, 0x02, 0x74, 0x25, 0x60, 0x20, 0xE8,
 0x30, 0xF0, 0x20, 0x6B, 0xC0, 0xF1, 0x08, 0x4B,
 0x8E, 0x9B, 0xAF, 0xEA, 0x8C, 0xEA, 0x4E, 0xDB,
-0x10, 0xF0, 0x24, 0x6B, 0xB7, 0xF0, 0x78, 0x9B,
-0x40, 0xDB, 0x10, 0xF0, 0x24, 0x6A, 0x36, 0xF5,
-0x48, 0x9A, 0x23, 0x10, 0x30, 0xF0, 0x20, 0x6B,
+0x10, 0xF0, 0x24, 0x6B, 0xD6, 0xF6, 0x74, 0x9B,
+0x40, 0xDB, 0x10, 0xF0, 0x24, 0x6A, 0x56, 0xF3,
+0x44, 0x9A, 0x23, 0x10, 0x30, 0xF0, 0x20, 0x6B,
 0xC0, 0xF1, 0x08, 0x4B, 0x8F, 0x9B, 0xAF, 0xEA,
 0x8C, 0xEA, 0x4F, 0xDB, 0x10, 0xF0, 0x24, 0x6B,
-0xD7, 0xF0, 0x60, 0x9B, 0x40, 0xDB, 0x10, 0xF0,
-0x24, 0x6A, 0xB7, 0xF0, 0x5C, 0x9A, 0x11, 0x10,
+0xD6, 0xF6, 0x7C, 0x9B, 0x40, 0xDB, 0x10, 0xF0,
+0x24, 0x6A, 0xD6, 0xF6, 0x58, 0x9A, 0x11, 0x10,
 0x30, 0xF0, 0x20, 0x6B, 0xC0, 0xF1, 0x08, 0x4B,
 0x90, 0x9B, 0xAF, 0xEA, 0x8C, 0xEA, 0x50, 0xDB,
-0x10, 0xF0, 0x24, 0x6B, 0xD7, 0xF0, 0x68, 0x9B,
-0x40, 0xDB, 0x10, 0xF0, 0x24, 0x6A, 0xD7, 0xF0,
-0x44, 0x9A, 0xA0, 0xDA, 0x20, 0xE8, 0x00, 0x65,
-0x10, 0xF0, 0x24, 0x6C, 0x97, 0xF0, 0x98, 0x9C,
+0x10, 0xF0, 0x24, 0x6B, 0xF6, 0xF6, 0x64, 0x9B,
+0x40, 0xDB, 0x10, 0xF0, 0x24, 0x6A, 0xF6, 0xF6,
+0x40, 0x9A, 0xA0, 0xDA, 0x20, 0xE8, 0x00, 0x65,
+0x10, 0xF0, 0x24, 0x6C, 0xB6, 0xF6, 0x94, 0x9C,
 0x00, 0x6A, 0x30, 0xF0, 0x20, 0x6B, 0xC0, 0xF1,
 0x48, 0xDB, 0xC0, 0xF1, 0x08, 0x4B, 0x41, 0xDB,
 0x42, 0xDB, 0x43, 0xDB, 0x44, 0xDB, 0x40, 0xDC,
-0x10, 0xF0, 0x24, 0x6C, 0x97, 0xF0, 0x9C, 0x9C,
-0x40, 0xDC, 0x10, 0xF0, 0x24, 0x6C, 0xB7, 0xF0,
-0x84, 0x9C, 0x40, 0xDC, 0x10, 0xF0, 0x24, 0x6C,
-0xB7, 0xF0, 0x8C, 0x9C, 0x40, 0xDC, 0x10, 0xF0,
-0x24, 0x6C, 0xB7, 0xF0, 0x94, 0x9C, 0x40, 0xDC,
-0x10, 0xF0, 0x24, 0x6C, 0xB7, 0xF0, 0x98, 0x9C,
+0x10, 0xF0, 0x24, 0x6C, 0xB6, 0xF6, 0x98, 0x9C,
+0x40, 0xDC, 0x10, 0xF0, 0x24, 0x6C, 0xD6, 0xF6,
+0x80, 0x9C, 0x40, 0xDC, 0x10, 0xF0, 0x24, 0x6C,
+0xD6, 0xF6, 0x88, 0x9C, 0x40, 0xDC, 0x10, 0xF0,
+0x24, 0x6C, 0xD6, 0xF6, 0x90, 0x9C, 0x40, 0xDC,
+0x10, 0xF0, 0x24, 0x6C, 0xD6, 0xF6, 0x94, 0x9C,
 0x4E, 0xDB, 0x4F, 0xDB, 0x40, 0xDC, 0x10, 0xF0,
-0x24, 0x6C, 0xD7, 0xF0, 0x80, 0x9C, 0x40, 0xDC,
-0x10, 0xF0, 0x24, 0x6C, 0xD7, 0xF0, 0x88, 0x9C,
+0x24, 0x6C, 0xD6, 0xF6, 0x9C, 0x9C, 0x40, 0xDC,
+0x10, 0xF0, 0x24, 0x6C, 0xF6, 0xF6, 0x84, 0x9C,
 0x50, 0xDB, 0x40, 0xDC, 0x4C, 0xDB, 0x10, 0xF0,
-0x24, 0x6B, 0x97, 0xF0, 0x6C, 0x9B, 0x40, 0xDB,
+0x24, 0x6B, 0xB6, 0xF6, 0x68, 0x9B, 0x40, 0xDB,
 0x20, 0xE8, 0x00, 0x65, 0x10, 0xF0, 0x24, 0x6B,
-0x37, 0xF0, 0x74, 0x9B, 0x01, 0x6A, 0x4B, 0xEA,
-0x40, 0xDB, 0x10, 0xF0, 0x24, 0x6B, 0x36, 0xF6,
+0x56, 0xF6, 0x70, 0x9B, 0x01, 0x6A, 0x4B, 0xEA,
+0x40, 0xDB, 0x10, 0xF0, 0x24, 0x6B, 0x56, 0xF4,
+0x74, 0x9B, 0x40, 0xDB, 0x10, 0xF0, 0x24, 0x6B,
+0xB6, 0xF6, 0x7C, 0x9B, 0x40, 0xDB, 0x10, 0xF0,
+0x24, 0x6B, 0xD6, 0xF6, 0x64, 0x9B, 0x40, 0xDB,
+0x10, 0xF0, 0x24, 0x6B, 0x56, 0xF3, 0x64, 0x9B,
+0x40, 0xDB, 0x10, 0xF0, 0x24, 0x6B, 0xD6, 0xF6,
 0x78, 0x9B, 0x40, 0xDB, 0x10, 0xF0, 0x24, 0x6B,
-0xB7, 0xF0, 0x60, 0x9B, 0x40, 0xDB, 0x10, 0xF0,
-0x24, 0x6B, 0xB7, 0xF0, 0x68, 0x9B, 0x40, 0xDB,
-0x10, 0xF0, 0x24, 0x6B, 0x36, 0xF5, 0x68, 0x9B,
-0x40, 0xDB, 0x10, 0xF0, 0x24, 0x6B, 0xB7, 0xF0,
-0x7C, 0x9B, 0x40, 0xDB, 0x10, 0xF0, 0x24, 0x6B,
-0xD7, 0xF0, 0x68, 0x9B, 0x40, 0xDB, 0x10, 0xF0,
-0x24, 0x6B, 0x97, 0xF0, 0x68, 0x9B, 0x40, 0xDB,
+0xF6, 0xF6, 0x64, 0x9B, 0x40, 0xDB, 0x10, 0xF0,
+0x24, 0x6B, 0xB6, 0xF6, 0x64, 0x9B, 0x40, 0xDB,
 0x20, 0xE8, 0x00, 0x65, 0xFF, 0x6A, 0x4C, 0xEC,
 0x05, 0x5C, 0x4C, 0xED, 0x00, 0x6A, 0x61, 0x60,
-0x10, 0xF0, 0x24, 0x6A, 0x88, 0x34, 0xD6, 0xF3,
-0x00, 0x4A, 0x89, 0xE2, 0x40, 0x9A, 0x00, 0xEA,
-0x05, 0x2D, 0x10, 0xF0, 0x24, 0x6A, 0xD7, 0xF0,
-0x54, 0x9A, 0x0A, 0x10, 0x10, 0xF0, 0x24, 0x6A,
-0xD7, 0xF0, 0x54, 0x9A, 0x0C, 0x10, 0x07, 0x2D,
-0x10, 0xF0, 0x24, 0x6A, 0xD7, 0xF0, 0x58, 0x9A,
+0x10, 0xF0, 0x24, 0x6A, 0x88, 0x34, 0xD6, 0xF1,
+0x1C, 0x4A, 0x89, 0xE2, 0x40, 0x9A, 0x00, 0xEA,
+0x05, 0x2D, 0x10, 0xF0, 0x24, 0x6A, 0xF6, 0xF6,
+0x50, 0x9A, 0x0A, 0x10, 0x10, 0xF0, 0x24, 0x6A,
+0xF6, 0xF6, 0x50, 0x9A, 0x0C, 0x10, 0x07, 0x2D,
+0x10, 0xF0, 0x24, 0x6A, 0xF6, 0xF6, 0x54, 0x9A,
 0x60, 0xA2, 0x01, 0x6A, 0x39, 0x10, 0x10, 0xF0,
-0x24, 0x6A, 0xD7, 0xF0, 0x58, 0x9A, 0x60, 0xA2,
+0x24, 0x6A, 0xF6, 0xF6, 0x54, 0x9A, 0x60, 0xA2,
 0xFF, 0x6A, 0x6C, 0xEA, 0x46, 0x32, 0x2F, 0x10,
-0x09, 0x2D, 0x10, 0xF0, 0x24, 0x6A, 0xD7, 0xF0,
-0x58, 0x9A, 0x60, 0xA2, 0xFF, 0x6A, 0x6C, 0xEA,
+0x09, 0x2D, 0x10, 0xF0, 0x24, 0x6A, 0xF6, 0xF6,
+0x54, 0x9A, 0x60, 0xA2, 0xFF, 0x6A, 0x6C, 0xEA,
 0x4A, 0x32, 0x25, 0x10, 0x10, 0xF0, 0x24, 0x6A,
-0xD7, 0xF0, 0x58, 0x9A, 0x60, 0xA2, 0xFF, 0x6A,
+0xF6, 0xF6, 0x54, 0x9A, 0x60, 0xA2, 0xFF, 0x6A,
 0x6C, 0xEA, 0x4E, 0x32, 0x1C, 0x10, 0x09, 0x2D,
-0x10, 0xF0, 0x24, 0x6A, 0xD7, 0xF0, 0x58, 0x9A,
+0x10, 0xF0, 0x24, 0x6A, 0xF6, 0xF6, 0x54, 0x9A,
 0x60, 0xA2, 0xFF, 0x6A, 0x6C, 0xEA, 0x52, 0x32,
-0x12, 0x10, 0x10, 0xF0, 0x24, 0x6A, 0xD7, 0xF0,
-0x58, 0x9A, 0x60, 0xA2, 0xFF, 0x6A, 0x6C, 0xEA,
+0x12, 0x10, 0x10, 0xF0, 0x24, 0x6A, 0xF6, 0xF6,
+0x54, 0x9A, 0x60, 0xA2, 0xFF, 0x6A, 0x6C, 0xEA,
 0x56, 0x32, 0x09, 0x10, 0x0B, 0x2D, 0x10, 0xF0,
-0x24, 0x6A, 0xD7, 0xF0, 0x58, 0x9A, 0x60, 0xA2,
+0x24, 0x6A, 0xF6, 0xF6, 0x54, 0x9A, 0x60, 0xA2,
 0xFF, 0x6A, 0x6C, 0xEA, 0x5A, 0x32, 0x01, 0x6B,
 0x6C, 0xEA, 0x20, 0xE8, 0x10, 0xF0, 0x24, 0x6A,
-0xD7, 0xF0, 0x58, 0x9A, 0x40, 0xA2, 0x00, 0xF6,
+0xF6, 0xF6, 0x54, 0x9A, 0x40, 0xA2, 0x00, 0xF6,
 0x40, 0x32, 0x00, 0xF6, 0x43, 0x32, 0xC0, 0xF7,
 0x42, 0x32, 0x20, 0xE8, 0xFC, 0x63, 0x07, 0x62,
 0x06, 0xD1, 0x05, 0xD0, 0xFF, 0x69, 0x8C, 0xE9,
 0x00, 0x68, 0xFF, 0x6A, 0x0C, 0xEA, 0x2E, 0xEA,
-0x10, 0x2A, 0x91, 0x67, 0x00, 0x18, 0xA3, 0xE9,
-0x91, 0x67, 0x00, 0x18, 0x92, 0xE9, 0x91, 0x67,
-0x00, 0x18, 0xAA, 0xE9, 0x91, 0x67, 0x00, 0x18,
-0x64, 0xE9, 0x91, 0x67, 0x00, 0x18, 0x71, 0xE9,
-0x0F, 0x10, 0x90, 0x67, 0x00, 0x18, 0xC9, 0xE9,
-0x90, 0x67, 0x00, 0x18, 0xB8, 0xE9, 0x90, 0x67,
-0x00, 0x18, 0xD0, 0xE9, 0x90, 0x67, 0x00, 0x18,
-0x88, 0xE9, 0x90, 0x67, 0x00, 0x18, 0x7E, 0xE9,
+0x10, 0x2A, 0x91, 0x67, 0x00, 0x18, 0x2A, 0xE9,
+0x91, 0x67, 0x00, 0x18, 0x19, 0xE9, 0x91, 0x67,
+0x00, 0x18, 0x31, 0xE9, 0x91, 0x67, 0x00, 0x18,
+0xEB, 0xE8, 0x91, 0x67, 0x00, 0x18, 0xF8, 0xE8,
+0x0F, 0x10, 0x90, 0x67, 0x00, 0x18, 0x50, 0xE9,
+0x90, 0x67, 0x00, 0x18, 0x3F, 0xE9, 0x90, 0x67,
+0x00, 0x18, 0x57, 0xE9, 0x90, 0x67, 0x00, 0x18,
+0x0F, 0xE9, 0x90, 0x67, 0x00, 0x18, 0x05, 0xE9,
 0x01, 0x48, 0x05, 0x70, 0xDA, 0x61, 0x07, 0x97,
 0x06, 0x91, 0x05, 0x90, 0x04, 0x63, 0x00, 0xEF,
 0xFC, 0x63, 0x07, 0x62, 0x06, 0xD1, 0x05, 0xD0,
 0x10, 0xF0, 0x24, 0x6A, 0xFF, 0xF7, 0x1F, 0x69,
-0x8C, 0xE9, 0xB6, 0xF6, 0x8C, 0x9A, 0xFF, 0x6B,
+0x8C, 0xE9, 0xD6, 0xF4, 0x88, 0x9A, 0xFF, 0x6B,
 0x8E, 0x6A, 0xA0, 0xA4, 0x00, 0x68, 0x6C, 0xED,
 0xAC, 0xEA, 0x40, 0xC4, 0x71, 0x6A, 0xAD, 0xEA,
 0x6C, 0xEA, 0x40, 0xC4, 0x10, 0xF0, 0x24, 0x6A,
-0xF7, 0xF0, 0x80, 0x9A, 0x01, 0x6D, 0x40, 0xA4,
+0xF6, 0xF6, 0x9C, 0x9A, 0x01, 0x6D, 0x40, 0xA4,
 0x6C, 0xEA, 0xAD, 0xEA, 0x6C, 0xEA, 0x40, 0xC4,
 0x19, 0x10, 0x64, 0x70, 0x0D, 0x61, 0x10, 0xF0,
-0x24, 0x6A, 0x16, 0xF5, 0x7C, 0x9A, 0x10, 0xF0,
-0x24, 0x6C, 0x36, 0xF5, 0x98, 0x9C, 0x40, 0x9B,
+0x24, 0x6A, 0x36, 0xF3, 0x78, 0x9A, 0x10, 0xF0,
+0x24, 0x6C, 0x56, 0xF3, 0x94, 0x9C, 0x40, 0x9B,
 0x8D, 0xEA, 0x40, 0xDB, 0x00, 0x6A, 0x1C, 0x10,
 0xFF, 0xF7, 0x1F, 0x6A, 0x01, 0x48, 0x4C, 0xE8,
 0x30, 0xF0, 0x20, 0x6A, 0xCE, 0xF4, 0x5C, 0x9A,
 0x0A, 0x6C, 0x40, 0xEA, 0x10, 0xF0, 0x24, 0x6A,
-0xF7, 0xF0, 0x40, 0x9A, 0x60, 0xA2, 0x01, 0x6A,
+0xF6, 0xF6, 0x5C, 0x9A, 0x60, 0xA2, 0x01, 0x6A,
 0x6C, 0xEA, 0xDF, 0x2A, 0xFF, 0xF7, 0x1F, 0x6A,
 0x01, 0x49, 0x4C, 0xE9, 0x10, 0xF0, 0x24, 0x6A,
-0xD6, 0xF5, 0x4C, 0x9A, 0x20, 0xCA, 0x01, 0x6A,
+0xF6, 0xF3, 0x48, 0x9A, 0x20, 0xCA, 0x01, 0x6A,
 0x07, 0x97, 0x06, 0x91, 0x05, 0x90, 0x04, 0x63,
 0x00, 0xEF, 0x00, 0x65, 0xF9, 0x63, 0x0D, 0x62,
 0x0C, 0xD1, 0x0B, 0xD0, 0x30, 0xF0, 0x20, 0x6B,
@@ -49232,17 +48994,17 @@ u8 array_mp_8821c_fw_wowlan[] = {
 0x08, 0x61, 0x0E, 0xF0, 0x40, 0x40, 0xFF, 0xF7,
 0x1F, 0x6B, 0x6C, 0xEA, 0x00, 0xF1, 0x00, 0x5A,
 0x39, 0x60, 0x08, 0x92, 0x04, 0x72, 0x11, 0x61,
-0x10, 0xF0, 0x24, 0x6A, 0xB6, 0xF4, 0x4C, 0x9A,
+0x10, 0xF0, 0x24, 0x6A, 0xD6, 0xF2, 0x48, 0x9A,
 0xFF, 0x6B, 0x49, 0xE0, 0x40, 0xA2, 0x4C, 0xEB,
 0x5F, 0x21, 0x06, 0x94, 0x8F, 0xEA, 0x6C, 0xEA,
 0x04, 0x93, 0x8C, 0xEB, 0x6D, 0xEA, 0x04, 0xD2,
 0x57, 0x10, 0x08, 0x92, 0x05, 0x72, 0x12, 0x61,
-0x10, 0xF0, 0x24, 0x6A, 0xB6, 0xF4, 0x4C, 0x9A,
+0x10, 0xF0, 0x24, 0x6A, 0xD6, 0xF2, 0x48, 0x9A,
 0xFF, 0xF7, 0x1F, 0x6B, 0x49, 0xE0, 0x40, 0xAA,
 0x4C, 0xEB, 0x7F, 0x21, 0x06, 0x94, 0x8F, 0xEA,
 0x6C, 0xEA, 0x04, 0x93, 0x8C, 0xEB, 0x6D, 0xEA,
 0x04, 0xD2, 0x77, 0x10, 0x10, 0xF0, 0x24, 0x6A,
-0xB6, 0xF4, 0x4C, 0x9A, 0x49, 0xE0, 0x60, 0x9A,
+0xD6, 0xF2, 0x48, 0x9A, 0x49, 0xE0, 0x60, 0x9A,
 0x80, 0xF0, 0x1E, 0x21, 0x06, 0x94, 0x8F, 0xEA,
 0x6C, 0xEA, 0x04, 0x93, 0x8C, 0xEB, 0x6D, 0xEA,
 0x04, 0xD2, 0x96, 0x10, 0x01, 0xF0, 0x00, 0x58,
@@ -49251,44 +49013,44 @@ u8 array_mp_8821c_fw_wowlan[] = {
 0x80, 0xF0, 0x17, 0x60, 0x08, 0x92, 0x04, 0x72,
 0x31, 0x61, 0x1F, 0xF7, 0x00, 0x6A, 0x0C, 0xEA,
 0x02, 0xF0, 0x00, 0x72, 0x01, 0x60, 0x05, 0x2A,
-0x10, 0xF0, 0x24, 0x6A, 0xB6, 0xF4, 0x4C, 0x9A,
-0x04, 0x10, 0x10, 0xF0, 0x24, 0x6A, 0xB6, 0xF4,
-0x50, 0x9A, 0x49, 0xE0, 0x60, 0xA2, 0xFF, 0x6A,
+0x10, 0xF0, 0x24, 0x6A, 0xD6, 0xF2, 0x48, 0x9A,
+0x04, 0x10, 0x10, 0xF0, 0x24, 0x6A, 0xD6, 0xF2,
+0x4C, 0x9A, 0x49, 0xE0, 0x60, 0xA2, 0xFF, 0x6A,
 0x6C, 0xEA, 0x07, 0x21, 0x06, 0x94, 0x8F, 0xEB,
 0x4C, 0xEB, 0x04, 0x92, 0x8C, 0xEA, 0x4D, 0xEB,
 0x04, 0xD3, 0x1F, 0xF7, 0x00, 0x6A, 0x0C, 0xEA,
 0x02, 0xF0, 0x00, 0x72, 0x01, 0x60, 0x05, 0x2A,
-0x10, 0xF0, 0x24, 0x6A, 0xB6, 0xF4, 0x4C, 0x9A,
-0x04, 0x10, 0x10, 0xF0, 0x24, 0x6A, 0xB6, 0xF4,
-0x50, 0x9A, 0x7D, 0x67, 0x41, 0xE0, 0x50, 0xA3,
+0x10, 0xF0, 0x24, 0x6A, 0xD6, 0xF2, 0x48, 0x9A,
+0x04, 0x10, 0x10, 0xF0, 0x24, 0x6A, 0xD6, 0xF2,
+0x4C, 0x9A, 0x7D, 0x67, 0x41, 0xE0, 0x50, 0xA3,
 0x40, 0xC0, 0x7E, 0x10, 0x08, 0x92, 0x05, 0x72,
 0x32, 0x61, 0x1F, 0xF7, 0x00, 0x6A, 0x0C, 0xEA,
 0x02, 0xF0, 0x00, 0x72, 0x01, 0x60, 0x05, 0x2A,
-0x10, 0xF0, 0x24, 0x6A, 0xB6, 0xF4, 0x4C, 0x9A,
-0x04, 0x10, 0x10, 0xF0, 0x24, 0x6A, 0xB6, 0xF4,
-0x50, 0x9A, 0x49, 0xE0, 0x60, 0xAA, 0xFF, 0xF7,
+0x10, 0xF0, 0x24, 0x6A, 0xD6, 0xF2, 0x48, 0x9A,
+0x04, 0x10, 0x10, 0xF0, 0x24, 0x6A, 0xD6, 0xF2,
+0x4C, 0x9A, 0x49, 0xE0, 0x60, 0xAA, 0xFF, 0xF7,
 0x1F, 0x6A, 0x6C, 0xEA, 0x07, 0x21, 0x06, 0x94,
 0x8F, 0xEB, 0x4C, 0xEB, 0x04, 0x92, 0x8C, 0xEA,
 0x4D, 0xEB, 0x04, 0xD3, 0x1F, 0xF7, 0x00, 0x6A,
 0x0C, 0xEA, 0x02, 0xF0, 0x00, 0x72, 0x01, 0x60,
-0x05, 0x2A, 0x10, 0xF0, 0x24, 0x6A, 0xB6, 0xF4,
-0x4C, 0x9A, 0x04, 0x10, 0x10, 0xF0, 0x24, 0x6A,
-0xB6, 0xF4, 0x50, 0x9A, 0x7D, 0x67, 0x41, 0xE0,
+0x05, 0x2A, 0x10, 0xF0, 0x24, 0x6A, 0xD6, 0xF2,
+0x48, 0x9A, 0x04, 0x10, 0x10, 0xF0, 0x24, 0x6A,
+0xD6, 0xF2, 0x4C, 0x9A, 0x7D, 0x67, 0x41, 0xE0,
 0x48, 0xAB, 0x40, 0xC8, 0x49, 0x10, 0x1F, 0xF7,
 0x00, 0x6A, 0x0C, 0xEA, 0x02, 0xF0, 0x00, 0x72,
 0x01, 0x60, 0x05, 0x2A, 0x10, 0xF0, 0x24, 0x6A,
-0xB6, 0xF4, 0x4C, 0x9A, 0x04, 0x10, 0x10, 0xF0,
-0x24, 0x6A, 0xB6, 0xF4, 0x50, 0x9A, 0x49, 0xE0,
+0xD6, 0xF2, 0x48, 0x9A, 0x04, 0x10, 0x10, 0xF0,
+0x24, 0x6A, 0xD6, 0xF2, 0x4C, 0x9A, 0x49, 0xE0,
 0x60, 0x9A, 0x07, 0x21, 0x06, 0x94, 0x8F, 0xEA,
 0x6C, 0xEA, 0x04, 0x93, 0x8C, 0xEB, 0x6D, 0xEA,
 0x04, 0xD2, 0x1F, 0xF7, 0x00, 0x6A, 0x0C, 0xEA,
 0x02, 0xF0, 0x00, 0x72, 0x01, 0x60, 0x05, 0x2A,
-0x10, 0xF0, 0x24, 0x6A, 0xB6, 0xF4, 0x4C, 0x9A,
-0x04, 0x10, 0x10, 0xF0, 0x24, 0x6A, 0xB6, 0xF4,
-0x50, 0x9A, 0x41, 0xE0, 0x04, 0x92, 0x40, 0xD8,
+0x10, 0xF0, 0x24, 0x6A, 0xD6, 0xF2, 0x48, 0x9A,
+0x04, 0x10, 0x10, 0xF0, 0x24, 0x6A, 0xD6, 0xF2,
+0x4C, 0x9A, 0x41, 0xE0, 0x04, 0x92, 0x40, 0xD8,
 0x1B, 0x10, 0xFF, 0xF7, 0x1C, 0x6A, 0x0C, 0xEA,
 0x01, 0x6D, 0x82, 0x67, 0xAB, 0xED, 0x08, 0xD2,
-0x00, 0x18, 0xD5, 0xE3, 0x05, 0xD2, 0x07, 0x21,
+0x00, 0x18, 0x5C, 0xE3, 0x05, 0xD2, 0x07, 0x21,
 0x06, 0x94, 0x8F, 0xEB, 0x4C, 0xEB, 0x04, 0x92,
 0x8C, 0xEA, 0x4D, 0xEB, 0x04, 0xD3, 0x30, 0xF0,
 0x20, 0x6A, 0xCE, 0xF4, 0x50, 0x9A, 0x08, 0x94,
@@ -49300,19 +49062,19 @@ u8 array_mp_8821c_fw_wowlan[] = {
 0x07, 0xD2, 0x00, 0x6A, 0x59, 0x60, 0x7F, 0x6D,
 0x6C, 0xED, 0x4C, 0x45, 0xFF, 0x6B, 0x6C, 0xEA,
 0x0E, 0x5A, 0x08, 0x60, 0x10, 0xF0, 0x24, 0x6B,
-0x48, 0x32, 0xD6, 0xF3, 0x14, 0x4B, 0x4D, 0xE3,
+0x48, 0x32, 0xF6, 0xF1, 0x10, 0x4B, 0x4D, 0xE3,
 0x40, 0x9B, 0x00, 0xEA, 0x03, 0x6A, 0x48, 0x10,
 0x61, 0xA4, 0x80, 0x6A, 0x4B, 0xEA, 0x6C, 0xEA,
 0xFF, 0x6E, 0x07, 0x03, 0x90, 0x67, 0x4C, 0xEE,
-0x06, 0x07, 0x04, 0xD3, 0x00, 0x18, 0xF9, 0xE0,
+0x06, 0x07, 0x04, 0xD3, 0x00, 0x18, 0x87, 0xE0,
 0x1F, 0x10, 0x81, 0xA4, 0x80, 0x6A, 0xFF, 0x69,
 0x64, 0x67, 0x4C, 0xEB, 0x0C, 0xE9, 0x02, 0x32,
 0x01, 0x6E, 0x82, 0x67, 0xB1, 0x67, 0xCB, 0xEE,
-0x08, 0xD3, 0x09, 0xD2, 0x00, 0x18, 0x20, 0xE4,
+0x08, 0xD3, 0x09, 0xD2, 0x00, 0x18, 0xA7, 0xE3,
 0x08, 0x93, 0x07, 0x23, 0x07, 0x94, 0x8F, 0xEB,
 0x4C, 0xEB, 0x06, 0x92, 0x8C, 0xEA, 0x4D, 0xEB,
 0x06, 0xD3, 0x09, 0x94, 0x06, 0x97, 0x01, 0x6E,
-0xB1, 0x67, 0xCB, 0xEE, 0x00, 0x18, 0x33, 0xE4,
+0xB1, 0x67, 0xCB, 0xEE, 0x00, 0x18, 0xBA, 0xE3,
 0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A,
 0x29, 0xF4, 0x7C, 0x9A, 0x06, 0x94, 0x61, 0xE0,
 0x49, 0xF4, 0x60, 0x9A, 0x29, 0xF4, 0x1C, 0xDA,
@@ -49322,34 +49084,34 @@ u8 array_mp_8821c_fw_wowlan[] = {
 0x58, 0x9A, 0x90, 0x67, 0x40, 0xEA, 0x01, 0x6A,
 0x0D, 0x97, 0x0C, 0x91, 0x0B, 0x90, 0x07, 0x63,
 0x00, 0xEF, 0x00, 0x65, 0x10, 0xF0, 0x24, 0x6A,
-0x97, 0xF0, 0x88, 0x9A, 0x30, 0xF0, 0x20, 0x6B,
+0xB6, 0xF6, 0x84, 0x9A, 0x30, 0xF0, 0x20, 0x6B,
 0xC0, 0xF1, 0x08, 0x4B, 0xA0, 0x9C, 0x4C, 0x9B,
 0xAC, 0xEA, 0x4D, 0xDB, 0x40, 0xDC, 0x20, 0xE8,
 0xFD, 0x63, 0x05, 0xD1, 0x04, 0xD0, 0x10, 0xF0,
-0x24, 0x6A, 0x37, 0xF0, 0x34, 0x9A, 0x10, 0xF0,
-0x24, 0x6A, 0x36, 0xF6, 0x18, 0x4A, 0x40, 0x9A,
+0x24, 0x6A, 0x56, 0xF6, 0x30, 0x9A, 0x10, 0xF0,
+0x24, 0x6A, 0x56, 0xF4, 0x14, 0x4A, 0x40, 0x9A,
 0x60, 0x99, 0x10, 0xF0, 0x24, 0x6C, 0xA0, 0x9A,
-0x10, 0xF0, 0x24, 0x6A, 0xB7, 0xF0, 0x40, 0x9A,
-0xB7, 0xF0, 0x08, 0x4C, 0x80, 0x9C, 0x00, 0x9A,
+0x10, 0xF0, 0x24, 0x6A, 0xB6, 0xF6, 0x5C, 0x9A,
+0xD6, 0xF6, 0x04, 0x4C, 0x80, 0x9C, 0x00, 0x9A,
 0x1A, 0x65, 0x10, 0xF0, 0x24, 0x6A, 0x80, 0x9C,
-0xB7, 0xF0, 0x10, 0x4A, 0x40, 0x9A, 0x01, 0xD4,
+0xD6, 0xF6, 0x0C, 0x4A, 0x40, 0x9A, 0x01, 0xD4,
 0x30, 0xF0, 0x20, 0x6C, 0x40, 0x9A, 0xC0, 0xF1,
 0xE8, 0x9C, 0x00, 0xD2, 0x44, 0x67, 0xC0, 0xF1,
 0x08, 0x4A, 0xC1, 0x9A, 0x83, 0x9A, 0x6C, 0xEF,
 0xAC, 0xEE, 0x01, 0x93, 0xA2, 0x9A, 0xE5, 0xDA,
 0x6C, 0xEC, 0x0C, 0xED, 0x64, 0x9A, 0x00, 0x90,
 0x88, 0xDA, 0xC6, 0xDA, 0x0C, 0xEB, 0xA7, 0xDA,
-0x69, 0xDA, 0x10, 0xF0, 0x24, 0x6A, 0x36, 0xF6,
-0x18, 0x4A, 0x40, 0x9A, 0xE0, 0xD9, 0x18, 0x67,
-0xC0, 0xDA, 0x10, 0xF0, 0x24, 0x6A, 0xB7, 0xF0,
-0x08, 0x4A, 0x40, 0x9A, 0xA0, 0xD8, 0x80, 0xDA,
-0x10, 0xF0, 0x24, 0x6C, 0xB7, 0xF0, 0x10, 0x4C,
+0x69, 0xDA, 0x10, 0xF0, 0x24, 0x6A, 0x56, 0xF4,
+0x14, 0x4A, 0x40, 0x9A, 0xE0, 0xD9, 0x18, 0x67,
+0xC0, 0xDA, 0x10, 0xF0, 0x24, 0x6A, 0xD6, 0xF6,
+0x04, 0x4A, 0x40, 0x9A, 0xA0, 0xD8, 0x80, 0xDA,
+0x10, 0xF0, 0x24, 0x6C, 0xD6, 0xF6, 0x0C, 0x4C,
 0x80, 0x9C, 0x60, 0xDC, 0x05, 0x91, 0x04, 0x90,
 0x03, 0x63, 0x20, 0xE8, 0xFF, 0x63, 0x01, 0xD1,
-0x00, 0xD0, 0x10, 0xF0, 0x24, 0x6A, 0x36, 0xF5,
-0x08, 0x9A, 0x10, 0xF0, 0x24, 0x6A, 0xB7, 0xF0,
-0xFC, 0x9A, 0x10, 0xF0, 0x24, 0x6A, 0xD7, 0xF0,
-0xC4, 0x9A, 0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1,
+0x00, 0xD0, 0x10, 0xF0, 0x24, 0x6A, 0x56, 0xF3,
+0x04, 0x9A, 0x10, 0xF0, 0x24, 0x6A, 0xD6, 0xF6,
+0xF8, 0x9A, 0x10, 0xF0, 0x24, 0x6A, 0xF6, 0xF6,
+0xC0, 0x9A, 0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1,
 0x08, 0x4A, 0x80, 0x98, 0xAE, 0x9A, 0x60, 0x9F,
 0x20, 0x9E, 0x8C, 0xED, 0x8F, 0x9A, 0xB1, 0xDA,
 0x6C, 0xEC, 0x70, 0x9A, 0x92, 0xDA, 0x2C, 0xEB,
@@ -49365,7 +49127,7 @@ u8 array_mp_8821c_fw_wowlan[] = {
 0xA5, 0xA4, 0xCC, 0xED, 0x1D, 0x25, 0xE9, 0xF0,
 0xA6, 0xA4, 0x29, 0xF1, 0x60, 0x9B, 0xE9, 0xF0,
 0x85, 0xA4, 0x75, 0xE5, 0x10, 0xF0, 0x24, 0x6B,
-0xF6, 0xF5, 0x78, 0x9B, 0xBC, 0x35, 0x21, 0x4D,
+0x16, 0xF4, 0x74, 0x9B, 0xBC, 0x35, 0x21, 0x4D,
 0x75, 0xE5, 0xE0, 0xA5, 0x9E, 0x33, 0x9A, 0x34,
 0xCC, 0xEC, 0x78, 0x33, 0x9C, 0x34, 0x4C, 0xEF,
 0x8D, 0xEB, 0xED, 0xEB, 0x00, 0xF6, 0x60, 0x33,
@@ -49381,8 +49143,8 @@ u8 array_mp_8821c_fw_wowlan[] = {
 0x20, 0xE8, 0x00, 0x65, 0x20, 0xE8, 0x00, 0x65,
 0x20, 0xE8, 0x00, 0x65, 0x20, 0xE8, 0x00, 0x65,
 0x20, 0xE8, 0x00, 0x65, 0x20, 0xE8, 0x00, 0x65,
-0x10, 0xF0, 0x24, 0x6A, 0x16, 0xF5, 0x7C, 0x9A,
-0x10, 0xF0, 0x24, 0x6C, 0x36, 0xF5, 0x90, 0x9C,
+0x10, 0xF0, 0x24, 0x6A, 0x36, 0xF3, 0x78, 0x9A,
+0x10, 0xF0, 0x24, 0x6C, 0x56, 0xF3, 0x8C, 0x9C,
 0x40, 0x9B, 0x8D, 0xEA, 0x40, 0xDB, 0x20, 0xE8,
 0x20, 0xE8, 0x00, 0x65, 0xFD, 0x63, 0x05, 0x62,
 0x30, 0xF0, 0x20, 0x6B, 0x30, 0xF0, 0x20, 0x6A,
@@ -49390,9 +49152,9 @@ u8 array_mp_8821c_fw_wowlan[] = {
 0x40, 0xEA, 0x01, 0x6B, 0x6E, 0xEA, 0x1E, 0x2A,
 0x30, 0xF0, 0x20, 0x6B, 0xC0, 0xF1, 0x08, 0x4B,
 0x68, 0xF3, 0xB4, 0xA3, 0x7F, 0x6C, 0xAC, 0xEC,
-0x15, 0x24, 0x10, 0xF0, 0x24, 0x6C, 0x96, 0xF5,
-0x88, 0x9C, 0x00, 0x6D, 0x40, 0xC4, 0x10, 0xF0,
-0x24, 0x6A, 0x36, 0xF5, 0x48, 0x9A, 0x02, 0x6C,
+0x15, 0x24, 0x10, 0xF0, 0x24, 0x6C, 0xB6, 0xF3,
+0x84, 0x9C, 0x00, 0x6D, 0x40, 0xC4, 0x10, 0xF0,
+0x24, 0x6A, 0x56, 0xF3, 0x44, 0x9A, 0x02, 0x6C,
 0x80, 0xC2, 0x30, 0xF0, 0x20, 0x6A, 0xAE, 0xF2,
 0x50, 0x9A, 0xE8, 0xF3, 0xC5, 0xA3, 0xFF, 0x6C,
 0x55, 0x4C, 0x40, 0xEA, 0x05, 0x97, 0x03, 0x63,
@@ -49402,7 +49164,7 @@ u8 array_mp_8821c_fw_wowlan[] = {
 0xFD, 0x63, 0x05, 0x62, 0x30, 0xF0, 0x20, 0x6B,
 0x28, 0xF5, 0xBC, 0xA3, 0x7F, 0x6B, 0xFF, 0x6A,
 0xAC, 0xEB, 0x4C, 0xEB, 0x4C, 0xEC, 0x02, 0x23,
-0x00, 0x18, 0xE8, 0xCA, 0x05, 0x97, 0x03, 0x63,
+0x00, 0x18, 0xD9, 0xCA, 0x05, 0x97, 0x03, 0x63,
 0x00, 0xEF, 0x00, 0x65, 0xFC, 0x63, 0x07, 0x62,
 0x06, 0xD1, 0x05, 0xD0, 0x30, 0xF0, 0x20, 0x6B,
 0x30, 0xF0, 0x20, 0x6A, 0x24, 0x67, 0x6E, 0xF5,
@@ -49423,8 +49185,8 @@ u8 array_mp_8821c_fw_wowlan[] = {
 0x29, 0x2A, 0x30, 0xF0, 0x20, 0x6B, 0xC0, 0xF1,
 0x08, 0x4B, 0x68, 0xF3, 0xB4, 0xA3, 0x7F, 0x6C,
 0xAC, 0xEC, 0x0C, 0xEC, 0x1F, 0x24, 0x10, 0xF0,
-0x24, 0x6C, 0x96, 0xF5, 0x88, 0x9C, 0x40, 0xC4,
-0x10, 0xF0, 0x24, 0x6A, 0x36, 0xF5, 0x48, 0x9A,
+0x24, 0x6C, 0xB6, 0xF3, 0x84, 0x9C, 0x40, 0xC4,
+0x10, 0xF0, 0x24, 0x6A, 0x56, 0xF3, 0x44, 0x9A,
 0x02, 0x6C, 0x80, 0xC2, 0x68, 0xF3, 0x99, 0xA3,
 0x03, 0x6A, 0x4B, 0xEA, 0x4C, 0xEC, 0x68, 0xF3,
 0x99, 0xC3, 0x68, 0xF3, 0x9D, 0xA3, 0x8C, 0xEA,
@@ -49443,7 +49205,7 @@ u8 array_mp_8821c_fw_wowlan[] = {
 0x6C, 0xEA, 0x0C, 0xEA, 0x20, 0x72, 0x06, 0x60,
 0x30, 0xF0, 0x20, 0x6A, 0x2E, 0xF4, 0x54, 0x9A,
 0x40, 0xEA, 0x03, 0x10, 0x91, 0x67, 0x00, 0x18,
-0xED, 0xCA, 0x07, 0x97, 0x06, 0x91, 0x05, 0x90,
+0xDE, 0xCA, 0x07, 0x97, 0x06, 0x91, 0x05, 0x90,
 0x04, 0x63, 0x00, 0xEF, 0xFD, 0x63, 0x05, 0x62,
 0x04, 0xD0, 0xFF, 0x68, 0x8C, 0xE8, 0x90, 0x67,
 0x00, 0x18, 0xB3, 0xC7, 0x16, 0x22, 0x30, 0xF0,
@@ -49452,23 +49214,23 @@ u8 array_mp_8821c_fw_wowlan[] = {
 0x6C, 0xA2, 0x01, 0x4B, 0x80, 0xF1, 0x6C, 0xC2,
 0x30, 0xF0, 0x20, 0x6A, 0x48, 0xF5, 0x44, 0xA2,
 0x02, 0x72, 0x03, 0x60, 0x90, 0x67, 0x00, 0x18,
-0xAD, 0xCB, 0x05, 0x97, 0x04, 0x90, 0x03, 0x63,
+0x9E, 0xCB, 0x05, 0x97, 0x04, 0x90, 0x03, 0x63,
 0x00, 0xEF, 0x00, 0x65, 0xFD, 0x63, 0x05, 0x62,
-0x00, 0x18, 0x24, 0xD9, 0x05, 0x97, 0x03, 0x63,
+0x00, 0x18, 0xB2, 0xD8, 0x05, 0x97, 0x03, 0x63,
 0x00, 0xEF, 0x00, 0x65, 0xFB, 0x63, 0x09, 0x62,
 0x08, 0xD1, 0x07, 0xD0, 0x30, 0xF0, 0x20, 0x68,
 0xC0, 0xF1, 0x08, 0x48, 0x68, 0xF3, 0x7A, 0xA0,
 0x02, 0x6A, 0xFF, 0x69, 0x6C, 0xEA, 0x2C, 0xEC,
 0x2C, 0xEA, 0x04, 0xD4, 0x20, 0x22, 0x03, 0x6A,
 0x4B, 0xEA, 0x6C, 0xEA, 0x01, 0x6D, 0x68, 0xF3,
-0x5A, 0xC0, 0x00, 0x18, 0x83, 0xE0, 0x68, 0xF3,
+0x5A, 0xC0, 0x00, 0x18, 0x11, 0xE0, 0x68, 0xF3,
 0x9A, 0xA0, 0x01, 0x6B, 0x4C, 0xEB, 0x09, 0x6A,
 0x4B, 0xEA, 0x8C, 0xEA, 0x68, 0xF3, 0x94, 0xA0,
 0x6C, 0x33, 0x6D, 0xEA, 0x7F, 0x6B, 0x8C, 0xEB,
 0x2C, 0xEB, 0x68, 0xF3, 0x5A, 0xC0, 0x07, 0x23,
 0x08, 0x6B, 0x4C, 0xEB, 0x2C, 0xEB, 0x03, 0x23,
 0x04, 0x94, 0x00, 0x18, 0xA2, 0xC6, 0x04, 0x95,
-0x01, 0x6C, 0x80, 0x18, 0x40, 0x12, 0x09, 0x97,
+0x01, 0x6C, 0x80, 0x18, 0x4D, 0x12, 0x09, 0x97,
 0x08, 0x91, 0x07, 0x90, 0x05, 0x63, 0x00, 0xEF,
 0xFB, 0x63, 0x09, 0x62, 0x08, 0xD1, 0x07, 0xD0,
 0x30, 0xF0, 0x20, 0x68, 0xC0, 0xF1, 0x08, 0x48,
@@ -49476,257 +49238,253 @@ u8 array_mp_8821c_fw_wowlan[] = {
 0x6C, 0xEA, 0x2C, 0xEC, 0x2C, 0xEA, 0x04, 0xD4,
 0x19, 0x22, 0x02, 0x6A, 0x4B, 0xEA, 0x6C, 0xEA,
 0x00, 0x6D, 0x68, 0xF3, 0x5A, 0xC0, 0x00, 0x18,
-0x83, 0xE0, 0x68, 0xF3, 0x9A, 0xA0, 0x01, 0x6B,
+0x11, 0xE0, 0x68, 0xF3, 0x9A, 0xA0, 0x01, 0x6B,
 0x6C, 0xEA, 0xFA, 0x4B, 0x48, 0x32, 0x8C, 0xEB,
 0x4D, 0xEB, 0x04, 0x6A, 0x6C, 0xEA, 0x2C, 0xEA,
 0x68, 0xF3, 0x7A, 0xC0, 0x03, 0x22, 0x04, 0x94,
 0x00, 0x18, 0xA2, 0xC6, 0x04, 0x95, 0x00, 0x6C,
-0x80, 0x18, 0x40, 0x12, 0x09, 0x97, 0x08, 0x91,
+0x80, 0x18, 0x4D, 0x12, 0x09, 0x97, 0x08, 0x91,
 0x07, 0x90, 0x05, 0x63, 0x00, 0xEF, 0x00, 0x65,
 0xFD, 0x63, 0x05, 0x62, 0x04, 0xD0, 0x00, 0x18,
-0x88, 0xE4, 0x02, 0x67, 0x01, 0x6A, 0x0C, 0xEA,
-0x11, 0x22, 0x00, 0x6C, 0x01, 0x6D, 0x00, 0x18,
-0x24, 0xC6, 0x10, 0xF0, 0x24, 0x6A, 0xF7, 0xF0,
-0x44, 0x9A, 0xFF, 0x6C, 0x01, 0x4C, 0x60, 0x9A,
-0x8C, 0xEB, 0x08, 0x23, 0x60, 0x9A, 0x8D, 0xEB,
-0x60, 0xDA, 0x04, 0x10, 0x00, 0x6C, 0xA4, 0x67,
-0x00, 0x18, 0x24, 0xC6, 0x40, 0x6A, 0x0C, 0xEA,
-0x0F, 0x22, 0x10, 0xF0, 0x24, 0x6A, 0xF7, 0xF0,
-0x48, 0x9A, 0x60, 0xA2, 0x00, 0xF6, 0x60, 0x33,
-0x00, 0xF6, 0x63, 0x33, 0x00, 0x53, 0x00, 0x6B,
-0x02, 0x61, 0x80, 0x6B, 0x6B, 0xEB, 0x60, 0xC2,
-0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A,
-0x88, 0xF3, 0x90, 0xA2, 0x88, 0xF3, 0xB1, 0xA2,
-0x88, 0xF3, 0xD7, 0xA2, 0x02, 0x6F, 0x00, 0x18,
-0xAB, 0xC6, 0x05, 0x97, 0x04, 0x90, 0x03, 0x63,
-0x00, 0xEF, 0x00, 0x65, 0xFD, 0x63, 0x05, 0x62,
-0x30, 0xF0, 0x20, 0x6A, 0x29, 0xF5, 0x70, 0xA2,
-0x02, 0x6A, 0x6C, 0xEA, 0x03, 0x22, 0x01, 0x6C,
-0x00, 0x18, 0x37, 0xE7, 0x05, 0x97, 0x03, 0x63,
-0x00, 0xEF, 0x00, 0x65, 0xFD, 0x63, 0x05, 0x62,
-0x00, 0x18, 0x4B, 0xC1, 0x05, 0x97, 0x03, 0x63,
-0x00, 0xEF, 0x00, 0x65, 0xFC, 0x63, 0x07, 0x62,
-0x06, 0xD1, 0x05, 0xD0, 0x30, 0xF0, 0x20, 0x68,
-0xC0, 0xF1, 0x08, 0x48, 0x68, 0xF3, 0x74, 0xA0,
-0x7F, 0x6A, 0xFF, 0x69, 0x6C, 0xEA, 0x1E, 0x22,
-0x68, 0xF3, 0x97, 0xA0, 0x96, 0x34, 0x2C, 0xEC,
-0x00, 0x18, 0x28, 0xE5, 0x02, 0x6B, 0x4C, 0xEB,
-0x2C, 0xEB, 0x07, 0x23, 0x68, 0xF3, 0x97, 0xA0,
-0x96, 0x34, 0x2C, 0xEC, 0x00, 0x18, 0xB0, 0xCA,
-0x0D, 0x10, 0x68, 0xF3, 0x97, 0xA0, 0x68, 0xF3,
-0x79, 0xA0, 0x05, 0x6A, 0x4B, 0xEA, 0x96, 0x34,
-0x6C, 0xEA, 0x2C, 0xEC, 0x68, 0xF3, 0x59, 0xC0,
-0x00, 0x18, 0xA2, 0xC6, 0x07, 0x97, 0x06, 0x91,
-0x05, 0x90, 0x04, 0x63, 0x00, 0xEF, 0x00, 0x65,
+0x0F, 0xE4, 0x02, 0x67, 0x01, 0x6A, 0x0C, 0xEA,
+0x03, 0x22, 0x00, 0x6C, 0x01, 0x6D, 0x02, 0x10,
+0x00, 0x6C, 0xA4, 0x67, 0x00, 0x18, 0x24, 0xC6,
+0x40, 0x6A, 0x0C, 0xEA, 0x0F, 0x22, 0x10, 0xF0,
+0x24, 0x6A, 0x16, 0xF7, 0x40, 0x9A, 0x60, 0xA2,
+0x00, 0xF6, 0x60, 0x33, 0x00, 0xF6, 0x63, 0x33,
+0x00, 0x53, 0x00, 0x6B, 0x02, 0x61, 0x80, 0x6B,
+0x6B, 0xEB, 0x60, 0xC2, 0x30, 0xF0, 0x20, 0x6A,
+0xC0, 0xF1, 0x08, 0x4A, 0x88, 0xF3, 0x90, 0xA2,
+0x88, 0xF3, 0xB1, 0xA2, 0x88, 0xF3, 0xD7, 0xA2,
+0x02, 0x6F, 0x00, 0x18, 0xAB, 0xC6, 0x05, 0x97,
+0x04, 0x90, 0x03, 0x63, 0x00, 0xEF, 0x00, 0x65,
 0xFD, 0x63, 0x05, 0x62, 0x30, 0xF0, 0x20, 0x6A,
-0xC0, 0xF1, 0x08, 0x4A, 0x68, 0xF3, 0x94, 0xA2,
-0x7F, 0x6B, 0x8C, 0xEB, 0x07, 0x23, 0x68, 0xF3,
-0x97, 0xA2, 0xFF, 0x6A, 0x96, 0x34, 0x4C, 0xEC,
-0x00, 0x18, 0x08, 0xCB, 0x05, 0x97, 0x03, 0x63,
-0x00, 0xEF, 0x00, 0x65, 0xFD, 0x63, 0x05, 0x62,
-0xFF, 0x6A, 0x4C, 0xEC, 0x00, 0x18, 0x72, 0xC8,
-0x00, 0x6C, 0x00, 0x18, 0xA5, 0xC7, 0x05, 0x97,
-0x03, 0x63, 0x00, 0xEF, 0xFD, 0x63, 0x05, 0x62,
-0x00, 0x18, 0xFD, 0xD5, 0x05, 0x97, 0x03, 0x63,
-0x00, 0xEF, 0x00, 0x65, 0xFD, 0x63, 0x05, 0x62,
-0x00, 0x18, 0xFA, 0xD5, 0x05, 0x97, 0x03, 0x63,
-0x00, 0xEF, 0x00, 0x65, 0xFD, 0x63, 0x05, 0x62,
-0x00, 0x18, 0x3D, 0xDA, 0x05, 0x97, 0x03, 0x63,
-0x00, 0xEF, 0x00, 0x65, 0xFD, 0x63, 0x05, 0x62,
-0x00, 0x18, 0xB9, 0xD9, 0x05, 0x97, 0x03, 0x63,
+0x29, 0xF5, 0x70, 0xA2, 0x02, 0x6A, 0x6C, 0xEA,
+0x03, 0x22, 0x01, 0x6C, 0x00, 0x18, 0xBE, 0xE6,
+0x05, 0x97, 0x03, 0x63, 0x00, 0xEF, 0x00, 0x65,
+0xFD, 0x63, 0x05, 0x62, 0x00, 0x18, 0x4B, 0xC1,
+0x05, 0x97, 0x03, 0x63, 0x00, 0xEF, 0x00, 0x65,
+0xFC, 0x63, 0x07, 0x62, 0x06, 0xD1, 0x05, 0xD0,
+0x30, 0xF0, 0x20, 0x68, 0xC0, 0xF1, 0x08, 0x48,
+0x68, 0xF3, 0x74, 0xA0, 0x7F, 0x6A, 0xFF, 0x69,
+0x6C, 0xEA, 0x1E, 0x22, 0x68, 0xF3, 0x97, 0xA0,
+0x96, 0x34, 0x2C, 0xEC, 0x00, 0x18, 0xAF, 0xE4,
+0x02, 0x6B, 0x4C, 0xEB, 0x2C, 0xEB, 0x07, 0x23,
+0x68, 0xF3, 0x97, 0xA0, 0x96, 0x34, 0x2C, 0xEC,
+0x00, 0x18, 0xA1, 0xCA, 0x0D, 0x10, 0x68, 0xF3,
+0x97, 0xA0, 0x68, 0xF3, 0x79, 0xA0, 0x05, 0x6A,
+0x4B, 0xEA, 0x96, 0x34, 0x6C, 0xEA, 0x2C, 0xEC,
+0x68, 0xF3, 0x59, 0xC0, 0x00, 0x18, 0xA2, 0xC6,
+0x07, 0x97, 0x06, 0x91, 0x05, 0x90, 0x04, 0x63,
 0x00, 0xEF, 0x00, 0x65, 0xFD, 0x63, 0x05, 0x62,
-0x00, 0x18, 0x04, 0xEB, 0x05, 0x97, 0x03, 0x63,
-0x00, 0xEF, 0x00, 0x65, 0xFB, 0x63, 0x09, 0x62,
-0x08, 0xD1, 0x07, 0xD0, 0x30, 0xF0, 0x20, 0x68,
-0xC0, 0xF1, 0x08, 0x48, 0x24, 0x67, 0x68, 0xF3,
-0x94, 0xA0, 0x7F, 0x6B, 0xFF, 0x6A, 0x8C, 0xEB,
-0x4C, 0xEB, 0x4C, 0xE9, 0x31, 0x23, 0x68, 0xF3,
-0x7A, 0xA0, 0x21, 0x6C, 0x8B, 0xEC, 0x6C, 0xEC,
-0x40, 0x6B, 0x8C, 0xEB, 0x4C, 0xEB, 0x68, 0xF3,
-0x9A, 0xC0, 0x10, 0x23, 0x88, 0xF3, 0x90, 0xA0,
-0x88, 0xF3, 0xB1, 0xA0, 0x88, 0xF3, 0xD7, 0xA0,
-0x05, 0x6F, 0x00, 0x18, 0xAB, 0xC6, 0x68, 0xF3,
-0x7A, 0xA0, 0x41, 0x6A, 0x4B, 0xEA, 0x6C, 0xEA,
-0x68, 0xF3, 0x5A, 0xC0, 0x30, 0xF0, 0x20, 0x6A,
-0xC0, 0xF1, 0x08, 0x4A, 0x68, 0xF3, 0x99, 0xA2,
-0x40, 0x6B, 0x8C, 0xEB, 0x0D, 0x23, 0x68, 0xF3,
-0x7A, 0xA2, 0x10, 0x6A, 0x6C, 0xEA, 0xFF, 0x6B,
-0x6C, 0xEA, 0x06, 0x22, 0x00, 0x18, 0x08, 0xC8,
-0x03, 0x2A, 0x91, 0x67, 0x00, 0x18, 0xC9, 0xE9,
 0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A,
-0x69, 0xF3, 0x69, 0xA2, 0x2E, 0xEB, 0x11, 0x2B,
-0x69, 0xF3, 0x68, 0xA2, 0x1F, 0x6C, 0x6A, 0x32,
-0x8C, 0xEA, 0x47, 0xE9, 0x01, 0x6C, 0x8C, 0xEA,
-0x08, 0x22, 0x02, 0x6A, 0x6C, 0xEA, 0xFF, 0x6B,
-0x6C, 0xEA, 0x03, 0x22, 0x00, 0x6C, 0x00, 0x18,
-0x37, 0xE7, 0x30, 0xF0, 0x20, 0x6A, 0x4F, 0xF6,
-0x4E, 0xA2, 0x2E, 0xEA, 0x03, 0x2A, 0x91, 0x67,
-0x80, 0x18, 0x86, 0x12, 0x30, 0xF0, 0x20, 0x6A,
-0xCF, 0xF4, 0x00, 0x4A, 0x80, 0xF1, 0x07, 0xA2,
-0x04, 0xD2, 0x2E, 0xE8, 0x06, 0x28, 0x91, 0x67,
-0x80, 0x18, 0x32, 0x10, 0x04, 0x92, 0x80, 0xF1,
-0x09, 0xC2, 0x91, 0x67, 0x00, 0x18, 0x6B, 0xC9,
-0x91, 0x67, 0x00, 0x18, 0xD4, 0xD4, 0x09, 0x97,
-0x08, 0x91, 0x07, 0x90, 0x05, 0x63, 0x00, 0xEF,
+0x68, 0xF3, 0x94, 0xA2, 0x7F, 0x6B, 0x8C, 0xEB,
+0x07, 0x23, 0x68, 0xF3, 0x97, 0xA2, 0xFF, 0x6A,
+0x96, 0x34, 0x4C, 0xEC, 0x00, 0x18, 0xF9, 0xCA,
+0x05, 0x97, 0x03, 0x63, 0x00, 0xEF, 0x00, 0x65,
 0xFD, 0x63, 0x05, 0x62, 0xFF, 0x6A, 0x4C, 0xEC,
-0x00, 0x18, 0x77, 0xE3, 0x05, 0x97, 0x03, 0x63,
-0x00, 0xEF, 0x00, 0x65, 0xFF, 0x63, 0x01, 0xD0,
-0x10, 0xF0, 0x24, 0x6B, 0xF6, 0xF5, 0x78, 0x9B,
-0xFF, 0x6A, 0x4C, 0xEE, 0x6D, 0xE4, 0x08, 0x68,
-0x80, 0xA3, 0xDB, 0xE0, 0x02, 0x67, 0x4C, 0xED,
-0x07, 0xEE, 0xD0, 0x67, 0x4C, 0xEF, 0x04, 0xED,
-0x4C, 0xEC, 0xCC, 0xEF, 0x0F, 0xE8, 0x8C, 0xE8,
-0xE4, 0xED, 0xED, 0xE8, 0x4C, 0xE8, 0x00, 0xC3,
-0x01, 0x90, 0x01, 0x63, 0x20, 0xE8, 0x00, 0x65,
-0x10, 0xF0, 0x24, 0x6A, 0xF6, 0xF5, 0x58, 0x9A,
-0xFF, 0xF7, 0x1F, 0x6B, 0x8C, 0xEB, 0x4D, 0xE3,
-0x40, 0xA3, 0xFF, 0x6C, 0x8C, 0xEE, 0x08, 0x6B,
-0xDB, 0xE3, 0x8C, 0xED, 0x8C, 0xEA, 0x64, 0x67,
-0x47, 0xED, 0x67, 0xEE, 0x6C, 0xEA, 0x8C, 0xEA,
-0x20, 0xE8, 0x00, 0x65, 0xFC, 0x63, 0x07, 0x62,
-0x06, 0xD1, 0x05, 0xD0, 0x10, 0xF0, 0x24, 0x6B,
-0xB6, 0xF4, 0x70, 0x9B, 0xFF, 0xF7, 0x1F, 0x6A,
-0x8C, 0xEA, 0x69, 0xE2, 0x00, 0x9A, 0x41, 0x45,
-0x25, 0x67, 0x08, 0x22, 0x30, 0xF0, 0x20, 0x6A,
-0xAE, 0xF4, 0x50, 0x9A, 0x85, 0x67, 0x2C, 0xE8,
-0x40, 0xEA, 0x06, 0xEA, 0x50, 0x67, 0x07, 0x97,
-0x06, 0x91, 0x05, 0x90, 0x04, 0x63, 0x00, 0xEF,
+0x00, 0x18, 0x72, 0xC8, 0x00, 0x6C, 0x00, 0x18,
+0xA5, 0xC7, 0x05, 0x97, 0x03, 0x63, 0x00, 0xEF,
+0xFD, 0x63, 0x05, 0x62, 0x00, 0x18, 0xB3, 0xD5,
+0x05, 0x97, 0x03, 0x63, 0x00, 0xEF, 0x00, 0x65,
+0xFD, 0x63, 0x05, 0x62, 0x00, 0x18, 0xB0, 0xD5,
+0x05, 0x97, 0x03, 0x63, 0x00, 0xEF, 0x00, 0x65,
+0xFD, 0x63, 0x05, 0x62, 0x00, 0x18, 0xCB, 0xD9,
+0x05, 0x97, 0x03, 0x63, 0x00, 0xEF, 0x00, 0x65,
+0xFD, 0x63, 0x05, 0x62, 0x00, 0x18, 0x47, 0xD9,
+0x05, 0x97, 0x03, 0x63, 0x00, 0xEF, 0x00, 0x65,
+0xFD, 0x63, 0x05, 0x62, 0x00, 0x18, 0x8B, 0xEA,
+0x05, 0x97, 0x03, 0x63, 0x00, 0xEF, 0x00, 0x65,
 0xFB, 0x63, 0x09, 0x62, 0x08, 0xD1, 0x07, 0xD0,
-0xFF, 0xF7, 0x1F, 0x68, 0x41, 0x45, 0x25, 0x67,
-0x0C, 0xD6, 0x8C, 0xE8, 0x07, 0x2A, 0x10, 0xF0,
-0x24, 0x6A, 0xB6, 0xF4, 0x50, 0x9A, 0x41, 0xE0,
-0xC0, 0xD8, 0x1A, 0x10, 0x01, 0x6D, 0x90, 0x67,
-0xAB, 0xED, 0x00, 0x18, 0xD5, 0xE3, 0x04, 0xD2,
-0x30, 0xF0, 0x20, 0x6A, 0xAE, 0xF4, 0x50, 0x9A,
-0x91, 0x67, 0x40, 0xEA, 0x0C, 0x93, 0x64, 0xEA,
-0x43, 0x67, 0x04, 0x93, 0x2C, 0xEA, 0x2F, 0xE9,
-0x6C, 0xE9, 0x10, 0xF0, 0x24, 0x6B, 0xB6, 0xF4,
-0x70, 0x9B, 0x2D, 0xEA, 0x61, 0xE0, 0x40, 0xD8,
-0x09, 0x97, 0x08, 0x91, 0x07, 0x90, 0x05, 0x63,
-0x00, 0xEF, 0x00, 0x65, 0x01, 0x74, 0x0D, 0x60,
-0x06, 0x24, 0x02, 0x74, 0x10, 0x60, 0x03, 0x74,
-0x00, 0x6A, 0x1C, 0x61, 0x14, 0x10, 0x10, 0xF0,
-0x24, 0x6A, 0xA8, 0x35, 0xF7, 0xF0, 0x4C, 0x9A,
-0x0B, 0x10, 0x10, 0xF0, 0x24, 0x6A, 0xA8, 0x35,
-0xF7, 0xF0, 0x50, 0x9A, 0x05, 0x10, 0x10, 0xF0,
-0x24, 0x6A, 0xF7, 0xF0, 0x54, 0x9A, 0xA8, 0x35,
-0x55, 0xE5, 0x40, 0x9D, 0x20, 0xE8, 0x10, 0xF0,
-0x24, 0x6A, 0xF7, 0xF0, 0x58, 0x9A, 0xA8, 0x35,
-0x55, 0xE5, 0x40, 0x9D, 0x20, 0xE8, 0x00, 0x65,
-0xFD, 0x63, 0x05, 0x62, 0x30, 0xF0, 0x20, 0x6A,
-0x08, 0xF3, 0x00, 0x4A, 0x88, 0x34, 0x91, 0xE2,
-0x10, 0xF0, 0x24, 0x6A, 0x96, 0xF7, 0x60, 0x9A,
-0x30, 0xF0, 0x20, 0x6A, 0x00, 0xF5, 0xA0, 0x35,
-0xCC, 0xEB, 0x10, 0xF0, 0x24, 0x6E, 0x96, 0xF7,
-0xC4, 0x9E, 0xCE, 0xF4, 0x50, 0x9A, 0x80, 0xAC,
-0xAD, 0xEB, 0x01, 0x6D, 0xAB, 0xED, 0x6C, 0xEE,
-0x40, 0xEA, 0x05, 0x97, 0x03, 0x63, 0x00, 0xEF,
+0x30, 0xF0, 0x20, 0x68, 0xC0, 0xF1, 0x08, 0x48,
+0x24, 0x67, 0x68, 0xF3, 0x94, 0xA0, 0x7F, 0x6B,
+0xFF, 0x6A, 0x8C, 0xEB, 0x4C, 0xEB, 0x4C, 0xE9,
+0x31, 0x23, 0x68, 0xF3, 0x7A, 0xA0, 0x21, 0x6C,
+0x8B, 0xEC, 0x6C, 0xEC, 0x40, 0x6B, 0x8C, 0xEB,
+0x4C, 0xEB, 0x68, 0xF3, 0x9A, 0xC0, 0x10, 0x23,
+0x88, 0xF3, 0x90, 0xA0, 0x88, 0xF3, 0xB1, 0xA0,
+0x88, 0xF3, 0xD7, 0xA0, 0x05, 0x6F, 0x00, 0x18,
+0xAB, 0xC6, 0x68, 0xF3, 0x7A, 0xA0, 0x41, 0x6A,
+0x4B, 0xEA, 0x6C, 0xEA, 0x68, 0xF3, 0x5A, 0xC0,
+0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A,
+0x68, 0xF3, 0x99, 0xA2, 0x40, 0x6B, 0x8C, 0xEB,
+0x0D, 0x23, 0x68, 0xF3, 0x7A, 0xA2, 0x10, 0x6A,
+0x6C, 0xEA, 0xFF, 0x6B, 0x6C, 0xEA, 0x06, 0x22,
+0x00, 0x18, 0x08, 0xC8, 0x03, 0x2A, 0x91, 0x67,
+0x00, 0x18, 0x50, 0xE9, 0x30, 0xF0, 0x20, 0x6A,
+0xC0, 0xF1, 0x08, 0x4A, 0x69, 0xF3, 0x69, 0xA2,
+0x2E, 0xEB, 0x11, 0x2B, 0x69, 0xF3, 0x68, 0xA2,
+0x1F, 0x6C, 0x6A, 0x32, 0x8C, 0xEA, 0x47, 0xE9,
+0x01, 0x6C, 0x8C, 0xEA, 0x08, 0x22, 0x02, 0x6A,
+0x6C, 0xEA, 0xFF, 0x6B, 0x6C, 0xEA, 0x03, 0x22,
+0x00, 0x6C, 0x00, 0x18, 0xBE, 0xE6, 0x30, 0xF0,
+0x20, 0x6A, 0x4F, 0xF6, 0x4E, 0xA2, 0x2E, 0xEA,
+0x03, 0x2A, 0x91, 0x67, 0x80, 0x18, 0x87, 0x12,
+0x30, 0xF0, 0x20, 0x6A, 0xCF, 0xF4, 0x00, 0x4A,
+0x80, 0xF1, 0x07, 0xA2, 0x04, 0xD2, 0x2E, 0xE8,
+0x06, 0x28, 0x91, 0x67, 0x80, 0x18, 0x45, 0x10,
+0x04, 0x92, 0x80, 0xF1, 0x09, 0xC2, 0x91, 0x67,
+0x00, 0x18, 0x5C, 0xC9, 0x91, 0x67, 0x00, 0x18,
+0x8A, 0xD4, 0x09, 0x97, 0x08, 0x91, 0x07, 0x90,
+0x05, 0x63, 0x00, 0xEF, 0xFD, 0x63, 0x05, 0x62,
+0xFF, 0x6A, 0x4C, 0xEC, 0x00, 0x18, 0xFE, 0xE2,
+0x05, 0x97, 0x03, 0x63, 0x00, 0xEF, 0x00, 0x65,
+0xFF, 0x63, 0x01, 0xD0, 0x10, 0xF0, 0x24, 0x6B,
+0x16, 0xF4, 0x74, 0x9B, 0xFF, 0x6A, 0x4C, 0xEE,
+0x6D, 0xE4, 0x08, 0x68, 0x80, 0xA3, 0xDB, 0xE0,
+0x02, 0x67, 0x4C, 0xED, 0x07, 0xEE, 0xD0, 0x67,
+0x4C, 0xEF, 0x04, 0xED, 0x4C, 0xEC, 0xCC, 0xEF,
+0x0F, 0xE8, 0x8C, 0xE8, 0xE4, 0xED, 0xED, 0xE8,
+0x4C, 0xE8, 0x00, 0xC3, 0x01, 0x90, 0x01, 0x63,
+0x20, 0xE8, 0x00, 0x65, 0x10, 0xF0, 0x24, 0x6A,
+0x16, 0xF4, 0x54, 0x9A, 0xFF, 0xF7, 0x1F, 0x6B,
+0x8C, 0xEB, 0x4D, 0xE3, 0x40, 0xA3, 0xFF, 0x6C,
+0x8C, 0xEE, 0x08, 0x6B, 0xDB, 0xE3, 0x8C, 0xED,
+0x8C, 0xEA, 0x64, 0x67, 0x47, 0xED, 0x67, 0xEE,
+0x6C, 0xEA, 0x8C, 0xEA, 0x20, 0xE8, 0x00, 0x65,
 0xFC, 0x63, 0x07, 0x62, 0x06, 0xD1, 0x05, 0xD0,
-0xFF, 0x6B, 0x8C, 0xEB, 0xFF, 0xF7, 0x1F, 0x6A,
-0x81, 0x46, 0x06, 0x67, 0xAC, 0xEA, 0x06, 0x2C,
-0x83, 0x67, 0xA2, 0x67, 0x00, 0x18, 0xFD, 0xE3,
-0x02, 0x67, 0x0D, 0x10, 0x83, 0x67, 0xA2, 0x67,
-0x00, 0x18, 0xFD, 0xE3, 0x22, 0x67, 0x30, 0xF0,
-0x20, 0x6A, 0xAE, 0xF4, 0x50, 0x9A, 0x90, 0x67,
-0x2C, 0xE8, 0x40, 0xEA, 0x06, 0xEA, 0x50, 0x67,
-0x07, 0x97, 0x06, 0x91, 0x05, 0x90, 0x04, 0x63,
-0x00, 0xEF, 0x00, 0x65, 0xFB, 0x63, 0x09, 0x62,
-0x08, 0xD1, 0x07, 0xD0, 0x46, 0x67, 0xFF, 0x68,
-0xFF, 0xF7, 0x1F, 0x69, 0x01, 0x4A, 0x0C, 0xD6,
-0x0D, 0xD7, 0x8C, 0xE8, 0xAC, 0xE9, 0x04, 0x2A,
-0x90, 0x67, 0xB1, 0x67, 0xC7, 0x67, 0x15, 0x10,
-0xB1, 0x67, 0x90, 0x67, 0x00, 0x18, 0xFD, 0xE3,
-0x04, 0xD2, 0x30, 0xF0, 0x20, 0x6A, 0x0C, 0x94,
-0xAE, 0xF4, 0x50, 0x9A, 0x40, 0xEA, 0x0D, 0x96,
-0x90, 0x67, 0xB1, 0x67, 0xC4, 0xEA, 0x0C, 0x92,
-0x4C, 0xEE, 0x4F, 0xEB, 0x04, 0x92, 0x4C, 0xEB,
-0x6D, 0xEE, 0x00, 0x18, 0x10, 0xE4, 0x30, 0xF0,
-0x20, 0x6A, 0xCE, 0xF4, 0x5C, 0x9A, 0x0A, 0x6C,
-0x40, 0xEA, 0x09, 0x97, 0x08, 0x91, 0x07, 0x90,
-0x05, 0x63, 0x00, 0xEF, 0xFB, 0x63, 0x09, 0x62,
-0x08, 0xD1, 0x07, 0xD0, 0xFF, 0x6A, 0x8C, 0xEA,
-0x0E, 0x91, 0x04, 0xD2, 0xFF, 0xF7, 0x1F, 0x6A,
-0x4C, 0xED, 0x4C, 0xE9, 0x0C, 0xD6, 0x0D, 0xD7,
-0x0F, 0x90, 0x05, 0xD5, 0x00, 0x6A, 0x08, 0x10,
-0x30, 0xF0, 0x20, 0x6A, 0xCE, 0xF4, 0x5C, 0x9A,
-0x0A, 0x6C, 0x40, 0xEA, 0x40, 0xA8, 0x01, 0x4A,
-0x40, 0xC8, 0x10, 0xF0, 0x24, 0x6A, 0x04, 0x94,
-0x05, 0x95, 0x96, 0xF7, 0xC0, 0x9A, 0x00, 0x18,
-0x20, 0xE4, 0x0C, 0x93, 0x6C, 0xEA, 0x0D, 0x93,
-0x6E, 0xEA, 0x03, 0x22, 0x40, 0xA8, 0x23, 0xEA,
-0xE7, 0x61, 0x40, 0xA8, 0x09, 0x97, 0x07, 0x90,
-0x23, 0xEA, 0x08, 0x91, 0x58, 0x67, 0x05, 0x63,
-0x00, 0xEF, 0x00, 0x65, 0xFD, 0x63, 0x05, 0x62,
-0x04, 0xD0, 0x10, 0xF0, 0x24, 0x6B, 0x76, 0xF4,
-0x7C, 0x9B, 0x10, 0xF0, 0x24, 0x6A, 0x92, 0xF1,
-0x1D, 0x4A, 0x40, 0xDB, 0x00, 0x68, 0x10, 0xF0,
-0x24, 0x6A, 0xF7, 0xF0, 0x5C, 0x9A, 0x40, 0xA2,
-0x12, 0x2A, 0x10, 0xF0, 0x24, 0x6A, 0x17, 0xF1,
-0x40, 0x9A, 0x40, 0xA2, 0x0C, 0x2A, 0x10, 0xF0,
-0x24, 0x6A, 0x17, 0xF1, 0x44, 0x9A, 0x40, 0xA2,
-0x06, 0x2A, 0x10, 0xF0, 0x24, 0x6A, 0x17, 0xF1,
-0x48, 0x9A, 0x40, 0xA2, 0x18, 0x22, 0xE0, 0xF3,
-0x09, 0x70, 0x0A, 0x61, 0x10, 0xF0, 0x24, 0x6A,
-0x16, 0xF5, 0x7C, 0x9A, 0x20, 0x6C, 0x40, 0x9B,
-0x8D, 0xEA, 0x40, 0xDB, 0x00, 0x6A, 0x0C, 0x10,
-0x30, 0xF0, 0x20, 0x6A, 0xCE, 0xF4, 0x5C, 0x9A,
-0x32, 0x6C, 0x01, 0x48, 0x40, 0xEA, 0xFF, 0xF7,
-0x1F, 0x6A, 0x4C, 0xE8, 0xD0, 0x17, 0x01, 0x6A,
-0x05, 0x97, 0x04, 0x90, 0x03, 0x63, 0x00, 0xEF,
-0x10, 0xF0, 0x24, 0x6B, 0x76, 0xF4, 0x7C, 0x9B,
-0x10, 0xF0, 0x24, 0x6A, 0x32, 0xF2, 0x01, 0x4A,
-0x40, 0xDB, 0x00, 0x6B, 0x10, 0xF0, 0x24, 0x6A,
-0x17, 0xF1, 0xAC, 0x9A, 0xFF, 0x6C, 0x40, 0xA5,
-0xA0, 0xA5, 0x8C, 0xEA, 0xAC, 0xEC, 0x4E, 0xEC,
-0x10, 0x24, 0x64, 0x73, 0x09, 0x61, 0x10, 0xF0,
-0x24, 0x6B, 0x16, 0xF5, 0x9C, 0x9B, 0x40, 0x6D,
-0x60, 0x9C, 0xAD, 0xEB, 0x60, 0xDC, 0x20, 0xE8,
-0x01, 0x4B, 0xFF, 0xF7, 0x1F, 0x6A, 0x4C, 0xEB,
-0xE5, 0x17, 0x20, 0xE8, 0xFC, 0x63, 0x07, 0x62,
-0x06, 0xD1, 0x05, 0xD0, 0x10, 0xF0, 0x24, 0x6B,
-0x76, 0xF4, 0x7C, 0x9B, 0x10, 0xF0, 0x24, 0x6A,
-0xFF, 0x69, 0x72, 0xF2, 0x0D, 0x4A, 0x8C, 0xE9,
-0x40, 0xDB, 0x00, 0x68, 0x20, 0x10, 0x82, 0xF3,
-0x08, 0x70, 0x09, 0x61, 0x10, 0xF0, 0x24, 0x6A,
-0x16, 0xF5, 0x7C, 0x9A, 0x10, 0x6C, 0x40, 0x9B,
-0x8D, 0xEA, 0x40, 0xDB, 0x1F, 0x10, 0xFF, 0xF7,
-0x1F, 0x6A, 0x01, 0x48, 0x4C, 0xE8, 0x30, 0xF0,
-0x20, 0x6A, 0xCE, 0xF4, 0x5C, 0x9A, 0x14, 0x6C,
-0x40, 0xEA, 0x33, 0x58, 0x08, 0x61, 0x10, 0xF0,
-0x24, 0x6A, 0x57, 0xF0, 0x5C, 0x9A, 0x01, 0x6B,
-0x40, 0xA2, 0x6C, 0xEA, 0x0B, 0x2A, 0x10, 0xF0,
-0x24, 0x6A, 0x17, 0xF1, 0x50, 0x9A, 0x01, 0x6B,
-0x40, 0x9A, 0x42, 0x32, 0x5E, 0x32, 0x6C, 0xEA,
-0x2E, 0xEA, 0xD5, 0x2A, 0x10, 0xF0, 0x24, 0x6B,
-0x76, 0xF4, 0x7C, 0x9B, 0x10, 0xF0, 0x24, 0x6A,
-0x72, 0xF2, 0x0E, 0x4A, 0x40, 0xDB, 0x07, 0x97,
-0x06, 0x91, 0x05, 0x90, 0x04, 0x63, 0x00, 0xEF,
-0x10, 0xF0, 0x24, 0x6B, 0x76, 0xF4, 0x7C, 0x9B,
-0x10, 0xF0, 0x24, 0x6A, 0x12, 0xF3, 0x01, 0x4A,
-0x40, 0xDB, 0x10, 0xF0, 0x24, 0x6A, 0x17, 0xF1,
-0x54, 0x9A, 0x60, 0xA2, 0x01, 0x6A, 0x6C, 0xEA,
-0xF8, 0x2A, 0x10, 0xF0, 0x24, 0x6B, 0x76, 0xF4,
-0x7C, 0x9B, 0x10, 0xF0, 0x24, 0x6A, 0x12, 0xF3,
-0x02, 0x4A, 0x40, 0xDB, 0x20, 0xE8, 0x00, 0x65,
+0x10, 0xF0, 0x24, 0x6B, 0xD6, 0xF2, 0x6C, 0x9B,
+0xFF, 0xF7, 0x1F, 0x6A, 0x8C, 0xEA, 0x69, 0xE2,
+0x00, 0x9A, 0x41, 0x45, 0x25, 0x67, 0x08, 0x22,
+0x30, 0xF0, 0x20, 0x6A, 0xAE, 0xF4, 0x50, 0x9A,
+0x85, 0x67, 0x2C, 0xE8, 0x40, 0xEA, 0x06, 0xEA,
+0x50, 0x67, 0x07, 0x97, 0x06, 0x91, 0x05, 0x90,
+0x04, 0x63, 0x00, 0xEF, 0xFB, 0x63, 0x09, 0x62,
+0x08, 0xD1, 0x07, 0xD0, 0xFF, 0xF7, 0x1F, 0x68,
+0x41, 0x45, 0x25, 0x67, 0x0C, 0xD6, 0x8C, 0xE8,
+0x07, 0x2A, 0x10, 0xF0, 0x24, 0x6A, 0xD6, 0xF2,
+0x4C, 0x9A, 0x41, 0xE0, 0xC0, 0xD8, 0x1A, 0x10,
+0x01, 0x6D, 0x90, 0x67, 0xAB, 0xED, 0x00, 0x18,
+0x5C, 0xE3, 0x04, 0xD2, 0x30, 0xF0, 0x20, 0x6A,
+0xAE, 0xF4, 0x50, 0x9A, 0x91, 0x67, 0x40, 0xEA,
+0x0C, 0x93, 0x64, 0xEA, 0x43, 0x67, 0x04, 0x93,
+0x2C, 0xEA, 0x2F, 0xE9, 0x6C, 0xE9, 0x10, 0xF0,
+0x24, 0x6B, 0xD6, 0xF2, 0x6C, 0x9B, 0x2D, 0xEA,
+0x61, 0xE0, 0x40, 0xD8, 0x09, 0x97, 0x08, 0x91,
+0x07, 0x90, 0x05, 0x63, 0x00, 0xEF, 0x00, 0x65,
+0x01, 0x74, 0x0D, 0x60, 0x06, 0x24, 0x02, 0x74,
+0x10, 0x60, 0x03, 0x74, 0x00, 0x6A, 0x1C, 0x61,
+0x14, 0x10, 0x10, 0xF0, 0x24, 0x6A, 0xA8, 0x35,
+0x16, 0xF7, 0x44, 0x9A, 0x0B, 0x10, 0x10, 0xF0,
+0x24, 0x6A, 0xA8, 0x35, 0x16, 0xF7, 0x48, 0x9A,
+0x05, 0x10, 0x10, 0xF0, 0x24, 0x6A, 0x16, 0xF7,
+0x4C, 0x9A, 0xA8, 0x35, 0x55, 0xE5, 0x40, 0x9D,
+0x20, 0xE8, 0x10, 0xF0, 0x24, 0x6A, 0x16, 0xF7,
+0x50, 0x9A, 0xA8, 0x35, 0x55, 0xE5, 0x40, 0x9D,
+0x20, 0xE8, 0x00, 0x65, 0xFD, 0x63, 0x05, 0x62,
+0x30, 0xF0, 0x20, 0x6A, 0x08, 0xF3, 0x00, 0x4A,
+0x88, 0x34, 0x91, 0xE2, 0x10, 0xF0, 0x24, 0x6A,
+0x96, 0xF5, 0x7C, 0x9A, 0x30, 0xF0, 0x20, 0x6A,
+0x00, 0xF5, 0xA0, 0x35, 0xCC, 0xEB, 0x10, 0xF0,
+0x24, 0x6E, 0xB6, 0xF5, 0xC0, 0x9E, 0xCE, 0xF4,
+0x50, 0x9A, 0x80, 0xAC, 0xAD, 0xEB, 0x01, 0x6D,
+0xAB, 0xED, 0x6C, 0xEE, 0x40, 0xEA, 0x05, 0x97,
+0x03, 0x63, 0x00, 0xEF, 0xFC, 0x63, 0x07, 0x62,
+0x06, 0xD1, 0x05, 0xD0, 0xFF, 0x6B, 0x8C, 0xEB,
+0xFF, 0xF7, 0x1F, 0x6A, 0x81, 0x46, 0x06, 0x67,
+0xAC, 0xEA, 0x06, 0x2C, 0x83, 0x67, 0xA2, 0x67,
+0x00, 0x18, 0x84, 0xE3, 0x02, 0x67, 0x0D, 0x10,
+0x83, 0x67, 0xA2, 0x67, 0x00, 0x18, 0x84, 0xE3,
+0x22, 0x67, 0x30, 0xF0, 0x20, 0x6A, 0xAE, 0xF4,
+0x50, 0x9A, 0x90, 0x67, 0x2C, 0xE8, 0x40, 0xEA,
+0x06, 0xEA, 0x50, 0x67, 0x07, 0x97, 0x06, 0x91,
+0x05, 0x90, 0x04, 0x63, 0x00, 0xEF, 0x00, 0x65,
+0xFB, 0x63, 0x09, 0x62, 0x08, 0xD1, 0x07, 0xD0,
+0x46, 0x67, 0xFF, 0x68, 0xFF, 0xF7, 0x1F, 0x69,
+0x01, 0x4A, 0x0C, 0xD6, 0x0D, 0xD7, 0x8C, 0xE8,
+0xAC, 0xE9, 0x04, 0x2A, 0x90, 0x67, 0xB1, 0x67,
+0xC7, 0x67, 0x15, 0x10, 0xB1, 0x67, 0x90, 0x67,
+0x00, 0x18, 0x84, 0xE3, 0x04, 0xD2, 0x30, 0xF0,
+0x20, 0x6A, 0x0C, 0x94, 0xAE, 0xF4, 0x50, 0x9A,
+0x40, 0xEA, 0x0D, 0x96, 0x90, 0x67, 0xB1, 0x67,
+0xC4, 0xEA, 0x0C, 0x92, 0x4C, 0xEE, 0x4F, 0xEB,
+0x04, 0x92, 0x4C, 0xEB, 0x6D, 0xEE, 0x00, 0x18,
+0x97, 0xE3, 0x30, 0xF0, 0x20, 0x6A, 0xCE, 0xF4,
+0x5C, 0x9A, 0x0A, 0x6C, 0x40, 0xEA, 0x09, 0x97,
+0x08, 0x91, 0x07, 0x90, 0x05, 0x63, 0x00, 0xEF,
+0xFB, 0x63, 0x09, 0x62, 0x08, 0xD1, 0x07, 0xD0,
+0xFF, 0x6A, 0x8C, 0xEA, 0x0E, 0x91, 0x04, 0xD2,
+0xFF, 0xF7, 0x1F, 0x6A, 0x4C, 0xED, 0x4C, 0xE9,
+0x0C, 0xD6, 0x0D, 0xD7, 0x0F, 0x90, 0x05, 0xD5,
+0x00, 0x6A, 0x08, 0x10, 0x30, 0xF0, 0x20, 0x6A,
+0xCE, 0xF4, 0x5C, 0x9A, 0x0A, 0x6C, 0x40, 0xEA,
+0x40, 0xA8, 0x01, 0x4A, 0x40, 0xC8, 0x10, 0xF0,
+0x24, 0x6A, 0x04, 0x94, 0x05, 0x95, 0x96, 0xF5,
+0xDC, 0x9A, 0x00, 0x18, 0xA7, 0xE3, 0x0C, 0x93,
+0x6C, 0xEA, 0x0D, 0x93, 0x6E, 0xEA, 0x03, 0x22,
+0x40, 0xA8, 0x23, 0xEA, 0xE7, 0x61, 0x40, 0xA8,
+0x09, 0x97, 0x07, 0x90, 0x23, 0xEA, 0x08, 0x91,
+0x58, 0x67, 0x05, 0x63, 0x00, 0xEF, 0x00, 0x65,
+0xFD, 0x63, 0x05, 0x62, 0x04, 0xD0, 0x10, 0xF0,
+0x24, 0x6B, 0x96, 0xF2, 0x78, 0x9B, 0x10, 0xF0,
+0x24, 0x6A, 0xB1, 0xF7, 0x19, 0x4A, 0x40, 0xDB,
+0x00, 0x68, 0x10, 0xF0, 0x24, 0x6A, 0x16, 0xF7,
+0x54, 0x9A, 0x40, 0xA2, 0x12, 0x2A, 0x10, 0xF0,
+0x24, 0x6A, 0x16, 0xF7, 0x58, 0x9A, 0x40, 0xA2,
+0x0C, 0x2A, 0x10, 0xF0, 0x24, 0x6A, 0x16, 0xF7,
+0x5C, 0x9A, 0x40, 0xA2, 0x06, 0x2A, 0x10, 0xF0,
+0x24, 0x6A, 0x36, 0xF7, 0x40, 0x9A, 0x40, 0xA2,
+0x18, 0x22, 0xE0, 0xF3, 0x09, 0x70, 0x0A, 0x61,
+0x10, 0xF0, 0x24, 0x6A, 0x36, 0xF3, 0x78, 0x9A,
+0x20, 0x6C, 0x40, 0x9B, 0x8D, 0xEA, 0x40, 0xDB,
+0x00, 0x6A, 0x0C, 0x10, 0x30, 0xF0, 0x20, 0x6A,
+0xCE, 0xF4, 0x5C, 0x9A, 0x32, 0x6C, 0x01, 0x48,
+0x40, 0xEA, 0xFF, 0xF7, 0x1F, 0x6A, 0x4C, 0xE8,
+0xD0, 0x17, 0x01, 0x6A, 0x05, 0x97, 0x04, 0x90,
+0x03, 0x63, 0x00, 0xEF, 0x10, 0xF0, 0x24, 0x6B,
+0x96, 0xF2, 0x78, 0x9B, 0x10, 0xF0, 0x24, 0x6A,
+0x32, 0xF0, 0x1D, 0x4A, 0x40, 0xDB, 0x00, 0x6B,
+0x10, 0xF0, 0x24, 0x6A, 0x36, 0xF7, 0xA4, 0x9A,
+0xFF, 0x6C, 0x40, 0xA5, 0xA0, 0xA5, 0x8C, 0xEA,
+0xAC, 0xEC, 0x4E, 0xEC, 0x10, 0x24, 0x64, 0x73,
+0x09, 0x61, 0x10, 0xF0, 0x24, 0x6B, 0x36, 0xF3,
+0x98, 0x9B, 0x40, 0x6D, 0x60, 0x9C, 0xAD, 0xEB,
+0x60, 0xDC, 0x20, 0xE8, 0x01, 0x4B, 0xFF, 0xF7,
+0x1F, 0x6A, 0x4C, 0xEB, 0xE5, 0x17, 0x20, 0xE8,
 0xFC, 0x63, 0x07, 0x62, 0x06, 0xD1, 0x05, 0xD0,
-0x30, 0xF0, 0x20, 0x68, 0xC0, 0xF1, 0x08, 0x48,
-0x68, 0xF3, 0x79, 0xA0, 0x80, 0x6A, 0x4B, 0xEA,
-0x6D, 0xEA, 0x68, 0xF3, 0x59, 0xC0, 0x10, 0xF0,
-0x24, 0x6A, 0x88, 0xF3, 0x68, 0xA8, 0x17, 0xF1,
-0x58, 0x9A, 0xFF, 0x69, 0x10, 0x6C, 0x60, 0xCA,
-0x10, 0xF0, 0x24, 0x6A, 0x56, 0xF7, 0x60, 0x9A,
-0x40, 0xA3, 0x2C, 0xEA, 0x8D, 0xEA, 0x2C, 0xEA,
-0x40, 0xC3, 0x01, 0x6C, 0x00, 0x18, 0x9B, 0xE4,
-0xE8, 0xF3, 0x53, 0xA0, 0x10, 0x6B, 0x6C, 0xEA,
-0x2C, 0xEA, 0x03, 0x22, 0x7F, 0x4B, 0x71, 0x4B,
-0x07, 0x10, 0xE8, 0xF3, 0x7E, 0xA0, 0x02, 0x6A,
-0x6C, 0xEA, 0x2C, 0xEA, 0x07, 0x22, 0x08, 0x6B,
-0x10, 0xF0, 0x24, 0x6A, 0xB7, 0xF0, 0x58, 0x9A,
-0x60, 0xDA, 0x05, 0x10, 0x10, 0xF0, 0x24, 0x6B,
-0xB7, 0xF0, 0x78, 0x9B, 0x40, 0xDB, 0x10, 0xF0,
-0x24, 0x6A, 0x17, 0xF1, 0x74, 0x9A, 0xFF, 0x6C,
-0x01, 0x6D, 0x40, 0xA3, 0x8C, 0xEA, 0xAD, 0xEA,
-0x8C, 0xEA, 0x40, 0xC3, 0x00, 0x65, 0x00, 0x65,
+0x10, 0xF0, 0x24, 0x6B, 0x96, 0xF2, 0x78, 0x9B,
+0x10, 0xF0, 0x24, 0x6A, 0xFF, 0x69, 0x92, 0xF0,
+0x09, 0x4A, 0x8C, 0xE9, 0x40, 0xDB, 0x00, 0x68,
+0x20, 0x10, 0x82, 0xF3, 0x08, 0x70, 0x09, 0x61,
+0x10, 0xF0, 0x24, 0x6A, 0x36, 0xF3, 0x78, 0x9A,
+0x10, 0x6C, 0x40, 0x9B, 0x8D, 0xEA, 0x40, 0xDB,
+0x1F, 0x10, 0xFF, 0xF7, 0x1F, 0x6A, 0x01, 0x48,
+0x4C, 0xE8, 0x30, 0xF0, 0x20, 0x6A, 0xCE, 0xF4,
+0x5C, 0x9A, 0x14, 0x6C, 0x40, 0xEA, 0x33, 0x58,
+0x08, 0x61, 0x10, 0xF0, 0x24, 0x6A, 0x76, 0xF6,
+0x58, 0x9A, 0x01, 0x6B, 0x40, 0xA2, 0x6C, 0xEA,
+0x0B, 0x2A, 0x10, 0xF0, 0x24, 0x6A, 0x36, 0xF7,
+0x48, 0x9A, 0x01, 0x6B, 0x40, 0x9A, 0x42, 0x32,
+0x5E, 0x32, 0x6C, 0xEA, 0x2E, 0xEA, 0xD5, 0x2A,
+0x10, 0xF0, 0x24, 0x6B, 0x96, 0xF2, 0x78, 0x9B,
+0x10, 0xF0, 0x24, 0x6A, 0x92, 0xF0, 0x0A, 0x4A,
+0x40, 0xDB, 0x07, 0x97, 0x06, 0x91, 0x05, 0x90,
+0x04, 0x63, 0x00, 0xEF, 0x10, 0xF0, 0x24, 0x6B,
+0x96, 0xF2, 0x78, 0x9B, 0x10, 0xF0, 0x24, 0x6A,
+0x12, 0xF1, 0x1D, 0x4A, 0x40, 0xDB, 0x10, 0xF0,
+0x24, 0x6A, 0x36, 0xF7, 0x4C, 0x9A, 0x60, 0xA2,
+0x01, 0x6A, 0x6C, 0xEA, 0xF8, 0x2A, 0x10, 0xF0,
+0x24, 0x6B, 0x96, 0xF2, 0x78, 0x9B, 0x10, 0xF0,
+0x24, 0x6A, 0x12, 0xF1, 0x1E, 0x4A, 0x40, 0xDB,
+0x20, 0xE8, 0x00, 0x65, 0xFC, 0x63, 0x07, 0x62,
+0x06, 0xD1, 0x05, 0xD0, 0x30, 0xF0, 0x20, 0x68,
+0xC0, 0xF1, 0x08, 0x48, 0x68, 0xF3, 0x79, 0xA0,
+0x80, 0x6A, 0x4B, 0xEA, 0x6D, 0xEA, 0x68, 0xF3,
+0x59, 0xC0, 0x10, 0xF0, 0x24, 0x6A, 0x88, 0xF3,
+0x68, 0xA8, 0x36, 0xF7, 0x50, 0x9A, 0xFF, 0x69,
+0x10, 0x6C, 0x60, 0xCA, 0x10, 0xF0, 0x24, 0x6A,
+0x56, 0xF5, 0x7C, 0x9A, 0x40, 0xA3, 0x2C, 0xEA,
+0x8D, 0xEA, 0x2C, 0xEA, 0x40, 0xC3, 0x01, 0x6C,
+0x00, 0x18, 0x22, 0xE4, 0xE8, 0xF3, 0x53, 0xA0,
+0x10, 0x6B, 0x6C, 0xEA, 0x2C, 0xEA, 0x03, 0x22,
+0x7F, 0x4B, 0x71, 0x4B, 0x07, 0x10, 0xE8, 0xF3,
+0x7E, 0xA0, 0x02, 0x6A, 0x6C, 0xEA, 0x2C, 0xEA,
+0x07, 0x22, 0x08, 0x6B, 0x10, 0xF0, 0x24, 0x6A,
+0xD6, 0xF6, 0x54, 0x9A, 0x60, 0xDA, 0x05, 0x10,
+0x10, 0xF0, 0x24, 0x6B, 0xD6, 0xF6, 0x74, 0x9B,
+0x40, 0xDB, 0x10, 0xF0, 0x24, 0x6A, 0x36, 0xF7,
+0x6C, 0x9A, 0xFF, 0x6C, 0x01, 0x6D, 0x40, 0xA3,
+0x8C, 0xEA, 0xAD, 0xEA, 0x8C, 0xEA, 0x40, 0xC3,
 0x00, 0x65, 0x00, 0x65, 0x00, 0x65, 0x00, 0x65,
 0x00, 0x65, 0x00, 0x65, 0x00, 0x65, 0x00, 0x65,
 0x00, 0x65, 0x00, 0x65, 0x00, 0x65, 0x00, 0x65,
@@ -49740,1180 +49498,1180 @@ u8 array_mp_8821c_fw_wowlan[] = {
 0x00, 0x65, 0x00, 0x65, 0x00, 0x65, 0x00, 0x65,
 0x00, 0x65, 0x00, 0x65, 0x00, 0x65, 0x00, 0x65,
 0x00, 0x65, 0x00, 0x65, 0x00, 0x65, 0x00, 0x65,
-0x00, 0x65, 0x07, 0x97, 0x06, 0x91, 0x05, 0x90,
-0x04, 0x63, 0x00, 0xEF, 0xFD, 0x63, 0x05, 0x62,
-0x00, 0x18, 0xC0, 0xE4, 0x10, 0xF0, 0x24, 0x6A,
-0x56, 0xF7, 0x60, 0x9A, 0xEF, 0x6A, 0x80, 0xA3,
-0x8C, 0xEA, 0x40, 0xC3, 0x00, 0x6C, 0x00, 0x18,
-0x9B, 0xE4, 0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1,
-0x08, 0x4A, 0x10, 0xF0, 0x24, 0x6B, 0x8E, 0x9A,
-0xB7, 0xF0, 0x78, 0x9B, 0x80, 0xDB, 0x68, 0xF3,
-0x99, 0xA2, 0x7F, 0x6B, 0x8C, 0xEB, 0x68, 0xF3,
-0x79, 0xC2, 0x05, 0x97, 0x03, 0x63, 0x00, 0xEF,
-0xFF, 0x6A, 0x4C, 0xEC, 0x94, 0x34, 0x4C, 0xED,
-0x4C, 0xEC, 0x10, 0xF0, 0x24, 0x6A, 0x17, 0xF1,
-0x5C, 0x9A, 0x80, 0xC2, 0xA0, 0xC2, 0x20, 0xE8,
-0xFF, 0x6A, 0x10, 0xF0, 0x24, 0x6B, 0x17, 0xF1,
-0x7C, 0x9B, 0x4C, 0xEC, 0x94, 0x34, 0x4C, 0xEC,
-0x80, 0xC3, 0x60, 0xA3, 0x6C, 0xEA, 0x20, 0xE8,
-0xFF, 0x6A, 0x4C, 0xED, 0xFF, 0x75, 0x4C, 0xEC,
-0xCC, 0xEA, 0x06, 0x61, 0x30, 0xF0, 0x20, 0x6B,
-0xC0, 0xF1, 0x08, 0x4B, 0x71, 0xE4, 0x0B, 0x10,
-0x30, 0xF0, 0x20, 0x6B, 0xC0, 0xF1, 0x08, 0x4B,
-0x71, 0xE4, 0x2C, 0xF7, 0x6E, 0xA4, 0xAC, 0xEA,
-0xAF, 0xED, 0x6C, 0xED, 0xAD, 0xEA, 0x2C, 0xF7,
-0x4E, 0xC4, 0x20, 0xE8, 0xFD, 0x63, 0x05, 0x62,
-0x04, 0xD0, 0xFF, 0x6B, 0x6C, 0xEC, 0x07, 0x6A,
-0x6C, 0xED, 0x8C, 0xEA, 0x01, 0x68, 0xE6, 0x67,
-0x04, 0xEA, 0xAB, 0xEE, 0x30, 0xF0, 0x20, 0x6A,
-0xAD, 0xEE, 0xCE, 0xF2, 0x44, 0x9A, 0x6C, 0xE8,
-0xC0, 0xF7, 0xC3, 0x36, 0x8E, 0x34, 0x6C, 0xEF,
-0xB0, 0x67, 0x0C, 0xEE, 0x6C, 0xEC, 0x40, 0xEA,
-0x05, 0x97, 0x04, 0x90, 0x03, 0x63, 0x00, 0xEF,
-0xFA, 0x63, 0x0B, 0x62, 0x0A, 0xD1, 0x09, 0xD0,
-0x10, 0xF0, 0x24, 0x6A, 0x9F, 0xE7, 0x64, 0x67,
-0x16, 0xF5, 0x9C, 0x9A, 0x01, 0x4F, 0x0E, 0xD6,
-0x06, 0xD7, 0x05, 0x67, 0x10, 0xF0, 0x24, 0x6D,
-0x40, 0x9C, 0x36, 0xF7, 0xA8, 0x9D, 0x00, 0xF1,
-0x00, 0x5F, 0xAD, 0xEA, 0x40, 0xDC, 0x15, 0x61,
-0x0E, 0x95, 0x00, 0x6A, 0x04, 0xD2, 0x6D, 0xED,
-0x10, 0xF0, 0x24, 0x6B, 0x05, 0xD2, 0xD6, 0xF6,
-0x60, 0x9B, 0x30, 0xF0, 0x20, 0x6A, 0xAE, 0xF2,
-0x40, 0x9A, 0xC4, 0x40, 0xFF, 0x6F, 0x00, 0x6C,
-0x6C, 0xEE, 0x01, 0x4F, 0x40, 0xEA, 0x00, 0x6C,
-0x27, 0x10, 0x44, 0x40, 0x07, 0xD2, 0x10, 0xF0,
-0x24, 0x6A, 0xD6, 0xF6, 0x40, 0x9A, 0x07, 0x94,
-0x30, 0xF0, 0x20, 0x6F, 0x0E, 0x95, 0x4C, 0xEC,
-0x07, 0xD4, 0xAE, 0xF2, 0x40, 0x9F, 0x07, 0x96,
-0x06, 0x97, 0x00, 0x69, 0x6D, 0xED, 0x91, 0x67,
-0x04, 0xD1, 0x05, 0xD1, 0x40, 0xEA, 0x30, 0xF0,
-0x20, 0x6B, 0x06, 0x97, 0xAE, 0xF2, 0x40, 0x9B,
-0x07, 0x93, 0x0E, 0x95, 0x91, 0x67, 0x79, 0xE7,
-0x06, 0x93, 0xFF, 0x6F, 0x01, 0x4F, 0x04, 0xD1,
-0x05, 0xD1, 0x7F, 0xE7, 0x40, 0xEA, 0x91, 0x67,
-0x00, 0x18, 0x7F, 0xD5, 0x10, 0xF0, 0x24, 0x6A,
-0x16, 0xF5, 0x7C, 0x9A, 0x10, 0xF0, 0x24, 0x6C,
-0x36, 0xF7, 0x8C, 0x9C, 0x40, 0x9B, 0x0F, 0x6D,
-0x03, 0x6E, 0x8C, 0xEA, 0x40, 0xDB, 0x64, 0x40,
-0x62, 0x32, 0x00, 0xF1, 0x45, 0xC0, 0x42, 0x32,
-0x00, 0xF1, 0x46, 0xC0, 0x00, 0xF6, 0x62, 0x32,
-0x00, 0xF1, 0x47, 0xC0, 0x47, 0x40, 0x15, 0x4A,
-0x00, 0xF1, 0x48, 0xC0, 0x42, 0x34, 0x00, 0xF6,
-0x42, 0x32, 0x00, 0xF1, 0x64, 0xC0, 0x00, 0xF1,
-0x89, 0xC0, 0x00, 0xF1, 0x4B, 0xC0, 0x82, 0x34,
-0x00, 0xF1, 0x45, 0xA0, 0x00, 0xF1, 0x8A, 0xC0,
-0x00, 0xF1, 0x84, 0xA0, 0x40, 0x32, 0x0A, 0x91,
-0x8D, 0xEA, 0x00, 0xF1, 0x86, 0xA0, 0x80, 0x34,
-0x80, 0x34, 0x4D, 0xEC, 0x00, 0xF1, 0x47, 0xA0,
-0x00, 0xF6, 0x40, 0x32, 0x8D, 0xEA, 0xE2, 0xA2,
-0x83, 0xA2, 0xAC, 0xEF, 0x03, 0x4F, 0xEC, 0x37,
-0xCC, 0xEC, 0x91, 0xE7, 0x71, 0xE4, 0x82, 0x37,
-0x00, 0xF1, 0x8C, 0xC0, 0x00, 0xF1, 0xED, 0xC0,
-0x00, 0xF6, 0x82, 0x34, 0xE2, 0x37, 0x00, 0xF1,
-0xEE, 0xC0, 0x00, 0xF1, 0x8F, 0xC0, 0xE3, 0xA2,
-0x8A, 0xA2, 0x42, 0xA2, 0xEC, 0xEE, 0x8A, 0x34,
-0x4C, 0xED, 0x03, 0x4D, 0xD9, 0xE4, 0xAC, 0x35,
-0xB9, 0xE6, 0x6D, 0xE6, 0x62, 0x32, 0x00, 0xF1,
-0x70, 0xC0, 0x00, 0xF1, 0x51, 0xC0, 0x00, 0xF6,
-0x62, 0x33, 0x42, 0x32, 0x00, 0xF1, 0x52, 0xC0,
-0x00, 0xF1, 0x73, 0xC0, 0x0B, 0x97, 0x09, 0x90,
-0x06, 0x63, 0x00, 0xEF, 0xFF, 0x6A, 0x4C, 0xEC,
-0xFF, 0x74, 0xAC, 0xEA, 0x05, 0x61, 0x30, 0xF0,
-0x20, 0x6B, 0x0D, 0xF1, 0x47, 0xC3, 0x20, 0xE8,
+0x00, 0x65, 0x00, 0x65, 0x00, 0x65, 0x07, 0x97,
+0x06, 0x91, 0x05, 0x90, 0x04, 0x63, 0x00, 0xEF,
+0xFD, 0x63, 0x05, 0x62, 0x00, 0x18, 0x47, 0xE4,
+0x10, 0xF0, 0x24, 0x6A, 0x56, 0xF5, 0x7C, 0x9A,
+0xEF, 0x6A, 0x80, 0xA3, 0x8C, 0xEA, 0x40, 0xC3,
+0x00, 0x6C, 0x00, 0x18, 0x22, 0xE4, 0x30, 0xF0,
+0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A, 0x10, 0xF0,
+0x24, 0x6B, 0x8E, 0x9A, 0xD6, 0xF6, 0x74, 0x9B,
+0x80, 0xDB, 0x68, 0xF3, 0x99, 0xA2, 0x7F, 0x6B,
+0x8C, 0xEB, 0x68, 0xF3, 0x79, 0xC2, 0x05, 0x97,
+0x03, 0x63, 0x00, 0xEF, 0xFF, 0x6A, 0x4C, 0xEC,
+0x94, 0x34, 0x4C, 0xED, 0x4C, 0xEC, 0x10, 0xF0,
+0x24, 0x6A, 0x36, 0xF7, 0x54, 0x9A, 0x80, 0xC2,
+0xA0, 0xC2, 0x20, 0xE8, 0xFF, 0x6A, 0x10, 0xF0,
+0x24, 0x6B, 0x36, 0xF7, 0x74, 0x9B, 0x4C, 0xEC,
+0x94, 0x34, 0x4C, 0xEC, 0x80, 0xC3, 0x60, 0xA3,
+0x6C, 0xEA, 0x20, 0xE8, 0xFF, 0x6A, 0x4C, 0xED,
+0xFF, 0x75, 0x4C, 0xEC, 0xCC, 0xEA, 0x06, 0x61,
 0x30, 0xF0, 0x20, 0x6B, 0xC0, 0xF1, 0x08, 0x4B,
-0x2C, 0xF7, 0xBF, 0xA3, 0x8C, 0xEA, 0x8F, 0xEC,
-0xAC, 0xEC, 0x8D, 0xEA, 0x2C, 0xF7, 0x5F, 0xC3,
-0x20, 0xE8, 0x00, 0x65, 0xFD, 0x63, 0x05, 0x62,
-0x04, 0xD0, 0xFF, 0x6A, 0x06, 0x67, 0x4C, 0xE8,
-0x53, 0x70, 0x4C, 0xEC, 0x4C, 0xED, 0x0A, 0x61,
+0x71, 0xE4, 0x0B, 0x10, 0x30, 0xF0, 0x20, 0x6B,
+0xC0, 0xF1, 0x08, 0x4B, 0x71, 0xE4, 0x2C, 0xF7,
+0x6E, 0xA4, 0xAC, 0xEA, 0xAF, 0xED, 0x6C, 0xED,
+0xAD, 0xEA, 0x2C, 0xF7, 0x4E, 0xC4, 0x20, 0xE8,
+0xFD, 0x63, 0x05, 0x62, 0x04, 0xD0, 0xFF, 0x6B,
+0x6C, 0xEC, 0x07, 0x6A, 0x6C, 0xED, 0x8C, 0xEA,
+0x01, 0x68, 0xE6, 0x67, 0x04, 0xEA, 0xAB, 0xEE,
+0x30, 0xF0, 0x20, 0x6A, 0xAD, 0xEE, 0xCE, 0xF2,
+0x44, 0x9A, 0x6C, 0xE8, 0xC0, 0xF7, 0xC3, 0x36,
+0x8E, 0x34, 0x6C, 0xEF, 0xB0, 0x67, 0x0C, 0xEE,
+0x6C, 0xEC, 0x40, 0xEA, 0x05, 0x97, 0x04, 0x90,
+0x03, 0x63, 0x00, 0xEF, 0xFA, 0x63, 0x0B, 0x62,
+0x0A, 0xD1, 0x09, 0xD0, 0x10, 0xF0, 0x24, 0x6A,
+0x9F, 0xE7, 0x64, 0x67, 0x36, 0xF3, 0x98, 0x9A,
+0x01, 0x4F, 0x0E, 0xD6, 0x06, 0xD7, 0x05, 0x67,
+0x10, 0xF0, 0x24, 0x6D, 0x40, 0x9C, 0x56, 0xF5,
+0xA4, 0x9D, 0x00, 0xF1, 0x00, 0x5F, 0xAD, 0xEA,
+0x40, 0xDC, 0x15, 0x61, 0x0E, 0x95, 0x00, 0x6A,
+0x04, 0xD2, 0x6D, 0xED, 0x10, 0xF0, 0x24, 0x6B,
+0x05, 0xD2, 0xD6, 0xF4, 0x7C, 0x9B, 0x30, 0xF0,
+0x20, 0x6A, 0xAE, 0xF2, 0x40, 0x9A, 0xC4, 0x40,
+0xFF, 0x6F, 0x00, 0x6C, 0x6C, 0xEE, 0x01, 0x4F,
+0x40, 0xEA, 0x00, 0x6C, 0x27, 0x10, 0x44, 0x40,
+0x07, 0xD2, 0x10, 0xF0, 0x24, 0x6A, 0xD6, 0xF4,
+0x5C, 0x9A, 0x07, 0x94, 0x30, 0xF0, 0x20, 0x6F,
+0x0E, 0x95, 0x4C, 0xEC, 0x07, 0xD4, 0xAE, 0xF2,
+0x40, 0x9F, 0x07, 0x96, 0x06, 0x97, 0x00, 0x69,
+0x6D, 0xED, 0x91, 0x67, 0x04, 0xD1, 0x05, 0xD1,
+0x40, 0xEA, 0x30, 0xF0, 0x20, 0x6B, 0x06, 0x97,
+0xAE, 0xF2, 0x40, 0x9B, 0x07, 0x93, 0x0E, 0x95,
+0x91, 0x67, 0x79, 0xE7, 0x06, 0x93, 0xFF, 0x6F,
+0x01, 0x4F, 0x04, 0xD1, 0x05, 0xD1, 0x7F, 0xE7,
+0x40, 0xEA, 0x91, 0x67, 0x00, 0x18, 0x35, 0xD5,
+0x10, 0xF0, 0x24, 0x6A, 0x36, 0xF3, 0x78, 0x9A,
+0x10, 0xF0, 0x24, 0x6C, 0x56, 0xF5, 0x88, 0x9C,
+0x40, 0x9B, 0x0F, 0x6D, 0x03, 0x6E, 0x8C, 0xEA,
+0x40, 0xDB, 0x64, 0x40, 0x62, 0x32, 0x00, 0xF1,
+0x45, 0xC0, 0x42, 0x32, 0x00, 0xF1, 0x46, 0xC0,
+0x00, 0xF6, 0x62, 0x32, 0x00, 0xF1, 0x47, 0xC0,
+0x47, 0x40, 0x15, 0x4A, 0x00, 0xF1, 0x48, 0xC0,
+0x42, 0x34, 0x00, 0xF6, 0x42, 0x32, 0x00, 0xF1,
+0x64, 0xC0, 0x00, 0xF1, 0x89, 0xC0, 0x00, 0xF1,
+0x4B, 0xC0, 0x82, 0x34, 0x00, 0xF1, 0x45, 0xA0,
+0x00, 0xF1, 0x8A, 0xC0, 0x00, 0xF1, 0x84, 0xA0,
+0x40, 0x32, 0x0A, 0x91, 0x8D, 0xEA, 0x00, 0xF1,
+0x86, 0xA0, 0x80, 0x34, 0x80, 0x34, 0x4D, 0xEC,
+0x00, 0xF1, 0x47, 0xA0, 0x00, 0xF6, 0x40, 0x32,
+0x8D, 0xEA, 0xE2, 0xA2, 0x83, 0xA2, 0xAC, 0xEF,
+0x03, 0x4F, 0xEC, 0x37, 0xCC, 0xEC, 0x91, 0xE7,
+0x71, 0xE4, 0x82, 0x37, 0x00, 0xF1, 0x8C, 0xC0,
+0x00, 0xF1, 0xED, 0xC0, 0x00, 0xF6, 0x82, 0x34,
+0xE2, 0x37, 0x00, 0xF1, 0xEE, 0xC0, 0x00, 0xF1,
+0x8F, 0xC0, 0xE3, 0xA2, 0x8A, 0xA2, 0x42, 0xA2,
+0xEC, 0xEE, 0x8A, 0x34, 0x4C, 0xED, 0x03, 0x4D,
+0xD9, 0xE4, 0xAC, 0x35, 0xB9, 0xE6, 0x6D, 0xE6,
+0x62, 0x32, 0x00, 0xF1, 0x70, 0xC0, 0x00, 0xF1,
+0x51, 0xC0, 0x00, 0xF6, 0x62, 0x33, 0x42, 0x32,
+0x00, 0xF1, 0x52, 0xC0, 0x00, 0xF1, 0x73, 0xC0,
+0x0B, 0x97, 0x09, 0x90, 0x06, 0x63, 0x00, 0xEF,
+0xFF, 0x6A, 0x4C, 0xEC, 0xFF, 0x74, 0xAC, 0xEA,
+0x05, 0x61, 0x30, 0xF0, 0x20, 0x6B, 0x0D, 0xF1,
+0x47, 0xC3, 0x20, 0xE8, 0x30, 0xF0, 0x20, 0x6B,
+0xC0, 0xF1, 0x08, 0x4B, 0x2C, 0xF7, 0xBF, 0xA3,
+0x8C, 0xEA, 0x8F, 0xEC, 0xAC, 0xEC, 0x8D, 0xEA,
+0x2C, 0xF7, 0x5F, 0xC3, 0x20, 0xE8, 0x00, 0x65,
+0xFD, 0x63, 0x05, 0x62, 0x04, 0xD0, 0xFF, 0x6A,
+0x06, 0x67, 0x4C, 0xE8, 0x53, 0x70, 0x4C, 0xEC,
+0x4C, 0xED, 0x0A, 0x61, 0x30, 0xF0, 0x20, 0x6B,
+0xC0, 0xF1, 0x08, 0x4B, 0x2C, 0xF7, 0x9F, 0xA3,
+0x2C, 0xF7, 0x7E, 0xA3, 0x8D, 0xEB, 0x06, 0x10,
+0x0C, 0x2C, 0x30, 0xF0, 0x20, 0x6B, 0x0D, 0xF1,
+0x66, 0xA3, 0xAD, 0xEB, 0x4C, 0xEB, 0x10, 0xF0,
+0x24, 0x6A, 0x56, 0xF3, 0x48, 0x9A, 0x60, 0xC2,
+0x2C, 0x10, 0x47, 0x70, 0x12, 0x60, 0x48, 0x58,
+0x06, 0x60, 0x17, 0x70, 0x0E, 0x60, 0x44, 0x70,
+0x0C, 0x60, 0x01, 0x70, 0x09, 0x10, 0x4C, 0x70,
+0x08, 0x60, 0x4D, 0x58, 0x02, 0x60, 0x49, 0x70,
+0x03, 0x10, 0x4E, 0x70, 0x02, 0x60, 0x51, 0x70,
+0x06, 0x61, 0x30, 0xF0, 0x20, 0x6A, 0x0D, 0xF1,
+0x46, 0xA2, 0xAD, 0xEA, 0x0D, 0x10, 0x00, 0x18,
+0x30, 0xE5, 0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1,
+0x08, 0x4A, 0x2C, 0xF7, 0x7F, 0xA2, 0x2C, 0xF7,
+0x5E, 0xA2, 0x6D, 0xEA, 0xFF, 0x6B, 0x6C, 0xEA,
+0x10, 0xF0, 0x24, 0x6B, 0x56, 0xF3, 0x68, 0x9B,
+0x40, 0xC3, 0x30, 0xF0, 0x20, 0x6A, 0xE8, 0xF2,
+0x1A, 0xC2, 0x10, 0xF0, 0x24, 0x6A, 0x36, 0xF7,
+0x58, 0x9A, 0x00, 0xC2, 0x05, 0x97, 0x04, 0x90,
+0x03, 0x63, 0x00, 0xEF, 0xFF, 0x63, 0x01, 0xD0,
+0xFF, 0x6A, 0x4C, 0xED, 0x4C, 0xEE, 0x4C, 0xEF,
+0x10, 0xF0, 0x24, 0x6A, 0xF6, 0xF3, 0x48, 0x9A,
+0xFF, 0xF7, 0x1F, 0x6B, 0x6C, 0xEC, 0x00, 0xAA,
+0xE1, 0xF7, 0x1F, 0x6A, 0x0C, 0xEA, 0x10, 0xF0,
+0x24, 0x68, 0xF6, 0xF3, 0x04, 0x98, 0x51, 0xE4,
+0x6C, 0xEC, 0x80, 0xC8, 0x9C, 0x32, 0x10, 0xF0,
+0x24, 0x6C, 0xF6, 0xF4, 0x98, 0x9C, 0x10, 0xF0,
+0x24, 0x68, 0xB6, 0xF4, 0x18, 0x98, 0x91, 0xE2,
+0x80, 0xAC, 0x01, 0xE2, 0x00, 0x98, 0x6C, 0xEC,
+0x05, 0x25, 0x10, 0xF0, 0x00, 0x6D, 0xAB, 0xED,
+0xAD, 0xEC, 0x6C, 0xEC, 0xD8, 0xF0, 0x00, 0x6B,
+0x8C, 0xEB, 0x10, 0xF0, 0x24, 0x6C, 0xF6, 0xF4,
+0x98, 0x9C, 0x91, 0xE2, 0x60, 0xCC, 0x10, 0xF0,
+0x24, 0x6B, 0x36, 0xF7, 0x7C, 0x9B, 0x6D, 0xE2,
+0x80, 0xA3, 0x01, 0x6B, 0x8C, 0xEB, 0x05, 0x23,
+0x03, 0xF7, 0x01, 0x6B, 0x6B, 0xEB, 0x0C, 0xEB,
+0x06, 0x10, 0x1F, 0xF7, 0x01, 0x6B, 0x6B, 0xEB,
+0x0C, 0xEB, 0xE0, 0x37, 0xED, 0xEB, 0xFF, 0x76,
+0x13, 0x60, 0x10, 0xF0, 0x24, 0x6C, 0x56, 0xF7,
+0x80, 0x9C, 0x80, 0xF4, 0xC0, 0x36, 0x6C, 0xEC,
+0x10, 0xF0, 0x24, 0x6B, 0x56, 0xF3, 0x70, 0x9B,
+0x6D, 0xEE, 0x10, 0xF0, 0x24, 0x6B, 0xB6, 0xF4,
+0x78, 0x9B, 0x8D, 0xEE, 0x6D, 0xE2, 0xC0, 0xDB,
+0x10, 0xF0, 0x24, 0x6B, 0x36, 0xF4, 0x98, 0x9B,
+0x7F, 0x6B, 0x91, 0xE2, 0xA0, 0xA4, 0xAC, 0xEB,
+0x60, 0xC4, 0x10, 0xF0, 0x24, 0x6B, 0x56, 0xF7,
+0x64, 0x9B, 0x1C, 0x6C, 0x80, 0xC3, 0x10, 0xF0,
+0x24, 0x6B, 0x56, 0xF7, 0x68, 0x9B, 0x08, 0xF4,
+0x13, 0x6C, 0x80, 0xCB, 0x10, 0xF0, 0x24, 0x6B,
+0xD6, 0xF3, 0x98, 0x9B, 0xF7, 0x6B, 0x91, 0xE2,
+0xA0, 0xA4, 0xAC, 0xEB, 0x60, 0xC4, 0x01, 0x90,
+0x01, 0x63, 0x20, 0xE8, 0x30, 0xF0, 0x20, 0x6A,
+0x29, 0xF5, 0x51, 0xA2, 0xFF, 0x63, 0x05, 0x5A,
+0x36, 0x60, 0x10, 0xF0, 0x24, 0x6B, 0x48, 0x32,
+0x76, 0xF2, 0x08, 0x4B, 0x4D, 0xE3, 0x40, 0x9B,
+0x00, 0xEA, 0x10, 0xF0, 0x24, 0x6A, 0xD6, 0xF2,
+0x50, 0x9A, 0xFF, 0xF7, 0x1F, 0x6B, 0x40, 0x9A,
+0x1A, 0x10, 0x10, 0xF0, 0x24, 0x6A, 0xD6, 0xF2,
+0x50, 0x9A, 0x09, 0x10, 0x10, 0xF0, 0x24, 0x6A,
+0x56, 0xF7, 0x4C, 0x9A, 0x0D, 0x10, 0x10, 0xF0,
+0x24, 0x6A, 0x56, 0xF7, 0x4C, 0x9A, 0x40, 0x9A,
+0x50, 0x32, 0x00, 0xF5, 0x42, 0x32, 0x08, 0x10,
+0x10, 0xF0, 0x24, 0x6A, 0x56, 0xF7, 0x50, 0x9A,
+0x40, 0x9A, 0xE1, 0xF7, 0x1F, 0x6B, 0x6C, 0xEA,
+0x00, 0xD2, 0x00, 0x93, 0xE0, 0xF3, 0x08, 0x6A,
+0x60, 0x33, 0x68, 0x33, 0x5B, 0xEB, 0x01, 0x2A,
+0xE5, 0xE8, 0x12, 0xEA, 0x01, 0x10, 0x66, 0x6A,
+0x00, 0xD2, 0x00, 0x92, 0x01, 0x63, 0x20, 0xE8,
+0xFF, 0x63, 0x01, 0xD0, 0x0C, 0x2C, 0x10, 0xF0,
+0x24, 0x6A, 0x36, 0xF3, 0x78, 0x9A, 0x10, 0xF0,
+0x24, 0x6C, 0x56, 0xF7, 0x94, 0x9C, 0x40, 0x9B,
+0x8D, 0xEA, 0x40, 0xDB, 0x58, 0x10, 0x30, 0xF0,
+0x20, 0x6A, 0x4F, 0xF6, 0xD4, 0x9A, 0x30, 0xF0,
+0x20, 0x6A, 0x6F, 0xF6, 0x10, 0x4A, 0x00, 0x6D,
+0x18, 0x6F, 0xF8, 0xED, 0x30, 0xF0, 0x20, 0x6B,
+0xCF, 0xF4, 0x00, 0x4B, 0x12, 0xEF, 0x6D, 0xE7,
+0xA0, 0xF1, 0x04, 0xA3, 0x01, 0x6F, 0xEC, 0xE8,
+0x23, 0x20, 0xA0, 0xF1, 0x64, 0xA3, 0x66, 0x33,
+0xEC, 0xEB, 0xFF, 0x6F, 0xEC, 0xEB, 0x1C, 0x23,
+0xFF, 0xF7, 0x78, 0x9A, 0x9B, 0xEB, 0x01, 0x2C,
+0xE5, 0xE8, 0x12, 0xEB, 0xFF, 0xF7, 0x7C, 0xDA,
+0x10, 0xEF, 0x03, 0x27, 0x01, 0x4B, 0xFF, 0xF7,
+0x7C, 0xDA, 0x60, 0x9A, 0x78, 0xEE, 0x12, 0xEB,
+0x9B, 0xEB, 0x01, 0x2C, 0xE5, 0xE8, 0x12, 0xEB,
+0x60, 0xDA, 0xFF, 0xF7, 0x7C, 0x9A, 0x04, 0x2B,
+0x01, 0x6F, 0xFF, 0xF7, 0xFC, 0xDA, 0x60, 0xDA,
+0x01, 0x4D, 0x0A, 0x75, 0x18, 0x4A, 0xCC, 0x61,
+0x30, 0xF0, 0x20, 0x6A, 0xCF, 0xF4, 0x00, 0x4A,
+0x80, 0xF1, 0x78, 0x9A, 0x80, 0xF1, 0x94, 0xDA,
+0x7B, 0xEC, 0x01, 0x2B, 0xE5, 0xE8, 0x12, 0xEB,
+0x80, 0xF1, 0x7C, 0xDA, 0x78, 0x67, 0xA0, 0xF1,
+0x60, 0xDA, 0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1,
+0x08, 0x4A, 0x69, 0xF3, 0x88, 0xA2, 0x02, 0x6B,
+0x8D, 0xEB, 0x69, 0xF3, 0x68, 0xC2, 0x01, 0x90,
+0x01, 0x63, 0x20, 0xE8, 0xFC, 0x63, 0x07, 0x62,
+0x06, 0xD1, 0x05, 0xD0, 0x30, 0xF0, 0x20, 0x68,
+0xC0, 0xF1, 0x08, 0x48, 0x69, 0xF3, 0x48, 0xA0,
+0x03, 0x6B, 0x4C, 0xEB, 0x00, 0x6A, 0x38, 0x2B,
+0x10, 0xF0, 0x24, 0x6A, 0x56, 0xF7, 0x58, 0x9A,
+0x30, 0xF0, 0x20, 0x69, 0x30, 0xF0, 0x20, 0x6C,
+0x60, 0xC2, 0x4E, 0xF2, 0x4C, 0x99, 0x29, 0xF5,
+0x10, 0x4C, 0x00, 0x6D, 0xD4, 0x6E, 0x40, 0xEA,
+0x4E, 0xF2, 0x4C, 0x99, 0x30, 0xF0, 0x20, 0x6C,
+0xFF, 0x6E, 0x4F, 0xF6, 0x14, 0x4C, 0x00, 0x6D,
+0x01, 0x4E, 0x40, 0xEA, 0x05, 0x6B, 0x66, 0x6C,
+0x7B, 0xEC, 0x01, 0x2B, 0xE5, 0xE8, 0x30, 0xF0,
+0x20, 0x6A, 0xCF, 0xF4, 0x00, 0x4A, 0x80, 0xF1,
+0x78, 0xDA, 0x80, 0xF1, 0x94, 0xDA, 0x12, 0xEB,
+0x80, 0xF1, 0x7C, 0xDA, 0x01, 0x6A, 0x69, 0xF3,
+0x68, 0xA0, 0x4B, 0xEA, 0x69, 0xF3, 0x49, 0xC0,
+0x7D, 0x6A, 0x4B, 0xEA, 0x6C, 0xEA, 0x01, 0x6B,
+0x6D, 0xEA, 0x69, 0xF3, 0x48, 0xC0, 0x43, 0x67,
+0x07, 0x97, 0x06, 0x91, 0x05, 0x90, 0x04, 0x63,
+0x00, 0xEF, 0x00, 0x65, 0xFC, 0x63, 0x07, 0x62,
+0x06, 0xD0, 0x30, 0xF0, 0x20, 0x68, 0xC0, 0xF1,
+0x08, 0x48, 0x69, 0xF3, 0x88, 0xA0, 0x01, 0x6B,
+0x00, 0x6A, 0x8C, 0xEB, 0x24, 0x23, 0x10, 0xF0,
+0x24, 0x6A, 0x56, 0xF7, 0x58, 0x9A, 0x00, 0x6B,
+0x60, 0xC2, 0x03, 0x6A, 0x4B, 0xEA, 0x8C, 0xEA,
+0x69, 0xF3, 0x48, 0xC0, 0x00, 0x18, 0xA9, 0xE5,
+0x04, 0xD2, 0x04, 0x94, 0x00, 0x18, 0xCA, 0xE5,
+0x69, 0xF3, 0x68, 0xA0, 0x02, 0x6A, 0x42, 0xF1,
+0x1C, 0x6C, 0x6D, 0xEA, 0x69, 0xF3, 0x48, 0xC0,
+0x30, 0xF0, 0x20, 0x6B, 0x30, 0xF0, 0x20, 0x6A,
+0xAE, 0xF2, 0x50, 0x9A, 0x4F, 0xF6, 0xD8, 0x9B,
+0x01, 0x6D, 0x40, 0xEA, 0x01, 0x6A, 0x07, 0x97,
+0x06, 0x90, 0x04, 0x63, 0x00, 0xEF, 0x00, 0x65,
 0x30, 0xF0, 0x20, 0x6B, 0xC0, 0xF1, 0x08, 0x4B,
-0x2C, 0xF7, 0x9F, 0xA3, 0x2C, 0xF7, 0x7E, 0xA3,
-0x8D, 0xEB, 0x06, 0x10, 0x0C, 0x2C, 0x30, 0xF0,
-0x20, 0x6B, 0x0D, 0xF1, 0x66, 0xA3, 0xAD, 0xEB,
-0x4C, 0xEB, 0x10, 0xF0, 0x24, 0x6A, 0x36, 0xF5,
-0x4C, 0x9A, 0x60, 0xC2, 0x2C, 0x10, 0x47, 0x70,
-0x12, 0x60, 0x48, 0x58, 0x06, 0x60, 0x17, 0x70,
-0x0E, 0x60, 0x44, 0x70, 0x0C, 0x60, 0x01, 0x70,
-0x09, 0x10, 0x4C, 0x70, 0x08, 0x60, 0x4D, 0x58,
-0x02, 0x60, 0x49, 0x70, 0x03, 0x10, 0x4E, 0x70,
-0x02, 0x60, 0x51, 0x70, 0x06, 0x61, 0x30, 0xF0,
-0x20, 0x6A, 0x0D, 0xF1, 0x46, 0xA2, 0xAD, 0xEA,
-0x0D, 0x10, 0x00, 0x18, 0xA9, 0xE5, 0x30, 0xF0,
-0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A, 0x2C, 0xF7,
-0x7F, 0xA2, 0x2C, 0xF7, 0x5E, 0xA2, 0x6D, 0xEA,
-0xFF, 0x6B, 0x6C, 0xEA, 0x10, 0xF0, 0x24, 0x6B,
-0x36, 0xF5, 0x6C, 0x9B, 0x40, 0xC3, 0x30, 0xF0,
-0x20, 0x6A, 0xE8, 0xF2, 0x1A, 0xC2, 0x10, 0xF0,
-0x24, 0x6A, 0x37, 0xF1, 0x40, 0x9A, 0x00, 0xC2,
-0x05, 0x97, 0x04, 0x90, 0x03, 0x63, 0x00, 0xEF,
-0xFF, 0x63, 0x01, 0xD0, 0xFF, 0x6A, 0x4C, 0xED,
-0x4C, 0xEE, 0x4C, 0xEF, 0x10, 0xF0, 0x24, 0x6A,
-0xD6, 0xF5, 0x4C, 0x9A, 0xFF, 0xF7, 0x1F, 0x6B,
-0x6C, 0xEC, 0x00, 0xAA, 0xE1, 0xF7, 0x1F, 0x6A,
-0x0C, 0xEA, 0x10, 0xF0, 0x24, 0x68, 0xD6, 0xF5,
-0x08, 0x98, 0x51, 0xE4, 0x6C, 0xEC, 0x80, 0xC8,
-0x9C, 0x32, 0x10, 0xF0, 0x24, 0x6C, 0xD6, 0xF6,
-0x9C, 0x9C, 0x10, 0xF0, 0x24, 0x68, 0x96, 0xF6,
-0x1C, 0x98, 0x91, 0xE2, 0x80, 0xAC, 0x01, 0xE2,
-0x00, 0x98, 0x6C, 0xEC, 0x05, 0x25, 0x10, 0xF0,
-0x00, 0x6D, 0xAB, 0xED, 0xAD, 0xEC, 0x6C, 0xEC,
-0xD8, 0xF0, 0x00, 0x6B, 0x8C, 0xEB, 0x10, 0xF0,
-0x24, 0x6C, 0xD6, 0xF6, 0x9C, 0x9C, 0x91, 0xE2,
-0x60, 0xCC, 0x10, 0xF0, 0x24, 0x6B, 0x37, 0xF1,
-0x64, 0x9B, 0x6D, 0xE2, 0x80, 0xA3, 0x01, 0x6B,
-0x8C, 0xEB, 0x05, 0x23, 0x03, 0xF7, 0x01, 0x6B,
-0x6B, 0xEB, 0x0C, 0xEB, 0x06, 0x10, 0x1F, 0xF7,
-0x01, 0x6B, 0x6B, 0xEB, 0x0C, 0xEB, 0xE0, 0x37,
-0xED, 0xEB, 0xFF, 0x76, 0x13, 0x60, 0x10, 0xF0,
-0x24, 0x6C, 0x37, 0xF1, 0x88, 0x9C, 0x80, 0xF4,
-0xC0, 0x36, 0x6C, 0xEC, 0x10, 0xF0, 0x24, 0x6B,
-0x36, 0xF5, 0x74, 0x9B, 0x6D, 0xEE, 0x10, 0xF0,
-0x24, 0x6B, 0x96, 0xF6, 0x7C, 0x9B, 0x8D, 0xEE,
-0x6D, 0xE2, 0xC0, 0xDB, 0x10, 0xF0, 0x24, 0x6B,
-0x16, 0xF6, 0x9C, 0x9B, 0x7F, 0x6B, 0x91, 0xE2,
-0xA0, 0xA4, 0xAC, 0xEB, 0x60, 0xC4, 0x10, 0xF0,
-0x24, 0x6B, 0x37, 0xF1, 0x6C, 0x9B, 0x1C, 0x6C,
-0x80, 0xC3, 0x10, 0xF0, 0x24, 0x6B, 0x37, 0xF1,
-0x70, 0x9B, 0x08, 0xF4, 0x13, 0x6C, 0x80, 0xCB,
-0x10, 0xF0, 0x24, 0x6B, 0xB6, 0xF5, 0x9C, 0x9B,
-0xF7, 0x6B, 0x91, 0xE2, 0xA0, 0xA4, 0xAC, 0xEB,
-0x60, 0xC4, 0x01, 0x90, 0x01, 0x63, 0x20, 0xE8,
-0x30, 0xF0, 0x20, 0x6A, 0x29, 0xF5, 0x51, 0xA2,
-0xFF, 0x63, 0x05, 0x5A, 0x36, 0x60, 0x10, 0xF0,
-0x24, 0x6B, 0x48, 0x32, 0x56, 0xF4, 0x0C, 0x4B,
-0x4D, 0xE3, 0x40, 0x9B, 0x00, 0xEA, 0x10, 0xF0,
-0x24, 0x6A, 0xB6, 0xF4, 0x54, 0x9A, 0xFF, 0xF7,
-0x1F, 0x6B, 0x40, 0x9A, 0x1A, 0x10, 0x10, 0xF0,
-0x24, 0x6A, 0xB6, 0xF4, 0x54, 0x9A, 0x09, 0x10,
-0x10, 0xF0, 0x24, 0x6A, 0x37, 0xF1, 0x54, 0x9A,
-0x0D, 0x10, 0x10, 0xF0, 0x24, 0x6A, 0x37, 0xF1,
-0x54, 0x9A, 0x40, 0x9A, 0x50, 0x32, 0x00, 0xF5,
-0x42, 0x32, 0x08, 0x10, 0x10, 0xF0, 0x24, 0x6A,
-0x37, 0xF1, 0x58, 0x9A, 0x40, 0x9A, 0xE1, 0xF7,
-0x1F, 0x6B, 0x6C, 0xEA, 0x00, 0xD2, 0x00, 0x93,
-0xE0, 0xF3, 0x08, 0x6A, 0x60, 0x33, 0x68, 0x33,
-0x5B, 0xEB, 0x01, 0x2A, 0xE5, 0xE8, 0x12, 0xEA,
-0x01, 0x10, 0x66, 0x6A, 0x00, 0xD2, 0x00, 0x92,
-0x01, 0x63, 0x20, 0xE8, 0xFF, 0x63, 0x01, 0xD0,
-0x0C, 0x2C, 0x10, 0xF0, 0x24, 0x6A, 0x16, 0xF5,
-0x7C, 0x9A, 0x10, 0xF0, 0x24, 0x6C, 0x37, 0xF1,
-0x9C, 0x9C, 0x40, 0x9B, 0x8D, 0xEA, 0x40, 0xDB,
-0x58, 0x10, 0x30, 0xF0, 0x20, 0x6A, 0x4F, 0xF6,
-0xD4, 0x9A, 0x30, 0xF0, 0x20, 0x6A, 0x6F, 0xF6,
-0x10, 0x4A, 0x00, 0x6D, 0x18, 0x6F, 0xF8, 0xED,
+0x69, 0xF3, 0xA8, 0xA3, 0x02, 0x6C, 0x00, 0x6A,
+0xAC, 0xEC, 0x0C, 0x24, 0x10, 0xF0, 0x24, 0x6A,
+0x56, 0xF7, 0x58, 0x9A, 0x00, 0x6C, 0x80, 0xC2,
+0x03, 0x6A, 0x4B, 0xEA, 0xAC, 0xEA, 0x69, 0xF3,
+0x48, 0xC3, 0x01, 0x6A, 0x20, 0xE8, 0x00, 0x65,
+0x00, 0x6A, 0x18, 0x6C, 0x98, 0xEA, 0x30, 0xF0,
+0x20, 0x6B, 0xCF, 0xF4, 0x00, 0x4B, 0x01, 0x4A,
+0x0A, 0x72, 0x12, 0xEC, 0x71, 0xE4, 0xA0, 0xF1,
+0xA4, 0xA4, 0x02, 0x6B, 0x6B, 0xEB, 0xAC, 0xEB,
+0xA0, 0xF1, 0x64, 0xC4, 0xEE, 0x61, 0x20, 0xE8,
+0x30, 0xF0, 0x20, 0x6A, 0x29, 0xF5, 0x50, 0xA2,
+0x01, 0x6B, 0x4C, 0xEB, 0x00, 0x6A, 0x1C, 0x23,
+0x30, 0xF0, 0x20, 0x6A, 0x6F, 0xF6, 0x14, 0x4A,
+0x00, 0x6B, 0xA0, 0x9A, 0x8E, 0xED, 0x0F, 0x2D,
+0x18, 0x6E, 0xD8, 0xEB, 0x30, 0xF0, 0x20, 0x6D,
+0xCF, 0xF4, 0x00, 0x4D, 0x12, 0xEE, 0xB9, 0xE6,
+0xA0, 0xF1, 0xE4, 0xA6, 0x02, 0x6D, 0xAB, 0xED,
+0xEC, 0xED, 0xA0, 0xF1, 0xA4, 0xC6, 0x01, 0x4B,
+0x0A, 0x73, 0x18, 0x4A, 0xEA, 0x61, 0x01, 0x6A,
+0x20, 0xE8, 0x00, 0x65, 0xFB, 0x63, 0x09, 0x62,
+0x08, 0xD1, 0x07, 0xD0, 0x5D, 0x67, 0x20, 0xF0,
+0x78, 0xA2, 0x30, 0xF0, 0x20, 0x6A, 0x0A, 0xD4,
+0x29, 0xF5, 0x90, 0xA2, 0x01, 0x6A, 0x00, 0xF6,
+0xE0, 0x31, 0x8C, 0xEA, 0x0B, 0xD5, 0x0C, 0xD6,
+0x00, 0xF6, 0x23, 0x31, 0x80, 0xF0, 0x0E, 0x22,
+0x24, 0x23, 0x01, 0x73, 0x80, 0xF0, 0x0A, 0x61,
+0x0A, 0x93, 0x80, 0xF0, 0x07, 0x23, 0x10, 0xF0,
+0x24, 0x6A, 0x56, 0xF7, 0x5C, 0x9A, 0xC3, 0xEA,
+0x80, 0xF0, 0x00, 0x61, 0x7F, 0x71, 0x7E, 0x60,
+0xFF, 0xF7, 0x1F, 0x51, 0x7B, 0x61, 0x30, 0xF0,
+0x20, 0x6A, 0x4F, 0xF6, 0x14, 0x9A, 0x1B, 0xEE,
+0x01, 0x28, 0xE5, 0xE8, 0x10, 0xEA, 0x12, 0xE8,
+0x02, 0x22, 0x01, 0x48, 0x04, 0x10, 0x03, 0x28,
+0x01, 0x68, 0x50, 0x67, 0x1F, 0x10, 0x01, 0x6B,
+0x20, 0x10, 0x0A, 0x95, 0x67, 0x25, 0x10, 0xF0,
+0x24, 0x6A, 0x56, 0xF7, 0x5C, 0x9A, 0x0C, 0x96,
+0xC3, 0xEA, 0x60, 0x61, 0x7F, 0x71, 0x5E, 0x60,
+0xFF, 0xF7, 0x1F, 0x51, 0x5B, 0x61, 0x30, 0xF0,
+0x20, 0x6A, 0x4F, 0xF6, 0x18, 0x9A, 0x1B, 0xEE,
+0x01, 0x28, 0xE5, 0xE8, 0x10, 0xEA, 0x12, 0xE8,
+0x02, 0x22, 0x01, 0x48, 0x05, 0x10, 0x04, 0x28,
+0x01, 0x68, 0x00, 0x6A, 0x04, 0xD2, 0x02, 0x10,
+0x00, 0x6B, 0x04, 0xD3, 0x0A, 0x94, 0x00, 0x18,
+0x56, 0xE6, 0x00, 0x6C, 0xFF, 0x6E, 0xA4, 0x67,
+0xCC, 0xED, 0x1D, 0x65, 0x18, 0x6D, 0xB8, 0xEC,
 0x30, 0xF0, 0x20, 0x6B, 0xCF, 0xF4, 0x00, 0x4B,
-0x12, 0xEF, 0x6D, 0xE7, 0xA0, 0xF1, 0x04, 0xA3,
-0x01, 0x6F, 0xEC, 0xE8, 0x23, 0x20, 0xA0, 0xF1,
-0x64, 0xA3, 0x66, 0x33, 0xEC, 0xEB, 0xFF, 0x6F,
-0xEC, 0xEB, 0x1C, 0x23, 0xFF, 0xF7, 0x78, 0x9A,
-0x9B, 0xEB, 0x01, 0x2C, 0xE5, 0xE8, 0x12, 0xEB,
-0xFF, 0xF7, 0x7C, 0xDA, 0x10, 0xEF, 0x03, 0x27,
-0x01, 0x4B, 0xFF, 0xF7, 0x7C, 0xDA, 0x60, 0x9A,
-0x78, 0xEE, 0x12, 0xEB, 0x9B, 0xEB, 0x01, 0x2C,
-0xE5, 0xE8, 0x12, 0xEB, 0x60, 0xDA, 0xFF, 0xF7,
-0x7C, 0x9A, 0x04, 0x2B, 0x01, 0x6F, 0xFF, 0xF7,
-0xFC, 0xDA, 0x60, 0xDA, 0x01, 0x4D, 0x0A, 0x75,
-0x18, 0x4A, 0xCC, 0x61, 0x30, 0xF0, 0x20, 0x6A,
-0xCF, 0xF4, 0x00, 0x4A, 0x80, 0xF1, 0x78, 0x9A,
-0x80, 0xF1, 0x94, 0xDA, 0x7B, 0xEC, 0x01, 0x2B,
-0xE5, 0xE8, 0x12, 0xEB, 0x80, 0xF1, 0x7C, 0xDA,
-0x78, 0x67, 0xA0, 0xF1, 0x60, 0xDA, 0x30, 0xF0,
-0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A, 0x69, 0xF3,
-0x88, 0xA2, 0x02, 0x6B, 0x8D, 0xEB, 0x69, 0xF3,
-0x68, 0xC2, 0x01, 0x90, 0x01, 0x63, 0x20, 0xE8,
-0xFC, 0x63, 0x07, 0x62, 0x06, 0xD1, 0x05, 0xD0,
-0x30, 0xF0, 0x20, 0x68, 0xC0, 0xF1, 0x08, 0x48,
-0x69, 0xF3, 0x48, 0xA0, 0x03, 0x6B, 0x4C, 0xEB,
-0x00, 0x6A, 0x38, 0x2B, 0x10, 0xF0, 0x24, 0x6A,
-0x57, 0xF1, 0x40, 0x9A, 0x30, 0xF0, 0x20, 0x69,
-0x30, 0xF0, 0x20, 0x6C, 0x60, 0xC2, 0x4E, 0xF2,
-0x4C, 0x99, 0x29, 0xF5, 0x10, 0x4C, 0x00, 0x6D,
-0xD4, 0x6E, 0x40, 0xEA, 0x4E, 0xF2, 0x4C, 0x99,
-0x30, 0xF0, 0x20, 0x6C, 0xFF, 0x6E, 0x4F, 0xF6,
-0x14, 0x4C, 0x00, 0x6D, 0x01, 0x4E, 0x40, 0xEA,
-0x05, 0x6B, 0x66, 0x6C, 0x7B, 0xEC, 0x01, 0x2B,
-0xE5, 0xE8, 0x30, 0xF0, 0x20, 0x6A, 0xCF, 0xF4,
-0x00, 0x4A, 0x80, 0xF1, 0x78, 0xDA, 0x80, 0xF1,
-0x94, 0xDA, 0x12, 0xEB, 0x80, 0xF1, 0x7C, 0xDA,
-0x01, 0x6A, 0x69, 0xF3, 0x68, 0xA0, 0x4B, 0xEA,
-0x69, 0xF3, 0x49, 0xC0, 0x7D, 0x6A, 0x4B, 0xEA,
-0x6C, 0xEA, 0x01, 0x6B, 0x6D, 0xEA, 0x69, 0xF3,
-0x48, 0xC0, 0x43, 0x67, 0x07, 0x97, 0x06, 0x91,
-0x05, 0x90, 0x04, 0x63, 0x00, 0xEF, 0x00, 0x65,
-0xFC, 0x63, 0x07, 0x62, 0x06, 0xD0, 0x30, 0xF0,
-0x20, 0x68, 0xC0, 0xF1, 0x08, 0x48, 0x69, 0xF3,
-0x88, 0xA0, 0x01, 0x6B, 0x00, 0x6A, 0x8C, 0xEB,
-0x24, 0x23, 0x10, 0xF0, 0x24, 0x6A, 0x57, 0xF1,
-0x40, 0x9A, 0x00, 0x6B, 0x60, 0xC2, 0x03, 0x6A,
-0x4B, 0xEA, 0x8C, 0xEA, 0x69, 0xF3, 0x48, 0xC0,
-0x00, 0x18, 0x22, 0xE6, 0x04, 0xD2, 0x04, 0x94,
-0x00, 0x18, 0x43, 0xE6, 0x69, 0xF3, 0x68, 0xA0,
-0x02, 0x6A, 0x42, 0xF1, 0x1C, 0x6C, 0x6D, 0xEA,
-0x69, 0xF3, 0x48, 0xC0, 0x30, 0xF0, 0x20, 0x6B,
-0x30, 0xF0, 0x20, 0x6A, 0xAE, 0xF2, 0x50, 0x9A,
-0x4F, 0xF6, 0xD8, 0x9B, 0x01, 0x6D, 0x40, 0xEA,
-0x01, 0x6A, 0x07, 0x97, 0x06, 0x90, 0x04, 0x63,
-0x00, 0xEF, 0x00, 0x65, 0x30, 0xF0, 0x20, 0x6B,
-0xC0, 0xF1, 0x08, 0x4B, 0x69, 0xF3, 0xA8, 0xA3,
-0x02, 0x6C, 0x00, 0x6A, 0xAC, 0xEC, 0x0C, 0x24,
-0x10, 0xF0, 0x24, 0x6A, 0x57, 0xF1, 0x40, 0x9A,
-0x00, 0x6C, 0x80, 0xC2, 0x03, 0x6A, 0x4B, 0xEA,
-0xAC, 0xEA, 0x69, 0xF3, 0x48, 0xC3, 0x01, 0x6A,
-0x20, 0xE8, 0x00, 0x65, 0x00, 0x6A, 0x18, 0x6C,
-0x98, 0xEA, 0x30, 0xF0, 0x20, 0x6B, 0xCF, 0xF4,
-0x00, 0x4B, 0x01, 0x4A, 0x0A, 0x72, 0x12, 0xEC,
-0x71, 0xE4, 0xA0, 0xF1, 0xA4, 0xA4, 0x02, 0x6B,
-0x6B, 0xEB, 0xAC, 0xEB, 0xA0, 0xF1, 0x64, 0xC4,
-0xEE, 0x61, 0x20, 0xE8, 0x30, 0xF0, 0x20, 0x6A,
-0x29, 0xF5, 0x50, 0xA2, 0x01, 0x6B, 0x4C, 0xEB,
-0x00, 0x6A, 0x1C, 0x23, 0x30, 0xF0, 0x20, 0x6A,
-0x6F, 0xF6, 0x14, 0x4A, 0x00, 0x6B, 0xA0, 0x9A,
-0x8E, 0xED, 0x0F, 0x2D, 0x18, 0x6E, 0xD8, 0xEB,
-0x30, 0xF0, 0x20, 0x6D, 0xCF, 0xF4, 0x00, 0x4D,
-0x12, 0xEE, 0xB9, 0xE6, 0xA0, 0xF1, 0xE4, 0xA6,
-0x02, 0x6D, 0xAB, 0xED, 0xEC, 0xED, 0xA0, 0xF1,
-0xA4, 0xC6, 0x01, 0x4B, 0x0A, 0x73, 0x18, 0x4A,
-0xEA, 0x61, 0x01, 0x6A, 0x20, 0xE8, 0x00, 0x65,
-0xFB, 0x63, 0x09, 0x62, 0x08, 0xD1, 0x07, 0xD0,
-0x5D, 0x67, 0x20, 0xF0, 0x78, 0xA2, 0x30, 0xF0,
-0x20, 0x6A, 0x0A, 0xD4, 0x29, 0xF5, 0x90, 0xA2,
-0x01, 0x6A, 0x00, 0xF6, 0xE0, 0x31, 0x8C, 0xEA,
-0x0B, 0xD5, 0x0C, 0xD6, 0x00, 0xF6, 0x23, 0x31,
-0x80, 0xF0, 0x0E, 0x22, 0x24, 0x23, 0x01, 0x73,
-0x80, 0xF0, 0x0A, 0x61, 0x0A, 0x93, 0x80, 0xF0,
-0x07, 0x23, 0x10, 0xF0, 0x24, 0x6A, 0x57, 0xF1,
-0x44, 0x9A, 0xC3, 0xEA, 0x80, 0xF0, 0x00, 0x61,
-0x7F, 0x71, 0x7E, 0x60, 0xFF, 0xF7, 0x1F, 0x51,
-0x7B, 0x61, 0x30, 0xF0, 0x20, 0x6A, 0x4F, 0xF6,
-0x14, 0x9A, 0x1B, 0xEE, 0x01, 0x28, 0xE5, 0xE8,
-0x10, 0xEA, 0x12, 0xE8, 0x02, 0x22, 0x01, 0x48,
-0x04, 0x10, 0x03, 0x28, 0x01, 0x68, 0x50, 0x67,
-0x1F, 0x10, 0x01, 0x6B, 0x20, 0x10, 0x0A, 0x95,
-0x67, 0x25, 0x10, 0xF0, 0x24, 0x6A, 0x57, 0xF1,
-0x44, 0x9A, 0x0C, 0x96, 0xC3, 0xEA, 0x60, 0x61,
-0x7F, 0x71, 0x5E, 0x60, 0xFF, 0xF7, 0x1F, 0x51,
-0x5B, 0x61, 0x30, 0xF0, 0x20, 0x6A, 0x4F, 0xF6,
-0x18, 0x9A, 0x1B, 0xEE, 0x01, 0x28, 0xE5, 0xE8,
-0x10, 0xEA, 0x12, 0xE8, 0x02, 0x22, 0x01, 0x48,
-0x05, 0x10, 0x04, 0x28, 0x01, 0x68, 0x00, 0x6A,
-0x04, 0xD2, 0x02, 0x10, 0x00, 0x6B, 0x04, 0xD3,
-0x0A, 0x94, 0x00, 0x18, 0xCF, 0xE6, 0x00, 0x6C,
-0xFF, 0x6E, 0xA4, 0x67, 0xCC, 0xED, 0x1D, 0x65,
-0x18, 0x6D, 0xB8, 0xEC, 0x30, 0xF0, 0x20, 0x6B,
-0xCF, 0xF4, 0x00, 0x4B, 0x01, 0x6D, 0x12, 0xEA,
-0x69, 0xE2, 0xA0, 0xF1, 0x44, 0xA2, 0xAC, 0xEA,
-0xCC, 0xEA, 0x2F, 0x2A, 0xD8, 0x67, 0x18, 0x6F,
-0xF8, 0xEE, 0x04, 0x96, 0xC4, 0x36, 0x04, 0xD6,
-0x03, 0x6E, 0xCB, 0xEE, 0x12, 0xEC, 0x71, 0xE4,
-0xA0, 0xF1, 0xE4, 0xA4, 0xEC, 0xEE, 0x04, 0x97,
-0xED, 0xEE, 0xA0, 0xF1, 0xC4, 0xC4, 0x0A, 0x96,
-0xA0, 0xF1, 0xD4, 0xDC, 0x0B, 0x97, 0xA0, 0xF1,
-0xF8, 0xDC, 0x0C, 0x96, 0x18, 0x6F, 0xA0, 0xF1,
-0xC8, 0xDC, 0xD8, 0x67, 0x01, 0x4E, 0xF8, 0xEE,
-0x12, 0xEE, 0xCD, 0xE3, 0x80, 0xF1, 0x58, 0xDB,
-0x80, 0xF1, 0x14, 0xDB, 0xA0, 0xF1, 0x46, 0xC4,
-0xA0, 0xF1, 0x44, 0xA4, 0xA0, 0xF1, 0x27, 0xC4,
-0x4D, 0xED, 0xA0, 0xF1, 0xA4, 0xC4, 0x01, 0x6A,
-0x04, 0x10, 0x01, 0x4C, 0x0A, 0x74, 0xBC, 0x61,
-0x00, 0x6A, 0x09, 0x97, 0x08, 0x91, 0x07, 0x90,
-0x05, 0x63, 0x00, 0xEF, 0xFC, 0x63, 0x07, 0x62,
-0xFF, 0x6A, 0x8C, 0xEA, 0x06, 0x22, 0x30, 0xF0,
-0x20, 0x6A, 0x6F, 0xF6, 0x10, 0x4A, 0x00, 0x6C,
-0x4F, 0x10, 0x30, 0xF0, 0x20, 0x6A, 0x6F, 0xF6,
-0x10, 0x4A, 0x00, 0x6B, 0x18, 0x6D, 0xB8, 0xEB,
-0x30, 0xF0, 0x20, 0x6C, 0xCF, 0xF4, 0x00, 0x4C,
-0x12, 0xED, 0x91, 0xE5, 0xA0, 0xF1, 0xC4, 0xA4,
-0x01, 0x6D, 0xAC, 0xEE, 0x08, 0x26, 0xA0, 0xF1,
-0x84, 0xA4, 0x86, 0x34, 0xAC, 0xEC, 0x03, 0x24,
-0x80, 0x9A, 0x01, 0x4C, 0x80, 0xDA, 0x01, 0x4B,
-0x0A, 0x73, 0x18, 0x4A, 0xE7, 0x61, 0x00, 0x18,
-0x22, 0xE6, 0x04, 0xD2, 0x30, 0xF0, 0x20, 0x6A,
-0xC0, 0xF1, 0x08, 0x4A, 0x68, 0xF3, 0x94, 0xA2,
-0x7F, 0x6B, 0x8C, 0xEB, 0x1A, 0x23, 0x68, 0xF3,
-0x77, 0xA2, 0x69, 0xF3, 0x89, 0xA2, 0x76, 0x33,
-0x8E, 0xEB, 0x13, 0x2B, 0x68, 0xF3, 0x95, 0xA2,
-0x0F, 0x6B, 0x8C, 0xEB, 0xFF, 0x6C, 0x8C, 0xEB,
-0x0C, 0x23, 0x88, 0xF3, 0x82, 0xA2, 0x04, 0x93,
-0x30, 0xF0, 0x20, 0x6A, 0x4F, 0xF6, 0x54, 0x9A,
-0x78, 0xEC, 0x12, 0xEC, 0x8E, 0xEA, 0x09, 0x2A,
-0x5B, 0x10, 0x30, 0xF0, 0x20, 0x6A, 0x04, 0x93,
-0x4F, 0xF6, 0x54, 0x9A, 0x6E, 0xEA, 0x54, 0x22,
-0x04, 0x94, 0x00, 0x18, 0x43, 0xE6, 0x50, 0x10,
-0x18, 0x6D, 0xB8, 0xEC, 0x30, 0xF0, 0x20, 0x6B,
-0xCF, 0xF4, 0x00, 0x4B, 0x12, 0xED, 0x6D, 0xE5,
-0xA0, 0xF1, 0xC4, 0xA3, 0x01, 0x6D, 0xAC, 0xEE,
-0x0A, 0x26, 0xA0, 0xF1, 0x64, 0xA3, 0x66, 0x33,
-0xAC, 0xEB, 0xFF, 0x6D, 0xAC, 0xEB, 0x03, 0x2B,
-0x60, 0x9A, 0x01, 0x4B, 0x60, 0xDA, 0x01, 0x4C,
-0x0A, 0x74, 0x18, 0x4A, 0xE5, 0x61, 0x30, 0xF0,
-0x20, 0x6A, 0x29, 0xF5, 0x51, 0xA2, 0xFF, 0x72,
-0x2F, 0x61, 0x30, 0xF0, 0x20, 0x6A, 0xCF, 0xF4,
-0x00, 0x4A, 0xA0, 0xF1, 0x60, 0x9A, 0x01, 0x4B,
-0xA0, 0xF1, 0x60, 0xDA, 0x80, 0xF1, 0x5C, 0x9A,
-0x4E, 0xEB, 0x22, 0x2B, 0x30, 0xF0, 0x20, 0x6A,
-0x6F, 0xF6, 0x10, 0x4A, 0x18, 0x6D, 0xB8, 0xEB,
-0x30, 0xF0, 0x20, 0x6C, 0xCF, 0xF4, 0x00, 0x4C,
-0x12, 0xED, 0x91, 0xE5, 0xA0, 0xF1, 0xC4, 0xA4,
-0x01, 0x6D, 0xAC, 0xEE, 0x08, 0x26, 0xA0, 0xF1,
-0x84, 0xA4, 0x86, 0x34, 0xAC, 0xEC, 0x03, 0x24,
-0x80, 0x9A, 0x01, 0x4C, 0x80, 0xDA, 0x01, 0x4B,
-0x0A, 0x73, 0x18, 0x4A, 0xE7, 0x61, 0x30, 0xF0,
-0x20, 0x6A, 0x78, 0x67, 0x6F, 0xF6, 0x60, 0xDA,
+0x01, 0x6D, 0x12, 0xEA, 0x69, 0xE2, 0xA0, 0xF1,
+0x44, 0xA2, 0xAC, 0xEA, 0xCC, 0xEA, 0x2F, 0x2A,
+0xD8, 0x67, 0x18, 0x6F, 0xF8, 0xEE, 0x04, 0x96,
+0xC4, 0x36, 0x04, 0xD6, 0x03, 0x6E, 0xCB, 0xEE,
+0x12, 0xEC, 0x71, 0xE4, 0xA0, 0xF1, 0xE4, 0xA4,
+0xEC, 0xEE, 0x04, 0x97, 0xED, 0xEE, 0xA0, 0xF1,
+0xC4, 0xC4, 0x0A, 0x96, 0xA0, 0xF1, 0xD4, 0xDC,
+0x0B, 0x97, 0xA0, 0xF1, 0xF8, 0xDC, 0x0C, 0x96,
+0x18, 0x6F, 0xA0, 0xF1, 0xC8, 0xDC, 0xD8, 0x67,
+0x01, 0x4E, 0xF8, 0xEE, 0x12, 0xEE, 0xCD, 0xE3,
+0x80, 0xF1, 0x58, 0xDB, 0x80, 0xF1, 0x14, 0xDB,
+0xA0, 0xF1, 0x46, 0xC4, 0xA0, 0xF1, 0x44, 0xA4,
+0xA0, 0xF1, 0x27, 0xC4, 0x4D, 0xED, 0xA0, 0xF1,
+0xA4, 0xC4, 0x01, 0x6A, 0x04, 0x10, 0x01, 0x4C,
+0x0A, 0x74, 0xBC, 0x61, 0x00, 0x6A, 0x09, 0x97,
+0x08, 0x91, 0x07, 0x90, 0x05, 0x63, 0x00, 0xEF,
+0xFC, 0x63, 0x07, 0x62, 0xFF, 0x6A, 0x8C, 0xEA,
+0x06, 0x22, 0x30, 0xF0, 0x20, 0x6A, 0x6F, 0xF6,
+0x10, 0x4A, 0x00, 0x6C, 0x4F, 0x10, 0x30, 0xF0,
+0x20, 0x6A, 0x6F, 0xF6, 0x10, 0x4A, 0x00, 0x6B,
+0x18, 0x6D, 0xB8, 0xEB, 0x30, 0xF0, 0x20, 0x6C,
+0xCF, 0xF4, 0x00, 0x4C, 0x12, 0xED, 0x91, 0xE5,
+0xA0, 0xF1, 0xC4, 0xA4, 0x01, 0x6D, 0xAC, 0xEE,
+0x08, 0x26, 0xA0, 0xF1, 0x84, 0xA4, 0x86, 0x34,
+0xAC, 0xEC, 0x03, 0x24, 0x80, 0x9A, 0x01, 0x4C,
+0x80, 0xDA, 0x01, 0x4B, 0x0A, 0x73, 0x18, 0x4A,
+0xE7, 0x61, 0x00, 0x18, 0xA9, 0xE5, 0x04, 0xD2,
 0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A,
-0x80, 0xF0, 0x6C, 0x9A, 0x02, 0xF0, 0x00, 0x6C,
-0x8D, 0xEB, 0x80, 0xF0, 0x6C, 0xDA, 0x07, 0x97,
-0x04, 0x63, 0x00, 0xEF, 0xFB, 0x63, 0x09, 0x62,
-0x08, 0xD1, 0x07, 0xD0, 0x10, 0xF0, 0x24, 0x6B,
-0x76, 0xF4, 0x7C, 0x9B, 0x10, 0xF0, 0x24, 0x6A,
-0x53, 0xF6, 0x0D, 0x4A, 0x30, 0xF0, 0x20, 0x68,
-0x40, 0xDB, 0x6F, 0xF6, 0x06, 0x48, 0x00, 0x69,
-0x18, 0x6A, 0x58, 0xE9, 0x30, 0xF0, 0x20, 0x6B,
-0xCF, 0xF4, 0x00, 0x4B, 0x12, 0xEA, 0x69, 0xE2,
-0xA0, 0xF1, 0x84, 0xA2, 0x01, 0x6B, 0x8C, 0xEB,
-0x27, 0x23, 0x00, 0xF0, 0x8A, 0x98, 0x00, 0xF0,
-0x66, 0x98, 0x63, 0xEC, 0x21, 0x61, 0x61, 0x80,
-0x81, 0x43, 0x04, 0xD4, 0x07, 0x2C, 0x00, 0xF0,
-0x4E, 0x98, 0x00, 0xF0, 0x92, 0x98, 0x40, 0xEA,
-0x04, 0x92, 0x14, 0x10, 0x80, 0xA0, 0x01, 0x4C,
-0x80, 0xC0, 0x80, 0xA0, 0x82, 0xEB, 0x08, 0x60,
-0xA0, 0xF1, 0x84, 0xA2, 0x02, 0x6B, 0x6B, 0xEB,
-0x8C, 0xEB, 0xA0, 0xF1, 0x64, 0xC2, 0x08, 0x10,
-0x00, 0xF0, 0x4E, 0x98, 0x00, 0xF0, 0x92, 0x98,
-0x40, 0xEA, 0x00, 0x6A, 0x00, 0xF0, 0x4A, 0xD8,
-0x01, 0x49, 0x0A, 0x71, 0x18, 0x48, 0xC8, 0x61,
-0x09, 0x97, 0x08, 0x91, 0x07, 0x90, 0x05, 0x63,
-0x00, 0xEF, 0x00, 0x65, 0xE0, 0x63, 0x3F, 0x62,
-0xFF, 0xF7, 0x1F, 0x6A, 0xAC, 0xEA, 0xBD, 0x67,
-0x56, 0xC5, 0x01, 0x6B, 0x42, 0x32, 0x57, 0xC5,
-0x6B, 0xEB, 0x30, 0xF0, 0x20, 0x6A, 0x70, 0xC5,
-0xAE, 0xF2, 0x5C, 0x9A, 0x03, 0x6B, 0x72, 0xC5,
-0x04, 0x6B, 0x94, 0xC5, 0x73, 0xC5, 0x04, 0x04,
-0x40, 0xEA, 0x3F, 0x97, 0x20, 0x63, 0x00, 0xEF,
-0xFD, 0x63, 0x05, 0x62, 0x30, 0xF0, 0x20, 0x6A,
-0x4E, 0xF2, 0x50, 0x9A, 0xA7, 0x44, 0x30, 0xF0,
-0x20, 0x6C, 0x01, 0x4D, 0xAC, 0xF0, 0x08, 0x4C,
-0x14, 0x6E, 0x40, 0xEA, 0x05, 0x97, 0x03, 0x63,
-0x00, 0xEF, 0x00, 0x65, 0xFB, 0x63, 0x09, 0x62,
-0x08, 0xD1, 0x07, 0xD0, 0x24, 0x67, 0x00, 0x18,
-0xC8, 0xE7, 0x30, 0xF0, 0x20, 0x6A, 0xCF, 0xF4,
-0x00, 0x4A, 0x00, 0x6C, 0x80, 0xF1, 0x8F, 0xC2,
-0x47, 0xA1, 0x66, 0xA1, 0x30, 0xF0, 0x20, 0x68,
-0xC0, 0xF1, 0x08, 0x48, 0x40, 0x32, 0xEB, 0xF6,
-0xA0, 0xA0, 0x69, 0xE2, 0x01, 0x69, 0xEB, 0xF6,
-0x52, 0xC8, 0x51, 0x67, 0xAC, 0xEA, 0xFF, 0x6B,
-0x1C, 0x2A, 0xEB, 0xF6, 0x94, 0xA0, 0xFE, 0x4A,
-0x8C, 0xEA, 0xEB, 0xF6, 0x54, 0xC0, 0x02, 0x6A,
-0xAC, 0xEA, 0x6C, 0xEA, 0x50, 0x22, 0xEB, 0xF6,
-0x43, 0xA0, 0x0F, 0x6D, 0xEB, 0xF6, 0x84, 0xA0,
-0x4C, 0xED, 0x52, 0x36, 0x30, 0xF0, 0x20, 0x6A,
-0xAE, 0xF2, 0x54, 0x9A, 0x6C, 0xED, 0x6C, 0xEE,
-0x40, 0xEA, 0x01, 0x72, 0x0D, 0x6A, 0x40, 0x61,
-0x3E, 0x10, 0xEB, 0xF6, 0x74, 0xA0, 0xEB, 0xF6,
-0xF0, 0xA8, 0x02, 0x6A, 0x4B, 0xEA, 0x6C, 0xEA,
-0x00, 0xF1, 0x01, 0x5F, 0xEB, 0xF6, 0x54, 0xC0,
-0x0C, 0x6A, 0x32, 0x60, 0x00, 0x6A, 0xEB, 0xF6,
-0x58, 0xC8, 0xEB, 0xF6, 0x5A, 0xC8, 0x10, 0xF0,
-0x24, 0x6A, 0xD6, 0xF5, 0x4C, 0x9A, 0xEB, 0xF6,
-0x95, 0xC0, 0xEB, 0xF6, 0x96, 0xC0, 0x60, 0xAA,
-0xEB, 0xF6, 0xC1, 0xA0, 0xFF, 0xF7, 0x1F, 0x6A,
-0x10, 0xF0, 0x24, 0x6D, 0x6C, 0xEA, 0x57, 0xF1,
-0xA8, 0x9D, 0xD9, 0xE2, 0xDC, 0x36, 0x00, 0x6A,
-0xB5, 0xE6, 0x10, 0xF0, 0x24, 0x6E, 0x04, 0xD2,
-0x05, 0xD2, 0xD6, 0xF5, 0xD8, 0x9E, 0x30, 0xF0,
-0x20, 0x6A, 0x30, 0xF0, 0x20, 0x6B, 0xAE, 0xF2,
-0x40, 0x9A, 0xCC, 0xF0, 0x0E, 0x4B, 0x00, 0x6C,
-0xD9, 0xE3, 0x40, 0xEA, 0xEB, 0xF6, 0x54, 0xA0,
-0x4D, 0xE9, 0xEB, 0xF6, 0x34, 0xC0, 0x00, 0x6A,
-0x09, 0x97, 0x08, 0x91, 0x07, 0x90, 0x05, 0x63,
-0x00, 0xEF, 0x00, 0x65, 0xFA, 0x63, 0x0B, 0x62,
-0x0A, 0xD1, 0x09, 0xD0, 0x30, 0xF0, 0x20, 0x68,
-0xC0, 0xF1, 0x08, 0x48, 0xEB, 0xF6, 0xB8, 0xA8,
-0x30, 0xF0, 0x20, 0x6A, 0x30, 0xF0, 0x20, 0x6B,
-0x4E, 0xF2, 0x50, 0x9A, 0xCC, 0xF0, 0x0E, 0x4B,
-0x30, 0xF0, 0x20, 0x6C, 0xB5, 0xE3, 0xCC, 0xF0,
-0x08, 0x4C, 0x04, 0x6E, 0x40, 0xEA, 0x0B, 0xF7,
-0x63, 0xA0, 0x80, 0x6A, 0x4B, 0xEA, 0x6C, 0xEA,
-0xFF, 0x6B, 0x6C, 0xEA, 0x05, 0x2A, 0xEB, 0xF6,
-0x58, 0xA8, 0x04, 0x4A, 0xEB, 0xF6, 0x58, 0xC8,
+0x68, 0xF3, 0x94, 0xA2, 0x7F, 0x6B, 0x8C, 0xEB,
+0x1A, 0x23, 0x68, 0xF3, 0x77, 0xA2, 0x69, 0xF3,
+0x89, 0xA2, 0x76, 0x33, 0x8E, 0xEB, 0x13, 0x2B,
+0x68, 0xF3, 0x95, 0xA2, 0x0F, 0x6B, 0x8C, 0xEB,
+0xFF, 0x6C, 0x8C, 0xEB, 0x0C, 0x23, 0x88, 0xF3,
+0x82, 0xA2, 0x04, 0x93, 0x30, 0xF0, 0x20, 0x6A,
+0x4F, 0xF6, 0x54, 0x9A, 0x78, 0xEC, 0x12, 0xEC,
+0x8E, 0xEA, 0x09, 0x2A, 0x5B, 0x10, 0x30, 0xF0,
+0x20, 0x6A, 0x04, 0x93, 0x4F, 0xF6, 0x54, 0x9A,
+0x6E, 0xEA, 0x54, 0x22, 0x04, 0x94, 0x00, 0x18,
+0xCA, 0xE5, 0x50, 0x10, 0x18, 0x6D, 0xB8, 0xEC,
+0x30, 0xF0, 0x20, 0x6B, 0xCF, 0xF4, 0x00, 0x4B,
+0x12, 0xED, 0x6D, 0xE5, 0xA0, 0xF1, 0xC4, 0xA3,
+0x01, 0x6D, 0xAC, 0xEE, 0x0A, 0x26, 0xA0, 0xF1,
+0x64, 0xA3, 0x66, 0x33, 0xAC, 0xEB, 0xFF, 0x6D,
+0xAC, 0xEB, 0x03, 0x2B, 0x60, 0x9A, 0x01, 0x4B,
+0x60, 0xDA, 0x01, 0x4C, 0x0A, 0x74, 0x18, 0x4A,
+0xE5, 0x61, 0x30, 0xF0, 0x20, 0x6A, 0x29, 0xF5,
+0x51, 0xA2, 0xFF, 0x72, 0x2F, 0x61, 0x30, 0xF0,
+0x20, 0x6A, 0xCF, 0xF4, 0x00, 0x4A, 0xA0, 0xF1,
+0x60, 0x9A, 0x01, 0x4B, 0xA0, 0xF1, 0x60, 0xDA,
+0x80, 0xF1, 0x5C, 0x9A, 0x4E, 0xEB, 0x22, 0x2B,
+0x30, 0xF0, 0x20, 0x6A, 0x6F, 0xF6, 0x10, 0x4A,
+0x18, 0x6D, 0xB8, 0xEB, 0x30, 0xF0, 0x20, 0x6C,
+0xCF, 0xF4, 0x00, 0x4C, 0x12, 0xED, 0x91, 0xE5,
+0xA0, 0xF1, 0xC4, 0xA4, 0x01, 0x6D, 0xAC, 0xEE,
+0x08, 0x26, 0xA0, 0xF1, 0x84, 0xA4, 0x86, 0x34,
+0xAC, 0xEC, 0x03, 0x24, 0x80, 0x9A, 0x01, 0x4C,
+0x80, 0xDA, 0x01, 0x4B, 0x0A, 0x73, 0x18, 0x4A,
+0xE7, 0x61, 0x30, 0xF0, 0x20, 0x6A, 0x78, 0x67,
+0x6F, 0xF6, 0x60, 0xDA, 0x30, 0xF0, 0x20, 0x6A,
+0xC0, 0xF1, 0x08, 0x4A, 0x80, 0xF0, 0x6C, 0x9A,
+0x02, 0xF0, 0x00, 0x6C, 0x8D, 0xEB, 0x80, 0xF0,
+0x6C, 0xDA, 0x07, 0x97, 0x04, 0x63, 0x00, 0xEF,
+0xFB, 0x63, 0x09, 0x62, 0x08, 0xD1, 0x07, 0xD0,
+0x10, 0xF0, 0x24, 0x6B, 0x96, 0xF2, 0x78, 0x9B,
+0x10, 0xF0, 0x24, 0x6A, 0x73, 0xF4, 0x09, 0x4A,
+0x30, 0xF0, 0x20, 0x68, 0x40, 0xDB, 0x6F, 0xF6,
+0x06, 0x48, 0x00, 0x69, 0x18, 0x6A, 0x58, 0xE9,
+0x30, 0xF0, 0x20, 0x6B, 0xCF, 0xF4, 0x00, 0x4B,
+0x12, 0xEA, 0x69, 0xE2, 0xA0, 0xF1, 0x84, 0xA2,
+0x01, 0x6B, 0x8C, 0xEB, 0x27, 0x23, 0x00, 0xF0,
+0x8A, 0x98, 0x00, 0xF0, 0x66, 0x98, 0x63, 0xEC,
+0x21, 0x61, 0x61, 0x80, 0x81, 0x43, 0x04, 0xD4,
+0x07, 0x2C, 0x00, 0xF0, 0x4E, 0x98, 0x00, 0xF0,
+0x92, 0x98, 0x40, 0xEA, 0x04, 0x92, 0x14, 0x10,
+0x80, 0xA0, 0x01, 0x4C, 0x80, 0xC0, 0x80, 0xA0,
+0x82, 0xEB, 0x08, 0x60, 0xA0, 0xF1, 0x84, 0xA2,
+0x02, 0x6B, 0x6B, 0xEB, 0x8C, 0xEB, 0xA0, 0xF1,
+0x64, 0xC2, 0x08, 0x10, 0x00, 0xF0, 0x4E, 0x98,
+0x00, 0xF0, 0x92, 0x98, 0x40, 0xEA, 0x00, 0x6A,
+0x00, 0xF0, 0x4A, 0xD8, 0x01, 0x49, 0x0A, 0x71,
+0x18, 0x48, 0xC8, 0x61, 0x09, 0x97, 0x08, 0x91,
+0x07, 0x90, 0x05, 0x63, 0x00, 0xEF, 0x00, 0x65,
+0xE0, 0x63, 0x3F, 0x62, 0xFF, 0xF7, 0x1F, 0x6A,
+0xAC, 0xEA, 0xBD, 0x67, 0x56, 0xC5, 0x01, 0x6B,
+0x42, 0x32, 0x57, 0xC5, 0x6B, 0xEB, 0x30, 0xF0,
+0x20, 0x6A, 0x70, 0xC5, 0xAE, 0xF2, 0x5C, 0x9A,
+0x03, 0x6B, 0x72, 0xC5, 0x04, 0x6B, 0x94, 0xC5,
+0x73, 0xC5, 0x04, 0x04, 0x40, 0xEA, 0x3F, 0x97,
+0x20, 0x63, 0x00, 0xEF, 0xFD, 0x63, 0x05, 0x62,
+0x30, 0xF0, 0x20, 0x6A, 0x4E, 0xF2, 0x50, 0x9A,
+0xA7, 0x44, 0x30, 0xF0, 0x20, 0x6C, 0x01, 0x4D,
+0xAC, 0xF0, 0x08, 0x4C, 0x14, 0x6E, 0x40, 0xEA,
+0x05, 0x97, 0x03, 0x63, 0x00, 0xEF, 0x00, 0x65,
+0xFB, 0x63, 0x09, 0x62, 0x08, 0xD1, 0x07, 0xD0,
+0x24, 0x67, 0x00, 0x18, 0x4F, 0xE7, 0x30, 0xF0,
+0x20, 0x6A, 0xCF, 0xF4, 0x00, 0x4A, 0x00, 0x6C,
+0x80, 0xF1, 0x8F, 0xC2, 0x47, 0xA1, 0x66, 0xA1,
 0x30, 0xF0, 0x20, 0x68, 0xC0, 0xF1, 0x08, 0x48,
-0x0B, 0xF7, 0x61, 0xA0, 0x30, 0xF0, 0x20, 0x6A,
-0xAE, 0xF2, 0x54, 0x9A, 0x0B, 0xF7, 0x80, 0xA0,
-0x0F, 0x6D, 0x6C, 0xED, 0x72, 0x36, 0xFF, 0x69,
-0x40, 0xEA, 0x0E, 0x2A, 0x30, 0xF0, 0x20, 0x6A,
-0xEE, 0xF4, 0x54, 0x9A, 0x40, 0xEA, 0xEB, 0xF6,
-0x74, 0xA0, 0x02, 0x6A, 0x4B, 0xEA, 0x6C, 0xEA,
-0xEB, 0xF6, 0x54, 0xC0, 0x01, 0x6C, 0x7C, 0x10,
-0x0B, 0xF7, 0x63, 0xA0, 0x7F, 0x6A, 0x6C, 0xEA,
-0x2C, 0xEA, 0x3F, 0x22, 0x01, 0x72, 0x6C, 0x61,
-0x30, 0xF0, 0x20, 0x6A, 0xCE, 0xF5, 0x4C, 0x9A,
-0x00, 0x6C, 0x40, 0xEA, 0x70, 0x22, 0x30, 0xF0,
-0x20, 0x6A, 0x4E, 0xF3, 0x50, 0x9A, 0xCB, 0xF6,
-0x9D, 0xA0, 0x00, 0x6D, 0x40, 0xEA, 0x06, 0xD2,
-0xE8, 0xF3, 0x73, 0xA0, 0x10, 0x6A, 0x6C, 0xEA,
-0x2C, 0xEA, 0x1F, 0x22, 0x28, 0xF6, 0x4D, 0xA0,
-0x00, 0x68, 0x13, 0x2A, 0x1A, 0x10, 0x30, 0xF0,
-0x20, 0x6A, 0xCE, 0xF4, 0x58, 0x9A, 0x03, 0x6C,
-0x25, 0xE0, 0x40, 0xEA, 0x30, 0xF0, 0x20, 0x6A,
-0x4E, 0xF3, 0x50, 0x9A, 0x68, 0xF6, 0x8C, 0xA1,
-0x00, 0x6D, 0x01, 0x48, 0x40, 0xEA, 0xFF, 0x6A,
-0x4C, 0xE8, 0x30, 0xF0, 0x20, 0x69, 0xC0, 0xF1,
-0x08, 0x49, 0x28, 0xF6, 0x4D, 0xA1, 0x43, 0xE8,
-0xE6, 0x61, 0x06, 0x92, 0x06, 0x2A, 0x30, 0xF0,
+0x40, 0x32, 0xEB, 0xF6, 0xA0, 0xA0, 0x69, 0xE2,
+0x01, 0x69, 0xEB, 0xF6, 0x52, 0xC8, 0x51, 0x67,
+0xAC, 0xEA, 0xFF, 0x6B, 0x1C, 0x2A, 0xEB, 0xF6,
+0x94, 0xA0, 0xFE, 0x4A, 0x8C, 0xEA, 0xEB, 0xF6,
+0x54, 0xC0, 0x02, 0x6A, 0xAC, 0xEA, 0x6C, 0xEA,
+0x50, 0x22, 0xEB, 0xF6, 0x43, 0xA0, 0x0F, 0x6D,
+0xEB, 0xF6, 0x84, 0xA0, 0x4C, 0xED, 0x52, 0x36,
+0x30, 0xF0, 0x20, 0x6A, 0xAE, 0xF2, 0x54, 0x9A,
+0x6C, 0xED, 0x6C, 0xEE, 0x40, 0xEA, 0x01, 0x72,
+0x0D, 0x6A, 0x40, 0x61, 0x3E, 0x10, 0xEB, 0xF6,
+0x74, 0xA0, 0xEB, 0xF6, 0xF0, 0xA8, 0x02, 0x6A,
+0x4B, 0xEA, 0x6C, 0xEA, 0x00, 0xF1, 0x01, 0x5F,
+0xEB, 0xF6, 0x54, 0xC0, 0x0C, 0x6A, 0x32, 0x60,
+0x00, 0x6A, 0xEB, 0xF6, 0x58, 0xC8, 0xEB, 0xF6,
+0x5A, 0xC8, 0x10, 0xF0, 0x24, 0x6A, 0xF6, 0xF3,
+0x48, 0x9A, 0xEB, 0xF6, 0x95, 0xC0, 0xEB, 0xF6,
+0x96, 0xC0, 0x60, 0xAA, 0xEB, 0xF6, 0xC1, 0xA0,
+0xFF, 0xF7, 0x1F, 0x6A, 0x10, 0xF0, 0x24, 0x6D,
+0x6C, 0xEA, 0x76, 0xF7, 0xA0, 0x9D, 0xD9, 0xE2,
+0xDC, 0x36, 0x00, 0x6A, 0xB5, 0xE6, 0x10, 0xF0,
+0x24, 0x6E, 0x04, 0xD2, 0x05, 0xD2, 0xF6, 0xF3,
+0xD4, 0x9E, 0x30, 0xF0, 0x20, 0x6A, 0x30, 0xF0,
+0x20, 0x6B, 0xAE, 0xF2, 0x40, 0x9A, 0xCC, 0xF0,
+0x0E, 0x4B, 0x00, 0x6C, 0xD9, 0xE3, 0x40, 0xEA,
+0xEB, 0xF6, 0x54, 0xA0, 0x4D, 0xE9, 0xEB, 0xF6,
+0x34, 0xC0, 0x00, 0x6A, 0x09, 0x97, 0x08, 0x91,
+0x07, 0x90, 0x05, 0x63, 0x00, 0xEF, 0x00, 0x65,
+0xFA, 0x63, 0x0B, 0x62, 0x0A, 0xD1, 0x09, 0xD0,
+0x30, 0xF0, 0x20, 0x68, 0xC0, 0xF1, 0x08, 0x48,
+0xEB, 0xF6, 0xB8, 0xA8, 0x30, 0xF0, 0x20, 0x6A,
+0x30, 0xF0, 0x20, 0x6B, 0x4E, 0xF2, 0x50, 0x9A,
+0xCC, 0xF0, 0x0E, 0x4B, 0x30, 0xF0, 0x20, 0x6C,
+0xB5, 0xE3, 0xCC, 0xF0, 0x08, 0x4C, 0x04, 0x6E,
+0x40, 0xEA, 0x0B, 0xF7, 0x63, 0xA0, 0x80, 0x6A,
+0x4B, 0xEA, 0x6C, 0xEA, 0xFF, 0x6B, 0x6C, 0xEA,
+0x05, 0x2A, 0xEB, 0xF6, 0x58, 0xA8, 0x04, 0x4A,
+0xEB, 0xF6, 0x58, 0xC8, 0x30, 0xF0, 0x20, 0x68,
+0xC0, 0xF1, 0x08, 0x48, 0x0B, 0xF7, 0x61, 0xA0,
+0x30, 0xF0, 0x20, 0x6A, 0xAE, 0xF2, 0x54, 0x9A,
+0x0B, 0xF7, 0x80, 0xA0, 0x0F, 0x6D, 0x6C, 0xED,
+0x72, 0x36, 0xFF, 0x69, 0x40, 0xEA, 0x0E, 0x2A,
+0x30, 0xF0, 0x20, 0x6A, 0xEE, 0xF4, 0x54, 0x9A,
+0x40, 0xEA, 0xEB, 0xF6, 0x74, 0xA0, 0x02, 0x6A,
+0x4B, 0xEA, 0x6C, 0xEA, 0xEB, 0xF6, 0x54, 0xC0,
+0x01, 0x6C, 0x7C, 0x10, 0x0B, 0xF7, 0x63, 0xA0,
+0x7F, 0x6A, 0x6C, 0xEA, 0x2C, 0xEA, 0x3F, 0x22,
+0x01, 0x72, 0x6C, 0x61, 0x30, 0xF0, 0x20, 0x6A,
+0xCE, 0xF5, 0x4C, 0x9A, 0x00, 0x6C, 0x40, 0xEA,
+0x70, 0x22, 0x30, 0xF0, 0x20, 0x6A, 0x4E, 0xF3,
+0x50, 0x9A, 0xCB, 0xF6, 0x9D, 0xA0, 0x00, 0x6D,
+0x40, 0xEA, 0x06, 0xD2, 0xE8, 0xF3, 0x73, 0xA0,
+0x10, 0x6A, 0x6C, 0xEA, 0x2C, 0xEA, 0x1F, 0x22,
+0x28, 0xF6, 0x4D, 0xA0, 0x00, 0x68, 0x13, 0x2A,
+0x1A, 0x10, 0x30, 0xF0, 0x20, 0x6A, 0xCE, 0xF4,
+0x58, 0x9A, 0x03, 0x6C, 0x25, 0xE0, 0x40, 0xEA,
+0x30, 0xF0, 0x20, 0x6A, 0x4E, 0xF3, 0x50, 0x9A,
+0x68, 0xF6, 0x8C, 0xA1, 0x00, 0x6D, 0x01, 0x48,
+0x40, 0xEA, 0xFF, 0x6A, 0x4C, 0xE8, 0x30, 0xF0,
+0x20, 0x69, 0xC0, 0xF1, 0x08, 0x49, 0x28, 0xF6,
+0x4D, 0xA1, 0x43, 0xE8, 0xE6, 0x61, 0x06, 0x92,
+0x06, 0x2A, 0x30, 0xF0, 0x20, 0x6A, 0xEE, 0xF4,
+0x54, 0x9A, 0x40, 0xEA, 0x3A, 0x10, 0x30, 0xF0,
+0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A, 0xEB, 0xF6,
+0x75, 0xA2, 0x0B, 0xF7, 0x82, 0xA2, 0x01, 0x4B,
+0xEB, 0xF6, 0x75, 0xC2, 0xEB, 0xF6, 0x7A, 0xAA,
+0x6D, 0xE4, 0xEB, 0xF6, 0x7A, 0xCA, 0xEB, 0xF6,
+0x95, 0xA2, 0xEB, 0xF6, 0x62, 0xA2, 0x8E, 0xEB,
+0x09, 0x2B, 0x10, 0xF0, 0x24, 0x6C, 0x0B, 0xF7,
+0xC2, 0xA2, 0x74, 0xF0, 0x15, 0x4C, 0x04, 0xD3,
+0x00, 0x6D, 0x09, 0x10, 0x0B, 0xF7, 0xC2, 0xA2,
+0x10, 0xF0, 0x24, 0x6C, 0x00, 0x6A, 0x04, 0xD2,
+0x14, 0xF0, 0x15, 0x4C, 0xA2, 0x67, 0x64, 0x6A,
+0x58, 0xEE, 0x01, 0x6F, 0x12, 0xEE, 0x00, 0x18,
+0x69, 0xE6, 0x1B, 0x10, 0xEB, 0xF6, 0x74, 0xA0,
+0x02, 0x6A, 0x4B, 0xEA, 0x6C, 0xEA, 0xEB, 0xF6,
+0x54, 0xC0, 0x02, 0x6C, 0xEB, 0xF6, 0xB2, 0xA8,
+0x0E, 0x10, 0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1,
+0x08, 0x4A, 0xEB, 0xF6, 0x94, 0xA2, 0x02, 0x6B,
+0x6B, 0xEB, 0xEB, 0xF6, 0xB2, 0xAA, 0x8C, 0xEB,
+0xEB, 0xF6, 0x74, 0xC2, 0x03, 0x6C, 0x00, 0x18,
+0x42, 0xE7, 0x0B, 0x97, 0x0A, 0x91, 0x09, 0x90,
+0x06, 0x63, 0x00, 0xEF, 0xFD, 0x63, 0x05, 0x62,
+0x04, 0xD0, 0x30, 0xF0, 0x20, 0x68, 0xC0, 0xF1,
+0x08, 0x48, 0xEB, 0xF6, 0x74, 0xA0, 0x01, 0x6A,
+0x6C, 0xEA, 0x1F, 0x22, 0x30, 0xF0, 0x20, 0x6B,
+0xCF, 0xF4, 0x00, 0x4B, 0x80, 0xF1, 0x4F, 0xA3,
+0x16, 0x22, 0x00, 0x6A, 0x80, 0xF1, 0x4F, 0xC3,
+0x30, 0xF0, 0x20, 0x6A, 0x2E, 0xF4, 0x48, 0x9A,
+0x80, 0xF2, 0xD4, 0xA3, 0x0C, 0x6C, 0x00, 0x6D,
+0x40, 0xEA, 0x68, 0xF3, 0x79, 0xA0, 0x21, 0x6A,
+0x4B, 0xEA, 0x6C, 0xEA, 0x02, 0x6B, 0x6B, 0xEB,
+0x6C, 0xEA, 0x68, 0xF3, 0x59, 0xC0, 0x00, 0x18,
+0x98, 0xE7, 0x05, 0x97, 0x04, 0x90, 0x03, 0x63,
+0x00, 0xEF, 0x00, 0x65, 0xFB, 0x63, 0x09, 0x62,
+0x08, 0xD1, 0x07, 0xD0, 0x30, 0xF0, 0x20, 0x69,
+0xC0, 0xF1, 0x08, 0x49, 0xEB, 0xF6, 0x54, 0xA1,
+0x01, 0x6C, 0xFF, 0x6B, 0x4C, 0xEC, 0x40, 0xF1,
+0x11, 0x24, 0xEB, 0xF6, 0xA0, 0xA1, 0x03, 0x6E,
+0xAE, 0x34, 0xCC, 0xEC, 0x6C, 0xEC, 0x02, 0x74,
+0x80, 0xF0, 0x03, 0x60, 0x06, 0x67, 0x8E, 0xE8,
+0xE0, 0xF0, 0x0D, 0x20, 0x01, 0x74, 0x25, 0x60,
+0x02, 0x6C, 0x8B, 0xEC, 0x4C, 0xEC, 0x02, 0x6A,
+0xAC, 0xEA, 0x6C, 0xEA, 0xEB, 0xF6, 0x94, 0xC1,
+0x11, 0x22, 0xEB, 0xF6, 0x43, 0xA1, 0x0F, 0x6D,
+0xEB, 0xF6, 0x84, 0xA1, 0x4C, 0xED, 0x52, 0x36,
+0x30, 0xF0, 0x20, 0x6A, 0xAE, 0xF2, 0x54, 0x9A,
+0x6C, 0xED, 0x6C, 0xEE, 0x40, 0xEA, 0x01, 0x72,
+0x01, 0x6C, 0x01, 0x61, 0x00, 0x6C, 0xEB, 0xF6,
+0xB2, 0xA9, 0x00, 0x18, 0x42, 0xE7, 0x30, 0xF0,
 0x20, 0x6A, 0xEE, 0xF4, 0x54, 0x9A, 0x40, 0xEA,
-0x3A, 0x10, 0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1,
-0x08, 0x4A, 0xEB, 0xF6, 0x75, 0xA2, 0x0B, 0xF7,
-0x82, 0xA2, 0x01, 0x4B, 0xEB, 0xF6, 0x75, 0xC2,
-0xEB, 0xF6, 0x7A, 0xAA, 0x6D, 0xE4, 0xEB, 0xF6,
-0x7A, 0xCA, 0xEB, 0xF6, 0x95, 0xA2, 0xEB, 0xF6,
-0x62, 0xA2, 0x8E, 0xEB, 0x09, 0x2B, 0x10, 0xF0,
-0x24, 0x6C, 0x0B, 0xF7, 0xC2, 0xA2, 0x54, 0xF2,
-0x19, 0x4C, 0x04, 0xD3, 0x00, 0x6D, 0x09, 0x10,
-0x0B, 0xF7, 0xC2, 0xA2, 0x10, 0xF0, 0x24, 0x6C,
-0x00, 0x6A, 0x04, 0xD2, 0xF4, 0xF1, 0x19, 0x4C,
-0xA2, 0x67, 0x64, 0x6A, 0x58, 0xEE, 0x01, 0x6F,
-0x12, 0xEE, 0x00, 0x18, 0xE2, 0xE6, 0x1B, 0x10,
-0xEB, 0xF6, 0x74, 0xA0, 0x02, 0x6A, 0x4B, 0xEA,
-0x6C, 0xEA, 0xEB, 0xF6, 0x54, 0xC0, 0x02, 0x6C,
-0xEB, 0xF6, 0xB2, 0xA8, 0x0E, 0x10, 0x30, 0xF0,
+0xD8, 0x10, 0x02, 0x6A, 0xAC, 0xEA, 0x6C, 0xEA,
+0x11, 0x22, 0xEB, 0xF6, 0x43, 0xA1, 0x0F, 0x6D,
+0xEB, 0xF6, 0x84, 0xA1, 0x4C, 0xED, 0x52, 0x36,
+0x30, 0xF0, 0x20, 0x6A, 0xAE, 0xF2, 0x54, 0x9A,
+0x6C, 0xED, 0x6C, 0xEE, 0x40, 0xEA, 0x01, 0x72,
+0xE0, 0xF0, 0x18, 0x61, 0xEB, 0xF6, 0xB2, 0xA9,
+0x00, 0x6C, 0x00, 0x18, 0x42, 0xE7, 0x30, 0xF0,
+0x20, 0x6A, 0xAC, 0xF0, 0x4D, 0xA2, 0x5A, 0x33,
+0x02, 0x73, 0x0D, 0x60, 0x03, 0x73, 0x0F, 0x60,
+0x01, 0x73, 0x05, 0x60, 0x3F, 0x6E, 0x4C, 0xEE,
+0xFF, 0x6A, 0x4C, 0xEE, 0x0E, 0x10, 0x3F, 0x6B,
+0x4C, 0xEB, 0x0A, 0x6E, 0x08, 0x10, 0x3F, 0x6B,
+0x4C, 0xEB, 0x64, 0x6E, 0x04, 0x10, 0x3F, 0x6B,
+0x4C, 0xEB, 0xE0, 0xF3, 0x08, 0x6E, 0xD8, 0xEB,
+0x12, 0xEE, 0x0A, 0x6A, 0x58, 0xEE, 0x30, 0xF0,
 0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A, 0xEB, 0xF6,
-0x94, 0xA2, 0x02, 0x6B, 0x6B, 0xEB, 0xEB, 0xF6,
-0xB2, 0xAA, 0x8C, 0xEB, 0xEB, 0xF6, 0x74, 0xC2,
-0x03, 0x6C, 0x00, 0x18, 0xBB, 0xE7, 0x0B, 0x97,
-0x0A, 0x91, 0x09, 0x90, 0x06, 0x63, 0x00, 0xEF,
-0xFD, 0x63, 0x05, 0x62, 0x04, 0xD0, 0x30, 0xF0,
-0x20, 0x68, 0xC0, 0xF1, 0x08, 0x48, 0xEB, 0xF6,
-0x74, 0xA0, 0x01, 0x6A, 0x6C, 0xEA, 0x1F, 0x22,
-0x30, 0xF0, 0x20, 0x6B, 0xCF, 0xF4, 0x00, 0x4B,
-0x80, 0xF1, 0x4F, 0xA3, 0x16, 0x22, 0x00, 0x6A,
-0x80, 0xF1, 0x4F, 0xC3, 0x30, 0xF0, 0x20, 0x6A,
-0x2E, 0xF4, 0x48, 0x9A, 0x80, 0xF2, 0xD4, 0xA3,
-0x0C, 0x6C, 0x00, 0x6D, 0x40, 0xEA, 0x68, 0xF3,
-0x79, 0xA0, 0x21, 0x6A, 0x4B, 0xEA, 0x6C, 0xEA,
-0x02, 0x6B, 0x6B, 0xEB, 0x6C, 0xEA, 0x68, 0xF3,
-0x59, 0xC0, 0x00, 0x18, 0x11, 0xE8, 0x05, 0x97,
-0x04, 0x90, 0x03, 0x63, 0x00, 0xEF, 0x00, 0x65,
-0xFB, 0x63, 0x09, 0x62, 0x08, 0xD1, 0x07, 0xD0,
-0x30, 0xF0, 0x20, 0x69, 0xC0, 0xF1, 0x08, 0x49,
-0xEB, 0xF6, 0x54, 0xA1, 0x01, 0x6C, 0xFF, 0x6B,
-0x4C, 0xEC, 0x40, 0xF1, 0x11, 0x24, 0xEB, 0xF6,
-0xA0, 0xA1, 0x03, 0x6E, 0xAE, 0x34, 0xCC, 0xEC,
-0x6C, 0xEC, 0x02, 0x74, 0x80, 0xF0, 0x03, 0x60,
-0x06, 0x67, 0x8E, 0xE8, 0xE0, 0xF0, 0x0D, 0x20,
-0x01, 0x74, 0x25, 0x60, 0x02, 0x6C, 0x8B, 0xEC,
-0x4C, 0xEC, 0x02, 0x6A, 0xAC, 0xEA, 0x6C, 0xEA,
-0xEB, 0xF6, 0x94, 0xC1, 0x11, 0x22, 0xEB, 0xF6,
-0x43, 0xA1, 0x0F, 0x6D, 0xEB, 0xF6, 0x84, 0xA1,
-0x4C, 0xED, 0x52, 0x36, 0x30, 0xF0, 0x20, 0x6A,
-0xAE, 0xF2, 0x54, 0x9A, 0x6C, 0xED, 0x6C, 0xEE,
-0x40, 0xEA, 0x01, 0x72, 0x01, 0x6C, 0x01, 0x61,
-0x00, 0x6C, 0xEB, 0xF6, 0xB2, 0xA9, 0x00, 0x18,
-0xBB, 0xE7, 0x30, 0xF0, 0x20, 0x6A, 0xEE, 0xF4,
-0x54, 0x9A, 0x40, 0xEA, 0xD8, 0x10, 0x02, 0x6A,
-0xAC, 0xEA, 0x6C, 0xEA, 0x11, 0x22, 0xEB, 0xF6,
-0x43, 0xA1, 0x0F, 0x6D, 0xEB, 0xF6, 0x84, 0xA1,
-0x4C, 0xED, 0x52, 0x36, 0x30, 0xF0, 0x20, 0x6A,
-0xAE, 0xF2, 0x54, 0x9A, 0x6C, 0xED, 0x6C, 0xEE,
-0x40, 0xEA, 0x01, 0x72, 0xE0, 0xF0, 0x18, 0x61,
-0xEB, 0xF6, 0xB2, 0xA9, 0x00, 0x6C, 0x00, 0x18,
-0xBB, 0xE7, 0x30, 0xF0, 0x20, 0x6A, 0xAC, 0xF0,
-0x4D, 0xA2, 0x5A, 0x33, 0x02, 0x73, 0x0D, 0x60,
-0x03, 0x73, 0x0F, 0x60, 0x01, 0x73, 0x05, 0x60,
-0x3F, 0x6E, 0x4C, 0xEE, 0xFF, 0x6A, 0x4C, 0xEE,
-0x0E, 0x10, 0x3F, 0x6B, 0x4C, 0xEB, 0x0A, 0x6E,
-0x08, 0x10, 0x3F, 0x6B, 0x4C, 0xEB, 0x64, 0x6E,
-0x04, 0x10, 0x3F, 0x6B, 0x4C, 0xEB, 0xE0, 0xF3,
-0x08, 0x6E, 0xD8, 0xEB, 0x12, 0xEE, 0x0A, 0x6A,
-0x58, 0xEE, 0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1,
-0x08, 0x4A, 0xEB, 0xF6, 0x7A, 0xAA, 0x01, 0x6C,
-0x12, 0xEE, 0x7B, 0xE6, 0x30, 0xF0, 0x20, 0x6B,
-0x4F, 0xF6, 0x8F, 0xC3, 0x00, 0x6B, 0xEB, 0xF6,
-0x75, 0xC2, 0x00, 0x6B, 0xEB, 0xF6, 0x7A, 0xCA,
-0xEB, 0xF6, 0x78, 0xCA, 0x10, 0xF0, 0x24, 0x6C,
-0x00, 0x6A, 0x04, 0xD2, 0xA2, 0x67, 0xF4, 0xF1,
-0x19, 0x4C, 0x64, 0x6A, 0x68, 0x10, 0x02, 0x6A,
-0xAC, 0xEA, 0x6C, 0xEA, 0x11, 0x22, 0xEB, 0xF6,
-0x43, 0xA1, 0x0F, 0x6D, 0xEB, 0xF6, 0x84, 0xA1,
-0x4C, 0xED, 0x52, 0x36, 0x30, 0xF0, 0x20, 0x6A,
-0xAE, 0xF2, 0x54, 0x9A, 0x6C, 0xED, 0x6C, 0xEE,
-0x40, 0xEA, 0x01, 0x72, 0xA0, 0xF0, 0x00, 0x61,
-0xEB, 0xF6, 0xB2, 0xA9, 0x00, 0x6C, 0x00, 0x18,
-0xBB, 0xE7, 0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1,
-0x08, 0x4A, 0xEB, 0xF6, 0x87, 0xA2, 0xEB, 0xF6,
-0x76, 0xA2, 0xFF, 0x4C, 0x6E, 0xEC, 0x03, 0x2C,
-0xEB, 0xF6, 0x66, 0xA2, 0x05, 0x10, 0x01, 0x4B,
-0xEB, 0xF6, 0x76, 0xC2, 0xEB, 0xF6, 0x65, 0xA2,
-0x7A, 0x32, 0x02, 0x72, 0x0D, 0x60, 0x03, 0x72,
-0x0F, 0x60, 0x01, 0x72, 0x05, 0x60, 0x3F, 0x6A,
-0x6C, 0xEA, 0xFF, 0x6B, 0x6C, 0xEA, 0x0E, 0x10,
-0x3F, 0x6A, 0x6C, 0xEA, 0x0A, 0x6B, 0x08, 0x10,
-0x3F, 0x6A, 0x6C, 0xEA, 0x64, 0x6B, 0x04, 0x10,
-0x3F, 0x6A, 0x6C, 0xEA, 0xE0, 0xF3, 0x08, 0x6B,
-0x78, 0xEA, 0x12, 0xEA, 0x0A, 0x6B, 0x78, 0xEA,
-0x30, 0xF0, 0x20, 0x6B, 0xCC, 0xF0, 0x62, 0xAB,
-0x01, 0x6C, 0x64, 0x6E, 0x12, 0xEA, 0x6B, 0xE2,
+0x7A, 0xAA, 0x01, 0x6C, 0x12, 0xEE, 0x7B, 0xE6,
 0x30, 0xF0, 0x20, 0x6B, 0x4F, 0xF6, 0x8F, 0xC3,
-0x30, 0xF0, 0x20, 0x6B, 0xC0, 0xF1, 0x08, 0x4B,
-0x00, 0x6C, 0xEB, 0xF6, 0x95, 0xC3, 0x00, 0x6C,
-0xEB, 0xF6, 0x9A, 0xCB, 0xEB, 0xF6, 0x98, 0xCB,
-0x00, 0x6B, 0x10, 0xF0, 0x24, 0x6C, 0x04, 0xD3,
-0xF4, 0xF1, 0x19, 0x4C, 0xA3, 0x67, 0xD8, 0xEA,
-0x01, 0x6F, 0x12, 0xEE, 0x00, 0x18, 0xE2, 0xE6,
-0x12, 0x10, 0xEB, 0xF6, 0xB2, 0xA9, 0x00, 0x6C,
-0x00, 0x18, 0xBB, 0xE7, 0x30, 0xF0, 0x20, 0x6A,
-0x01, 0x6B, 0xEB, 0xF6, 0x15, 0xC1, 0xEB, 0xF6,
-0x1A, 0xC9, 0xEB, 0xF6, 0x18, 0xC9, 0x4F, 0xF6,
-0x6F, 0xC2, 0x00, 0x18, 0x7E, 0xE8, 0x30, 0xF0,
-0x20, 0x69, 0xCF, 0xF4, 0x00, 0x49, 0x80, 0xF2,
-0x94, 0xA1, 0x30, 0xF0, 0x20, 0x68, 0xC0, 0xF1,
-0x08, 0x48, 0x00, 0x18, 0xC9, 0xE9, 0x80, 0xF2,
-0x94, 0xA1, 0x00, 0x18, 0xB8, 0xE9, 0x80, 0xF2,
-0x94, 0xA1, 0x00, 0x18, 0xD0, 0xE9, 0x68, 0xF3,
-0x79, 0xA0, 0x20, 0x6A, 0x08, 0x6C, 0x6D, 0xEA,
-0x68, 0xF3, 0x59, 0xC0, 0x30, 0xF0, 0x20, 0x6A,
-0x2E, 0xF4, 0x48, 0x9A, 0x80, 0xF2, 0xD4, 0xA1,
-0x00, 0x6D, 0x40, 0xEA, 0x89, 0xF0, 0x70, 0xA0,
-0x02, 0x6A, 0x6C, 0xEA, 0x05, 0x22, 0x68, 0xF3,
-0x79, 0xA0, 0x01, 0x6A, 0x6D, 0xEA, 0x05, 0x10,
-0x68, 0xF3, 0x79, 0xA0, 0x02, 0x6A, 0x4B, 0xEA,
-0x6C, 0xEA, 0x68, 0xF3, 0x59, 0xC0, 0x10, 0x10,
-0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A,
-0xEB, 0xF6, 0x94, 0xA2, 0x02, 0x6B, 0x6B, 0xEB,
-0xEB, 0xF6, 0xB2, 0xAA, 0x8C, 0xEB, 0xEB, 0xF6,
-0x74, 0xC2, 0x01, 0x6C, 0x00, 0x18, 0xBB, 0xE7,
-0x09, 0x97, 0x08, 0x91, 0x07, 0x90, 0x05, 0x63,
-0x00, 0xEF, 0x00, 0x65, 0xFB, 0x63, 0x09, 0x62,
-0x08, 0xD1, 0x07, 0xD0, 0xFF, 0x6A, 0x04, 0x67,
-0x25, 0x67, 0x4C, 0xEE, 0x4C, 0xE8, 0x4C, 0xE9,
-0x30, 0xF0, 0x20, 0x6A, 0xEE, 0xF4, 0x4C, 0x9A,
-0x04, 0xD6, 0x90, 0x67, 0xB1, 0x67, 0x40, 0xEA,
-0x90, 0x67, 0x80, 0x18, 0xC3, 0x16, 0x30, 0xF0,
-0x20, 0x6A, 0x4F, 0xF7, 0x7B, 0xA2, 0x00, 0x6A,
-0x09, 0x2B, 0x04, 0x97, 0x30, 0xF0, 0x20, 0x6C,
-0x25, 0xF6, 0x08, 0x4C, 0xB0, 0x67, 0xD1, 0x67,
-0x80, 0x18, 0x4C, 0x16, 0x09, 0x97, 0x08, 0x91,
+0x00, 0x6B, 0xEB, 0xF6, 0x75, 0xC2, 0x00, 0x6B,
+0xEB, 0xF6, 0x7A, 0xCA, 0xEB, 0xF6, 0x78, 0xCA,
+0x10, 0xF0, 0x24, 0x6C, 0x00, 0x6A, 0x04, 0xD2,
+0xA2, 0x67, 0x14, 0xF0, 0x15, 0x4C, 0x64, 0x6A,
+0x68, 0x10, 0x02, 0x6A, 0xAC, 0xEA, 0x6C, 0xEA,
+0x11, 0x22, 0xEB, 0xF6, 0x43, 0xA1, 0x0F, 0x6D,
+0xEB, 0xF6, 0x84, 0xA1, 0x4C, 0xED, 0x52, 0x36,
+0x30, 0xF0, 0x20, 0x6A, 0xAE, 0xF2, 0x54, 0x9A,
+0x6C, 0xED, 0x6C, 0xEE, 0x40, 0xEA, 0x01, 0x72,
+0xA0, 0xF0, 0x00, 0x61, 0xEB, 0xF6, 0xB2, 0xA9,
+0x00, 0x6C, 0x00, 0x18, 0x42, 0xE7, 0x30, 0xF0,
+0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A, 0xEB, 0xF6,
+0x87, 0xA2, 0xEB, 0xF6, 0x76, 0xA2, 0xFF, 0x4C,
+0x6E, 0xEC, 0x03, 0x2C, 0xEB, 0xF6, 0x66, 0xA2,
+0x05, 0x10, 0x01, 0x4B, 0xEB, 0xF6, 0x76, 0xC2,
+0xEB, 0xF6, 0x65, 0xA2, 0x7A, 0x32, 0x02, 0x72,
+0x0D, 0x60, 0x03, 0x72, 0x0F, 0x60, 0x01, 0x72,
+0x05, 0x60, 0x3F, 0x6A, 0x6C, 0xEA, 0xFF, 0x6B,
+0x6C, 0xEA, 0x0E, 0x10, 0x3F, 0x6A, 0x6C, 0xEA,
+0x0A, 0x6B, 0x08, 0x10, 0x3F, 0x6A, 0x6C, 0xEA,
+0x64, 0x6B, 0x04, 0x10, 0x3F, 0x6A, 0x6C, 0xEA,
+0xE0, 0xF3, 0x08, 0x6B, 0x78, 0xEA, 0x12, 0xEA,
+0x0A, 0x6B, 0x78, 0xEA, 0x30, 0xF0, 0x20, 0x6B,
+0xCC, 0xF0, 0x62, 0xAB, 0x01, 0x6C, 0x64, 0x6E,
+0x12, 0xEA, 0x6B, 0xE2, 0x30, 0xF0, 0x20, 0x6B,
+0x4F, 0xF6, 0x8F, 0xC3, 0x30, 0xF0, 0x20, 0x6B,
+0xC0, 0xF1, 0x08, 0x4B, 0x00, 0x6C, 0xEB, 0xF6,
+0x95, 0xC3, 0x00, 0x6C, 0xEB, 0xF6, 0x9A, 0xCB,
+0xEB, 0xF6, 0x98, 0xCB, 0x00, 0x6B, 0x10, 0xF0,
+0x24, 0x6C, 0x04, 0xD3, 0x14, 0xF0, 0x15, 0x4C,
+0xA3, 0x67, 0xD8, 0xEA, 0x01, 0x6F, 0x12, 0xEE,
+0x00, 0x18, 0x69, 0xE6, 0x12, 0x10, 0xEB, 0xF6,
+0xB2, 0xA9, 0x00, 0x6C, 0x00, 0x18, 0x42, 0xE7,
+0x30, 0xF0, 0x20, 0x6A, 0x01, 0x6B, 0xEB, 0xF6,
+0x15, 0xC1, 0xEB, 0xF6, 0x1A, 0xC9, 0xEB, 0xF6,
+0x18, 0xC9, 0x4F, 0xF6, 0x6F, 0xC2, 0x00, 0x18,
+0x05, 0xE8, 0x30, 0xF0, 0x20, 0x69, 0xCF, 0xF4,
+0x00, 0x49, 0x80, 0xF2, 0x94, 0xA1, 0x30, 0xF0,
+0x20, 0x68, 0xC0, 0xF1, 0x08, 0x48, 0x00, 0x18,
+0x50, 0xE9, 0x80, 0xF2, 0x94, 0xA1, 0x00, 0x18,
+0x3F, 0xE9, 0x80, 0xF2, 0x94, 0xA1, 0x00, 0x18,
+0x57, 0xE9, 0x68, 0xF3, 0x79, 0xA0, 0x20, 0x6A,
+0x08, 0x6C, 0x6D, 0xEA, 0x68, 0xF3, 0x59, 0xC0,
+0x30, 0xF0, 0x20, 0x6A, 0x2E, 0xF4, 0x48, 0x9A,
+0x80, 0xF2, 0xD4, 0xA1, 0x00, 0x6D, 0x40, 0xEA,
+0x89, 0xF0, 0x70, 0xA0, 0x02, 0x6A, 0x6C, 0xEA,
+0x05, 0x22, 0x68, 0xF3, 0x79, 0xA0, 0x01, 0x6A,
+0x6D, 0xEA, 0x05, 0x10, 0x68, 0xF3, 0x79, 0xA0,
+0x02, 0x6A, 0x4B, 0xEA, 0x6C, 0xEA, 0x68, 0xF3,
+0x59, 0xC0, 0x10, 0x10, 0x30, 0xF0, 0x20, 0x6A,
+0xC0, 0xF1, 0x08, 0x4A, 0xEB, 0xF6, 0x94, 0xA2,
+0x02, 0x6B, 0x6B, 0xEB, 0xEB, 0xF6, 0xB2, 0xAA,
+0x8C, 0xEB, 0xEB, 0xF6, 0x74, 0xC2, 0x01, 0x6C,
+0x00, 0x18, 0x42, 0xE7, 0x09, 0x97, 0x08, 0x91,
 0x07, 0x90, 0x05, 0x63, 0x00, 0xEF, 0x00, 0x65,
-0xFF, 0x6B, 0x6C, 0xEC, 0x0F, 0x6A, 0x8C, 0xEA,
-0x03, 0x2A, 0x92, 0x32, 0x6C, 0xEA, 0x20, 0xE8,
-0x07, 0x4A, 0x6C, 0xEA, 0x20, 0xE8, 0x00, 0x65,
-0xFD, 0x63, 0x05, 0x62, 0xFF, 0x6A, 0x8C, 0xEA,
-0x08, 0x2A, 0x30, 0xF0, 0x20, 0x6A, 0x4E, 0xF2,
-0x54, 0x9A, 0x01, 0x6C, 0x04, 0xF0, 0x00, 0x6D,
-0x09, 0x10, 0xFF, 0x4A, 0x44, 0x33, 0x30, 0xF0,
-0x20, 0x6A, 0x4E, 0xF2, 0x54, 0x9A, 0x01, 0x6D,
-0x02, 0x6C, 0xA4, 0xEB, 0x40, 0xEA, 0x05, 0x97,
-0x03, 0x63, 0x00, 0xEF, 0xFD, 0x63, 0x05, 0x62,
+0xFB, 0x63, 0x09, 0x62, 0x08, 0xD1, 0x07, 0xD0,
+0xFF, 0x6A, 0x04, 0x67, 0x25, 0x67, 0x4C, 0xEE,
+0x4C, 0xE8, 0x4C, 0xE9, 0x30, 0xF0, 0x20, 0x6A,
+0xEE, 0xF4, 0x4C, 0x9A, 0x04, 0xD6, 0x90, 0x67,
+0xB1, 0x67, 0x40, 0xEA, 0x90, 0x67, 0x80, 0x18,
+0x8F, 0x16, 0x30, 0xF0, 0x20, 0x6A, 0x4F, 0xF7,
+0x7B, 0xA2, 0x00, 0x6A, 0x09, 0x2B, 0x04, 0x97,
+0x30, 0xF0, 0x20, 0x6C, 0x25, 0xF6, 0x08, 0x4C,
+0xB0, 0x67, 0xD1, 0x67, 0x80, 0x18, 0x18, 0x16,
+0x09, 0x97, 0x08, 0x91, 0x07, 0x90, 0x05, 0x63,
+0x00, 0xEF, 0x00, 0x65, 0xFF, 0x6B, 0x6C, 0xEC,
+0x0F, 0x6A, 0x8C, 0xEA, 0x03, 0x2A, 0x92, 0x32,
+0x6C, 0xEA, 0x20, 0xE8, 0x07, 0x4A, 0x6C, 0xEA,
+0x20, 0xE8, 0x00, 0x65, 0xFD, 0x63, 0x05, 0x62,
 0xFF, 0x6A, 0x8C, 0xEA, 0x08, 0x2A, 0x30, 0xF0,
 0x20, 0x6A, 0x4E, 0xF2, 0x54, 0x9A, 0x01, 0x6C,
-0x08, 0xF0, 0x00, 0x6D, 0x09, 0x10, 0x44, 0x32,
-0x6F, 0x42, 0x30, 0xF0, 0x20, 0x6A, 0x4E, 0xF2,
+0x04, 0xF0, 0x00, 0x6D, 0x09, 0x10, 0xFF, 0x4A,
+0x44, 0x33, 0x30, 0xF0, 0x20, 0x6A, 0x4E, 0xF2,
 0x54, 0x9A, 0x01, 0x6D, 0x02, 0x6C, 0xA4, 0xEB,
 0x40, 0xEA, 0x05, 0x97, 0x03, 0x63, 0x00, 0xEF,
 0xFD, 0x63, 0x05, 0x62, 0xFF, 0x6A, 0x8C, 0xEA,
-0x04, 0x2A, 0x01, 0x6C, 0x08, 0xF0, 0x00, 0x6D,
-0x05, 0x10, 0x44, 0x32, 0xFF, 0x4A, 0x01, 0x6D,
-0x02, 0x6C, 0xA4, 0xEA, 0x00, 0x18, 0x2F, 0xE0,
-0x05, 0x97, 0x03, 0x63, 0x00, 0xEF, 0x00, 0x65,
-0xFD, 0x63, 0x05, 0x62, 0xFF, 0x6A, 0x8C, 0xEA,
-0x04, 0x2A, 0x01, 0x6C, 0x04, 0xF0, 0x00, 0x6D,
-0x05, 0x10, 0xFF, 0x4A, 0x44, 0x32, 0x01, 0x6D,
-0x02, 0x6C, 0xA4, 0xEA, 0x00, 0x18, 0x2F, 0xE0,
-0x05, 0x97, 0x03, 0x63, 0x00, 0xEF, 0x00, 0x65,
-0xFD, 0x63, 0x05, 0x62, 0xFF, 0x6D, 0x8C, 0xED,
-0x01, 0x6C, 0x44, 0x67, 0x15, 0x4D, 0x44, 0xED,
-0xA2, 0x67, 0x00, 0x18, 0xAE, 0xDF, 0x05, 0x97,
+0x08, 0x2A, 0x30, 0xF0, 0x20, 0x6A, 0x4E, 0xF2,
+0x54, 0x9A, 0x01, 0x6C, 0x08, 0xF0, 0x00, 0x6D,
+0x09, 0x10, 0x44, 0x32, 0x6F, 0x42, 0x30, 0xF0,
+0x20, 0x6A, 0x4E, 0xF2, 0x54, 0x9A, 0x01, 0x6D,
+0x02, 0x6C, 0xA4, 0xEB, 0x40, 0xEA, 0x05, 0x97,
 0x03, 0x63, 0x00, 0xEF, 0xFD, 0x63, 0x05, 0x62,
-0xFF, 0x6D, 0x8C, 0xED, 0x04, 0x2D, 0x03, 0x6C,
-0x10, 0xF0, 0x00, 0x6D, 0x05, 0x10, 0x1B, 0x4D,
-0x01, 0x6A, 0x44, 0xED, 0x03, 0x6C, 0xA2, 0x67,
-0x00, 0x18, 0xAE, 0xDF, 0x05, 0x97, 0x03, 0x63,
+0xFF, 0x6A, 0x8C, 0xEA, 0x04, 0x2A, 0x01, 0x6C,
+0x08, 0xF0, 0x00, 0x6D, 0x05, 0x10, 0x44, 0x32,
+0xFF, 0x4A, 0x01, 0x6D, 0x02, 0x6C, 0xA4, 0xEA,
+0x00, 0x18, 0xBD, 0xDF, 0x05, 0x97, 0x03, 0x63,
 0x00, 0xEF, 0x00, 0x65, 0xFD, 0x63, 0x05, 0x62,
-0xFF, 0x6A, 0x4C, 0xEC, 0x00, 0x18, 0x5E, 0xE9,
-0x01, 0x6D, 0x02, 0x6C, 0xA4, 0xEA, 0x00, 0x18,
-0xAE, 0xDF, 0x05, 0x97, 0x03, 0x63, 0x00, 0xEF,
+0xFF, 0x6A, 0x8C, 0xEA, 0x04, 0x2A, 0x01, 0x6C,
+0x04, 0xF0, 0x00, 0x6D, 0x05, 0x10, 0xFF, 0x4A,
+0x44, 0x32, 0x01, 0x6D, 0x02, 0x6C, 0xA4, 0xEA,
+0x00, 0x18, 0xBD, 0xDF, 0x05, 0x97, 0x03, 0x63,
+0x00, 0xEF, 0x00, 0x65, 0xFD, 0x63, 0x05, 0x62,
+0xFF, 0x6D, 0x8C, 0xED, 0x01, 0x6C, 0x44, 0x67,
+0x15, 0x4D, 0x44, 0xED, 0xA2, 0x67, 0x00, 0x18,
+0x3C, 0xDF, 0x05, 0x97, 0x03, 0x63, 0x00, 0xEF,
+0xFD, 0x63, 0x05, 0x62, 0xFF, 0x6D, 0x8C, 0xED,
+0x04, 0x2D, 0x03, 0x6C, 0x10, 0xF0, 0x00, 0x6D,
+0x05, 0x10, 0x1B, 0x4D, 0x01, 0x6A, 0x44, 0xED,
+0x03, 0x6C, 0xA2, 0x67, 0x00, 0x18, 0x3C, 0xDF,
+0x05, 0x97, 0x03, 0x63, 0x00, 0xEF, 0x00, 0x65,
 0xFD, 0x63, 0x05, 0x62, 0xFF, 0x6A, 0x4C, 0xEC,
-0x00, 0x18, 0x5E, 0xE9, 0x01, 0x6D, 0x03, 0x6C,
-0xA4, 0xEA, 0x00, 0x18, 0xAE, 0xDF, 0x05, 0x97,
+0x00, 0x18, 0xE5, 0xE8, 0x01, 0x6D, 0x02, 0x6C,
+0xA4, 0xEA, 0x00, 0x18, 0x3C, 0xDF, 0x05, 0x97,
 0x03, 0x63, 0x00, 0xEF, 0xFD, 0x63, 0x05, 0x62,
-0xFF, 0x6D, 0x8C, 0xED, 0x18, 0x4D, 0x01, 0x6A,
-0x44, 0xED, 0x00, 0x6C, 0xA2, 0x67, 0x00, 0x18,
-0xAE, 0xDF, 0x05, 0x97, 0x03, 0x63, 0x00, 0xEF,
+0xFF, 0x6A, 0x4C, 0xEC, 0x00, 0x18, 0xE5, 0xE8,
+0x01, 0x6D, 0x03, 0x6C, 0xA4, 0xEA, 0x00, 0x18,
+0x3C, 0xDF, 0x05, 0x97, 0x03, 0x63, 0x00, 0xEF,
 0xFD, 0x63, 0x05, 0x62, 0xFF, 0x6D, 0x8C, 0xED,
-0x01, 0x6C, 0x44, 0x67, 0x15, 0x4D, 0x44, 0xED,
-0xA2, 0x67, 0x00, 0x18, 0xDF, 0xDF, 0x05, 0x97,
+0x18, 0x4D, 0x01, 0x6A, 0x44, 0xED, 0x00, 0x6C,
+0xA2, 0x67, 0x00, 0x18, 0x3C, 0xDF, 0x05, 0x97,
 0x03, 0x63, 0x00, 0xEF, 0xFD, 0x63, 0x05, 0x62,
-0xFF, 0x6D, 0x8C, 0xED, 0x04, 0x2D, 0x03, 0x6C,
-0x10, 0xF0, 0x00, 0x6D, 0x05, 0x10, 0x1B, 0x4D,
-0x01, 0x6A, 0x44, 0xED, 0x03, 0x6C, 0xA2, 0x67,
-0x00, 0x18, 0xDF, 0xDF, 0x05, 0x97, 0x03, 0x63,
-0x00, 0xEF, 0x00, 0x65, 0xFD, 0x63, 0x05, 0x62,
-0xFF, 0x6A, 0x4C, 0xEC, 0x00, 0x18, 0x5E, 0xE9,
-0x01, 0x6D, 0x02, 0x6C, 0xA4, 0xEA, 0x00, 0x18,
-0xDF, 0xDF, 0x05, 0x97, 0x03, 0x63, 0x00, 0xEF,
+0xFF, 0x6D, 0x8C, 0xED, 0x01, 0x6C, 0x44, 0x67,
+0x15, 0x4D, 0x44, 0xED, 0xA2, 0x67, 0x00, 0x18,
+0x6D, 0xDF, 0x05, 0x97, 0x03, 0x63, 0x00, 0xEF,
+0xFD, 0x63, 0x05, 0x62, 0xFF, 0x6D, 0x8C, 0xED,
+0x04, 0x2D, 0x03, 0x6C, 0x10, 0xF0, 0x00, 0x6D,
+0x05, 0x10, 0x1B, 0x4D, 0x01, 0x6A, 0x44, 0xED,
+0x03, 0x6C, 0xA2, 0x67, 0x00, 0x18, 0x6D, 0xDF,
+0x05, 0x97, 0x03, 0x63, 0x00, 0xEF, 0x00, 0x65,
 0xFD, 0x63, 0x05, 0x62, 0xFF, 0x6A, 0x4C, 0xEC,
-0x00, 0x18, 0x5E, 0xE9, 0x01, 0x6D, 0x03, 0x6C,
-0xA4, 0xEA, 0x00, 0x18, 0xDF, 0xDF, 0x05, 0x97,
-0x03, 0x63, 0x00, 0xEF, 0xDE, 0x63, 0x43, 0x62,
-0x42, 0xD1, 0x41, 0xD0, 0x01, 0x6A, 0x7D, 0x67,
-0x4B, 0xEA, 0x54, 0xC3, 0x0F, 0x6A, 0x56, 0xC3,
-0x10, 0x6A, 0x57, 0xC3, 0x10, 0xF0, 0x24, 0x6A,
-0x97, 0xF0, 0x40, 0x9A, 0xFF, 0x69, 0x8C, 0xE9,
-0x30, 0x31, 0x49, 0xE1, 0x40, 0x9A, 0x30, 0xF0,
-0x20, 0x68, 0x06, 0x04, 0x04, 0xD2, 0x4E, 0xF2,
-0x50, 0x98, 0x04, 0x05, 0x04, 0x6E, 0x40, 0xEA,
-0x10, 0xF0, 0x24, 0x6A, 0x77, 0xF1, 0x58, 0x9A,
-0x07, 0x04, 0x04, 0x05, 0x49, 0xE1, 0x40, 0x9A,
+0x00, 0x18, 0xE5, 0xE8, 0x01, 0x6D, 0x02, 0x6C,
+0xA4, 0xEA, 0x00, 0x18, 0x6D, 0xDF, 0x05, 0x97,
+0x03, 0x63, 0x00, 0xEF, 0xFD, 0x63, 0x05, 0x62,
+0xFF, 0x6A, 0x4C, 0xEC, 0x00, 0x18, 0xE5, 0xE8,
+0x01, 0x6D, 0x03, 0x6C, 0xA4, 0xEA, 0x00, 0x18,
+0x6D, 0xDF, 0x05, 0x97, 0x03, 0x63, 0x00, 0xEF,
+0xDE, 0x63, 0x43, 0x62, 0x42, 0xD1, 0x41, 0xD0,
+0x01, 0x6A, 0x7D, 0x67, 0x4B, 0xEA, 0x54, 0xC3,
+0x0F, 0x6A, 0x56, 0xC3, 0x10, 0x6A, 0x57, 0xC3,
+0x10, 0xF0, 0x24, 0x6A, 0x96, 0xF6, 0x5C, 0x9A,
+0xFF, 0x69, 0x8C, 0xE9, 0x30, 0x31, 0x49, 0xE1,
+0x40, 0x9A, 0x30, 0xF0, 0x20, 0x68, 0x06, 0x04,
+0x04, 0xD2, 0x4E, 0xF2, 0x50, 0x98, 0x04, 0x05,
+0x04, 0x6E, 0x40, 0xEA, 0x10, 0xF0, 0x24, 0x6A,
+0x96, 0xF7, 0x50, 0x9A, 0x07, 0x04, 0x04, 0x05,
+0x49, 0xE1, 0x40, 0x9A, 0x04, 0x6E, 0x04, 0xD2,
+0x4E, 0xF2, 0x50, 0x98, 0x40, 0xEA, 0x10, 0xF0,
+0x24, 0x6A, 0x96, 0xF7, 0x54, 0x9A, 0x08, 0x04,
+0x04, 0x05, 0x49, 0xE1, 0x40, 0x9A, 0x04, 0x6E,
+0x04, 0xD2, 0x4E, 0xF2, 0x50, 0x98, 0x40, 0xEA,
+0x10, 0xF0, 0x24, 0x6A, 0x96, 0xF7, 0x58, 0x9A,
+0x09, 0x04, 0x04, 0x05, 0x45, 0xE1, 0x40, 0x99,
 0x04, 0x6E, 0x04, 0xD2, 0x4E, 0xF2, 0x50, 0x98,
-0x40, 0xEA, 0x10, 0xF0, 0x24, 0x6A, 0x77, 0xF1,
-0x5C, 0x9A, 0x08, 0x04, 0x04, 0x05, 0x49, 0xE1,
-0x40, 0x9A, 0x04, 0x6E, 0x04, 0xD2, 0x4E, 0xF2,
-0x50, 0x98, 0x40, 0xEA, 0x10, 0xF0, 0x24, 0x6A,
-0x97, 0xF1, 0x40, 0x9A, 0x09, 0x04, 0x04, 0x05,
-0x45, 0xE1, 0x40, 0x99, 0x04, 0x6E, 0x04, 0xD2,
-0x4E, 0xF2, 0x50, 0x98, 0x40, 0xEA, 0x30, 0xF0,
-0x20, 0x6A, 0xAE, 0xF2, 0x5C, 0x9A, 0x05, 0x04,
-0x40, 0xEA, 0x43, 0x97, 0x42, 0x91, 0x41, 0x90,
-0x22, 0x63, 0x00, 0xEF, 0xFC, 0x63, 0x07, 0x62,
-0x06, 0xD1, 0x05, 0xD0, 0x10, 0xF0, 0x24, 0x6A,
-0x10, 0xF0, 0x24, 0x6B, 0x97, 0xF1, 0x44, 0x9A,
-0x97, 0xF1, 0x68, 0x9B, 0x00, 0xA2, 0x20, 0xA3,
-0xFF, 0x6A, 0x4C, 0xE8, 0x4C, 0xE9, 0x2A, 0xE8,
-0x43, 0x60, 0x10, 0xF0, 0x24, 0x6A, 0x97, 0xF0,
-0x40, 0x9A, 0x10, 0x33, 0x49, 0xE3, 0x40, 0xA2,
-0xFF, 0x6B, 0x6C, 0xEA, 0x56, 0x32, 0x6C, 0xEA,
-0x07, 0x5A, 0x2C, 0x60, 0x10, 0xF0, 0x24, 0x6B,
-0x48, 0x32, 0x76, 0xF4, 0x00, 0x4B, 0x4D, 0xE3,
-0x40, 0x9B, 0x00, 0xEA, 0x30, 0xF0, 0x20, 0x6A,
-0x4F, 0xF7, 0x5B, 0xA2, 0x1F, 0x2A, 0x30, 0xF0,
-0x20, 0x6A, 0x6E, 0xF2, 0x54, 0x9A, 0x18, 0x10,
-0x30, 0xF0, 0x20, 0x6A, 0x4E, 0xF2, 0x5C, 0x9A,
-0x13, 0x10, 0x30, 0xF0, 0x20, 0x6A, 0x6E, 0xF2,
-0x40, 0x9A, 0x0E, 0x10, 0x30, 0xF0, 0x20, 0x6A,
-0x6E, 0xF2, 0x44, 0x9A, 0x09, 0x10, 0x30, 0xF0,
-0x20, 0x6A, 0x6E, 0xF2, 0x48, 0x9A, 0x04, 0x10,
-0x30, 0xF0, 0x20, 0x6A, 0x6E, 0xF2, 0x4C, 0x9A,
-0x90, 0x67, 0x40, 0xEA, 0x01, 0x48, 0x7F, 0x6A,
-0x4C, 0xE8, 0x0A, 0xE9, 0xC2, 0x61, 0x10, 0xF0,
-0x24, 0x6A, 0x97, 0xF1, 0x44, 0x9A, 0x20, 0xC2,
-0x07, 0x97, 0x06, 0x91, 0x05, 0x90, 0x04, 0x63,
-0x00, 0xEF, 0x00, 0x65, 0xFC, 0x63, 0x07, 0x62,
-0x06, 0xD1, 0x05, 0xD0, 0x10, 0xF0, 0x24, 0x6A,
-0x17, 0xF1, 0x74, 0x9A, 0x02, 0x6C, 0x00, 0xF4,
-0x00, 0x6D, 0x40, 0x9B, 0x30, 0xF0, 0x20, 0x69,
-0x8D, 0xEA, 0x40, 0xDB, 0x10, 0xF0, 0x24, 0x6A,
-0xB6, 0xF6, 0x6C, 0x9A, 0xFF, 0xF7, 0x1F, 0x6C,
-0x40, 0xAB, 0x8C, 0xEA, 0xAD, 0xEA, 0x8C, 0xEA,
-0x40, 0xCB, 0x10, 0xF0, 0x24, 0x6A, 0xB7, 0xF1,
-0x04, 0x9A, 0x10, 0xF0, 0x24, 0x6B, 0xB7, 0xF1,
-0x08, 0x4B, 0x40, 0x98, 0x60, 0x9B, 0x0A, 0x6C,
-0x6C, 0xEA, 0x10, 0xF0, 0x24, 0x6B, 0x36, 0xF5,
-0x74, 0x9B, 0x6D, 0xEA, 0x40, 0xD8, 0xCE, 0xF4,
-0x5C, 0x99, 0x40, 0xEA, 0x40, 0x98, 0xDF, 0xF7,
-0x01, 0x6B, 0x6B, 0xEB, 0x6C, 0xEA, 0x10, 0xF0,
-0x24, 0x6B, 0xB7, 0xF1, 0x6C, 0x9B, 0x0A, 0x6C,
-0x6D, 0xEA, 0x40, 0xD8, 0xCE, 0xF4, 0x5C, 0x99,
-0x40, 0xEA, 0x10, 0xF0, 0x24, 0x6C, 0xB7, 0xF1,
-0x08, 0x4C, 0x40, 0x98, 0x80, 0x9C, 0x8C, 0xEA,
-0x40, 0xD8, 0xCE, 0xF4, 0x5C, 0x99, 0x0A, 0x6C,
-0x40, 0xEA, 0x40, 0x98, 0x1D, 0xF0, 0x01, 0x6B,
-0x6B, 0xEB, 0x6C, 0xEA, 0x10, 0xF0, 0x24, 0x6B,
-0xB7, 0xF1, 0x70, 0x9B, 0x0A, 0x6C, 0x6D, 0xEA,
-0x40, 0xD8, 0xCE, 0xF4, 0x5C, 0x99, 0x40, 0xEA,
-0x07, 0x97, 0x06, 0x91, 0x05, 0x90, 0x04, 0x63,
-0x00, 0xEF, 0x00, 0x65, 0x10, 0xF0, 0x24, 0x6B,
-0xB7, 0xF1, 0xB4, 0x9B, 0xFF, 0x6A, 0x08, 0x6E,
-0x60, 0xA5, 0xCB, 0xEE, 0x4C, 0xEC, 0x4C, 0xEB,
-0xCC, 0xEB, 0x6D, 0xEC, 0x10, 0xF0, 0x24, 0x6B,
-0xB7, 0xF1, 0x78, 0x9B, 0x4C, 0xEC, 0x80, 0xC5,
-0x60, 0xA3, 0x6C, 0xEA, 0x20, 0xE8, 0x00, 0x65,
-0x10, 0xF0, 0x24, 0x6B, 0xB7, 0xF1, 0xD4, 0x9B,
-0xFF, 0x6A, 0x08, 0x6F, 0x60, 0xA6, 0xEB, 0xEF,
-0x4C, 0xEC, 0x4C, 0xEB, 0xEC, 0xEB, 0x6D, 0xEC,
-0x4C, 0xED, 0x4C, 0xEC, 0x10, 0xF0, 0x24, 0x6A,
-0xB7, 0xF1, 0x58, 0x9A, 0x80, 0xC6, 0xA0, 0xC2,
-0x20, 0xE8, 0x00, 0x65, 0xFC, 0x63, 0x07, 0x62,
-0x06, 0xD1, 0x05, 0xD0, 0x10, 0xF0, 0x24, 0x6A,
-0xB7, 0xF1, 0x7C, 0x9A, 0xFF, 0x69, 0x02, 0x6C,
-0x40, 0xA3, 0x01, 0x68, 0x0B, 0xE8, 0x2C, 0xEA,
-0x8D, 0xEA, 0x2C, 0xEA, 0x40, 0xC3, 0x10, 0xF0,
-0x24, 0x6A, 0xB6, 0xF6, 0x4C, 0x9A, 0x01, 0x6B,
-0x6B, 0xEB, 0x60, 0xC2, 0x10, 0xF0, 0x24, 0x6A,
-0xD7, 0xF1, 0x40, 0x9A, 0x09, 0x6B, 0xB0, 0x67,
-0x60, 0xC2, 0x10, 0xF0, 0x24, 0x6A, 0xD7, 0xF1,
-0x44, 0x9A, 0x7A, 0x6B, 0x6B, 0xEB, 0x60, 0xC2,
-0xA1, 0xF0, 0x12, 0x4C, 0x00, 0x18, 0xD5, 0xE3,
-0x30, 0xF0, 0x20, 0x6C, 0xCE, 0xF4, 0x70, 0x9C,
-0x41, 0x6E, 0xCB, 0xEE, 0xB0, 0x67, 0x4C, 0xEE,
-0xA1, 0xF0, 0x14, 0x6C, 0x40, 0xEB, 0x10, 0xF0,
-0x24, 0x6A, 0xD7, 0xF1, 0x68, 0x9A, 0x01, 0x6C,
-0x40, 0xA3, 0x2C, 0xEA, 0x8D, 0xEA, 0x2C, 0xEA,
-0x40, 0xC3, 0x30, 0xF0, 0x20, 0x6A, 0xCE, 0xF4,
-0x5C, 0x9A, 0x01, 0xF3, 0x01, 0x49, 0x40, 0xEA,
-0x30, 0xF0, 0x20, 0x6A, 0x6F, 0xF5, 0xF0, 0xAA,
-0x10, 0xF0, 0x24, 0x6A, 0x96, 0xF5, 0x54, 0x9A,
-0x00, 0x6C, 0xD0, 0x67, 0x4D, 0xEF, 0xA4, 0x67,
-0x00, 0x18, 0x33, 0xE4, 0x91, 0x67, 0xB0, 0x67,
-0x00, 0x18, 0xD5, 0xE3, 0x30, 0xF0, 0x20, 0x6C,
-0xCE, 0xF4, 0x70, 0x9C, 0x03, 0x6E, 0xB0, 0x67,
-0x91, 0x67, 0x4D, 0xEE, 0x40, 0xEB, 0x01, 0x6C,
-0x00, 0x18, 0x20, 0xEB, 0x07, 0x97, 0x06, 0x91,
+0x40, 0xEA, 0x30, 0xF0, 0x20, 0x6A, 0xAE, 0xF2,
+0x5C, 0x9A, 0x05, 0x04, 0x40, 0xEA, 0x43, 0x97,
+0x42, 0x91, 0x41, 0x90, 0x22, 0x63, 0x00, 0xEF,
+0xFC, 0x63, 0x07, 0x62, 0x06, 0xD1, 0x05, 0xD0,
+0x10, 0xF0, 0x24, 0x6A, 0x10, 0xF0, 0x24, 0x6B,
+0x96, 0xF7, 0x5C, 0x9A, 0xB6, 0xF7, 0x60, 0x9B,
+0x00, 0xA2, 0x20, 0xA3, 0xFF, 0x6A, 0x4C, 0xE8,
+0x4C, 0xE9, 0x2A, 0xE8, 0x43, 0x60, 0x10, 0xF0,
+0x24, 0x6A, 0x96, 0xF6, 0x5C, 0x9A, 0x10, 0x33,
+0x49, 0xE3, 0x40, 0xA2, 0xFF, 0x6B, 0x6C, 0xEA,
+0x56, 0x32, 0x6C, 0xEA, 0x07, 0x5A, 0x2C, 0x60,
+0x10, 0xF0, 0x24, 0x6B, 0x48, 0x32, 0x76, 0xF2,
+0x1C, 0x4B, 0x4D, 0xE3, 0x40, 0x9B, 0x00, 0xEA,
+0x30, 0xF0, 0x20, 0x6A, 0x4F, 0xF7, 0x5B, 0xA2,
+0x1F, 0x2A, 0x30, 0xF0, 0x20, 0x6A, 0x6E, 0xF2,
+0x54, 0x9A, 0x18, 0x10, 0x30, 0xF0, 0x20, 0x6A,
+0x4E, 0xF2, 0x5C, 0x9A, 0x13, 0x10, 0x30, 0xF0,
+0x20, 0x6A, 0x6E, 0xF2, 0x40, 0x9A, 0x0E, 0x10,
+0x30, 0xF0, 0x20, 0x6A, 0x6E, 0xF2, 0x44, 0x9A,
+0x09, 0x10, 0x30, 0xF0, 0x20, 0x6A, 0x6E, 0xF2,
+0x48, 0x9A, 0x04, 0x10, 0x30, 0xF0, 0x20, 0x6A,
+0x6E, 0xF2, 0x4C, 0x9A, 0x90, 0x67, 0x40, 0xEA,
+0x01, 0x48, 0x7F, 0x6A, 0x4C, 0xE8, 0x0A, 0xE9,
+0xC2, 0x61, 0x10, 0xF0, 0x24, 0x6A, 0x96, 0xF7,
+0x5C, 0x9A, 0x20, 0xC2, 0x07, 0x97, 0x06, 0x91,
+0x05, 0x90, 0x04, 0x63, 0x00, 0xEF, 0x00, 0x65,
+0xFC, 0x63, 0x07, 0x62, 0x06, 0xD1, 0x05, 0xD0,
+0x10, 0xF0, 0x24, 0x6A, 0x36, 0xF7, 0x6C, 0x9A,
+0x02, 0x6C, 0x00, 0xF4, 0x00, 0x6D, 0x40, 0x9B,
+0x30, 0xF0, 0x20, 0x69, 0x8D, 0xEA, 0x40, 0xDB,
+0x10, 0xF0, 0x24, 0x6A, 0xD6, 0xF4, 0x68, 0x9A,
+0xFF, 0xF7, 0x1F, 0x6C, 0x40, 0xAB, 0x8C, 0xEA,
+0xAD, 0xEA, 0x8C, 0xEA, 0x40, 0xCB, 0x10, 0xF0,
+0x24, 0x6A, 0xB6, 0xF7, 0x1C, 0x9A, 0x10, 0xF0,
+0x24, 0x6B, 0xD6, 0xF7, 0x00, 0x4B, 0x40, 0x98,
+0x60, 0x9B, 0x0A, 0x6C, 0x6C, 0xEA, 0x10, 0xF0,
+0x24, 0x6B, 0x56, 0xF3, 0x70, 0x9B, 0x6D, 0xEA,
+0x40, 0xD8, 0xCE, 0xF4, 0x5C, 0x99, 0x40, 0xEA,
+0x40, 0x98, 0xDF, 0xF7, 0x01, 0x6B, 0x6B, 0xEB,
+0x6C, 0xEA, 0x10, 0xF0, 0x24, 0x6B, 0xD6, 0xF7,
+0x64, 0x9B, 0x0A, 0x6C, 0x6D, 0xEA, 0x40, 0xD8,
+0xCE, 0xF4, 0x5C, 0x99, 0x40, 0xEA, 0x10, 0xF0,
+0x24, 0x6C, 0xD6, 0xF7, 0x00, 0x4C, 0x40, 0x98,
+0x80, 0x9C, 0x8C, 0xEA, 0x40, 0xD8, 0xCE, 0xF4,
+0x5C, 0x99, 0x0A, 0x6C, 0x40, 0xEA, 0x40, 0x98,
+0x1D, 0xF0, 0x01, 0x6B, 0x6B, 0xEB, 0x6C, 0xEA,
+0x10, 0xF0, 0x24, 0x6B, 0xD6, 0xF7, 0x68, 0x9B,
+0x0A, 0x6C, 0x6D, 0xEA, 0x40, 0xD8, 0xCE, 0xF4,
+0x5C, 0x99, 0x40, 0xEA, 0x07, 0x97, 0x06, 0x91,
 0x05, 0x90, 0x04, 0x63, 0x00, 0xEF, 0x00, 0x65,
+0x10, 0xF0, 0x24, 0x6B, 0xD6, 0xF7, 0xAC, 0x9B,
+0xFF, 0x6A, 0x08, 0x6E, 0x60, 0xA5, 0xCB, 0xEE,
+0x4C, 0xEC, 0x4C, 0xEB, 0xCC, 0xEB, 0x6D, 0xEC,
+0x10, 0xF0, 0x24, 0x6B, 0xD6, 0xF7, 0x70, 0x9B,
+0x4C, 0xEC, 0x80, 0xC5, 0x60, 0xA3, 0x6C, 0xEA,
+0x20, 0xE8, 0x00, 0x65, 0x10, 0xF0, 0x24, 0x6B,
+0xD6, 0xF7, 0xCC, 0x9B, 0xFF, 0x6A, 0x08, 0x6F,
+0x60, 0xA6, 0xEB, 0xEF, 0x4C, 0xEC, 0x4C, 0xEB,
+0xEC, 0xEB, 0x6D, 0xEC, 0x4C, 0xED, 0x4C, 0xEC,
+0x10, 0xF0, 0x24, 0x6A, 0xD6, 0xF7, 0x50, 0x9A,
+0x80, 0xC6, 0xA0, 0xC2, 0x20, 0xE8, 0x00, 0x65,
 0xFC, 0x63, 0x07, 0x62, 0x06, 0xD1, 0x05, 0xD0,
-0x00, 0x6C, 0x00, 0x18, 0x20, 0xEB, 0x30, 0xF0,
-0x20, 0x6A, 0xCE, 0xF2, 0x40, 0x9A, 0x01, 0x68,
-0x0B, 0xE8, 0x40, 0xEA, 0x30, 0xF0, 0x20, 0x69,
-0x01, 0xF4, 0x00, 0x6C, 0xB0, 0x67, 0x00, 0x18,
-0xD5, 0xE3, 0xCE, 0xF4, 0x70, 0x99, 0x04, 0x6E,
-0xCB, 0xEE, 0x4C, 0xEE, 0x01, 0xF4, 0x00, 0x6C,
-0xB0, 0x67, 0x40, 0xEB, 0x00, 0x6C, 0xA4, 0x67,
-0xD0, 0x67, 0x00, 0x18, 0x20, 0xE4, 0x00, 0x6C,
-0xE4, 0x67, 0x30, 0xF0, 0x20, 0x6B, 0xA4, 0x67,
-0xD0, 0x67, 0x6F, 0xF5, 0x50, 0xCB, 0x00, 0x18,
-0x33, 0xE4, 0x10, 0xF0, 0x24, 0x6A, 0xD7, 0xF1,
-0x68, 0x9A, 0xFE, 0x6A, 0xB0, 0x67, 0x80, 0xA3,
-0x8C, 0xEA, 0x40, 0xC3, 0xA1, 0xF0, 0x14, 0x6C,
-0x00, 0x18, 0xD5, 0xE3, 0xCE, 0xF4, 0x70, 0x99,
-0x40, 0x6E, 0xA1, 0xF0, 0x14, 0x6C, 0xB0, 0x67,
-0x4D, 0xEE, 0x40, 0xEB, 0x00, 0x18, 0x4B, 0xC6,
-0x01, 0x72, 0x06, 0x61, 0x10, 0xF0, 0x24, 0x6A,
-0xB6, 0xF6, 0x4C, 0x9A, 0x3F, 0x6B, 0x60, 0xC2,
-0x10, 0xF0, 0x24, 0x6A, 0xB7, 0xF1, 0x7C, 0x9A,
-0xFD, 0x6A, 0x80, 0xA3, 0x8C, 0xEA, 0x40, 0xC3,
+0x10, 0xF0, 0x24, 0x6A, 0xD6, 0xF7, 0x74, 0x9A,
+0xFF, 0x69, 0x02, 0x6C, 0x40, 0xA3, 0x01, 0x68,
+0x0B, 0xE8, 0x2C, 0xEA, 0x8D, 0xEA, 0x2C, 0xEA,
+0x40, 0xC3, 0x10, 0xF0, 0x24, 0x6A, 0xD6, 0xF4,
+0x48, 0x9A, 0x01, 0x6B, 0x6B, 0xEB, 0x60, 0xC2,
+0x10, 0xF0, 0x24, 0x6A, 0xD6, 0xF7, 0x58, 0x9A,
+0x09, 0x6B, 0xB0, 0x67, 0x60, 0xC2, 0x10, 0xF0,
+0x24, 0x6A, 0xD6, 0xF7, 0x5C, 0x9A, 0x7A, 0x6B,
+0x6B, 0xEB, 0x60, 0xC2, 0xA1, 0xF0, 0x12, 0x4C,
+0x00, 0x18, 0x5C, 0xE3, 0x30, 0xF0, 0x20, 0x6C,
+0xCE, 0xF4, 0x70, 0x9C, 0x41, 0x6E, 0xCB, 0xEE,
+0xB0, 0x67, 0x4C, 0xEE, 0xA1, 0xF0, 0x14, 0x6C,
+0x40, 0xEB, 0x10, 0xF0, 0x24, 0x6A, 0xF6, 0xF7,
+0x60, 0x9A, 0x01, 0x6C, 0x40, 0xA3, 0x2C, 0xEA,
+0x8D, 0xEA, 0x2C, 0xEA, 0x40, 0xC3, 0x30, 0xF0,
+0x20, 0x6A, 0xCE, 0xF4, 0x5C, 0x9A, 0x01, 0xF3,
+0x01, 0x49, 0x40, 0xEA, 0x30, 0xF0, 0x20, 0x6A,
+0x6F, 0xF5, 0xF0, 0xAA, 0x10, 0xF0, 0x24, 0x6A,
+0xB6, 0xF3, 0x50, 0x9A, 0x00, 0x6C, 0xD0, 0x67,
+0x4D, 0xEF, 0xA4, 0x67, 0x00, 0x18, 0xBA, 0xE3,
+0x91, 0x67, 0xB0, 0x67, 0x00, 0x18, 0x5C, 0xE3,
+0x30, 0xF0, 0x20, 0x6C, 0xCE, 0xF4, 0x70, 0x9C,
+0x03, 0x6E, 0xB0, 0x67, 0x91, 0x67, 0x4D, 0xEE,
+0x40, 0xEB, 0x01, 0x6C, 0x00, 0x18, 0xA7, 0xEA,
 0x07, 0x97, 0x06, 0x91, 0x05, 0x90, 0x04, 0x63,
-0x00, 0xEF, 0x00, 0x65, 0x10, 0xF0, 0x24, 0x6A,
-0xB6, 0xF6, 0x5C, 0x9A, 0x30, 0xF0, 0x20, 0x6B,
-0xC0, 0xF1, 0x08, 0x4B, 0x80, 0xA2, 0xEB, 0xF6,
-0xD4, 0xA3, 0xEB, 0xF6, 0x9C, 0xC3, 0xA0, 0xAA,
-0x01, 0xF0, 0x00, 0x6C, 0xAC, 0xEC, 0x83, 0x35,
-0x03, 0x6C, 0xAE, 0x35, 0x8B, 0xEC, 0xA4, 0x35,
-0xCC, 0xEC, 0xAD, 0xEC, 0xEB, 0xF6, 0x94, 0xC3,
-0x10, 0xF0, 0x24, 0x6C, 0xD7, 0xF1, 0x9C, 0x9C,
-0xA0, 0xAC, 0xEB, 0xF6, 0xBE, 0xCB, 0xA0, 0xAA,
-0xBF, 0xF7, 0x1F, 0x6B, 0xAC, 0xEB, 0x60, 0xCA,
-0xA0, 0xAA, 0x7F, 0xF7, 0x1F, 0x6B, 0xAC, 0xEB,
-0x60, 0xCA, 0xC0, 0xAA, 0xFE, 0xF7, 0x1F, 0x6B,
-0xFF, 0xF7, 0x1F, 0x6D, 0xCC, 0xEB, 0x60, 0xCA,
-0x40, 0xAC, 0xFF, 0x6B, 0x21, 0x4B, 0xAC, 0xEA,
-0x6D, 0xEA, 0xAC, 0xEA, 0x40, 0xCC, 0x20, 0xE8,
-0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A,
-0x10, 0xF0, 0x24, 0x6B, 0xEB, 0xF6, 0x9C, 0xA2,
-0xB6, 0xF6, 0x7C, 0x9B, 0x01, 0x6E, 0x80, 0xC3,
-0x10, 0xF0, 0x24, 0x6C, 0xEB, 0xF6, 0xBE, 0xAA,
-0xD7, 0xF1, 0x9C, 0x9C, 0xA0, 0xCC, 0xEB, 0xF6,
-0x54, 0xA2, 0x80, 0xAB, 0xFF, 0xF7, 0x1F, 0x6D,
-0x46, 0x32, 0xCC, 0xEA, 0xAC, 0xEC, 0x40, 0x32,
-0xFE, 0xF7, 0x1E, 0x4E, 0x4C, 0x32, 0xCC, 0xEC,
-0x8D, 0xEA, 0xAC, 0xEA, 0x40, 0xCB, 0x20, 0xE8,
-0xFD, 0x63, 0x05, 0x62, 0x04, 0xD0, 0x10, 0xF0,
-0x24, 0x6A, 0xF7, 0xF1, 0x40, 0x9A, 0xEF, 0xF7,
-0x1F, 0x68, 0x02, 0x6B, 0x40, 0xAA, 0x4C, 0xE8,
-0x30, 0xF0, 0x20, 0x6A, 0x4F, 0xF6, 0x50, 0xAA,
-0x0E, 0xEA, 0x6C, 0xEA, 0x02, 0x22, 0x00, 0x18,
-0x2D, 0xEA, 0x02, 0x6B, 0x50, 0x67, 0x6C, 0xEA,
-0x08, 0x2A, 0x30, 0xF0, 0x20, 0x6A, 0x4F, 0xF6,
-0x50, 0xAA, 0x6C, 0xEA, 0x02, 0x2A, 0x00, 0x18,
-0x2D, 0xEA, 0x30, 0xF0, 0x20, 0x6A, 0x4F, 0xF6,
-0x50, 0xAA, 0x80, 0x6B, 0x0E, 0xEA, 0x6C, 0xEA,
-0x06, 0x22, 0x0C, 0xEB, 0x04, 0x2B, 0x00, 0x6C,
-0x01, 0x6D, 0x00, 0x18, 0x25, 0xD7, 0x30, 0xF0,
-0x20, 0x6A, 0x4F, 0xF6, 0x10, 0xCA, 0x05, 0x97,
-0x04, 0x90, 0x03, 0x63, 0x00, 0xEF, 0x00, 0x65,
-0xFD, 0x63, 0x05, 0x62, 0x04, 0xD0, 0x01, 0x74,
-0x1C, 0x60, 0x05, 0x24, 0x02, 0x74, 0x0E, 0x60,
-0x03, 0x74, 0x51, 0x60, 0x5B, 0x10, 0x10, 0xF0,
-0x24, 0x6A, 0xF7, 0xF1, 0x6C, 0x9A, 0x10, 0xF0,
-0x24, 0x6C, 0xF7, 0xF1, 0x90, 0x9C, 0x40, 0x9B,
-0x8C, 0xEA, 0x40, 0xDB, 0x10, 0xF0, 0x24, 0x6A,
-0xF7, 0xF1, 0x74, 0x9A, 0x10, 0xF0, 0x24, 0x6C,
-0x36, 0xF7, 0x8C, 0x9C, 0x40, 0x9B, 0x8C, 0xEA,
-0x44, 0x10, 0x10, 0xF0, 0x24, 0x6A, 0xF7, 0xF1,
-0x6C, 0x9A, 0x10, 0xF0, 0x24, 0x6C, 0xF7, 0xF1,
-0x90, 0x9C, 0x40, 0x9B, 0x8C, 0xEA, 0x10, 0xF0,
-0x24, 0x6C, 0xB6, 0xF5, 0x90, 0x9C, 0x8D, 0xEA,
-0x40, 0xDB, 0x30, 0xF0, 0x20, 0x6A, 0x4F, 0xF6,
-0x50, 0xAA, 0x80, 0x6B, 0x6C, 0xEA, 0x1F, 0x22,
-0x30, 0xF0, 0x20, 0x6A, 0x48, 0xF5, 0x40, 0xA2,
-0x05, 0x5A, 0x19, 0x60, 0x01, 0x6C, 0xA4, 0x67,
-0x00, 0x18, 0x25, 0xD7, 0x0A, 0x68, 0x01, 0x6E,
-0x00, 0x6C, 0x01, 0x6D, 0xCB, 0xEE, 0x00, 0x18,
-0x20, 0xE4, 0x04, 0x6B, 0x4C, 0xEB, 0x02, 0x23,
-0x01, 0x68, 0x04, 0x10, 0x01, 0x6C, 0xA4, 0x67,
-0x00, 0x18, 0x25, 0xD7, 0xFF, 0x48, 0xFF, 0x6A,
-0x4C, 0xE8, 0xED, 0x28, 0x04, 0x10, 0x00, 0x6C,
-0x01, 0x6D, 0x00, 0x18, 0x25, 0xD7, 0x10, 0xF0,
-0x24, 0x6A, 0xF7, 0xF1, 0x74, 0x9A, 0x10, 0xF0,
-0x24, 0x6C, 0x36, 0xF7, 0x88, 0x9C, 0x40, 0x9B,
-0x8D, 0xEA, 0x40, 0xDB, 0x05, 0x97, 0x04, 0x90,
-0x03, 0x63, 0x00, 0xEF, 0xFC, 0x63, 0x07, 0x62,
-0x06, 0xD0, 0x10, 0xF0, 0x24, 0x6B, 0xD6, 0xF5,
-0x6C, 0x9B, 0xE9, 0xA4, 0x48, 0xA4, 0xA0, 0xAB,
-0xE0, 0x37, 0x5D, 0xE7, 0xFF, 0xF7, 0x1F, 0x6A,
-0x4C, 0xEF, 0x4C, 0xED, 0x4A, 0xA4, 0xCB, 0xA4,
-0x02, 0x5A, 0x04, 0x61, 0x02, 0x72, 0x0B, 0x6A,
-0x30, 0x61, 0x0C, 0x10, 0x00, 0xF1, 0x01, 0x5F,
-0x2B, 0x60, 0x30, 0xF0, 0x20, 0x6B, 0x30, 0xF0,
-0x20, 0x6A, 0xAB, 0xF6, 0x03, 0x4B, 0x2B, 0xF6,
-0xE1, 0xC2, 0x0B, 0x10, 0x00, 0xF1, 0x01, 0x5F,
-0x1F, 0x60, 0x30, 0xF0, 0x20, 0x6B, 0x30, 0xF0,
-0x20, 0x6A, 0xAB, 0xF7, 0x03, 0x4B, 0x2B, 0xF6,
-0xE2, 0xC2, 0xB5, 0xE6, 0x10, 0xF0, 0x24, 0x6E,
-0x00, 0x6A, 0xF7, 0xF1, 0x18, 0x9E, 0x10, 0xF0,
-0x24, 0x6E, 0x04, 0xD2, 0x05, 0xD2, 0xD6, 0xF5,
-0xD8, 0x9E, 0x30, 0xF0, 0x20, 0x6A, 0xAE, 0xF2,
-0x40, 0x9A, 0xBC, 0x35, 0x00, 0x6C, 0x15, 0xE5,
-0xD9, 0xE3, 0x40, 0xEA, 0x00, 0x6A, 0x01, 0x10,
-0x0A, 0x6A, 0x07, 0x97, 0x06, 0x90, 0x04, 0x63,
 0x00, 0xEF, 0x00, 0x65, 0xFC, 0x63, 0x07, 0x62,
-0xFF, 0x6A, 0x8C, 0xEA, 0x01, 0x2A, 0x01, 0x6A,
-0x30, 0xF0, 0x20, 0x6C, 0xC0, 0xF1, 0x08, 0x4C,
-0xCB, 0xF6, 0xDD, 0xA4, 0x38, 0x26, 0x8D, 0xE2,
-0x4B, 0xF4, 0x78, 0xA3, 0x34, 0x23, 0x10, 0xF0,
-0x24, 0x6B, 0xD6, 0xF5, 0x6C, 0x9B, 0xFF, 0xF7,
-0x1F, 0x6D, 0x01, 0x72, 0x60, 0xAB, 0x6C, 0xED,
-0x03, 0x60, 0x02, 0x72, 0x08, 0x60, 0x27, 0x10,
-0x30, 0xF0, 0x20, 0x6B, 0xAB, 0xF6, 0x03, 0x4B,
-0x4B, 0xF4, 0xF9, 0xA4, 0x06, 0x10, 0x4B, 0xF4,
-0xFA, 0xA4, 0x30, 0xF0, 0x20, 0x6B, 0xAB, 0xF7,
-0x03, 0x4B, 0xE1, 0xF7, 0x1F, 0x6A, 0xAC, 0xEA,
-0x10, 0xF0, 0x24, 0x6D, 0xD6, 0xF5, 0xB8, 0x9D,
-0xD9, 0xE2, 0x00, 0x6A, 0xB5, 0xE3, 0x10, 0xF0,
-0x24, 0x6B, 0x04, 0xD2, 0x05, 0xD2, 0xF7, 0xF1,
-0x78, 0x9B, 0x30, 0xF0, 0x20, 0x6A, 0xAE, 0xF2,
-0x40, 0x9A, 0xDC, 0x36, 0x00, 0x6C, 0x79, 0xE6,
-0x40, 0xEA, 0x01, 0x6A, 0x01, 0x10, 0x00, 0x6A,
-0x07, 0x97, 0x04, 0x63, 0x00, 0xEF, 0x00, 0x65,
-0xFB, 0x63, 0x09, 0x62, 0x08, 0xD1, 0x07, 0xD0,
-0xFF, 0x6A, 0x4C, 0xED, 0x4C, 0xEC, 0x4C, 0xEE,
-0xEC, 0xEA, 0x05, 0x25, 0x01, 0x75, 0x56, 0x61,
-0x08, 0x6B, 0x0C, 0x6D, 0x02, 0x10, 0x0A, 0x6B,
-0x0E, 0x6D, 0x01, 0x74, 0x1D, 0x60, 0x02, 0x74,
-0x2A, 0x60, 0x26, 0x67, 0xE1, 0x45, 0xC4, 0xED,
-0x24, 0xEB, 0x82, 0x67, 0xCD, 0xE9, 0x84, 0xEF,
-0xC1, 0x43, 0x8D, 0xE9, 0x44, 0xEE, 0x4D, 0xE9,
-0x01, 0x6A, 0x02, 0x67, 0x04, 0xEB, 0x62, 0x67,
-0x64, 0xED, 0xA2, 0x67, 0x6D, 0xE8, 0xA4, 0xEF,
-0xAD, 0xE8, 0x44, 0xEE, 0xFF, 0xF7, 0x1F, 0x6C,
-0x4D, 0xE8, 0x8C, 0xE9, 0x8C, 0xE8, 0x1E, 0x10,
-0x01, 0x6B, 0x01, 0x45, 0x22, 0x67, 0x83, 0x67,
-0x24, 0xE8, 0xC4, 0xED, 0x84, 0xE8, 0xCD, 0xE9,
-0xFF, 0xF7, 0x1F, 0x6A, 0x04, 0x67, 0x64, 0xED,
-0x4C, 0xE9, 0x6D, 0xE8, 0x0E, 0x10, 0x01, 0x6C,
-0x01, 0x43, 0x22, 0x67, 0xA4, 0x67, 0x24, 0xE8,
-0xC4, 0xEB, 0xA4, 0xE8, 0xCD, 0xE9, 0xFF, 0xF7,
-0x1F, 0x6A, 0x05, 0x67, 0x84, 0xEB, 0x4C, 0xE9,
-0x8D, 0xE8, 0x4C, 0xE8, 0x30, 0xF0, 0x20, 0x6A,
-0xEE, 0xF3, 0x4C, 0x9A, 0x38, 0x6C, 0x0F, 0xE8,
-0x04, 0xD2, 0x30, 0xF0, 0x20, 0x6A, 0xEE, 0xF3,
-0x40, 0x9A, 0x40, 0xEA, 0x4C, 0xE8, 0x04, 0x92,
-0x2D, 0xE8, 0xFF, 0xF7, 0x1F, 0x6D, 0x38, 0x6C,
-0x0C, 0xED, 0x40, 0xEA, 0x09, 0x97, 0x08, 0x91,
-0x07, 0x90, 0x05, 0x63, 0x00, 0xEF, 0x00, 0x65,
-0x30, 0xF0, 0x20, 0x6B, 0xE8, 0xF2, 0x7C, 0xA3,
-0xFF, 0x6A, 0xAC, 0xEA, 0x01, 0x73, 0x03, 0x61,
-0xAD, 0xF4, 0x00, 0x6B, 0x04, 0x10, 0x03, 0x73,
-0x04, 0x61, 0xA5, 0xF1, 0x00, 0x6B, 0x6B, 0xEB,
-0x02, 0x10, 0x60, 0xF2, 0x00, 0x6B, 0x60, 0xCC,
-0x30, 0xF0, 0x20, 0x6B, 0xE8, 0xF2, 0x7C, 0xA3,
-0x02, 0x73, 0x0A, 0x61, 0x10, 0xF0, 0x24, 0x6B,
-0x37, 0xF2, 0x60, 0x9B, 0x74, 0x6D, 0xA0, 0xC3,
-0xA0, 0xAC, 0x80, 0x6B, 0xAD, 0xEB, 0x60, 0xCC,
-0x09, 0x22, 0x60, 0xAC, 0x00, 0xF2, 0x01, 0x6A,
-0x4B, 0xEA, 0x6C, 0xEA, 0x41, 0x6B, 0x6B, 0xEB,
-0x6C, 0xEA, 0x06, 0x10, 0x60, 0xAC, 0x00, 0xF2,
-0x00, 0x6A, 0x6D, 0xEA, 0x40, 0x6B, 0x6D, 0xEA,
-0x40, 0xCC, 0x20, 0xE8, 0xFF, 0x63, 0x01, 0xD1,
-0x00, 0xD0, 0x30, 0xF0, 0x20, 0x6B, 0xE8, 0xF2,
-0x7C, 0xA3, 0xFF, 0x6A, 0x8C, 0xEA, 0x02, 0x73,
-0x70, 0x61, 0x48, 0x2A, 0x10, 0xF0, 0x24, 0x6A,
-0x37, 0xF2, 0xE4, 0x9A, 0x30, 0xF0, 0x20, 0x6A,
-0xCF, 0xF4, 0x00, 0x4A, 0x60, 0x9F, 0xC0, 0xF0,
-0x64, 0xDA, 0x10, 0xF0, 0x24, 0x6B, 0x37, 0xF2,
-0xC8, 0x9B, 0x60, 0x9E, 0xA0, 0xF0, 0x78, 0xDA,
-0x10, 0xF0, 0x24, 0x6B, 0xF7, 0xF1, 0xAC, 0x9B,
-0x60, 0x9D, 0xA0, 0xF0, 0x7C, 0xDA, 0x10, 0xF0,
-0x24, 0x6B, 0x37, 0xF0, 0x9C, 0x9B, 0x10, 0xF0,
-0x24, 0x6B, 0x57, 0xF0, 0x60, 0x9B, 0x20, 0x9C,
-0xA0, 0xF0, 0x34, 0xDA, 0x00, 0x9B, 0xC0, 0xF0,
-0x00, 0xDA, 0x10, 0xF0, 0x24, 0x6A, 0x37, 0xF2,
-0x4C, 0x9A, 0x2D, 0xEA, 0x18, 0xF0, 0x01, 0x69,
-0x2B, 0xE9, 0x2C, 0xEA, 0x10, 0xF0, 0x24, 0x69,
-0x57, 0xF1, 0x3C, 0x99, 0x0D, 0xE9, 0x02, 0xF0,
-0x01, 0x68, 0x0B, 0xE8, 0x0C, 0xE9, 0x10, 0xF0,
-0x24, 0x68, 0x37, 0xF2, 0x10, 0x98, 0x00, 0xDF,
-0x04, 0x6F, 0xE0, 0xDE, 0x10, 0xF0, 0x24, 0x6E,
-0x37, 0xF2, 0xD4, 0x9E, 0xC0, 0xDD, 0x40, 0xDC,
-0x20, 0xDB, 0x27, 0x10, 0x30, 0xF0, 0x20, 0x6A,
-0xCF, 0xF4, 0x00, 0x4A, 0x10, 0xF0, 0x24, 0x6B,
-0xC0, 0xF0, 0x84, 0x9A, 0x37, 0xF2, 0x64, 0x9B,
-0x80, 0xDB, 0x10, 0xF0, 0x24, 0x6B, 0xA0, 0xF0,
-0x98, 0x9A, 0x37, 0xF2, 0x68, 0x9B, 0x80, 0xDB,
-0x10, 0xF0, 0x24, 0x6B, 0xA0, 0xF0, 0x9C, 0x9A,
-0xF7, 0xF1, 0x6C, 0x9B, 0x80, 0xDB, 0x10, 0xF0,
-0x24, 0x6B, 0xA0, 0xF0, 0x94, 0x9A, 0x37, 0xF0,
-0x7C, 0x9B, 0x80, 0xDB, 0xC0, 0xF0, 0x60, 0x9A,
-0x10, 0xF0, 0x24, 0x6A, 0x57, 0xF0, 0x40, 0x9A,
-0x60, 0xDA, 0x01, 0x91, 0x00, 0x90, 0x01, 0x63,
-0x20, 0xE8, 0x00, 0x65, 0x10, 0xF0, 0x24, 0x6A,
-0x56, 0xF6, 0x64, 0x9A, 0xFF, 0x6C, 0x21, 0x6D,
-0x40, 0xA3, 0x8C, 0xEA, 0xAD, 0xEA, 0x8C, 0xEA,
-0x40, 0xC3, 0x20, 0xE8, 0xFD, 0x63, 0x05, 0x62,
-0x30, 0xF0, 0x20, 0x6A, 0xE8, 0xF2, 0x5C, 0xA2,
-0x01, 0x72, 0x0C, 0x61, 0x01, 0x6C, 0x10, 0x6D,
-0x00, 0x18, 0x73, 0xD5, 0x04, 0x6B, 0x4D, 0xEB,
-0xFF, 0x6E, 0x01, 0x6C, 0x10, 0x6D, 0x6C, 0xEE,
-0x00, 0x18, 0x66, 0xD5, 0x05, 0x97, 0x03, 0x63,
+0x06, 0xD1, 0x05, 0xD0, 0x00, 0x6C, 0x00, 0x18,
+0xA7, 0xEA, 0x30, 0xF0, 0x20, 0x6A, 0xCE, 0xF2,
+0x40, 0x9A, 0x01, 0x68, 0x0B, 0xE8, 0x40, 0xEA,
+0x30, 0xF0, 0x20, 0x69, 0x01, 0xF4, 0x00, 0x6C,
+0xB0, 0x67, 0x00, 0x18, 0x5C, 0xE3, 0xCE, 0xF4,
+0x70, 0x99, 0x04, 0x6E, 0xCB, 0xEE, 0x4C, 0xEE,
+0x01, 0xF4, 0x00, 0x6C, 0xB0, 0x67, 0x40, 0xEB,
+0x00, 0x6C, 0xA4, 0x67, 0xD0, 0x67, 0x00, 0x18,
+0xA7, 0xE3, 0x00, 0x6C, 0xE4, 0x67, 0x30, 0xF0,
+0x20, 0x6B, 0xA4, 0x67, 0xD0, 0x67, 0x6F, 0xF5,
+0x50, 0xCB, 0x00, 0x18, 0xBA, 0xE3, 0x10, 0xF0,
+0x24, 0x6A, 0xF6, 0xF7, 0x60, 0x9A, 0xFE, 0x6A,
+0xB0, 0x67, 0x80, 0xA3, 0x8C, 0xEA, 0x40, 0xC3,
+0xA1, 0xF0, 0x14, 0x6C, 0x00, 0x18, 0x5C, 0xE3,
+0xCE, 0xF4, 0x70, 0x99, 0x40, 0x6E, 0xA1, 0xF0,
+0x14, 0x6C, 0xB0, 0x67, 0x4D, 0xEE, 0x40, 0xEB,
+0x00, 0x18, 0x4B, 0xC6, 0x01, 0x72, 0x06, 0x61,
+0x10, 0xF0, 0x24, 0x6A, 0xD6, 0xF4, 0x48, 0x9A,
+0x3F, 0x6B, 0x60, 0xC2, 0x10, 0xF0, 0x24, 0x6A,
+0xD6, 0xF7, 0x74, 0x9A, 0xFD, 0x6A, 0x80, 0xA3,
+0x8C, 0xEA, 0x40, 0xC3, 0x07, 0x97, 0x06, 0x91,
+0x05, 0x90, 0x04, 0x63, 0x00, 0xEF, 0x00, 0x65,
+0x10, 0xF0, 0x24, 0x6A, 0xD6, 0xF4, 0x58, 0x9A,
+0x30, 0xF0, 0x20, 0x6B, 0xC0, 0xF1, 0x08, 0x4B,
+0x80, 0xA2, 0xEB, 0xF6, 0xD4, 0xA3, 0xEB, 0xF6,
+0x9C, 0xC3, 0xA0, 0xAA, 0x01, 0xF0, 0x00, 0x6C,
+0xAC, 0xEC, 0x83, 0x35, 0x03, 0x6C, 0xAE, 0x35,
+0x8B, 0xEC, 0xA4, 0x35, 0xCC, 0xEC, 0xAD, 0xEC,
+0xEB, 0xF6, 0x94, 0xC3, 0x10, 0xF0, 0x24, 0x6C,
+0xF6, 0xF7, 0x94, 0x9C, 0xA0, 0xAC, 0xEB, 0xF6,
+0xBE, 0xCB, 0xA0, 0xAA, 0xBF, 0xF7, 0x1F, 0x6B,
+0xAC, 0xEB, 0x60, 0xCA, 0xA0, 0xAA, 0x7F, 0xF7,
+0x1F, 0x6B, 0xAC, 0xEB, 0x60, 0xCA, 0xC0, 0xAA,
+0xFE, 0xF7, 0x1F, 0x6B, 0xFF, 0xF7, 0x1F, 0x6D,
+0xCC, 0xEB, 0x60, 0xCA, 0x40, 0xAC, 0xFF, 0x6B,
+0x21, 0x4B, 0xAC, 0xEA, 0x6D, 0xEA, 0xAC, 0xEA,
+0x40, 0xCC, 0x20, 0xE8, 0x30, 0xF0, 0x20, 0x6A,
+0xC0, 0xF1, 0x08, 0x4A, 0x10, 0xF0, 0x24, 0x6B,
+0xEB, 0xF6, 0x9C, 0xA2, 0xD6, 0xF4, 0x78, 0x9B,
+0x01, 0x6E, 0x80, 0xC3, 0x10, 0xF0, 0x24, 0x6C,
+0xEB, 0xF6, 0xBE, 0xAA, 0xF6, 0xF7, 0x94, 0x9C,
+0xA0, 0xCC, 0xEB, 0xF6, 0x54, 0xA2, 0x80, 0xAB,
+0xFF, 0xF7, 0x1F, 0x6D, 0x46, 0x32, 0xCC, 0xEA,
+0xAC, 0xEC, 0x40, 0x32, 0xFE, 0xF7, 0x1E, 0x4E,
+0x4C, 0x32, 0xCC, 0xEC, 0x8D, 0xEA, 0xAC, 0xEA,
+0x40, 0xCB, 0x20, 0xE8, 0xFD, 0x63, 0x05, 0x62,
+0x04, 0xD0, 0x10, 0xF0, 0x24, 0x6A, 0xF6, 0xF7,
+0x58, 0x9A, 0xEF, 0xF7, 0x1F, 0x68, 0x02, 0x6B,
+0x40, 0xAA, 0x4C, 0xE8, 0x30, 0xF0, 0x20, 0x6A,
+0x4F, 0xF6, 0x50, 0xAA, 0x0E, 0xEA, 0x6C, 0xEA,
+0x02, 0x22, 0x00, 0x18, 0xB4, 0xE9, 0x02, 0x6B,
+0x50, 0x67, 0x6C, 0xEA, 0x08, 0x2A, 0x30, 0xF0,
+0x20, 0x6A, 0x4F, 0xF6, 0x50, 0xAA, 0x6C, 0xEA,
+0x02, 0x2A, 0x00, 0x18, 0xB4, 0xE9, 0x30, 0xF0,
+0x20, 0x6A, 0x4F, 0xF6, 0x50, 0xAA, 0x80, 0x6B,
+0x0E, 0xEA, 0x6C, 0xEA, 0x06, 0x22, 0x0C, 0xEB,
+0x04, 0x2B, 0x00, 0x6C, 0x01, 0x6D, 0x00, 0x18,
+0xDB, 0xD6, 0x30, 0xF0, 0x20, 0x6A, 0x4F, 0xF6,
+0x10, 0xCA, 0x05, 0x97, 0x04, 0x90, 0x03, 0x63,
 0x00, 0xEF, 0x00, 0x65, 0xFD, 0x63, 0x05, 0x62,
-0x30, 0xF0, 0x20, 0x6A, 0xE8, 0xF2, 0x5C, 0xA2,
-0x01, 0x72, 0x0A, 0x61, 0x01, 0x6C, 0x10, 0x6D,
-0x00, 0x18, 0x73, 0xD5, 0xFB, 0x6E, 0x01, 0x6C,
-0x10, 0x6D, 0x4C, 0xEE, 0x00, 0x18, 0x66, 0xD5,
+0x04, 0xD0, 0x01, 0x74, 0x1C, 0x60, 0x05, 0x24,
+0x02, 0x74, 0x0E, 0x60, 0x03, 0x74, 0x51, 0x60,
+0x5B, 0x10, 0x10, 0xF0, 0x24, 0x6A, 0x17, 0xF0,
+0x64, 0x9A, 0x10, 0xF0, 0x24, 0x6C, 0x17, 0xF0,
+0x88, 0x9C, 0x40, 0x9B, 0x8C, 0xEA, 0x40, 0xDB,
+0x10, 0xF0, 0x24, 0x6A, 0x17, 0xF0, 0x6C, 0x9A,
+0x10, 0xF0, 0x24, 0x6C, 0x56, 0xF5, 0x88, 0x9C,
+0x40, 0x9B, 0x8C, 0xEA, 0x44, 0x10, 0x10, 0xF0,
+0x24, 0x6A, 0x17, 0xF0, 0x64, 0x9A, 0x10, 0xF0,
+0x24, 0x6C, 0x17, 0xF0, 0x88, 0x9C, 0x40, 0x9B,
+0x8C, 0xEA, 0x10, 0xF0, 0x24, 0x6C, 0xD6, 0xF3,
+0x8C, 0x9C, 0x8D, 0xEA, 0x40, 0xDB, 0x30, 0xF0,
+0x20, 0x6A, 0x4F, 0xF6, 0x50, 0xAA, 0x80, 0x6B,
+0x6C, 0xEA, 0x1F, 0x22, 0x30, 0xF0, 0x20, 0x6A,
+0x48, 0xF5, 0x40, 0xA2, 0x05, 0x5A, 0x19, 0x60,
+0x01, 0x6C, 0xA4, 0x67, 0x00, 0x18, 0xDB, 0xD6,
+0x0A, 0x68, 0x01, 0x6E, 0x00, 0x6C, 0x01, 0x6D,
+0xCB, 0xEE, 0x00, 0x18, 0xA7, 0xE3, 0x04, 0x6B,
+0x4C, 0xEB, 0x02, 0x23, 0x01, 0x68, 0x04, 0x10,
+0x01, 0x6C, 0xA4, 0x67, 0x00, 0x18, 0xDB, 0xD6,
+0xFF, 0x48, 0xFF, 0x6A, 0x4C, 0xE8, 0xED, 0x28,
+0x04, 0x10, 0x00, 0x6C, 0x01, 0x6D, 0x00, 0x18,
+0xDB, 0xD6, 0x10, 0xF0, 0x24, 0x6A, 0x17, 0xF0,
+0x6C, 0x9A, 0x10, 0xF0, 0x24, 0x6C, 0x56, 0xF5,
+0x84, 0x9C, 0x40, 0x9B, 0x8D, 0xEA, 0x40, 0xDB,
+0x05, 0x97, 0x04, 0x90, 0x03, 0x63, 0x00, 0xEF,
+0xFC, 0x63, 0x07, 0x62, 0x06, 0xD0, 0x10, 0xF0,
+0x24, 0x6B, 0xF6, 0xF3, 0x68, 0x9B, 0xE9, 0xA4,
+0x48, 0xA4, 0xA0, 0xAB, 0xE0, 0x37, 0x5D, 0xE7,
+0xFF, 0xF7, 0x1F, 0x6A, 0x4C, 0xEF, 0x4C, 0xED,
+0x4A, 0xA4, 0xCB, 0xA4, 0x02, 0x5A, 0x04, 0x61,
+0x02, 0x72, 0x0B, 0x6A, 0x30, 0x61, 0x0C, 0x10,
+0x00, 0xF1, 0x01, 0x5F, 0x2B, 0x60, 0x30, 0xF0,
+0x20, 0x6B, 0x30, 0xF0, 0x20, 0x6A, 0xAB, 0xF6,
+0x03, 0x4B, 0x2B, 0xF6, 0xE1, 0xC2, 0x0B, 0x10,
+0x00, 0xF1, 0x01, 0x5F, 0x1F, 0x60, 0x30, 0xF0,
+0x20, 0x6B, 0x30, 0xF0, 0x20, 0x6A, 0xAB, 0xF7,
+0x03, 0x4B, 0x2B, 0xF6, 0xE2, 0xC2, 0xB5, 0xE6,
+0x10, 0xF0, 0x24, 0x6E, 0x00, 0x6A, 0x17, 0xF0,
+0x10, 0x9E, 0x10, 0xF0, 0x24, 0x6E, 0x04, 0xD2,
+0x05, 0xD2, 0xF6, 0xF3, 0xD4, 0x9E, 0x30, 0xF0,
+0x20, 0x6A, 0xAE, 0xF2, 0x40, 0x9A, 0xBC, 0x35,
+0x00, 0x6C, 0x15, 0xE5, 0xD9, 0xE3, 0x40, 0xEA,
+0x00, 0x6A, 0x01, 0x10, 0x0A, 0x6A, 0x07, 0x97,
+0x06, 0x90, 0x04, 0x63, 0x00, 0xEF, 0x00, 0x65,
+0xFC, 0x63, 0x07, 0x62, 0xFF, 0x6A, 0x8C, 0xEA,
+0x01, 0x2A, 0x01, 0x6A, 0x30, 0xF0, 0x20, 0x6C,
+0xC0, 0xF1, 0x08, 0x4C, 0xCB, 0xF6, 0xDD, 0xA4,
+0x38, 0x26, 0x8D, 0xE2, 0x4B, 0xF4, 0x78, 0xA3,
+0x34, 0x23, 0x10, 0xF0, 0x24, 0x6B, 0xF6, 0xF3,
+0x68, 0x9B, 0xFF, 0xF7, 0x1F, 0x6D, 0x01, 0x72,
+0x60, 0xAB, 0x6C, 0xED, 0x03, 0x60, 0x02, 0x72,
+0x08, 0x60, 0x27, 0x10, 0x30, 0xF0, 0x20, 0x6B,
+0xAB, 0xF6, 0x03, 0x4B, 0x4B, 0xF4, 0xF9, 0xA4,
+0x06, 0x10, 0x4B, 0xF4, 0xFA, 0xA4, 0x30, 0xF0,
+0x20, 0x6B, 0xAB, 0xF7, 0x03, 0x4B, 0xE1, 0xF7,
+0x1F, 0x6A, 0xAC, 0xEA, 0x10, 0xF0, 0x24, 0x6D,
+0xF6, 0xF3, 0xB4, 0x9D, 0xD9, 0xE2, 0x00, 0x6A,
+0xB5, 0xE3, 0x10, 0xF0, 0x24, 0x6B, 0x04, 0xD2,
+0x05, 0xD2, 0x17, 0xF0, 0x70, 0x9B, 0x30, 0xF0,
+0x20, 0x6A, 0xAE, 0xF2, 0x40, 0x9A, 0xDC, 0x36,
+0x00, 0x6C, 0x79, 0xE6, 0x40, 0xEA, 0x01, 0x6A,
+0x01, 0x10, 0x00, 0x6A, 0x07, 0x97, 0x04, 0x63,
+0x00, 0xEF, 0x00, 0x65, 0xFB, 0x63, 0x09, 0x62,
+0x08, 0xD1, 0x07, 0xD0, 0xFF, 0x6A, 0x4C, 0xED,
+0x4C, 0xEC, 0x4C, 0xEE, 0xEC, 0xEA, 0x05, 0x25,
+0x01, 0x75, 0x56, 0x61, 0x08, 0x6B, 0x0C, 0x6D,
+0x02, 0x10, 0x0A, 0x6B, 0x0E, 0x6D, 0x01, 0x74,
+0x1D, 0x60, 0x02, 0x74, 0x2A, 0x60, 0x26, 0x67,
+0xE1, 0x45, 0xC4, 0xED, 0x24, 0xEB, 0x82, 0x67,
+0xCD, 0xE9, 0x84, 0xEF, 0xC1, 0x43, 0x8D, 0xE9,
+0x44, 0xEE, 0x4D, 0xE9, 0x01, 0x6A, 0x02, 0x67,
+0x04, 0xEB, 0x62, 0x67, 0x64, 0xED, 0xA2, 0x67,
+0x6D, 0xE8, 0xA4, 0xEF, 0xAD, 0xE8, 0x44, 0xEE,
+0xFF, 0xF7, 0x1F, 0x6C, 0x4D, 0xE8, 0x8C, 0xE9,
+0x8C, 0xE8, 0x1E, 0x10, 0x01, 0x6B, 0x01, 0x45,
+0x22, 0x67, 0x83, 0x67, 0x24, 0xE8, 0xC4, 0xED,
+0x84, 0xE8, 0xCD, 0xE9, 0xFF, 0xF7, 0x1F, 0x6A,
+0x04, 0x67, 0x64, 0xED, 0x4C, 0xE9, 0x6D, 0xE8,
+0x0E, 0x10, 0x01, 0x6C, 0x01, 0x43, 0x22, 0x67,
+0xA4, 0x67, 0x24, 0xE8, 0xC4, 0xEB, 0xA4, 0xE8,
+0xCD, 0xE9, 0xFF, 0xF7, 0x1F, 0x6A, 0x05, 0x67,
+0x84, 0xEB, 0x4C, 0xE9, 0x8D, 0xE8, 0x4C, 0xE8,
+0x30, 0xF0, 0x20, 0x6A, 0xEE, 0xF3, 0x4C, 0x9A,
+0x38, 0x6C, 0x0F, 0xE8, 0x04, 0xD2, 0x30, 0xF0,
+0x20, 0x6A, 0xEE, 0xF3, 0x40, 0x9A, 0x40, 0xEA,
+0x4C, 0xE8, 0x04, 0x92, 0x2D, 0xE8, 0xFF, 0xF7,
+0x1F, 0x6D, 0x38, 0x6C, 0x0C, 0xED, 0x40, 0xEA,
+0x09, 0x97, 0x08, 0x91, 0x07, 0x90, 0x05, 0x63,
+0x00, 0xEF, 0x00, 0x65, 0x30, 0xF0, 0x20, 0x6B,
+0xE8, 0xF2, 0x7C, 0xA3, 0xFF, 0x6A, 0xAC, 0xEA,
+0x01, 0x73, 0x03, 0x61, 0xAD, 0xF4, 0x00, 0x6B,
+0x04, 0x10, 0x03, 0x73, 0x04, 0x61, 0xA5, 0xF1,
+0x00, 0x6B, 0x6B, 0xEB, 0x02, 0x10, 0x60, 0xF2,
+0x00, 0x6B, 0x60, 0xCC, 0x30, 0xF0, 0x20, 0x6B,
+0xE8, 0xF2, 0x7C, 0xA3, 0x02, 0x73, 0x0A, 0x61,
+0x10, 0xF0, 0x24, 0x6B, 0x37, 0xF0, 0x78, 0x9B,
+0x74, 0x6D, 0xA0, 0xC3, 0xA0, 0xAC, 0x80, 0x6B,
+0xAD, 0xEB, 0x60, 0xCC, 0x09, 0x22, 0x60, 0xAC,
+0x00, 0xF2, 0x01, 0x6A, 0x4B, 0xEA, 0x6C, 0xEA,
+0x41, 0x6B, 0x6B, 0xEB, 0x6C, 0xEA, 0x06, 0x10,
+0x60, 0xAC, 0x00, 0xF2, 0x00, 0x6A, 0x6D, 0xEA,
+0x40, 0x6B, 0x6D, 0xEA, 0x40, 0xCC, 0x20, 0xE8,
+0xFF, 0x63, 0x01, 0xD1, 0x00, 0xD0, 0x30, 0xF0,
+0x20, 0x6B, 0xE8, 0xF2, 0x7C, 0xA3, 0xFF, 0x6A,
+0x8C, 0xEA, 0x02, 0x73, 0x70, 0x61, 0x48, 0x2A,
+0x10, 0xF0, 0x24, 0x6A, 0x37, 0xF0, 0xFC, 0x9A,
+0x30, 0xF0, 0x20, 0x6A, 0xCF, 0xF4, 0x00, 0x4A,
+0x60, 0x9F, 0xC0, 0xF0, 0x64, 0xDA, 0x10, 0xF0,
+0x24, 0x6B, 0x57, 0xF0, 0xC0, 0x9B, 0x60, 0x9E,
+0xA0, 0xF0, 0x78, 0xDA, 0x10, 0xF0, 0x24, 0x6B,
+0x17, 0xF0, 0xA4, 0x9B, 0x60, 0x9D, 0xA0, 0xF0,
+0x7C, 0xDA, 0x10, 0xF0, 0x24, 0x6B, 0x56, 0xF6,
+0x98, 0x9B, 0x10, 0xF0, 0x24, 0x6B, 0x56, 0xF6,
+0x7C, 0x9B, 0x20, 0x9C, 0xA0, 0xF0, 0x34, 0xDA,
+0x00, 0x9B, 0xC0, 0xF0, 0x00, 0xDA, 0x10, 0xF0,
+0x24, 0x6A, 0x57, 0xF0, 0x44, 0x9A, 0x2D, 0xEA,
+0x18, 0xF0, 0x01, 0x69, 0x2B, 0xE9, 0x2C, 0xEA,
+0x10, 0xF0, 0x24, 0x69, 0x76, 0xF7, 0x34, 0x99,
+0x0D, 0xE9, 0x02, 0xF0, 0x01, 0x68, 0x0B, 0xE8,
+0x0C, 0xE9, 0x10, 0xF0, 0x24, 0x68, 0x57, 0xF0,
+0x08, 0x98, 0x00, 0xDF, 0x04, 0x6F, 0xE0, 0xDE,
+0x10, 0xF0, 0x24, 0x6E, 0x57, 0xF0, 0xCC, 0x9E,
+0xC0, 0xDD, 0x40, 0xDC, 0x20, 0xDB, 0x27, 0x10,
+0x30, 0xF0, 0x20, 0x6A, 0xCF, 0xF4, 0x00, 0x4A,
+0x10, 0xF0, 0x24, 0x6B, 0xC0, 0xF0, 0x84, 0x9A,
+0x37, 0xF0, 0x7C, 0x9B, 0x80, 0xDB, 0x10, 0xF0,
+0x24, 0x6B, 0xA0, 0xF0, 0x98, 0x9A, 0x57, 0xF0,
+0x60, 0x9B, 0x80, 0xDB, 0x10, 0xF0, 0x24, 0x6B,
+0xA0, 0xF0, 0x9C, 0x9A, 0x17, 0xF0, 0x64, 0x9B,
+0x80, 0xDB, 0x10, 0xF0, 0x24, 0x6B, 0xA0, 0xF0,
+0x94, 0x9A, 0x56, 0xF6, 0x78, 0x9B, 0x80, 0xDB,
+0xC0, 0xF0, 0x60, 0x9A, 0x10, 0xF0, 0x24, 0x6A,
+0x56, 0xF6, 0x5C, 0x9A, 0x60, 0xDA, 0x01, 0x91,
+0x00, 0x90, 0x01, 0x63, 0x20, 0xE8, 0x00, 0x65,
+0x10, 0xF0, 0x24, 0x6A, 0x76, 0xF4, 0x60, 0x9A,
+0xFF, 0x6C, 0x21, 0x6D, 0x40, 0xA3, 0x8C, 0xEA,
+0xAD, 0xEA, 0x8C, 0xEA, 0x40, 0xC3, 0x20, 0xE8,
+0xFD, 0x63, 0x05, 0x62, 0x30, 0xF0, 0x20, 0x6A,
+0xE8, 0xF2, 0x5C, 0xA2, 0x01, 0x72, 0x0C, 0x61,
+0x01, 0x6C, 0x10, 0x6D, 0x00, 0x18, 0x29, 0xD5,
+0x04, 0x6B, 0x4D, 0xEB, 0xFF, 0x6E, 0x01, 0x6C,
+0x10, 0x6D, 0x6C, 0xEE, 0x00, 0x18, 0x1C, 0xD5,
 0x05, 0x97, 0x03, 0x63, 0x00, 0xEF, 0x00, 0x65,
-0xFA, 0x63, 0x0B, 0x62, 0x0A, 0xD1, 0x09, 0xD0,
-0xFF, 0xF7, 0x1F, 0x6B, 0xAC, 0xEB, 0x06, 0xD3,
-0x10, 0xF0, 0x24, 0x6B, 0xD6, 0xF5, 0x6C, 0x9B,
-0xFF, 0x6A, 0x8C, 0xEA, 0x80, 0xAB, 0xE1, 0xF7,
-0x1F, 0x6B, 0x00, 0x68, 0x8C, 0xEB, 0x69, 0xE2,
-0x10, 0xF0, 0x24, 0x6B, 0x36, 0xF6, 0x90, 0x9B,
-0x5C, 0x32, 0x91, 0xE2, 0x04, 0xD4, 0x22, 0x10,
-0x04, 0x92, 0x40, 0x9A, 0x05, 0xD2, 0x0D, 0x28,
-0x30, 0xF0, 0x20, 0x69, 0xCE, 0xF4, 0x50, 0x99,
-0x05, 0x96, 0x01, 0x6D, 0x83, 0xF1, 0x18, 0x6C,
-0xAB, 0xED, 0x40, 0xEA, 0xCE, 0xF4, 0x50, 0x99,
-0x04, 0x10, 0x30, 0xF0, 0x20, 0x6A, 0xCE, 0xF4,
-0x50, 0x9A, 0x05, 0x96, 0x01, 0x6D, 0x83, 0xF1,
-0x18, 0x6C, 0xAB, 0xED, 0x40, 0xEA, 0x04, 0x93,
-0x01, 0x48, 0xFF, 0xF7, 0x1F, 0x6A, 0x04, 0x4B,
-0x4C, 0xE8, 0x04, 0xD3, 0x06, 0x92, 0x43, 0xE8,
-0xDB, 0x61, 0x0B, 0x97, 0x0A, 0x91, 0x09, 0x90,
-0x06, 0x63, 0x00, 0xEF, 0xFF, 0x16, 0x03, 0x80,
-0x15, 0x17, 0x03, 0x80, 0x2B, 0x17, 0x03, 0x80,
-0x41, 0x17, 0x03, 0x80, 0x5B, 0x17, 0x03, 0x80,
-0xB3, 0x17, 0x03, 0x80, 0xC9, 0x17, 0x03, 0x80,
-0xE7, 0x17, 0x03, 0x80, 0x19, 0x18, 0x03, 0x80,
-0x43, 0x18, 0x03, 0x80, 0x33, 0x27, 0x03, 0x80,
-0x39, 0x27, 0x03, 0x80, 0x45, 0x27, 0x03, 0x80,
-0x51, 0x27, 0x03, 0x80, 0x5D, 0x27, 0x03, 0x80,
-0xCD, 0x29, 0x03, 0x80, 0xB5, 0x2A, 0x03, 0x80,
-0x2F, 0x2A, 0x03, 0x80, 0xB5, 0x2A, 0x03, 0x80,
-0x75, 0x29, 0x03, 0x80, 0xB5, 0x2A, 0x03, 0x80,
-0xB5, 0x2A, 0x03, 0x80, 0xB5, 0x2A, 0x03, 0x80,
-0x97, 0x2A, 0x03, 0x80, 0xB5, 0x2A, 0x03, 0x80,
-0xB5, 0x2A, 0x03, 0x80, 0xB5, 0x2A, 0x03, 0x80,
-0x0F, 0x29, 0x03, 0x80, 0x8B, 0x2D, 0x03, 0x80,
-0x95, 0x2D, 0x03, 0x80, 0x9F, 0x2D, 0x03, 0x80,
-0xA9, 0x2D, 0x03, 0x80, 0xB3, 0x2D, 0x03, 0x80,
-0x11, 0x2F, 0x03, 0x80, 0x31, 0x2F, 0x03, 0x80,
-0x51, 0x2F, 0x03, 0x80, 0x71, 0x2F, 0x03, 0x80,
-0x91, 0x2F, 0x03, 0x80, 0x3B, 0x31, 0x03, 0x80,
-0x77, 0x31, 0x03, 0x80, 0xBD, 0x31, 0x03, 0x80,
-0xFF, 0x31, 0x03, 0x80, 0x45, 0x32, 0x03, 0x80,
-0xB3, 0x32, 0x03, 0x80, 0xCF, 0x32, 0x03, 0x80,
-0xF1, 0x32, 0x03, 0x80, 0x13, 0x33, 0x03, 0x80,
-0x37, 0x33, 0x03, 0x80, 0xA8, 0x06, 0x10, 0x07,
-0x00, 0x16, 0x04, 0x16, 0x08, 0x16, 0x00, 0x00,
-0x03, 0x36, 0x03, 0x80, 0x5F, 0x36, 0x03, 0x80,
-0xF3, 0x36, 0x03, 0x80, 0x87, 0x37, 0x03, 0x80,
-0x1F, 0x38, 0x03, 0x80, 0xE7, 0x29, 0x10, 0x80,
-0xDB, 0x29, 0x10, 0x80, 0xCF, 0x29, 0x10, 0x80,
-0xC3, 0x29, 0x10, 0x80, 0xB7, 0x29, 0x10, 0x80,
-0x00, 0x04, 0x08, 0x00, 0x08, 0x04, 0x04, 0x00,
-0xA5, 0x53, 0x03, 0x80, 0xAF, 0x53, 0x03, 0x80,
-0xB9, 0x53, 0x03, 0x80, 0xC3, 0x53, 0x03, 0x80,
-0xCD, 0x53, 0x03, 0x80, 0x9D, 0x56, 0x03, 0x80,
-0x97, 0x56, 0x03, 0x80, 0xA3, 0x56, 0x03, 0x80,
-0xA9, 0x56, 0x03, 0x80, 0xAF, 0x56, 0x03, 0x80,
-0xB5, 0x56, 0x03, 0x80, 0x37, 0x57, 0x10, 0x80,
-0x7B, 0x57, 0x10, 0x80, 0x03, 0x58, 0x10, 0x80,
-0x33, 0x57, 0x10, 0x80, 0x65, 0x58, 0x10, 0x80,
-0x95, 0x58, 0x10, 0x80, 0xB9, 0x59, 0x10, 0x80,
-0xD3, 0x59, 0x10, 0x80, 0xE3, 0x59, 0x10, 0x80,
-0xF9, 0x59, 0x10, 0x80, 0x0F, 0x5A, 0x10, 0x80,
-0x0F, 0x5A, 0x10, 0x80, 0x2B, 0x5A, 0x10, 0x80,
-0xA9, 0x0F, 0x03, 0x80, 0xA5, 0x0F, 0x03, 0x80,
-0xA9, 0x0F, 0x03, 0x80, 0xA5, 0x0F, 0x03, 0x80,
-0xC9, 0x0F, 0x03, 0x80, 0xA5, 0x0F, 0x03, 0x80,
-0xC9, 0x0F, 0x03, 0x80, 0xA5, 0x0F, 0x03, 0x80,
-0xE9, 0x0F, 0x03, 0x80, 0xA5, 0x0F, 0x03, 0x80,
-0xE9, 0x0F, 0x03, 0x80, 0xA5, 0x0F, 0x03, 0x80,
-0x09, 0x10, 0x03, 0x80, 0xA5, 0x0F, 0x03, 0x80,
-0x09, 0x10, 0x03, 0x80, 0x3F, 0x6C, 0x03, 0x80,
-0x55, 0x6C, 0x03, 0x80, 0x7F, 0x6C, 0x03, 0x80,
-0x7F, 0x6C, 0x03, 0x80, 0x7F, 0x6C, 0x03, 0x80,
-0x7F, 0x6C, 0x03, 0x80, 0x61, 0x6C, 0x03, 0x80,
-0x6B, 0x6C, 0x03, 0x80, 0x75, 0x6C, 0x03, 0x80,
-0x7F, 0x6C, 0x03, 0x80, 0x47, 0x6C, 0x03, 0x80,
-0x35, 0x6C, 0x03, 0x80, 0x1B, 0x12, 0x03, 0x80,
-0x1F, 0x12, 0x03, 0x80, 0x23, 0x12, 0x03, 0x80,
-0x27, 0x12, 0x03, 0x80, 0x2B, 0x12, 0x03, 0x80,
-0xCD, 0x7E, 0x03, 0x80, 0xEF, 0x7E, 0x03, 0x80,
-0x11, 0x7F, 0x03, 0x80, 0x33, 0x7F, 0x03, 0x80,
-0x57, 0x7F, 0x03, 0x80, 0x91, 0x7F, 0x03, 0x80,
-0xB5, 0x7F, 0x03, 0x80, 0xD9, 0x7F, 0x03, 0x80,
-0xFD, 0x7F, 0x03, 0x80, 0x23, 0x80, 0x03, 0x80,
-0x29, 0x82, 0x03, 0x80, 0x3F, 0x82, 0x03, 0x80,
-0x61, 0x82, 0x03, 0x80, 0x87, 0x82, 0x03, 0x80,
-0xAD, 0x82, 0x03, 0x80, 0x89, 0x86, 0x03, 0x80,
-0x89, 0x86, 0x03, 0x80, 0x89, 0x86, 0x03, 0x80,
-0xA3, 0x86, 0x03, 0x80, 0x89, 0x86, 0x03, 0x80,
-0x89, 0x86, 0x03, 0x80, 0x89, 0x86, 0x03, 0x80,
-0x85, 0x86, 0x03, 0x80, 0x85, 0x86, 0x03, 0x80,
-0x85, 0x86, 0x03, 0x80, 0x85, 0x86, 0x03, 0x80,
-0x85, 0x86, 0x03, 0x80, 0x01, 0x87, 0x03, 0x80,
-0x0B, 0x87, 0x03, 0x80, 0x51, 0x13, 0x03, 0x80,
+0xFD, 0x63, 0x05, 0x62, 0x30, 0xF0, 0x20, 0x6A,
+0xE8, 0xF2, 0x5C, 0xA2, 0x01, 0x72, 0x0A, 0x61,
+0x01, 0x6C, 0x10, 0x6D, 0x00, 0x18, 0x29, 0xD5,
+0xFB, 0x6E, 0x01, 0x6C, 0x10, 0x6D, 0x4C, 0xEE,
+0x00, 0x18, 0x1C, 0xD5, 0x05, 0x97, 0x03, 0x63,
+0x00, 0xEF, 0x00, 0x65, 0xFA, 0x63, 0x0B, 0x62,
+0x0A, 0xD1, 0x09, 0xD0, 0xFF, 0xF7, 0x1F, 0x6B,
+0xAC, 0xEB, 0x06, 0xD3, 0x10, 0xF0, 0x24, 0x6B,
+0xF6, 0xF3, 0x68, 0x9B, 0xFF, 0x6A, 0x8C, 0xEA,
+0x80, 0xAB, 0xE1, 0xF7, 0x1F, 0x6B, 0x00, 0x68,
+0x8C, 0xEB, 0x69, 0xE2, 0x10, 0xF0, 0x24, 0x6B,
+0x56, 0xF4, 0x8C, 0x9B, 0x5C, 0x32, 0x91, 0xE2,
+0x04, 0xD4, 0x22, 0x10, 0x04, 0x92, 0x40, 0x9A,
+0x05, 0xD2, 0x0D, 0x28, 0x30, 0xF0, 0x20, 0x69,
+0xCE, 0xF4, 0x50, 0x99, 0x05, 0x96, 0x01, 0x6D,
+0x83, 0xF1, 0x18, 0x6C, 0xAB, 0xED, 0x40, 0xEA,
+0xCE, 0xF4, 0x50, 0x99, 0x04, 0x10, 0x30, 0xF0,
+0x20, 0x6A, 0xCE, 0xF4, 0x50, 0x9A, 0x05, 0x96,
+0x01, 0x6D, 0x83, 0xF1, 0x18, 0x6C, 0xAB, 0xED,
+0x40, 0xEA, 0x04, 0x93, 0x01, 0x48, 0xFF, 0xF7,
+0x1F, 0x6A, 0x04, 0x4B, 0x4C, 0xE8, 0x04, 0xD3,
+0x06, 0x92, 0x43, 0xE8, 0xDB, 0x61, 0x0B, 0x97,
+0x0A, 0x91, 0x09, 0x90, 0x06, 0x63, 0x00, 0xEF,
+0xFF, 0x16, 0x03, 0x80, 0x15, 0x17, 0x03, 0x80,
+0x2B, 0x17, 0x03, 0x80, 0x41, 0x17, 0x03, 0x80,
+0x5B, 0x17, 0x03, 0x80, 0xB3, 0x17, 0x03, 0x80,
+0xC9, 0x17, 0x03, 0x80, 0xE7, 0x17, 0x03, 0x80,
+0x19, 0x18, 0x03, 0x80, 0x43, 0x18, 0x03, 0x80,
+0xF7, 0x26, 0x03, 0x80, 0xFD, 0x26, 0x03, 0x80,
+0x09, 0x27, 0x03, 0x80, 0x15, 0x27, 0x03, 0x80,
+0x21, 0x27, 0x03, 0x80, 0x91, 0x29, 0x03, 0x80,
+0x79, 0x2A, 0x03, 0x80, 0xF3, 0x29, 0x03, 0x80,
+0x79, 0x2A, 0x03, 0x80, 0x39, 0x29, 0x03, 0x80,
+0x79, 0x2A, 0x03, 0x80, 0x79, 0x2A, 0x03, 0x80,
+0x79, 0x2A, 0x03, 0x80, 0x5B, 0x2A, 0x03, 0x80,
+0x79, 0x2A, 0x03, 0x80, 0x79, 0x2A, 0x03, 0x80,
+0x79, 0x2A, 0x03, 0x80, 0xD3, 0x28, 0x03, 0x80,
+0x4F, 0x2D, 0x03, 0x80, 0x59, 0x2D, 0x03, 0x80,
+0x63, 0x2D, 0x03, 0x80, 0x6D, 0x2D, 0x03, 0x80,
+0x77, 0x2D, 0x03, 0x80, 0xD5, 0x2E, 0x03, 0x80,
+0xF5, 0x2E, 0x03, 0x80, 0x15, 0x2F, 0x03, 0x80,
+0x35, 0x2F, 0x03, 0x80, 0x55, 0x2F, 0x03, 0x80,
+0xFF, 0x30, 0x03, 0x80, 0x3B, 0x31, 0x03, 0x80,
+0x81, 0x31, 0x03, 0x80, 0xC3, 0x31, 0x03, 0x80,
+0x09, 0x32, 0x03, 0x80, 0x77, 0x32, 0x03, 0x80,
+0x93, 0x32, 0x03, 0x80, 0xB5, 0x32, 0x03, 0x80,
+0xD7, 0x32, 0x03, 0x80, 0xFB, 0x32, 0x03, 0x80,
+0xA8, 0x06, 0x10, 0x07, 0x00, 0x16, 0x04, 0x16,
+0x08, 0x16, 0x00, 0x00, 0xC7, 0x35, 0x03, 0x80,
+0x23, 0x36, 0x03, 0x80, 0xB7, 0x36, 0x03, 0x80,
+0x4B, 0x37, 0x03, 0x80, 0xE3, 0x37, 0x03, 0x80,
+0x33, 0x2A, 0x10, 0x80, 0x27, 0x2A, 0x10, 0x80,
+0x1B, 0x2A, 0x10, 0x80, 0x0F, 0x2A, 0x10, 0x80,
+0x03, 0x2A, 0x10, 0x80, 0x00, 0x04, 0x08, 0x00,
+0x08, 0x04, 0x04, 0x00, 0x7D, 0x52, 0x03, 0x80,
+0x87, 0x52, 0x03, 0x80, 0x91, 0x52, 0x03, 0x80,
+0x9B, 0x52, 0x03, 0x80, 0xA5, 0x52, 0x03, 0x80,
+0x75, 0x55, 0x03, 0x80, 0x6F, 0x55, 0x03, 0x80,
+0x7B, 0x55, 0x03, 0x80, 0x81, 0x55, 0x03, 0x80,
+0x87, 0x55, 0x03, 0x80, 0x8D, 0x55, 0x03, 0x80,
+0x67, 0x56, 0x10, 0x80, 0xAB, 0x56, 0x10, 0x80,
+0x33, 0x57, 0x10, 0x80, 0x63, 0x56, 0x10, 0x80,
+0x95, 0x57, 0x10, 0x80, 0xC5, 0x57, 0x10, 0x80,
+0xE9, 0x58, 0x10, 0x80, 0x03, 0x59, 0x10, 0x80,
+0x13, 0x59, 0x10, 0x80, 0x29, 0x59, 0x10, 0x80,
+0x3F, 0x59, 0x10, 0x80, 0x3F, 0x59, 0x10, 0x80,
+0x5B, 0x59, 0x10, 0x80, 0xA9, 0x0F, 0x03, 0x80,
+0xA5, 0x0F, 0x03, 0x80, 0xA9, 0x0F, 0x03, 0x80,
+0xA5, 0x0F, 0x03, 0x80, 0xC9, 0x0F, 0x03, 0x80,
+0xA5, 0x0F, 0x03, 0x80, 0xC9, 0x0F, 0x03, 0x80,
+0xA5, 0x0F, 0x03, 0x80, 0xE9, 0x0F, 0x03, 0x80,
+0xA5, 0x0F, 0x03, 0x80, 0xE9, 0x0F, 0x03, 0x80,
+0xA5, 0x0F, 0x03, 0x80, 0x09, 0x10, 0x03, 0x80,
+0xA5, 0x0F, 0x03, 0x80, 0x09, 0x10, 0x03, 0x80,
+0x77, 0x6A, 0x03, 0x80, 0x8D, 0x6A, 0x03, 0x80,
+0xB7, 0x6A, 0x03, 0x80, 0xB7, 0x6A, 0x03, 0x80,
+0xB7, 0x6A, 0x03, 0x80, 0xB7, 0x6A, 0x03, 0x80,
+0x99, 0x6A, 0x03, 0x80, 0xA3, 0x6A, 0x03, 0x80,
+0xAD, 0x6A, 0x03, 0x80, 0xB7, 0x6A, 0x03, 0x80,
+0x7F, 0x6A, 0x03, 0x80, 0x6D, 0x6A, 0x03, 0x80,
+0x1B, 0x12, 0x03, 0x80, 0x1F, 0x12, 0x03, 0x80,
+0x23, 0x12, 0x03, 0x80, 0x27, 0x12, 0x03, 0x80,
+0x2B, 0x12, 0x03, 0x80, 0x05, 0x7D, 0x03, 0x80,
+0x27, 0x7D, 0x03, 0x80, 0x49, 0x7D, 0x03, 0x80,
+0x6B, 0x7D, 0x03, 0x80, 0x8F, 0x7D, 0x03, 0x80,
+0xC9, 0x7D, 0x03, 0x80, 0xED, 0x7D, 0x03, 0x80,
+0x11, 0x7E, 0x03, 0x80, 0x35, 0x7E, 0x03, 0x80,
+0x5B, 0x7E, 0x03, 0x80, 0x61, 0x80, 0x03, 0x80,
+0x77, 0x80, 0x03, 0x80, 0x99, 0x80, 0x03, 0x80,
+0xBF, 0x80, 0x03, 0x80, 0xE5, 0x80, 0x03, 0x80,
+0xC1, 0x84, 0x03, 0x80, 0xC1, 0x84, 0x03, 0x80,
+0xC1, 0x84, 0x03, 0x80, 0xDB, 0x84, 0x03, 0x80,
+0xC1, 0x84, 0x03, 0x80, 0xC1, 0x84, 0x03, 0x80,
+0xC1, 0x84, 0x03, 0x80, 0xBD, 0x84, 0x03, 0x80,
+0xBD, 0x84, 0x03, 0x80, 0xBD, 0x84, 0x03, 0x80,
+0xBD, 0x84, 0x03, 0x80, 0xBD, 0x84, 0x03, 0x80,
+0x39, 0x85, 0x03, 0x80, 0x43, 0x85, 0x03, 0x80,
 0x51, 0x13, 0x03, 0x80, 0x51, 0x13, 0x03, 0x80,
-0x51, 0x13, 0x03, 0x80, 0x71, 0x13, 0x03, 0x80,
+0x51, 0x13, 0x03, 0x80, 0x51, 0x13, 0x03, 0x80,
+0x71, 0x13, 0x03, 0x80, 0x71, 0x13, 0x03, 0x80,
 0x71, 0x13, 0x03, 0x80, 0x71, 0x13, 0x03, 0x80,
-0x71, 0x13, 0x03, 0x80, 0x91, 0x13, 0x03, 0x80,
 0x91, 0x13, 0x03, 0x80, 0x91, 0x13, 0x03, 0x80,
-0x91, 0x13, 0x03, 0x80, 0xB1, 0x13, 0x03, 0x80,
+0x91, 0x13, 0x03, 0x80, 0x91, 0x13, 0x03, 0x80,
 0xB1, 0x13, 0x03, 0x80, 0xB1, 0x13, 0x03, 0x80,
-0xB1, 0x13, 0x03, 0x80, 0xA7, 0x98, 0x03, 0x80,
-0xB7, 0x98, 0x03, 0x80, 0xC1, 0x98, 0x03, 0x80,
-0xCB, 0x98, 0x03, 0x80, 0xDD, 0x98, 0x03, 0x80,
-0x4D, 0xA8, 0x03, 0x80, 0x7F, 0xA8, 0x03, 0x80,
-0x61, 0xA8, 0x03, 0x80, 0x89, 0xA8, 0x03, 0x80,
-0x6B, 0xA8, 0x03, 0x80, 0x95, 0xA8, 0x03, 0x80,
-0x75, 0xA8, 0x03, 0x80, 0xFC, 0x10, 0x60, 0xB8,
-0xFA, 0xFA, 0xFA, 0xFA, 0x8C, 0x04, 0x64, 0xB8,
-0x90, 0x04, 0x64, 0xB8, 0x94, 0x04, 0x64, 0xB8,
-0x98, 0x04, 0x64, 0xB8, 0x9C, 0x04, 0x64, 0xB8,
-0xA0, 0x04, 0x64, 0xB8, 0x01, 0x06, 0x64, 0xB8,
-0x00, 0x00, 0x68, 0x18, 0x48, 0x00, 0x68, 0x18,
-0x48, 0x04, 0x68, 0x18, 0x00, 0x00, 0x60, 0xB8,
-0x00, 0x00, 0x64, 0xB8, 0x54, 0x05, 0x64, 0xB8,
-0x50, 0x05, 0x64, 0xB8, 0x51, 0x05, 0x64, 0xB8,
-0x78, 0x05, 0x64, 0xB8, 0x79, 0x05, 0x64, 0xB8,
-0x7A, 0x05, 0x64, 0xB8, 0xFF, 0xFF, 0xFF, 0x8F,
-0x60, 0x05, 0x60, 0xB8, 0x60, 0x05, 0x64, 0xB8,
-0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x20,
-0x00, 0x00, 0x00, 0x30, 0x00, 0x00, 0x00, 0x40,
-0xBF, 0x01, 0x64, 0xB8, 0x89, 0x00, 0x60, 0xB8,
-0x8A, 0x00, 0x60, 0xB8, 0x1A, 0x04, 0x64, 0xB8,
-0x1B, 0x04, 0x64, 0xB8, 0x01, 0x00, 0xFF, 0x00,
-0xF0, 0x11, 0x64, 0xB8, 0x58, 0x05, 0x64, 0xB8,
-0x01, 0x00, 0x60, 0xB8, 0x01, 0x00, 0x64, 0xB8,
-0x87, 0x02, 0x64, 0xB8, 0x86, 0x02, 0x64, 0xB8,
-0x1C, 0x04, 0x64, 0xB8, 0xF8, 0x10, 0x60, 0xB8,
-0x00, 0x00, 0x40, 0x00, 0x5B, 0x01, 0x64, 0xB8,
-0x3C, 0x01, 0x64, 0xB8, 0x22, 0x05, 0x64, 0xB8,
-0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x00,
-0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x08, 0x00,
-0x0A, 0x06, 0x64, 0xB8, 0xFE, 0x11, 0x64, 0xB8,
-0xA8, 0x06, 0x64, 0xB8, 0x10, 0x07, 0x64, 0xB8,
-0x00, 0x16, 0x64, 0xB8, 0x04, 0x16, 0x64, 0xB8,
-0x08, 0x16, 0x64, 0xB8, 0xAB, 0x06, 0x64, 0xB8,
-0xAA, 0x06, 0x64, 0xB8, 0x13, 0x07, 0x64, 0xB8,
-0x12, 0x07, 0x64, 0xB8, 0x03, 0x16, 0x64, 0xB8,
-0x02, 0x16, 0x64, 0xB8, 0x07, 0x16, 0x64, 0xB8,
-0x06, 0x16, 0x64, 0xB8, 0x0B, 0x16, 0x64, 0xB8,
-0x0A, 0x16, 0x64, 0xB8, 0xFC, 0x11, 0x64, 0xB8,
-0x57, 0x01, 0x64, 0xB8, 0x00, 0x00, 0x1E, 0x00,
-0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x03, 0x00,
-0x00, 0x00, 0x30, 0x00, 0x00, 0x00, 0x00, 0x03,
-0xB1, 0x05, 0x64, 0xB8, 0x22, 0x00, 0x60, 0xB8,
-0x04, 0x06, 0x64, 0xB8, 0xFF, 0xFF, 0xFF, 0xFE,
-0x00, 0x00, 0x00, 0x01, 0x60, 0x16, 0x64, 0xB8,
-0x09, 0x00, 0x78, 0xB8, 0x31, 0x00, 0x78, 0xB8,
-0x14, 0x00, 0x78, 0xB8, 0x1D, 0x04, 0x64, 0xB8,
-0x7A, 0x04, 0x64, 0xB8, 0x24, 0x04, 0x64, 0xB8,
-0x80, 0x01, 0x64, 0xB8, 0x84, 0x01, 0x64, 0xB8,
-0x00, 0x00, 0x00, 0x80, 0x74, 0x06, 0x64, 0xB8,
-0x00, 0x00, 0x01, 0x80, 0x70, 0x06, 0x64, 0xB8,
-0x72, 0x06, 0x64, 0xB8, 0xC3, 0x01, 0x64, 0xB8,
-0xA9, 0x00, 0x78, 0xB8, 0x61, 0x00, 0x78, 0xB8,
-0x00, 0x00, 0x78, 0xB8, 0x01, 0x00, 0x78, 0xB8,
-0xFF, 0xFF, 0x77, 0xB8, 0xB9, 0x00, 0x78, 0xB8,
-0xC1, 0x01, 0x64, 0xB8, 0xB9, 0x01, 0x64, 0xB8,
-0xC7, 0x01, 0x64, 0xB8, 0x00, 0x00, 0xFF, 0x00,
-0x04, 0x00, 0x78, 0xB8, 0x05, 0x00, 0x78, 0xB8,
-0x46, 0x00, 0x78, 0xB8, 0x50, 0x00, 0x78, 0xB8,
-0x40, 0x00, 0x78, 0xB8, 0x4A, 0x00, 0x78, 0xB8,
-0x30, 0x00, 0x78, 0xB8, 0x34, 0x00, 0x78, 0xB8,
-0x24, 0x01, 0x64, 0xB8, 0xB8, 0x01, 0x64, 0xB8,
-0x28, 0x00, 0x78, 0xB8, 0x90, 0x06, 0x64, 0xB8,
-0x18, 0x06, 0x60, 0xB8, 0x18, 0x06, 0x64, 0xB8,
-0x10, 0x06, 0x60, 0xB8, 0x10, 0x06, 0x64, 0xB8,
-0x08, 0x07, 0x60, 0xB8, 0x08, 0x07, 0x64, 0xB8,
-0x00, 0x07, 0x60, 0xB8, 0x00, 0x07, 0x64, 0xB8,
-0x28, 0x16, 0x60, 0xB8, 0x28, 0x16, 0x64, 0xB8,
-0x20, 0x16, 0x60, 0xB8, 0x20, 0x16, 0x64, 0xB8,
-0x38, 0x16, 0x60, 0xB8, 0x38, 0x16, 0x64, 0xB8,
-0x30, 0x16, 0x60, 0xB8, 0x30, 0x16, 0x64, 0xB8,
-0x48, 0x16, 0x60, 0xB8, 0x48, 0x16, 0x64, 0xB8,
-0x40, 0x16, 0x60, 0xB8, 0x40, 0x16, 0x64, 0xB8,
-0x18, 0x00, 0x78, 0xB8, 0x10, 0x00, 0x78, 0xB8,
-0x08, 0x00, 0x78, 0xB8, 0x0A, 0x00, 0x78, 0xB8,
-0x4D, 0x01, 0x64, 0xB8, 0x00, 0x01, 0x64, 0xB8,
-0x1C, 0x01, 0x64, 0xB8, 0xFF, 0xFF, 0x03, 0x00,
-0x09, 0x06, 0x64, 0xB8, 0x08, 0x06, 0x64, 0xB8,
-0xFF, 0xFF, 0xFF, 0x7F, 0x38, 0x00, 0x78, 0xB8,
-0x7A, 0x00, 0x78, 0xB8, 0x60, 0x00, 0x78, 0xB8,
-0x54, 0x00, 0x78, 0xB8, 0xC0, 0x01, 0x64, 0xB8,
-0x18, 0x11, 0x64, 0xB8, 0x20, 0x00, 0x78, 0xB8,
-0xC4, 0x01, 0x64, 0xB8, 0xA5, 0xA5, 0xA5, 0xA5,
-0x02, 0x00, 0x78, 0xB8, 0x06, 0x00, 0x78, 0xB8,
-0x0C, 0x00, 0x78, 0xB8, 0xC2, 0x01, 0x64, 0xB8,
-0x0D, 0x00, 0x78, 0xB8, 0x0E, 0x00, 0x78, 0xB8,
-0x0F, 0x00, 0x78, 0xB8, 0x88, 0x00, 0x60, 0xB8,
-0x8B, 0x00, 0x60, 0xB8, 0x84, 0x00, 0x60, 0xB8,
-0x00, 0x00, 0x00, 0x02, 0xCB, 0x01, 0x64, 0xB8,
-0x00, 0x00, 0x00, 0x60, 0xE0, 0x00, 0x60, 0xB8,
-0xE1, 0x00, 0x60, 0xB8, 0xE8, 0x12, 0x64, 0xB8,
-0x00, 0x00, 0x00, 0x04, 0xFF, 0xFF, 0xFF, 0xFB,
-0xFF, 0xFF, 0xFF, 0xDF, 0xFF, 0xFF, 0xFF, 0x1F,
-0x04, 0x00, 0x60, 0xB8, 0x04, 0x00, 0x64, 0xB8,
-0x08, 0x00, 0x60, 0xB8, 0x08, 0x00, 0x64, 0xB8,
-0x24, 0x00, 0x60, 0xB8, 0x80, 0x00, 0x60, 0xB8,
-0xFF, 0xFF, 0xFE, 0xFF, 0xFF, 0xFF, 0xFD, 0xFF,
-0xCC, 0x07, 0x64, 0xB8, 0x82, 0x10, 0x60, 0xB8,
-0x42, 0x34, 0x00, 0xB8, 0x00, 0x0C, 0x01, 0x00,
-0x01, 0x00, 0x66, 0xB8, 0xFF, 0xFF, 0x0B, 0xFF,
-0x00, 0x00, 0x70, 0x00, 0xFF, 0xFF, 0x7A, 0xFF,
-0x00, 0x00, 0xD0, 0x00, 0xFF, 0xFF, 0xDA, 0xFF,
-0xFF, 0xFF, 0x0F, 0x00, 0xFF, 0xFF, 0xFF, 0x0F,
-0x00, 0xFF, 0xF9, 0xFF, 0x00, 0x00, 0xFE, 0x1F,
-0x1C, 0x0C, 0xB8, 0x64, 0x67, 0x56, 0x23, 0x01,
-0xFF, 0xFF, 0xF7, 0xFF, 0xFF, 0xFC, 0xFE, 0xFF,
-0x00, 0x01, 0x01, 0x00, 0x00, 0xFC, 0xCF, 0xFF,
-0x00, 0x00, 0x01, 0x10, 0x00, 0xF3, 0x3F, 0xFF,
-0x01, 0x00, 0x02, 0x20, 0x00, 0xCF, 0xFF, 0xFC,
-0x02, 0x00, 0x04, 0x40, 0x00, 0xFC, 0xCE, 0xEF,
-0x40, 0x02, 0x20, 0x00, 0x80, 0x03, 0x30, 0x00,
-0x00, 0x00, 0x80, 0x01, 0xCC, 0x06, 0x64, 0xB8,
-0x96, 0x02, 0x64, 0xB8, 0x00, 0x00, 0x70, 0xB8,
-0x18, 0x00, 0x70, 0xB8, 0x0B, 0x00, 0x70, 0xB8,
-0x02, 0x00, 0x70, 0xB8, 0x94, 0x02, 0x64, 0xB8,
-0x97, 0x02, 0x64, 0xB8, 0x84, 0x02, 0x64, 0xB8,
-0x54, 0x02, 0x64, 0xB8, 0x50, 0x02, 0x64, 0xB8,
-0x4C, 0x02, 0x64, 0xB8, 0x48, 0x02, 0x64, 0xB8,
-0x44, 0x02, 0x64, 0xB8, 0xCC, 0x01, 0x64, 0xB8,
-0xF4, 0x11, 0x64, 0xB8, 0xF5, 0x11, 0x64, 0xB8,
-0xD4, 0x04, 0x60, 0xB8, 0xD4, 0x04, 0x64, 0xB8,
-0x84, 0x04, 0x60, 0xB8, 0x84, 0x04, 0x64, 0xB8,
-0xC8, 0x04, 0x60, 0xB8, 0xC8, 0x04, 0x64, 0xB8,
-0x78, 0x04, 0x60, 0xB8, 0x78, 0x04, 0x64, 0xB8,
-0xCF, 0x01, 0x64, 0xB8, 0x34, 0x01, 0x64, 0xB8,
-0x64, 0x05, 0x64, 0xB8, 0x44, 0x00, 0x60, 0xB8,
-0x60, 0x00, 0x60, 0xB8, 0x1F, 0x00, 0x60, 0xB8,
-0x01, 0xEA, 0xEF, 0xFD, 0x02, 0xEA, 0xEF, 0xFD,
-0xC8, 0x01, 0x64, 0xB8, 0xC9, 0x01, 0x64, 0xB8,
-0xA0, 0x01, 0x64, 0xB8, 0xC6, 0x01, 0x64, 0xB8,
-0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x05,
-0x64, 0x01, 0x64, 0xB8, 0x53, 0x05, 0x64, 0xB8,
-0x77, 0x05, 0x64, 0xB8, 0x68, 0x05, 0x64, 0xB8,
-0x94, 0x01, 0x64, 0xB8, 0x00, 0x00, 0x66, 0xB8,
-0x00, 0x10, 0x66, 0xB8, 0x00, 0x1C, 0x66, 0xB8,
-0x54, 0x00, 0x60, 0xB8, 0x50, 0x00, 0x60, 0xB8,
-0x9A, 0x01, 0x64, 0xB8, 0x99, 0x01, 0x64, 0xB8,
-0x30, 0x01, 0x64, 0xB8, 0x20, 0x01, 0x64, 0xB8,
-0x24, 0x11, 0x64, 0xB8, 0x20, 0x11, 0x64, 0xB8,
-0x2C, 0x11, 0x64, 0xB8, 0x28, 0x11, 0x64, 0xB8,
-0x34, 0x11, 0x64, 0xB8, 0x30, 0x11, 0x64, 0xB8,
-0x38, 0x01, 0x64, 0xB8, 0x3C, 0x11, 0x64, 0xB8,
-0x38, 0x11, 0x64, 0xB8, 0xE4, 0x11, 0x64, 0xB8,
-0xE0, 0x11, 0x64, 0xB8, 0x00, 0x40, 0xE0, 0x03,
-0x01, 0x60, 0x00, 0x03, 0xE0, 0x04, 0x64, 0xB8,
-0xE3, 0x04, 0x64, 0xB8, 0xE0, 0x12, 0x64, 0xB8,
-0x08, 0x02, 0x64, 0xB8, 0xB4, 0x00, 0x60, 0xB8,
+0xB1, 0x13, 0x03, 0x80, 0xB1, 0x13, 0x03, 0x80,
+0xC3, 0x96, 0x03, 0x80, 0xD3, 0x96, 0x03, 0x80,
+0xDD, 0x96, 0x03, 0x80, 0xE7, 0x96, 0x03, 0x80,
+0xF9, 0x96, 0x03, 0x80, 0x69, 0xA6, 0x03, 0x80,
+0x9B, 0xA6, 0x03, 0x80, 0x7D, 0xA6, 0x03, 0x80,
+0xA5, 0xA6, 0x03, 0x80, 0x87, 0xA6, 0x03, 0x80,
+0xB1, 0xA6, 0x03, 0x80, 0x91, 0xA6, 0x03, 0x80,
+0xFC, 0x10, 0x60, 0xB8, 0xFA, 0xFA, 0xFA, 0xFA,
+0x8C, 0x04, 0x64, 0xB8, 0x90, 0x04, 0x64, 0xB8,
+0x94, 0x04, 0x64, 0xB8, 0x98, 0x04, 0x64, 0xB8,
+0x9C, 0x04, 0x64, 0xB8, 0xA0, 0x04, 0x64, 0xB8,
+0x01, 0x06, 0x64, 0xB8, 0x00, 0x00, 0x68, 0x18,
+0x48, 0x00, 0x68, 0x18, 0x48, 0x04, 0x68, 0x18,
+0x00, 0x00, 0x60, 0xB8, 0x00, 0x00, 0x64, 0xB8,
+0x54, 0x05, 0x64, 0xB8, 0x50, 0x05, 0x64, 0xB8,
+0x51, 0x05, 0x64, 0xB8, 0x78, 0x05, 0x64, 0xB8,
+0x79, 0x05, 0x64, 0xB8, 0x7A, 0x05, 0x64, 0xB8,
+0xFF, 0xFF, 0xFF, 0x8F, 0x60, 0x05, 0x60, 0xB8,
+0x60, 0x05, 0x64, 0xB8, 0x00, 0x00, 0x00, 0x10,
+0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x30,
+0x00, 0x00, 0x00, 0x40, 0xBF, 0x01, 0x64, 0xB8,
+0x89, 0x00, 0x60, 0xB8, 0x8A, 0x00, 0x60, 0xB8,
+0x1A, 0x04, 0x64, 0xB8, 0x1B, 0x04, 0x64, 0xB8,
+0x01, 0x00, 0xFF, 0x00, 0xF0, 0x11, 0x64, 0xB8,
+0x58, 0x05, 0x64, 0xB8, 0x01, 0x00, 0x60, 0xB8,
+0x01, 0x00, 0x64, 0xB8, 0x87, 0x02, 0x64, 0xB8,
+0x86, 0x02, 0x64, 0xB8, 0x1C, 0x04, 0x64, 0xB8,
+0xF8, 0x10, 0x60, 0xB8, 0x00, 0x00, 0x40, 0x00,
+0x5B, 0x01, 0x64, 0xB8, 0x3C, 0x01, 0x64, 0xB8,
+0x22, 0x05, 0x64, 0xB8, 0x00, 0x00, 0x01, 0x00,
+0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x04, 0x00,
+0x00, 0x00, 0x08, 0x00, 0x0A, 0x06, 0x64, 0xB8,
+0xFE, 0x11, 0x64, 0xB8, 0xA8, 0x06, 0x64, 0xB8,
+0x10, 0x07, 0x64, 0xB8, 0x00, 0x16, 0x64, 0xB8,
+0x04, 0x16, 0x64, 0xB8, 0x08, 0x16, 0x64, 0xB8,
+0xAB, 0x06, 0x64, 0xB8, 0xAA, 0x06, 0x64, 0xB8,
+0x13, 0x07, 0x64, 0xB8, 0x12, 0x07, 0x64, 0xB8,
+0x03, 0x16, 0x64, 0xB8, 0x02, 0x16, 0x64, 0xB8,
+0x07, 0x16, 0x64, 0xB8, 0x06, 0x16, 0x64, 0xB8,
+0x0B, 0x16, 0x64, 0xB8, 0x0A, 0x16, 0x64, 0xB8,
+0xFC, 0x11, 0x64, 0xB8, 0x57, 0x01, 0x64, 0xB8,
+0x00, 0x00, 0x1E, 0x00, 0x00, 0x00, 0x06, 0x00,
+0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x30, 0x00,
+0x00, 0x00, 0x00, 0x03, 0xB1, 0x05, 0x64, 0xB8,
+0x22, 0x00, 0x60, 0xB8, 0x04, 0x06, 0x64, 0xB8,
+0xFF, 0xFF, 0xFF, 0xFE, 0x00, 0x00, 0x00, 0x01,
+0x60, 0x16, 0x64, 0xB8, 0x09, 0x00, 0x78, 0xB8,
+0x31, 0x00, 0x78, 0xB8, 0x14, 0x00, 0x78, 0xB8,
+0x1D, 0x04, 0x64, 0xB8, 0x7A, 0x04, 0x64, 0xB8,
+0x24, 0x04, 0x64, 0xB8, 0x80, 0x01, 0x64, 0xB8,
+0x84, 0x01, 0x64, 0xB8, 0x00, 0x00, 0x00, 0x80,
+0x74, 0x06, 0x64, 0xB8, 0x00, 0x00, 0x01, 0x80,
+0x70, 0x06, 0x64, 0xB8, 0x72, 0x06, 0x64, 0xB8,
+0xC3, 0x01, 0x64, 0xB8, 0xA9, 0x00, 0x78, 0xB8,
+0x61, 0x00, 0x78, 0xB8, 0x00, 0x00, 0x78, 0xB8,
+0x01, 0x00, 0x78, 0xB8, 0xFF, 0xFF, 0x77, 0xB8,
+0xB9, 0x00, 0x78, 0xB8, 0xC1, 0x01, 0x64, 0xB8,
+0xB9, 0x01, 0x64, 0xB8, 0xC7, 0x01, 0x64, 0xB8,
+0x00, 0x00, 0xFF, 0x00, 0x04, 0x00, 0x78, 0xB8,
+0x05, 0x00, 0x78, 0xB8, 0x46, 0x00, 0x78, 0xB8,
+0x50, 0x00, 0x78, 0xB8, 0x40, 0x00, 0x78, 0xB8,
+0x4A, 0x00, 0x78, 0xB8, 0x30, 0x00, 0x78, 0xB8,
+0x34, 0x00, 0x78, 0xB8, 0x24, 0x01, 0x64, 0xB8,
+0xB8, 0x01, 0x64, 0xB8, 0x28, 0x00, 0x78, 0xB8,
+0x90, 0x06, 0x64, 0xB8, 0x18, 0x06, 0x60, 0xB8,
+0x18, 0x06, 0x64, 0xB8, 0x10, 0x06, 0x60, 0xB8,
+0x10, 0x06, 0x64, 0xB8, 0x08, 0x07, 0x60, 0xB8,
+0x08, 0x07, 0x64, 0xB8, 0x00, 0x07, 0x60, 0xB8,
+0x00, 0x07, 0x64, 0xB8, 0x28, 0x16, 0x60, 0xB8,
+0x28, 0x16, 0x64, 0xB8, 0x20, 0x16, 0x60, 0xB8,
+0x20, 0x16, 0x64, 0xB8, 0x38, 0x16, 0x60, 0xB8,
+0x38, 0x16, 0x64, 0xB8, 0x30, 0x16, 0x60, 0xB8,
+0x30, 0x16, 0x64, 0xB8, 0x48, 0x16, 0x60, 0xB8,
+0x48, 0x16, 0x64, 0xB8, 0x40, 0x16, 0x60, 0xB8,
+0x40, 0x16, 0x64, 0xB8, 0x18, 0x00, 0x78, 0xB8,
+0x10, 0x00, 0x78, 0xB8, 0x08, 0x00, 0x78, 0xB8,
+0x0A, 0x00, 0x78, 0xB8, 0x4D, 0x01, 0x64, 0xB8,
+0x00, 0x01, 0x64, 0xB8, 0x1C, 0x01, 0x64, 0xB8,
+0xFF, 0xFF, 0x03, 0x00, 0x09, 0x06, 0x64, 0xB8,
+0x08, 0x06, 0x64, 0xB8, 0xFF, 0xFF, 0xFF, 0x7F,
+0x38, 0x00, 0x78, 0xB8, 0x7A, 0x00, 0x78, 0xB8,
+0x60, 0x00, 0x78, 0xB8, 0x54, 0x00, 0x78, 0xB8,
+0xC0, 0x01, 0x64, 0xB8, 0x18, 0x11, 0x64, 0xB8,
+0x20, 0x00, 0x78, 0xB8, 0xC4, 0x01, 0x64, 0xB8,
+0xA5, 0xA5, 0xA5, 0xA5, 0x02, 0x00, 0x78, 0xB8,
+0x06, 0x00, 0x78, 0xB8, 0x0C, 0x00, 0x78, 0xB8,
+0xC2, 0x01, 0x64, 0xB8, 0x0D, 0x00, 0x78, 0xB8,
+0x0E, 0x00, 0x78, 0xB8, 0x0F, 0x00, 0x78, 0xB8,
+0x88, 0x00, 0x60, 0xB8, 0x8B, 0x00, 0x60, 0xB8,
+0x84, 0x00, 0x60, 0xB8, 0x00, 0x00, 0x00, 0x02,
+0xCB, 0x01, 0x64, 0xB8, 0x00, 0x00, 0x00, 0x60,
+0xE0, 0x00, 0x60, 0xB8, 0xE1, 0x00, 0x60, 0xB8,
+0xE8, 0x12, 0x64, 0xB8, 0x00, 0x00, 0x00, 0x04,
+0xFF, 0xFF, 0xFF, 0xFB, 0xFF, 0xFF, 0xFF, 0xDF,
+0xFF, 0xFF, 0xFF, 0x1F, 0x04, 0x00, 0x60, 0xB8,
+0x04, 0x00, 0x64, 0xB8, 0x08, 0x00, 0x60, 0xB8,
+0x08, 0x00, 0x64, 0xB8, 0x24, 0x00, 0x60, 0xB8,
+0x80, 0x00, 0x60, 0xB8, 0xFF, 0xFF, 0xFE, 0xFF,
+0xFF, 0xFF, 0xFD, 0xFF, 0xCC, 0x07, 0x64, 0xB8,
+0x82, 0x10, 0x60, 0xB8, 0x42, 0x34, 0x00, 0xB8,
+0x00, 0x0C, 0x01, 0x00, 0x01, 0x00, 0x66, 0xB8,
+0xFF, 0xFF, 0x0B, 0xFF, 0x00, 0x00, 0x70, 0x00,
+0xFF, 0xFF, 0x7A, 0xFF, 0x00, 0x00, 0xD0, 0x00,
+0xFF, 0xFF, 0xDA, 0xFF, 0xFF, 0xFF, 0x0F, 0x00,
+0xFF, 0xFF, 0xFF, 0x0F, 0x00, 0xFF, 0xF9, 0xFF,
+0x00, 0x00, 0xFE, 0x1F, 0x1C, 0x0C, 0xB8, 0x64,
+0x67, 0x56, 0x23, 0x01, 0xFF, 0xFF, 0xF7, 0xFF,
+0xFF, 0xFC, 0xFE, 0xFF, 0x00, 0x01, 0x01, 0x00,
+0x00, 0xFC, 0xCF, 0xFF, 0x00, 0x00, 0x01, 0x10,
+0x00, 0xF3, 0x3F, 0xFF, 0x01, 0x00, 0x02, 0x20,
+0x00, 0xCF, 0xFF, 0xFC, 0x02, 0x00, 0x04, 0x40,
+0x00, 0xFC, 0xCE, 0xEF, 0x40, 0x02, 0x20, 0x00,
+0x80, 0x03, 0x30, 0x00, 0x00, 0x00, 0x80, 0x01,
+0xCC, 0x06, 0x64, 0xB8, 0x96, 0x02, 0x64, 0xB8,
+0x00, 0x00, 0x70, 0xB8, 0x18, 0x00, 0x70, 0xB8,
+0x0B, 0x00, 0x70, 0xB8, 0x02, 0x00, 0x70, 0xB8,
+0x94, 0x02, 0x64, 0xB8, 0x97, 0x02, 0x64, 0xB8,
+0x84, 0x02, 0x64, 0xB8, 0x54, 0x02, 0x64, 0xB8,
+0x50, 0x02, 0x64, 0xB8, 0x4C, 0x02, 0x64, 0xB8,
+0x48, 0x02, 0x64, 0xB8, 0x44, 0x02, 0x64, 0xB8,
+0xCC, 0x01, 0x64, 0xB8, 0xF4, 0x11, 0x64, 0xB8,
+0xF5, 0x11, 0x64, 0xB8, 0xD4, 0x04, 0x60, 0xB8,
+0xD4, 0x04, 0x64, 0xB8, 0x84, 0x04, 0x60, 0xB8,
+0x84, 0x04, 0x64, 0xB8, 0xC8, 0x04, 0x60, 0xB8,
+0xC8, 0x04, 0x64, 0xB8, 0x78, 0x04, 0x60, 0xB8,
+0x78, 0x04, 0x64, 0xB8, 0xCF, 0x01, 0x64, 0xB8,
+0x34, 0x01, 0x64, 0xB8, 0x64, 0x05, 0x64, 0xB8,
+0x44, 0x00, 0x60, 0xB8, 0x60, 0x00, 0x60, 0xB8,
+0x1F, 0x00, 0x60, 0xB8, 0x01, 0xEA, 0xEF, 0xFD,
+0x02, 0xEA, 0xEF, 0xFD, 0xC8, 0x01, 0x64, 0xB8,
+0xC9, 0x01, 0x64, 0xB8, 0xA0, 0x01, 0x64, 0xB8,
+0xC6, 0x01, 0x64, 0xB8, 0xFF, 0xFF, 0xFF, 0x00,
+0x00, 0x00, 0x00, 0x05, 0x64, 0x01, 0x64, 0xB8,
+0x53, 0x05, 0x64, 0xB8, 0x77, 0x05, 0x64, 0xB8,
+0x68, 0x05, 0x64, 0xB8, 0x94, 0x01, 0x64, 0xB8,
+0x00, 0x00, 0x66, 0xB8, 0x00, 0x10, 0x66, 0xB8,
+0x00, 0x1C, 0x66, 0xB8, 0x54, 0x00, 0x60, 0xB8,
+0x50, 0x00, 0x60, 0xB8, 0x9A, 0x01, 0x64, 0xB8,
+0x99, 0x01, 0x64, 0xB8, 0x30, 0x01, 0x64, 0xB8,
+0x20, 0x01, 0x64, 0xB8, 0x24, 0x11, 0x64, 0xB8,
+0x20, 0x11, 0x64, 0xB8, 0x2C, 0x11, 0x64, 0xB8,
+0x28, 0x11, 0x64, 0xB8, 0x34, 0x11, 0x64, 0xB8,
+0x30, 0x11, 0x64, 0xB8, 0x38, 0x01, 0x64, 0xB8,
+0x3C, 0x11, 0x64, 0xB8, 0x38, 0x11, 0x64, 0xB8,
+0xE4, 0x11, 0x64, 0xB8, 0xE0, 0x11, 0x64, 0xB8,
+0x00, 0x40, 0xE0, 0x03, 0x01, 0x60, 0x00, 0x03,
+0xE0, 0x04, 0x64, 0xB8, 0xE3, 0x04, 0x64, 0xB8,
+0xE0, 0x12, 0x64, 0xB8, 0x08, 0x02, 0x64, 0xB8,
 0x2F, 0x01, 0x64, 0xB8, 0x00, 0x28, 0x64, 0xB8,
 0x00, 0x2C, 0x64, 0xB8, 0x00, 0x38, 0x64, 0xB8,
 0x00, 0x3C, 0x64, 0xB8, 0xF8, 0x05, 0x64, 0xB8,
@@ -50956,7 +50714,7 @@ u8 array_mp_8821c_fw_wowlan[] = {
 0x91, 0x00, 0x60, 0xB8, 0x64, 0x00, 0x60, 0xB8,
 0x40, 0x00, 0x60, 0xB8, 0x00, 0x00, 0xC0, 0x00,
 0x00, 0x10, 0x24, 0x00, 0x82, 0x82, 0x62, 0x00,
-0xAB, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0xD3, 0x62, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
@@ -51645,19 +51403,19 @@ u8 array_mp_8821c_fw_wowlan[] = {
 0x00, 0x18, 0x24, 0xC6, 0x01, 0x6C, 0x0C, 0x6D,
 0x00, 0x18, 0x24, 0xC6, 0x30, 0xF0, 0x20, 0x6C,
 0x00, 0x6D, 0x48, 0xF5, 0x10, 0x4C, 0x00, 0x18,
-0xD4, 0xEB, 0xE8, 0xF3, 0x66, 0xA0, 0x02, 0x6A,
+0x5B, 0xEB, 0xE8, 0xF3, 0x66, 0xA0, 0x02, 0x6A,
 0xE8, 0xF3, 0x44, 0xC0, 0x0F, 0x6A, 0xE8, 0xF3,
 0x45, 0xC0, 0x01, 0x6A, 0x6C, 0xEA, 0x28, 0x6B,
 0x6D, 0xEA, 0xE8, 0xF3, 0x46, 0xC0, 0x07, 0x6A,
 0xE8, 0xF3, 0x47, 0xC0, 0x88, 0xF3, 0x5B, 0xA0,
 0x01, 0x6C, 0x88, 0xF3, 0x37, 0xC0, 0x04, 0x4A,
 0x88, 0xF3, 0x56, 0xC0, 0x00, 0x18, 0x1F, 0xC7,
-0x00, 0x6C, 0xA4, 0x67, 0x00, 0x18, 0x6D, 0xCD,
-0x01, 0x6C, 0x00, 0x6D, 0x00, 0x18, 0x6D, 0xCD,
-0x02, 0x6C, 0x00, 0x6D, 0x00, 0x18, 0x6D, 0xCD,
-0x03, 0x6C, 0x00, 0x6D, 0x00, 0x18, 0x6D, 0xCD,
-0x04, 0x6C, 0x00, 0x6D, 0x00, 0x18, 0x6D, 0xCD,
-0x10, 0xF0, 0x24, 0x6A, 0x56, 0xF5, 0x60, 0x9A,
+0x00, 0x6C, 0xA4, 0x67, 0x00, 0x18, 0x5E, 0xCD,
+0x01, 0x6C, 0x00, 0x6D, 0x00, 0x18, 0x5E, 0xCD,
+0x02, 0x6C, 0x00, 0x6D, 0x00, 0x18, 0x5E, 0xCD,
+0x03, 0x6C, 0x00, 0x6D, 0x00, 0x18, 0x5E, 0xCD,
+0x04, 0x6C, 0x00, 0x6D, 0x00, 0x18, 0x5E, 0xCD,
+0x10, 0xF0, 0x24, 0x6A, 0x56, 0xF3, 0x7C, 0x9A,
 0xFC, 0x6A, 0x00, 0x6D, 0x80, 0xA3, 0xC5, 0x67,
 0x8C, 0xEA, 0x40, 0xC3, 0x30, 0xF0, 0x20, 0x6A,
 0x6E, 0xF2, 0x58, 0x9A, 0xFF, 0x6C, 0x40, 0xEA,
@@ -51683,14 +51441,14 @@ u8 array_mp_8821c_fw_wowlan[] = {
 0xFB, 0x61, 0x42, 0xF4, 0x10, 0x6A, 0x1F, 0xF7,
 0x00, 0x6B, 0x4C, 0xEB, 0x02, 0xF0, 0x00, 0x73,
 0x01, 0x60, 0x05, 0x2B, 0x10, 0xF0, 0x24, 0x6B,
-0xB6, 0xF4, 0x6C, 0x9B, 0x04, 0x10, 0x10, 0xF0,
-0x24, 0x6B, 0xB6, 0xF4, 0x70, 0x9B, 0x6D, 0xE2,
+0xD6, 0xF2, 0x68, 0x9B, 0x04, 0x10, 0x10, 0xF0,
+0x24, 0x6B, 0xD6, 0xF2, 0x6C, 0x9B, 0x6D, 0xE2,
 0x04, 0x4A, 0x00, 0x6C, 0x62, 0xF4, 0x00, 0x72,
 0x80, 0xDB, 0xE9, 0x61, 0x20, 0xE8, 0x00, 0x65,
 0xFD, 0x63, 0x05, 0x62, 0x10, 0xF0, 0x24, 0x6A,
-0x56, 0xF7, 0x48, 0x9A, 0x03, 0x6D, 0xFF, 0x6B,
-0x80, 0x9A, 0x10, 0xF0, 0x24, 0x6A, 0x56, 0xF7,
-0x4C, 0x9A, 0x00, 0xF5, 0x82, 0x34, 0xAC, 0xEC,
+0x76, 0xF5, 0x44, 0x9A, 0x03, 0x6D, 0xFF, 0x6B,
+0x80, 0x9A, 0x10, 0xF0, 0x24, 0x6A, 0x76, 0xF5,
+0x48, 0x9A, 0x00, 0xF5, 0x82, 0x34, 0xAC, 0xEC,
 0x40, 0x9A, 0x01, 0x74, 0x42, 0x32, 0x52, 0x32,
 0xAC, 0xEA, 0x06, 0x60, 0x0A, 0x2C, 0x02, 0x5A,
 0x28, 0x6C, 0x0D, 0x60, 0x50, 0x6C, 0x0B, 0x10,
@@ -51699,10 +51457,10 @@ u8 array_mp_8821c_fw_wowlan[] = {
 0x14, 0x6C, 0x84, 0xEA, 0x6C, 0xEC, 0x80, 0x18,
 0xA0, 0x06, 0x30, 0xF0, 0x20, 0x6A, 0xCF, 0xF4,
 0x00, 0x4A, 0x00, 0x6B, 0x80, 0xF2, 0x7B, 0xC2,
-0x10, 0xF0, 0x24, 0x6B, 0x16, 0xF5, 0x7C, 0x9B,
+0x10, 0xF0, 0x24, 0x6B, 0x36, 0xF3, 0x78, 0x9B,
 0x00, 0x6A, 0x40, 0xDB, 0x10, 0xF0, 0x24, 0x6B,
-0x76, 0xF4, 0x7C, 0x9B, 0x40, 0xDB, 0x10, 0xF0,
-0x24, 0x6B, 0x16, 0xF7, 0x6C, 0x9B, 0x40, 0xC3,
+0x96, 0xF2, 0x78, 0x9B, 0x40, 0xDB, 0x10, 0xF0,
+0x24, 0x6B, 0x36, 0xF5, 0x68, 0x9B, 0x40, 0xC3,
 0x05, 0x97, 0x03, 0x63, 0x00, 0xEF, 0x00, 0x65,
 0xFB, 0x63, 0x09, 0x62, 0x08, 0xD1, 0x07, 0xD0,
 0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A,
@@ -51717,7 +51475,7 @@ u8 array_mp_8821c_fw_wowlan[] = {
 0x40, 0xEA, 0x80, 0x18, 0x83, 0x05, 0x04, 0x92,
 0x00, 0x68, 0x40, 0xF0, 0x00, 0xC1, 0x80, 0xF0,
 0x0C, 0xDA, 0x80, 0x18, 0x8A, 0x05, 0x00, 0x18,
-0x7F, 0xDD, 0x05, 0x92, 0x30, 0xF0, 0x20, 0x6C,
+0x0D, 0xDD, 0x05, 0x92, 0x30, 0xF0, 0x20, 0x6C,
 0xED, 0xF0, 0x16, 0x4C, 0x80, 0xF2, 0x1C, 0xC2,
 0x30, 0xF0, 0x20, 0x6A, 0xED, 0xF0, 0x06, 0x4A,
 0x00, 0x6B, 0x60, 0xC2, 0x70, 0xC2, 0x01, 0x4A,
@@ -51727,14 +51485,14 @@ u8 array_mp_8821c_fw_wowlan[] = {
 0x7F, 0xC2, 0x28, 0xF1, 0x72, 0xC2, 0x09, 0x97,
 0x08, 0x91, 0x07, 0x90, 0x05, 0x63, 0x00, 0xEF,
 0xFD, 0x63, 0x05, 0x62, 0x80, 0x18, 0xA1, 0x05,
-0x80, 0x18, 0x18, 0x06, 0x80, 0x18, 0xF2, 0x13,
+0x80, 0x18, 0x18, 0x06, 0x80, 0x18, 0xBE, 0x13,
 0x80, 0x18, 0x41, 0x05, 0x80, 0x18, 0x2F, 0x05,
-0x80, 0x18, 0xCB, 0x0D, 0x80, 0x18, 0x82, 0x07,
-0x80, 0x18, 0x95, 0x07, 0x30, 0xF0, 0x20, 0x6A,
+0x80, 0x18, 0xDE, 0x0D, 0x80, 0x18, 0x82, 0x07,
+0x80, 0x18, 0xA8, 0x07, 0x30, 0xF0, 0x20, 0x6A,
 0xCE, 0xF5, 0x44, 0x9A, 0x40, 0xEA, 0x80, 0x18,
-0xB1, 0x06, 0x00, 0x18, 0x78, 0xE6, 0x00, 0x18,
-0x9E, 0xE6, 0x10, 0xF0, 0x24, 0x6A, 0x56, 0xF5,
-0x60, 0x9A, 0xFF, 0x6C, 0x04, 0x6D, 0x40, 0xA3,
+0xB1, 0x06, 0x00, 0x18, 0xFF, 0xE5, 0x00, 0x18,
+0x25, 0xE6, 0x10, 0xF0, 0x24, 0x6A, 0x56, 0xF3,
+0x7C, 0x9A, 0xFF, 0x6C, 0x04, 0x6D, 0x40, 0xA3,
 0x8C, 0xEA, 0xAD, 0xEA, 0x8C, 0xEA, 0x40, 0xC3,
 0x05, 0x97, 0x03, 0x63, 0x00, 0xEF, 0x00, 0x65,
 0x30, 0xF0, 0x20, 0x6A, 0x00, 0x6B, 0xCF, 0xF4,
@@ -51742,54 +51500,54 @@ u8 array_mp_8821c_fw_wowlan[] = {
 0x6F, 0xC2, 0x10, 0xF0, 0x30, 0x6A, 0x00, 0xF0,
 0x00, 0x4A, 0x40, 0xF0, 0x60, 0xC2, 0x40, 0xF0,
 0x61, 0xC2, 0x20, 0xE8, 0x10, 0xF0, 0x24, 0x6A,
-0x77, 0xF0, 0x48, 0x9A, 0x01, 0x6B, 0x60, 0xC2,
+0x96, 0xF6, 0x44, 0x9A, 0x01, 0x6B, 0x60, 0xC2,
 0x20, 0xE8, 0x00, 0x65, 0x10, 0xF0, 0x24, 0x6A,
-0x77, 0xF0, 0x8C, 0x9A, 0xFF, 0x6B, 0x20, 0x6D,
+0x96, 0xF6, 0x88, 0x9A, 0xFF, 0x6B, 0x20, 0x6D,
 0x40, 0xA4, 0x6C, 0xEA, 0xAD, 0xEA, 0x6C, 0xEA,
-0x40, 0xC4, 0x10, 0xF0, 0x24, 0x6A, 0x77, 0xF0,
-0x90, 0x9A, 0x08, 0x6D, 0x40, 0xA4, 0x6C, 0xEA,
+0x40, 0xC4, 0x10, 0xF0, 0x24, 0x6A, 0x96, 0xF6,
+0x8C, 0x9A, 0x08, 0x6D, 0x40, 0xA4, 0x6C, 0xEA,
 0xAD, 0xEA, 0x6C, 0xEA, 0x40, 0xC4, 0x20, 0xE8,
-0x10, 0xF0, 0x24, 0x6A, 0x77, 0xF0, 0x78, 0x9A,
+0x10, 0xF0, 0x24, 0x6A, 0x96, 0xF6, 0x74, 0x9A,
 0xFD, 0x6A, 0xFF, 0x6C, 0xA0, 0xA3, 0xAC, 0xEA,
 0x40, 0xC3, 0x40, 0xA3, 0x01, 0x6D, 0x8C, 0xEA,
 0xAD, 0xEA, 0x8C, 0xEA, 0x40, 0xC3, 0x20, 0xE8,
 0xFD, 0x63, 0x05, 0x62, 0x04, 0xD0, 0x10, 0xF0,
-0x24, 0x6A, 0x77, 0xF0, 0x1C, 0x9A, 0x30, 0xF0,
+0x24, 0x6A, 0x96, 0xF6, 0x18, 0x9A, 0x30, 0xF0,
 0x20, 0x6A, 0x4E, 0xF2, 0x4C, 0x9A, 0x90, 0x67,
 0x00, 0x6D, 0x02, 0xF0, 0x00, 0x6E, 0x40, 0xEA,
 0x04, 0x6A, 0x40, 0xC0, 0x10, 0xF0, 0x24, 0x6A,
-0x97, 0xF0, 0x40, 0x9A, 0x20, 0x48, 0x0E, 0xEA,
+0x96, 0xF6, 0x5C, 0x9A, 0x20, 0x48, 0x0E, 0xEA,
 0xF7, 0x2A, 0x10, 0xF0, 0x24, 0x6B, 0x30, 0xF0,
-0x20, 0x6A, 0x97, 0xF0, 0x84, 0x9B, 0x4E, 0xF2,
+0x20, 0x6A, 0xB6, 0xF6, 0x80, 0x9B, 0x4E, 0xF2,
 0x4C, 0x9A, 0x00, 0x6D, 0x00, 0xF4, 0x00, 0x6E,
 0x40, 0xEA, 0x05, 0x97, 0x04, 0x90, 0x03, 0x63,
 0x00, 0xEF, 0x00, 0x65, 0x10, 0xF0, 0x24, 0x6A,
-0xD7, 0xF0, 0xAC, 0x9A, 0x30, 0xF0, 0x20, 0x6B,
+0xF6, 0xF6, 0xA8, 0x9A, 0x30, 0xF0, 0x20, 0x6B,
 0xE0, 0xF3, 0x12, 0x6E, 0xC0, 0xF1, 0xC8, 0xDB,
 0x01, 0xF7, 0x01, 0x6A, 0xC0, 0xF1, 0x08, 0x4B,
 0x00, 0x6C, 0x42, 0xDB, 0x43, 0xDB, 0xA1, 0xDB,
-0x84, 0xDB, 0x10, 0xF0, 0x24, 0x6B, 0x97, 0xF0,
-0x78, 0x9B, 0xC0, 0xDB, 0x10, 0xF0, 0x24, 0x6B,
-0x97, 0xF0, 0x7C, 0x9B, 0xA0, 0xDB, 0x10, 0xF0,
-0x24, 0x6B, 0xB7, 0xF0, 0x64, 0x9B, 0x40, 0xDB,
-0x10, 0xF0, 0x24, 0x6B, 0xB7, 0xF0, 0x6C, 0x9B,
-0x40, 0xDB, 0x10, 0xF0, 0x24, 0x6A, 0xB7, 0xF0,
-0x54, 0x9A, 0x80, 0xDA, 0x20, 0xE8, 0x00, 0x65,
+0x84, 0xDB, 0x10, 0xF0, 0x24, 0x6B, 0xB6, 0xF6,
+0x74, 0x9B, 0xC0, 0xDB, 0x10, 0xF0, 0x24, 0x6B,
+0xB6, 0xF6, 0x78, 0x9B, 0xA0, 0xDB, 0x10, 0xF0,
+0x24, 0x6B, 0xD6, 0xF6, 0x60, 0x9B, 0x40, 0xDB,
+0x10, 0xF0, 0x24, 0x6B, 0xD6, 0xF6, 0x68, 0x9B,
+0x40, 0xDB, 0x10, 0xF0, 0x24, 0x6A, 0xD6, 0xF6,
+0x50, 0x9A, 0x80, 0xDA, 0x20, 0xE8, 0x00, 0x65,
 0x80, 0x6A, 0x30, 0xF0, 0x20, 0x6B, 0xE0, 0xF1,
-0x58, 0xDB, 0x10, 0xF0, 0x24, 0x6B, 0x97, 0xF0,
-0x6C, 0x9B, 0x40, 0xDB, 0x20, 0xE8, 0x00, 0x65,
-0x10, 0xF0, 0x24, 0x6B, 0xD7, 0xF0, 0x90, 0x9B,
+0x58, 0xDB, 0x10, 0xF0, 0x24, 0x6B, 0xB6, 0xF6,
+0x68, 0x9B, 0x40, 0xDB, 0x20, 0xE8, 0x00, 0x65,
+0x10, 0xF0, 0x24, 0x6B, 0xF6, 0xF6, 0x8C, 0x9B,
 0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A,
 0x80, 0xF1, 0x06, 0x6D, 0xFF, 0x6B, 0xAE, 0xDA,
 0x8F, 0xDA, 0x70, 0xDA, 0x10, 0xF0, 0x24, 0x6A,
-0xB7, 0xF0, 0x58, 0x9A, 0xA0, 0xDA, 0x10, 0xF0,
-0x24, 0x6A, 0xD7, 0xF0, 0x40, 0x9A, 0x80, 0xDA,
-0x10, 0xF0, 0x24, 0x6A, 0xD7, 0xF0, 0x48, 0x9A,
+0xD6, 0xF6, 0x54, 0x9A, 0xA0, 0xDA, 0x10, 0xF0,
+0x24, 0x6A, 0xD6, 0xF6, 0x5C, 0x9A, 0x80, 0xDA,
+0x10, 0xF0, 0x24, 0x6A, 0xF6, 0xF6, 0x44, 0x9A,
 0x60, 0xDA, 0x20, 0xE8, 0x20, 0xE8, 0x00, 0x65,
 0xFD, 0x63, 0x05, 0x62, 0x80, 0x18, 0x7A, 0x07,
 0x30, 0xF0, 0x20, 0x6B, 0xE8, 0xF2, 0x5C, 0xC3,
-0x80, 0x18, 0x30, 0x06, 0x00, 0x18, 0x2D, 0xEA,
-0x10, 0xF0, 0x24, 0x6A, 0xD7, 0xF0, 0x5C, 0x9A,
+0x80, 0x18, 0x30, 0x06, 0x00, 0x18, 0xB4, 0xE9,
+0x10, 0xF0, 0x24, 0x6A, 0xF6, 0xF6, 0x58, 0x9A,
 0x3F, 0x6B, 0x60, 0xC2, 0x80, 0x18, 0x21, 0x06,
 0x80, 0x18, 0x25, 0x06, 0x80, 0x18, 0xA6, 0x06,
 0x80, 0x18, 0x38, 0x06, 0x80, 0x18, 0x48, 0x07,
@@ -51797,15 +51555,15 @@ u8 array_mp_8821c_fw_wowlan[] = {
 0xFD, 0x63, 0x05, 0x62, 0x04, 0xD0, 0x30, 0xF0,
 0x20, 0x68, 0x00, 0x6A, 0xC0, 0xF1, 0x08, 0x48,
 0x01, 0x6C, 0x02, 0x6D, 0x00, 0x6E, 0x40, 0xF0,
-0x50, 0xC8, 0x00, 0x18, 0x66, 0xD5, 0x40, 0xF0,
+0x50, 0xC8, 0x00, 0x18, 0x1C, 0xD5, 0x40, 0xF0,
 0xD0, 0xA8, 0x01, 0x6C, 0x03, 0x6D, 0xC2, 0x36,
-0x00, 0x18, 0x66, 0xD5, 0x05, 0x97, 0x04, 0x90,
+0x00, 0x18, 0x1C, 0xD5, 0x05, 0x97, 0x04, 0x90,
 0x03, 0x63, 0x00, 0xEF, 0xFD, 0x63, 0x05, 0x62,
-0x00, 0x18, 0x4E, 0xE0, 0x00, 0x18, 0x6D, 0xE0,
+0x00, 0x18, 0xDC, 0xDF, 0x00, 0x18, 0xFB, 0xDF,
 0x80, 0x18, 0x4D, 0x06, 0x80, 0x18, 0x6A, 0x06,
 0x80, 0x18, 0x64, 0x06, 0x80, 0x18, 0x8A, 0x06,
 0x05, 0x97, 0x03, 0x63, 0x00, 0xEF, 0x00, 0x65,
-0xFD, 0x63, 0x05, 0x62, 0x00, 0x18, 0xCB, 0xD6,
+0xFD, 0x63, 0x05, 0x62, 0x00, 0x18, 0x81, 0xD6,
 0x30, 0xF0, 0x20, 0x6A, 0xCE, 0xF4, 0x54, 0x9A,
 0x40, 0xEA, 0x05, 0x97, 0x03, 0x63, 0x00, 0xEF,
 0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A,
@@ -51814,1582 +51572,1556 @@ u8 array_mp_8821c_fw_wowlan[] = {
 0x01, 0xF2, 0x00, 0x4B, 0x48, 0xF1, 0x60, 0xDA,
 0x00, 0xF2, 0x00, 0x4B, 0x48, 0xF1, 0x64, 0xDA,
 0x20, 0xE8, 0x00, 0x65, 0x20, 0xE8, 0x00, 0x65,
-0x10, 0xF0, 0x24, 0x6A, 0x77, 0xF1, 0x50, 0x9A,
+0x10, 0xF0, 0x24, 0x6A, 0x96, 0xF7, 0x48, 0x9A,
 0xE0, 0xF1, 0x1B, 0x6B, 0x6B, 0xEB, 0x60, 0xCA,
-0x10, 0xF0, 0x24, 0x6A, 0x77, 0xF1, 0x74, 0x9A,
+0x10, 0xF0, 0x24, 0x6A, 0x96, 0xF7, 0x6C, 0x9A,
 0xFB, 0x6A, 0x80, 0xA3, 0x8C, 0xEA, 0x40, 0xC3,
 0x20, 0xE8, 0x00, 0x65, 0x10, 0xF0, 0x23, 0x6A,
-0x6B, 0xF4, 0x05, 0x4A, 0x30, 0xF0, 0x20, 0x6B,
+0x2B, 0xF3, 0x1D, 0x4A, 0x30, 0xF0, 0x20, 0x6B,
 0x4E, 0xF2, 0x4C, 0xDB, 0x10, 0xF0, 0x23, 0x6A,
-0x6B, 0xF4, 0x19, 0x4A, 0x30, 0xF0, 0x20, 0x6B,
-0x4E, 0xF2, 0x50, 0xDB, 0x10, 0xF0, 0x24, 0x6A,
-0x50, 0xF0, 0x09, 0x4A, 0x30, 0xF0, 0x20, 0x6B,
+0x4B, 0xF3, 0x11, 0x4A, 0x30, 0xF0, 0x20, 0x6B,
+0x4E, 0xF2, 0x50, 0xDB, 0x10, 0xF0, 0x23, 0x6A,
+0x8F, 0xF6, 0x01, 0x4A, 0x30, 0xF0, 0x20, 0x6B,
 0x4E, 0xF2, 0x54, 0xDB, 0x10, 0xF0, 0x30, 0x6A,
 0xC3, 0xF2, 0x09, 0x4A, 0x30, 0xF0, 0x20, 0x6B,
 0x4E, 0xF2, 0x58, 0xDB, 0x10, 0xF0, 0x24, 0x6A,
-0x54, 0xF7, 0x1D, 0x4A, 0x30, 0xF0, 0x20, 0x6B,
+0x74, 0xF5, 0x19, 0x4A, 0x30, 0xF0, 0x20, 0x6B,
 0x4E, 0xF2, 0x5C, 0xDB, 0x10, 0xF0, 0x24, 0x6A,
-0xD2, 0xF6, 0x15, 0x4A, 0x30, 0xF0, 0x20, 0x6B,
+0xF2, 0xF4, 0x11, 0x4A, 0x30, 0xF0, 0x20, 0x6B,
 0x6E, 0xF2, 0x58, 0xDB, 0x10, 0xF0, 0x24, 0x6A,
-0x92, 0xF7, 0x09, 0x4A, 0x30, 0xF0, 0x20, 0x6B,
+0xB2, 0xF5, 0x05, 0x4A, 0x30, 0xF0, 0x20, 0x6B,
 0x6E, 0xF2, 0x5C, 0xDB, 0x10, 0xF0, 0x23, 0x6A,
-0xAC, 0xF3, 0x19, 0x4A, 0x30, 0xF0, 0x20, 0x6B,
+0xEC, 0xF1, 0x11, 0x4A, 0x30, 0xF0, 0x20, 0x6B,
 0x8E, 0xF2, 0x5C, 0xDB, 0x10, 0xF0, 0x23, 0x6A,
-0x4A, 0xF6, 0x15, 0x4A, 0x30, 0xF0, 0x20, 0x6B,
+0x2A, 0xF5, 0x0D, 0x4A, 0x30, 0xF0, 0x20, 0x6B,
 0xAE, 0xF2, 0x40, 0xDB, 0x10, 0xF0, 0x23, 0x6A,
-0xEA, 0xF5, 0x1D, 0x4A, 0x30, 0xF0, 0x20, 0x6B,
+0xCA, 0xF4, 0x15, 0x4A, 0x30, 0xF0, 0x20, 0x6B,
 0xAE, 0xF2, 0x44, 0xDB, 0x10, 0xF0, 0x24, 0x6A,
-0xF1, 0xF6, 0x0D, 0x4A, 0x30, 0xF0, 0x20, 0x6B,
+0x11, 0xF5, 0x09, 0x4A, 0x30, 0xF0, 0x20, 0x6B,
 0xAE, 0xF2, 0x48, 0xDB, 0x10, 0xF0, 0x23, 0x6A,
-0x8F, 0xF4, 0x1D, 0x4A, 0x30, 0xF0, 0x20, 0x6B,
+0xCF, 0xF2, 0x15, 0x4A, 0x30, 0xF0, 0x20, 0x6B,
 0xAE, 0xF2, 0x4C, 0xDB, 0x10, 0xF0, 0x23, 0x6A,
-0xEF, 0xF4, 0x05, 0x4A, 0x30, 0xF0, 0x20, 0x6B,
+0x0F, 0xF3, 0x1D, 0x4A, 0x30, 0xF0, 0x20, 0x6B,
 0xAE, 0xF2, 0x50, 0xDB, 0x10, 0xF0, 0x24, 0x6A,
-0x34, 0xF5, 0x05, 0x4A, 0x30, 0xF0, 0x20, 0x6B,
+0x54, 0xF3, 0x01, 0x4A, 0x30, 0xF0, 0x20, 0x6B,
 0xAE, 0xF2, 0x54, 0xDB, 0x10, 0xF0, 0x30, 0x6A,
-0x69, 0xF4, 0x1D, 0x4A, 0x30, 0xF0, 0x20, 0x6B,
+0xA9, 0xF3, 0x0D, 0x4A, 0x30, 0xF0, 0x20, 0x6B,
 0xEE, 0xF4, 0x48, 0xDB, 0x10, 0xF0, 0x24, 0x6A,
-0xF5, 0xF5, 0x0D, 0x4A, 0x30, 0xF0, 0x20, 0x6B,
+0x15, 0xF4, 0x09, 0x4A, 0x30, 0xF0, 0x20, 0x6B,
 0xCE, 0xF5, 0x4C, 0xDB, 0x10, 0xF0, 0x24, 0x6A,
-0x55, 0xF5, 0x15, 0x4A, 0x30, 0xF0, 0x20, 0x6B,
+0x75, 0xF3, 0x11, 0x4A, 0x30, 0xF0, 0x20, 0x6B,
 0xEE, 0xF5, 0x44, 0xDB, 0x10, 0xF0, 0x24, 0x6A,
-0x55, 0xF3, 0x15, 0x4A, 0x30, 0xF0, 0x20, 0x6B,
+0x75, 0xF1, 0x11, 0x4A, 0x30, 0xF0, 0x20, 0x6B,
 0xEE, 0xF4, 0x50, 0xDB, 0x10, 0xF0, 0x24, 0x6A,
-0xD5, 0xF3, 0x09, 0x4A, 0x30, 0xF0, 0x20, 0x6B,
+0xF5, 0xF1, 0x05, 0x4A, 0x30, 0xF0, 0x20, 0x6B,
 0xEE, 0xF4, 0x54, 0xDB, 0x10, 0xF0, 0x23, 0x6A,
-0xCB, 0xF6, 0x01, 0x4A, 0x30, 0xF0, 0x20, 0x6B,
+0x8B, 0xF5, 0x19, 0x4A, 0x30, 0xF0, 0x20, 0x6B,
 0xAE, 0xF2, 0x58, 0xDB, 0x10, 0xF0, 0x23, 0x6A,
-0xCC, 0xF0, 0x05, 0x4A, 0x30, 0xF0, 0x20, 0x6B,
+0x8B, 0xF7, 0x1D, 0x4A, 0x30, 0xF0, 0x20, 0x6B,
 0xAE, 0xF2, 0x5C, 0xDB, 0x10, 0xF0, 0x24, 0x6A,
-0x92, 0xF1, 0x1D, 0x4A, 0x30, 0xF0, 0x20, 0x6B,
+0xB1, 0xF7, 0x19, 0x4A, 0x30, 0xF0, 0x20, 0x6B,
 0xCE, 0xF2, 0x40, 0xDB, 0x10, 0xF0, 0x23, 0x6A,
 0x02, 0xF3, 0x01, 0x4A, 0x30, 0xF0, 0x20, 0x6B,
 0xCE, 0xF2, 0x44, 0xDB, 0x10, 0xF0, 0x30, 0x6A,
-0xE3, 0xF7, 0x0D, 0x4A, 0x30, 0xF0, 0x20, 0x6B,
+0x24, 0xF0, 0x19, 0x4A, 0x30, 0xF0, 0x20, 0x6B,
 0x0E, 0xF5, 0x48, 0xDB, 0x10, 0xF0, 0x30, 0x6A,
-0x09, 0xF6, 0x15, 0x4A, 0x30, 0xF0, 0x20, 0x6B,
+0x49, 0xF5, 0x05, 0x4A, 0x30, 0xF0, 0x20, 0x6B,
 0x4E, 0xF3, 0x50, 0xDB, 0x10, 0xF0, 0x23, 0x6A,
-0xE9, 0xF2, 0x05, 0x4A, 0x30, 0xF0, 0x20, 0x6B,
+0xA9, 0xF1, 0x1D, 0x4A, 0x30, 0xF0, 0x20, 0x6B,
 0x6E, 0xF3, 0x40, 0xDB, 0x10, 0xF0, 0x23, 0x6A,
-0xC5, 0xF0, 0x05, 0x4A, 0x30, 0xF0, 0x20, 0x6B,
+0x85, 0xF0, 0x09, 0x4A, 0x30, 0xF0, 0x20, 0x6B,
 0x2E, 0xF4, 0x48, 0xDB, 0x10, 0xF0, 0x23, 0x6A,
-0xC7, 0xF0, 0x01, 0x4A, 0x30, 0xF0, 0x20, 0x6B,
+0x87, 0xF0, 0x05, 0x4A, 0x30, 0xF0, 0x20, 0x6B,
 0x2E, 0xF4, 0x4C, 0xDB, 0x10, 0xF0, 0x23, 0x6A,
-0x27, 0xF2, 0x0D, 0x4A, 0x30, 0xF0, 0x20, 0x6B,
+0xE7, 0xF1, 0x11, 0x4A, 0x30, 0xF0, 0x20, 0x6B,
 0x2E, 0xF4, 0x50, 0xDB, 0x10, 0xF0, 0x23, 0x6A,
-0x47, 0xF1, 0x09, 0x4A, 0x30, 0xF0, 0x20, 0x6B,
+0x07, 0xF1, 0x0D, 0x4A, 0x30, 0xF0, 0x20, 0x6B,
 0x2E, 0xF4, 0x54, 0xDB, 0x10, 0xF0, 0x24, 0x6A,
-0x91, 0xF7, 0x11, 0x4A, 0x30, 0xF0, 0x20, 0x6B,
+0xB1, 0xF5, 0x0D, 0x4A, 0x30, 0xF0, 0x20, 0x6B,
 0xCE, 0xF4, 0x50, 0xDB, 0x10, 0xF0, 0x23, 0x6A,
-0x0B, 0xF4, 0x05, 0x4A, 0x30, 0xF0, 0x20, 0x6B,
+0xCB, 0xF2, 0x1D, 0x4A, 0x30, 0xF0, 0x20, 0x6B,
 0xCE, 0xF4, 0x54, 0xDB, 0x10, 0xF0, 0x23, 0x6A,
-0x2B, 0xF4, 0x11, 0x4A, 0x30, 0xF0, 0x20, 0x6B,
+0x0B, 0xF3, 0x09, 0x4A, 0x30, 0xF0, 0x20, 0x6B,
 0xCE, 0xF4, 0x5C, 0xDB, 0x10, 0xF0, 0x23, 0x6A,
-0x0B, 0xF4, 0x11, 0x4A, 0x30, 0xF0, 0x20, 0x6B,
+0xEB, 0xF2, 0x09, 0x4A, 0x30, 0xF0, 0x20, 0x6B,
 0xCE, 0xF4, 0x58, 0xDB, 0x10, 0xF0, 0x24, 0x6A,
-0x50, 0xF6, 0x0D, 0x4A, 0x30, 0xF0, 0x20, 0x6B,
+0x90, 0xF4, 0x05, 0x4A, 0x30, 0xF0, 0x20, 0x6B,
 0xEE, 0xF4, 0x40, 0xDB, 0x20, 0xE8, 0x00, 0x65,
-0x10, 0xF0, 0x24, 0x6A, 0x97, 0xF1, 0x4C, 0x9A,
+0x10, 0xF0, 0x24, 0x6A, 0xB6, 0xF7, 0x44, 0x9A,
 0xE5, 0xF6, 0x1F, 0x6B, 0xFF, 0x6C, 0x60, 0xDA,
-0x10, 0xF0, 0x24, 0x6A, 0x97, 0xF1, 0x50, 0x9A,
+0x10, 0xF0, 0x24, 0x6A, 0xB6, 0xF7, 0x48, 0x9A,
 0x10, 0x6B, 0x40, 0x6E, 0x60, 0xC2, 0x10, 0xF0,
-0x24, 0x6A, 0x97, 0xF1, 0x54, 0x9A, 0x01, 0x6B,
-0x60, 0xC2, 0x10, 0xF0, 0x24, 0x6A, 0xB6, 0xF6,
-0xBC, 0x9A, 0x40, 0xA5, 0x8C, 0xEA, 0x40, 0xC5,
-0x10, 0xF0, 0x24, 0x6A, 0x96, 0xF4, 0x7C, 0x9A,
+0x24, 0x6A, 0xB6, 0xF7, 0x4C, 0x9A, 0x01, 0x6B,
+0x60, 0xC2, 0x10, 0xF0, 0x24, 0x6A, 0xD6, 0xF4,
+0xB8, 0x9A, 0x40, 0xA5, 0x8C, 0xEA, 0x40, 0xC5,
+0x10, 0xF0, 0x24, 0x6A, 0xB6, 0xF2, 0x78, 0x9A,
 0x40, 0xA3, 0x8C, 0xEA, 0xCD, 0xEA, 0x8C, 0xEA,
 0x40, 0xC3, 0x40, 0xA3, 0xB8, 0x4E, 0x8C, 0xEA,
 0xCC, 0xEA, 0x02, 0x6E, 0xCD, 0xEA, 0x8C, 0xEA,
 0x40, 0xC3, 0x80, 0xA3, 0xEF, 0x6A, 0x8C, 0xEA,
-0x40, 0xC3, 0x10, 0xF0, 0x24, 0x6A, 0x97, 0xF1,
-0x58, 0x9A, 0x00, 0xF2, 0x01, 0x6C, 0x8B, 0xEC,
+0x40, 0xC3, 0x10, 0xF0, 0x24, 0x6A, 0xB6, 0xF7,
+0x50, 0x9A, 0x00, 0xF2, 0x01, 0x6C, 0x8B, 0xEC,
 0x60, 0x9A, 0x8C, 0xEB, 0x60, 0xDA, 0x60, 0x9A,
 0x00, 0xF1, 0x00, 0x4C, 0x8C, 0xEB, 0x60, 0xDA,
-0x10, 0xF0, 0x24, 0x6B, 0x40, 0x9D, 0xD6, 0xF4,
-0x78, 0x9B, 0x6D, 0xEA, 0x40, 0xDD, 0x10, 0xF0,
-0x24, 0x6A, 0x97, 0xF1, 0x5C, 0x9A, 0x60, 0xA2,
+0x10, 0xF0, 0x24, 0x6B, 0x40, 0x9D, 0xF6, 0xF2,
+0x74, 0x9B, 0x6D, 0xEA, 0x40, 0xDD, 0x10, 0xF0,
+0x24, 0x6A, 0xB6, 0xF7, 0x54, 0x9A, 0x60, 0xA2,
 0x04, 0x5B, 0x02, 0x60, 0x04, 0x6B, 0x60, 0xC2,
-0x10, 0xF0, 0x24, 0x6A, 0x96, 0xF4, 0x5C, 0x9A,
+0x10, 0xF0, 0x24, 0x6A, 0xB6, 0xF2, 0x58, 0x9A,
 0x7F, 0x6B, 0x80, 0xA2, 0x8C, 0xEB, 0x60, 0xC2,
 0x80, 0xA2, 0xF7, 0x6B, 0x8C, 0xEB, 0x60, 0xC2,
-0x10, 0xF0, 0x24, 0x6A, 0xB7, 0xF1, 0x40, 0x9A,
+0x10, 0xF0, 0x24, 0x6A, 0xB6, 0xF7, 0x58, 0x9A,
 0x07, 0x6B, 0x60, 0xC2, 0x20, 0xE8, 0x00, 0x65,
-0x10, 0xF0, 0x24, 0x6A, 0x17, 0xF2, 0x5C, 0x9A,
+0x10, 0xF0, 0x24, 0x6A, 0x37, 0xF0, 0x54, 0x9A,
 0x60, 0x9A, 0x03, 0x6A, 0x62, 0x33, 0x72, 0x33,
 0x4C, 0xEB, 0x02, 0x6A, 0x04, 0x23, 0x01, 0x73,
 0x01, 0x6A, 0x01, 0x60, 0x03, 0x6A, 0x20, 0xE8,
 0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A,
 0x89, 0xF0, 0x97, 0xA2, 0x02, 0x6B, 0x6B, 0xEB,
 0x8C, 0xEB, 0x05, 0x6C, 0x8B, 0xEC, 0x8C, 0xEB,
-0x0A, 0x6C, 0x89, 0xF0, 0x98, 0xC2, 0x3F, 0x6C,
-0x8C, 0xEB, 0x89, 0xF0, 0x77, 0xC2, 0x00, 0x6B,
-0x89, 0xF0, 0x79, 0xC2, 0x89, 0xF0, 0x7A, 0xC2,
-0x89, 0xF0, 0x7B, 0xC2, 0x30, 0xF0, 0x20, 0x6A,
-0xCF, 0xF4, 0x00, 0x4A, 0x80, 0xF1, 0x68, 0xC2,
+0x89, 0xF0, 0x77, 0xC2, 0x0A, 0x6B, 0x89, 0xF0,
+0x78, 0xC2, 0x30, 0xF0, 0x20, 0x6A, 0xCF, 0xF4,
+0x00, 0x4A, 0x00, 0x6B, 0x80, 0xF1, 0x68, 0xC2,
 0x80, 0xF1, 0x69, 0xC2, 0x80, 0xF1, 0x67, 0xC2,
-0x20, 0xE8, 0x00, 0x65, 0xFD, 0x63, 0x05, 0x62,
-0x30, 0xF0, 0x20, 0x6A, 0x4E, 0xF2, 0x4C, 0x9A,
-0x30, 0xF0, 0x20, 0x6C, 0x69, 0xF2, 0x06, 0x4C,
-0x00, 0x6D, 0x07, 0x6E, 0x40, 0xEA, 0x30, 0xF0,
-0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A, 0x08, 0x6B,
-0x89, 0xF0, 0x7F, 0xC2, 0x03, 0x6B, 0xA9, 0xF0,
-0x60, 0xC2, 0x05, 0x97, 0x03, 0x63, 0x00, 0xEF,
-0xFD, 0x63, 0x05, 0x62, 0x04, 0xD0, 0x04, 0x67,
-0x80, 0x18, 0x95, 0x07, 0x30, 0xF0, 0x20, 0x6A,
-0xC0, 0xF1, 0x08, 0x4A, 0x80, 0xA0, 0x89, 0xF0,
-0xDE, 0xA2, 0x02, 0x6B, 0x01, 0x6D, 0x6B, 0xEB,
-0xAC, 0xEC, 0xCC, 0xEB, 0x8D, 0xEB, 0x83, 0x67,
-0xAC, 0xEC, 0x89, 0xF0, 0x7E, 0xC2, 0x2B, 0x24,
-0x80, 0xA0, 0x07, 0x6E, 0x92, 0x34, 0xCC, 0xEC,
-0x30, 0xF0, 0x20, 0x6E, 0x4F, 0xF6, 0x8E, 0xC6,
-0xC0, 0xA0, 0x02, 0x6C, 0xCC, 0xEC, 0xFF, 0x6E,
-0xCC, 0xEC, 0x1D, 0x24, 0x81, 0xA0, 0x89, 0xF0,
-0x9F, 0xC2, 0x82, 0xA0, 0xA9, 0xF0, 0x80, 0xC2,
-0x80, 0xA0, 0x8A, 0x34, 0xAC, 0xEC, 0x88, 0x36,
-0x05, 0x6C, 0x8B, 0xEC, 0x6C, 0xEC, 0xCD, 0xEC,
-0x89, 0xF0, 0x9E, 0xC2, 0x63, 0xA0, 0xA9, 0xF0,
-0x61, 0xC2, 0x60, 0xA0, 0x6E, 0x33, 0xAC, 0xEB,
-0x6C, 0x35, 0x09, 0x6B, 0x6B, 0xEB, 0x8C, 0xEB,
-0xAD, 0xEB, 0x89, 0xF0, 0x7E, 0xC2, 0x05, 0x97,
-0x04, 0x90, 0x03, 0x63, 0x00, 0xEF, 0x00, 0x65,
-0xFD, 0x63, 0x05, 0x62, 0x10, 0xF0, 0x24, 0x6B,
-0xD6, 0xF5, 0x6C, 0x9B, 0xFF, 0x6A, 0x8C, 0xEA,
-0x60, 0xAB, 0xE1, 0xF7, 0x1F, 0x6C, 0x30, 0xF0,
-0x20, 0x6E, 0x6C, 0xEC, 0x91, 0xE2, 0x30, 0xF0,
-0x20, 0x6A, 0xCE, 0xF4, 0x44, 0x9A, 0x9C, 0x34,
-0x70, 0x6D, 0xE8, 0xF5, 0x14, 0x4E, 0x40, 0xEA,
-0x05, 0x97, 0x03, 0x63, 0x00, 0xEF, 0x00, 0x65,
-0xFD, 0x63, 0x05, 0x62, 0xFF, 0x6A, 0x8C, 0xEA,
-0x06, 0x22, 0x30, 0xF0, 0x20, 0x6A, 0x49, 0xF2,
-0x89, 0xA2, 0x80, 0x18, 0xC6, 0x07, 0x05, 0x97,
-0x03, 0x63, 0x00, 0xEF, 0xFB, 0x63, 0x09, 0x62,
-0x08, 0xD1, 0x07, 0xD0, 0xFF, 0x6A, 0xEC, 0xEA,
-0x30, 0xF0, 0x20, 0x6B, 0x04, 0xD2, 0x30, 0xF0,
-0x20, 0x68, 0x4E, 0xF2, 0x50, 0x9B, 0x68, 0xF6,
-0x04, 0x48, 0x26, 0x67, 0x0A, 0xD4, 0x10, 0x6E,
-0x90, 0x67, 0x40, 0xEA, 0x30, 0xF0, 0x20, 0x6C,
-0x0A, 0x95, 0x4E, 0xF2, 0x50, 0x9C, 0x87, 0x40,
-0x09, 0x4C, 0x10, 0x6E, 0x40, 0xEA, 0x00, 0xF6,
-0x22, 0x34, 0x00, 0xF6, 0x20, 0x32, 0x8D, 0xEA,
-0x1F, 0xF7, 0x00, 0x6D, 0x22, 0x34, 0xAC, 0xEC,
-0x8D, 0xEA, 0x10, 0xF0, 0x24, 0x6C, 0x16, 0xF6,
-0x94, 0x9C, 0x20, 0x31, 0x30, 0xF0, 0x20, 0x6B,
-0x8C, 0xE9, 0xC0, 0xF1, 0x08, 0x4B, 0x2D, 0xEA,
-0xA8, 0xF4, 0x5C, 0xDB, 0x5D, 0x67, 0x87, 0x42,
-0x09, 0x4C, 0x40, 0xA4, 0xC8, 0xF4, 0x43, 0xC3,
-0x09, 0x97, 0x08, 0x91, 0x07, 0x90, 0x05, 0x63,
+0x20, 0xE8, 0x00, 0x65, 0x30, 0xF0, 0x20, 0x6B,
+0xC0, 0xF1, 0x08, 0x4B, 0xA0, 0xA4, 0x89, 0xF0,
+0xF7, 0xA3, 0x02, 0x6A, 0x01, 0x6E, 0x4B, 0xEA,
+0xCC, 0xED, 0xEC, 0xEA, 0xAD, 0xEA, 0xA2, 0x67,
+0xCC, 0xED, 0x89, 0xF0, 0x57, 0xC3, 0x1B, 0x25,
+0xA0, 0xA4, 0x07, 0x6F, 0xAE, 0x35, 0xEC, 0xED,
+0x30, 0xF0, 0x20, 0x6F, 0x4F, 0xF6, 0xA7, 0xC7,
+0xA0, 0xA4, 0xAA, 0x35, 0xCC, 0xED, 0xA8, 0x36,
+0x05, 0x6D, 0xAB, 0xED, 0x4C, 0xED, 0xCD, 0xED,
+0x89, 0xF0, 0xB7, 0xC3, 0xA0, 0xA4, 0x02, 0x6A,
+0xAC, 0xEA, 0xFF, 0x6D, 0xAC, 0xEA, 0x03, 0x22,
+0x41, 0xA4, 0x89, 0xF0, 0x58, 0xC3, 0x20, 0xE8,
+0xFD, 0x63, 0x05, 0x62, 0x30, 0xF0, 0x20, 0x6A,
+0x4E, 0xF2, 0x4C, 0x9A, 0x30, 0xF0, 0x20, 0x6C,
+0x69, 0xF2, 0x06, 0x4C, 0x00, 0x6D, 0x07, 0x6E,
+0x40, 0xEA, 0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1,
+0x08, 0x4A, 0x08, 0x6B, 0x89, 0xF0, 0x7F, 0xC2,
+0x03, 0x6B, 0xA9, 0xF0, 0x60, 0xC2, 0x05, 0x97,
+0x03, 0x63, 0x00, 0xEF, 0xFD, 0x63, 0x05, 0x62,
+0x04, 0xD0, 0x04, 0x67, 0x80, 0x18, 0xA8, 0x07,
+0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A,
+0x80, 0xA0, 0x89, 0xF0, 0xDE, 0xA2, 0x02, 0x6B,
+0x01, 0x6D, 0x6B, 0xEB, 0xAC, 0xEC, 0xCC, 0xEB,
+0x8D, 0xEB, 0x83, 0x67, 0xAC, 0xEC, 0x89, 0xF0,
+0x7E, 0xC2, 0x2B, 0x24, 0x80, 0xA0, 0x07, 0x6E,
+0x92, 0x34, 0xCC, 0xEC, 0x30, 0xF0, 0x20, 0x6E,
+0x4F, 0xF6, 0x8E, 0xC6, 0xC0, 0xA0, 0x02, 0x6C,
+0xCC, 0xEC, 0xFF, 0x6E, 0xCC, 0xEC, 0x1D, 0x24,
+0x81, 0xA0, 0x89, 0xF0, 0x9F, 0xC2, 0x82, 0xA0,
+0xA9, 0xF0, 0x80, 0xC2, 0x80, 0xA0, 0x8A, 0x34,
+0xAC, 0xEC, 0x88, 0x36, 0x05, 0x6C, 0x8B, 0xEC,
+0x6C, 0xEC, 0xCD, 0xEC, 0x89, 0xF0, 0x9E, 0xC2,
+0x63, 0xA0, 0xA9, 0xF0, 0x61, 0xC2, 0x60, 0xA0,
+0x6E, 0x33, 0xAC, 0xEB, 0x6C, 0x35, 0x09, 0x6B,
+0x6B, 0xEB, 0x8C, 0xEB, 0xAD, 0xEB, 0x89, 0xF0,
+0x7E, 0xC2, 0x05, 0x97, 0x04, 0x90, 0x03, 0x63,
+0x00, 0xEF, 0x00, 0x65, 0xFD, 0x63, 0x05, 0x62,
+0x10, 0xF0, 0x24, 0x6B, 0xF6, 0xF3, 0x68, 0x9B,
+0xFF, 0x6A, 0x8C, 0xEA, 0x60, 0xAB, 0xE1, 0xF7,
+0x1F, 0x6C, 0x30, 0xF0, 0x20, 0x6E, 0x6C, 0xEC,
+0x91, 0xE2, 0x30, 0xF0, 0x20, 0x6A, 0xCE, 0xF4,
+0x44, 0x9A, 0x9C, 0x34, 0x70, 0x6D, 0xE8, 0xF5,
+0x14, 0x4E, 0x40, 0xEA, 0x05, 0x97, 0x03, 0x63,
+0x00, 0xEF, 0x00, 0x65, 0xFD, 0x63, 0x05, 0x62,
+0xFF, 0x6A, 0x8C, 0xEA, 0x06, 0x22, 0x30, 0xF0,
+0x20, 0x6A, 0x49, 0xF2, 0x89, 0xA2, 0x80, 0x18,
+0xD9, 0x07, 0x05, 0x97, 0x03, 0x63, 0x00, 0xEF,
+0xFB, 0x63, 0x09, 0x62, 0x08, 0xD1, 0x07, 0xD0,
+0xFF, 0x6A, 0xEC, 0xEA, 0x30, 0xF0, 0x20, 0x6B,
+0x04, 0xD2, 0x30, 0xF0, 0x20, 0x68, 0x4E, 0xF2,
+0x50, 0x9B, 0x68, 0xF6, 0x04, 0x48, 0x26, 0x67,
+0x0A, 0xD4, 0x10, 0x6E, 0x90, 0x67, 0x40, 0xEA,
+0x30, 0xF0, 0x20, 0x6C, 0x0A, 0x95, 0x4E, 0xF2,
+0x50, 0x9C, 0x87, 0x40, 0x09, 0x4C, 0x10, 0x6E,
+0x40, 0xEA, 0x00, 0xF6, 0x22, 0x34, 0x00, 0xF6,
+0x20, 0x32, 0x8D, 0xEA, 0x1F, 0xF7, 0x00, 0x6D,
+0x22, 0x34, 0xAC, 0xEC, 0x8D, 0xEA, 0x10, 0xF0,
+0x24, 0x6C, 0x36, 0xF4, 0x90, 0x9C, 0x20, 0x31,
+0x30, 0xF0, 0x20, 0x6B, 0x8C, 0xE9, 0xC0, 0xF1,
+0x08, 0x4B, 0x2D, 0xEA, 0xA8, 0xF4, 0x5C, 0xDB,
+0x5D, 0x67, 0x87, 0x42, 0x09, 0x4C, 0x40, 0xA4,
+0xC8, 0xF4, 0x43, 0xC3, 0x09, 0x97, 0x08, 0x91,
+0x07, 0x90, 0x05, 0x63, 0x00, 0xEF, 0x00, 0x65,
+0xFA, 0x63, 0x0B, 0x62, 0x0A, 0xD1, 0x09, 0xD0,
+0xFF, 0x6A, 0x4C, 0xEC, 0x11, 0x6B, 0x8E, 0xEB,
+0x05, 0x67, 0x0D, 0x23, 0x3A, 0x6A, 0x8E, 0xEA,
+0x3A, 0x22, 0x54, 0x2C, 0x10, 0xF0, 0x24, 0x6A,
+0x16, 0xF4, 0x54, 0x9A, 0x27, 0x45, 0x03, 0x49,
+0x49, 0xE1, 0x80, 0xCA, 0x54, 0x10, 0x87, 0x45,
+0x27, 0x45, 0x10, 0xF0, 0x24, 0x6D, 0x16, 0xF4,
+0xB4, 0x9D, 0x13, 0x49, 0x0D, 0x4C, 0xB5, 0xE1,
+0x60, 0xCD, 0x10, 0xF0, 0x24, 0x6B, 0x36, 0xF4,
+0x74, 0x9B, 0x10, 0xF0, 0x24, 0x6D, 0x36, 0xF4,
+0xB8, 0x9D, 0x6D, 0xE4, 0x60, 0xA3, 0xB5, 0xE4,
+0xA0, 0xA5, 0x4C, 0xEB, 0x60, 0x33, 0xAC, 0xEA,
+0x6D, 0xE2, 0xFF, 0xF7, 0x1F, 0x6A, 0x4C, 0xEB,
+0x30, 0xF0, 0x20, 0x6A, 0x2E, 0xF4, 0x5C, 0x9A,
+0xA3, 0x67, 0x06, 0xD3, 0x40, 0xEA, 0x04, 0xD2,
+0xC7, 0x40, 0x30, 0xF0, 0x20, 0x6A, 0xE7, 0x40,
+0x4E, 0xF4, 0x40, 0x9A, 0x11, 0x6C, 0x06, 0x95,
+0x05, 0x4E, 0x09, 0x4F, 0x34, 0x10, 0x10, 0xF0,
+0x24, 0x6B, 0x16, 0xF4, 0x74, 0x9B, 0x27, 0x45,
+0x23, 0x49, 0x6D, 0xE1, 0x40, 0xCB, 0x30, 0xF0,
+0x20, 0x6A, 0x2E, 0xF4, 0x5C, 0x9A, 0x85, 0x67,
+0x48, 0x6D, 0x40, 0xEA, 0x42, 0x34, 0xFF, 0xF7,
+0x1F, 0x6B, 0x82, 0x34, 0x6C, 0xEA, 0x89, 0xE2,
+0x42, 0x34, 0x82, 0x34, 0x49, 0xE4, 0x4F, 0xEA,
+0x6C, 0xEA, 0x1A, 0x10, 0x10, 0xF0, 0x24, 0x6A,
+0x16, 0xF4, 0x54, 0x9A, 0x27, 0x45, 0x03, 0x49,
+0x49, 0xE1, 0x00, 0x6B, 0x60, 0xCA, 0x30, 0xF0,
+0x20, 0x6A, 0x2E, 0xF4, 0x5C, 0x9A, 0x90, 0x67,
+0x14, 0x6D, 0x40, 0xEA, 0x04, 0xD2, 0x30, 0xF0,
+0x20, 0x6A, 0x4E, 0xF4, 0x40, 0x9A, 0x00, 0x6C,
+0x14, 0x6D, 0xC4, 0x67, 0xE4, 0x67, 0x40, 0xEA,
+0x10, 0xF0, 0x24, 0x6B, 0x16, 0xF4, 0xB4, 0x9B,
+0xFF, 0x6C, 0x42, 0x33, 0xB5, 0xE1, 0x8C, 0xEB,
+0x60, 0xC5, 0x10, 0xF0, 0x24, 0x6B, 0x16, 0xF4,
+0x78, 0x9B, 0x8C, 0xEA, 0x65, 0xE1, 0x40, 0xC1,
+0x0B, 0x97, 0x0A, 0x91, 0x09, 0x90, 0x06, 0x63,
 0x00, 0xEF, 0x00, 0x65, 0xFA, 0x63, 0x0B, 0x62,
-0x0A, 0xD1, 0x09, 0xD0, 0xFF, 0x6A, 0x4C, 0xEC,
-0x11, 0x6B, 0x8E, 0xEB, 0x05, 0x67, 0x0D, 0x23,
-0x3A, 0x6A, 0x8E, 0xEA, 0x3A, 0x22, 0x54, 0x2C,
-0x10, 0xF0, 0x24, 0x6A, 0xF6, 0xF5, 0x58, 0x9A,
-0x27, 0x45, 0x03, 0x49, 0x49, 0xE1, 0x80, 0xCA,
-0x54, 0x10, 0x87, 0x45, 0x27, 0x45, 0x10, 0xF0,
-0x24, 0x6D, 0xF6, 0xF5, 0xB8, 0x9D, 0x13, 0x49,
-0x0D, 0x4C, 0xB5, 0xE1, 0x60, 0xCD, 0x10, 0xF0,
-0x24, 0x6B, 0x16, 0xF6, 0x78, 0x9B, 0x10, 0xF0,
-0x24, 0x6D, 0x16, 0xF6, 0xBC, 0x9D, 0x6D, 0xE4,
-0x60, 0xA3, 0xB5, 0xE4, 0xA0, 0xA5, 0x4C, 0xEB,
-0x60, 0x33, 0xAC, 0xEA, 0x6D, 0xE2, 0xFF, 0xF7,
-0x1F, 0x6A, 0x4C, 0xEB, 0x30, 0xF0, 0x20, 0x6A,
-0x2E, 0xF4, 0x5C, 0x9A, 0xA3, 0x67, 0x06, 0xD3,
-0x40, 0xEA, 0x04, 0xD2, 0xC7, 0x40, 0x30, 0xF0,
-0x20, 0x6A, 0xE7, 0x40, 0x4E, 0xF4, 0x40, 0x9A,
-0x11, 0x6C, 0x06, 0x95, 0x05, 0x4E, 0x09, 0x4F,
-0x34, 0x10, 0x10, 0xF0, 0x24, 0x6B, 0xF6, 0xF5,
-0x78, 0x9B, 0x27, 0x45, 0x23, 0x49, 0x6D, 0xE1,
-0x40, 0xCB, 0x30, 0xF0, 0x20, 0x6A, 0x2E, 0xF4,
-0x5C, 0x9A, 0x85, 0x67, 0x48, 0x6D, 0x40, 0xEA,
-0x42, 0x34, 0xFF, 0xF7, 0x1F, 0x6B, 0x82, 0x34,
-0x6C, 0xEA, 0x89, 0xE2, 0x42, 0x34, 0x82, 0x34,
-0x49, 0xE4, 0x4F, 0xEA, 0x6C, 0xEA, 0x1A, 0x10,
-0x10, 0xF0, 0x24, 0x6A, 0xF6, 0xF5, 0x58, 0x9A,
-0x27, 0x45, 0x03, 0x49, 0x49, 0xE1, 0x00, 0x6B,
-0x60, 0xCA, 0x30, 0xF0, 0x20, 0x6A, 0x2E, 0xF4,
-0x5C, 0x9A, 0x90, 0x67, 0x14, 0x6D, 0x40, 0xEA,
-0x04, 0xD2, 0x30, 0xF0, 0x20, 0x6A, 0x4E, 0xF4,
-0x40, 0x9A, 0x00, 0x6C, 0x14, 0x6D, 0xC4, 0x67,
-0xE4, 0x67, 0x40, 0xEA, 0x10, 0xF0, 0x24, 0x6B,
-0xF6, 0xF5, 0xB8, 0x9B, 0xFF, 0x6C, 0x42, 0x33,
-0xB5, 0xE1, 0x8C, 0xEB, 0x60, 0xC5, 0x10, 0xF0,
-0x24, 0x6B, 0xF6, 0xF5, 0x7C, 0x9B, 0x8C, 0xEA,
-0x65, 0xE1, 0x40, 0xC1, 0x0B, 0x97, 0x0A, 0x91,
+0x0A, 0xD1, 0x09, 0xD0, 0x00, 0xF0, 0x16, 0x02,
+0x04, 0x44, 0x04, 0x01, 0x06, 0xD2, 0x30, 0xF0,
+0x20, 0x6A, 0xCE, 0xF4, 0x4C, 0x9A, 0x90, 0x67,
+0x01, 0x48, 0x40, 0xEA, 0x06, 0x93, 0x40, 0xC1,
+0x01, 0x49, 0x6A, 0xE9, 0xF4, 0x61, 0x00, 0x6A,
+0x7D, 0x67, 0x51, 0xE3, 0x30, 0xF0, 0x20, 0x6B,
+0xC0, 0xF1, 0x08, 0x4B, 0x4D, 0xE3, 0x90, 0xA4,
+0x08, 0xF4, 0x62, 0xA3, 0x8E, 0xEB, 0x02, 0x23,
+0x00, 0x6A, 0x04, 0x10, 0x01, 0x4A, 0x06, 0x72,
+0xEF, 0x61, 0x01, 0x6A, 0x0B, 0x97, 0x0A, 0x91,
 0x09, 0x90, 0x06, 0x63, 0x00, 0xEF, 0x00, 0x65,
 0xFA, 0x63, 0x0B, 0x62, 0x0A, 0xD1, 0x09, 0xD0,
-0x00, 0xF0, 0x16, 0x02, 0x04, 0x44, 0x04, 0x01,
+0x07, 0x44, 0x00, 0xF0, 0x16, 0x02, 0x09, 0x48,
+0x04, 0x01, 0x06, 0xD2, 0x30, 0xF0, 0x20, 0x6A,
+0xCE, 0xF4, 0x4C, 0x9A, 0x90, 0x67, 0x01, 0x48,
+0x40, 0xEA, 0x06, 0x93, 0x40, 0xC1, 0x01, 0x49,
+0x6A, 0xE9, 0xF4, 0x61, 0x00, 0x6A, 0x7D, 0x67,
+0x51, 0xE3, 0x30, 0xF0, 0x20, 0x6B, 0xC0, 0xF1,
+0x08, 0x4B, 0x4D, 0xE3, 0x90, 0xA4, 0x08, 0xF4,
+0x68, 0xA3, 0x8E, 0xEB, 0x02, 0x23, 0x00, 0x6A,
+0x04, 0x10, 0x01, 0x4A, 0x06, 0x72, 0xEF, 0x61,
+0x01, 0x6A, 0x0B, 0x97, 0x0A, 0x91, 0x09, 0x90,
+0x06, 0x63, 0x00, 0xEF, 0xFC, 0x63, 0x07, 0x62,
+0x06, 0xD1, 0x05, 0xD0, 0x30, 0xF0, 0x20, 0x68,
+0x08, 0x4C, 0xCE, 0xF4, 0x4C, 0x98, 0xA5, 0xE4,
+0x81, 0x41, 0x40, 0xEA, 0x10, 0x2A, 0xCE, 0xF4,
+0x4C, 0x98, 0x84, 0x41, 0x40, 0xEA, 0x01, 0x72,
+0x0A, 0x61, 0xCE, 0xF4, 0x4C, 0x98, 0x87, 0x41,
+0x01, 0x4C, 0x40, 0xEA, 0x01, 0x6B, 0x6E, 0xEA,
+0x01, 0x5A, 0x58, 0x67, 0x01, 0x10, 0x00, 0x6A,
+0x07, 0x97, 0x06, 0x91, 0x05, 0x90, 0x04, 0x63,
+0x00, 0xEF, 0x00, 0x65, 0xFA, 0x63, 0x0B, 0x62,
+0x0A, 0xD1, 0x09, 0xD0, 0x30, 0xF0, 0x20, 0x68,
+0xCE, 0xF4, 0x4C, 0x98, 0x85, 0xE5, 0x86, 0x41,
+0x40, 0xEA, 0x08, 0x72, 0x34, 0x61, 0xCE, 0xF4,
+0x4C, 0x98, 0x87, 0x41, 0x40, 0xEA, 0x2F, 0x2A,
+0x07, 0x41, 0x05, 0x02, 0x11, 0x48, 0x04, 0x01,
 0x06, 0xD2, 0x30, 0xF0, 0x20, 0x6A, 0xCE, 0xF4,
 0x4C, 0x9A, 0x90, 0x67, 0x01, 0x48, 0x40, 0xEA,
-0x06, 0x93, 0x40, 0xC1, 0x01, 0x49, 0x6A, 0xE9,
-0xF4, 0x61, 0x00, 0x6A, 0x7D, 0x67, 0x51, 0xE3,
-0x30, 0xF0, 0x20, 0x6B, 0xC0, 0xF1, 0x08, 0x4B,
-0x4D, 0xE3, 0x90, 0xA4, 0x08, 0xF4, 0x62, 0xA3,
-0x8E, 0xEB, 0x02, 0x23, 0x00, 0x6A, 0x04, 0x10,
-0x01, 0x4A, 0x06, 0x72, 0xEF, 0x61, 0x01, 0x6A,
+0x40, 0xC1, 0x06, 0x92, 0x01, 0x49, 0x4A, 0xE9,
+0xF4, 0x61, 0x30, 0xF0, 0x20, 0x6B, 0x5D, 0x67,
+0xC0, 0xF1, 0x08, 0x4B, 0x90, 0xA2, 0x08, 0xF4,
+0x5E, 0xA3, 0x8E, 0xEA, 0x14, 0x2A, 0x5D, 0x67,
+0x91, 0xA2, 0x08, 0xF4, 0x5F, 0xA3, 0x8E, 0xEA,
+0x0E, 0x2A, 0x5D, 0x67, 0x92, 0xA2, 0x28, 0xF4,
+0x40, 0xA3, 0x8E, 0xEA, 0x08, 0x2A, 0x5D, 0x67,
+0x93, 0xA2, 0x28, 0xF4, 0x41, 0xA3, 0x8E, 0xEA,
+0x01, 0x5A, 0x58, 0x67, 0x01, 0x10, 0x00, 0x6A,
 0x0B, 0x97, 0x0A, 0x91, 0x09, 0x90, 0x06, 0x63,
-0x00, 0xEF, 0x00, 0x65, 0xFA, 0x63, 0x0B, 0x62,
-0x0A, 0xD1, 0x09, 0xD0, 0x07, 0x44, 0x00, 0xF0,
-0x16, 0x02, 0x09, 0x48, 0x04, 0x01, 0x06, 0xD2,
-0x30, 0xF0, 0x20, 0x6A, 0xCE, 0xF4, 0x4C, 0x9A,
-0x90, 0x67, 0x01, 0x48, 0x40, 0xEA, 0x06, 0x93,
-0x40, 0xC1, 0x01, 0x49, 0x6A, 0xE9, 0xF4, 0x61,
-0x00, 0x6A, 0x7D, 0x67, 0x51, 0xE3, 0x30, 0xF0,
-0x20, 0x6B, 0xC0, 0xF1, 0x08, 0x4B, 0x4D, 0xE3,
-0x90, 0xA4, 0x08, 0xF4, 0x68, 0xA3, 0x8E, 0xEB,
-0x02, 0x23, 0x00, 0x6A, 0x04, 0x10, 0x01, 0x4A,
-0x06, 0x72, 0xEF, 0x61, 0x01, 0x6A, 0x0B, 0x97,
-0x0A, 0x91, 0x09, 0x90, 0x06, 0x63, 0x00, 0xEF,
-0xFC, 0x63, 0x07, 0x62, 0x06, 0xD1, 0x05, 0xD0,
-0x30, 0xF0, 0x20, 0x68, 0x08, 0x4C, 0xCE, 0xF4,
-0x4C, 0x98, 0xA5, 0xE4, 0x81, 0x41, 0x40, 0xEA,
-0x10, 0x2A, 0xCE, 0xF4, 0x4C, 0x98, 0x84, 0x41,
-0x40, 0xEA, 0x01, 0x72, 0x0A, 0x61, 0xCE, 0xF4,
-0x4C, 0x98, 0x87, 0x41, 0x01, 0x4C, 0x40, 0xEA,
-0x01, 0x6B, 0x6E, 0xEA, 0x01, 0x5A, 0x58, 0x67,
-0x01, 0x10, 0x00, 0x6A, 0x07, 0x97, 0x06, 0x91,
-0x05, 0x90, 0x04, 0x63, 0x00, 0xEF, 0x00, 0x65,
-0xFA, 0x63, 0x0B, 0x62, 0x0A, 0xD1, 0x09, 0xD0,
-0x30, 0xF0, 0x20, 0x68, 0xCE, 0xF4, 0x4C, 0x98,
-0x85, 0xE5, 0x86, 0x41, 0x40, 0xEA, 0x08, 0x72,
-0x34, 0x61, 0xCE, 0xF4, 0x4C, 0x98, 0x87, 0x41,
-0x40, 0xEA, 0x2F, 0x2A, 0x07, 0x41, 0x05, 0x02,
-0x11, 0x48, 0x04, 0x01, 0x06, 0xD2, 0x30, 0xF0,
-0x20, 0x6A, 0xCE, 0xF4, 0x4C, 0x9A, 0x90, 0x67,
-0x01, 0x48, 0x40, 0xEA, 0x40, 0xC1, 0x06, 0x92,
-0x01, 0x49, 0x4A, 0xE9, 0xF4, 0x61, 0x30, 0xF0,
-0x20, 0x6B, 0x5D, 0x67, 0xC0, 0xF1, 0x08, 0x4B,
-0x90, 0xA2, 0x08, 0xF4, 0x5E, 0xA3, 0x8E, 0xEA,
-0x14, 0x2A, 0x5D, 0x67, 0x91, 0xA2, 0x08, 0xF4,
-0x5F, 0xA3, 0x8E, 0xEA, 0x0E, 0x2A, 0x5D, 0x67,
-0x92, 0xA2, 0x28, 0xF4, 0x40, 0xA3, 0x8E, 0xEA,
-0x08, 0x2A, 0x5D, 0x67, 0x93, 0xA2, 0x28, 0xF4,
-0x41, 0xA3, 0x8E, 0xEA, 0x01, 0x5A, 0x58, 0x67,
-0x01, 0x10, 0x00, 0x6A, 0x0B, 0x97, 0x0A, 0x91,
-0x09, 0x90, 0x06, 0x63, 0x00, 0xEF, 0x00, 0x65,
-0xFC, 0x63, 0x07, 0x62, 0x06, 0xD1, 0x05, 0xD0,
-0x04, 0x67, 0x25, 0x67, 0x80, 0x18, 0x44, 0x08,
-0x00, 0x6B, 0x08, 0x22, 0x90, 0x67, 0xB1, 0x67,
-0x80, 0x18, 0x84, 0x08, 0x4B, 0xEB, 0x4D, 0xEB,
-0xC0, 0xF7, 0x62, 0x33, 0x07, 0x97, 0x06, 0x91,
-0x05, 0x90, 0x43, 0x67, 0x04, 0x63, 0x00, 0xEF,
-0xFC, 0x63, 0x07, 0x62, 0x06, 0xD1, 0x05, 0xD0,
-0x24, 0x67, 0x05, 0x67, 0x80, 0x18, 0x44, 0x08,
-0x4D, 0x22, 0x91, 0x67, 0xB0, 0x67, 0x80, 0x18,
-0x84, 0x08, 0x48, 0x22, 0x30, 0xF0, 0x20, 0x6A,
-0xA8, 0xF5, 0x7C, 0xA2, 0x10, 0x6A, 0x08, 0x49,
-0x6C, 0xEA, 0x05, 0xE1, 0x1F, 0x22, 0x30, 0xF0,
-0x20, 0x68, 0xCE, 0xF4, 0x4C, 0x98, 0x87, 0x41,
-0x02, 0x4C, 0x40, 0xEA, 0x06, 0x72, 0x16, 0x61,
-0xCE, 0xF4, 0x4C, 0x98, 0x87, 0x41, 0x0D, 0x4C,
-0x40, 0xEA, 0x10, 0x2A, 0xCE, 0xF4, 0x4C, 0x98,
-0x87, 0x41, 0x0E, 0x4C, 0x40, 0xEA, 0x50, 0x72,
-0x09, 0x61, 0xCE, 0xF4, 0x4C, 0x98, 0x87, 0x41,
-0x1A, 0x4C, 0x40, 0xEA, 0x05, 0x6B, 0x4C, 0xEB,
-0x01, 0x6A, 0x21, 0x2B, 0x30, 0xF0, 0x20, 0x6A,
-0xA8, 0xF5, 0x7C, 0xA2, 0x04, 0x6A, 0x6C, 0xEA,
-0x19, 0x22, 0x30, 0xF0, 0x20, 0x68, 0xCE, 0xF4,
+0x00, 0xEF, 0x00, 0x65, 0xFC, 0x63, 0x07, 0x62,
+0x06, 0xD1, 0x05, 0xD0, 0x04, 0x67, 0x25, 0x67,
+0x80, 0x18, 0x57, 0x08, 0x00, 0x6B, 0x08, 0x22,
+0x90, 0x67, 0xB1, 0x67, 0x80, 0x18, 0x97, 0x08,
+0x4B, 0xEB, 0x4D, 0xEB, 0xC0, 0xF7, 0x62, 0x33,
+0x07, 0x97, 0x06, 0x91, 0x05, 0x90, 0x43, 0x67,
+0x04, 0x63, 0x00, 0xEF, 0xFC, 0x63, 0x07, 0x62,
+0x06, 0xD1, 0x05, 0xD0, 0x24, 0x67, 0x05, 0x67,
+0x80, 0x18, 0x57, 0x08, 0x4D, 0x22, 0x91, 0x67,
+0xB0, 0x67, 0x80, 0x18, 0x97, 0x08, 0x48, 0x22,
+0x30, 0xF0, 0x20, 0x6A, 0xA8, 0xF5, 0x7C, 0xA2,
+0x10, 0x6A, 0x08, 0x49, 0x6C, 0xEA, 0x05, 0xE1,
+0x1F, 0x22, 0x30, 0xF0, 0x20, 0x68, 0xCE, 0xF4,
 0x4C, 0x98, 0x87, 0x41, 0x02, 0x4C, 0x40, 0xEA,
-0x11, 0x72, 0x10, 0x61, 0xCE, 0xF4, 0x4C, 0x98,
-0x87, 0x41, 0x0F, 0x4C, 0x40, 0xEA, 0x0A, 0x2A,
-0xCE, 0xF4, 0x4C, 0x98, 0x87, 0x41, 0x10, 0x4C,
-0x40, 0xEA, 0x89, 0x6B, 0x6E, 0xEA, 0x01, 0x5A,
-0x58, 0x67, 0x01, 0x10, 0x00, 0x6A, 0x07, 0x97,
-0x06, 0x91, 0x05, 0x90, 0x04, 0x63, 0x00, 0xEF,
-0xF9, 0x63, 0x0D, 0x62, 0x0C, 0xD1, 0x0B, 0xD0,
-0x10, 0xF0, 0x24, 0x6A, 0xD6, 0xF5, 0x4C, 0x9A,
-0x0E, 0xD4, 0x0F, 0xD5, 0x60, 0xAA, 0xE1, 0xF7,
-0x1F, 0x6A, 0x6C, 0xEA, 0x30, 0xF0, 0x20, 0x6B,
-0x49, 0xF2, 0x73, 0xA3, 0x69, 0xE2, 0x00, 0x6B,
-0x5C, 0x32, 0x04, 0xD3, 0x93, 0x10, 0x10, 0xF0,
-0x24, 0x6C, 0xF6, 0xF5, 0x9C, 0x9C, 0x10, 0xF0,
-0x24, 0x6D, 0xF6, 0xF5, 0xB8, 0x9D, 0x91, 0xE2,
-0x80, 0xA4, 0xB5, 0xE2, 0xA0, 0xA5, 0x6C, 0xEC,
-0x80, 0x34, 0xAC, 0xEB, 0x91, 0xE3, 0x0E, 0x91,
-0xFF, 0xF7, 0x1F, 0x6B, 0x6C, 0xEC, 0x02, 0x4A,
-0x05, 0xD4, 0x91, 0xE2, 0x04, 0x49, 0x07, 0xD2,
-0x08, 0xD4, 0x00, 0x68, 0x66, 0x10, 0x12, 0x70,
-0x05, 0x61, 0x0E, 0x91, 0x0F, 0x95, 0x06, 0x49,
-0xA5, 0xE1, 0x06, 0x10, 0x14, 0x70, 0x04, 0x61,
-0x0E, 0x91, 0x0F, 0x92, 0x08, 0x49, 0x45, 0xE1,
-0x04, 0x32, 0x10, 0xF0, 0x24, 0x6D, 0x4E, 0x33,
-0xF6, 0xF5, 0x18, 0x4D, 0x09, 0xD3, 0xA0, 0x9D,
-0x08, 0x93, 0x07, 0x6C, 0x4C, 0xEC, 0xA9, 0xE3,
-0x09, 0x93, 0x06, 0xD4, 0x06, 0x95, 0x69, 0xE2,
-0x60, 0xA2, 0xFF, 0x6C, 0x01, 0x6A, 0x44, 0xED,
-0x8C, 0xEB, 0x4C, 0xEB, 0x6E, 0xEA, 0x15, 0x2A,
-0x30, 0xF0, 0x20, 0x6A, 0xCE, 0xF4, 0x4C, 0x9A,
-0x91, 0x67, 0x40, 0xEA, 0x10, 0xF0, 0x24, 0x6C,
-0xF6, 0xF5, 0x18, 0x4C, 0x07, 0x95, 0x80, 0x9C,
-0x8D, 0xE5, 0x0D, 0xE3, 0x60, 0xA3, 0xFF, 0x6D,
-0xAC, 0xEB, 0x4E, 0xEB, 0x0F, 0x6A, 0x4C, 0xEB,
-0x31, 0x2B, 0x10, 0xF0, 0x24, 0x6B, 0xF6, 0xF5,
-0x18, 0x4B, 0x08, 0x94, 0x60, 0x9B, 0xFF, 0x6D,
-0x69, 0xE4, 0x09, 0x94, 0x89, 0xE2, 0x06, 0x94,
-0x60, 0xA2, 0x01, 0x6A, 0x01, 0x4C, 0x44, 0xEC,
-0xAC, 0xEB, 0x4C, 0xEB, 0x6E, 0xEA, 0x15, 0x2A,
-0x30, 0xF0, 0x20, 0x6A, 0xCE, 0xF4, 0x4C, 0x9A,
-0x91, 0x67, 0x40, 0xEA, 0x10, 0xF0, 0x24, 0x6C,
-0xF6, 0xF5, 0x18, 0x4C, 0x07, 0x95, 0x80, 0x9C,
-0x8D, 0xE5, 0x0D, 0xE3, 0x60, 0xA3, 0xFF, 0x6D,
-0xAC, 0xEB, 0x4E, 0xEB, 0xF0, 0x6A, 0x4C, 0xEB,
-0x09, 0x2B, 0x01, 0x48, 0xFF, 0x6A, 0x01, 0x49,
-0x4C, 0xE8, 0x05, 0x92, 0x43, 0xE8, 0x97, 0x61,
-0x01, 0x6A, 0x18, 0x10, 0x05, 0x94, 0x08, 0x93,
-0x04, 0x95, 0x84, 0x32, 0xFF, 0x4A, 0x01, 0x4B,
-0x4F, 0x32, 0x49, 0xE3, 0x01, 0x4D, 0xFF, 0x6B,
-0x6C, 0xED, 0x04, 0xD5, 0x30, 0xF0, 0x20, 0x6B,
-0xA8, 0xF5, 0xBE, 0xA3, 0x0F, 0x6C, 0xFF, 0x6B,
-0xAC, 0xEC, 0x04, 0x95, 0x82, 0xED, 0x7F, 0xF7,
-0x02, 0x61, 0x00, 0x6A, 0x0D, 0x97, 0x0C, 0x91,
-0x0B, 0x90, 0x07, 0x63, 0x00, 0xEF, 0x00, 0x65,
-0x01, 0x6A, 0x8C, 0xEA, 0x05, 0x2A, 0x30, 0xF0,
-0x20, 0x6A, 0x29, 0xF2, 0x7C, 0xA2, 0x04, 0x10,
-0x30, 0xF0, 0x20, 0x6A, 0x29, 0xF2, 0x7D, 0xA2,
-0x30, 0xF0, 0x20, 0x6A, 0x0F, 0xF6, 0x71, 0xC2,
-0x30, 0xF0, 0x20, 0x6A, 0x0F, 0xF6, 0x71, 0xA2,
-0x00, 0x6A, 0x07, 0x5B, 0x06, 0x60, 0x10, 0xF0,
-0x24, 0x6A, 0xB6, 0xF2, 0x10, 0x4A, 0x4D, 0xE3,
-0x40, 0xA3, 0x20, 0xE8, 0xFD, 0x63, 0x05, 0x62,
-0x04, 0xD0, 0xFF, 0x6A, 0x04, 0x67, 0x86, 0x67,
-0x4C, 0xE8, 0x4C, 0xED, 0x4C, 0xEC, 0x40, 0x6A,
-0x1E, 0x30, 0x4C, 0xED, 0x04, 0x30, 0x00, 0x6A,
-0x02, 0x25, 0x80, 0x18, 0x40, 0x09, 0x18, 0x48,
-0x09, 0xE2, 0x05, 0x97, 0x04, 0x90, 0xFF, 0x6B,
-0x6C, 0xEA, 0x03, 0x63, 0x00, 0xEF, 0x00, 0x65,
-0xFD, 0x63, 0x05, 0x62, 0x04, 0xD0, 0x10, 0xF0,
-0x24, 0x6B, 0xD6, 0xF5, 0x6C, 0x9B, 0xFF, 0x6A,
-0x4C, 0xEC, 0xA0, 0xAB, 0xE1, 0xF7, 0x1F, 0x6B,
-0xAC, 0xEB, 0x61, 0xE4, 0x10, 0xF0, 0x24, 0x6B,
-0x36, 0xF6, 0x70, 0x9B, 0x1C, 0x30, 0x6D, 0xE0,
-0x80, 0xA3, 0x10, 0xF0, 0x24, 0x6B, 0xB6, 0xF5,
-0x7C, 0x9B, 0x4C, 0xEC, 0x6D, 0xE0, 0xA0, 0xA3,
-0x10, 0xF0, 0x24, 0x6B, 0x36, 0xF6, 0x74, 0x9B,
-0x4C, 0xED, 0x6D, 0xE0, 0xC0, 0xA3, 0x4C, 0xEE,
-0x80, 0x18, 0x4F, 0x09, 0x10, 0xF0, 0x24, 0x6C,
-0x10, 0xF0, 0x24, 0x6B, 0x36, 0xF6, 0x8C, 0x9C,
-0x36, 0xF6, 0xA8, 0x9B, 0x30, 0xF0, 0x20, 0x6B,
-0xE8, 0xF5, 0x00, 0x4B, 0x91, 0xE0, 0xB5, 0xE0,
-0x51, 0xE4, 0xC6, 0x43, 0xE0, 0xA5, 0x01, 0x4D,
-0xE0, 0xC3, 0xE0, 0xA4, 0x01, 0x4C, 0xEA, 0xC3,
-0x01, 0x4B, 0xCA, 0xEB, 0xF7, 0x61, 0x10, 0xF0,
-0x24, 0x6B, 0x36, 0xF6, 0x60, 0x9B, 0x61, 0xE0,
-0x30, 0xF0, 0x20, 0x6B, 0xE8, 0xF5, 0x06, 0x4B,
-0x41, 0xE0, 0x44, 0x43, 0x80, 0xA0, 0x80, 0xC3,
-0x87, 0x40, 0x03, 0x4C, 0x80, 0xA4, 0x01, 0x48,
-0x8A, 0xC3, 0x01, 0x4B, 0x4A, 0xEB, 0xF6, 0x61,
-0x05, 0x97, 0x04, 0x90, 0x03, 0x63, 0x00, 0xEF,
-0xFD, 0x63, 0x05, 0x62, 0xFF, 0x6A, 0x8C, 0xEA,
-0x06, 0x22, 0x30, 0xF0, 0x20, 0x6A, 0x49, 0xF2,
-0x84, 0xA2, 0x80, 0x18, 0x5C, 0x09, 0x05, 0x97,
-0x03, 0x63, 0x00, 0xEF, 0xFC, 0x63, 0x07, 0x62,
-0x06, 0xD1, 0x05, 0xD0, 0x30, 0xF0, 0x20, 0x6A,
-0xCF, 0xF5, 0x13, 0x4A, 0xFF, 0x69, 0x67, 0x42,
-0x2C, 0xED, 0x01, 0x4B, 0xCC, 0xE9, 0x00, 0x6E,
-0xC0, 0xC2, 0x01, 0x4A, 0x6A, 0xEA, 0xFB, 0x61,
-0x91, 0xE5, 0x30, 0xF0, 0x20, 0x68, 0x27, 0xE4,
-0xCF, 0xF5, 0x13, 0x48, 0x30, 0xF0, 0x20, 0x6A,
-0xCE, 0xF4, 0x4C, 0x9A, 0x91, 0x67, 0x01, 0x49,
-0x40, 0xEA, 0x40, 0xC0, 0x30, 0xF0, 0x20, 0x6A,
-0x01, 0x48, 0xCF, 0xF5, 0x1B, 0x4A, 0x4A, 0xE8,
-0xF1, 0x61, 0x07, 0x97, 0x06, 0x91, 0x05, 0x90,
-0x04, 0x63, 0x00, 0xEF, 0x30, 0xF0, 0x20, 0x6B,
-0xC8, 0xF5, 0xC9, 0xA3, 0x01, 0x6B, 0xFF, 0x6A,
-0xCC, 0xEB, 0x4C, 0xEB, 0x4C, 0xEC, 0x4C, 0xED,
-0x01, 0x6A, 0x45, 0x2B, 0x02, 0x6A, 0xAC, 0xEA,
-0x12, 0x22, 0x10, 0xF0, 0x24, 0x6A, 0x36, 0xF6,
-0x78, 0x9A, 0x10, 0xF0, 0x00, 0x6E, 0x40, 0x9B,
-0xCC, 0xEA, 0x09, 0x22, 0x10, 0xF0, 0x24, 0x6A,
-0x16, 0xF6, 0x50, 0x9A, 0xC0, 0xDB, 0x23, 0x6B,
-0x60, 0xC2, 0x01, 0x6A, 0x01, 0x10, 0x00, 0x6A,
-0x01, 0x6B, 0xAC, 0xEB, 0x2C, 0x23, 0x40, 0x6B,
-0x8C, 0xEB, 0x0C, 0x23, 0x10, 0xF0, 0x24, 0x6A,
-0x16, 0xF6, 0x50, 0x9A, 0x22, 0x6B, 0x60, 0xC2,
-0x10, 0xF0, 0x24, 0x6A, 0x36, 0xF6, 0x5C, 0x9A,
-0x80, 0xC2, 0x01, 0x6A, 0x9E, 0x33, 0x0C, 0x23,
-0x10, 0xF0, 0x24, 0x6A, 0x16, 0xF6, 0x50, 0x9A,
-0x21, 0x6B, 0x60, 0xC2, 0x10, 0xF0, 0x24, 0x6A,
-0x36, 0xF6, 0x5C, 0x9A, 0x80, 0xC2, 0x01, 0x6A,
-0x20, 0x6B, 0x8C, 0xEB, 0x0C, 0x23, 0x10, 0xF0,
-0x24, 0x6A, 0x16, 0xF6, 0x50, 0x9A, 0x23, 0x6B,
-0x60, 0xC2, 0x10, 0xF0, 0x24, 0x6A, 0x36, 0xF6,
-0x5C, 0x9A, 0x80, 0xC2, 0x01, 0x6A, 0x20, 0xE8,
-0xFF, 0x6A, 0x8C, 0xEA, 0xA0, 0x72, 0x04, 0x6B,
-0x01, 0x60, 0x08, 0x6B, 0x10, 0xF0, 0x24, 0x6A,
-0x16, 0xF6, 0x50, 0x9A, 0x60, 0xC2, 0x30, 0xF0,
-0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A, 0x08, 0xF4,
-0x81, 0xA2, 0x01, 0x6B, 0x8D, 0xEB, 0x08, 0xF4,
-0x61, 0xC2, 0x20, 0xE8, 0x30, 0xF0, 0x20, 0x6B,
-0xC0, 0xF1, 0x08, 0x4B, 0x08, 0xF4, 0xA1, 0xA3,
-0x01, 0x6C, 0x44, 0x67, 0x8C, 0xED, 0x04, 0x25,
-0xE8, 0xF3, 0x5A, 0xA3, 0x52, 0x32, 0x8C, 0xEA,
-0x20, 0xE8, 0x00, 0x65, 0xF8, 0x63, 0x0F, 0x62,
-0x0E, 0xD1, 0x0D, 0xD0, 0x10, 0xF0, 0x24, 0x6B,
-0xFF, 0x6A, 0xD6, 0xF5, 0x6C, 0x9B, 0x4C, 0xED,
-0x0B, 0xD5, 0x04, 0x67, 0x80, 0xAB, 0xE1, 0xF7,
-0x1F, 0x6B, 0x4C, 0xE8, 0x8C, 0xEB, 0x6D, 0xE0,
-0x7C, 0x33, 0x0A, 0xD3, 0x10, 0xF0, 0x24, 0x6B,
-0x0A, 0x94, 0xF6, 0xF5, 0x78, 0x9B, 0x6D, 0xE4,
-0x20, 0xA3, 0x10, 0xF0, 0x24, 0x6B, 0xF6, 0xF5,
-0x7C, 0x9B, 0x4C, 0xE9, 0x6D, 0xE4, 0x60, 0xA3,
-0x6C, 0xEA, 0x40, 0x32, 0x45, 0xE1, 0xE7, 0xF7,
-0x1F, 0x6A, 0x4C, 0xE9, 0x10, 0xF0, 0x24, 0x6B,
-0x10, 0xF0, 0x24, 0x6A, 0x56, 0xF6, 0x40, 0x9A,
-0x36, 0xF6, 0x70, 0x9B, 0x49, 0xE4, 0x6D, 0xE4,
-0x29, 0xE2, 0x2D, 0xE3, 0x00, 0x6C, 0x80, 0xC2,
-0x01, 0x4A, 0x6A, 0xEA, 0xFB, 0x61, 0x01, 0x6A,
-0x04, 0xD2, 0x30, 0xF0, 0x20, 0x6A, 0x8E, 0xF4,
-0x54, 0x9A, 0x0B, 0x97, 0xFF, 0xF7, 0x1F, 0x6B,
-0xC8, 0x41, 0x0A, 0x6D, 0x10, 0x6C, 0x6C, 0xEE,
-0x40, 0xEA, 0x30, 0xF0, 0x20, 0x6A, 0x49, 0xF2,
-0xA7, 0xA2, 0x03, 0xED, 0x1B, 0x60, 0x10, 0xF0,
-0x24, 0x6A, 0xD6, 0xF5, 0x4C, 0x9A, 0xB3, 0xE0,
-0x9C, 0x34, 0x60, 0xAA, 0x0B, 0x92, 0x30, 0x4C,
-0x5B, 0xE1, 0xE1, 0xF7, 0x1F, 0x6A, 0x6C, 0xEA,
-0xB5, 0xE2, 0xFF, 0xF7, 0x1F, 0x6B, 0xB0, 0x35,
-0x6C, 0xED, 0x30, 0xF0, 0x20, 0x6A, 0x04, 0xD5,
-0xF8, 0x4E, 0x8E, 0xF4, 0x50, 0x9A, 0x6C, 0xEC,
-0x38, 0x6D, 0x1F, 0x10, 0x10, 0xF0, 0x24, 0x6A,
-0xD6, 0xF5, 0x4C, 0x9A, 0x0B, 0x94, 0x17, 0xE5,
-0x60, 0xAA, 0xE1, 0xF7, 0x1F, 0x6A, 0xBC, 0x35,
-0x6C, 0xEA, 0x49, 0xE0, 0x5C, 0x32, 0x08, 0x6B,
-0x7A, 0xEA, 0x01, 0x2B, 0xE5, 0xE8, 0xFF, 0xF7,
-0x1F, 0x6B, 0x9B, 0xE1, 0x38, 0x4D, 0xF8, 0x4E,
-0x30, 0x6C, 0x6C, 0xED, 0x12, 0xEA, 0x6C, 0xEA,
-0x04, 0xD2, 0x30, 0xF0, 0x20, 0x6A, 0x8E, 0xF4,
-0x50, 0x9A, 0xFF, 0x6B, 0x6C, 0xEE, 0x08, 0x6F,
-0x40, 0xEA, 0x30, 0xF0, 0x20, 0x6A, 0x4E, 0xF2,
-0x50, 0x9A, 0x30, 0xF0, 0x20, 0x6D, 0x08, 0x04,
-0xC8, 0xF6, 0x04, 0x4D, 0x08, 0x6E, 0x40, 0xEA,
-0x30, 0xF0, 0x20, 0x6A, 0x8E, 0xF4, 0x44, 0x9A,
-0x06, 0x00, 0x08, 0x04, 0x00, 0x6D, 0xD0, 0x67,
-0x08, 0x6F, 0x40, 0xEA, 0x10, 0xF0, 0x24, 0x6A,
-0x56, 0xF6, 0x40, 0x9A, 0x0A, 0x94, 0x49, 0xE4,
-0x25, 0xE2, 0x08, 0x02, 0x60, 0xA0, 0x01, 0x48,
-0x4A, 0xE8, 0x60, 0xC1, 0x01, 0x49, 0xFA, 0x61,
-0x0F, 0x97, 0x0E, 0x91, 0x0D, 0x90, 0x08, 0x63,
+0x06, 0x72, 0x16, 0x61, 0xCE, 0xF4, 0x4C, 0x98,
+0x87, 0x41, 0x0D, 0x4C, 0x40, 0xEA, 0x10, 0x2A,
+0xCE, 0xF4, 0x4C, 0x98, 0x87, 0x41, 0x0E, 0x4C,
+0x40, 0xEA, 0x50, 0x72, 0x09, 0x61, 0xCE, 0xF4,
+0x4C, 0x98, 0x87, 0x41, 0x1A, 0x4C, 0x40, 0xEA,
+0x05, 0x6B, 0x4C, 0xEB, 0x01, 0x6A, 0x21, 0x2B,
+0x30, 0xF0, 0x20, 0x6A, 0xA8, 0xF5, 0x7C, 0xA2,
+0x04, 0x6A, 0x6C, 0xEA, 0x19, 0x22, 0x30, 0xF0,
+0x20, 0x68, 0xCE, 0xF4, 0x4C, 0x98, 0x87, 0x41,
+0x02, 0x4C, 0x40, 0xEA, 0x11, 0x72, 0x10, 0x61,
+0xCE, 0xF4, 0x4C, 0x98, 0x87, 0x41, 0x0F, 0x4C,
+0x40, 0xEA, 0x0A, 0x2A, 0xCE, 0xF4, 0x4C, 0x98,
+0x87, 0x41, 0x10, 0x4C, 0x40, 0xEA, 0x89, 0x6B,
+0x6E, 0xEA, 0x01, 0x5A, 0x58, 0x67, 0x01, 0x10,
+0x00, 0x6A, 0x07, 0x97, 0x06, 0x91, 0x05, 0x90,
+0x04, 0x63, 0x00, 0xEF, 0xF9, 0x63, 0x0D, 0x62,
+0x0C, 0xD1, 0x0B, 0xD0, 0x10, 0xF0, 0x24, 0x6A,
+0xF6, 0xF3, 0x48, 0x9A, 0x0E, 0xD4, 0x0F, 0xD5,
+0x60, 0xAA, 0xE1, 0xF7, 0x1F, 0x6A, 0x6C, 0xEA,
+0x30, 0xF0, 0x20, 0x6B, 0x49, 0xF2, 0x73, 0xA3,
+0x69, 0xE2, 0x00, 0x6B, 0x5C, 0x32, 0x04, 0xD3,
+0x93, 0x10, 0x10, 0xF0, 0x24, 0x6C, 0x16, 0xF4,
+0x98, 0x9C, 0x10, 0xF0, 0x24, 0x6D, 0x16, 0xF4,
+0xB4, 0x9D, 0x91, 0xE2, 0x80, 0xA4, 0xB5, 0xE2,
+0xA0, 0xA5, 0x6C, 0xEC, 0x80, 0x34, 0xAC, 0xEB,
+0x91, 0xE3, 0x0E, 0x91, 0xFF, 0xF7, 0x1F, 0x6B,
+0x6C, 0xEC, 0x02, 0x4A, 0x05, 0xD4, 0x91, 0xE2,
+0x04, 0x49, 0x07, 0xD2, 0x08, 0xD4, 0x00, 0x68,
+0x66, 0x10, 0x12, 0x70, 0x05, 0x61, 0x0E, 0x91,
+0x0F, 0x95, 0x06, 0x49, 0xA5, 0xE1, 0x06, 0x10,
+0x14, 0x70, 0x04, 0x61, 0x0E, 0x91, 0x0F, 0x92,
+0x08, 0x49, 0x45, 0xE1, 0x04, 0x32, 0x10, 0xF0,
+0x24, 0x6D, 0x4E, 0x33, 0x16, 0xF4, 0x14, 0x4D,
+0x09, 0xD3, 0xA0, 0x9D, 0x08, 0x93, 0x07, 0x6C,
+0x4C, 0xEC, 0xA9, 0xE3, 0x09, 0x93, 0x06, 0xD4,
+0x06, 0x95, 0x69, 0xE2, 0x60, 0xA2, 0xFF, 0x6C,
+0x01, 0x6A, 0x44, 0xED, 0x8C, 0xEB, 0x4C, 0xEB,
+0x6E, 0xEA, 0x15, 0x2A, 0x30, 0xF0, 0x20, 0x6A,
+0xCE, 0xF4, 0x4C, 0x9A, 0x91, 0x67, 0x40, 0xEA,
+0x10, 0xF0, 0x24, 0x6C, 0x16, 0xF4, 0x14, 0x4C,
+0x07, 0x95, 0x80, 0x9C, 0x8D, 0xE5, 0x0D, 0xE3,
+0x60, 0xA3, 0xFF, 0x6D, 0xAC, 0xEB, 0x4E, 0xEB,
+0x0F, 0x6A, 0x4C, 0xEB, 0x31, 0x2B, 0x10, 0xF0,
+0x24, 0x6B, 0x16, 0xF4, 0x14, 0x4B, 0x08, 0x94,
+0x60, 0x9B, 0xFF, 0x6D, 0x69, 0xE4, 0x09, 0x94,
+0x89, 0xE2, 0x06, 0x94, 0x60, 0xA2, 0x01, 0x6A,
+0x01, 0x4C, 0x44, 0xEC, 0xAC, 0xEB, 0x4C, 0xEB,
+0x6E, 0xEA, 0x15, 0x2A, 0x30, 0xF0, 0x20, 0x6A,
+0xCE, 0xF4, 0x4C, 0x9A, 0x91, 0x67, 0x40, 0xEA,
+0x10, 0xF0, 0x24, 0x6C, 0x16, 0xF4, 0x14, 0x4C,
+0x07, 0x95, 0x80, 0x9C, 0x8D, 0xE5, 0x0D, 0xE3,
+0x60, 0xA3, 0xFF, 0x6D, 0xAC, 0xEB, 0x4E, 0xEB,
+0xF0, 0x6A, 0x4C, 0xEB, 0x09, 0x2B, 0x01, 0x48,
+0xFF, 0x6A, 0x01, 0x49, 0x4C, 0xE8, 0x05, 0x92,
+0x43, 0xE8, 0x97, 0x61, 0x01, 0x6A, 0x18, 0x10,
+0x05, 0x94, 0x08, 0x93, 0x04, 0x95, 0x84, 0x32,
+0xFF, 0x4A, 0x01, 0x4B, 0x4F, 0x32, 0x49, 0xE3,
+0x01, 0x4D, 0xFF, 0x6B, 0x6C, 0xED, 0x04, 0xD5,
+0x30, 0xF0, 0x20, 0x6B, 0xA8, 0xF5, 0xBE, 0xA3,
+0x0F, 0x6C, 0xFF, 0x6B, 0xAC, 0xEC, 0x04, 0x95,
+0x82, 0xED, 0x7F, 0xF7, 0x02, 0x61, 0x00, 0x6A,
+0x0D, 0x97, 0x0C, 0x91, 0x0B, 0x90, 0x07, 0x63,
+0x00, 0xEF, 0x00, 0x65, 0x01, 0x6A, 0x8C, 0xEA,
+0x05, 0x2A, 0x30, 0xF0, 0x20, 0x6A, 0x29, 0xF2,
+0x7C, 0xA2, 0x04, 0x10, 0x30, 0xF0, 0x20, 0x6A,
+0x29, 0xF2, 0x7D, 0xA2, 0x30, 0xF0, 0x20, 0x6A,
+0x0F, 0xF6, 0x71, 0xC2, 0x30, 0xF0, 0x20, 0x6A,
+0x0F, 0xF6, 0x71, 0xA2, 0x00, 0x6A, 0x07, 0x5B,
+0x06, 0x60, 0x10, 0xF0, 0x24, 0x6A, 0xD6, 0xF0,
+0x0C, 0x4A, 0x4D, 0xE3, 0x40, 0xA3, 0x20, 0xE8,
+0xFD, 0x63, 0x05, 0x62, 0x04, 0xD0, 0xFF, 0x6A,
+0x04, 0x67, 0x86, 0x67, 0x4C, 0xE8, 0x4C, 0xED,
+0x4C, 0xEC, 0x40, 0x6A, 0x1E, 0x30, 0x4C, 0xED,
+0x04, 0x30, 0x00, 0x6A, 0x02, 0x25, 0x80, 0x18,
+0x53, 0x09, 0x18, 0x48, 0x09, 0xE2, 0x05, 0x97,
+0x04, 0x90, 0xFF, 0x6B, 0x6C, 0xEA, 0x03, 0x63,
 0x00, 0xEF, 0x00, 0x65, 0xFD, 0x63, 0x05, 0x62,
-0x30, 0xF0, 0x20, 0x6A, 0x4E, 0xF2, 0x50, 0x9A,
-0x30, 0xF0, 0x20, 0x6C, 0x30, 0xF0, 0x20, 0x6D,
-0xEF, 0xF5, 0x08, 0x4C, 0xC8, 0xF6, 0x15, 0x4D,
+0x04, 0xD0, 0x10, 0xF0, 0x24, 0x6B, 0xF6, 0xF3,
+0x68, 0x9B, 0xFF, 0x6A, 0x4C, 0xEC, 0xA0, 0xAB,
+0xE1, 0xF7, 0x1F, 0x6B, 0xAC, 0xEB, 0x61, 0xE4,
+0x10, 0xF0, 0x24, 0x6B, 0x56, 0xF4, 0x6C, 0x9B,
+0x1C, 0x30, 0x6D, 0xE0, 0x80, 0xA3, 0x10, 0xF0,
+0x24, 0x6B, 0xD6, 0xF3, 0x78, 0x9B, 0x4C, 0xEC,
+0x6D, 0xE0, 0xA0, 0xA3, 0x10, 0xF0, 0x24, 0x6B,
+0x56, 0xF4, 0x70, 0x9B, 0x4C, 0xED, 0x6D, 0xE0,
+0xC0, 0xA3, 0x4C, 0xEE, 0x80, 0x18, 0x62, 0x09,
+0x10, 0xF0, 0x24, 0x6C, 0x10, 0xF0, 0x24, 0x6B,
+0x56, 0xF4, 0x88, 0x9C, 0x56, 0xF4, 0xA4, 0x9B,
+0x30, 0xF0, 0x20, 0x6B, 0xE8, 0xF5, 0x00, 0x4B,
+0x91, 0xE0, 0xB5, 0xE0, 0x51, 0xE4, 0xC6, 0x43,
+0xE0, 0xA5, 0x01, 0x4D, 0xE0, 0xC3, 0xE0, 0xA4,
+0x01, 0x4C, 0xEA, 0xC3, 0x01, 0x4B, 0xCA, 0xEB,
+0xF7, 0x61, 0x10, 0xF0, 0x24, 0x6B, 0x36, 0xF4,
+0x7C, 0x9B, 0x61, 0xE0, 0x30, 0xF0, 0x20, 0x6B,
+0xE8, 0xF5, 0x06, 0x4B, 0x41, 0xE0, 0x44, 0x43,
+0x80, 0xA0, 0x80, 0xC3, 0x87, 0x40, 0x03, 0x4C,
+0x80, 0xA4, 0x01, 0x48, 0x8A, 0xC3, 0x01, 0x4B,
+0x4A, 0xEB, 0xF6, 0x61, 0x05, 0x97, 0x04, 0x90,
+0x03, 0x63, 0x00, 0xEF, 0xFD, 0x63, 0x05, 0x62,
+0xFF, 0x6A, 0x8C, 0xEA, 0x06, 0x22, 0x30, 0xF0,
+0x20, 0x6A, 0x49, 0xF2, 0x84, 0xA2, 0x80, 0x18,
+0x6F, 0x09, 0x05, 0x97, 0x03, 0x63, 0x00, 0xEF,
+0xFC, 0x63, 0x07, 0x62, 0x06, 0xD1, 0x05, 0xD0,
+0x30, 0xF0, 0x20, 0x6A, 0xCF, 0xF5, 0x13, 0x4A,
+0xFF, 0x69, 0x67, 0x42, 0x2C, 0xED, 0x01, 0x4B,
+0xCC, 0xE9, 0x00, 0x6E, 0xC0, 0xC2, 0x01, 0x4A,
+0x6A, 0xEA, 0xFB, 0x61, 0x91, 0xE5, 0x30, 0xF0,
+0x20, 0x68, 0x27, 0xE4, 0xCF, 0xF5, 0x13, 0x48,
+0x30, 0xF0, 0x20, 0x6A, 0xCE, 0xF4, 0x4C, 0x9A,
+0x91, 0x67, 0x01, 0x49, 0x40, 0xEA, 0x40, 0xC0,
+0x30, 0xF0, 0x20, 0x6A, 0x01, 0x48, 0xCF, 0xF5,
+0x1B, 0x4A, 0x4A, 0xE8, 0xF1, 0x61, 0x07, 0x97,
+0x06, 0x91, 0x05, 0x90, 0x04, 0x63, 0x00, 0xEF,
+0x30, 0xF0, 0x20, 0x6B, 0xC8, 0xF5, 0xC9, 0xA3,
+0x01, 0x6B, 0xFF, 0x6A, 0xCC, 0xEB, 0x4C, 0xEB,
+0x4C, 0xEC, 0x4C, 0xED, 0x01, 0x6A, 0x45, 0x2B,
+0x02, 0x6A, 0xAC, 0xEA, 0x12, 0x22, 0x10, 0xF0,
+0x24, 0x6A, 0x56, 0xF4, 0x74, 0x9A, 0x10, 0xF0,
+0x00, 0x6E, 0x40, 0x9B, 0xCC, 0xEA, 0x09, 0x22,
+0x10, 0xF0, 0x24, 0x6A, 0x36, 0xF4, 0x4C, 0x9A,
+0xC0, 0xDB, 0x23, 0x6B, 0x60, 0xC2, 0x01, 0x6A,
+0x01, 0x10, 0x00, 0x6A, 0x01, 0x6B, 0xAC, 0xEB,
+0x2C, 0x23, 0x40, 0x6B, 0x8C, 0xEB, 0x0C, 0x23,
+0x10, 0xF0, 0x24, 0x6A, 0x36, 0xF4, 0x4C, 0x9A,
+0x22, 0x6B, 0x60, 0xC2, 0x10, 0xF0, 0x24, 0x6A,
+0x56, 0xF4, 0x58, 0x9A, 0x80, 0xC2, 0x01, 0x6A,
+0x9E, 0x33, 0x0C, 0x23, 0x10, 0xF0, 0x24, 0x6A,
+0x36, 0xF4, 0x4C, 0x9A, 0x21, 0x6B, 0x60, 0xC2,
+0x10, 0xF0, 0x24, 0x6A, 0x56, 0xF4, 0x58, 0x9A,
+0x80, 0xC2, 0x01, 0x6A, 0x20, 0x6B, 0x8C, 0xEB,
+0x0C, 0x23, 0x10, 0xF0, 0x24, 0x6A, 0x36, 0xF4,
+0x4C, 0x9A, 0x23, 0x6B, 0x60, 0xC2, 0x10, 0xF0,
+0x24, 0x6A, 0x56, 0xF4, 0x58, 0x9A, 0x80, 0xC2,
+0x01, 0x6A, 0x20, 0xE8, 0xFF, 0x6A, 0x8C, 0xEA,
+0xA0, 0x72, 0x04, 0x6B, 0x01, 0x60, 0x08, 0x6B,
+0x10, 0xF0, 0x24, 0x6A, 0x36, 0xF4, 0x4C, 0x9A,
+0x60, 0xC2, 0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1,
+0x08, 0x4A, 0x08, 0xF4, 0x81, 0xA2, 0x01, 0x6B,
+0x8D, 0xEB, 0x08, 0xF4, 0x61, 0xC2, 0x20, 0xE8,
+0x30, 0xF0, 0x20, 0x6B, 0xC0, 0xF1, 0x08, 0x4B,
+0x08, 0xF4, 0xA1, 0xA3, 0x01, 0x6C, 0x44, 0x67,
+0x8C, 0xED, 0x04, 0x25, 0xE8, 0xF3, 0x5A, 0xA3,
+0x52, 0x32, 0x8C, 0xEA, 0x20, 0xE8, 0x00, 0x65,
+0xF8, 0x63, 0x0F, 0x62, 0x0E, 0xD1, 0x0D, 0xD0,
+0x10, 0xF0, 0x24, 0x6B, 0xFF, 0x6A, 0xF6, 0xF3,
+0x68, 0x9B, 0x4C, 0xED, 0x0B, 0xD5, 0x04, 0x67,
+0x80, 0xAB, 0xE1, 0xF7, 0x1F, 0x6B, 0x4C, 0xE8,
+0x8C, 0xEB, 0x6D, 0xE0, 0x7C, 0x33, 0x0A, 0xD3,
+0x10, 0xF0, 0x24, 0x6B, 0x0A, 0x94, 0x16, 0xF4,
+0x74, 0x9B, 0x6D, 0xE4, 0x20, 0xA3, 0x10, 0xF0,
+0x24, 0x6B, 0x16, 0xF4, 0x78, 0x9B, 0x4C, 0xE9,
+0x6D, 0xE4, 0x60, 0xA3, 0x6C, 0xEA, 0x40, 0x32,
+0x45, 0xE1, 0xE7, 0xF7, 0x1F, 0x6A, 0x4C, 0xE9,
+0x10, 0xF0, 0x24, 0x6B, 0x10, 0xF0, 0x24, 0x6A,
+0x56, 0xF4, 0x5C, 0x9A, 0x56, 0xF4, 0x6C, 0x9B,
+0x49, 0xE4, 0x6D, 0xE4, 0x29, 0xE2, 0x2D, 0xE3,
+0x00, 0x6C, 0x80, 0xC2, 0x01, 0x4A, 0x6A, 0xEA,
+0xFB, 0x61, 0x01, 0x6A, 0x04, 0xD2, 0x30, 0xF0,
+0x20, 0x6A, 0x8E, 0xF4, 0x54, 0x9A, 0x0B, 0x97,
+0xFF, 0xF7, 0x1F, 0x6B, 0xC8, 0x41, 0x0A, 0x6D,
+0x10, 0x6C, 0x6C, 0xEE, 0x40, 0xEA, 0x30, 0xF0,
+0x20, 0x6A, 0x49, 0xF2, 0xA7, 0xA2, 0x03, 0xED,
+0x1B, 0x60, 0x10, 0xF0, 0x24, 0x6A, 0xF6, 0xF3,
+0x48, 0x9A, 0xB3, 0xE0, 0x9C, 0x34, 0x60, 0xAA,
+0x0B, 0x92, 0x30, 0x4C, 0x5B, 0xE1, 0xE1, 0xF7,
+0x1F, 0x6A, 0x6C, 0xEA, 0xB5, 0xE2, 0xFF, 0xF7,
+0x1F, 0x6B, 0xB0, 0x35, 0x6C, 0xED, 0x30, 0xF0,
+0x20, 0x6A, 0x04, 0xD5, 0xF8, 0x4E, 0x8E, 0xF4,
+0x50, 0x9A, 0x6C, 0xEC, 0x38, 0x6D, 0x1F, 0x10,
+0x10, 0xF0, 0x24, 0x6A, 0xF6, 0xF3, 0x48, 0x9A,
+0x0B, 0x94, 0x17, 0xE5, 0x60, 0xAA, 0xE1, 0xF7,
+0x1F, 0x6A, 0xBC, 0x35, 0x6C, 0xEA, 0x49, 0xE0,
+0x5C, 0x32, 0x08, 0x6B, 0x7A, 0xEA, 0x01, 0x2B,
+0xE5, 0xE8, 0xFF, 0xF7, 0x1F, 0x6B, 0x9B, 0xE1,
+0x38, 0x4D, 0xF8, 0x4E, 0x30, 0x6C, 0x6C, 0xED,
+0x12, 0xEA, 0x6C, 0xEA, 0x04, 0xD2, 0x30, 0xF0,
+0x20, 0x6A, 0x8E, 0xF4, 0x50, 0x9A, 0xFF, 0x6B,
+0x6C, 0xEE, 0x08, 0x6F, 0x40, 0xEA, 0x30, 0xF0,
+0x20, 0x6A, 0x4E, 0xF2, 0x50, 0x9A, 0x30, 0xF0,
+0x20, 0x6D, 0x08, 0x04, 0xC8, 0xF6, 0x04, 0x4D,
 0x08, 0x6E, 0x40, 0xEA, 0x30, 0xF0, 0x20, 0x6A,
-0x02, 0x6B, 0x0F, 0xF6, 0x73, 0xC2, 0x30, 0xF0,
-0x20, 0x6A, 0x49, 0xF2, 0x52, 0xA2, 0x14, 0x22,
-0x10, 0xF0, 0x24, 0x6B, 0xD6, 0xF5, 0x6C, 0x9B,
-0xE1, 0xF7, 0x1F, 0x6C, 0x30, 0xF0, 0x20, 0x6E,
-0x60, 0xAB, 0x60, 0x6D, 0xEF, 0xF5, 0x00, 0x4E,
-0x6C, 0xEC, 0x51, 0xE4, 0x30, 0xF0, 0x20, 0x6A,
-0xCE, 0xF4, 0x48, 0x9A, 0x9C, 0x34, 0x40, 0xEA,
-0x05, 0x97, 0x03, 0x63, 0x00, 0xEF, 0x00, 0x65,
+0x8E, 0xF4, 0x44, 0x9A, 0x06, 0x00, 0x08, 0x04,
+0x00, 0x6D, 0xD0, 0x67, 0x08, 0x6F, 0x40, 0xEA,
+0x10, 0xF0, 0x24, 0x6A, 0x56, 0xF4, 0x5C, 0x9A,
+0x0A, 0x94, 0x49, 0xE4, 0x25, 0xE2, 0x08, 0x02,
+0x60, 0xA0, 0x01, 0x48, 0x4A, 0xE8, 0x60, 0xC1,
+0x01, 0x49, 0xFA, 0x61, 0x0F, 0x97, 0x0E, 0x91,
+0x0D, 0x90, 0x08, 0x63, 0x00, 0xEF, 0x00, 0x65,
 0xFD, 0x63, 0x05, 0x62, 0x30, 0xF0, 0x20, 0x6A,
-0x4E, 0xF2, 0x50, 0x9A, 0xA4, 0x67, 0x30, 0xF0,
-0x20, 0x6C, 0xCF, 0xF4, 0x07, 0x4C, 0x07, 0x6E,
-0x40, 0xEA, 0x05, 0x97, 0x03, 0x63, 0x00, 0xEF,
-0x10, 0xF0, 0x24, 0x6A, 0x56, 0xF6, 0x64, 0x9A,
-0xDF, 0x6A, 0x80, 0xA3, 0x8C, 0xEA, 0x40, 0xC3,
-0x30, 0xF0, 0x20, 0x6A, 0xCF, 0xF4, 0x00, 0x4A,
-0x80, 0xF1, 0x80, 0xA2, 0x40, 0x6B, 0x6B, 0xEB,
-0x8C, 0xEB, 0x80, 0xF1, 0x60, 0xC2, 0x20, 0xE8,
-0x30, 0xF0, 0x20, 0x6A, 0x4F, 0xF7, 0x54, 0xA2,
-0x05, 0x5A, 0x40, 0xF1, 0x1A, 0x60, 0x10, 0xF0,
-0x24, 0x6B, 0x48, 0x32, 0x96, 0xF2, 0x1C, 0x4B,
-0x4D, 0xE3, 0x40, 0x9B, 0x00, 0xEA, 0x42, 0xF6,
-0x00, 0x6D, 0x42, 0xF6, 0x08, 0x6C, 0x00, 0x6A,
-0x0F, 0x11, 0x22, 0xF6, 0x10, 0x6D, 0x22, 0xF6,
-0x18, 0x6C, 0x00, 0x6A, 0xCB, 0x10, 0x22, 0xF6,
-0x00, 0x6D, 0x22, 0xF6, 0x08, 0x6C, 0x00, 0x6A,
-0x87, 0x10, 0x00, 0xF7, 0x00, 0x6D, 0x00, 0xF7,
-0x08, 0x6C, 0x00, 0x6A, 0x43, 0x10, 0x00, 0xF6,
-0x10, 0x6D, 0x00, 0xF6, 0x18, 0x6C, 0x00, 0x6A,
+0x4E, 0xF2, 0x50, 0x9A, 0x30, 0xF0, 0x20, 0x6C,
+0x30, 0xF0, 0x20, 0x6D, 0xEF, 0xF5, 0x08, 0x4C,
+0xC8, 0xF6, 0x15, 0x4D, 0x08, 0x6E, 0x40, 0xEA,
+0x30, 0xF0, 0x20, 0x6A, 0x02, 0x6B, 0x0F, 0xF6,
+0x73, 0xC2, 0x30, 0xF0, 0x20, 0x6A, 0x49, 0xF2,
+0x52, 0xA2, 0x14, 0x22, 0x10, 0xF0, 0x24, 0x6B,
+0xF6, 0xF3, 0x68, 0x9B, 0xE1, 0xF7, 0x1F, 0x6C,
+0x30, 0xF0, 0x20, 0x6E, 0x60, 0xAB, 0x60, 0x6D,
+0xEF, 0xF5, 0x00, 0x4E, 0x6C, 0xEC, 0x51, 0xE4,
+0x30, 0xF0, 0x20, 0x6A, 0xCE, 0xF4, 0x48, 0x9A,
+0x9C, 0x34, 0x40, 0xEA, 0x05, 0x97, 0x03, 0x63,
+0x00, 0xEF, 0x00, 0x65, 0xFD, 0x63, 0x05, 0x62,
+0x30, 0xF0, 0x20, 0x6A, 0x4E, 0xF2, 0x50, 0x9A,
+0xA4, 0x67, 0x30, 0xF0, 0x20, 0x6C, 0xCF, 0xF4,
+0x07, 0x4C, 0x07, 0x6E, 0x40, 0xEA, 0x05, 0x97,
+0x03, 0x63, 0x00, 0xEF, 0x10, 0xF0, 0x24, 0x6A,
+0x76, 0xF4, 0x60, 0x9A, 0xDF, 0x6A, 0x80, 0xA3,
+0x8C, 0xEA, 0x40, 0xC3, 0x30, 0xF0, 0x20, 0x6A,
+0xCF, 0xF4, 0x00, 0x4A, 0x80, 0xF1, 0x80, 0xA2,
+0x40, 0x6B, 0x6B, 0xEB, 0x8C, 0xEB, 0x80, 0xF1,
+0x60, 0xC2, 0x20, 0xE8, 0x30, 0xF0, 0x20, 0x6A,
+0x4F, 0xF7, 0x54, 0xA2, 0x05, 0x5A, 0x40, 0xF1,
+0x1A, 0x60, 0x10, 0xF0, 0x24, 0x6B, 0x48, 0x32,
+0xB6, 0xF0, 0x18, 0x4B, 0x4D, 0xE3, 0x40, 0x9B,
+0x00, 0xEA, 0x42, 0xF6, 0x00, 0x6D, 0x42, 0xF6,
+0x08, 0x6C, 0x00, 0x6A, 0x0F, 0x11, 0x22, 0xF6,
+0x10, 0x6D, 0x22, 0xF6, 0x18, 0x6C, 0x00, 0x6A,
+0xCB, 0x10, 0x22, 0xF6, 0x00, 0x6D, 0x22, 0xF6,
+0x08, 0x6C, 0x00, 0x6A, 0x87, 0x10, 0x00, 0xF7,
+0x00, 0x6D, 0x00, 0xF7, 0x08, 0x6C, 0x00, 0x6A,
+0x43, 0x10, 0x00, 0xF6, 0x10, 0x6D, 0x00, 0xF6,
+0x18, 0x6C, 0x00, 0x6A, 0x1F, 0xF7, 0x00, 0x6B,
+0x8C, 0xEB, 0x02, 0xF0, 0x00, 0x73, 0xE2, 0x67,
+0x01, 0x60, 0x05, 0x2B, 0x10, 0xF0, 0x24, 0x6B,
+0x76, 0xF4, 0x64, 0x9B, 0x04, 0x10, 0x10, 0xF0,
+0x24, 0x6B, 0x76, 0xF4, 0x68, 0x9B, 0x6D, 0xE2,
+0xC0, 0xA3, 0xFF, 0x6B, 0xCC, 0xEB, 0x30, 0xF0,
+0x20, 0x6E, 0xC0, 0xF1, 0x08, 0x4E, 0xD9, 0xE7,
+0x08, 0xF4, 0x68, 0xC6, 0x1F, 0xF7, 0x00, 0x6B,
+0xAC, 0xEB, 0x02, 0xF0, 0x00, 0x73, 0xE2, 0x67,
+0x01, 0x60, 0x05, 0x2B, 0x10, 0xF0, 0x24, 0x6B,
+0x76, 0xF4, 0x6C, 0x9B, 0x04, 0x10, 0x10, 0xF0,
+0x24, 0x6B, 0x76, 0xF4, 0x70, 0x9B, 0x6D, 0xE2,
+0xC0, 0xA3, 0xFF, 0x6B, 0x01, 0x4A, 0xCC, 0xEB,
+0x30, 0xF0, 0x20, 0x6E, 0xC0, 0xF1, 0x08, 0x4E,
+0xD9, 0xE7, 0x06, 0x72, 0x08, 0xF4, 0x62, 0xC6,
+0x01, 0x4C, 0x01, 0x4D, 0xC3, 0x61, 0x20, 0xE8,
 0x1F, 0xF7, 0x00, 0x6B, 0x8C, 0xEB, 0x02, 0xF0,
 0x00, 0x73, 0xE2, 0x67, 0x01, 0x60, 0x05, 0x2B,
-0x10, 0xF0, 0x24, 0x6B, 0x56, 0xF6, 0x68, 0x9B,
-0x04, 0x10, 0x10, 0xF0, 0x24, 0x6B, 0x56, 0xF6,
-0x6C, 0x9B, 0x6D, 0xE2, 0xC0, 0xA3, 0xFF, 0x6B,
+0x10, 0xF0, 0x24, 0x6B, 0x76, 0xF4, 0x74, 0x9B,
+0x04, 0x10, 0x10, 0xF0, 0x24, 0x6B, 0x76, 0xF4,
+0x78, 0x9B, 0x6D, 0xE2, 0xC0, 0xA3, 0xFF, 0x6B,
 0xCC, 0xEB, 0x30, 0xF0, 0x20, 0x6E, 0xC0, 0xF1,
 0x08, 0x4E, 0xD9, 0xE7, 0x08, 0xF4, 0x68, 0xC6,
 0x1F, 0xF7, 0x00, 0x6B, 0xAC, 0xEB, 0x02, 0xF0,
 0x00, 0x73, 0xE2, 0x67, 0x01, 0x60, 0x05, 0x2B,
-0x10, 0xF0, 0x24, 0x6B, 0x56, 0xF6, 0x70, 0x9B,
-0x04, 0x10, 0x10, 0xF0, 0x24, 0x6B, 0x56, 0xF6,
-0x74, 0x9B, 0x6D, 0xE2, 0xC0, 0xA3, 0xFF, 0x6B,
+0x10, 0xF0, 0x24, 0x6B, 0x76, 0xF4, 0x7C, 0x9B,
+0x04, 0x10, 0x10, 0xF0, 0x24, 0x6B, 0x96, 0xF4,
+0x60, 0x9B, 0x6D, 0xE2, 0xC0, 0xA3, 0xFF, 0x6B,
 0x01, 0x4A, 0xCC, 0xEB, 0x30, 0xF0, 0x20, 0x6E,
 0xC0, 0xF1, 0x08, 0x4E, 0xD9, 0xE7, 0x06, 0x72,
 0x08, 0xF4, 0x62, 0xC6, 0x01, 0x4C, 0x01, 0x4D,
 0xC3, 0x61, 0x20, 0xE8, 0x1F, 0xF7, 0x00, 0x6B,
 0x8C, 0xEB, 0x02, 0xF0, 0x00, 0x73, 0xE2, 0x67,
 0x01, 0x60, 0x05, 0x2B, 0x10, 0xF0, 0x24, 0x6B,
-0x56, 0xF6, 0x78, 0x9B, 0x04, 0x10, 0x10, 0xF0,
-0x24, 0x6B, 0x56, 0xF6, 0x7C, 0x9B, 0x6D, 0xE2,
+0x96, 0xF4, 0x64, 0x9B, 0x04, 0x10, 0x10, 0xF0,
+0x24, 0x6B, 0x96, 0xF4, 0x68, 0x9B, 0x6D, 0xE2,
 0xC0, 0xA3, 0xFF, 0x6B, 0xCC, 0xEB, 0x30, 0xF0,
 0x20, 0x6E, 0xC0, 0xF1, 0x08, 0x4E, 0xD9, 0xE7,
 0x08, 0xF4, 0x68, 0xC6, 0x1F, 0xF7, 0x00, 0x6B,
 0xAC, 0xEB, 0x02, 0xF0, 0x00, 0x73, 0xE2, 0x67,
 0x01, 0x60, 0x05, 0x2B, 0x10, 0xF0, 0x24, 0x6B,
-0x76, 0xF6, 0x60, 0x9B, 0x04, 0x10, 0x10, 0xF0,
-0x24, 0x6B, 0x76, 0xF6, 0x64, 0x9B, 0x6D, 0xE2,
+0x96, 0xF4, 0x6C, 0x9B, 0x04, 0x10, 0x10, 0xF0,
+0x24, 0x6B, 0x96, 0xF4, 0x70, 0x9B, 0x6D, 0xE2,
 0xC0, 0xA3, 0xFF, 0x6B, 0x01, 0x4A, 0xCC, 0xEB,
 0x30, 0xF0, 0x20, 0x6E, 0xC0, 0xF1, 0x08, 0x4E,
 0xD9, 0xE7, 0x06, 0x72, 0x08, 0xF4, 0x62, 0xC6,
 0x01, 0x4C, 0x01, 0x4D, 0xC3, 0x61, 0x20, 0xE8,
 0x1F, 0xF7, 0x00, 0x6B, 0x8C, 0xEB, 0x02, 0xF0,
 0x00, 0x73, 0xE2, 0x67, 0x01, 0x60, 0x05, 0x2B,
-0x10, 0xF0, 0x24, 0x6B, 0x76, 0xF6, 0x68, 0x9B,
-0x04, 0x10, 0x10, 0xF0, 0x24, 0x6B, 0x76, 0xF6,
-0x6C, 0x9B, 0x6D, 0xE2, 0xC0, 0xA3, 0xFF, 0x6B,
+0x10, 0xF0, 0x24, 0x6B, 0x96, 0xF4, 0x74, 0x9B,
+0x04, 0x10, 0x10, 0xF0, 0x24, 0x6B, 0x96, 0xF4,
+0x78, 0x9B, 0x6D, 0xE2, 0xC0, 0xA3, 0xFF, 0x6B,
 0xCC, 0xEB, 0x30, 0xF0, 0x20, 0x6E, 0xC0, 0xF1,
 0x08, 0x4E, 0xD9, 0xE7, 0x08, 0xF4, 0x68, 0xC6,
 0x1F, 0xF7, 0x00, 0x6B, 0xAC, 0xEB, 0x02, 0xF0,
 0x00, 0x73, 0xE2, 0x67, 0x01, 0x60, 0x05, 0x2B,
-0x10, 0xF0, 0x24, 0x6B, 0x76, 0xF6, 0x70, 0x9B,
-0x04, 0x10, 0x10, 0xF0, 0x24, 0x6B, 0x76, 0xF6,
-0x74, 0x9B, 0x6D, 0xE2, 0xC0, 0xA3, 0xFF, 0x6B,
+0x10, 0xF0, 0x24, 0x6B, 0x96, 0xF4, 0x7C, 0x9B,
+0x04, 0x10, 0x10, 0xF0, 0x24, 0x6B, 0xB6, 0xF4,
+0x60, 0x9B, 0x6D, 0xE2, 0xC0, 0xA3, 0xFF, 0x6B,
 0x01, 0x4A, 0xCC, 0xEB, 0x30, 0xF0, 0x20, 0x6E,
 0xC0, 0xF1, 0x08, 0x4E, 0xD9, 0xE7, 0x06, 0x72,
 0x08, 0xF4, 0x62, 0xC6, 0x01, 0x4C, 0x01, 0x4D,
 0xC3, 0x61, 0x20, 0xE8, 0x1F, 0xF7, 0x00, 0x6B,
 0x8C, 0xEB, 0x02, 0xF0, 0x00, 0x73, 0xE2, 0x67,
 0x01, 0x60, 0x05, 0x2B, 0x10, 0xF0, 0x24, 0x6B,
-0x76, 0xF6, 0x78, 0x9B, 0x04, 0x10, 0x10, 0xF0,
-0x24, 0x6B, 0x76, 0xF6, 0x7C, 0x9B, 0x6D, 0xE2,
+0xB6, 0xF4, 0x64, 0x9B, 0x04, 0x10, 0x10, 0xF0,
+0x24, 0x6B, 0xB6, 0xF4, 0x68, 0x9B, 0x6D, 0xE2,
 0xC0, 0xA3, 0xFF, 0x6B, 0xCC, 0xEB, 0x30, 0xF0,
 0x20, 0x6E, 0xC0, 0xF1, 0x08, 0x4E, 0xD9, 0xE7,
 0x08, 0xF4, 0x68, 0xC6, 0x1F, 0xF7, 0x00, 0x6B,
 0xAC, 0xEB, 0x02, 0xF0, 0x00, 0x73, 0xE2, 0x67,
 0x01, 0x60, 0x05, 0x2B, 0x10, 0xF0, 0x24, 0x6B,
-0x96, 0xF6, 0x60, 0x9B, 0x04, 0x10, 0x10, 0xF0,
-0x24, 0x6B, 0x96, 0xF6, 0x64, 0x9B, 0x6D, 0xE2,
+0xB6, 0xF4, 0x6C, 0x9B, 0x04, 0x10, 0x10, 0xF0,
+0x24, 0x6B, 0xB6, 0xF4, 0x70, 0x9B, 0x6D, 0xE2,
 0xC0, 0xA3, 0xFF, 0x6B, 0x01, 0x4A, 0xCC, 0xEB,
 0x30, 0xF0, 0x20, 0x6E, 0xC0, 0xF1, 0x08, 0x4E,
 0xD9, 0xE7, 0x06, 0x72, 0x08, 0xF4, 0x62, 0xC6,
 0x01, 0x4C, 0x01, 0x4D, 0xC3, 0x61, 0x20, 0xE8,
-0x1F, 0xF7, 0x00, 0x6B, 0x8C, 0xEB, 0x02, 0xF0,
-0x00, 0x73, 0xE2, 0x67, 0x01, 0x60, 0x05, 0x2B,
-0x10, 0xF0, 0x24, 0x6B, 0x96, 0xF6, 0x68, 0x9B,
-0x04, 0x10, 0x10, 0xF0, 0x24, 0x6B, 0x96, 0xF6,
-0x6C, 0x9B, 0x6D, 0xE2, 0xC0, 0xA3, 0xFF, 0x6B,
-0xCC, 0xEB, 0x30, 0xF0, 0x20, 0x6E, 0xC0, 0xF1,
-0x08, 0x4E, 0xD9, 0xE7, 0x08, 0xF4, 0x68, 0xC6,
-0x1F, 0xF7, 0x00, 0x6B, 0xAC, 0xEB, 0x02, 0xF0,
-0x00, 0x73, 0xE2, 0x67, 0x01, 0x60, 0x05, 0x2B,
-0x10, 0xF0, 0x24, 0x6B, 0x96, 0xF6, 0x70, 0x9B,
-0x04, 0x10, 0x10, 0xF0, 0x24, 0x6B, 0x96, 0xF6,
-0x74, 0x9B, 0x6D, 0xE2, 0xC0, 0xA3, 0xFF, 0x6B,
-0x01, 0x4A, 0xCC, 0xEB, 0x30, 0xF0, 0x20, 0x6E,
-0xC0, 0xF1, 0x08, 0x4E, 0xD9, 0xE7, 0x06, 0x72,
-0x08, 0xF4, 0x62, 0xC6, 0x01, 0x4C, 0x01, 0x4D,
-0xC3, 0x61, 0x20, 0xE8, 0xFA, 0x63, 0x0B, 0x62,
-0x0A, 0xD1, 0x09, 0xD0, 0x10, 0xF0, 0x24, 0x6A,
-0xD6, 0xF5, 0x4C, 0x9A, 0xFF, 0x69, 0x2C, 0xEC,
-0x60, 0xAA, 0xE1, 0xF7, 0x1F, 0x6A, 0x30, 0xF0,
-0x20, 0x6E, 0x6C, 0xEA, 0x41, 0xE4, 0x30, 0xF0,
-0x20, 0x6A, 0xCE, 0xF4, 0x44, 0x9A, 0x1C, 0x30,
-0x90, 0x67, 0x08, 0x6D, 0xEF, 0xF5, 0x00, 0x4E,
-0x40, 0xEA, 0x30, 0xF0, 0x20, 0x6A, 0xCF, 0xF4,
-0x00, 0x4A, 0x40, 0xF1, 0x94, 0xA2, 0x02, 0x6B,
-0x6B, 0xEB, 0x8C, 0xEB, 0x40, 0xF1, 0x74, 0xC2,
-0x10, 0xF0, 0x24, 0x6A, 0xB6, 0xF6, 0x40, 0x9A,
-0x49, 0xE0, 0x40, 0xA2, 0x2C, 0xEA, 0xDD, 0x72,
-0x80, 0xF0, 0x08, 0x61, 0x10, 0xF0, 0x24, 0x6A,
-0xB6, 0xF5, 0x58, 0x9A, 0x49, 0xE0, 0x40, 0xA2,
-0x4C, 0xE9, 0x01, 0x6A, 0x2C, 0xEA, 0x13, 0x22,
-0x10, 0xF0, 0x24, 0x6A, 0x96, 0xF6, 0x9C, 0x9A,
-0x30, 0xF0, 0x20, 0x6B, 0x30, 0xF0, 0x20, 0x6A,
-0x91, 0xE0, 0x0F, 0xF6, 0x18, 0x4A, 0x2F, 0xF6,
-0x00, 0x4B, 0xA0, 0xA4, 0x01, 0x4C, 0xA0, 0xC2,
-0x01, 0x4A, 0x6A, 0xEA, 0xFA, 0x61, 0x02, 0x6A,
-0x2C, 0xEA, 0x68, 0x22, 0x10, 0xF0, 0x24, 0x6A,
-0xB6, 0xF6, 0x44, 0x9A, 0x49, 0xE0, 0x60, 0xA2,
-0x30, 0xF0, 0x20, 0x6A, 0x0F, 0xF6, 0x70, 0xC2,
-0x10, 0xF0, 0x24, 0x6A, 0x96, 0xF6, 0x58, 0x9A,
-0x30, 0xF0, 0x20, 0x6B, 0x2F, 0xF6, 0x08, 0x4B,
-0x41, 0xE0, 0x30, 0xF0, 0x20, 0x6A, 0x2F, 0xF6,
-0x00, 0x4A, 0x80, 0xA0, 0x80, 0xC2, 0x88, 0xA0,
-0x88, 0xC2, 0x90, 0xA0, 0x90, 0xC2, 0x98, 0xA0,
-0x01, 0x48, 0x98, 0xC2, 0x01, 0x4A, 0x6A, 0xEA,
-0xF4, 0x61, 0x30, 0xF0, 0x20, 0x6A, 0x0F, 0xF6,
-0x30, 0xA2, 0x10, 0xF0, 0x24, 0x6A, 0xD6, 0xF5,
-0x58, 0x9A, 0x2C, 0x31, 0x02, 0x49, 0x4D, 0xE9,
-0x00, 0x68, 0x10, 0xF0, 0x24, 0x6A, 0xF6, 0xF5,
-0x44, 0x9A, 0x2D, 0xE0, 0x60, 0xF6, 0x13, 0x6C,
-0x60, 0xDA, 0x06, 0x02, 0x04, 0xD2, 0x30, 0xF0,
-0x20, 0x6A, 0xAE, 0xF4, 0x54, 0x9A, 0x80, 0x6D,
-0x00, 0x6E, 0x14, 0x6F, 0x40, 0xEA, 0x08, 0x34,
-0x30, 0xF0, 0x20, 0x6A, 0xCF, 0xF4, 0x00, 0x4A,
-0x20, 0xF1, 0x10, 0x4C, 0x91, 0xE2, 0x60, 0xF6,
-0x18, 0x6A, 0x1F, 0xF7, 0x00, 0x6B, 0x4C, 0xEB,
-0x02, 0xF0, 0x00, 0x73, 0x01, 0x60, 0x05, 0x2B,
-0x10, 0xF0, 0x24, 0x6B, 0xB6, 0xF4, 0x6C, 0x9B,
-0x04, 0x10, 0x10, 0xF0, 0x24, 0x6B, 0xB6, 0xF4,
-0x70, 0x9B, 0x6D, 0xE2, 0xA0, 0xA3, 0x01, 0x4A,
-0xFF, 0x6B, 0xAC, 0xEB, 0x60, 0xF6, 0x1C, 0x72,
-0x60, 0xC4, 0x01, 0x4C, 0xE6, 0x61, 0x01, 0x48,
-0x04, 0x70, 0xC7, 0x61, 0x0B, 0x97, 0x0A, 0x91,
-0x09, 0x90, 0x06, 0x63, 0x00, 0xEF, 0x00, 0x65,
-0x60, 0xA4, 0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1,
-0x08, 0x4A, 0x69, 0xF0, 0x74, 0xC2, 0x61, 0xA4,
-0x69, 0xF0, 0x75, 0xC2, 0x20, 0xE8, 0x00, 0x65,
-0xFD, 0x63, 0x05, 0x62, 0x30, 0xF0, 0x20, 0x6A,
-0x4E, 0xF2, 0x50, 0x9A, 0xA4, 0x67, 0x30, 0xF0,
-0x20, 0x6C, 0x49, 0xF2, 0x03, 0x4C, 0x07, 0x6E,
-0x40, 0xEA, 0x05, 0x97, 0x03, 0x63, 0x00, 0xEF,
+0xFA, 0x63, 0x0B, 0x62, 0x0A, 0xD1, 0x09, 0xD0,
+0x10, 0xF0, 0x24, 0x6A, 0xF6, 0xF3, 0x48, 0x9A,
+0xFF, 0x69, 0x2C, 0xEC, 0x60, 0xAA, 0xE1, 0xF7,
+0x1F, 0x6A, 0x30, 0xF0, 0x20, 0x6E, 0x6C, 0xEA,
+0x41, 0xE4, 0x30, 0xF0, 0x20, 0x6A, 0xCE, 0xF4,
+0x44, 0x9A, 0x1C, 0x30, 0x90, 0x67, 0x08, 0x6D,
+0xEF, 0xF5, 0x00, 0x4E, 0x40, 0xEA, 0x30, 0xF0,
+0x20, 0x6A, 0xCF, 0xF4, 0x00, 0x4A, 0x40, 0xF1,
+0x94, 0xA2, 0x02, 0x6B, 0x6B, 0xEB, 0x8C, 0xEB,
+0x40, 0xF1, 0x74, 0xC2, 0x10, 0xF0, 0x24, 0x6A,
+0xB6, 0xF4, 0x5C, 0x9A, 0x49, 0xE0, 0x40, 0xA2,
+0x2C, 0xEA, 0xDD, 0x72, 0x80, 0xF0, 0x08, 0x61,
+0x10, 0xF0, 0x24, 0x6A, 0xD6, 0xF3, 0x54, 0x9A,
+0x49, 0xE0, 0x40, 0xA2, 0x4C, 0xE9, 0x01, 0x6A,
+0x2C, 0xEA, 0x13, 0x22, 0x10, 0xF0, 0x24, 0x6A,
+0xB6, 0xF4, 0x98, 0x9A, 0x30, 0xF0, 0x20, 0x6B,
+0x30, 0xF0, 0x20, 0x6A, 0x91, 0xE0, 0x0F, 0xF6,
+0x18, 0x4A, 0x2F, 0xF6, 0x00, 0x4B, 0xA0, 0xA4,
+0x01, 0x4C, 0xA0, 0xC2, 0x01, 0x4A, 0x6A, 0xEA,
+0xFA, 0x61, 0x02, 0x6A, 0x2C, 0xEA, 0x68, 0x22,
+0x10, 0xF0, 0x24, 0x6A, 0xD6, 0xF4, 0x40, 0x9A,
+0x49, 0xE0, 0x60, 0xA2, 0x30, 0xF0, 0x20, 0x6A,
+0x0F, 0xF6, 0x70, 0xC2, 0x10, 0xF0, 0x24, 0x6A,
+0xB6, 0xF4, 0x54, 0x9A, 0x30, 0xF0, 0x20, 0x6B,
+0x2F, 0xF6, 0x08, 0x4B, 0x41, 0xE0, 0x30, 0xF0,
+0x20, 0x6A, 0x2F, 0xF6, 0x00, 0x4A, 0x80, 0xA0,
+0x80, 0xC2, 0x88, 0xA0, 0x88, 0xC2, 0x90, 0xA0,
+0x90, 0xC2, 0x98, 0xA0, 0x01, 0x48, 0x98, 0xC2,
+0x01, 0x4A, 0x6A, 0xEA, 0xF4, 0x61, 0x30, 0xF0,
+0x20, 0x6A, 0x0F, 0xF6, 0x30, 0xA2, 0x10, 0xF0,
+0x24, 0x6A, 0xF6, 0xF3, 0x54, 0x9A, 0x2C, 0x31,
+0x02, 0x49, 0x4D, 0xE9, 0x00, 0x68, 0x10, 0xF0,
+0x24, 0x6A, 0x16, 0xF4, 0x40, 0x9A, 0x2D, 0xE0,
+0x60, 0xF6, 0x13, 0x6C, 0x60, 0xDA, 0x06, 0x02,
+0x04, 0xD2, 0x30, 0xF0, 0x20, 0x6A, 0xAE, 0xF4,
+0x54, 0x9A, 0x80, 0x6D, 0x00, 0x6E, 0x14, 0x6F,
+0x40, 0xEA, 0x08, 0x34, 0x30, 0xF0, 0x20, 0x6A,
+0xCF, 0xF4, 0x00, 0x4A, 0x20, 0xF1, 0x10, 0x4C,
+0x91, 0xE2, 0x60, 0xF6, 0x18, 0x6A, 0x1F, 0xF7,
+0x00, 0x6B, 0x4C, 0xEB, 0x02, 0xF0, 0x00, 0x73,
+0x01, 0x60, 0x05, 0x2B, 0x10, 0xF0, 0x24, 0x6B,
+0xD6, 0xF2, 0x68, 0x9B, 0x04, 0x10, 0x10, 0xF0,
+0x24, 0x6B, 0xD6, 0xF2, 0x6C, 0x9B, 0x6D, 0xE2,
+0xA0, 0xA3, 0x01, 0x4A, 0xFF, 0x6B, 0xAC, 0xEB,
+0x60, 0xF6, 0x1C, 0x72, 0x60, 0xC4, 0x01, 0x4C,
+0xE6, 0x61, 0x01, 0x48, 0x04, 0x70, 0xC7, 0x61,
+0x0B, 0x97, 0x0A, 0x91, 0x09, 0x90, 0x06, 0x63,
+0x00, 0xEF, 0x00, 0x65, 0x60, 0xA4, 0x30, 0xF0,
+0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A, 0x69, 0xF0,
+0x74, 0xC2, 0x61, 0xA4, 0x69, 0xF0, 0x75, 0xC2,
+0x20, 0xE8, 0x00, 0x65, 0xFD, 0x63, 0x05, 0x62,
+0x30, 0xF0, 0x20, 0x6A, 0x4E, 0xF2, 0x50, 0x9A,
+0xA4, 0x67, 0x30, 0xF0, 0x20, 0x6C, 0x49, 0xF2,
+0x03, 0x4C, 0x07, 0x6E, 0x40, 0xEA, 0x05, 0x97,
+0x03, 0x63, 0x00, 0xEF, 0xFD, 0x63, 0x05, 0x62,
+0x30, 0xF0, 0x20, 0x6A, 0x4E, 0xF2, 0x50, 0x9A,
+0xA4, 0x67, 0x30, 0xF0, 0x20, 0x6C, 0x49, 0xF2,
+0x0A, 0x4C, 0x07, 0x6E, 0x40, 0xEA, 0x05, 0x97,
+0x03, 0x63, 0x00, 0xEF, 0x10, 0xF0, 0x24, 0x6B,
+0x96, 0xF2, 0x78, 0x9B, 0x10, 0xF0, 0x30, 0x6A,
+0x65, 0xF6, 0x1D, 0x4A, 0x40, 0xDB, 0x61, 0xA4,
+0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A,
+0x89, 0xF0, 0x6A, 0xC2, 0x62, 0xA4, 0x89, 0xF0,
+0x6B, 0xC2, 0x20, 0xE8, 0xFB, 0x63, 0x09, 0x62,
+0x08, 0xD1, 0x07, 0xD0, 0x30, 0xF0, 0x20, 0x68,
+0xC0, 0xF1, 0x08, 0x48, 0x28, 0xF1, 0x54, 0xA0,
+0xFF, 0x69, 0x2C, 0xEC, 0x02, 0x72, 0x04, 0xD4,
+0x1B, 0x61, 0x01, 0x74, 0x3D, 0x61, 0x08, 0xF4,
+0x61, 0xA0, 0x01, 0x6A, 0x80, 0x6C, 0x6D, 0xEA,
+0xE8, 0xF3, 0x7B, 0xA0, 0x8B, 0xEC, 0x08, 0xF4,
+0x41, 0xC0, 0x8C, 0xEB, 0x2C, 0xEB, 0x0A, 0x23,
+0x10, 0xF0, 0x24, 0x6A, 0xD6, 0xF4, 0x64, 0x9A,
+0x40, 0xA3, 0x2C, 0xEA, 0x8E, 0xEA, 0x2C, 0xEA,
+0x40, 0xC3, 0x26, 0x10, 0x01, 0x6C, 0x22, 0x10,
+0x10, 0xF0, 0x24, 0x6A, 0xD6, 0xF4, 0x48, 0x9A,
+0x01, 0x6B, 0x6B, 0xEB, 0x60, 0xC2, 0x30, 0xF0,
+0x20, 0x6A, 0xCE, 0xF4, 0x5C, 0x9A, 0x64, 0x6C,
+0x40, 0xEA, 0x08, 0xF4, 0x60, 0xA0, 0x01, 0x6A,
+0x6C, 0xEA, 0x2C, 0xEA, 0x02, 0x2A, 0x00, 0x18,
+0xB6, 0xEB, 0x10, 0xF0, 0x24, 0x6A, 0xD6, 0xF4,
+0x64, 0x9A, 0xFF, 0x6C, 0x80, 0x6D, 0x40, 0xA3,
+0xAB, 0xED, 0x8C, 0xEA, 0xAE, 0xEA, 0x8C, 0xEA,
+0x40, 0xC3, 0x04, 0x94, 0x00, 0x18, 0x60, 0xDE,
+0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A,
+0x89, 0xF0, 0x9E, 0xA2, 0x02, 0x6B, 0x6B, 0xEB,
+0x8C, 0xEB, 0xE8, 0xF3, 0x93, 0xA2, 0x89, 0xF0,
+0x7E, 0xC2, 0x41, 0x6B, 0x6B, 0xEB, 0x8C, 0xEB,
+0xE8, 0xF3, 0x73, 0xC2, 0x09, 0x97, 0x08, 0x91,
+0x07, 0x90, 0x05, 0x63, 0x00, 0xEF, 0x00, 0x65,
 0xFD, 0x63, 0x05, 0x62, 0x30, 0xF0, 0x20, 0x6A,
-0x4E, 0xF2, 0x50, 0x9A, 0xA4, 0x67, 0x30, 0xF0,
-0x20, 0x6C, 0x49, 0xF2, 0x0A, 0x4C, 0x07, 0x6E,
-0x40, 0xEA, 0x05, 0x97, 0x03, 0x63, 0x00, 0xEF,
-0x10, 0xF0, 0x24, 0x6B, 0x76, 0xF4, 0x7C, 0x9B,
-0x10, 0xF0, 0x30, 0x6A, 0x25, 0xF6, 0x11, 0x4A,
-0x40, 0xDB, 0x61, 0xA4, 0x30, 0xF0, 0x20, 0x6A,
-0xC0, 0xF1, 0x08, 0x4A, 0x89, 0xF0, 0x6A, 0xC2,
-0x62, 0xA4, 0x89, 0xF0, 0x6B, 0xC2, 0x20, 0xE8,
-0xFB, 0x63, 0x09, 0x62, 0x08, 0xD1, 0x07, 0xD0,
-0x30, 0xF0, 0x20, 0x68, 0xC0, 0xF1, 0x08, 0x48,
-0x28, 0xF1, 0x54, 0xA0, 0xFF, 0x69, 0x2C, 0xEC,
-0x02, 0x72, 0x04, 0xD4, 0x1B, 0x61, 0x01, 0x74,
-0x3D, 0x61, 0x08, 0xF4, 0x61, 0xA0, 0x01, 0x6A,
-0x80, 0x6C, 0x6D, 0xEA, 0xE8, 0xF3, 0x7B, 0xA0,
-0x8B, 0xEC, 0x08, 0xF4, 0x41, 0xC0, 0x8C, 0xEB,
-0x2C, 0xEB, 0x0A, 0x23, 0x10, 0xF0, 0x24, 0x6A,
-0xB6, 0xF6, 0x68, 0x9A, 0x40, 0xA3, 0x2C, 0xEA,
-0x8E, 0xEA, 0x2C, 0xEA, 0x40, 0xC3, 0x26, 0x10,
-0x01, 0x6C, 0x22, 0x10, 0x10, 0xF0, 0x24, 0x6A,
-0xB6, 0xF6, 0x4C, 0x9A, 0x01, 0x6B, 0x6B, 0xEB,
-0x60, 0xC2, 0x30, 0xF0, 0x20, 0x6A, 0xCE, 0xF4,
-0x5C, 0x9A, 0x64, 0x6C, 0x40, 0xEA, 0x08, 0xF4,
-0x60, 0xA0, 0x01, 0x6A, 0x6C, 0xEA, 0x2C, 0xEA,
-0x02, 0x2A, 0x00, 0x18, 0x2F, 0xEC, 0x10, 0xF0,
-0x24, 0x6A, 0xB6, 0xF6, 0x68, 0x9A, 0xFF, 0x6C,
-0x80, 0x6D, 0x40, 0xA3, 0xAB, 0xED, 0x8C, 0xEA,
-0xAE, 0xEA, 0x8C, 0xEA, 0x40, 0xC3, 0x04, 0x94,
-0x00, 0x18, 0xD2, 0xDE, 0x30, 0xF0, 0x20, 0x6A,
-0xC0, 0xF1, 0x08, 0x4A, 0x89, 0xF0, 0x9E, 0xA2,
-0x02, 0x6B, 0x6B, 0xEB, 0x8C, 0xEB, 0xE8, 0xF3,
-0x93, 0xA2, 0x89, 0xF0, 0x7E, 0xC2, 0x41, 0x6B,
-0x6B, 0xEB, 0x8C, 0xEB, 0xE8, 0xF3, 0x73, 0xC2,
-0x09, 0x97, 0x08, 0x91, 0x07, 0x90, 0x05, 0x63,
+0xEE, 0xF4, 0x5C, 0x9A, 0x40, 0xEA, 0x10, 0xF0,
+0x24, 0x6C, 0x96, 0xF2, 0x98, 0x9C, 0x10, 0xF0,
+0x30, 0x6B, 0x65, 0xF7, 0x11, 0x4B, 0x01, 0x72,
+0x60, 0xDC, 0x19, 0x60, 0x30, 0xF0, 0x20, 0x6B,
+0xC0, 0xF1, 0x08, 0x4B, 0x08, 0xF4, 0xA1, 0xA3,
+0x01, 0x6C, 0x02, 0x72, 0xAD, 0xEC, 0x08, 0xF4,
+0x81, 0xC3, 0x40, 0x6B, 0x03, 0x60, 0x04, 0x72,
+0x06, 0x61, 0x41, 0x6B, 0x10, 0xF0, 0x24, 0x6A,
+0x36, 0xF4, 0x4C, 0x9A, 0x60, 0xC2, 0x01, 0x6C,
+0x80, 0x18, 0xA9, 0x0B, 0x18, 0x10, 0x30, 0xF0,
+0x20, 0x6B, 0x30, 0xF0, 0x20, 0x6A, 0xEE, 0xF4,
+0x58, 0x9A, 0xA8, 0xF4, 0x8C, 0x9B, 0x40, 0xEA,
+0x10, 0xF0, 0x24, 0x6A, 0x36, 0xF3, 0x4C, 0x9A,
+0x40, 0xA2, 0xF1, 0x2A, 0x10, 0xF0, 0x24, 0x6B,
+0x96, 0xF2, 0x78, 0x9B, 0x10, 0xF0, 0x30, 0x6A,
+0x65, 0xF7, 0x12, 0x4A, 0x40, 0xDB, 0x05, 0x97,
+0x03, 0x63, 0x00, 0xEF, 0xFD, 0x63, 0x05, 0x62,
+0x00, 0x18, 0x1A, 0xD3, 0x05, 0x97, 0x03, 0x63,
 0x00, 0xEF, 0x00, 0x65, 0xFD, 0x63, 0x05, 0x62,
-0x30, 0xF0, 0x20, 0x6A, 0xEE, 0xF4, 0x5C, 0x9A,
-0x40, 0xEA, 0x10, 0xF0, 0x24, 0x6C, 0x76, 0xF4,
-0x9C, 0x9C, 0x10, 0xF0, 0x30, 0x6B, 0x25, 0xF7,
-0x05, 0x4B, 0x01, 0x72, 0x60, 0xDC, 0x19, 0x60,
-0x30, 0xF0, 0x20, 0x6B, 0xC0, 0xF1, 0x08, 0x4B,
-0x08, 0xF4, 0xA1, 0xA3, 0x01, 0x6C, 0x02, 0x72,
-0xAD, 0xEC, 0x08, 0xF4, 0x81, 0xC3, 0x40, 0x6B,
-0x03, 0x60, 0x04, 0x72, 0x06, 0x61, 0x41, 0x6B,
-0x10, 0xF0, 0x24, 0x6A, 0x16, 0xF6, 0x50, 0x9A,
-0x60, 0xC2, 0x01, 0x6C, 0x80, 0x18, 0x96, 0x0B,
-0x18, 0x10, 0x30, 0xF0, 0x20, 0x6B, 0x30, 0xF0,
-0x20, 0x6A, 0xEE, 0xF4, 0x58, 0x9A, 0xA8, 0xF4,
-0x8C, 0x9B, 0x40, 0xEA, 0x10, 0xF0, 0x24, 0x6A,
-0x16, 0xF5, 0x50, 0x9A, 0x40, 0xA2, 0xF1, 0x2A,
-0x10, 0xF0, 0x24, 0x6B, 0x76, 0xF4, 0x7C, 0x9B,
-0x10, 0xF0, 0x30, 0x6A, 0x25, 0xF7, 0x06, 0x4A,
-0x40, 0xDB, 0x05, 0x97, 0x03, 0x63, 0x00, 0xEF,
-0xFD, 0x63, 0x05, 0x62, 0x00, 0x18, 0x64, 0xD3,
-0x05, 0x97, 0x03, 0x63, 0x00, 0xEF, 0x00, 0x65,
-0xFD, 0x63, 0x05, 0x62, 0x00, 0x18, 0x63, 0xD3,
-0x05, 0x97, 0x03, 0x63, 0x00, 0xEF, 0x00, 0x65,
-0xFC, 0x63, 0x07, 0x62, 0x06, 0xD1, 0x05, 0xD0,
-0xFF, 0x6A, 0x8C, 0xEA, 0x53, 0x22, 0x30, 0xF0,
-0x20, 0x6A, 0x49, 0xF2, 0x83, 0xA2, 0x02, 0x24,
-0x80, 0x18, 0x17, 0x0B, 0x10, 0xF0, 0x24, 0x6A,
-0x16, 0xF6, 0x50, 0x9A, 0x00, 0x6B, 0x30, 0xF0,
-0x20, 0x68, 0x60, 0xC2, 0x10, 0xF0, 0x24, 0x6A,
-0xB6, 0xF6, 0x50, 0x9A, 0x10, 0xF0, 0x24, 0x6B,
-0xB6, 0xF6, 0x74, 0x9B, 0x40, 0x9A, 0xFF, 0x69,
-0xB1, 0x67, 0x6C, 0xEA, 0x30, 0xF0, 0x20, 0x6B,
-0xA8, 0xF4, 0x4C, 0xDB, 0x10, 0xF0, 0x24, 0x6A,
-0xB6, 0xF6, 0x78, 0x9A, 0xFE, 0x6A, 0x35, 0x6E,
-0x80, 0xA3, 0x8C, 0xEA, 0x40, 0xC3, 0x6E, 0xF2,
-0x58, 0x98, 0x91, 0x67, 0x40, 0xEA, 0x00, 0x18,
-0xA8, 0xEA, 0x10, 0xF0, 0x24, 0x6A, 0x16, 0xF5,
-0x74, 0x9A, 0x04, 0x6C, 0x40, 0xA3, 0x2C, 0xEA,
-0x8D, 0xEA, 0x2C, 0xEA, 0x40, 0xC3, 0x80, 0x18,
-0xC9, 0x0B, 0x80, 0x18, 0xF0, 0x0B, 0x00, 0x18,
-0x73, 0xEA, 0x6E, 0xF2, 0x58, 0x98, 0x00, 0x6D,
-0x91, 0x67, 0xC5, 0x67, 0x40, 0xEA, 0x80, 0x18,
-0x66, 0x0A, 0x10, 0xF0, 0x24, 0x6A, 0x36, 0xF5,
-0xB0, 0x9A, 0x10, 0xF0, 0x24, 0x6A, 0x36, 0xF6,
-0x58, 0x9A, 0x01, 0x6C, 0xA0, 0xDA, 0x00, 0x18,
-0xAE, 0xDF, 0x1C, 0x10, 0x10, 0xF0, 0x24, 0x6A,
-0x36, 0xF5, 0xB0, 0x9A, 0x01, 0x6C, 0x00, 0x18,
-0xDF, 0xDF, 0x10, 0xF0, 0x24, 0x6A, 0x16, 0xF5,
-0x74, 0x9A, 0xFB, 0x6A, 0x80, 0xA3, 0x8C, 0xEA,
-0x40, 0xC3, 0x80, 0x18, 0xEC, 0x0B, 0x30, 0xF0,
-0x20, 0x6A, 0x4E, 0xF2, 0x4C, 0x9A, 0x30, 0xF0,
-0x20, 0x6C, 0xA8, 0xF5, 0x1B, 0x4C, 0x00, 0x6D,
-0x25, 0x6E, 0x40, 0xEA, 0x07, 0x97, 0x06, 0x91,
-0x05, 0x90, 0x04, 0x63, 0x00, 0xEF, 0x00, 0x65,
-0xFC, 0x63, 0x07, 0x62, 0x06, 0xD1, 0x05, 0xD0,
-0x30, 0xF0, 0x20, 0x68, 0xC0, 0xF1, 0x08, 0x48,
-0xA0, 0xA4, 0xE8, 0xF3, 0x73, 0xA0, 0x02, 0x6A,
-0x01, 0x69, 0x4B, 0xEA, 0x2C, 0xED, 0x4C, 0xEB,
-0xAD, 0xEB, 0xE8, 0xF3, 0x73, 0xC0, 0xA0, 0xA4,
-0x03, 0x6E, 0xCB, 0xEE, 0xA6, 0x35, 0x2C, 0xED,
-0xA4, 0x35, 0xCC, 0xEB, 0xAD, 0xEB, 0xE8, 0xF3,
-0x73, 0xC0, 0xA0, 0xA4, 0x05, 0x6F, 0xEB, 0xEF,
-0xAA, 0x35, 0x2C, 0xED, 0xA8, 0x35, 0xEC, 0xEB,
+0x00, 0x18, 0x19, 0xD3, 0x05, 0x97, 0x03, 0x63,
+0x00, 0xEF, 0x00, 0x65, 0xFC, 0x63, 0x07, 0x62,
+0x06, 0xD1, 0x05, 0xD0, 0xFF, 0x6A, 0x8C, 0xEA,
+0x53, 0x22, 0x30, 0xF0, 0x20, 0x6A, 0x49, 0xF2,
+0x83, 0xA2, 0x02, 0x24, 0x80, 0x18, 0x2A, 0x0B,
+0x10, 0xF0, 0x24, 0x6A, 0x36, 0xF4, 0x4C, 0x9A,
+0x00, 0x6B, 0x30, 0xF0, 0x20, 0x68, 0x60, 0xC2,
+0x10, 0xF0, 0x24, 0x6A, 0xD6, 0xF4, 0x4C, 0x9A,
+0x10, 0xF0, 0x24, 0x6B, 0xD6, 0xF4, 0x70, 0x9B,
+0x40, 0x9A, 0xFF, 0x69, 0xB1, 0x67, 0x6C, 0xEA,
+0x30, 0xF0, 0x20, 0x6B, 0xA8, 0xF4, 0x4C, 0xDB,
+0x10, 0xF0, 0x24, 0x6A, 0xD6, 0xF4, 0x74, 0x9A,
+0xFE, 0x6A, 0x35, 0x6E, 0x80, 0xA3, 0x8C, 0xEA,
+0x40, 0xC3, 0x6E, 0xF2, 0x58, 0x98, 0x91, 0x67,
+0x40, 0xEA, 0x00, 0x18, 0x2F, 0xEA, 0x10, 0xF0,
+0x24, 0x6A, 0x36, 0xF3, 0x70, 0x9A, 0x04, 0x6C,
+0x40, 0xA3, 0x2C, 0xEA, 0x8D, 0xEA, 0x2C, 0xEA,
+0x40, 0xC3, 0x80, 0x18, 0xDC, 0x0B, 0x80, 0x18,
+0x03, 0x0C, 0x00, 0x18, 0xFA, 0xE9, 0x6E, 0xF2,
+0x58, 0x98, 0x00, 0x6D, 0x91, 0x67, 0xC5, 0x67,
+0x40, 0xEA, 0x80, 0x18, 0x79, 0x0A, 0x10, 0xF0,
+0x24, 0x6A, 0x56, 0xF3, 0xAC, 0x9A, 0x10, 0xF0,
+0x24, 0x6A, 0x56, 0xF4, 0x54, 0x9A, 0x01, 0x6C,
+0xA0, 0xDA, 0x00, 0x18, 0x3C, 0xDF, 0x1C, 0x10,
+0x10, 0xF0, 0x24, 0x6A, 0x56, 0xF3, 0xAC, 0x9A,
+0x01, 0x6C, 0x00, 0x18, 0x6D, 0xDF, 0x10, 0xF0,
+0x24, 0x6A, 0x36, 0xF3, 0x70, 0x9A, 0xFB, 0x6A,
+0x80, 0xA3, 0x8C, 0xEA, 0x40, 0xC3, 0x80, 0x18,
+0xFF, 0x0B, 0x30, 0xF0, 0x20, 0x6A, 0x4E, 0xF2,
+0x4C, 0x9A, 0x30, 0xF0, 0x20, 0x6C, 0xA8, 0xF5,
+0x1B, 0x4C, 0x00, 0x6D, 0x25, 0x6E, 0x40, 0xEA,
+0x07, 0x97, 0x06, 0x91, 0x05, 0x90, 0x04, 0x63,
+0x00, 0xEF, 0x00, 0x65, 0xFC, 0x63, 0x07, 0x62,
+0x06, 0xD1, 0x05, 0xD0, 0x30, 0xF0, 0x20, 0x68,
+0xC0, 0xF1, 0x08, 0x48, 0xA0, 0xA4, 0xE8, 0xF3,
+0x73, 0xA0, 0x02, 0x6A, 0x01, 0x69, 0x4B, 0xEA,
+0x2C, 0xED, 0x4C, 0xEB, 0xAD, 0xEB, 0xE8, 0xF3,
+0x73, 0xC0, 0xA0, 0xA4, 0x03, 0x6E, 0xCB, 0xEE,
+0xA6, 0x35, 0x2C, 0xED, 0xA4, 0x35, 0xCC, 0xEB,
 0xAD, 0xEB, 0xE8, 0xF3, 0x73, 0xC0, 0xA0, 0xA4,
-0xFA, 0x4E, 0xCC, 0xEB, 0xAE, 0x35, 0x2C, 0xED,
-0xAC, 0x35, 0xAD, 0xEB, 0xE8, 0xF3, 0x73, 0xC0,
-0xA0, 0xA4, 0xF4, 0x4F, 0xEC, 0xEB, 0xB2, 0x35,
-0x2C, 0xED, 0xB0, 0x35, 0xAD, 0xEB, 0xE8, 0xF3,
-0x73, 0xC0, 0xA0, 0xA4, 0xE8, 0x4E, 0xCC, 0xEB,
-0xB6, 0x35, 0x2C, 0xED, 0xB4, 0x35, 0xAD, 0xEB,
-0xE8, 0xF3, 0x73, 0xC0, 0xA0, 0xA4, 0xE0, 0x4E,
-0xCC, 0xEB, 0xBA, 0x35, 0x2C, 0xED, 0xB8, 0x35,
+0x05, 0x6F, 0xEB, 0xEF, 0xAA, 0x35, 0x2C, 0xED,
+0xA8, 0x35, 0xEC, 0xEB, 0xAD, 0xEB, 0xE8, 0xF3,
+0x73, 0xC0, 0xA0, 0xA4, 0xFA, 0x4E, 0xCC, 0xEB,
+0xAE, 0x35, 0x2C, 0xED, 0xAC, 0x35, 0xAD, 0xEB,
+0xE8, 0xF3, 0x73, 0xC0, 0xA0, 0xA4, 0xF4, 0x4F,
+0xEC, 0xEB, 0xB2, 0x35, 0x2C, 0xED, 0xB0, 0x35,
 0xAD, 0xEB, 0xE8, 0xF3, 0x73, 0xC0, 0xA0, 0xA4,
-0x1F, 0x65, 0xBE, 0x35, 0xBC, 0x37, 0x7F, 0x6D,
-0xAC, 0xEB, 0xED, 0xEB, 0xE8, 0xF3, 0x73, 0xC0,
-0xA2, 0xA4, 0xE8, 0xF3, 0x75, 0xA0, 0x2C, 0xED,
-0x4C, 0xEB, 0xAD, 0xEB, 0xE8, 0xF3, 0x75, 0xC0,
-0xE1, 0xA4, 0xA7, 0x67, 0x2C, 0xED, 0xFD, 0x65,
-0xE8, 0xF3, 0xB4, 0xA0, 0xFF, 0x67, 0x4C, 0xED,
-0xED, 0xED, 0xE8, 0xF3, 0xB4, 0xC0, 0xE1, 0xA4,
-0xEA, 0x37, 0x2C, 0xEF, 0xE8, 0x37, 0xFF, 0x65,
-0x05, 0x6F, 0xEB, 0xEF, 0xEC, 0xED, 0xFF, 0x67,
-0xED, 0xED, 0xE8, 0xF3, 0xB4, 0xC0, 0xE1, 0xA4,
-0xF2, 0x37, 0x2C, 0xEF, 0xF0, 0x37, 0xFF, 0x65,
-0xF8, 0x67, 0xEC, 0xED, 0xFF, 0x67, 0xED, 0xED,
-0xE8, 0xF3, 0xB4, 0xC0, 0xE1, 0xA4, 0xEE, 0x37,
-0x2C, 0xEF, 0xEC, 0x37, 0xFF, 0x65, 0x09, 0x6F,
-0xEB, 0xEF, 0xEC, 0xED, 0xFF, 0x67, 0xED, 0xED,
-0xE8, 0xF3, 0xB4, 0xC0, 0xE1, 0xA4, 0xF6, 0x37,
-0x2C, 0xEF, 0xF4, 0x37, 0xFF, 0x65, 0x21, 0x6F,
-0xEB, 0xEF, 0xEC, 0xED, 0xFF, 0x67, 0xED, 0xED,
-0xE8, 0xF3, 0xB4, 0xC0, 0xE2, 0xA4, 0xF2, 0x37,
-0x2C, 0xEF, 0xF0, 0x37, 0xFF, 0x65, 0xF8, 0x67,
-0xEC, 0xEB, 0xFF, 0x67, 0xED, 0xEB, 0xE8, 0xF3,
-0x75, 0xC0, 0xE2, 0xA4, 0xF6, 0x37, 0x2C, 0xEF,
-0xF4, 0x37, 0xFF, 0x65, 0x21, 0x6F, 0xEB, 0xEF,
-0xEC, 0xEB, 0xFF, 0x67, 0xED, 0xEB, 0xE8, 0xF3,
-0x75, 0xC0, 0xE1, 0xA4, 0xCC, 0xEB, 0xE6, 0x37,
-0x2C, 0xEF, 0xE4, 0x37, 0x1F, 0x65, 0x03, 0x6F,
-0xEB, 0xEF, 0xEC, 0xED, 0xF8, 0x67, 0xED, 0xED,
-0xE8, 0xF3, 0xB4, 0xC0, 0xE2, 0xA4, 0xCC, 0xED,
-0xFA, 0x37, 0x2C, 0xEF, 0xF8, 0x37, 0xED, 0xEB,
-0xE8, 0xF3, 0x75, 0xC0, 0xE2, 0xA4, 0xFE, 0x37,
-0xFC, 0x37, 0x1F, 0x65, 0x7F, 0x6F, 0xEC, 0xEB,
-0xF8, 0x67, 0xED, 0xEB, 0xE8, 0xF3, 0x75, 0xC0,
-0x64, 0xA4, 0xE8, 0xF3, 0xF7, 0xA0, 0x2C, 0xEB,
-0xEC, 0xEA, 0x6D, 0xEA, 0xE8, 0xF3, 0x57, 0xC0,
-0x41, 0xA4, 0x0F, 0x6B, 0x5A, 0x32, 0x2C, 0xEA,
-0x58, 0x32, 0x4D, 0xED, 0xE8, 0xF3, 0xB4, 0xC0,
-0x43, 0xA4, 0xE8, 0xF3, 0x96, 0xA0, 0x4C, 0xEB,
-0x10, 0x6A, 0x4B, 0xEA, 0x8C, 0xEA, 0x6D, 0xEA,
-0xE8, 0xF3, 0x56, 0xC0, 0x10, 0xF0, 0x24, 0x6A,
-0xB6, 0xF6, 0x50, 0x9A, 0xE8, 0xF3, 0x93, 0xA0,
-0x10, 0xF0, 0x24, 0x6B, 0xB6, 0xF6, 0x74, 0x9B,
-0x40, 0x9A, 0x86, 0x34, 0x2C, 0xEC, 0x6C, 0xEA,
-0xE8, 0xF2, 0x44, 0xD8, 0x80, 0x18, 0x88, 0x09,
-0xE8, 0xF3, 0x93, 0xA0, 0x8A, 0x34, 0x2C, 0xEC,
-0x80, 0x18, 0xD4, 0x07, 0xE8, 0xF3, 0x94, 0xA0,
-0x08, 0x6A, 0xFF, 0x6B, 0x8C, 0xEA, 0x09, 0x22,
-0xE8, 0xF3, 0xB3, 0xA0, 0x0E, 0x6A, 0x00, 0x6C,
-0xAC, 0xEA, 0x6C, 0xEA, 0x07, 0x22, 0x91, 0x67,
-0x05, 0x10, 0xE8, 0xF3, 0x93, 0xA0, 0x8E, 0x34,
-0x2C, 0xEC, 0x6C, 0xEC, 0x30, 0xF0, 0x20, 0x68,
-0xC0, 0xF1, 0x08, 0x48, 0x00, 0x18, 0xE0, 0xD1,
-0xE8, 0xF3, 0x93, 0xA0, 0x01, 0x69, 0x92, 0x34,
-0x2C, 0xEC, 0x00, 0x18, 0x9F, 0xD2, 0xE8, 0xF3,
-0x93, 0xA0, 0x9A, 0x34, 0x2C, 0xEC, 0x00, 0x18,
-0x68, 0xD4, 0x00, 0x18, 0x87, 0xDF, 0xE8, 0xF3,
-0x93, 0xA0, 0x2C, 0xEC, 0x80, 0x18, 0xF4, 0x0B,
-0x07, 0x97, 0x06, 0x91, 0x05, 0x90, 0x04, 0x63,
-0x00, 0xEF, 0x00, 0x65, 0xFD, 0x63, 0x05, 0x62,
-0x10, 0xF0, 0x24, 0x6A, 0x56, 0xF6, 0x64, 0x9A,
-0xF0, 0x6A, 0x80, 0xA3, 0x8C, 0xEA, 0x40, 0xC3,
-0x10, 0xF0, 0x24, 0x6A, 0xB6, 0xF6, 0x7C, 0x9A,
-0x10, 0xF0, 0x24, 0x6C, 0xD6, 0xF6, 0x80, 0x9C,
-0x40, 0x9B, 0x8C, 0xEA, 0x40, 0xDB, 0x30, 0xF0,
-0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A, 0x08, 0xF4,
-0x81, 0xA2, 0xA0, 0x9B, 0x86, 0x34, 0xC0, 0xF7,
-0x80, 0x34, 0xAD, 0xEC, 0x80, 0xDB, 0x89, 0xF0,
-0x8A, 0xA2, 0x80, 0x18, 0x3B, 0x0A, 0x10, 0xF0,
-0x24, 0x6A, 0x36, 0xF6, 0x58, 0x9A, 0x10, 0xF0,
-0x00, 0x6B, 0x60, 0xDA, 0x00, 0x18, 0x41, 0xEC,
-0x05, 0x97, 0x03, 0x63, 0x00, 0xEF, 0x00, 0x65,
-0xFB, 0x63, 0x09, 0x62, 0x08, 0xD1, 0x07, 0xD0,
-0x10, 0xF0, 0x24, 0x6B, 0x76, 0xF4, 0x7C, 0x9B,
-0x10, 0xF0, 0x30, 0x6A, 0x86, 0xF3, 0x11, 0x4A,
-0x40, 0xDB, 0xA0, 0xA4, 0x01, 0x6A, 0xFF, 0x6E,
-0x4C, 0xED, 0x1B, 0x2D, 0x30, 0xF0, 0x20, 0x6B,
-0xC0, 0xF1, 0x08, 0x4B, 0xE8, 0xF3, 0xFA, 0xA3,
-0x02, 0x6C, 0x8B, 0xEC, 0xEC, 0xEC, 0xAD, 0xEC,
-0xE8, 0xF3, 0xBB, 0xA3, 0xE8, 0xF3, 0x9A, 0xC3,
-0x7F, 0x6C, 0xAC, 0xEC, 0xE8, 0xF3, 0xBA, 0xA3,
-0xCC, 0xEC, 0xB6, 0x35, 0x4E, 0xED, 0x4C, 0xED,
-0x00, 0x18, 0xDA, 0xDD, 0x80, 0x18, 0xCB, 0x0C,
-0x9B, 0x11, 0x30, 0xF0, 0x20, 0x6D, 0x05, 0x6B,
-0xCF, 0xF4, 0x00, 0x4D, 0x40, 0xF1, 0x70, 0xC5,
+0xE8, 0x4E, 0xCC, 0xEB, 0xB6, 0x35, 0x2C, 0xED,
+0xB4, 0x35, 0xAD, 0xEB, 0xE8, 0xF3, 0x73, 0xC0,
+0xA0, 0xA4, 0xE0, 0x4E, 0xCC, 0xEB, 0xBA, 0x35,
+0x2C, 0xED, 0xB8, 0x35, 0xAD, 0xEB, 0xE8, 0xF3,
+0x73, 0xC0, 0xA0, 0xA4, 0x1F, 0x65, 0xBE, 0x35,
+0xBC, 0x37, 0x7F, 0x6D, 0xAC, 0xEB, 0xED, 0xEB,
+0xE8, 0xF3, 0x73, 0xC0, 0xA2, 0xA4, 0xE8, 0xF3,
+0x75, 0xA0, 0x2C, 0xED, 0x4C, 0xEB, 0xAD, 0xEB,
+0xE8, 0xF3, 0x75, 0xC0, 0xE1, 0xA4, 0xA7, 0x67,
+0x2C, 0xED, 0xFD, 0x65, 0xE8, 0xF3, 0xB4, 0xA0,
+0xFF, 0x67, 0x4C, 0xED, 0xED, 0xED, 0xE8, 0xF3,
+0xB4, 0xC0, 0xE1, 0xA4, 0xEA, 0x37, 0x2C, 0xEF,
+0xE8, 0x37, 0xFF, 0x65, 0x05, 0x6F, 0xEB, 0xEF,
+0xEC, 0xED, 0xFF, 0x67, 0xED, 0xED, 0xE8, 0xF3,
+0xB4, 0xC0, 0xE1, 0xA4, 0xF2, 0x37, 0x2C, 0xEF,
+0xF0, 0x37, 0xFF, 0x65, 0xF8, 0x67, 0xEC, 0xED,
+0xFF, 0x67, 0xED, 0xED, 0xE8, 0xF3, 0xB4, 0xC0,
+0xE1, 0xA4, 0xEE, 0x37, 0x2C, 0xEF, 0xEC, 0x37,
+0xFF, 0x65, 0x09, 0x6F, 0xEB, 0xEF, 0xEC, 0xED,
+0xFF, 0x67, 0xED, 0xED, 0xE8, 0xF3, 0xB4, 0xC0,
+0xE1, 0xA4, 0xF6, 0x37, 0x2C, 0xEF, 0xF4, 0x37,
+0xFF, 0x65, 0x21, 0x6F, 0xEB, 0xEF, 0xEC, 0xED,
+0xFF, 0x67, 0xED, 0xED, 0xE8, 0xF3, 0xB4, 0xC0,
+0xE2, 0xA4, 0xF2, 0x37, 0x2C, 0xEF, 0xF0, 0x37,
+0xFF, 0x65, 0xF8, 0x67, 0xEC, 0xEB, 0xFF, 0x67,
+0xED, 0xEB, 0xE8, 0xF3, 0x75, 0xC0, 0xE2, 0xA4,
+0xF6, 0x37, 0x2C, 0xEF, 0xF4, 0x37, 0xFF, 0x65,
+0x21, 0x6F, 0xEB, 0xEF, 0xEC, 0xEB, 0xFF, 0x67,
+0xED, 0xEB, 0xE8, 0xF3, 0x75, 0xC0, 0xE1, 0xA4,
+0xCC, 0xEB, 0xE6, 0x37, 0x2C, 0xEF, 0xE4, 0x37,
+0x1F, 0x65, 0x03, 0x6F, 0xEB, 0xEF, 0xEC, 0xED,
+0xF8, 0x67, 0xED, 0xED, 0xE8, 0xF3, 0xB4, 0xC0,
+0xE2, 0xA4, 0xCC, 0xED, 0xFA, 0x37, 0x2C, 0xEF,
+0xF8, 0x37, 0xED, 0xEB, 0xE8, 0xF3, 0x75, 0xC0,
+0xE2, 0xA4, 0xFE, 0x37, 0xFC, 0x37, 0x1F, 0x65,
+0x7F, 0x6F, 0xEC, 0xEB, 0xF8, 0x67, 0xED, 0xEB,
+0xE8, 0xF3, 0x75, 0xC0, 0x64, 0xA4, 0xE8, 0xF3,
+0xF7, 0xA0, 0x2C, 0xEB, 0xEC, 0xEA, 0x6D, 0xEA,
+0xE8, 0xF3, 0x57, 0xC0, 0x41, 0xA4, 0x0F, 0x6B,
+0x5A, 0x32, 0x2C, 0xEA, 0x58, 0x32, 0x4D, 0xED,
+0xE8, 0xF3, 0xB4, 0xC0, 0x43, 0xA4, 0xE8, 0xF3,
+0x96, 0xA0, 0x4C, 0xEB, 0x10, 0x6A, 0x4B, 0xEA,
+0x8C, 0xEA, 0x6D, 0xEA, 0xE8, 0xF3, 0x56, 0xC0,
+0x10, 0xF0, 0x24, 0x6A, 0xD6, 0xF4, 0x4C, 0x9A,
+0xE8, 0xF3, 0x93, 0xA0, 0x10, 0xF0, 0x24, 0x6B,
+0xD6, 0xF4, 0x70, 0x9B, 0x40, 0x9A, 0x86, 0x34,
+0x2C, 0xEC, 0x6C, 0xEA, 0xE8, 0xF2, 0x44, 0xD8,
+0x80, 0x18, 0x9B, 0x09, 0xE8, 0xF3, 0x93, 0xA0,
+0x8A, 0x34, 0x2C, 0xEC, 0x80, 0x18, 0xE7, 0x07,
+0xE8, 0xF3, 0x94, 0xA0, 0x08, 0x6A, 0xFF, 0x6B,
+0x8C, 0xEA, 0x09, 0x22, 0xE8, 0xF3, 0xB3, 0xA0,
+0x0E, 0x6A, 0x00, 0x6C, 0xAC, 0xEA, 0x6C, 0xEA,
+0x07, 0x22, 0x91, 0x67, 0x05, 0x10, 0xE8, 0xF3,
+0x93, 0xA0, 0x8E, 0x34, 0x2C, 0xEC, 0x6C, 0xEC,
+0x30, 0xF0, 0x20, 0x68, 0xC0, 0xF1, 0x08, 0x48,
+0x00, 0x18, 0xD1, 0xD1, 0xE8, 0xF3, 0x93, 0xA0,
+0x01, 0x69, 0x92, 0x34, 0x2C, 0xEC, 0x00, 0x18,
+0x55, 0xD2, 0xE8, 0xF3, 0x93, 0xA0, 0x9A, 0x34,
+0x2C, 0xEC, 0x00, 0x18, 0x1E, 0xD4, 0x00, 0x18,
+0x15, 0xDF, 0xE8, 0xF3, 0x93, 0xA0, 0x2C, 0xEC,
+0x80, 0x18, 0x07, 0x0C, 0x07, 0x97, 0x06, 0x91,
+0x05, 0x90, 0x04, 0x63, 0x00, 0xEF, 0x00, 0x65,
+0xFD, 0x63, 0x05, 0x62, 0x10, 0xF0, 0x24, 0x6A,
+0x76, 0xF4, 0x60, 0x9A, 0xF0, 0x6A, 0x80, 0xA3,
+0x8C, 0xEA, 0x40, 0xC3, 0x10, 0xF0, 0x24, 0x6A,
+0xD6, 0xF4, 0x78, 0x9A, 0x10, 0xF0, 0x24, 0x6C,
+0xD6, 0xF4, 0x9C, 0x9C, 0x40, 0x9B, 0x8C, 0xEA,
+0x40, 0xDB, 0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1,
+0x08, 0x4A, 0x08, 0xF4, 0x81, 0xA2, 0xA0, 0x9B,
+0x86, 0x34, 0xC0, 0xF7, 0x80, 0x34, 0xAD, 0xEC,
+0x80, 0xDB, 0x89, 0xF0, 0x8A, 0xA2, 0x80, 0x18,
+0x4E, 0x0A, 0x10, 0xF0, 0x24, 0x6A, 0x56, 0xF4,
+0x54, 0x9A, 0x10, 0xF0, 0x00, 0x6B, 0x60, 0xDA,
+0x00, 0x18, 0xC8, 0xEB, 0x05, 0x97, 0x03, 0x63,
+0x00, 0xEF, 0x00, 0x65, 0xFB, 0x63, 0x09, 0x62,
+0x08, 0xD1, 0x07, 0xD0, 0x10, 0xF0, 0x24, 0x6B,
+0x96, 0xF2, 0x78, 0x9B, 0x10, 0xF0, 0x30, 0x6A,
+0xC6, 0xF3, 0x1D, 0x4A, 0x40, 0xDB, 0xA0, 0xA4,
+0x01, 0x6A, 0xFF, 0x6E, 0x4C, 0xED, 0x1B, 0x2D,
 0x30, 0xF0, 0x20, 0x6B, 0xC0, 0xF1, 0x08, 0x4B,
-0xE8, 0xF3, 0xFA, 0xA3, 0x00, 0xA4, 0x1F, 0x65,
-0x02, 0x6F, 0x38, 0x67, 0xEB, 0xEF, 0x4C, 0xE8,
-0x2C, 0xEF, 0x0D, 0xEF, 0xE8, 0xF3, 0xFA, 0xC3,
-0x00, 0xA4, 0x06, 0x30, 0x4C, 0xE8, 0x04, 0x31,
-0x03, 0x68, 0x0B, 0xE8, 0x18, 0x65, 0xEC, 0xE8,
+0xE8, 0xF3, 0xFA, 0xA3, 0x02, 0x6C, 0x8B, 0xEC,
+0xEC, 0xEC, 0xAD, 0xEC, 0xE8, 0xF3, 0xBB, 0xA3,
+0xE8, 0xF3, 0x9A, 0xC3, 0x7F, 0x6C, 0xAC, 0xEC,
+0xE8, 0xF3, 0xBA, 0xA3, 0xCC, 0xEC, 0xB6, 0x35,
+0x4E, 0xED, 0x4C, 0xED, 0x00, 0x18, 0x68, 0xDD,
+0x80, 0x18, 0xDE, 0x0C, 0x9B, 0x11, 0x30, 0xF0,
+0x20, 0x6D, 0x05, 0x6B, 0xCF, 0xF4, 0x00, 0x4D,
+0x40, 0xF1, 0x70, 0xC5, 0x30, 0xF0, 0x20, 0x6B,
+0xC0, 0xF1, 0x08, 0x4B, 0xE8, 0xF3, 0xFA, 0xA3,
+0x00, 0xA4, 0x1F, 0x65, 0x02, 0x6F, 0x38, 0x67,
+0xEB, 0xEF, 0x4C, 0xE8, 0x2C, 0xEF, 0x0D, 0xEF,
+0xE8, 0xF3, 0xFA, 0xC3, 0x00, 0xA4, 0x06, 0x30,
+0x4C, 0xE8, 0x04, 0x31, 0x03, 0x68, 0x0B, 0xE8,
+0x18, 0x65, 0xEC, 0xE8, 0x2D, 0xE8, 0xE8, 0xF3,
+0x1A, 0xC3, 0xE0, 0xA4, 0xEA, 0x37, 0x4C, 0xEF,
+0xE8, 0x31, 0x05, 0x6F, 0xEB, 0xEF, 0x0C, 0xEF,
+0x2D, 0xEF, 0xE8, 0xF3, 0xFA, 0xC3, 0x00, 0xA4,
+0x09, 0x69, 0x2B, 0xE9, 0x0E, 0x30, 0x4C, 0xE8,
+0x0C, 0x30, 0x2C, 0xEF, 0x0D, 0xEF, 0xE8, 0xF3,
+0xFA, 0xC3, 0x00, 0xA4, 0x12, 0x30, 0x4C, 0xE8,
+0x10, 0x31, 0x11, 0x68, 0x0B, 0xE8, 0x0C, 0xEF,
+0x2D, 0xEF, 0xE8, 0xF3, 0xFA, 0xC3, 0x00, 0xA4,
+0x16, 0x30, 0x4C, 0xE8, 0x14, 0x30, 0xF8, 0x65,
+0x21, 0x68, 0x0B, 0xE8, 0x3F, 0x67, 0xEC, 0xE8,
 0x2D, 0xE8, 0xE8, 0xF3, 0x1A, 0xC3, 0xE0, 0xA4,
-0xEA, 0x37, 0x4C, 0xEF, 0xE8, 0x31, 0x05, 0x6F,
-0xEB, 0xEF, 0x0C, 0xEF, 0x2D, 0xEF, 0xE8, 0xF3,
-0xFA, 0xC3, 0x00, 0xA4, 0x09, 0x69, 0x2B, 0xE9,
-0x0E, 0x30, 0x4C, 0xE8, 0x0C, 0x30, 0x2C, 0xEF,
-0x0D, 0xEF, 0xE8, 0xF3, 0xFA, 0xC3, 0x00, 0xA4,
-0x12, 0x30, 0x4C, 0xE8, 0x10, 0x31, 0x11, 0x68,
-0x0B, 0xE8, 0x0C, 0xEF, 0x2D, 0xEF, 0xE8, 0xF3,
-0xFA, 0xC3, 0x00, 0xA4, 0x16, 0x30, 0x4C, 0xE8,
-0x14, 0x30, 0xF8, 0x65, 0x21, 0x68, 0x0B, 0xE8,
-0x3F, 0x67, 0xEC, 0xE8, 0x2D, 0xE8, 0xE8, 0xF3,
-0x1A, 0xC3, 0xE0, 0xA4, 0x7F, 0x69, 0xFA, 0x37,
-0x4C, 0xEF, 0xF8, 0x37, 0xFF, 0x65, 0x41, 0x6F,
-0xEB, 0xEF, 0x0C, 0xEF, 0x1F, 0x67, 0x0D, 0xEF,
-0xE8, 0xF3, 0xFA, 0xC3, 0x00, 0xA4, 0x2C, 0xEF,
-0x1E, 0x30, 0x1C, 0x30, 0x0D, 0xEF, 0xE8, 0xF3,
-0xFA, 0xC3, 0x01, 0xA4, 0x1E, 0x30, 0x1C, 0x30,
-0x04, 0xD0, 0xE8, 0xF3, 0x3B, 0xA3, 0xF9, 0x65,
-0x1F, 0x67, 0x7F, 0x69, 0x2C, 0xE8, 0x04, 0x91,
-0x2D, 0xE8, 0xE8, 0xF3, 0x1B, 0xC3, 0x04, 0xA4,
-0xE8, 0xF3, 0x3E, 0xA3, 0x06, 0x30, 0x4C, 0xE8,
-0x04, 0x30, 0xF8, 0x65, 0x18, 0x67, 0x0C, 0xE9,
+0x7F, 0x69, 0xFA, 0x37, 0x4C, 0xEF, 0xF8, 0x37,
+0xFF, 0x65, 0x41, 0x6F, 0xEB, 0xEF, 0x0C, 0xEF,
+0x1F, 0x67, 0x0D, 0xEF, 0xE8, 0xF3, 0xFA, 0xC3,
+0x00, 0xA4, 0x2C, 0xEF, 0x1E, 0x30, 0x1C, 0x30,
+0x0D, 0xEF, 0xE8, 0xF3, 0xFA, 0xC3, 0x01, 0xA4,
+0x1E, 0x30, 0x1C, 0x30, 0x04, 0xD0, 0xE8, 0xF3,
+0x3B, 0xA3, 0xF9, 0x65, 0x1F, 0x67, 0x7F, 0x69,
+0x2C, 0xE8, 0x04, 0x91, 0x2D, 0xE8, 0xE8, 0xF3,
+0x1B, 0xC3, 0x04, 0xA4, 0xE8, 0xF3, 0x3E, 0xA3,
+0x06, 0x30, 0x4C, 0xE8, 0x04, 0x30, 0xF8, 0x65,
+0x18, 0x67, 0x0C, 0xE9, 0x1F, 0x67, 0x0D, 0xE9,
+0xE8, 0xF3, 0x3E, 0xC3, 0x19, 0x65, 0x24, 0xA4,
+0x18, 0x67, 0x2E, 0x31, 0x4C, 0xE9, 0x2C, 0x31,
+0xF9, 0x65, 0x09, 0x69, 0x2B, 0xE9, 0x0C, 0xE9,
 0x1F, 0x67, 0x0D, 0xE9, 0xE8, 0xF3, 0x3E, 0xC3,
-0x19, 0x65, 0x24, 0xA4, 0x18, 0x67, 0x2E, 0x31,
-0x4C, 0xE9, 0x2C, 0x31, 0xF9, 0x65, 0x09, 0x69,
-0x2B, 0xE9, 0x0C, 0xE9, 0x1F, 0x67, 0x0D, 0xE9,
-0xE8, 0xF3, 0x3E, 0xC3, 0x05, 0xA4, 0xE8, 0xF3,
-0x1F, 0xC3, 0x04, 0xA4, 0x12, 0x30, 0x4C, 0xE8,
-0x10, 0x30, 0xF8, 0x65, 0x11, 0x68, 0x0B, 0xE8,
-0x0C, 0xE9, 0x1F, 0x67, 0x0D, 0xE9, 0xE8, 0xF3,
-0x3E, 0xC3, 0x26, 0xA4, 0x7F, 0x68, 0x3E, 0x31,
-0x3C, 0x31, 0xF9, 0x65, 0x08, 0xF4, 0x20, 0xA3,
-0x19, 0x65, 0x38, 0x67, 0x2C, 0xE8, 0x3F, 0x67,
-0x2D, 0xE8, 0x08, 0xF4, 0x00, 0xC3, 0x04, 0x68,
-0x0C, 0xEF, 0xCC, 0xEF, 0x20, 0x27, 0x10, 0xF0,
-0x24, 0x6B, 0x56, 0xF6, 0x64, 0x9B, 0xE0, 0xA3,
-0x1F, 0x65, 0x38, 0x67, 0x2F, 0x6F, 0x2C, 0xEF,
-0xE0, 0xC3, 0x80, 0xF2, 0xB4, 0xA5, 0xE0, 0xA3,
-0xAC, 0xEA, 0xCC, 0xEF, 0x50, 0x32, 0xED, 0xEA,
-0xCC, 0xEA, 0x40, 0xC3, 0xE0, 0xA3, 0x06, 0x6A,
-0xAC, 0xEA, 0xCC, 0xEF, 0x54, 0x32, 0xED, 0xEA,
-0xCC, 0xEA, 0x40, 0xC3, 0x40, 0xA3, 0xCC, 0xEA,
-0x0D, 0xEA, 0xCC, 0xEA, 0x40, 0xC3, 0x30, 0xF0,
-0x20, 0x6A, 0xC8, 0xF5, 0x42, 0xA2, 0x08, 0x6E,
-0xFF, 0x6D, 0xCC, 0xEA, 0x09, 0x22, 0x10, 0xF0,
-0x24, 0x6A, 0x56, 0xF6, 0x64, 0x9A, 0x40, 0xA3,
-0xAC, 0xEA, 0xCD, 0xEA, 0xAC, 0xEA, 0x40, 0xC3,
+0x05, 0xA4, 0xE8, 0xF3, 0x1F, 0xC3, 0x04, 0xA4,
+0x12, 0x30, 0x4C, 0xE8, 0x10, 0x30, 0xF8, 0x65,
+0x11, 0x68, 0x0B, 0xE8, 0x0C, 0xE9, 0x1F, 0x67,
+0x0D, 0xE9, 0xE8, 0xF3, 0x3E, 0xC3, 0x26, 0xA4,
+0x7F, 0x68, 0x3E, 0x31, 0x3C, 0x31, 0xF9, 0x65,
+0x08, 0xF4, 0x20, 0xA3, 0x19, 0x65, 0x38, 0x67,
+0x2C, 0xE8, 0x3F, 0x67, 0x2D, 0xE8, 0x08, 0xF4,
+0x00, 0xC3, 0x04, 0x68, 0x0C, 0xEF, 0xCC, 0xEF,
+0x20, 0x27, 0x10, 0xF0, 0x24, 0x6B, 0x76, 0xF4,
+0x60, 0x9B, 0xE0, 0xA3, 0x1F, 0x65, 0x38, 0x67,
+0x2F, 0x6F, 0x2C, 0xEF, 0xE0, 0xC3, 0x80, 0xF2,
+0xB4, 0xA5, 0xE0, 0xA3, 0xAC, 0xEA, 0xCC, 0xEF,
+0x50, 0x32, 0xED, 0xEA, 0xCC, 0xEA, 0x40, 0xC3,
+0xE0, 0xA3, 0x06, 0x6A, 0xAC, 0xEA, 0xCC, 0xEF,
+0x54, 0x32, 0xED, 0xEA, 0xCC, 0xEA, 0x40, 0xC3,
+0x40, 0xA3, 0xCC, 0xEA, 0x0D, 0xEA, 0xCC, 0xEA,
+0x40, 0xC3, 0x30, 0xF0, 0x20, 0x6A, 0xC8, 0xF5,
+0x42, 0xA2, 0x08, 0x6E, 0xFF, 0x6D, 0xCC, 0xEA,
+0x09, 0x22, 0x10, 0xF0, 0x24, 0x6A, 0x76, 0xF4,
+0x60, 0x9A, 0x40, 0xA3, 0xAC, 0xEA, 0xCD, 0xEA,
+0xAC, 0xEA, 0x40, 0xC3, 0x30, 0xF0, 0x20, 0x6A,
+0xC0, 0xF1, 0x08, 0x4A, 0xE8, 0xF3, 0x7A, 0xA2,
+0x02, 0x6F, 0xFF, 0x6E, 0xEC, 0xEB, 0x20, 0x23,
+0x10, 0xF0, 0x24, 0x6B, 0x76, 0xF4, 0xA0, 0x9B,
+0x60, 0xA5, 0xCC, 0xEB, 0xED, 0xEB, 0xCC, 0xEB,
+0x60, 0xC5, 0x10, 0xF0, 0x24, 0x6B, 0xD6, 0xF4,
+0xB8, 0x9B, 0x08, 0xF4, 0xE1, 0xA2, 0x03, 0x6B,
+0xC0, 0x9D, 0x6B, 0xEB, 0xEC, 0xEB, 0xC0, 0xF7,
+0xC2, 0x36, 0xC4, 0x36, 0xCD, 0xEB, 0x08, 0xF4,
+0x61, 0xC2, 0x10, 0xF0, 0x24, 0x6B, 0x40, 0x9D,
+0xF6, 0xF3, 0x74, 0x9B, 0x6D, 0xEA, 0x40, 0xDD,
 0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A,
-0xE8, 0xF3, 0x7A, 0xA2, 0x02, 0x6F, 0xFF, 0x6E,
-0xEC, 0xEB, 0x20, 0x23, 0x10, 0xF0, 0x24, 0x6B,
-0x56, 0xF6, 0xA4, 0x9B, 0x60, 0xA5, 0xCC, 0xEB,
-0xED, 0xEB, 0xCC, 0xEB, 0x60, 0xC5, 0x10, 0xF0,
-0x24, 0x6B, 0xB6, 0xF6, 0xBC, 0x9B, 0x08, 0xF4,
-0xE1, 0xA2, 0x03, 0x6B, 0xC0, 0x9D, 0x6B, 0xEB,
-0xEC, 0xEB, 0xC0, 0xF7, 0xC2, 0x36, 0xC4, 0x36,
-0xCD, 0xEB, 0x08, 0xF4, 0x61, 0xC2, 0x10, 0xF0,
-0x24, 0x6B, 0x40, 0x9D, 0xD6, 0xF5, 0x78, 0x9B,
-0x6D, 0xEA, 0x40, 0xDD, 0x30, 0xF0, 0x20, 0x6A,
-0xC0, 0xF1, 0x08, 0x4A, 0x28, 0xF1, 0x74, 0xA2,
-0x02, 0x73, 0x08, 0x61, 0xE8, 0xF3, 0x7B, 0xA2,
-0x80, 0x6A, 0x4B, 0xEA, 0x6C, 0xEA, 0xFF, 0x6B,
-0x6C, 0xEA, 0x74, 0x2A, 0x30, 0xF0, 0x20, 0x6B,
-0xC0, 0xF1, 0x08, 0x4B, 0xE1, 0xA4, 0xE8, 0xF3,
-0xDB, 0xA3, 0x80, 0x6A, 0x7F, 0x6D, 0x4B, 0xEA,
-0xAC, 0xEF, 0x4C, 0xEE, 0xED, 0xEE, 0xE8, 0xF3,
-0xDB, 0xC3, 0xE2, 0xA4, 0xE8, 0xF3, 0x3C, 0xA3,
-0xAC, 0xEF, 0x4C, 0xE9, 0xED, 0xE9, 0xE8, 0xF3,
-0x3C, 0xC3, 0x03, 0xA4, 0x01, 0x6A, 0xAC, 0xE9,
-0xF0, 0x67, 0x4C, 0xEF, 0xFF, 0x65, 0xE8, 0xF3,
-0xFD, 0xA3, 0x02, 0x68, 0x0B, 0xE8, 0x18, 0x65,
-0x0C, 0xEF, 0x1F, 0x67, 0x0D, 0xEF, 0xE8, 0xF3,
-0xFD, 0xC3, 0x03, 0xA4, 0x4C, 0xEF, 0x06, 0x30,
-0x04, 0x30, 0x0D, 0xEF, 0xE8, 0xF3, 0xFD, 0xC3,
-0xE4, 0xA4, 0x05, 0x68, 0x0B, 0xE8, 0xEA, 0x37,
-0x4C, 0xEF, 0xE8, 0x37, 0x04, 0xD7, 0xE8, 0xF3,
-0xFE, 0xA3, 0xFF, 0x65, 0xFF, 0x67, 0xEC, 0xE8,
-0x04, 0x97, 0xED, 0xE8, 0xE8, 0xF3, 0x1E, 0xC3,
-0xE4, 0xA4, 0xF6, 0x37, 0x4C, 0xEF, 0xF4, 0x37,
-0xFF, 0x65, 0x21, 0x6F, 0xEB, 0xEF, 0x0C, 0xEF,
-0x1F, 0x67, 0x0D, 0xEF, 0xE8, 0xF3, 0xFE, 0xC3,
-0x02, 0xA4, 0x1E, 0x30, 0x1C, 0x30, 0x0D, 0xE9,
-0xE8, 0xF3, 0x3C, 0xC3, 0x06, 0xA4, 0x08, 0xF4,
-0x80, 0xA3, 0x38, 0x67, 0x4C, 0xE8, 0x2C, 0xEC,
-0x0D, 0xEC, 0x20, 0x68, 0x0C, 0xEF, 0x08, 0xF4,
-0x80, 0xC3, 0xFF, 0x6C, 0x08, 0x2F, 0xAC, 0xEE,
-0xE8, 0xF3, 0xBA, 0xA3, 0xCC, 0xEC, 0xB6, 0x35,
-0x4E, 0xED, 0x4C, 0xED, 0x08, 0x10, 0xE8, 0xF3,
-0x5A, 0xA3, 0x0C, 0xEA, 0x8C, 0xEA, 0x06, 0x22,
-0xAC, 0xEE, 0xCC, 0xEC, 0x00, 0x6D, 0x00, 0x18,
-0xDA, 0xDD, 0x04, 0x10, 0xAC, 0xEE, 0xCC, 0xEC,
-0x00, 0x18, 0xCB, 0xDD, 0x00, 0x18, 0x35, 0xEC,
-0x30, 0xF0, 0x20, 0x6A, 0x05, 0x6B, 0x0F, 0xF6,
-0x70, 0xC2, 0x30, 0xF0, 0x20, 0x6A, 0x4E, 0xF2,
-0x4C, 0x9A, 0x30, 0xF0, 0x20, 0x6C, 0xC8, 0xF6,
-0x15, 0x4C, 0x00, 0x6D, 0x08, 0x6E, 0x40, 0xEA,
-0x09, 0x97, 0x08, 0x91, 0x07, 0x90, 0x05, 0x63,
-0x00, 0xEF, 0x00, 0x65, 0xFD, 0x63, 0x05, 0x62,
-0x30, 0xF0, 0x20, 0x6A, 0x4E, 0xF2, 0x4C, 0x9A,
-0x30, 0xF0, 0x20, 0x6C, 0xA8, 0xF5, 0x1B, 0x4C,
-0x00, 0x6D, 0x25, 0x6E, 0x40, 0xEA, 0x80, 0x18,
-0x5C, 0x0A, 0x00, 0x18, 0x55, 0xD3, 0x00, 0x18,
-0x48, 0xD2, 0x05, 0x97, 0x03, 0x63, 0x00, 0xEF,
-0xFA, 0x63, 0x0B, 0x62, 0x0A, 0xD1, 0x09, 0xD0,
-0x10, 0xF0, 0x24, 0x6A, 0xF6, 0xF5, 0x58, 0x9A,
-0x10, 0xF0, 0x24, 0x6B, 0xF6, 0xF5, 0x7C, 0x9B,
-0xFF, 0x68, 0x49, 0xE4, 0x0C, 0xED, 0x05, 0xD5,
-0x04, 0xD2, 0x6D, 0xE4, 0x40, 0xA2, 0xA0, 0xA3,
-0x10, 0xF0, 0x24, 0x6B, 0x16, 0xF6, 0x38, 0x9B,
-0x0C, 0xED, 0x25, 0xE4, 0xC0, 0xA1, 0x90, 0x67,
-0x4C, 0xEC, 0x0C, 0xEE, 0x80, 0x18, 0x4F, 0x09,
-0x06, 0xD2, 0x80, 0xA1, 0x0C, 0xEC, 0x80, 0x18,
-0x40, 0x09, 0x22, 0x67, 0x30, 0xF0, 0x20, 0x6A,
-0xCF, 0xF4, 0x00, 0x4A, 0x40, 0xF1, 0xD1, 0xA2,
-0x07, 0x5E, 0x33, 0x60, 0x40, 0xF1, 0x71, 0x82,
-0x01, 0x6A, 0x44, 0xEB, 0x14, 0x6B, 0x4C, 0xEB,
-0x18, 0x2B, 0x62, 0x6B, 0x4C, 0xEB, 0x29, 0x23,
-0x30, 0xF0, 0x20, 0x68, 0x05, 0x95, 0xEF, 0xF5,
-0x00, 0x48, 0x90, 0x67, 0x00, 0x18, 0x10, 0xD0,
-0x04, 0x93, 0x06, 0x94, 0x89, 0xE3, 0x2B, 0xE2,
-0x25, 0xE0, 0x04, 0x10, 0x60, 0xA0, 0x01, 0x48,
-0x60, 0xC2, 0x01, 0x4A, 0x2A, 0xE8, 0xFA, 0x61,
-0x14, 0x10, 0x30, 0xF0, 0x20, 0x68, 0x05, 0x95,
-0xEF, 0xF5, 0x00, 0x48, 0x90, 0x67, 0x00, 0x18,
-0xF9, 0xCF, 0x04, 0x93, 0x06, 0x94, 0x89, 0xE3,
-0x2B, 0xE2, 0x25, 0xE0, 0x04, 0x10, 0x60, 0xA0,
-0x01, 0x48, 0x60, 0xC2, 0x01, 0x4A, 0x2A, 0xE8,
-0xFA, 0x61, 0x0B, 0x97, 0x0A, 0x91, 0x09, 0x90,
-0x06, 0x63, 0x00, 0xEF, 0xF5, 0x63, 0x15, 0x62,
-0x14, 0xD1, 0x13, 0xD0, 0xFF, 0x6A, 0x0F, 0xD2,
-0x7D, 0x67, 0x60, 0xF0, 0x68, 0xA3, 0x18, 0xD6,
-0xDD, 0x67, 0x10, 0xD3, 0x60, 0xF0, 0xCC, 0xA6,
-0x10, 0xF0, 0x24, 0x6A, 0x36, 0xF5, 0x4C, 0x9A,
-0x16, 0xD4, 0x17, 0xD5, 0x19, 0xD7, 0x11, 0xD6,
-0x40, 0xA2, 0xFF, 0x6B, 0x4C, 0xEB, 0x10, 0xF0,
-0x24, 0x6A, 0x16, 0xF5, 0x58, 0x9A, 0x0F, 0xD3,
+0x28, 0xF1, 0x74, 0xA2, 0x02, 0x73, 0x08, 0x61,
+0xE8, 0xF3, 0x7B, 0xA2, 0x80, 0x6A, 0x4B, 0xEA,
+0x6C, 0xEA, 0xFF, 0x6B, 0x6C, 0xEA, 0x74, 0x2A,
+0x30, 0xF0, 0x20, 0x6B, 0xC0, 0xF1, 0x08, 0x4B,
+0xE1, 0xA4, 0xE8, 0xF3, 0xDB, 0xA3, 0x80, 0x6A,
+0x7F, 0x6D, 0x4B, 0xEA, 0xAC, 0xEF, 0x4C, 0xEE,
+0xED, 0xEE, 0xE8, 0xF3, 0xDB, 0xC3, 0xE2, 0xA4,
+0xE8, 0xF3, 0x3C, 0xA3, 0xAC, 0xEF, 0x4C, 0xE9,
+0xED, 0xE9, 0xE8, 0xF3, 0x3C, 0xC3, 0x03, 0xA4,
+0x01, 0x6A, 0xAC, 0xE9, 0xF0, 0x67, 0x4C, 0xEF,
+0xFF, 0x65, 0xE8, 0xF3, 0xFD, 0xA3, 0x02, 0x68,
+0x0B, 0xE8, 0x18, 0x65, 0x0C, 0xEF, 0x1F, 0x67,
+0x0D, 0xEF, 0xE8, 0xF3, 0xFD, 0xC3, 0x03, 0xA4,
+0x4C, 0xEF, 0x06, 0x30, 0x04, 0x30, 0x0D, 0xEF,
+0xE8, 0xF3, 0xFD, 0xC3, 0xE4, 0xA4, 0x05, 0x68,
+0x0B, 0xE8, 0xEA, 0x37, 0x4C, 0xEF, 0xE8, 0x37,
+0x04, 0xD7, 0xE8, 0xF3, 0xFE, 0xA3, 0xFF, 0x65,
+0xFF, 0x67, 0xEC, 0xE8, 0x04, 0x97, 0xED, 0xE8,
+0xE8, 0xF3, 0x1E, 0xC3, 0xE4, 0xA4, 0xF6, 0x37,
+0x4C, 0xEF, 0xF4, 0x37, 0xFF, 0x65, 0x21, 0x6F,
+0xEB, 0xEF, 0x0C, 0xEF, 0x1F, 0x67, 0x0D, 0xEF,
+0xE8, 0xF3, 0xFE, 0xC3, 0x02, 0xA4, 0x1E, 0x30,
+0x1C, 0x30, 0x0D, 0xE9, 0xE8, 0xF3, 0x3C, 0xC3,
+0x06, 0xA4, 0x08, 0xF4, 0x80, 0xA3, 0x38, 0x67,
+0x4C, 0xE8, 0x2C, 0xEC, 0x0D, 0xEC, 0x20, 0x68,
+0x0C, 0xEF, 0x08, 0xF4, 0x80, 0xC3, 0xFF, 0x6C,
+0x08, 0x2F, 0xAC, 0xEE, 0xE8, 0xF3, 0xBA, 0xA3,
+0xCC, 0xEC, 0xB6, 0x35, 0x4E, 0xED, 0x4C, 0xED,
+0x08, 0x10, 0xE8, 0xF3, 0x5A, 0xA3, 0x0C, 0xEA,
+0x8C, 0xEA, 0x06, 0x22, 0xAC, 0xEE, 0xCC, 0xEC,
+0x00, 0x6D, 0x00, 0x18, 0x68, 0xDD, 0x04, 0x10,
+0xAC, 0xEE, 0xCC, 0xEC, 0x00, 0x18, 0x59, 0xDD,
+0x00, 0x18, 0xBC, 0xEB, 0x30, 0xF0, 0x20, 0x6A,
+0x05, 0x6B, 0x0F, 0xF6, 0x70, 0xC2, 0x30, 0xF0,
+0x20, 0x6A, 0x4E, 0xF2, 0x4C, 0x9A, 0x30, 0xF0,
+0x20, 0x6C, 0xC8, 0xF6, 0x15, 0x4C, 0x00, 0x6D,
+0x08, 0x6E, 0x40, 0xEA, 0x09, 0x97, 0x08, 0x91,
+0x07, 0x90, 0x05, 0x63, 0x00, 0xEF, 0x00, 0x65,
+0xFD, 0x63, 0x05, 0x62, 0x30, 0xF0, 0x20, 0x6A,
+0x4E, 0xF2, 0x4C, 0x9A, 0x30, 0xF0, 0x20, 0x6C,
+0xA8, 0xF5, 0x1B, 0x4C, 0x00, 0x6D, 0x25, 0x6E,
+0x40, 0xEA, 0x80, 0x18, 0x6F, 0x0A, 0x00, 0x18,
+0x0B, 0xD3, 0x00, 0x18, 0xFE, 0xD1, 0x05, 0x97,
+0x03, 0x63, 0x00, 0xEF, 0xFA, 0x63, 0x0B, 0x62,
+0x0A, 0xD1, 0x09, 0xD0, 0x10, 0xF0, 0x24, 0x6A,
+0x16, 0xF4, 0x54, 0x9A, 0x10, 0xF0, 0x24, 0x6B,
+0x16, 0xF4, 0x78, 0x9B, 0xFF, 0x68, 0x49, 0xE4,
+0x0C, 0xED, 0x05, 0xD5, 0x04, 0xD2, 0x6D, 0xE4,
+0x40, 0xA2, 0xA0, 0xA3, 0x10, 0xF0, 0x24, 0x6B,
+0x36, 0xF4, 0x34, 0x9B, 0x0C, 0xED, 0x25, 0xE4,
+0xC0, 0xA1, 0x90, 0x67, 0x4C, 0xEC, 0x0C, 0xEE,
+0x80, 0x18, 0x62, 0x09, 0x06, 0xD2, 0x80, 0xA1,
+0x0C, 0xEC, 0x80, 0x18, 0x53, 0x09, 0x22, 0x67,
+0x30, 0xF0, 0x20, 0x6A, 0xCF, 0xF4, 0x00, 0x4A,
+0x40, 0xF1, 0xD1, 0xA2, 0x07, 0x5E, 0x33, 0x60,
+0x40, 0xF1, 0x71, 0x82, 0x01, 0x6A, 0x44, 0xEB,
+0x14, 0x6B, 0x4C, 0xEB, 0x18, 0x2B, 0x62, 0x6B,
+0x4C, 0xEB, 0x29, 0x23, 0x30, 0xF0, 0x20, 0x68,
+0x05, 0x95, 0xEF, 0xF5, 0x00, 0x48, 0x90, 0x67,
+0x00, 0x18, 0x01, 0xD0, 0x04, 0x93, 0x06, 0x94,
+0x89, 0xE3, 0x2B, 0xE2, 0x25, 0xE0, 0x04, 0x10,
+0x60, 0xA0, 0x01, 0x48, 0x60, 0xC2, 0x01, 0x4A,
+0x2A, 0xE8, 0xFA, 0x61, 0x14, 0x10, 0x30, 0xF0,
+0x20, 0x68, 0x05, 0x95, 0xEF, 0xF5, 0x00, 0x48,
+0x90, 0x67, 0x00, 0x18, 0xEA, 0xCF, 0x04, 0x93,
+0x06, 0x94, 0x89, 0xE3, 0x2B, 0xE2, 0x25, 0xE0,
+0x04, 0x10, 0x60, 0xA0, 0x01, 0x48, 0x60, 0xC2,
+0x01, 0x4A, 0x2A, 0xE8, 0xFA, 0x61, 0x0B, 0x97,
+0x0A, 0x91, 0x09, 0x90, 0x06, 0x63, 0x00, 0xEF,
+0xF5, 0x63, 0x15, 0x62, 0x14, 0xD1, 0x13, 0xD0,
+0xFF, 0x6A, 0x0F, 0xD2, 0x7D, 0x67, 0x60, 0xF0,
+0x68, 0xA3, 0x18, 0xD6, 0xDD, 0x67, 0x10, 0xD3,
+0x60, 0xF0, 0xCC, 0xA6, 0x10, 0xF0, 0x24, 0x6A,
+0x56, 0xF3, 0x48, 0x9A, 0x16, 0xD4, 0x17, 0xD5,
+0x19, 0xD7, 0x11, 0xD6, 0x40, 0xA2, 0xFF, 0x6B,
+0x4C, 0xEB, 0x10, 0xF0, 0x24, 0x6A, 0x36, 0xF3,
+0x54, 0x9A, 0x0F, 0xD3, 0x02, 0xF0, 0x00, 0x6B,
+0x40, 0x9A, 0x6C, 0xEA, 0x1C, 0x22, 0x30, 0xF0,
+0x20, 0x6A, 0x6E, 0xF2, 0x58, 0x9A, 0x00, 0x6C,
+0xFF, 0x6D, 0x39, 0x6E, 0x40, 0xEA, 0x30, 0xF0,
+0x20, 0x6A, 0xCE, 0xF2, 0x40, 0x9A, 0x00, 0x68,
+0x40, 0xEA, 0x01, 0x72, 0x19, 0x61, 0x30, 0xF0,
+0x20, 0x6A, 0x30, 0xF0, 0x20, 0x6B, 0x6E, 0xF2,
+0x5C, 0x9A, 0x49, 0xF2, 0x85, 0xA3, 0x01, 0x6D,
+0x18, 0x6E, 0xF0, 0x67, 0x0B, 0x10, 0x30, 0xF0,
+0x20, 0x6A, 0x30, 0xF0, 0x20, 0x6B, 0x6E, 0xF2,
+0x5C, 0x9A, 0x49, 0xF2, 0x85, 0xA3, 0x01, 0x6D,
+0x18, 0x6E, 0x00, 0x6F, 0x40, 0xEA, 0x02, 0x67,
+0x10, 0xF0, 0x24, 0x6A, 0x10, 0xF0, 0x24, 0x6B,
+0x56, 0xF4, 0x4C, 0x9A, 0xD6, 0xF3, 0x78, 0x9B,
+0x49, 0xE0, 0x6D, 0xE0, 0x80, 0xA2, 0xA0, 0xA3,
+0x10, 0xF0, 0x24, 0x6B, 0x56, 0xF4, 0x70, 0x9B,
+0xFF, 0x6A, 0x4C, 0xEC, 0x6D, 0xE0, 0xC0, 0xA3,
+0x4C, 0xED, 0x4C, 0xEE, 0x80, 0x18, 0x62, 0x09,
+0x10, 0x95, 0x87, 0x40, 0x29, 0x4C, 0x22, 0x67,
+0x80, 0x18, 0xE9, 0x0D, 0x11, 0x96, 0x0F, 0x2E,
+0x10, 0xF0, 0x24, 0x6A, 0x10, 0xF0, 0x24, 0x6D,
+0x56, 0xF4, 0x40, 0x9A, 0xF6, 0xF4, 0xA8, 0x9D,
+0x16, 0x94, 0x49, 0xE0, 0xB5, 0xE0, 0x29, 0xE2,
+0x18, 0x93, 0x35, 0xE5, 0x09, 0x10, 0x10, 0xF0,
+0x24, 0x6A, 0xF6, 0xF4, 0x60, 0x9A, 0x0E, 0x04,
+0x04, 0x02, 0x6D, 0xE0, 0x2D, 0xE3, 0x27, 0x10,
+0xC0, 0xA4, 0x01, 0x4C, 0xC0, 0xC2, 0xE0, 0xA3,
+0xC8, 0x42, 0xF8, 0x4E, 0xE0, 0xC6, 0xC0, 0xA3,
+0x01, 0x4B, 0xD8, 0xC2, 0x01, 0x4A, 0xAA, 0xEA,
+0xF3, 0x61, 0x10, 0xF0, 0x24, 0x6A, 0x56, 0xF4,
+0x84, 0x9A, 0x10, 0xF0, 0x24, 0x6A, 0xF6, 0xF4,
+0x64, 0x9A, 0x91, 0xE0, 0x00, 0x6A, 0x6D, 0xE0,
+0x2D, 0xE3, 0x17, 0x96, 0x55, 0xE6, 0xA0, 0xA5,
+0xA0, 0xC4, 0x19, 0x96, 0x01, 0x4C, 0x55, 0xE6,
+0xA0, 0xA5, 0x01, 0x4A, 0x06, 0x72, 0xA0, 0xC3,
+0x01, 0x4B, 0xF3, 0x61, 0xD0, 0x17, 0xA0, 0xA3,
+0x01, 0x4B, 0xA0, 0xC2, 0x01, 0x4A, 0x8A, 0xEA,
+0xFA, 0x61, 0x16, 0x94, 0x18, 0x95, 0x3A, 0x6F,
+0x20, 0x6E, 0x80, 0x18, 0xEE, 0x07, 0x30, 0xF0,
+0x20, 0x6B, 0xCE, 0xF4, 0x48, 0x9B, 0x38, 0x48,
+0x21, 0xE0, 0x30, 0xF0, 0x20, 0x6E, 0x90, 0x67,
+0x0E, 0xD0, 0x28, 0x6D, 0x68, 0xF6, 0x04, 0x4E,
+0x30, 0xF0, 0x20, 0x68, 0x40, 0xEA, 0xC0, 0xF1,
+0x08, 0x48, 0x30, 0xF0, 0x20, 0x6A, 0x0E, 0xF5,
+0x48, 0x9A, 0x0E, 0x95, 0x69, 0xF0, 0xDD, 0xA0,
+0x3A, 0x6C, 0x40, 0xEA, 0x30, 0xF0, 0x20, 0x6E,
+0xCE, 0xF4, 0x48, 0x9E, 0x0E, 0x94, 0x28, 0x6D,
+0x04, 0x06, 0x40, 0xEA, 0x69, 0xF0, 0x54, 0xA0,
+0x02, 0x72, 0x05, 0x61, 0x69, 0xF0, 0x9D, 0xA0,
+0xB1, 0x67, 0x80, 0x18, 0xF4, 0x09, 0x10, 0xF0,
+0x24, 0x6A, 0x16, 0xF4, 0x68, 0x9A, 0xFF, 0x6C,
+0x02, 0x6D, 0x40, 0xA3, 0x3A, 0x6E, 0x8C, 0xEA,
+0xAD, 0xEA, 0x8C, 0xEA, 0x40, 0xC3, 0x30, 0xF0,
+0x20, 0x6A, 0x0F, 0x95, 0x6E, 0xF2, 0x58, 0x9A,
+0x00, 0x6C, 0x40, 0xEA, 0x30, 0xF0, 0x20, 0x6A,
+0x8E, 0xF2, 0x5C, 0x9A, 0x40, 0xEA, 0x15, 0x97,
+0x14, 0x91, 0x13, 0x90, 0x0B, 0x63, 0x00, 0xEF,
+0xF1, 0x63, 0x1D, 0x62, 0x1C, 0xD1, 0x1B, 0xD0,
+0x00, 0x6A, 0x7D, 0x67, 0x1E, 0xD4, 0x1F, 0xD5,
+0x06, 0xD2, 0x4E, 0xCB, 0x08, 0xD2, 0x09, 0xD2,
+0x0A, 0xD2, 0x0B, 0xD2, 0x0C, 0xD2, 0x0D, 0xD2,
+0x0E, 0xD2, 0x0F, 0xD2, 0x30, 0xF0, 0x20, 0x6A,
+0x0E, 0xF5, 0x4C, 0x9A, 0x1E, 0x94, 0x1F, 0x95,
+0x40, 0xEA, 0x01, 0x72, 0x00, 0xF1, 0x0A, 0x61,
+0x1E, 0x94, 0x1F, 0x93, 0x30, 0xF0, 0x20, 0x68,
+0xCE, 0xF4, 0x4C, 0x98, 0x0E, 0x4C, 0x71, 0xE4,
+0x40, 0xEA, 0x3A, 0x72, 0xE0, 0xF0, 0x1E, 0x61,
+0x1E, 0x94, 0x1F, 0x93, 0xCE, 0xF4, 0x4C, 0x98,
+0x30, 0x4C, 0x71, 0xE4, 0x40, 0xEA, 0x87, 0x72,
+0xE0, 0xF0, 0x14, 0x61, 0x1E, 0x90, 0x1F, 0x92,
+0x10, 0x03, 0x38, 0x48, 0x41, 0xE0, 0x0C, 0x01,
+0x16, 0xD3, 0x30, 0xF0, 0x20, 0x6A, 0xCE, 0xF4,
+0x4C, 0x9A, 0x90, 0x67, 0x01, 0x48, 0x40, 0xEA,
+0x40, 0xC1, 0x16, 0x92, 0x01, 0x49, 0x4A, 0xE9,
+0xF4, 0x61, 0x30, 0xF0, 0x20, 0x6B, 0xE8, 0xF5,
+0x15, 0x4B, 0x12, 0xD3, 0x00, 0x68, 0x38, 0x6C,
+0x98, 0xE8, 0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1,
+0x08, 0x4A, 0x12, 0xEC, 0x4D, 0xE4, 0x28, 0xF4,
+0xAC, 0xA3, 0x01, 0x6B, 0xAC, 0xEB, 0xC0, 0xF0,
+0x0F, 0x23, 0x89, 0xE2, 0x28, 0xF4, 0x0E, 0x4A,
+0x13, 0xD2, 0x14, 0xD2, 0x00, 0x69, 0xBC, 0x10,
+0xE0, 0xA3, 0xC0, 0xA2, 0x01, 0x4B, 0x01, 0x4A,
+0xEE, 0xEE, 0x01, 0x5E, 0xD8, 0x67, 0xCB, 0xEE,
+0xAA, 0xEB, 0xCC, 0xEC, 0xF5, 0x61, 0x01, 0x74,
+0xA0, 0xF0, 0x00, 0x61, 0x10, 0xF0, 0x24, 0x6A,
+0x16, 0xF4, 0x68, 0x9A, 0xFF, 0x6C, 0x06, 0x6D,
+0x40, 0xA3, 0xAB, 0xED, 0x8C, 0xEA, 0xAC, 0xEA,
+0x01, 0x6D, 0xAD, 0xEA, 0x8C, 0xEA, 0x40, 0xC3,
+0x1E, 0x92, 0x1F, 0x93, 0x4A, 0x4A, 0x69, 0xE2,
+0x11, 0xD2, 0x00, 0xF0, 0x1E, 0x03, 0x06, 0x02,
+0x10, 0xD2, 0x17, 0xD3, 0x30, 0xF0, 0x20, 0x6A,
+0xCE, 0xF4, 0x4C, 0x9A, 0x11, 0x94, 0x40, 0xEA,
+0x10, 0x93, 0x40, 0xC3, 0x11, 0x92, 0x01, 0x4B,
+0x10, 0xD3, 0x01, 0x4A, 0x11, 0xD2, 0x17, 0x92,
+0x4A, 0xEB, 0xF0, 0x61, 0x1E, 0x92, 0x1F, 0x93,
+0x10, 0x4A, 0x69, 0xE2, 0x11, 0xD2, 0x0C, 0x03,
+0x08, 0x02, 0x10, 0xD2, 0x18, 0xD3, 0x30, 0xF0,
+0x20, 0x6A, 0xCE, 0xF4, 0x4C, 0x9A, 0x11, 0x94,
+0x40, 0xEA, 0x10, 0x93, 0x40, 0xC3, 0x11, 0x92,
+0x01, 0x4B, 0x10, 0xD3, 0x01, 0x4A, 0x11, 0xD2,
+0x18, 0x92, 0x4A, 0xEB, 0xF0, 0x61, 0x38, 0x6D,
+0xB8, 0xE8, 0x30, 0xF0, 0x20, 0x6C, 0xC0, 0xF1,
+0x08, 0x4C, 0x01, 0x6B, 0x12, 0xED, 0x89, 0xE5,
+0x28, 0xF4, 0x4C, 0xA2, 0x46, 0x32, 0x6C, 0xEA,
+0x30, 0x22, 0x70, 0x10, 0xE0, 0xA2, 0xC0, 0xA4,
+0x01, 0x4A, 0x01, 0x4C, 0xEE, 0xEE, 0x01, 0x5E,
+0xD8, 0x67, 0xCB, 0xEE, 0xAA, 0xEA, 0xCC, 0xEB,
+0xF5, 0x61, 0x01, 0x73, 0x4E, 0x61, 0x30, 0xF0,
+0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A, 0x69, 0xF0,
+0x74, 0xA2, 0x02, 0x73, 0x12, 0x61, 0xE8, 0xF3,
+0x94, 0xA2, 0x08, 0x6B, 0x8C, 0xEB, 0x0D, 0x2B,
+0x10, 0xF0, 0x24, 0x6B, 0x36, 0xF4, 0x6C, 0x9B,
+0x0A, 0x6C, 0x80, 0xC3, 0x08, 0xF4, 0x81, 0xA2,
+0x01, 0x6B, 0x8D, 0xEB, 0x08, 0xF4, 0x61, 0xC2,
+0x43, 0x10, 0x00, 0x6A, 0x04, 0xD2, 0x05, 0xD2,
+0x08, 0x04, 0x06, 0x05, 0x0C, 0x06, 0x14, 0x97,
+0x1E, 0x10, 0x69, 0xF0, 0x54, 0xA4, 0x02, 0x72,
+0x13, 0x61, 0xE8, 0xF3, 0xB4, 0xA4, 0x08, 0x6A,
+0xAC, 0xEA, 0xFF, 0x6D, 0xAC, 0xEA, 0x0C, 0x2A,
+0x10, 0xF0, 0x24, 0x6A, 0x36, 0xF4, 0x4C, 0x9A,
+0x0A, 0x6D, 0xA0, 0xC2, 0x08, 0xF4, 0x41, 0xA4,
+0x4D, 0xEB, 0x08, 0xF4, 0x61, 0xC4, 0x24, 0x10,
+0x13, 0x97, 0x00, 0x6A, 0x04, 0xD2, 0x05, 0xD2,
+0x08, 0x04, 0x06, 0x05, 0x0C, 0x06, 0x80, 0x18,
+0x1C, 0x0E, 0x0B, 0x10, 0x10, 0xF0, 0x24, 0x6A,
+0x16, 0xF4, 0x68, 0x9A, 0xFF, 0x6C, 0x05, 0x6D,
+0x40, 0xA3, 0x8C, 0xEA, 0xAD, 0xEA, 0x8C, 0xEA,
+0x40, 0xC3, 0x01, 0x49, 0xFF, 0x6A, 0x4C, 0xE9,
+0x12, 0x93, 0x40, 0xA3, 0x43, 0xE9, 0x15, 0x61,
+0x01, 0x48, 0x38, 0x4B, 0x02, 0x70, 0x12, 0xD3,
+0x03, 0x60, 0x25, 0x17, 0x00, 0x6A, 0x01, 0x10,
+0x01, 0x6A, 0x1D, 0x97, 0x1C, 0x91, 0x1B, 0x90,
+0x0F, 0x63, 0x00, 0xEF, 0xB1, 0xE4, 0x08, 0x02,
+0x28, 0xF4, 0x14, 0x4C, 0x0C, 0x05, 0x01, 0x6B,
+0x89, 0x17, 0x38, 0x6A, 0x58, 0xE8, 0x30, 0x34,
+0x0C, 0x03, 0x10, 0x05, 0x12, 0xEA, 0x49, 0xE4,
+0x30, 0xF0, 0x20, 0x6C, 0xC0, 0xF1, 0x08, 0x4C,
+0x49, 0xE4, 0x48, 0xF4, 0x04, 0x4A, 0x01, 0x6C,
+0x1B, 0x17, 0x00, 0x65, 0xFA, 0x63, 0x0B, 0x62,
+0x0A, 0xD1, 0x09, 0xD0, 0x10, 0xF0, 0x24, 0x6B,
+0xFF, 0x6A, 0x56, 0xF3, 0x68, 0x9B, 0x4C, 0xEE,
+0x4C, 0xEF, 0x0C, 0xD4, 0x0D, 0xD5, 0x06, 0xD6,
+0x04, 0xD7, 0x60, 0xA3, 0x6C, 0xEA, 0x05, 0xD2,
+0x10, 0xF0, 0x24, 0x6A, 0x36, 0xF3, 0x54, 0x9A,
 0x02, 0xF0, 0x00, 0x6B, 0x40, 0x9A, 0x6C, 0xEA,
 0x1C, 0x22, 0x30, 0xF0, 0x20, 0x6A, 0x6E, 0xF2,
-0x58, 0x9A, 0x00, 0x6C, 0xFF, 0x6D, 0x39, 0x6E,
+0x58, 0x9A, 0x00, 0x6C, 0xFF, 0x6D, 0x33, 0x6E,
 0x40, 0xEA, 0x30, 0xF0, 0x20, 0x6A, 0xCE, 0xF2,
 0x40, 0x9A, 0x00, 0x68, 0x40, 0xEA, 0x01, 0x72,
 0x19, 0x61, 0x30, 0xF0, 0x20, 0x6A, 0x30, 0xF0,
 0x20, 0x6B, 0x6E, 0xF2, 0x5C, 0x9A, 0x49, 0xF2,
-0x85, 0xA3, 0x01, 0x6D, 0x18, 0x6E, 0xF0, 0x67,
+0x84, 0xA3, 0x01, 0x6D, 0x18, 0x6E, 0xF0, 0x67,
 0x0B, 0x10, 0x30, 0xF0, 0x20, 0x6A, 0x30, 0xF0,
 0x20, 0x6B, 0x6E, 0xF2, 0x5C, 0x9A, 0x49, 0xF2,
-0x85, 0xA3, 0x01, 0x6D, 0x18, 0x6E, 0x00, 0x6F,
+0x84, 0xA3, 0x01, 0x6D, 0x18, 0x6E, 0x00, 0x6F,
 0x40, 0xEA, 0x02, 0x67, 0x10, 0xF0, 0x24, 0x6A,
-0x10, 0xF0, 0x24, 0x6B, 0x36, 0xF6, 0x50, 0x9A,
-0xB6, 0xF5, 0x7C, 0x9B, 0x49, 0xE0, 0x6D, 0xE0,
+0x10, 0xF0, 0x24, 0x6B, 0x56, 0xF4, 0x4C, 0x9A,
+0xD6, 0xF3, 0x78, 0x9B, 0x49, 0xE0, 0x6D, 0xE0,
 0x80, 0xA2, 0xA0, 0xA3, 0x10, 0xF0, 0x24, 0x6B,
-0x36, 0xF6, 0x74, 0x9B, 0xFF, 0x6A, 0x4C, 0xEC,
+0x56, 0xF4, 0x70, 0x9B, 0xFF, 0x6A, 0x4C, 0xEC,
 0x6D, 0xE0, 0xC0, 0xA3, 0x4C, 0xED, 0x4C, 0xEE,
-0x80, 0x18, 0x4F, 0x09, 0x10, 0x95, 0x87, 0x40,
-0x29, 0x4C, 0x22, 0x67, 0x80, 0x18, 0xD6, 0x0D,
-0x11, 0x96, 0x0F, 0x2E, 0x10, 0xF0, 0x24, 0x6A,
-0x10, 0xF0, 0x24, 0x6D, 0x36, 0xF6, 0x44, 0x9A,
-0xD6, 0xF6, 0xAC, 0x9D, 0x16, 0x94, 0x49, 0xE0,
-0xB5, 0xE0, 0x29, 0xE2, 0x18, 0x93, 0x35, 0xE5,
-0x09, 0x10, 0x10, 0xF0, 0x24, 0x6A, 0xD6, 0xF6,
-0x64, 0x9A, 0x0E, 0x04, 0x04, 0x02, 0x6D, 0xE0,
-0x2D, 0xE3, 0x27, 0x10, 0xC0, 0xA4, 0x01, 0x4C,
-0xC0, 0xC2, 0xE0, 0xA3, 0xC8, 0x42, 0xF8, 0x4E,
-0xE0, 0xC6, 0xC0, 0xA3, 0x01, 0x4B, 0xD8, 0xC2,
-0x01, 0x4A, 0xAA, 0xEA, 0xF3, 0x61, 0x10, 0xF0,
-0x24, 0x6A, 0x36, 0xF6, 0x88, 0x9A, 0x10, 0xF0,
-0x24, 0x6A, 0xD6, 0xF6, 0x68, 0x9A, 0x91, 0xE0,
-0x00, 0x6A, 0x6D, 0xE0, 0x2D, 0xE3, 0x17, 0x96,
-0x55, 0xE6, 0xA0, 0xA5, 0xA0, 0xC4, 0x19, 0x96,
-0x01, 0x4C, 0x55, 0xE6, 0xA0, 0xA5, 0x01, 0x4A,
-0x06, 0x72, 0xA0, 0xC3, 0x01, 0x4B, 0xF3, 0x61,
-0xD0, 0x17, 0xA0, 0xA3, 0x01, 0x4B, 0xA0, 0xC2,
-0x01, 0x4A, 0x8A, 0xEA, 0xFA, 0x61, 0x16, 0x94,
-0x18, 0x95, 0x3A, 0x6F, 0x20, 0x6E, 0x80, 0x18,
-0xDB, 0x07, 0x30, 0xF0, 0x20, 0x6B, 0xCE, 0xF4,
-0x48, 0x9B, 0x38, 0x48, 0x21, 0xE0, 0x30, 0xF0,
-0x20, 0x6E, 0x90, 0x67, 0x0E, 0xD0, 0x28, 0x6D,
-0x68, 0xF6, 0x04, 0x4E, 0x30, 0xF0, 0x20, 0x68,
-0x40, 0xEA, 0xC0, 0xF1, 0x08, 0x48, 0x30, 0xF0,
-0x20, 0x6A, 0x0E, 0xF5, 0x48, 0x9A, 0x0E, 0x95,
-0x69, 0xF0, 0xDD, 0xA0, 0x3A, 0x6C, 0x40, 0xEA,
-0x30, 0xF0, 0x20, 0x6E, 0xCE, 0xF4, 0x48, 0x9E,
-0x0E, 0x94, 0x28, 0x6D, 0x04, 0x06, 0x40, 0xEA,
-0x69, 0xF0, 0x54, 0xA0, 0x02, 0x72, 0x05, 0x61,
-0x69, 0xF0, 0x9D, 0xA0, 0xB1, 0x67, 0x80, 0x18,
-0xE1, 0x09, 0x10, 0xF0, 0x24, 0x6A, 0xF6, 0xF5,
-0x6C, 0x9A, 0xFF, 0x6C, 0x02, 0x6D, 0x40, 0xA3,
-0x3A, 0x6E, 0x8C, 0xEA, 0xAD, 0xEA, 0x8C, 0xEA,
-0x40, 0xC3, 0x30, 0xF0, 0x20, 0x6A, 0x0F, 0x95,
-0x6E, 0xF2, 0x58, 0x9A, 0x00, 0x6C, 0x40, 0xEA,
-0x30, 0xF0, 0x20, 0x6A, 0x8E, 0xF2, 0x5C, 0x9A,
-0x40, 0xEA, 0x15, 0x97, 0x14, 0x91, 0x13, 0x90,
-0x0B, 0x63, 0x00, 0xEF, 0xF1, 0x63, 0x1D, 0x62,
-0x1C, 0xD1, 0x1B, 0xD0, 0x00, 0x6A, 0x7D, 0x67,
-0x1E, 0xD4, 0x1F, 0xD5, 0x06, 0xD2, 0x4E, 0xCB,
-0x08, 0xD2, 0x09, 0xD2, 0x0A, 0xD2, 0x0B, 0xD2,
-0x0C, 0xD2, 0x0D, 0xD2, 0x0E, 0xD2, 0x0F, 0xD2,
-0x30, 0xF0, 0x20, 0x6A, 0x0E, 0xF5, 0x4C, 0x9A,
-0x1E, 0x94, 0x1F, 0x95, 0x40, 0xEA, 0x01, 0x72,
-0x00, 0xF1, 0x0A, 0x61, 0x1E, 0x94, 0x1F, 0x93,
-0x30, 0xF0, 0x20, 0x68, 0xCE, 0xF4, 0x4C, 0x98,
-0x0E, 0x4C, 0x71, 0xE4, 0x40, 0xEA, 0x3A, 0x72,
-0xE0, 0xF0, 0x1E, 0x61, 0x1E, 0x94, 0x1F, 0x93,
-0xCE, 0xF4, 0x4C, 0x98, 0x30, 0x4C, 0x71, 0xE4,
-0x40, 0xEA, 0x87, 0x72, 0xE0, 0xF0, 0x14, 0x61,
-0x1E, 0x90, 0x1F, 0x92, 0x10, 0x03, 0x38, 0x48,
-0x41, 0xE0, 0x0C, 0x01, 0x16, 0xD3, 0x30, 0xF0,
-0x20, 0x6A, 0xCE, 0xF4, 0x4C, 0x9A, 0x90, 0x67,
-0x01, 0x48, 0x40, 0xEA, 0x40, 0xC1, 0x16, 0x92,
-0x01, 0x49, 0x4A, 0xE9, 0xF4, 0x61, 0x30, 0xF0,
-0x20, 0x6B, 0xE8, 0xF5, 0x15, 0x4B, 0x12, 0xD3,
-0x00, 0x68, 0x38, 0x6C, 0x98, 0xE8, 0x30, 0xF0,
-0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A, 0x12, 0xEC,
-0x4D, 0xE4, 0x28, 0xF4, 0xAC, 0xA3, 0x01, 0x6B,
-0xAC, 0xEB, 0xC0, 0xF0, 0x0F, 0x23, 0x89, 0xE2,
-0x28, 0xF4, 0x0E, 0x4A, 0x13, 0xD2, 0x14, 0xD2,
-0x00, 0x69, 0xBC, 0x10, 0xE0, 0xA3, 0xC0, 0xA2,
-0x01, 0x4B, 0x01, 0x4A, 0xEE, 0xEE, 0x01, 0x5E,
-0xD8, 0x67, 0xCB, 0xEE, 0xAA, 0xEB, 0xCC, 0xEC,
-0xF5, 0x61, 0x01, 0x74, 0xA0, 0xF0, 0x00, 0x61,
-0x10, 0xF0, 0x24, 0x6A, 0xF6, 0xF5, 0x6C, 0x9A,
-0xFF, 0x6C, 0x06, 0x6D, 0x40, 0xA3, 0xAB, 0xED,
-0x8C, 0xEA, 0xAC, 0xEA, 0x01, 0x6D, 0xAD, 0xEA,
-0x8C, 0xEA, 0x40, 0xC3, 0x1E, 0x92, 0x1F, 0x93,
-0x4A, 0x4A, 0x69, 0xE2, 0x11, 0xD2, 0x00, 0xF0,
-0x1E, 0x03, 0x06, 0x02, 0x10, 0xD2, 0x17, 0xD3,
-0x30, 0xF0, 0x20, 0x6A, 0xCE, 0xF4, 0x4C, 0x9A,
-0x11, 0x94, 0x40, 0xEA, 0x10, 0x93, 0x40, 0xC3,
-0x11, 0x92, 0x01, 0x4B, 0x10, 0xD3, 0x01, 0x4A,
-0x11, 0xD2, 0x17, 0x92, 0x4A, 0xEB, 0xF0, 0x61,
-0x1E, 0x92, 0x1F, 0x93, 0x10, 0x4A, 0x69, 0xE2,
-0x11, 0xD2, 0x0C, 0x03, 0x08, 0x02, 0x10, 0xD2,
-0x18, 0xD3, 0x30, 0xF0, 0x20, 0x6A, 0xCE, 0xF4,
-0x4C, 0x9A, 0x11, 0x94, 0x40, 0xEA, 0x10, 0x93,
-0x40, 0xC3, 0x11, 0x92, 0x01, 0x4B, 0x10, 0xD3,
-0x01, 0x4A, 0x11, 0xD2, 0x18, 0x92, 0x4A, 0xEB,
-0xF0, 0x61, 0x38, 0x6D, 0xB8, 0xE8, 0x30, 0xF0,
-0x20, 0x6C, 0xC0, 0xF1, 0x08, 0x4C, 0x01, 0x6B,
-0x12, 0xED, 0x89, 0xE5, 0x28, 0xF4, 0x4C, 0xA2,
-0x46, 0x32, 0x6C, 0xEA, 0x30, 0x22, 0x70, 0x10,
-0xE0, 0xA2, 0xC0, 0xA4, 0x01, 0x4A, 0x01, 0x4C,
-0xEE, 0xEE, 0x01, 0x5E, 0xD8, 0x67, 0xCB, 0xEE,
-0xAA, 0xEA, 0xCC, 0xEB, 0xF5, 0x61, 0x01, 0x73,
-0x4E, 0x61, 0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1,
+0x80, 0x18, 0x62, 0x09, 0x06, 0x95, 0x87, 0x40,
+0x29, 0x4C, 0x22, 0x67, 0x80, 0x18, 0xE9, 0x0D,
+0x04, 0x92, 0x2E, 0x2A, 0x10, 0xF0, 0x24, 0x6C,
+0x10, 0xF0, 0x24, 0x6A, 0x56, 0xF4, 0x88, 0x9C,
+0x10, 0xF0, 0x24, 0x6D, 0x56, 0xF4, 0x44, 0x9A,
+0x36, 0xF4, 0xBC, 0x9D, 0x0D, 0x93, 0x91, 0xE0,
+0x49, 0xE0, 0x31, 0xE4, 0xB5, 0xE0, 0xC0, 0xA3,
+0xC0, 0xC2, 0xC0, 0xA3, 0x01, 0x4A, 0xAA, 0xEA,
+0xC0, 0xC4, 0x01, 0x4B, 0x01, 0x4C, 0xF7, 0x61,
+0x10, 0xF0, 0x24, 0x6A, 0x10, 0xF0, 0x24, 0x6C,
+0x56, 0xF4, 0x40, 0x9A, 0xF6, 0xF4, 0x8C, 0x9C,
+0x0C, 0x93, 0x49, 0xE0, 0x81, 0xE0, 0x29, 0xE2,
+0x21, 0xE0, 0x80, 0xA3, 0x01, 0x4B, 0x80, 0xC2,
+0x01, 0x4A, 0x0A, 0xEA, 0xFA, 0x61, 0x2D, 0x10,
+0x04, 0x92, 0x01, 0x72, 0x2A, 0x61, 0x10, 0xF0,
+0x24, 0x6B, 0x56, 0xF4, 0x84, 0x9B, 0x10, 0xF0,
+0x24, 0x6B, 0x56, 0xF4, 0x68, 0x9B, 0x30, 0xF0,
+0x20, 0x6A, 0xE8, 0xF5, 0x00, 0x4A, 0x6D, 0xE0,
+0x91, 0xE0, 0x2D, 0xE3, 0xA6, 0x42, 0xC0, 0xA2,
+0xC0, 0xC4, 0xCA, 0xA2, 0x01, 0x4A, 0xAA, 0xEA,
+0xC0, 0xC3, 0x01, 0x4C, 0x01, 0x4B, 0xF7, 0x61,
+0x10, 0xF0, 0x24, 0x6B, 0x56, 0xF4, 0x60, 0x9B,
+0x30, 0xF0, 0x20, 0x6A, 0xE8, 0xF5, 0x10, 0x4A,
+0x61, 0xE0, 0x21, 0xE0, 0x64, 0x42, 0x80, 0xA2,
+0x01, 0x4A, 0x6A, 0xEA, 0x80, 0xC0, 0x01, 0x48,
+0xFA, 0x61, 0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1,
 0x08, 0x4A, 0x69, 0xF0, 0x74, 0xA2, 0x02, 0x73,
-0x12, 0x61, 0xE8, 0xF3, 0x94, 0xA2, 0x08, 0x6B,
-0x8C, 0xEB, 0x0D, 0x2B, 0x10, 0xF0, 0x24, 0x6B,
-0x16, 0xF6, 0x70, 0x9B, 0x0A, 0x6C, 0x80, 0xC3,
+0x05, 0x61, 0x69, 0xF0, 0x9C, 0xA2, 0xB1, 0x67,
+0x80, 0x18, 0xF4, 0x09, 0x10, 0xF0, 0x24, 0x6A,
+0xF6, 0xF4, 0x70, 0x9A, 0xFF, 0x6C, 0x10, 0x6D,
+0x40, 0xA3, 0x34, 0x6E, 0x8C, 0xEA, 0xAD, 0xEA,
+0x8C, 0xEA, 0x40, 0xC3, 0x30, 0xF0, 0x20, 0x6A,
+0x05, 0x95, 0x6E, 0xF2, 0x58, 0x9A, 0x00, 0x6C,
+0x40, 0xEA, 0x30, 0xF0, 0x20, 0x6A, 0x8E, 0xF2,
+0x5C, 0x9A, 0x40, 0xEA, 0x0B, 0x97, 0x0A, 0x91,
+0x09, 0x90, 0x06, 0x63, 0x00, 0xEF, 0x00, 0x65,
+0xF6, 0x63, 0x13, 0x62, 0x12, 0xD1, 0x11, 0xD0,
+0x00, 0x6A, 0x7D, 0x67, 0x30, 0xF0, 0x20, 0x6E,
+0x08, 0xD2, 0x52, 0xCB, 0x04, 0xD2, 0xCE, 0xF4,
+0x4C, 0x9E, 0x04, 0x67, 0x06, 0x4C, 0xB1, 0xE4,
+0x25, 0x67, 0x40, 0xEA, 0x08, 0x72, 0xE0, 0xF0,
+0x05, 0x61, 0x30, 0xF0, 0x20, 0x6B, 0xCE, 0xF4,
+0x4C, 0x9B, 0x87, 0x40, 0x31, 0xE4, 0x40, 0xEA,
+0x06, 0x72, 0xC0, 0xF0, 0x1B, 0x61, 0x87, 0x40,
+0x03, 0x4C, 0x06, 0x06, 0x00, 0xF0, 0x1E, 0x02,
+0x0B, 0xD4, 0x0A, 0xD6, 0x0C, 0xD2, 0x30, 0xF0,
+0x20, 0x6A, 0x0B, 0x94, 0xCE, 0xF4, 0x4C, 0x9A,
+0x40, 0xEA, 0x0A, 0x93, 0x0B, 0x94, 0x0C, 0x96,
+0x40, 0xC3, 0x01, 0x4B, 0x01, 0x4C, 0xCA, 0xEB,
+0x0B, 0xD4, 0x0A, 0xD3, 0xF0, 0x61, 0x00, 0x6A,
+0x01, 0x6C, 0x30, 0xF0, 0x20, 0x6D, 0x06, 0x03,
+0xC0, 0xF1, 0x08, 0x4D, 0x59, 0xE3, 0x55, 0xE5,
+0xC0, 0xA6, 0x08, 0xF4, 0xA8, 0xA5, 0x01, 0x4A,
+0xCE, 0xED, 0x01, 0x5D, 0xB8, 0x67, 0xAB, 0xED,
+0x06, 0x72, 0xAC, 0xEC, 0xEE, 0x61, 0x58, 0x67,
+0x01, 0x74, 0x05, 0xD2, 0x01, 0x6A, 0xA0, 0xF0,
+0x0A, 0x61, 0x47, 0x40, 0x19, 0x4A, 0x29, 0xE2,
+0x05, 0x04, 0x0B, 0xD2, 0x0A, 0xD4, 0x0D, 0xD3,
+0x30, 0xF0, 0x20, 0x6A, 0xCE, 0xF4, 0x4C, 0x9A,
+0x0B, 0x94, 0x40, 0xEA, 0x0A, 0x96, 0x0D, 0x93,
+0x40, 0xC6, 0x0B, 0x92, 0x01, 0x4E, 0x6A, 0xEE,
+0x01, 0x4A, 0x0B, 0xD2, 0x0A, 0xD6, 0xF0, 0x61,
+0x30, 0xF0, 0x20, 0x6A, 0x9D, 0x67, 0xC0, 0xF1,
+0x08, 0x4A, 0xDD, 0x67, 0x75, 0xA6, 0xB4, 0xA4,
+0x08, 0xF4, 0x9E, 0xA2, 0x08, 0xF4, 0x5F, 0xA2,
+0x6E, 0xEA, 0x00, 0x6B, 0x04, 0x2A, 0x65, 0x67,
+0x8E, 0xEB, 0x01, 0x5B, 0x78, 0x67, 0x30, 0xF0,
+0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A, 0x9D, 0x67,
+0xB6, 0xA4, 0x28, 0xF4, 0x80, 0xA2, 0xAE, 0xEC,
+0x01, 0x5C, 0x98, 0x67, 0x8B, 0xEC, 0x8C, 0xEB,
+0x9D, 0x67, 0xB7, 0xA4, 0x28, 0xF4, 0x81, 0xA2,
+0xAE, 0xEC, 0x5C, 0x2C, 0x01, 0x73, 0x5A, 0x61,
+0x10, 0xF0, 0x24, 0x6B, 0xF6, 0xF4, 0xD0, 0x9B,
+0xFF, 0x6D, 0xDE, 0x4C, 0x60, 0xA6, 0xAC, 0xEB,
+0x8C, 0xEB, 0x01, 0x6C, 0x8D, 0xEB, 0xAC, 0xEB,
+0x60, 0xC6, 0xE8, 0xF3, 0x75, 0xA2, 0x8C, 0xEB,
+0xAC, 0xEB, 0x14, 0x2B, 0x69, 0xF0, 0x74, 0xA2,
+0x02, 0x73, 0x0A, 0x60, 0x47, 0x40, 0x09, 0x4A,
+0x29, 0xE2, 0x0B, 0xD2, 0x08, 0x06, 0x20, 0xF0,
+0x06, 0x02, 0x0A, 0xD6, 0x0E, 0xD2, 0x12, 0x10,
+0xE8, 0xF3, 0xD4, 0xA2, 0x08, 0x6B, 0xCC, 0xEB,
+0xAC, 0xEB, 0xF0, 0x2B, 0x10, 0xF0, 0x24, 0x6B,
+0x36, 0xF4, 0x6C, 0x9B, 0x09, 0x6D, 0xA0, 0xC3,
+0x08, 0xF4, 0x61, 0xA2, 0x6D, 0xEC, 0x08, 0xF4,
+0x81, 0xC2, 0x36, 0x10, 0x30, 0xF0, 0x20, 0x6A,
+0x0B, 0x94, 0xCE, 0xF4, 0x4C, 0x9A, 0x40, 0xEA,
+0x0A, 0x93, 0x0B, 0x94, 0x0E, 0x96, 0x40, 0xC3,
+0x01, 0x4B, 0x01, 0x4C, 0xCA, 0xEB, 0x0B, 0xD4,
+0x0A, 0xD3, 0xF0, 0x61, 0x16, 0x48, 0x05, 0x02,
+0x25, 0xE0, 0x0F, 0xD2, 0x04, 0x00, 0x30, 0xF0,
+0x20, 0x6A, 0xCE, 0xF4, 0x4C, 0x9A, 0x91, 0x67,
+0x01, 0x49, 0x40, 0xEA, 0x0F, 0x93, 0x40, 0xC0,
+0x01, 0x48, 0x6A, 0xE8, 0xF4, 0x61, 0x00, 0x6E,
+0x04, 0x04, 0x08, 0x05, 0xE6, 0x67, 0x80, 0x18,
+0x3F, 0x0F, 0x0E, 0x10, 0x10, 0xF0, 0x24, 0x6A,
+0xF6, 0xF4, 0x70, 0x9A, 0xFF, 0x6C, 0x32, 0x6D,
+0x40, 0xA3, 0xAB, 0xED, 0x8C, 0xEA, 0xAC, 0xEA,
+0x21, 0x6D, 0xAD, 0xEA, 0x8C, 0xEA, 0x40, 0xC3,
+0x01, 0x6A, 0x01, 0x10, 0x00, 0x6A, 0x13, 0x97,
+0x12, 0x91, 0x11, 0x90, 0x0A, 0x63, 0x00, 0xEF,
+0xFD, 0x63, 0x05, 0x62, 0xE4, 0x67, 0x30, 0xF0,
+0x20, 0x6C, 0xC0, 0xF1, 0x08, 0x4C, 0x89, 0xF0,
+0xB7, 0xA4, 0x04, 0x6B, 0xFF, 0x6A, 0xAC, 0xEB,
+0x4C, 0xEB, 0x4C, 0xEF, 0x07, 0x23, 0x00, 0x6C,
+0xA4, 0x67, 0xC4, 0x67, 0x01, 0x6F, 0x80, 0x18,
+0x3F, 0x0F, 0x09, 0x10, 0x30, 0xF0, 0x20, 0x6A,
+0x2E, 0xF4, 0x50, 0x9A, 0xC8, 0xF2, 0x9F, 0xA4,
+0x02, 0x6D, 0x08, 0x6E, 0x40, 0xEA, 0x05, 0x97,
+0x03, 0x63, 0x00, 0xEF, 0xFC, 0x63, 0x07, 0x62,
+0x06, 0xD1, 0x05, 0xD0, 0x30, 0xF0, 0x20, 0x6B,
+0x24, 0x67, 0x49, 0xF2, 0x9F, 0xA3, 0x01, 0x6B,
+0xFF, 0x6A, 0x8C, 0xEB, 0x4C, 0xEB, 0x4C, 0xE9,
+0x34, 0x23, 0x30, 0xF0, 0x20, 0x68, 0xCF, 0xF4,
+0x00, 0x48, 0x30, 0xF0, 0x20, 0x6A, 0x6E, 0xF5,
+0x58, 0x9A, 0x80, 0xF2, 0x95, 0xA0, 0x40, 0xEA,
+0x01, 0x72, 0x27, 0x61, 0x30, 0xF0, 0x21, 0x6A,
+0x90, 0xF3, 0x7D, 0xA2, 0x0A, 0x6C, 0x01, 0x4B,
+0x90, 0xF3, 0x7D, 0xC2, 0x90, 0xF3, 0x7D, 0xA2,
+0x8E, 0xEB, 0x07, 0x2B, 0x80, 0xF1, 0x88, 0xA0,
+0x90, 0xF3, 0x7D, 0xC2, 0x01, 0x4C, 0x80, 0xF1,
+0x88, 0xC0, 0x30, 0xF0, 0x20, 0x6A, 0x30, 0xF0,
+0x20, 0x6B, 0xCF, 0xF4, 0x00, 0x4A, 0x69, 0xF2,
+0x80, 0xA3, 0x80, 0xF1, 0x68, 0xA2, 0x83, 0xEB,
+0x08, 0x61, 0x80, 0xF1, 0x69, 0xA2, 0x05, 0x2B,
+0x80, 0xF1, 0x68, 0xC2, 0x91, 0x67, 0x80, 0x18,
+0x34, 0x10, 0x07, 0x97, 0x06, 0x91, 0x05, 0x90,
+0x04, 0x63, 0x00, 0xEF, 0xFC, 0x63, 0x07, 0x62,
+0x06, 0xD1, 0x05, 0xD0, 0x30, 0xF0, 0x20, 0x68,
+0xCE, 0xF4, 0x4C, 0x98, 0x09, 0xD5, 0x24, 0x67,
+0x40, 0xEA, 0x0C, 0x6B, 0x4C, 0xEB, 0x08, 0x73,
+0x5E, 0x61, 0x09, 0x93, 0xCE, 0xF4, 0x4C, 0x98,
+0x86, 0x41, 0x71, 0xE4, 0x40, 0xEA, 0x88, 0x72,
+0x56, 0x61, 0x09, 0x93, 0xCE, 0xF4, 0x4C, 0x98,
+0x87, 0x41, 0x71, 0xE4, 0x40, 0xEA, 0x8E, 0x72,
+0x4E, 0x61, 0x09, 0x93, 0x87, 0x41, 0xCE, 0xF4,
+0x4C, 0x98, 0x02, 0x4C, 0x71, 0xE4, 0x40, 0xEA,
+0x03, 0x72, 0x47, 0x61, 0x09, 0x93, 0x87, 0x41,
+0xCE, 0xF4, 0x4C, 0x98, 0x07, 0x4C, 0x71, 0xE4,
+0x40, 0xEA, 0x08, 0x6B, 0x6C, 0xEA, 0x11, 0x22,
+0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A,
+0xE8, 0xF3, 0x97, 0xA2, 0x01, 0x6B, 0x6C, 0xEC,
+0x34, 0x2C, 0x10, 0xF0, 0x24, 0x6C, 0x36, 0xF4,
+0x8C, 0x9C, 0x60, 0xC4, 0x08, 0xF4, 0x81, 0xA2,
+0x26, 0x10, 0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1,
+0x08, 0x4A, 0xE8, 0xF3, 0xB3, 0xA2, 0xFF, 0x6C,
+0x6C, 0xED, 0x0E, 0x25, 0x69, 0xF0, 0xB4, 0xA2,
+0x02, 0x75, 0x05, 0x61, 0xE8, 0xF3, 0xB4, 0xA2,
+0xAC, 0xEB, 0x8C, 0xEB, 0x0B, 0x23, 0x09, 0x95,
+0x91, 0x67, 0x00, 0x18, 0x57, 0xD1, 0x15, 0x10,
+0xE8, 0xF3, 0xBA, 0xA2, 0x40, 0x6B, 0xAC, 0xEB,
+0x8C, 0xEB, 0x0F, 0x23, 0x10, 0xF0, 0x24, 0x6B,
+0x36, 0xF4, 0x6C, 0x9B, 0x02, 0x6C, 0x80, 0xC3,
 0x08, 0xF4, 0x81, 0xA2, 0x01, 0x6B, 0x8D, 0xEB,
-0x08, 0xF4, 0x61, 0xC2, 0x43, 0x10, 0x00, 0x6A,
-0x04, 0xD2, 0x05, 0xD2, 0x08, 0x04, 0x06, 0x05,
-0x0C, 0x06, 0x14, 0x97, 0x1E, 0x10, 0x69, 0xF0,
-0x54, 0xA4, 0x02, 0x72, 0x13, 0x61, 0xE8, 0xF3,
-0xB4, 0xA4, 0x08, 0x6A, 0xAC, 0xEA, 0xFF, 0x6D,
-0xAC, 0xEA, 0x0C, 0x2A, 0x10, 0xF0, 0x24, 0x6A,
-0x16, 0xF6, 0x50, 0x9A, 0x0A, 0x6D, 0xA0, 0xC2,
-0x08, 0xF4, 0x41, 0xA4, 0x4D, 0xEB, 0x08, 0xF4,
-0x61, 0xC4, 0x24, 0x10, 0x13, 0x97, 0x00, 0x6A,
-0x04, 0xD2, 0x05, 0xD2, 0x08, 0x04, 0x06, 0x05,
-0x0C, 0x06, 0x80, 0x18, 0x09, 0x0E, 0x0B, 0x10,
-0x10, 0xF0, 0x24, 0x6A, 0xF6, 0xF5, 0x6C, 0x9A,
-0xFF, 0x6C, 0x05, 0x6D, 0x40, 0xA3, 0x8C, 0xEA,
-0xAD, 0xEA, 0x8C, 0xEA, 0x40, 0xC3, 0x01, 0x49,
-0xFF, 0x6A, 0x4C, 0xE9, 0x12, 0x93, 0x40, 0xA3,
-0x43, 0xE9, 0x15, 0x61, 0x01, 0x48, 0x38, 0x4B,
-0x02, 0x70, 0x12, 0xD3, 0x03, 0x60, 0x25, 0x17,
-0x00, 0x6A, 0x01, 0x10, 0x01, 0x6A, 0x1D, 0x97,
-0x1C, 0x91, 0x1B, 0x90, 0x0F, 0x63, 0x00, 0xEF,
-0xB1, 0xE4, 0x08, 0x02, 0x28, 0xF4, 0x14, 0x4C,
-0x0C, 0x05, 0x01, 0x6B, 0x89, 0x17, 0x38, 0x6A,
-0x58, 0xE8, 0x30, 0x34, 0x0C, 0x03, 0x10, 0x05,
-0x12, 0xEA, 0x49, 0xE4, 0x30, 0xF0, 0x20, 0x6C,
-0xC0, 0xF1, 0x08, 0x4C, 0x49, 0xE4, 0x48, 0xF4,
-0x04, 0x4A, 0x01, 0x6C, 0x1B, 0x17, 0x00, 0x65,
-0xFA, 0x63, 0x0B, 0x62, 0x0A, 0xD1, 0x09, 0xD0,
-0x10, 0xF0, 0x24, 0x6B, 0xFF, 0x6A, 0x36, 0xF5,
-0x6C, 0x9B, 0x4C, 0xEE, 0x4C, 0xEF, 0x0C, 0xD4,
-0x0D, 0xD5, 0x06, 0xD6, 0x04, 0xD7, 0x60, 0xA3,
-0x6C, 0xEA, 0x05, 0xD2, 0x10, 0xF0, 0x24, 0x6A,
-0x16, 0xF5, 0x58, 0x9A, 0x02, 0xF0, 0x00, 0x6B,
-0x40, 0x9A, 0x6C, 0xEA, 0x1C, 0x22, 0x30, 0xF0,
-0x20, 0x6A, 0x6E, 0xF2, 0x58, 0x9A, 0x00, 0x6C,
-0xFF, 0x6D, 0x33, 0x6E, 0x40, 0xEA, 0x30, 0xF0,
-0x20, 0x6A, 0xCE, 0xF2, 0x40, 0x9A, 0x00, 0x68,
-0x40, 0xEA, 0x01, 0x72, 0x19, 0x61, 0x30, 0xF0,
-0x20, 0x6A, 0x30, 0xF0, 0x20, 0x6B, 0x6E, 0xF2,
-0x5C, 0x9A, 0x49, 0xF2, 0x84, 0xA3, 0x01, 0x6D,
-0x18, 0x6E, 0xF0, 0x67, 0x0B, 0x10, 0x30, 0xF0,
-0x20, 0x6A, 0x30, 0xF0, 0x20, 0x6B, 0x6E, 0xF2,
-0x5C, 0x9A, 0x49, 0xF2, 0x84, 0xA3, 0x01, 0x6D,
-0x18, 0x6E, 0x00, 0x6F, 0x40, 0xEA, 0x02, 0x67,
-0x10, 0xF0, 0x24, 0x6A, 0x10, 0xF0, 0x24, 0x6B,
-0x36, 0xF6, 0x50, 0x9A, 0xB6, 0xF5, 0x7C, 0x9B,
-0x49, 0xE0, 0x6D, 0xE0, 0x80, 0xA2, 0xA0, 0xA3,
-0x10, 0xF0, 0x24, 0x6B, 0x36, 0xF6, 0x74, 0x9B,
-0xFF, 0x6A, 0x4C, 0xEC, 0x6D, 0xE0, 0xC0, 0xA3,
-0x4C, 0xED, 0x4C, 0xEE, 0x80, 0x18, 0x4F, 0x09,
-0x06, 0x95, 0x87, 0x40, 0x29, 0x4C, 0x22, 0x67,
-0x80, 0x18, 0xD6, 0x0D, 0x04, 0x92, 0x2E, 0x2A,
-0x10, 0xF0, 0x24, 0x6C, 0x10, 0xF0, 0x24, 0x6A,
-0x36, 0xF6, 0x8C, 0x9C, 0x10, 0xF0, 0x24, 0x6D,
-0x36, 0xF6, 0x48, 0x9A, 0x36, 0xF6, 0xA0, 0x9D,
-0x0D, 0x93, 0x91, 0xE0, 0x49, 0xE0, 0x31, 0xE4,
-0xB5, 0xE0, 0xC0, 0xA3, 0xC0, 0xC2, 0xC0, 0xA3,
-0x01, 0x4A, 0xAA, 0xEA, 0xC0, 0xC4, 0x01, 0x4B,
-0x01, 0x4C, 0xF7, 0x61, 0x10, 0xF0, 0x24, 0x6A,
-0x10, 0xF0, 0x24, 0x6C, 0x36, 0xF6, 0x44, 0x9A,
-0xD6, 0xF6, 0x90, 0x9C, 0x0C, 0x93, 0x49, 0xE0,
-0x81, 0xE0, 0x29, 0xE2, 0x21, 0xE0, 0x80, 0xA3,
-0x01, 0x4B, 0x80, 0xC2, 0x01, 0x4A, 0x0A, 0xEA,
-0xFA, 0x61, 0x2D, 0x10, 0x04, 0x92, 0x01, 0x72,
-0x2A, 0x61, 0x10, 0xF0, 0x24, 0x6B, 0x36, 0xF6,
-0x88, 0x9B, 0x10, 0xF0, 0x24, 0x6B, 0x36, 0xF6,
-0x6C, 0x9B, 0x30, 0xF0, 0x20, 0x6A, 0xE8, 0xF5,
-0x00, 0x4A, 0x6D, 0xE0, 0x91, 0xE0, 0x2D, 0xE3,
-0xA6, 0x42, 0xC0, 0xA2, 0xC0, 0xC4, 0xCA, 0xA2,
-0x01, 0x4A, 0xAA, 0xEA, 0xC0, 0xC3, 0x01, 0x4C,
-0x01, 0x4B, 0xF7, 0x61, 0x10, 0xF0, 0x24, 0x6B,
-0x36, 0xF6, 0x64, 0x9B, 0x30, 0xF0, 0x20, 0x6A,
-0xE8, 0xF5, 0x10, 0x4A, 0x61, 0xE0, 0x21, 0xE0,
-0x64, 0x42, 0x80, 0xA2, 0x01, 0x4A, 0x6A, 0xEA,
-0x80, 0xC0, 0x01, 0x48, 0xFA, 0x61, 0x30, 0xF0,
-0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A, 0x69, 0xF0,
-0x74, 0xA2, 0x02, 0x73, 0x05, 0x61, 0x69, 0xF0,
-0x9C, 0xA2, 0xB1, 0x67, 0x80, 0x18, 0xE1, 0x09,
-0x10, 0xF0, 0x24, 0x6A, 0xD6, 0xF6, 0x74, 0x9A,
-0xFF, 0x6C, 0x10, 0x6D, 0x40, 0xA3, 0x34, 0x6E,
-0x8C, 0xEA, 0xAD, 0xEA, 0x8C, 0xEA, 0x40, 0xC3,
-0x30, 0xF0, 0x20, 0x6A, 0x05, 0x95, 0x6E, 0xF2,
-0x58, 0x9A, 0x00, 0x6C, 0x40, 0xEA, 0x30, 0xF0,
-0x20, 0x6A, 0x8E, 0xF2, 0x5C, 0x9A, 0x40, 0xEA,
-0x0B, 0x97, 0x0A, 0x91, 0x09, 0x90, 0x06, 0x63,
-0x00, 0xEF, 0x00, 0x65, 0xF6, 0x63, 0x13, 0x62,
-0x12, 0xD1, 0x11, 0xD0, 0x00, 0x6A, 0x7D, 0x67,
-0x30, 0xF0, 0x20, 0x6E, 0x08, 0xD2, 0x52, 0xCB,
-0x04, 0xD2, 0xCE, 0xF4, 0x4C, 0x9E, 0x04, 0x67,
-0x06, 0x4C, 0xB1, 0xE4, 0x25, 0x67, 0x40, 0xEA,
-0x08, 0x72, 0xE0, 0xF0, 0x05, 0x61, 0x30, 0xF0,
-0x20, 0x6B, 0xCE, 0xF4, 0x4C, 0x9B, 0x87, 0x40,
-0x31, 0xE4, 0x40, 0xEA, 0x06, 0x72, 0xC0, 0xF0,
-0x1B, 0x61, 0x87, 0x40, 0x03, 0x4C, 0x06, 0x06,
-0x00, 0xF0, 0x1E, 0x02, 0x0B, 0xD4, 0x0A, 0xD6,
-0x0C, 0xD2, 0x30, 0xF0, 0x20, 0x6A, 0x0B, 0x94,
-0xCE, 0xF4, 0x4C, 0x9A, 0x40, 0xEA, 0x0A, 0x93,
-0x0B, 0x94, 0x0C, 0x96, 0x40, 0xC3, 0x01, 0x4B,
-0x01, 0x4C, 0xCA, 0xEB, 0x0B, 0xD4, 0x0A, 0xD3,
-0xF0, 0x61, 0x00, 0x6A, 0x01, 0x6C, 0x30, 0xF0,
-0x20, 0x6D, 0x06, 0x03, 0xC0, 0xF1, 0x08, 0x4D,
-0x59, 0xE3, 0x55, 0xE5, 0xC0, 0xA6, 0x08, 0xF4,
-0xA8, 0xA5, 0x01, 0x4A, 0xCE, 0xED, 0x01, 0x5D,
-0xB8, 0x67, 0xAB, 0xED, 0x06, 0x72, 0xAC, 0xEC,
-0xEE, 0x61, 0x58, 0x67, 0x01, 0x74, 0x05, 0xD2,
-0x01, 0x6A, 0xA0, 0xF0, 0x0A, 0x61, 0x47, 0x40,
-0x19, 0x4A, 0x29, 0xE2, 0x05, 0x04, 0x0B, 0xD2,
-0x0A, 0xD4, 0x0D, 0xD3, 0x30, 0xF0, 0x20, 0x6A,
-0xCE, 0xF4, 0x4C, 0x9A, 0x0B, 0x94, 0x40, 0xEA,
-0x0A, 0x96, 0x0D, 0x93, 0x40, 0xC6, 0x0B, 0x92,
-0x01, 0x4E, 0x6A, 0xEE, 0x01, 0x4A, 0x0B, 0xD2,
-0x0A, 0xD6, 0xF0, 0x61, 0x30, 0xF0, 0x20, 0x6A,
-0x9D, 0x67, 0xC0, 0xF1, 0x08, 0x4A, 0xDD, 0x67,
-0x75, 0xA6, 0xB4, 0xA4, 0x08, 0xF4, 0x9E, 0xA2,
-0x08, 0xF4, 0x5F, 0xA2, 0x6E, 0xEA, 0x00, 0x6B,
-0x04, 0x2A, 0x65, 0x67, 0x8E, 0xEB, 0x01, 0x5B,
-0x78, 0x67, 0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1,
-0x08, 0x4A, 0x9D, 0x67, 0xB6, 0xA4, 0x28, 0xF4,
-0x80, 0xA2, 0xAE, 0xEC, 0x01, 0x5C, 0x98, 0x67,
-0x8B, 0xEC, 0x8C, 0xEB, 0x9D, 0x67, 0xB7, 0xA4,
-0x28, 0xF4, 0x81, 0xA2, 0xAE, 0xEC, 0x5C, 0x2C,
-0x01, 0x73, 0x5A, 0x61, 0x10, 0xF0, 0x24, 0x6B,
-0xD6, 0xF6, 0xD4, 0x9B, 0xFF, 0x6D, 0xDE, 0x4C,
-0x60, 0xA6, 0xAC, 0xEB, 0x8C, 0xEB, 0x01, 0x6C,
-0x8D, 0xEB, 0xAC, 0xEB, 0x60, 0xC6, 0xE8, 0xF3,
-0x75, 0xA2, 0x8C, 0xEB, 0xAC, 0xEB, 0x14, 0x2B,
-0x69, 0xF0, 0x74, 0xA2, 0x02, 0x73, 0x0A, 0x60,
-0x47, 0x40, 0x09, 0x4A, 0x29, 0xE2, 0x0B, 0xD2,
-0x08, 0x06, 0x20, 0xF0, 0x06, 0x02, 0x0A, 0xD6,
-0x0E, 0xD2, 0x12, 0x10, 0xE8, 0xF3, 0xD4, 0xA2,
-0x08, 0x6B, 0xCC, 0xEB, 0xAC, 0xEB, 0xF0, 0x2B,
-0x10, 0xF0, 0x24, 0x6B, 0x16, 0xF6, 0x70, 0x9B,
-0x09, 0x6D, 0xA0, 0xC3, 0x08, 0xF4, 0x61, 0xA2,
-0x6D, 0xEC, 0x08, 0xF4, 0x81, 0xC2, 0x36, 0x10,
-0x30, 0xF0, 0x20, 0x6A, 0x0B, 0x94, 0xCE, 0xF4,
-0x4C, 0x9A, 0x40, 0xEA, 0x0A, 0x93, 0x0B, 0x94,
-0x0E, 0x96, 0x40, 0xC3, 0x01, 0x4B, 0x01, 0x4C,
-0xCA, 0xEB, 0x0B, 0xD4, 0x0A, 0xD3, 0xF0, 0x61,
-0x16, 0x48, 0x05, 0x02, 0x25, 0xE0, 0x0F, 0xD2,
-0x04, 0x00, 0x30, 0xF0, 0x20, 0x6A, 0xCE, 0xF4,
-0x4C, 0x9A, 0x91, 0x67, 0x01, 0x49, 0x40, 0xEA,
-0x0F, 0x93, 0x40, 0xC0, 0x01, 0x48, 0x6A, 0xE8,
-0xF4, 0x61, 0x00, 0x6E, 0x04, 0x04, 0x08, 0x05,
-0xE6, 0x67, 0x80, 0x18, 0x2C, 0x0F, 0x0E, 0x10,
-0x10, 0xF0, 0x24, 0x6A, 0xD6, 0xF6, 0x74, 0x9A,
-0xFF, 0x6C, 0x32, 0x6D, 0x40, 0xA3, 0xAB, 0xED,
-0x8C, 0xEA, 0xAC, 0xEA, 0x21, 0x6D, 0xAD, 0xEA,
-0x8C, 0xEA, 0x40, 0xC3, 0x01, 0x6A, 0x01, 0x10,
-0x00, 0x6A, 0x13, 0x97, 0x12, 0x91, 0x11, 0x90,
-0x0A, 0x63, 0x00, 0xEF, 0xFD, 0x63, 0x05, 0x62,
-0xE4, 0x67, 0x30, 0xF0, 0x20, 0x6C, 0xC0, 0xF1,
-0x08, 0x4C, 0x89, 0xF0, 0xB7, 0xA4, 0x04, 0x6B,
-0xFF, 0x6A, 0xAC, 0xEB, 0x4C, 0xEB, 0x4C, 0xEF,
-0x07, 0x23, 0x00, 0x6C, 0xA4, 0x67, 0xC4, 0x67,
-0x01, 0x6F, 0x80, 0x18, 0x2C, 0x0F, 0x09, 0x10,
-0x30, 0xF0, 0x20, 0x6A, 0x2E, 0xF4, 0x50, 0x9A,
-0xC8, 0xF2, 0x9F, 0xA4, 0x02, 0x6D, 0x08, 0x6E,
-0x40, 0xEA, 0x05, 0x97, 0x03, 0x63, 0x00, 0xEF,
+0x08, 0xF4, 0x61, 0xC2, 0x02, 0x10, 0x00, 0x6A,
+0x01, 0x10, 0x01, 0x6A, 0x07, 0x97, 0x06, 0x91,
+0x05, 0x90, 0x04, 0x63, 0x00, 0xEF, 0x00, 0x65,
 0xFB, 0x63, 0x09, 0x62, 0x08, 0xD1, 0x07, 0xD0,
-0xFF, 0x6A, 0x8C, 0xEA, 0x30, 0xF0, 0x20, 0x69,
-0x04, 0xD2, 0xC0, 0xF1, 0x08, 0x49, 0x89, 0xF0,
-0x77, 0xA1, 0x01, 0x6A, 0x6C, 0xEA, 0xFF, 0x6B,
-0x6C, 0xEA, 0x3D, 0x22, 0x30, 0xF0, 0x20, 0x68,
-0xCF, 0xF4, 0x00, 0x48, 0x30, 0xF0, 0x20, 0x6A,
-0x6E, 0xF5, 0x58, 0x9A, 0x80, 0xF2, 0x95, 0xA0,
-0x40, 0xEA, 0x01, 0x72, 0x30, 0x61, 0x89, 0xF0,
-0x77, 0xA1, 0x40, 0x6A, 0x4B, 0xEA, 0x6C, 0xEA,
-0xFF, 0x6C, 0x8C, 0xEA, 0x40, 0x72, 0x27, 0x60,
-0x30, 0xF0, 0x21, 0x6A, 0x90, 0xF3, 0x7D, 0xA2,
-0x0A, 0x6C, 0x01, 0x4B, 0x90, 0xF3, 0x7D, 0xC2,
-0x90, 0xF3, 0x7D, 0xA2, 0x8E, 0xEB, 0x07, 0x2B,
-0x80, 0xF1, 0x88, 0xA0, 0x90, 0xF3, 0x7D, 0xC2,
-0x01, 0x4C, 0x80, 0xF1, 0x88, 0xC0, 0x30, 0xF0,
-0x20, 0x6A, 0x30, 0xF0, 0x20, 0x6B, 0xCF, 0xF4,
-0x00, 0x4A, 0x69, 0xF2, 0x80, 0xA3, 0x80, 0xF1,
-0x68, 0xA2, 0x83, 0xEB, 0x08, 0x61, 0x80, 0xF1,
-0x69, 0xA2, 0x05, 0x2B, 0x04, 0x94, 0x80, 0xF1,
-0x68, 0xC2, 0x80, 0x18, 0x21, 0x10, 0x09, 0x97,
-0x08, 0x91, 0x07, 0x90, 0x05, 0x63, 0x00, 0xEF,
-0xFC, 0x63, 0x07, 0x62, 0x06, 0xD1, 0x05, 0xD0,
-0x30, 0xF0, 0x20, 0x68, 0xCE, 0xF4, 0x4C, 0x98,
-0x09, 0xD5, 0x24, 0x67, 0x40, 0xEA, 0x0C, 0x6B,
-0x4C, 0xEB, 0x08, 0x73, 0x5E, 0x61, 0x09, 0x93,
-0xCE, 0xF4, 0x4C, 0x98, 0x86, 0x41, 0x71, 0xE4,
-0x40, 0xEA, 0x88, 0x72, 0x56, 0x61, 0x09, 0x93,
-0xCE, 0xF4, 0x4C, 0x98, 0x87, 0x41, 0x71, 0xE4,
-0x40, 0xEA, 0x8E, 0x72, 0x4E, 0x61, 0x09, 0x93,
-0x87, 0x41, 0xCE, 0xF4, 0x4C, 0x98, 0x02, 0x4C,
-0x71, 0xE4, 0x40, 0xEA, 0x03, 0x72, 0x47, 0x61,
-0x09, 0x93, 0x87, 0x41, 0xCE, 0xF4, 0x4C, 0x98,
-0x07, 0x4C, 0x71, 0xE4, 0x40, 0xEA, 0x08, 0x6B,
-0x6C, 0xEA, 0x11, 0x22, 0x30, 0xF0, 0x20, 0x6A,
-0xC0, 0xF1, 0x08, 0x4A, 0xE8, 0xF3, 0x97, 0xA2,
-0x01, 0x6B, 0x6C, 0xEC, 0x34, 0x2C, 0x10, 0xF0,
-0x24, 0x6C, 0x16, 0xF6, 0x90, 0x9C, 0x60, 0xC4,
-0x08, 0xF4, 0x81, 0xA2, 0x26, 0x10, 0x30, 0xF0,
-0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A, 0xE8, 0xF3,
-0xB3, 0xA2, 0xFF, 0x6C, 0x6C, 0xED, 0x0E, 0x25,
-0x69, 0xF0, 0xB4, 0xA2, 0x02, 0x75, 0x05, 0x61,
-0xE8, 0xF3, 0xB4, 0xA2, 0xAC, 0xEB, 0x8C, 0xEB,
-0x0B, 0x23, 0x09, 0x95, 0x91, 0x67, 0x00, 0x18,
-0x66, 0xD1, 0x15, 0x10, 0xE8, 0xF3, 0xBA, 0xA2,
-0x40, 0x6B, 0xAC, 0xEB, 0x8C, 0xEB, 0x0F, 0x23,
-0x10, 0xF0, 0x24, 0x6B, 0x16, 0xF6, 0x70, 0x9B,
-0x02, 0x6C, 0x80, 0xC3, 0x08, 0xF4, 0x81, 0xA2,
-0x01, 0x6B, 0x8D, 0xEB, 0x08, 0xF4, 0x61, 0xC2,
-0x02, 0x10, 0x00, 0x6A, 0x01, 0x10, 0x01, 0x6A,
-0x07, 0x97, 0x06, 0x91, 0x05, 0x90, 0x04, 0x63,
-0x00, 0xEF, 0x00, 0x65, 0xFB, 0x63, 0x09, 0x62,
-0x08, 0xD1, 0x07, 0xD0, 0x30, 0xF0, 0x20, 0x6A,
-0x4E, 0xF2, 0x4C, 0x9A, 0xFF, 0x69, 0x04, 0x00,
-0x8C, 0xE9, 0x00, 0x6D, 0x90, 0x67, 0x08, 0x6E,
-0x40, 0xEA, 0x01, 0x6A, 0x2C, 0xEA, 0x12, 0x2A,
-0x30, 0xF0, 0x20, 0x6A, 0x29, 0xF2, 0x7C, 0xA2,
+0x30, 0xF0, 0x20, 0x6A, 0x4E, 0xF2, 0x4C, 0x9A,
+0xFF, 0x69, 0x04, 0x00, 0x8C, 0xE9, 0x00, 0x6D,
+0x90, 0x67, 0x08, 0x6E, 0x40, 0xEA, 0x01, 0x6A,
+0x2C, 0xEA, 0x12, 0x2A, 0x30, 0xF0, 0x20, 0x6A,
+0x29, 0xF2, 0x7C, 0xA2, 0x30, 0xF0, 0x20, 0x6A,
+0x30, 0xF0, 0x20, 0x6D, 0x0F, 0xF6, 0x71, 0xC2,
+0x30, 0xF0, 0x20, 0x6A, 0x4E, 0xF2, 0x50, 0x9A,
+0x90, 0x67, 0x0F, 0xF6, 0x18, 0x4D, 0x3B, 0x10,
+0x30, 0xF0, 0x20, 0x6B, 0x29, 0xF2, 0x7D, 0xA3,
+0x30, 0xF0, 0x20, 0x6A, 0xCF, 0xF4, 0x00, 0x4A,
+0x40, 0xF1, 0x71, 0xC2, 0x40, 0xF1, 0x50, 0xA2,
+0x01, 0x72, 0x10, 0x60, 0x05, 0x22, 0x02, 0x72,
+0x17, 0x60, 0x03, 0x72, 0x1F, 0x60, 0x29, 0x10,
 0x30, 0xF0, 0x20, 0x6A, 0x30, 0xF0, 0x20, 0x6D,
-0x0F, 0xF6, 0x71, 0xC2, 0x30, 0xF0, 0x20, 0x6A,
-0x4E, 0xF2, 0x50, 0x9A, 0x90, 0x67, 0x0F, 0xF6,
-0x18, 0x4D, 0x3B, 0x10, 0x30, 0xF0, 0x20, 0x6B,
-0x29, 0xF2, 0x7D, 0xA3, 0x30, 0xF0, 0x20, 0x6A,
-0xCF, 0xF4, 0x00, 0x4A, 0x40, 0xF1, 0x71, 0xC2,
-0x40, 0xF1, 0x50, 0xA2, 0x01, 0x72, 0x10, 0x60,
-0x05, 0x22, 0x02, 0x72, 0x17, 0x60, 0x03, 0x72,
-0x1F, 0x60, 0x29, 0x10, 0x30, 0xF0, 0x20, 0x6A,
+0x4E, 0xF2, 0x50, 0x9A, 0x90, 0x67, 0x2F, 0xF6,
+0x00, 0x4D, 0x1D, 0x10, 0x30, 0xF0, 0x20, 0x6A,
 0x30, 0xF0, 0x20, 0x6D, 0x4E, 0xF2, 0x50, 0x9A,
-0x90, 0x67, 0x2F, 0xF6, 0x00, 0x4D, 0x1D, 0x10,
+0x90, 0x67, 0x2F, 0xF6, 0x08, 0x4D, 0x13, 0x10,
 0x30, 0xF0, 0x20, 0x6A, 0x30, 0xF0, 0x20, 0x6D,
 0x4E, 0xF2, 0x50, 0x9A, 0x90, 0x67, 0x2F, 0xF6,
-0x08, 0x4D, 0x13, 0x10, 0x30, 0xF0, 0x20, 0x6A,
-0x30, 0xF0, 0x20, 0x6D, 0x4E, 0xF2, 0x50, 0x9A,
-0x90, 0x67, 0x2F, 0xF6, 0x10, 0x4D, 0x09, 0x10,
-0x30, 0xF0, 0x20, 0x6A, 0x4E, 0xF2, 0x50, 0x9A,
-0x30, 0xF0, 0x20, 0x6D, 0x90, 0x67, 0x2F, 0xF6,
-0x18, 0x4D, 0x08, 0x6E, 0x40, 0xEA, 0x30, 0xF0,
-0x20, 0x6A, 0xCF, 0xF4, 0x00, 0x4A, 0x40, 0xF1,
-0xB1, 0xA2, 0x07, 0x5D, 0x80, 0xF0, 0x07, 0x60,
-0x40, 0xF1, 0x71, 0x82, 0x01, 0x6A, 0x44, 0xEB,
-0x14, 0x6B, 0x4C, 0xEB, 0x07, 0x2B, 0x62, 0x6B,
-0x4C, 0xEB, 0x7D, 0x23, 0x04, 0x04, 0x00, 0x18,
-0x50, 0xD0, 0x03, 0x10, 0x04, 0x04, 0x00, 0x18,
-0x2D, 0xD0, 0x02, 0x67, 0x63, 0x22, 0x01, 0x6A,
-0x2C, 0xEA, 0x13, 0x2A, 0x30, 0xF0, 0x20, 0x6A,
-0x30, 0xF0, 0x20, 0x6D, 0x4E, 0xF2, 0x50, 0x9A,
-0x0F, 0xF6, 0x18, 0x4D, 0x85, 0x67, 0xBB, 0x4D,
-0x08, 0x6E, 0x40, 0xEA, 0x30, 0xF0, 0x20, 0x6B,
-0xCF, 0xF5, 0x13, 0x4B, 0x80, 0xF4, 0x0C, 0x6A,
-0x34, 0x10, 0x30, 0xF0, 0x20, 0x6A, 0x0F, 0xF6,
-0x50, 0xA2, 0x01, 0x72, 0x0F, 0x60, 0x05, 0x22,
-0x02, 0x72, 0x15, 0x60, 0x03, 0x72, 0x1C, 0x60,
-0xED, 0x17, 0x30, 0xF0, 0x20, 0x6A, 0x30, 0xF0,
-0x20, 0x6C, 0x4E, 0xF2, 0x50, 0x9A, 0x2F, 0xF6,
-0x00, 0x4C, 0x1A, 0x10, 0x30, 0xF0, 0x20, 0x6A,
-0x30, 0xF0, 0x20, 0x6C, 0x4E, 0xF2, 0x50, 0x9A,
-0x2F, 0xF6, 0x08, 0x4C, 0x11, 0x10, 0x30, 0xF0,
+0x10, 0x4D, 0x09, 0x10, 0x30, 0xF0, 0x20, 0x6A,
+0x4E, 0xF2, 0x50, 0x9A, 0x30, 0xF0, 0x20, 0x6D,
+0x90, 0x67, 0x2F, 0xF6, 0x18, 0x4D, 0x08, 0x6E,
+0x40, 0xEA, 0x30, 0xF0, 0x20, 0x6A, 0xCF, 0xF4,
+0x00, 0x4A, 0x40, 0xF1, 0xB1, 0xA2, 0x07, 0x5D,
+0x80, 0xF0, 0x07, 0x60, 0x40, 0xF1, 0x71, 0x82,
+0x01, 0x6A, 0x44, 0xEB, 0x14, 0x6B, 0x4C, 0xEB,
+0x07, 0x2B, 0x62, 0x6B, 0x4C, 0xEB, 0x7D, 0x23,
+0x04, 0x04, 0x00, 0x18, 0x41, 0xD0, 0x03, 0x10,
+0x04, 0x04, 0x00, 0x18, 0x1E, 0xD0, 0x02, 0x67,
+0x63, 0x22, 0x01, 0x6A, 0x2C, 0xEA, 0x13, 0x2A,
+0x30, 0xF0, 0x20, 0x6A, 0x30, 0xF0, 0x20, 0x6D,
+0x4E, 0xF2, 0x50, 0x9A, 0x0F, 0xF6, 0x18, 0x4D,
+0x85, 0x67, 0xBB, 0x4D, 0x08, 0x6E, 0x40, 0xEA,
+0x30, 0xF0, 0x20, 0x6B, 0xCF, 0xF5, 0x13, 0x4B,
+0x80, 0xF4, 0x0C, 0x6A, 0x34, 0x10, 0x30, 0xF0,
+0x20, 0x6A, 0x0F, 0xF6, 0x50, 0xA2, 0x01, 0x72,
+0x0F, 0x60, 0x05, 0x22, 0x02, 0x72, 0x15, 0x60,
+0x03, 0x72, 0x1C, 0x60, 0xED, 0x17, 0x30, 0xF0,
 0x20, 0x6A, 0x30, 0xF0, 0x20, 0x6C, 0x4E, 0xF2,
-0x50, 0x9A, 0x2F, 0xF6, 0x10, 0x4C, 0x08, 0x10,
-0x30, 0xF0, 0x20, 0x6A, 0x4E, 0xF2, 0x50, 0x9A,
-0x30, 0xF0, 0x20, 0x6C, 0x2F, 0xF6, 0x18, 0x4C,
-0x30, 0xF0, 0x20, 0x6D, 0xCF, 0xF5, 0x13, 0x4D,
-0xC3, 0x17, 0x1F, 0xF7, 0x00, 0x6C, 0x4C, 0xEC,
-0x02, 0xF0, 0x00, 0x74, 0x01, 0x60, 0x05, 0x2C,
-0x10, 0xF0, 0x24, 0x6C, 0xB6, 0xF4, 0x8C, 0x9C,
-0x04, 0x10, 0x10, 0xF0, 0x24, 0x6C, 0xB6, 0xF4,
-0x90, 0x9C, 0xA0, 0xA3, 0x91, 0xE2, 0x01, 0x4A,
-0x80, 0xF4, 0x14, 0x72, 0xA0, 0xC4, 0x01, 0x4B,
-0xE8, 0x61, 0x0B, 0x10, 0x10, 0xF0, 0x24, 0x6A,
-0xF6, 0xF5, 0x6C, 0x9A, 0xFF, 0x6C, 0x08, 0x6D,
-0x40, 0xA3, 0x8C, 0xEA, 0xAD, 0xEA, 0x8C, 0xEA,
-0x40, 0xC3, 0x50, 0x67, 0x09, 0x97, 0x08, 0x91,
-0x07, 0x90, 0x05, 0x63, 0x00, 0xEF, 0x01, 0x68,
-0x8A, 0x17, 0x00, 0x65, 0xF7, 0x63, 0x11, 0x62,
-0x10, 0xD1, 0x0F, 0xD0, 0x10, 0xF0, 0x24, 0x6B,
-0x76, 0xF4, 0x7C, 0x9B, 0x10, 0xF0, 0x30, 0x6A,
-0x48, 0xF4, 0x05, 0x4A, 0x40, 0xDB, 0x10, 0xF0,
-0x24, 0x6A, 0xD6, 0xF6, 0x58, 0x9A, 0x40, 0x9A,
-0x05, 0xD2, 0x10, 0xF0, 0x24, 0x6A, 0xB6, 0xF6,
-0x54, 0x9A, 0x05, 0x93, 0x4C, 0xEB, 0x10, 0xF0,
-0x24, 0x6A, 0x16, 0xF5, 0x50, 0x9A, 0x05, 0xD3,
-0xFF, 0x6B, 0x40, 0xA2, 0x82, 0x67, 0x6C, 0xEC,
-0x30, 0xF0, 0x20, 0x6A, 0x0C, 0xD4, 0xA8, 0xF5,
-0x9B, 0xA2, 0x01, 0x6A, 0x8C, 0xEA, 0x6C, 0xEA,
-0x20, 0xF2, 0x04, 0x22, 0x00, 0x6D, 0x09, 0xD5,
-0x08, 0xD5, 0x65, 0x67, 0x09, 0x12, 0x30, 0xF0,
-0x20, 0x69, 0x05, 0x94, 0xCE, 0xF4, 0x4C, 0x99,
-0x02, 0x4C, 0x40, 0xEA, 0x05, 0x94, 0x02, 0x67,
-0xCE, 0xF4, 0x4C, 0x99, 0x03, 0x4C, 0x40, 0xEA,
-0x03, 0x6B, 0x4C, 0xEB, 0x0F, 0x6A, 0x05, 0x94,
-0x0C, 0xEA, 0x18, 0x4B, 0x4C, 0x32, 0x49, 0xE3,
-0x81, 0xE2, 0x0B, 0xD2, 0xCE, 0xF4, 0x4C, 0x99,
-0x90, 0x67, 0x40, 0xEA, 0x06, 0xD2, 0xCE, 0xF4,
-0x4C, 0x99, 0x81, 0x40, 0x40, 0xEA, 0x07, 0xD2,
-0xCE, 0xF4, 0x4C, 0x99, 0x84, 0x40, 0x40, 0xEA,
-0x07, 0x95, 0x06, 0x94, 0xC2, 0x67, 0x80, 0x18,
-0x4F, 0x09, 0x07, 0xD2, 0xCE, 0xF4, 0x4C, 0x99,
-0x90, 0x67, 0x40, 0xEA, 0x05, 0x94, 0xFC, 0x6D,
-0x4C, 0xED, 0xCE, 0xF4, 0x4C, 0x99, 0x06, 0xD5,
-0x01, 0x4C, 0x40, 0xEA, 0x04, 0xD2, 0x05, 0x94,
-0xCE, 0xF4, 0x4C, 0x99, 0x40, 0xEA, 0x04, 0x93,
-0x05, 0x94, 0x60, 0x33, 0x4D, 0xEB, 0xE7, 0xF7,
-0x1F, 0x6A, 0x4C, 0xEB, 0xCE, 0xF4, 0x4C, 0x99,
-0x04, 0xD3, 0x0F, 0x4C, 0x40, 0xEA, 0x0D, 0xD2,
-0x04, 0x95, 0x0B, 0x93, 0x30, 0xF0, 0x20, 0x6A,
-0x0E, 0xF5, 0x44, 0x9A, 0x71, 0xE5, 0x40, 0xEA,
-0x0B, 0xD2, 0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1,
-0x08, 0x4A, 0xEB, 0xF6, 0xB4, 0xA2, 0x01, 0x6B,
-0xFF, 0x6C, 0x6C, 0xED, 0x14, 0x25, 0x06, 0x95,
-0x50, 0x75, 0x03, 0x60, 0x80, 0x75, 0xE0, 0xF0,
-0x14, 0x61, 0x89, 0xF0, 0x50, 0xA2, 0x4C, 0xEB,
-0x8C, 0xEB, 0xE0, 0xF0, 0x0E, 0x23, 0x30, 0xF0,
-0x20, 0x6A, 0x4E, 0xF3, 0x54, 0x9A, 0x04, 0x95,
-0x90, 0x67, 0x40, 0xEA, 0xE6, 0x10, 0x06, 0x92,
-0x88, 0x72, 0x30, 0x60, 0x89, 0x5A, 0x03, 0x60,
-0x08, 0x72, 0x2C, 0x60, 0xDE, 0x10, 0x06, 0x93,
-0xA0, 0x73, 0x03, 0x60, 0xC0, 0x73, 0xC0, 0xF0,
-0x18, 0x61, 0x30, 0xF0, 0x20, 0x69, 0xC0, 0xF1,
-0x08, 0x49, 0xE8, 0xF3, 0x7A, 0xA1, 0x80, 0x6A,
-0x4B, 0xEA, 0x6C, 0xEA, 0xFF, 0x6B, 0x6C, 0xEA,
-0xC0, 0xF0, 0x0B, 0x22, 0x08, 0xF4, 0x4E, 0xA1,
-0x90, 0x67, 0x01, 0x4A, 0x08, 0xF4, 0x4E, 0xC1,
-0x80, 0x18, 0x44, 0x08, 0xC0, 0xF0, 0x01, 0x22,
-0x90, 0x67, 0x80, 0x18, 0x5B, 0x08, 0xA0, 0xF0,
-0x1C, 0x22, 0x06, 0x94, 0x80, 0x18, 0xCE, 0x09,
-0x08, 0xF4, 0x4F, 0xA1, 0x01, 0x4A, 0x08, 0xF4,
-0x4F, 0xC1, 0xB3, 0x10, 0x30, 0xF0, 0x20, 0x69,
-0xCE, 0xF4, 0x4C, 0x99, 0x84, 0x40, 0x04, 0xD4,
-0x40, 0xEA, 0x82, 0x67, 0x80, 0x18, 0x40, 0x09,
-0x07, 0x95, 0xC2, 0x67, 0x90, 0x67, 0x80, 0x18,
-0x8F, 0x09, 0x04, 0x94, 0xCE, 0xF4, 0x4C, 0x99,
-0x40, 0xEA, 0x82, 0x67, 0x80, 0x18, 0x97, 0x10,
-0x80, 0xF0, 0x10, 0x22, 0x30, 0xF0, 0x20, 0x6A,
-0xA8, 0xF5, 0x7B, 0xA2, 0x40, 0x6A, 0x6C, 0xEA,
-0x22, 0x22, 0x07, 0x92, 0x08, 0x4A, 0x09, 0xE2,
-0x04, 0xD2, 0x04, 0x94, 0xCE, 0xF4, 0x4C, 0x99,
-0x40, 0xEA, 0x45, 0x72, 0x18, 0x61, 0x04, 0x94,
-0x00, 0x18, 0xBC, 0xD3, 0x01, 0x72, 0x13, 0x61,
-0x04, 0x94, 0x00, 0x18, 0xCE, 0xD3, 0x01, 0x72,
-0x0E, 0x61, 0x04, 0x94, 0x00, 0x18, 0x91, 0xD3,
-0x04, 0x22, 0x01, 0x6D, 0x09, 0xD5, 0x08, 0xD5,
-0x06, 0x10, 0x04, 0x94, 0x00, 0x18, 0xE6, 0xD3,
-0x01, 0x6B, 0x09, 0xD3, 0x08, 0xD3, 0x90, 0x67,
-0x80, 0x18, 0x44, 0x08, 0x08, 0x22, 0x07, 0x95,
-0x90, 0x67, 0x80, 0x18, 0x5C, 0x10, 0x03, 0x22,
-0x01, 0x6D, 0x09, 0xD5, 0x08, 0xD5, 0x30, 0xF0,
-0x20, 0x6A, 0xA8, 0xF5, 0x7B, 0xA2, 0x02, 0x6A,
-0x6C, 0xEA, 0x08, 0x22, 0x07, 0x95, 0x90, 0x67,
-0x80, 0x18, 0xA1, 0x0F, 0x03, 0x22, 0x01, 0x6B,
-0x09, 0xD3, 0x08, 0xD3, 0x30, 0xF0, 0x20, 0x6A,
-0xA8, 0xF5, 0x7B, 0xA2, 0x04, 0x6A, 0x6C, 0xEA,
+0x50, 0x9A, 0x2F, 0xF6, 0x00, 0x4C, 0x1A, 0x10,
+0x30, 0xF0, 0x20, 0x6A, 0x30, 0xF0, 0x20, 0x6C,
+0x4E, 0xF2, 0x50, 0x9A, 0x2F, 0xF6, 0x08, 0x4C,
+0x11, 0x10, 0x30, 0xF0, 0x20, 0x6A, 0x30, 0xF0,
+0x20, 0x6C, 0x4E, 0xF2, 0x50, 0x9A, 0x2F, 0xF6,
+0x10, 0x4C, 0x08, 0x10, 0x30, 0xF0, 0x20, 0x6A,
+0x4E, 0xF2, 0x50, 0x9A, 0x30, 0xF0, 0x20, 0x6C,
+0x2F, 0xF6, 0x18, 0x4C, 0x30, 0xF0, 0x20, 0x6D,
+0xCF, 0xF5, 0x13, 0x4D, 0xC3, 0x17, 0x1F, 0xF7,
+0x00, 0x6C, 0x4C, 0xEC, 0x02, 0xF0, 0x00, 0x74,
+0x01, 0x60, 0x05, 0x2C, 0x10, 0xF0, 0x24, 0x6C,
+0xD6, 0xF2, 0x88, 0x9C, 0x04, 0x10, 0x10, 0xF0,
+0x24, 0x6C, 0xD6, 0xF2, 0x8C, 0x9C, 0xA0, 0xA3,
+0x91, 0xE2, 0x01, 0x4A, 0x80, 0xF4, 0x14, 0x72,
+0xA0, 0xC4, 0x01, 0x4B, 0xE8, 0x61, 0x0B, 0x10,
+0x10, 0xF0, 0x24, 0x6A, 0x16, 0xF4, 0x68, 0x9A,
+0xFF, 0x6C, 0x08, 0x6D, 0x40, 0xA3, 0x8C, 0xEA,
+0xAD, 0xEA, 0x8C, 0xEA, 0x40, 0xC3, 0x50, 0x67,
+0x09, 0x97, 0x08, 0x91, 0x07, 0x90, 0x05, 0x63,
+0x00, 0xEF, 0x01, 0x68, 0x8A, 0x17, 0x00, 0x65,
+0xF7, 0x63, 0x11, 0x62, 0x10, 0xD1, 0x0F, 0xD0,
+0x10, 0xF0, 0x24, 0x6B, 0x96, 0xF2, 0x78, 0x9B,
+0x10, 0xF0, 0x30, 0x6A, 0x68, 0xF4, 0x19, 0x4A,
+0x40, 0xDB, 0x10, 0xF0, 0x24, 0x6A, 0xF6, 0xF4,
+0x54, 0x9A, 0x40, 0x9A, 0x05, 0xD2, 0x10, 0xF0,
+0x24, 0x6A, 0xD6, 0xF4, 0x50, 0x9A, 0x05, 0x93,
+0x4C, 0xEB, 0x10, 0xF0, 0x24, 0x6A, 0x36, 0xF3,
+0x4C, 0x9A, 0x05, 0xD3, 0xFF, 0x6B, 0x40, 0xA2,
+0x82, 0x67, 0x6C, 0xEC, 0x30, 0xF0, 0x20, 0x6A,
+0x0C, 0xD4, 0xA8, 0xF5, 0x9B, 0xA2, 0x01, 0x6A,
+0x8C, 0xEA, 0x6C, 0xEA, 0x20, 0xF2, 0x04, 0x22,
+0x00, 0x6D, 0x09, 0xD5, 0x08, 0xD5, 0x65, 0x67,
+0x09, 0x12, 0x30, 0xF0, 0x20, 0x69, 0x05, 0x94,
+0xCE, 0xF4, 0x4C, 0x99, 0x02, 0x4C, 0x40, 0xEA,
+0x05, 0x94, 0x02, 0x67, 0xCE, 0xF4, 0x4C, 0x99,
+0x03, 0x4C, 0x40, 0xEA, 0x03, 0x6B, 0x4C, 0xEB,
+0x0F, 0x6A, 0x05, 0x94, 0x0C, 0xEA, 0x18, 0x4B,
+0x4C, 0x32, 0x49, 0xE3, 0x81, 0xE2, 0x0B, 0xD2,
+0xCE, 0xF4, 0x4C, 0x99, 0x90, 0x67, 0x40, 0xEA,
+0x06, 0xD2, 0xCE, 0xF4, 0x4C, 0x99, 0x81, 0x40,
+0x40, 0xEA, 0x07, 0xD2, 0xCE, 0xF4, 0x4C, 0x99,
+0x84, 0x40, 0x40, 0xEA, 0x07, 0x95, 0x06, 0x94,
+0xC2, 0x67, 0x80, 0x18, 0x62, 0x09, 0x07, 0xD2,
+0xCE, 0xF4, 0x4C, 0x99, 0x90, 0x67, 0x40, 0xEA,
+0x05, 0x94, 0xFC, 0x6D, 0x4C, 0xED, 0xCE, 0xF4,
+0x4C, 0x99, 0x06, 0xD5, 0x01, 0x4C, 0x40, 0xEA,
+0x04, 0xD2, 0x05, 0x94, 0xCE, 0xF4, 0x4C, 0x99,
+0x40, 0xEA, 0x04, 0x93, 0x05, 0x94, 0x60, 0x33,
+0x4D, 0xEB, 0xE7, 0xF7, 0x1F, 0x6A, 0x4C, 0xEB,
+0xCE, 0xF4, 0x4C, 0x99, 0x04, 0xD3, 0x0F, 0x4C,
+0x40, 0xEA, 0x0D, 0xD2, 0x04, 0x95, 0x0B, 0x93,
+0x30, 0xF0, 0x20, 0x6A, 0x0E, 0xF5, 0x44, 0x9A,
+0x71, 0xE5, 0x40, 0xEA, 0x0B, 0xD2, 0x30, 0xF0,
+0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A, 0xEB, 0xF6,
+0xB4, 0xA2, 0x01, 0x6B, 0xFF, 0x6C, 0x6C, 0xED,
+0x14, 0x25, 0x06, 0x95, 0x50, 0x75, 0x03, 0x60,
+0x80, 0x75, 0xE0, 0xF0, 0x14, 0x61, 0x89, 0xF0,
+0x50, 0xA2, 0x4C, 0xEB, 0x8C, 0xEB, 0xE0, 0xF0,
+0x0E, 0x23, 0x30, 0xF0, 0x20, 0x6A, 0x4E, 0xF3,
+0x54, 0x9A, 0x04, 0x95, 0x90, 0x67, 0x40, 0xEA,
+0xE6, 0x10, 0x06, 0x92, 0x88, 0x72, 0x30, 0x60,
+0x89, 0x5A, 0x03, 0x60, 0x08, 0x72, 0x2C, 0x60,
+0xDE, 0x10, 0x06, 0x93, 0xA0, 0x73, 0x03, 0x60,
+0xC0, 0x73, 0xC0, 0xF0, 0x18, 0x61, 0x30, 0xF0,
+0x20, 0x69, 0xC0, 0xF1, 0x08, 0x49, 0xE8, 0xF3,
+0x7A, 0xA1, 0x80, 0x6A, 0x4B, 0xEA, 0x6C, 0xEA,
+0xFF, 0x6B, 0x6C, 0xEA, 0xC0, 0xF0, 0x0B, 0x22,
+0x08, 0xF4, 0x4E, 0xA1, 0x90, 0x67, 0x01, 0x4A,
+0x08, 0xF4, 0x4E, 0xC1, 0x80, 0x18, 0x57, 0x08,
+0xC0, 0xF0, 0x01, 0x22, 0x90, 0x67, 0x80, 0x18,
+0x6E, 0x08, 0xA0, 0xF0, 0x1C, 0x22, 0x06, 0x94,
+0x80, 0x18, 0xE1, 0x09, 0x08, 0xF4, 0x4F, 0xA1,
+0x01, 0x4A, 0x08, 0xF4, 0x4F, 0xC1, 0xB3, 0x10,
+0x30, 0xF0, 0x20, 0x69, 0xCE, 0xF4, 0x4C, 0x99,
+0x84, 0x40, 0x04, 0xD4, 0x40, 0xEA, 0x82, 0x67,
+0x80, 0x18, 0x53, 0x09, 0x07, 0x95, 0xC2, 0x67,
+0x90, 0x67, 0x80, 0x18, 0xA2, 0x09, 0x04, 0x94,
+0xCE, 0xF4, 0x4C, 0x99, 0x40, 0xEA, 0x82, 0x67,
+0x80, 0x18, 0xA4, 0x10, 0x80, 0xF0, 0x10, 0x22,
+0x30, 0xF0, 0x20, 0x6A, 0xA8, 0xF5, 0x7B, 0xA2,
+0x40, 0x6A, 0x6C, 0xEA, 0x22, 0x22, 0x07, 0x92,
+0x08, 0x4A, 0x09, 0xE2, 0x04, 0xD2, 0x04, 0x94,
+0xCE, 0xF4, 0x4C, 0x99, 0x40, 0xEA, 0x45, 0x72,
+0x18, 0x61, 0x04, 0x94, 0x00, 0x18, 0x72, 0xD3,
+0x01, 0x72, 0x13, 0x61, 0x04, 0x94, 0x00, 0x18,
+0x84, 0xD3, 0x01, 0x72, 0x0E, 0x61, 0x04, 0x94,
+0x00, 0x18, 0x47, 0xD3, 0x04, 0x22, 0x01, 0x6D,
+0x09, 0xD5, 0x08, 0xD5, 0x06, 0x10, 0x04, 0x94,
+0x00, 0x18, 0x9C, 0xD3, 0x01, 0x6B, 0x09, 0xD3,
+0x08, 0xD3, 0x90, 0x67, 0x80, 0x18, 0x57, 0x08,
 0x08, 0x22, 0x07, 0x95, 0x90, 0x67, 0x80, 0x18,
-0x89, 0x0E, 0x03, 0x22, 0x01, 0x6D, 0x09, 0xD5,
-0x08, 0xD5, 0x30, 0xF0, 0x20, 0x69, 0xC0, 0xF1,
-0x08, 0x49, 0xE8, 0xF3, 0x74, 0xA1, 0x20, 0x6A,
-0x6C, 0xEA, 0x11, 0x22, 0x07, 0x95, 0x90, 0x67,
-0x80, 0x18, 0x72, 0x08, 0x0C, 0x22, 0x10, 0xF0,
-0x24, 0x6A, 0x16, 0xF6, 0x50, 0x9A, 0x0B, 0x6B,
-0x60, 0xC2, 0x08, 0xF4, 0x61, 0xA1, 0x01, 0x6A,
-0x6D, 0xEA, 0x08, 0xF4, 0x41, 0xC1, 0x30, 0xF0,
+0x69, 0x10, 0x03, 0x22, 0x01, 0x6D, 0x09, 0xD5,
+0x08, 0xD5, 0x30, 0xF0, 0x20, 0x6A, 0xA8, 0xF5,
+0x7B, 0xA2, 0x02, 0x6A, 0x6C, 0xEA, 0x08, 0x22,
+0x07, 0x95, 0x90, 0x67, 0x80, 0x18, 0xB4, 0x0F,
+0x03, 0x22, 0x01, 0x6B, 0x09, 0xD3, 0x08, 0xD3,
+0x30, 0xF0, 0x20, 0x6A, 0xA8, 0xF5, 0x7B, 0xA2,
+0x04, 0x6A, 0x6C, 0xEA, 0x08, 0x22, 0x07, 0x95,
+0x90, 0x67, 0x80, 0x18, 0x9C, 0x0E, 0x03, 0x22,
+0x01, 0x6D, 0x09, 0xD5, 0x08, 0xD5, 0x30, 0xF0,
 0x20, 0x69, 0xC0, 0xF1, 0x08, 0x49, 0xE8, 0xF3,
-0x73, 0xA1, 0x80, 0x6A, 0x4B, 0xEA, 0x6C, 0xEA,
-0xFF, 0x6B, 0x6C, 0xEA, 0x22, 0x22, 0x08, 0x93,
-0x03, 0x23, 0x01, 0x6C, 0x08, 0xD4, 0x1D, 0x10,
-0x07, 0x95, 0x90, 0x67, 0x80, 0x18, 0xA8, 0x08,
-0x18, 0x22, 0x10, 0xF0, 0x24, 0x6A, 0x16, 0xF6,
-0x50, 0x9A, 0x22, 0x6B, 0x60, 0xC2, 0x08, 0xF4,
+0x74, 0xA1, 0x20, 0x6A, 0x6C, 0xEA, 0x11, 0x22,
+0x07, 0x95, 0x90, 0x67, 0x80, 0x18, 0x85, 0x08,
+0x0C, 0x22, 0x10, 0xF0, 0x24, 0x6A, 0x36, 0xF4,
+0x4C, 0x9A, 0x0B, 0x6B, 0x60, 0xC2, 0x08, 0xF4,
 0x61, 0xA1, 0x01, 0x6A, 0x6D, 0xEA, 0x08, 0xF4,
-0x41, 0xC1, 0x0B, 0x10, 0x10, 0xF0, 0x24, 0x6A,
-0xF6, 0xF5, 0x6C, 0x9A, 0xFF, 0x6C, 0x08, 0x6D,
-0x40, 0xA3, 0x8C, 0xEA, 0xAD, 0xEA, 0x8C, 0xEA,
-0x40, 0xC3, 0x0D, 0x94, 0x01, 0x6D, 0x80, 0x18,
-0xA5, 0x09, 0x15, 0x22, 0x30, 0xF0, 0x20, 0x6A,
-0xC0, 0xF1, 0x08, 0x4A, 0x08, 0xF4, 0x81, 0xA2,
-0x01, 0x6B, 0x8D, 0xEB, 0x08, 0xF4, 0x61, 0xC2,
-0x05, 0x94, 0x30, 0xF0, 0x20, 0x6A, 0xCE, 0xF4,
-0x4C, 0x9A, 0x10, 0x4C, 0x40, 0xEA, 0x30, 0xF0,
-0x20, 0x6B, 0x0F, 0xF6, 0x52, 0xC3, 0x06, 0x95,
-0x08, 0x75, 0x02, 0x60, 0x88, 0x75, 0x48, 0x61,
-0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A,
-0xE8, 0xF3, 0x95, 0xA2, 0x40, 0x6B, 0x8C, 0xEB,
-0x0E, 0x23, 0x09, 0x93, 0x0C, 0x2B, 0x10, 0xF0,
-0x24, 0x6B, 0x16, 0xF6, 0x70, 0x9B, 0x25, 0x6C,
-0x80, 0xC3, 0x08, 0xF4, 0x81, 0xA2, 0x01, 0x6B,
-0x8D, 0xEB, 0x08, 0xF4, 0x61, 0xC2, 0x07, 0x95,
-0x90, 0x67, 0x80, 0x18, 0xB4, 0x08, 0x11, 0x22,
-0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A,
-0x08, 0xF4, 0x81, 0xA2, 0x02, 0x6B, 0x6B, 0xEB,
-0x8C, 0xEB, 0x08, 0xF4, 0x61, 0xC2, 0x10, 0xF0,
-0x24, 0x6A, 0x16, 0xF6, 0x50, 0x9A, 0x00, 0x6B,
-0x60, 0xC2, 0x30, 0xF0, 0x20, 0x69, 0xC0, 0xF1,
-0x08, 0x49, 0xE8, 0xF3, 0x74, 0xA1, 0x40, 0x6A,
-0x6C, 0xEA, 0x12, 0x22, 0x07, 0x95, 0x90, 0x67,
-0x80, 0x18, 0xE2, 0x08, 0x0D, 0x22, 0x08, 0xF4,
-0x61, 0xA1, 0x02, 0x6A, 0x4B, 0xEA, 0x6C, 0xEA,
-0x08, 0xF4, 0x41, 0xC1, 0x10, 0xF0, 0x24, 0x6A,
-0x16, 0xF6, 0x50, 0x9A, 0x00, 0x6B, 0x60, 0xC2,
-0x05, 0x94, 0x0B, 0x95, 0x30, 0xF0, 0x20, 0x6A,
-0xA8, 0xF4, 0x4C, 0x9A, 0xB1, 0xE4, 0x05, 0xD4,
-0x83, 0xEA, 0x03, 0x60, 0x4F, 0xEA, 0x51, 0xE4,
-0x05, 0xD4, 0x30, 0xF0, 0x20, 0x6A, 0xC8, 0xF5,
-0x69, 0xA2, 0x01, 0x6A, 0x6C, 0xEA, 0x03, 0x22,
-0x01, 0x6C, 0x80, 0x18, 0x96, 0x0B, 0x80, 0x18,
-0xD9, 0x09, 0x01, 0x72, 0x38, 0x61, 0x30, 0xF0,
-0x20, 0x68, 0xC0, 0xF1, 0x08, 0x48, 0x08, 0xF4,
-0x50, 0xA0, 0x01, 0x4A, 0x08, 0xF4, 0x50, 0xC0,
-0x30, 0xF0, 0x20, 0x6A, 0xEE, 0xF4, 0x5C, 0x9A,
-0x40, 0xEA, 0x01, 0x72, 0x15, 0x60, 0x08, 0xF4,
-0x81, 0xA0, 0x01, 0x6B, 0x02, 0x72, 0x8D, 0xEB,
-0x08, 0xF4, 0x61, 0xC0, 0x42, 0x6B, 0x03, 0x60,
-0x04, 0x72, 0x06, 0x61, 0x43, 0x6B, 0x10, 0xF0,
-0x24, 0x6A, 0x16, 0xF6, 0x50, 0x9A, 0x60, 0xC2,
-0x01, 0x6C, 0x80, 0x18, 0x96, 0x0B, 0x22, 0x10,
-0x30, 0xF0, 0x20, 0x6A, 0x0E, 0xF5, 0x40, 0x9A,
-0x05, 0x94, 0x40, 0xEA, 0x0A, 0x92, 0x01, 0x4A,
-0x0A, 0xD2, 0x0A, 0x93, 0xFF, 0x6A, 0x4C, 0xEB,
-0x0A, 0xD3, 0x0A, 0x94, 0x0C, 0x95, 0xA3, 0xEC,
-0xFF, 0xF5, 0x11, 0x61, 0x0F, 0x10, 0x30, 0xF0,
-0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A, 0xE8, 0xF3,
-0x95, 0xA2, 0x20, 0x6B, 0x8C, 0xEB, 0x06, 0x2B,
-0xE8, 0xF3, 0x93, 0xA2, 0xFE, 0x4B, 0x8C, 0xEB,
-0xE8, 0xF3, 0x73, 0xC2, 0x10, 0xF0, 0x24, 0x6B,
-0x76, 0xF4, 0x7C, 0x9B, 0x10, 0xF0, 0x30, 0x6A,
-0x48, 0xF4, 0x06, 0x4A, 0x40, 0xDB, 0x11, 0x97,
-0x10, 0x91, 0x0F, 0x90, 0x09, 0x63, 0x00, 0xEF,
-0xFB, 0x63, 0x09, 0x62, 0x08, 0xD1, 0x07, 0xD0,
-0xFF, 0x6B, 0xAC, 0xEB, 0x30, 0xF0, 0x20, 0x69,
-0x04, 0xD3, 0xC0, 0xF1, 0x08, 0x49, 0x89, 0xF0,
-0x7E, 0xA1, 0xFF, 0x6A, 0x8C, 0xEA, 0x01, 0x6C,
-0x8C, 0xEB, 0xFF, 0x6C, 0x8C, 0xEB, 0x72, 0x23,
-0x30, 0xF0, 0x20, 0x68, 0xCF, 0xF4, 0x00, 0x48,
-0x80, 0xF1, 0x6B, 0xA0, 0x6B, 0x23, 0x04, 0x94,
-0xA2, 0x67, 0x00, 0x18, 0x83, 0xE0, 0x07, 0x22,
-0x00, 0x6A, 0x80, 0xF1, 0x4B, 0xC0, 0x01, 0x6A,
-0x80, 0xF1, 0x4D, 0xC0, 0x5F, 0x10, 0xA9, 0xF0,
-0x60, 0xA1, 0x80, 0xF1, 0x4B, 0xA0, 0x63, 0xEA,
-0x4A, 0x61, 0x89, 0xF0, 0x77, 0xA1, 0x40, 0x6A,
+0x41, 0xC1, 0x30, 0xF0, 0x20, 0x69, 0xC0, 0xF1,
+0x08, 0x49, 0xE8, 0xF3, 0x73, 0xA1, 0x80, 0x6A,
 0x4B, 0xEA, 0x6C, 0xEA, 0xFF, 0x6B, 0x6C, 0xEA,
-0x40, 0x72, 0x06, 0x61, 0x10, 0xF0, 0x23, 0x6C,
-0x09, 0xF0, 0x15, 0x4C, 0x00, 0x18, 0xCF, 0xE6,
-0x30, 0xF0, 0x20, 0x68, 0xC0, 0xF1, 0x08, 0x48,
-0x89, 0xF0, 0x7E, 0xA0, 0x08, 0x6A, 0x6C, 0xEA,
-0x21, 0x22, 0x30, 0xF0, 0x20, 0x69, 0xCF, 0xF4,
-0x00, 0x49, 0x80, 0xF2, 0x95, 0xA1, 0x00, 0x6D,
+0x22, 0x22, 0x08, 0x93, 0x03, 0x23, 0x01, 0x6C,
+0x08, 0xD4, 0x1D, 0x10, 0x07, 0x95, 0x90, 0x67,
+0x80, 0x18, 0xBB, 0x08, 0x18, 0x22, 0x10, 0xF0,
+0x24, 0x6A, 0x36, 0xF4, 0x4C, 0x9A, 0x22, 0x6B,
+0x60, 0xC2, 0x08, 0xF4, 0x61, 0xA1, 0x01, 0x6A,
+0x6D, 0xEA, 0x08, 0xF4, 0x41, 0xC1, 0x0B, 0x10,
+0x10, 0xF0, 0x24, 0x6A, 0x16, 0xF4, 0x68, 0x9A,
+0xFF, 0x6C, 0x08, 0x6D, 0x40, 0xA3, 0x8C, 0xEA,
+0xAD, 0xEA, 0x8C, 0xEA, 0x40, 0xC3, 0x0D, 0x94,
+0x01, 0x6D, 0x80, 0x18, 0xB8, 0x09, 0x15, 0x22,
+0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A,
+0x08, 0xF4, 0x81, 0xA2, 0x01, 0x6B, 0x8D, 0xEB,
+0x08, 0xF4, 0x61, 0xC2, 0x05, 0x94, 0x30, 0xF0,
+0x20, 0x6A, 0xCE, 0xF4, 0x4C, 0x9A, 0x10, 0x4C,
+0x40, 0xEA, 0x30, 0xF0, 0x20, 0x6B, 0x0F, 0xF6,
+0x52, 0xC3, 0x06, 0x95, 0x08, 0x75, 0x02, 0x60,
+0x88, 0x75, 0x48, 0x61, 0x30, 0xF0, 0x20, 0x6A,
+0xC0, 0xF1, 0x08, 0x4A, 0xE8, 0xF3, 0x95, 0xA2,
+0x40, 0x6B, 0x8C, 0xEB, 0x0E, 0x23, 0x09, 0x93,
+0x0C, 0x2B, 0x10, 0xF0, 0x24, 0x6B, 0x36, 0xF4,
+0x6C, 0x9B, 0x25, 0x6C, 0x80, 0xC3, 0x08, 0xF4,
+0x81, 0xA2, 0x01, 0x6B, 0x8D, 0xEB, 0x08, 0xF4,
+0x61, 0xC2, 0x07, 0x95, 0x90, 0x67, 0x80, 0x18,
+0xC7, 0x08, 0x11, 0x22, 0x30, 0xF0, 0x20, 0x6A,
+0xC0, 0xF1, 0x08, 0x4A, 0x08, 0xF4, 0x81, 0xA2,
+0x02, 0x6B, 0x6B, 0xEB, 0x8C, 0xEB, 0x08, 0xF4,
+0x61, 0xC2, 0x10, 0xF0, 0x24, 0x6A, 0x36, 0xF4,
+0x4C, 0x9A, 0x00, 0x6B, 0x60, 0xC2, 0x30, 0xF0,
+0x20, 0x69, 0xC0, 0xF1, 0x08, 0x49, 0xE8, 0xF3,
+0x74, 0xA1, 0x40, 0x6A, 0x6C, 0xEA, 0x12, 0x22,
+0x07, 0x95, 0x90, 0x67, 0x80, 0x18, 0xF5, 0x08,
+0x0D, 0x22, 0x08, 0xF4, 0x61, 0xA1, 0x02, 0x6A,
+0x4B, 0xEA, 0x6C, 0xEA, 0x08, 0xF4, 0x41, 0xC1,
+0x10, 0xF0, 0x24, 0x6A, 0x36, 0xF4, 0x4C, 0x9A,
+0x00, 0x6B, 0x60, 0xC2, 0x05, 0x94, 0x0B, 0x95,
+0x30, 0xF0, 0x20, 0x6A, 0xA8, 0xF4, 0x4C, 0x9A,
+0xB1, 0xE4, 0x05, 0xD4, 0x83, 0xEA, 0x03, 0x60,
+0x4F, 0xEA, 0x51, 0xE4, 0x05, 0xD4, 0x30, 0xF0,
+0x20, 0x6A, 0xC8, 0xF5, 0x69, 0xA2, 0x01, 0x6A,
+0x6C, 0xEA, 0x03, 0x22, 0x01, 0x6C, 0x80, 0x18,
+0xA9, 0x0B, 0x80, 0x18, 0xEC, 0x09, 0x01, 0x72,
+0x38, 0x61, 0x30, 0xF0, 0x20, 0x68, 0xC0, 0xF1,
+0x08, 0x48, 0x08, 0xF4, 0x50, 0xA0, 0x01, 0x4A,
+0x08, 0xF4, 0x50, 0xC0, 0x30, 0xF0, 0x20, 0x6A,
+0xEE, 0xF4, 0x5C, 0x9A, 0x40, 0xEA, 0x01, 0x72,
+0x15, 0x60, 0x08, 0xF4, 0x81, 0xA0, 0x01, 0x6B,
+0x02, 0x72, 0x8D, 0xEB, 0x08, 0xF4, 0x61, 0xC0,
+0x42, 0x6B, 0x03, 0x60, 0x04, 0x72, 0x06, 0x61,
+0x43, 0x6B, 0x10, 0xF0, 0x24, 0x6A, 0x36, 0xF4,
+0x4C, 0x9A, 0x60, 0xC2, 0x01, 0x6C, 0x80, 0x18,
+0xA9, 0x0B, 0x22, 0x10, 0x30, 0xF0, 0x20, 0x6A,
+0x0E, 0xF5, 0x40, 0x9A, 0x05, 0x94, 0x40, 0xEA,
+0x0A, 0x92, 0x01, 0x4A, 0x0A, 0xD2, 0x0A, 0x93,
+0xFF, 0x6A, 0x4C, 0xEB, 0x0A, 0xD3, 0x0A, 0x94,
+0x0C, 0x95, 0xA3, 0xEC, 0xFF, 0xF5, 0x11, 0x61,
+0x0F, 0x10, 0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1,
+0x08, 0x4A, 0xE8, 0xF3, 0x95, 0xA2, 0x20, 0x6B,
+0x8C, 0xEB, 0x06, 0x2B, 0xE8, 0xF3, 0x93, 0xA2,
+0xFE, 0x4B, 0x8C, 0xEB, 0xE8, 0xF3, 0x73, 0xC2,
+0x10, 0xF0, 0x24, 0x6B, 0x96, 0xF2, 0x78, 0x9B,
+0x10, 0xF0, 0x30, 0x6A, 0x68, 0xF4, 0x1A, 0x4A,
+0x40, 0xDB, 0x11, 0x97, 0x10, 0x91, 0x0F, 0x90,
+0x09, 0x63, 0x00, 0xEF, 0xFB, 0x63, 0x09, 0x62,
+0x08, 0xD1, 0x07, 0xD0, 0xFF, 0x6B, 0x30, 0xF0,
+0x20, 0x68, 0xAC, 0xEB, 0xC0, 0xF1, 0x08, 0x48,
+0x04, 0xD3, 0x89, 0xF0, 0x7E, 0xA0, 0xFF, 0x6A,
+0x8C, 0xEA, 0x01, 0x6C, 0x8C, 0xEB, 0xFF, 0x6C,
+0x8C, 0xEB, 0x5B, 0x23, 0x30, 0xF0, 0x20, 0x69,
+0xCF, 0xF4, 0x00, 0x49, 0x80, 0xF1, 0x6B, 0xA1,
+0x54, 0x23, 0x04, 0x94, 0xA2, 0x67, 0x00, 0x18,
+0x11, 0xE0, 0x07, 0x22, 0x00, 0x6A, 0x80, 0xF1,
+0x4B, 0xC1, 0x01, 0x6A, 0x80, 0xF1, 0x4D, 0xC1,
+0x48, 0x10, 0xA9, 0xF0, 0x60, 0xA0, 0x80, 0xF1,
+0x4B, 0xA1, 0x63, 0xEA, 0x33, 0x61, 0x89, 0xF0,
+0x7E, 0xA0, 0x08, 0x6A, 0x6C, 0xEA, 0xFF, 0x6B,
+0x6C, 0xEA, 0x1B, 0x22, 0x80, 0xF2, 0x95, 0xA1,
+0x00, 0x6D, 0x00, 0x18, 0x62, 0xC5, 0x30, 0xF0,
+0x20, 0x6A, 0x6E, 0xF5, 0x54, 0x9A, 0x80, 0xF2,
+0x95, 0xA1, 0x40, 0xEA, 0x89, 0xF0, 0x7E, 0xA0,
+0x02, 0x6A, 0x4B, 0xEA, 0x6C, 0xEA, 0x68, 0xF3,
+0x74, 0xA0, 0x89, 0xF0, 0x5E, 0xC0, 0x80, 0x6A,
+0x4B, 0xEA, 0x6C, 0xEA, 0x68, 0xF3, 0x54, 0xC0,
+0x20, 0x10, 0x10, 0xF0, 0x24, 0x6A, 0x36, 0xF4,
+0x4C, 0x9A, 0x10, 0x6B, 0x01, 0x6C, 0x60, 0xC2,
+0x80, 0x18, 0xA9, 0x0B, 0x89, 0xF0, 0x7E, 0xA0,
+0x02, 0x6A, 0x4B, 0xEA, 0x6C, 0xEA, 0x89, 0xF0,
+0x5E, 0xC0, 0x0F, 0x10, 0x30, 0xF0, 0x20, 0x6A,
+0x2E, 0xF4, 0x50, 0x9A, 0xC8, 0xF2, 0x9F, 0xA0,
+0x04, 0x97, 0x02, 0x6D, 0x08, 0x6E, 0x40, 0xEA,
+0x80, 0xF1, 0x4B, 0xA1, 0x01, 0x4A, 0x80, 0xF1,
+0x4B, 0xC1, 0x09, 0x97, 0x08, 0x91, 0x07, 0x90,
+0x05, 0x63, 0x00, 0xEF, 0xFB, 0x63, 0x09, 0x62,
+0x08, 0xD1, 0x07, 0xD0, 0xFF, 0x6A, 0x4C, 0xEC,
+0x30, 0xF0, 0x20, 0x69, 0x04, 0xD4, 0xC0, 0xF1,
+0x08, 0x49, 0x89, 0xF0, 0x7E, 0xA1, 0x01, 0x6C,
+0x6C, 0xEC, 0x4C, 0xEC, 0x75, 0x24, 0x30, 0xF0,
+0x20, 0x68, 0xCF, 0xF4, 0x00, 0x48, 0x80, 0xF1,
+0x8A, 0xA0, 0x01, 0x4C, 0x80, 0xF1, 0x8A, 0xC0,
+0x80, 0xF1, 0x8D, 0xA0, 0x01, 0x74, 0x2F, 0x61,
+0x04, 0x6C, 0x6C, 0xEC, 0x4C, 0xEC, 0x2B, 0x24,
+0x80, 0xF1, 0x8C, 0xA0, 0x28, 0x2C, 0x80, 0xF1,
+0xAA, 0xA0, 0xA9, 0xF0, 0x81, 0xA1, 0x83, 0xED,
+0x22, 0x61, 0x08, 0x6C, 0x6C, 0xEC, 0x4C, 0xEC,
+0x0D, 0x24, 0x80, 0xF2, 0x95, 0xA0, 0x00, 0x6D,
 0x00, 0x18, 0x62, 0xC5, 0x30, 0xF0, 0x20, 0x6A,
-0x6E, 0xF5, 0x54, 0x9A, 0x80, 0xF2, 0x95, 0xA1,
-0x40, 0xEA, 0x89, 0xF0, 0x7E, 0xA0, 0x02, 0x6A,
-0x4B, 0xEA, 0x6C, 0xEA, 0x68, 0xF3, 0x74, 0xA0,
-0x89, 0xF0, 0x5E, 0xC0, 0x80, 0x6A, 0x4B, 0xEA,
-0x6C, 0xEA, 0x68, 0xF3, 0x54, 0xC0, 0x00, 0x18,
-0x29, 0xC9, 0x20, 0x10, 0x10, 0xF0, 0x24, 0x6A,
-0x16, 0xF6, 0x50, 0x9A, 0x10, 0x6B, 0x01, 0x6C,
-0x60, 0xC2, 0x80, 0x18, 0x96, 0x0B, 0x89, 0xF0,
-0x7E, 0xA0, 0x02, 0x6A, 0x4B, 0xEA, 0x6C, 0xEA,
-0x89, 0xF0, 0x5E, 0xC0, 0x0F, 0x10, 0x30, 0xF0,
-0x20, 0x6A, 0x2E, 0xF4, 0x50, 0x9A, 0xC8, 0xF2,
-0x9F, 0xA1, 0x04, 0x97, 0x02, 0x6D, 0x08, 0x6E,
-0x40, 0xEA, 0x80, 0xF1, 0x4B, 0xA0, 0x01, 0x4A,
-0x80, 0xF1, 0x4B, 0xC0, 0x09, 0x97, 0x08, 0x91,
-0x07, 0x90, 0x05, 0x63, 0x00, 0xEF, 0x00, 0x65,
-0xFB, 0x63, 0x09, 0x62, 0x08, 0xD1, 0x07, 0xD0,
-0xFF, 0x6A, 0x4C, 0xEC, 0x30, 0xF0, 0x20, 0x69,
-0x04, 0xD4, 0xC0, 0xF1, 0x08, 0x49, 0x89, 0xF0,
-0x7E, 0xA1, 0x01, 0x6C, 0x6C, 0xEC, 0x4C, 0xEC,
-0x75, 0x24, 0x30, 0xF0, 0x20, 0x68, 0xCF, 0xF4,
-0x00, 0x48, 0x80, 0xF1, 0x8A, 0xA0, 0x01, 0x4C,
-0x80, 0xF1, 0x8A, 0xC0, 0x80, 0xF1, 0x8D, 0xA0,
-0x01, 0x74, 0x2F, 0x61, 0x04, 0x6C, 0x6C, 0xEC,
-0x4C, 0xEC, 0x2B, 0x24, 0x80, 0xF1, 0x8C, 0xA0,
-0x28, 0x2C, 0x80, 0xF1, 0xAA, 0xA0, 0xA9, 0xF0,
-0x81, 0xA1, 0x83, 0xED, 0x22, 0x61, 0x08, 0x6C,
-0x6C, 0xEC, 0x4C, 0xEC, 0x0D, 0x24, 0x80, 0xF2,
-0x95, 0xA0, 0x00, 0x6D, 0x00, 0x18, 0x62, 0xC5,
-0x30, 0xF0, 0x20, 0x6A, 0x6E, 0xF5, 0x54, 0x9A,
-0x80, 0xF2, 0x95, 0xA0, 0x40, 0xEA, 0x09, 0x10,
-0x10, 0xF0, 0x24, 0x6A, 0x16, 0xF6, 0x50, 0x9A,
-0x10, 0x6B, 0x01, 0x6C, 0x60, 0xC2, 0x80, 0x18,
-0x96, 0x0B, 0x89, 0xF0, 0x7E, 0xA1, 0x02, 0x6A,
-0x4B, 0xEA, 0x6C, 0xEA, 0x89, 0xF0, 0x5E, 0xC1,
-0x39, 0x10, 0x30, 0xF0, 0x20, 0x69, 0x30, 0xF0,
-0x20, 0x68, 0xC0, 0xF1, 0x08, 0x49, 0xCF, 0xF4,
-0x00, 0x48, 0x89, 0xF0, 0x7F, 0xA1, 0x80, 0xF1,
-0x4A, 0xA0, 0x63, 0xEA, 0x2B, 0x61, 0x04, 0x94,
-0x00, 0x18, 0x28, 0xE5, 0x01, 0x6B, 0x4C, 0xEB,
-0x18, 0x2B, 0x80, 0xF1, 0x4C, 0xA0, 0x15, 0x2A,
-0x80, 0xF1, 0x4B, 0xA0, 0xC8, 0xF2, 0x9F, 0xA1,
-0x04, 0x97, 0x01, 0x4A, 0x80, 0xF1, 0x4B, 0xC0,
-0x80, 0xF1, 0x49, 0xA0, 0x02, 0x6D, 0x08, 0x6E,
-0x01, 0x4A, 0x80, 0xF1, 0x49, 0xC0, 0x30, 0xF0,
-0x20, 0x6A, 0x2E, 0xF4, 0x50, 0x9A, 0x40, 0xEA,
-0x04, 0x10, 0x04, 0x94, 0x01, 0x6D, 0x00, 0x18,
-0x22, 0xE5, 0x30, 0xF0, 0x20, 0x6A, 0xCF, 0xF4,
-0x00, 0x4A, 0x00, 0x6B, 0x80, 0xF1, 0x6A, 0xC2,
-0x80, 0xF1, 0x6C, 0xC2, 0x09, 0x97, 0x08, 0x91,
-0x07, 0x90, 0x05, 0x63, 0x00, 0xEF, 0x00, 0x65,
-0xFC, 0x63, 0x07, 0x62, 0x30, 0xF0, 0x20, 0x6B,
-0xC0, 0xF1, 0x08, 0x4B, 0xA0, 0xA4, 0x89, 0xF0,
-0xF7, 0xA3, 0x02, 0x6A, 0x01, 0x6E, 0x4B, 0xEA,
-0xCC, 0xED, 0xEC, 0xEA, 0xAD, 0xEA, 0xA2, 0x67,
-0xCC, 0xED, 0x89, 0xF0, 0x57, 0xC3, 0x53, 0x25,
-0xA0, 0xA4, 0x07, 0x6F, 0xAE, 0x35, 0xEC, 0xED,
-0x30, 0xF0, 0x20, 0x6F, 0x4F, 0xF6, 0xA7, 0xC7,
-0xA0, 0xA4, 0xAA, 0x35, 0xCC, 0xED, 0xA8, 0x36,
-0x05, 0x6D, 0xAB, 0xED, 0x4C, 0xED, 0xCD, 0xED,
-0x89, 0xF0, 0xB7, 0xC3, 0xA0, 0xA4, 0x02, 0x6A,
-0xAC, 0xEA, 0xFF, 0x6D, 0xAC, 0xEA, 0x03, 0x22,
-0x41, 0xA4, 0x89, 0xF0, 0x58, 0xC3, 0x30, 0xF0,
-0x20, 0x6A, 0xA0, 0xA4, 0xC0, 0xF1, 0x08, 0x4A,
-0x89, 0xF0, 0xD7, 0xA2, 0xBA, 0x35, 0x3F, 0x6B,
-0xB8, 0x35, 0xCC, 0xEB, 0xAD, 0xEB, 0x89, 0xF0,
-0x77, 0xC2, 0xA4, 0xA4, 0x89, 0xF0, 0xBB, 0xC2,
-0x40, 0x6D, 0xAB, 0xED, 0x6C, 0xED, 0x40, 0x75,
-0x1C, 0x61, 0x89, 0xF0, 0x7B, 0xA2, 0x19, 0x23,
-0x62, 0xA4, 0x89, 0xF0, 0x79, 0xC2, 0x63, 0xA4,
-0x89, 0xF0, 0x7A, 0xC2, 0x89, 0xF0, 0xDA, 0xA2,
-0x89, 0xF0, 0x59, 0xA2, 0xC0, 0x36, 0x4D, 0xEE,
-0x12, 0x26, 0x10, 0xF0, 0x23, 0x6C, 0x01, 0x6F,
-0x01, 0x6A, 0x09, 0xF0, 0x15, 0x4C, 0x00, 0x6D,
-0xEB, 0xEF, 0x04, 0xD2, 0x00, 0x18, 0xE2, 0xE6,
-0x06, 0x10, 0x10, 0xF0, 0x23, 0x6C, 0x09, 0xF0,
-0x15, 0x4C, 0x00, 0x18, 0xCF, 0xE6, 0x07, 0x97,
-0x04, 0x63, 0x00, 0xEF, 0x15, 0xF0, 0xFF, 0x0F,
+0x6E, 0xF5, 0x54, 0x9A, 0x80, 0xF2, 0x95, 0xA0,
+0x40, 0xEA, 0x09, 0x10, 0x10, 0xF0, 0x24, 0x6A,
+0x36, 0xF4, 0x4C, 0x9A, 0x10, 0x6B, 0x01, 0x6C,
+0x60, 0xC2, 0x80, 0x18, 0xA9, 0x0B, 0x89, 0xF0,
+0x7E, 0xA1, 0x02, 0x6A, 0x4B, 0xEA, 0x6C, 0xEA,
+0x89, 0xF0, 0x5E, 0xC1, 0x39, 0x10, 0x30, 0xF0,
+0x20, 0x69, 0x30, 0xF0, 0x20, 0x68, 0xC0, 0xF1,
+0x08, 0x49, 0xCF, 0xF4, 0x00, 0x48, 0x89, 0xF0,
+0x7F, 0xA1, 0x80, 0xF1, 0x4A, 0xA0, 0x63, 0xEA,
+0x2B, 0x61, 0x04, 0x94, 0x00, 0x18, 0xAF, 0xE4,
+0x01, 0x6B, 0x4C, 0xEB, 0x18, 0x2B, 0x80, 0xF1,
+0x4C, 0xA0, 0x15, 0x2A, 0x80, 0xF1, 0x4B, 0xA0,
+0xC8, 0xF2, 0x9F, 0xA1, 0x04, 0x97, 0x01, 0x4A,
+0x80, 0xF1, 0x4B, 0xC0, 0x80, 0xF1, 0x49, 0xA0,
+0x02, 0x6D, 0x08, 0x6E, 0x01, 0x4A, 0x80, 0xF1,
+0x49, 0xC0, 0x30, 0xF0, 0x20, 0x6A, 0x2E, 0xF4,
+0x50, 0x9A, 0x40, 0xEA, 0x04, 0x10, 0x04, 0x94,
+0x01, 0x6D, 0x00, 0x18, 0xA9, 0xE4, 0x30, 0xF0,
+0x20, 0x6A, 0xCF, 0xF4, 0x00, 0x4A, 0x00, 0x6B,
+0x80, 0xF1, 0x6A, 0xC2, 0x80, 0xF1, 0x6C, 0xC2,
+0x09, 0x97, 0x08, 0x91, 0x07, 0x90, 0x05, 0x63,
+0x00, 0xEF, 0x00, 0x65, 0x15, 0xF0, 0xFF, 0x0F,
 0x00, 0x00, 0x00, 0x00, 0x15, 0xF0, 0x0F, 0x00,
 0x00, 0x00, 0x00, 0x00, 0x05, 0xF0, 0xFF, 0x0F,
 0x00, 0x00, 0x00, 0x00, 0x05, 0xF0, 0x0F, 0x00,
@@ -53405,62 +53137,62 @@ u8 array_mp_8821c_fw_wowlan[] = {
 0x00, 0x00, 0x00, 0x00, 0x00, 0xF0, 0xFF, 0xFF,
 0xFF, 0x03, 0x00, 0x00, 0x15, 0xF0, 0xFF, 0xFF,
 0x0F, 0x00, 0x00, 0x00, 0x10, 0xF0, 0x24, 0x6B,
-0xD7, 0xF1, 0x6C, 0x9B, 0xFF, 0x6A, 0x8C, 0xEA,
+0xF6, 0xF7, 0x64, 0x9B, 0xFF, 0x6A, 0x8C, 0xEA,
 0x60, 0x9B, 0x80, 0xF1, 0x01, 0x6C, 0x8B, 0xEC,
-0x8C, 0xEB, 0x10, 0xF0, 0x24, 0x6C, 0x56, 0xF7,
-0x88, 0x9C, 0x01, 0x72, 0x80, 0x9C, 0x05, 0x60,
+0x8C, 0xEB, 0x10, 0xF0, 0x24, 0x6C, 0x76, 0xF5,
+0x84, 0x9C, 0x01, 0x72, 0x80, 0x9C, 0x05, 0x60,
 0x02, 0x72, 0x05, 0x61, 0xFF, 0x6A, 0x01, 0x4A,
 0x01, 0x10, 0x80, 0x6A, 0x4D, 0xEB, 0x10, 0xF0,
-0x24, 0x6A, 0xD7, 0xF1, 0x4C, 0x9A, 0x60, 0xDA,
-0x10, 0xF0, 0x24, 0x6A, 0xD7, 0xF1, 0x50, 0x9A,
-0x10, 0xF0, 0x24, 0x6B, 0x56, 0xF7, 0x68, 0x9B,
+0x24, 0x6A, 0xF6, 0xF7, 0x44, 0x9A, 0x60, 0xDA,
+0x10, 0xF0, 0x24, 0x6A, 0xF6, 0xF7, 0x48, 0x9A,
+0x10, 0xF0, 0x24, 0x6B, 0x76, 0xF5, 0x64, 0x9B,
 0x8C, 0xEA, 0x40, 0xDB, 0x10, 0xF0, 0x24, 0x6B,
-0xD7, 0xF1, 0x74, 0x9B, 0x50, 0x6A, 0x40, 0xC3,
-0x10, 0xF0, 0x24, 0x6B, 0xD7, 0xF1, 0x78, 0x9B,
+0xF6, 0xF7, 0x6C, 0x9B, 0x50, 0x6A, 0x40, 0xC3,
+0x10, 0xF0, 0x24, 0x6B, 0xF6, 0xF7, 0x70, 0x9B,
 0x40, 0xC3, 0x20, 0xE8, 0x10, 0xF0, 0x24, 0x6A,
-0xF7, 0xF1, 0x40, 0x9A, 0x10, 0xF0, 0x24, 0x6C,
-0xF7, 0xF1, 0x88, 0x9C, 0x60, 0xAA, 0xEF, 0xF7,
+0xF6, 0xF7, 0x58, 0x9A, 0x10, 0xF0, 0x24, 0x6C,
+0x17, 0xF0, 0x80, 0x9C, 0x60, 0xAA, 0xEF, 0xF7,
 0x1F, 0x6A, 0x6C, 0xEA, 0x30, 0xF0, 0x20, 0x6B,
 0x4F, 0xF6, 0x50, 0xCB, 0x10, 0xF0, 0x24, 0x6A,
-0xF7, 0xF1, 0x64, 0x9A, 0x40, 0x9B, 0x8D, 0xEA,
+0xF6, 0xF7, 0x7C, 0x9A, 0x40, 0x9B, 0x8D, 0xEA,
 0x40, 0xDB, 0x20, 0xE8, 0xFF, 0x6A, 0x4C, 0xEC,
 0x03, 0x6B, 0x8C, 0xEB, 0x4C, 0xEE, 0x3C, 0x2B,
-0x10, 0xF0, 0x24, 0x6B, 0xF7, 0xF1, 0x7C, 0x9B,
+0x10, 0xF0, 0x24, 0x6B, 0x17, 0xF0, 0x74, 0x9B,
 0x80, 0xC3, 0x0F, 0x6B, 0xCC, 0xEB, 0x34, 0x23,
 0x01, 0x6C, 0x6C, 0xEC, 0x06, 0x24, 0x10, 0xF0,
-0x24, 0x6C, 0x17, 0xF2, 0x80, 0x9C, 0xAC, 0xEA,
+0x24, 0x6C, 0x17, 0xF0, 0x98, 0x9C, 0xAC, 0xEA,
 0x40, 0xC4, 0x02, 0x6A, 0x6C, 0xEA, 0x08, 0x22,
 0xFF, 0x6C, 0xA2, 0x32, 0x8C, 0xEA, 0x10, 0xF0,
-0x24, 0x6C, 0x17, 0xF2, 0x84, 0x9C, 0x40, 0xC4,
+0x24, 0x6C, 0x17, 0xF0, 0x9C, 0x9C, 0x40, 0xC4,
 0x04, 0x6A, 0x6C, 0xEA, 0x09, 0x22, 0xA2, 0x32,
 0xFF, 0x6C, 0x42, 0x32, 0x8C, 0xEA, 0x10, 0xF0,
-0x24, 0x6C, 0x17, 0xF2, 0x88, 0x9C, 0x40, 0xC4,
+0x24, 0x6C, 0x37, 0xF0, 0x80, 0x9C, 0x40, 0xC4,
 0x6E, 0x32, 0x07, 0x22, 0x10, 0xF0, 0x24, 0x6A,
-0x17, 0xF2, 0x4C, 0x9A, 0x00, 0xF6, 0xA2, 0x35,
+0x37, 0xF0, 0x44, 0x9A, 0x00, 0xF6, 0xA2, 0x35,
 0xA0, 0xC2, 0x20, 0x6A, 0x6D, 0xEA, 0x10, 0xF0,
-0x24, 0x6B, 0x17, 0xF2, 0x70, 0x9B, 0x40, 0xC3,
+0x24, 0x6B, 0x37, 0xF0, 0x68, 0x9B, 0x40, 0xC3,
 0x00, 0x6A, 0x40, 0xC3, 0x01, 0x6A, 0x20, 0xE8,
 0x00, 0x6A, 0x20, 0xE8, 0xFF, 0x6A, 0x8C, 0xEA,
 0x03, 0x6B, 0x4C, 0xEB, 0x03, 0x23, 0x01, 0x6A,
 0x4B, 0xEA, 0x20, 0xE8, 0x10, 0xF0, 0x24, 0x6C,
-0xF7, 0xF1, 0x9C, 0x9C, 0x40, 0xC4, 0x10, 0xF0,
-0x24, 0x6A, 0x17, 0xF2, 0x90, 0x9A, 0x30, 0x6A,
-0x40, 0xC4, 0x10, 0xF0, 0x24, 0x6A, 0x17, 0xF2,
-0x40, 0x9A, 0x40, 0x9A, 0x60, 0xC4, 0x20, 0xE8,
+0x17, 0xF0, 0x94, 0x9C, 0x40, 0xC4, 0x10, 0xF0,
+0x24, 0x6A, 0x37, 0xF0, 0x88, 0x9A, 0x30, 0x6A,
+0x40, 0xC4, 0x10, 0xF0, 0x24, 0x6A, 0x17, 0xF0,
+0x58, 0x9A, 0x40, 0x9A, 0x60, 0xC4, 0x20, 0xE8,
 0xFD, 0x63, 0x05, 0x62, 0x10, 0xF0, 0x24, 0x6A,
-0x17, 0xF2, 0xB4, 0x9A, 0xE0, 0xF3, 0x10, 0x6C,
-0x0F, 0x6E, 0x80, 0x18, 0x45, 0x13, 0xE0, 0xF3,
-0x0C, 0x6C, 0x80, 0x18, 0x67, 0x13, 0xFF, 0x6B,
+0x37, 0xF0, 0xAC, 0x9A, 0xE0, 0xF3, 0x10, 0x6C,
+0x0F, 0x6E, 0x80, 0x18, 0x11, 0x13, 0xE0, 0xF3,
+0x0C, 0x6C, 0x80, 0x18, 0x33, 0x13, 0xFF, 0x6B,
 0x4C, 0xEB, 0x0B, 0x73, 0x0B, 0x61, 0x10, 0xF0,
-0x24, 0x6A, 0x17, 0xF2, 0x78, 0x9A, 0x10, 0xF0,
-0x24, 0x6C, 0xD6, 0xF6, 0x80, 0x9C, 0x40, 0x9B,
+0x24, 0x6A, 0x37, 0xF0, 0x70, 0x9A, 0x10, 0xF0,
+0x24, 0x6C, 0xD6, 0xF4, 0x9C, 0x9C, 0x40, 0x9B,
 0x8C, 0xEA, 0x40, 0xDB, 0x05, 0x97, 0x03, 0x63,
 0x00, 0xEF, 0x00, 0x65, 0xFB, 0x63, 0x09, 0x62,
 0x08, 0xD1, 0x07, 0xD0, 0x10, 0xF0, 0x24, 0x6B,
-0xFF, 0x6A, 0x36, 0xF5, 0x6C, 0x9B, 0x4C, 0xED,
+0xFF, 0x6A, 0x56, 0xF3, 0x68, 0x9B, 0x4C, 0xED,
 0x04, 0xD5, 0x60, 0xA3, 0xFF, 0xF7, 0x1F, 0x68,
 0x8C, 0xE8, 0x6C, 0xEA, 0x05, 0xD2, 0x10, 0xF0,
-0x24, 0x6A, 0x16, 0xF5, 0x58, 0x9A, 0x02, 0xF0,
+0x24, 0x6A, 0x36, 0xF3, 0x54, 0x9A, 0x02, 0xF0,
 0x00, 0x6B, 0x40, 0x9A, 0x6C, 0xEA, 0x1F, 0x22,
 0x30, 0xF0, 0x20, 0x69, 0x6E, 0xF2, 0x58, 0x99,
 0x00, 0x6C, 0xFF, 0x6D, 0x49, 0x6E, 0x40, 0xEA,
@@ -53472,7 +53204,7 @@ u8 array_mp_8821c_fw_wowlan[] = {
 0x4A, 0x6E, 0x40, 0xEA, 0x09, 0x10, 0x30, 0xF0,
 0x20, 0x6A, 0x6E, 0xF2, 0x5C, 0x9A, 0x04, 0x96,
 0x90, 0x67, 0x01, 0x6D, 0x03, 0x6F, 0x40, 0xEA,
-0x10, 0xF0, 0x24, 0x6A, 0xF6, 0xF6, 0x74, 0x9A,
+0x10, 0xF0, 0x24, 0x6A, 0x16, 0xF5, 0x70, 0x9A,
 0xFF, 0x6C, 0x08, 0x6D, 0x40, 0xA3, 0x8C, 0xEA,
 0xAD, 0xEA, 0x8C, 0xEA, 0x40, 0xC3, 0x30, 0xF0,
 0x20, 0x6A, 0x8E, 0xF2, 0x5C, 0x9A, 0x40, 0xEA,
@@ -53489,32 +53221,32 @@ u8 array_mp_8821c_fw_wowlan[] = {
 0x05, 0x67, 0x0C, 0xD6, 0x27, 0x67, 0x1F, 0x22,
 0x1F, 0xF7, 0x00, 0x6A, 0xAC, 0xEA, 0x02, 0xF0,
 0x00, 0x72, 0x01, 0x60, 0x05, 0x2A, 0x10, 0xF0,
-0x24, 0x6A, 0xB6, 0xF4, 0x4C, 0x9A, 0x04, 0x10,
-0x10, 0xF0, 0x24, 0x6A, 0xB6, 0xF4, 0x50, 0x9A,
+0x24, 0x6A, 0xD6, 0xF2, 0x48, 0x9A, 0x04, 0x10,
+0x10, 0xF0, 0x24, 0x6A, 0xD6, 0xF2, 0x4C, 0x9A,
 0x49, 0xE0, 0x40, 0x9A, 0x0C, 0x94, 0x04, 0xD2,
 0x30, 0xF0, 0x20, 0x6A, 0xAE, 0xF4, 0x50, 0x9A,
 0x40, 0xEA, 0x0C, 0x93, 0x24, 0xEA, 0x6F, 0xEA,
 0x04, 0x93, 0x6C, 0xEA, 0x4D, 0xE9, 0x1F, 0xF7,
 0x00, 0x6A, 0x0C, 0xEA, 0x02, 0xF0, 0x00, 0x72,
 0x01, 0x60, 0x05, 0x2A, 0x10, 0xF0, 0x24, 0x6A,
-0xB6, 0xF4, 0x4C, 0x9A, 0x04, 0x10, 0x10, 0xF0,
-0x24, 0x6A, 0xB6, 0xF4, 0x50, 0x9A, 0x41, 0xE0,
+0xD6, 0xF2, 0x48, 0x9A, 0x04, 0x10, 0x10, 0xF0,
+0x24, 0x6A, 0xD6, 0xF2, 0x4C, 0x9A, 0x41, 0xE0,
 0x20, 0xD8, 0x09, 0x97, 0x08, 0x91, 0x07, 0x90,
 0x05, 0x63, 0x00, 0xEF, 0xFC, 0x63, 0x07, 0x62,
 0x06, 0xD1, 0x05, 0xD0, 0x1F, 0xF7, 0x00, 0x6A,
 0xAC, 0xEA, 0x02, 0xF0, 0x00, 0x72, 0x26, 0x67,
 0x01, 0x60, 0x05, 0x2A, 0x10, 0xF0, 0x24, 0x6A,
-0xB6, 0xF4, 0x4C, 0x9A, 0x04, 0x10, 0x10, 0xF0,
-0x24, 0x6A, 0xB6, 0xF4, 0x50, 0x9A, 0x55, 0xE5,
+0xD6, 0xF2, 0x48, 0x9A, 0x04, 0x10, 0x10, 0xF0,
+0x24, 0x6A, 0xD6, 0xF2, 0x4C, 0x9A, 0x55, 0xE5,
 0x30, 0xF0, 0x20, 0x6A, 0x00, 0x9D, 0xAE, 0xF4,
 0x50, 0x9A, 0x91, 0x67, 0x2C, 0xE8, 0x40, 0xEA,
 0x06, 0xEA, 0x50, 0x67, 0x07, 0x97, 0x06, 0x91,
 0x05, 0x90, 0x04, 0x63, 0x00, 0xEF, 0x00, 0x65,
 0xFD, 0x63, 0x05, 0x62, 0x00, 0x6A, 0x10, 0xF0,
-0x24, 0x6B, 0x76, 0xF7, 0x68, 0x9B, 0x54, 0x34,
+0x24, 0x6B, 0x96, 0xF5, 0x64, 0x9B, 0x54, 0x34,
 0x01, 0x4A, 0x71, 0xE4, 0xA0, 0xA4, 0xF8, 0x6B,
 0xAC, 0xEB, 0x60, 0xC4, 0xFF, 0x6B, 0x6C, 0xEA,
-0x80, 0x72, 0xF1, 0x61, 0x80, 0x18, 0xB1, 0x13,
+0x80, 0x72, 0xF1, 0x61, 0x80, 0x18, 0x7D, 0x13,
 0x05, 0x97, 0x03, 0x63, 0x00, 0xEF, 0x00, 0x65,
 0xFD, 0x63, 0x05, 0x62, 0x60, 0xA4, 0x30, 0xF0,
 0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A, 0xC5, 0xF6,
@@ -53522,75 +53254,75 @@ u8 array_mp_8821c_fw_wowlan[] = {
 0x62, 0xA4, 0xC5, 0xF6, 0x70, 0xC2, 0xA3, 0xA4,
 0x0F, 0x6B, 0xAC, 0xEB, 0xC5, 0xF6, 0x74, 0xC2,
 0x63, 0xA4, 0x72, 0x33, 0xC5, 0xF6, 0x75, 0xC2,
-0x80, 0x18, 0x5D, 0x16, 0x05, 0x97, 0x03, 0x63,
+0x80, 0x18, 0x29, 0x16, 0x05, 0x97, 0x03, 0x63,
 0x00, 0xEF, 0x00, 0x65, 0xFD, 0x63, 0x05, 0x62,
 0xFF, 0x6A, 0x8C, 0xEA, 0x4C, 0x72, 0x03, 0x61,
-0x85, 0x67, 0x80, 0x18, 0xFE, 0x13, 0x05, 0x97,
+0x85, 0x67, 0x80, 0x18, 0xCA, 0x13, 0x05, 0x97,
 0x03, 0x63, 0x00, 0xEF, 0xFD, 0x63, 0x05, 0x62,
 0x68, 0xA4, 0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1,
 0x08, 0x4A, 0xC5, 0xF6, 0x71, 0xC2, 0x69, 0xA4,
 0x65, 0xF4, 0x6A, 0xC2, 0x6A, 0xA4, 0xC5, 0xF6,
 0x70, 0xC2, 0xAB, 0xA4, 0x0F, 0x6B, 0xAC, 0xEB,
 0xC5, 0xF6, 0x74, 0xC2, 0x6B, 0xA4, 0x72, 0x33,
-0xC5, 0xF6, 0x75, 0xC2, 0x80, 0x18, 0x5D, 0x16,
+0xC5, 0xF6, 0x75, 0xC2, 0x80, 0x18, 0x29, 0x16,
 0x05, 0x97, 0x00, 0x6A, 0x03, 0x63, 0x00, 0xEF,
 0xFD, 0x63, 0x05, 0x62, 0xFF, 0x6A, 0x8C, 0xEA,
 0x11, 0x72, 0x04, 0x61, 0x85, 0x67, 0x80, 0x18,
-0x13, 0x14, 0x0C, 0x10, 0x10, 0xF0, 0x24, 0x6A,
-0x16, 0xF5, 0x7C, 0x9A, 0x10, 0xF0, 0x24, 0x6C,
-0x36, 0xF5, 0x94, 0x9C, 0x40, 0x9B, 0x8D, 0xEA,
+0xDF, 0x13, 0x0C, 0x10, 0x10, 0xF0, 0x24, 0x6A,
+0x36, 0xF3, 0x78, 0x9A, 0x10, 0xF0, 0x24, 0x6C,
+0x56, 0xF3, 0x90, 0x9C, 0x40, 0x9B, 0x8D, 0xEA,
 0x40, 0xDB, 0xFF, 0x6A, 0x05, 0x97, 0x03, 0x63,
 0x00, 0xEF, 0x00, 0x65, 0x01, 0x6A, 0x20, 0xE8,
 0x20, 0xE8, 0x00, 0x65, 0x20, 0xE8, 0x00, 0x65,
 0x20, 0xE8, 0x00, 0x65, 0xFC, 0x63, 0x07, 0x62,
 0x06, 0xD1, 0x05, 0xD0, 0x01, 0x75, 0x1F, 0x61,
-0x10, 0xF0, 0x24, 0x6A, 0xF6, 0xF4, 0x20, 0x9A,
+0x10, 0xF0, 0x24, 0x6A, 0xF6, 0xF2, 0x3C, 0x9A,
 0x30, 0xF0, 0x20, 0x68, 0xCE, 0xF4, 0x50, 0x98,
 0xB1, 0x67, 0x41, 0xF1, 0x08, 0x6C, 0x02, 0x6E,
 0x40, 0xEA, 0xCE, 0xF4, 0x50, 0x98, 0xB1, 0x67,
 0x41, 0xF1, 0x0C, 0x6C, 0x02, 0x6E, 0x40, 0xEA,
-0x10, 0xF0, 0x24, 0x6A, 0xD6, 0xF5, 0x38, 0x9A,
+0x10, 0xF0, 0x24, 0x6A, 0xF6, 0xF3, 0x34, 0x9A,
 0x21, 0xF4, 0x00, 0x6C, 0xCE, 0xF4, 0x50, 0x98,
 0xB1, 0x67, 0x00, 0x6E, 0x46, 0x10, 0x02, 0x75,
-0x26, 0x61, 0x10, 0xF0, 0x24, 0x6A, 0xF6, 0xF4,
-0x20, 0x9A, 0x30, 0xF0, 0x20, 0x68, 0xCE, 0xF4,
+0x26, 0x61, 0x10, 0xF0, 0x24, 0x6A, 0xF6, 0xF2,
+0x3C, 0x9A, 0x30, 0xF0, 0x20, 0x68, 0xCE, 0xF4,
 0x50, 0x98, 0xB1, 0x67, 0x41, 0xF1, 0x08, 0x6C,
 0x02, 0x6E, 0x40, 0xEA, 0xCE, 0xF4, 0x50, 0x98,
 0xB1, 0x67, 0x41, 0xF1, 0x0C, 0x6C, 0x01, 0x6E,
-0x40, 0xEA, 0x10, 0xF0, 0x24, 0x6A, 0xD6, 0xF5,
-0x38, 0x9A, 0xCE, 0xF4, 0x50, 0x98, 0x21, 0xF4,
+0x40, 0xEA, 0x10, 0xF0, 0x24, 0x6A, 0xF6, 0xF3,
+0x34, 0x9A, 0xCE, 0xF4, 0x50, 0x98, 0x21, 0xF4,
 0x00, 0x6C, 0xB1, 0x67, 0x00, 0x6E, 0x40, 0xEA,
 0xCE, 0xF4, 0x50, 0x98, 0xE1, 0xF0, 0x10, 0x6C,
 0xB1, 0x67, 0x01, 0x6E, 0x25, 0x10, 0x10, 0xF0,
-0x24, 0x6A, 0xF6, 0xF4, 0x20, 0x9A, 0x30, 0xF0,
+0x24, 0x6A, 0xF6, 0xF2, 0x3C, 0x9A, 0x30, 0xF0,
 0x20, 0x68, 0xCE, 0xF4, 0x50, 0x98, 0xB1, 0x67,
 0x41, 0xF1, 0x08, 0x6C, 0x02, 0x6E, 0x40, 0xEA,
 0xCE, 0xF4, 0x50, 0x98, 0xB1, 0x67, 0x41, 0xF1,
 0x0C, 0x6C, 0x02, 0x6E, 0x40, 0xEA, 0x10, 0xF0,
-0x24, 0x6A, 0xD6, 0xF5, 0x38, 0x9A, 0xCE, 0xF4,
+0x24, 0x6A, 0xF6, 0xF3, 0x34, 0x9A, 0xCE, 0xF4,
 0x50, 0x98, 0x21, 0xF4, 0x00, 0x6C, 0xB1, 0x67,
 0x01, 0x6E, 0x40, 0xEA, 0xCE, 0xF4, 0x50, 0x98,
 0xE1, 0xF0, 0x10, 0x6C, 0xB1, 0x67, 0x00, 0x6E,
 0x40, 0xEA, 0x07, 0x97, 0x06, 0x91, 0x05, 0x90,
 0x04, 0x63, 0x00, 0xEF, 0xFD, 0x63, 0x05, 0x62,
 0x03, 0x25, 0x01, 0x6A, 0x4B, 0xEA, 0x0C, 0x10,
-0x10, 0xF0, 0x24, 0x6A, 0xFF, 0x6C, 0x96, 0xF7,
-0xA0, 0x9A, 0xCC, 0xEC, 0x88, 0x34, 0x05, 0xF0,
-0x00, 0x4C, 0xEC, 0xED, 0x00, 0x18, 0xD5, 0xE3,
+0x10, 0xF0, 0x24, 0x6A, 0xFF, 0x6C, 0x96, 0xF5,
+0xBC, 0x9A, 0xCC, 0xEC, 0x88, 0x34, 0x05, 0xF0,
+0x00, 0x4C, 0xEC, 0xED, 0x00, 0x18, 0x5C, 0xE3,
 0x05, 0x97, 0x03, 0x63, 0x00, 0xEF, 0x00, 0x65,
 0xFB, 0x63, 0x09, 0x62, 0x08, 0xD1, 0x07, 0xD0,
 0x0E, 0x90, 0x41, 0x2D, 0x10, 0xF0, 0x24, 0x6A,
-0x96, 0xF7, 0x40, 0x9A, 0xFF, 0x69, 0xCC, 0xE9,
+0x96, 0xF5, 0x5C, 0x9A, 0xFF, 0x69, 0xCC, 0xE9,
 0x4C, 0xEF, 0x4A, 0xEF, 0x04, 0xD7, 0x19, 0x60,
-0xD1, 0x67, 0xE2, 0x67, 0x80, 0x18, 0x6F, 0x14,
+0xD1, 0x67, 0xE2, 0x67, 0x80, 0x18, 0x3B, 0x14,
 0x61, 0x42, 0x31, 0x23, 0x00, 0x6C, 0x64, 0x67,
 0x04, 0x95, 0x01, 0x6E, 0xA6, 0xEC, 0xCC, 0xED,
 0x07, 0x2D, 0x01, 0x4B, 0xFF, 0x6D, 0xAC, 0xEB,
 0x14, 0x73, 0x01, 0x4C, 0xF5, 0x61, 0x14, 0x6B,
 0x04, 0x94, 0x04, 0xEB, 0x8F, 0xEB, 0x4C, 0xEB,
-0x6D, 0xE8, 0x10, 0xF0, 0x24, 0x6A, 0x96, 0xF7,
-0x60, 0x9A, 0x10, 0xF0, 0x24, 0x6E, 0x96, 0xF7,
-0xC4, 0x9E, 0x30, 0xF0, 0x20, 0x6A, 0xCE, 0xF4,
+0x6D, 0xE8, 0x10, 0xF0, 0x24, 0x6A, 0x96, 0xF5,
+0x7C, 0x9A, 0x10, 0xF0, 0x24, 0x6E, 0xB6, 0xF5,
+0xC0, 0x9E, 0x30, 0xF0, 0x20, 0x6A, 0xCE, 0xF4,
 0x50, 0x9A, 0x0C, 0xEB, 0x00, 0xF5, 0x20, 0x31,
 0x2D, 0xEB, 0x01, 0x6D, 0x81, 0xF4, 0x10, 0x6C,
 0xAB, 0xED, 0x6C, 0xEE, 0x40, 0xEA, 0x30, 0xF0,
@@ -53601,27 +53333,27 @@ u8 array_mp_8821c_fw_wowlan[] = {
 0x0C, 0xD1, 0x0B, 0xD0, 0x0E, 0xD4, 0x6B, 0xA4,
 0xFF, 0x68, 0xAC, 0xE8, 0x01, 0x6A, 0x60, 0xF1,
 0x0B, 0x2B, 0x30, 0xF0, 0x21, 0x6A, 0xB0, 0xF3,
-0x1C, 0xC2, 0x10, 0xF0, 0x24, 0x6A, 0x96, 0xF7,
-0xE0, 0x9A, 0x00, 0x6D, 0x18, 0x6E, 0x80, 0x18,
-0x6F, 0x14, 0x08, 0xD2, 0x08, 0x93, 0x00, 0x6A,
+0x1C, 0xC2, 0x10, 0xF0, 0x24, 0x6A, 0x96, 0xF5,
+0xFC, 0x9A, 0x00, 0x6D, 0x18, 0x6E, 0x80, 0x18,
+0x3B, 0x14, 0x08, 0xD2, 0x08, 0x93, 0x00, 0x6A,
 0x01, 0x4B, 0x01, 0x23, 0x01, 0x6A, 0x01, 0x6B,
 0x4C, 0xEB, 0x07, 0xD3, 0x0E, 0x93, 0x60, 0xF2,
 0x50, 0xA3, 0x00, 0x6B, 0x06, 0xD3, 0x12, 0x2A,
-0x10, 0xF0, 0x24, 0x6A, 0x0E, 0x94, 0x96, 0xF7,
-0xE0, 0x9A, 0xA3, 0x67, 0xB8, 0x6E, 0x80, 0x18,
-0x6F, 0x14, 0x06, 0xD2, 0x06, 0x93, 0x00, 0x6A,
+0x10, 0xF0, 0x24, 0x6A, 0x0E, 0x94, 0x96, 0xF5,
+0xFC, 0x9A, 0xA3, 0x67, 0xB8, 0x6E, 0x80, 0x18,
+0x3B, 0x14, 0x06, 0xD2, 0x06, 0x93, 0x00, 0x6A,
 0x01, 0x4B, 0x01, 0x23, 0x01, 0x6A, 0x07, 0x93,
 0x4C, 0xEB, 0x07, 0xD3, 0x0F, 0x58, 0x69, 0x60,
-0x10, 0xF0, 0x24, 0x6A, 0x96, 0xF7, 0x28, 0x9A,
+0x10, 0xF0, 0x24, 0x6A, 0xB6, 0xF5, 0x24, 0x9A,
 0x08, 0x92, 0x30, 0xF0, 0x20, 0x6B, 0x01, 0xF4,
 0x1C, 0x6C, 0x4C, 0xE9, 0xCE, 0xF4, 0x50, 0x9B,
 0x01, 0xF7, 0x00, 0x6D, 0x00, 0x6E, 0x40, 0xEA,
 0x30, 0xF0, 0x20, 0x6B, 0xCE, 0xF4, 0x50, 0x9B,
-0x10, 0xF0, 0x24, 0x6B, 0x96, 0xF7, 0xAC, 0x9B,
+0x10, 0xF0, 0x24, 0x6B, 0xB6, 0xF5, 0xA8, 0x9B,
 0x61, 0xF0, 0x00, 0x6C, 0x61, 0xF1, 0x0A, 0x6E,
 0x40, 0xEA, 0x0E, 0x93, 0x0D, 0xE9, 0x60, 0xF2,
 0x50, 0xA3, 0x07, 0x2A, 0x10, 0xF0, 0x24, 0x6A,
-0x06, 0x93, 0x36, 0xF5, 0x5C, 0x9A, 0x4D, 0xEB,
+0x06, 0x93, 0x56, 0xF3, 0x58, 0x9A, 0x4D, 0xEB,
 0x06, 0xD3, 0x0E, 0x70, 0x1C, 0x61, 0x30, 0xF0,
 0x20, 0x68, 0xCE, 0xF4, 0x50, 0x98, 0x01, 0x6D,
 0x21, 0xF2, 0x04, 0x6C, 0xAB, 0xED, 0x17, 0xF0,
@@ -53631,22 +53363,22 @@ u8 array_mp_8821c_fw_wowlan[] = {
 0x50, 0x98, 0xA1, 0xF2, 0x0C, 0x6C, 0xAB, 0xED,
 0x66, 0xF6, 0x07, 0x6E, 0x20, 0x10, 0x30, 0xF0,
 0x20, 0x68, 0x10, 0xF0, 0x24, 0x6A, 0xCE, 0xF4,
-0x70, 0x98, 0x96, 0xF7, 0xD0, 0x9A, 0x01, 0x6D,
+0x70, 0x98, 0xB6, 0xF5, 0xCC, 0x9A, 0x01, 0x6D,
 0x21, 0xF2, 0x04, 0x6C, 0xAB, 0xED, 0x40, 0xEB,
 0xCE, 0xF4, 0x50, 0x98, 0x21, 0xF2, 0x08, 0x6C,
 0xFF, 0xF7, 0x1F, 0x6D, 0x11, 0xF0, 0x10, 0x6E,
 0x40, 0xEA, 0x10, 0xF0, 0x24, 0x6B, 0xCE, 0xF4,
-0x50, 0x98, 0x96, 0xF7, 0xD4, 0x9B, 0x01, 0x6D,
+0x50, 0x98, 0xB6, 0xF5, 0xD0, 0x9B, 0x01, 0x6D,
 0xA1, 0xF2, 0x0C, 0x6C, 0xAB, 0xED, 0x40, 0xEA,
 0xAE, 0x10, 0x24, 0x58, 0xC0, 0xF0, 0x0F, 0x61,
-0x10, 0xF0, 0x24, 0x6A, 0x96, 0xF7, 0x28, 0x9A,
+0x10, 0xF0, 0x24, 0x6A, 0xB6, 0xF5, 0x24, 0x9A,
 0x08, 0x92, 0x68, 0x40, 0xE4, 0x4B, 0x4C, 0xE9,
 0xFF, 0x6A, 0x4C, 0xEB, 0x1D, 0x5B, 0x0D, 0xE9,
 0x12, 0x61, 0x68, 0x40, 0xA4, 0x4B, 0x4C, 0xEB,
 0x29, 0x5B, 0x05, 0x60, 0x10, 0xF0, 0x24, 0x6A,
-0x36, 0xF5, 0x54, 0x9A, 0x07, 0x10, 0x8D, 0x58,
+0x56, 0xF3, 0x50, 0x9A, 0x07, 0x10, 0x8D, 0x58,
 0xA0, 0xF0, 0x15, 0x61, 0x10, 0xF0, 0x24, 0x6A,
-0x36, 0xF5, 0x58, 0x9A, 0x4D, 0xE9, 0x68, 0x40,
+0x56, 0xF3, 0x54, 0x9A, 0x4D, 0xE9, 0x68, 0x40,
 0xE4, 0x4B, 0xFF, 0x6A, 0x4C, 0xEB, 0x1D, 0x5B,
 0x0A, 0x60, 0x30, 0xF0, 0x20, 0x6A, 0xCE, 0xF4,
 0x50, 0x9A, 0x01, 0xF4, 0x1C, 0x6C, 0x01, 0xF7,
@@ -53661,34 +53393,34 @@ u8 array_mp_8821c_fw_wowlan[] = {
 0xE4, 0x4B, 0xFF, 0x6A, 0x4C, 0xEB, 0x0D, 0x5B,
 0x0D, 0x60, 0x30, 0xF0, 0x20, 0x6A, 0x10, 0xF0,
 0x24, 0x6B, 0xCE, 0xF4, 0x50, 0x9A, 0x61, 0xF0,
-0x00, 0x6C, 0x96, 0xF7, 0xAC, 0x9B, 0x80, 0xF4,
+0x00, 0x6C, 0xB6, 0xF5, 0xA8, 0x9B, 0x80, 0xF4,
 0x14, 0x6E, 0x35, 0x10, 0x68, 0x40, 0xD4, 0x4B,
 0x4C, 0xEB, 0x0D, 0x5B, 0x0D, 0x60, 0x30, 0xF0,
 0x20, 0x6A, 0x10, 0xF0, 0x24, 0x6B, 0xCE, 0xF4,
-0x50, 0x9A, 0x61, 0xF0, 0x00, 0x6C, 0x96, 0xF7,
-0xAC, 0x9B, 0x40, 0xF4, 0x13, 0x6E, 0x23, 0x10,
+0x50, 0x9A, 0x61, 0xF0, 0x00, 0x6C, 0xB6, 0xF5,
+0xA8, 0x9B, 0x40, 0xF4, 0x13, 0x6E, 0x23, 0x10,
 0x68, 0x40, 0xA4, 0x4B, 0x4C, 0xEB, 0x11, 0x5B,
 0x0D, 0x60, 0x30, 0xF0, 0x20, 0x6A, 0x10, 0xF0,
 0x24, 0x6B, 0xCE, 0xF4, 0x50, 0x9A, 0x61, 0xF0,
-0x00, 0x6C, 0x96, 0xF7, 0xAC, 0x9B, 0x40, 0xF4,
+0x00, 0x6C, 0xB6, 0xF5, 0xA8, 0x9B, 0x40, 0xF4,
 0x12, 0x6E, 0x11, 0x10, 0x68, 0x40, 0x92, 0x4B,
 0x4C, 0xEB, 0x3C, 0x5B, 0x48, 0x60, 0x30, 0xF0,
 0x20, 0x6A, 0x10, 0xF0, 0x24, 0x6B, 0xCE, 0xF4,
-0x50, 0x9A, 0x96, 0xF7, 0xAC, 0x9B, 0x61, 0xF0,
+0x50, 0x9A, 0xB6, 0xF5, 0xA8, 0x9B, 0x61, 0xF0,
 0x00, 0x6C, 0x00, 0xF4, 0x12, 0x6E, 0x40, 0xEA,
 0x0E, 0x93, 0x60, 0xF2, 0x50, 0xA3, 0x13, 0x2A,
 0xC7, 0x48, 0xFF, 0x6A, 0x4C, 0xE8, 0x13, 0x58,
-0x07, 0x60, 0x10, 0xF0, 0x24, 0x6A, 0x96, 0xF7,
-0x58, 0x9A, 0x06, 0x93, 0x4C, 0xEB, 0x06, 0x10,
-0x10, 0xF0, 0x24, 0x6A, 0x36, 0xF5, 0x5C, 0x9A,
+0x07, 0x60, 0x10, 0xF0, 0x24, 0x6A, 0xB6, 0xF5,
+0x54, 0x9A, 0x06, 0x93, 0x4C, 0xEB, 0x06, 0x10,
+0x10, 0xF0, 0x24, 0x6A, 0x56, 0xF3, 0x58, 0x9A,
 0x06, 0x93, 0x4D, 0xEB, 0x06, 0xD3, 0x10, 0xF0,
-0x24, 0x6A, 0x96, 0xF7, 0x00, 0x4A, 0x0E, 0x94,
+0x24, 0x6A, 0x96, 0xF5, 0x1C, 0x4A, 0x0E, 0x94,
 0xE0, 0x9A, 0x00, 0x6D, 0x18, 0x6E, 0x04, 0xD1,
-0x80, 0x18, 0x7A, 0x14, 0x07, 0x90, 0x0E, 0x93,
+0x80, 0x18, 0x46, 0x14, 0x07, 0x90, 0x0E, 0x93,
 0x4C, 0xE8, 0x60, 0xF2, 0x50, 0xA3, 0x0F, 0x2A,
-0x83, 0x67, 0x10, 0xF0, 0x24, 0x6B, 0x96, 0xF7,
-0x00, 0x4B, 0x06, 0x92, 0xE0, 0x9B, 0x00, 0x6D,
-0xB8, 0x6E, 0x04, 0xD2, 0x80, 0x18, 0x7A, 0x14,
+0x83, 0x67, 0x10, 0xF0, 0x24, 0x6B, 0x96, 0xF5,
+0x1C, 0x4B, 0x06, 0x92, 0xE0, 0x9B, 0x00, 0x6D,
+0xB8, 0x6E, 0x04, 0xD2, 0x80, 0x18, 0x46, 0x14,
 0x4C, 0xE8, 0xFF, 0x6A, 0x4C, 0xE8, 0x0B, 0xE8,
 0xC0, 0xF7, 0x02, 0x32, 0x01, 0x10, 0x00, 0x6A,
 0x0D, 0x97, 0x0C, 0x91, 0x0B, 0x90, 0x07, 0x63,
@@ -53696,40 +53428,40 @@ u8 array_mp_8821c_fw_wowlan[] = {
 0x0A, 0xD1, 0x09, 0xD0, 0xFF, 0x6A, 0xAC, 0xEA,
 0x06, 0xD2, 0x6B, 0xA4, 0x24, 0x67, 0x01, 0x6A,
 0x80, 0xF0, 0x16, 0x2B, 0x10, 0xF0, 0x24, 0x6A,
-0x96, 0xF7, 0xE0, 0x9A, 0x00, 0x6D, 0x18, 0x6E,
-0x80, 0x18, 0x6F, 0x14, 0x07, 0xD2, 0x06, 0x92,
+0x96, 0xF5, 0xFC, 0x9A, 0x00, 0x6D, 0x18, 0x6E,
+0x80, 0x18, 0x3B, 0x14, 0x07, 0xD2, 0x06, 0x92,
 0x0F, 0x5A, 0x36, 0x60, 0x30, 0xF0, 0x20, 0x68,
-0x10, 0xF0, 0x24, 0x6B, 0xD6, 0xF4, 0xB8, 0x9B,
+0x10, 0xF0, 0x24, 0x6B, 0xF6, 0xF2, 0xB4, 0x9B,
 0xCE, 0xF4, 0x50, 0x98, 0x01, 0xF0, 0x08, 0x6C,
 0x01, 0x6E, 0x40, 0xEA, 0xCE, 0xF4, 0x50, 0x98,
 0x40, 0xF4, 0x14, 0x6C, 0x80, 0x6D, 0x00, 0x6E,
 0x40, 0xEA, 0x10, 0xF0, 0x24, 0x6B, 0xCE, 0xF4,
-0x50, 0x98, 0x36, 0xF5, 0xB8, 0x9B, 0x81, 0xF2,
+0x50, 0x98, 0x56, 0xF3, 0xB4, 0x9B, 0x81, 0xF2,
 0x00, 0x6C, 0x00, 0x6E, 0x40, 0xEA, 0xCE, 0xF4,
 0x50, 0x98, 0x01, 0xF0, 0x14, 0x6C, 0x1F, 0xF4,
 0x00, 0x6D, 0x0F, 0x6E, 0x40, 0xEA, 0x10, 0xF0,
-0x24, 0x6A, 0x96, 0xF7, 0x1C, 0x9A, 0x07, 0x92,
+0x24, 0x6A, 0xB6, 0xF5, 0x18, 0x9A, 0x07, 0x92,
 0x4C, 0xE8, 0x30, 0xF0, 0x21, 0x6A, 0x90, 0xF3,
 0x51, 0xA2, 0x03, 0x22, 0x91, 0x67, 0x00, 0x6D,
 0x38, 0x10, 0x91, 0x67, 0x01, 0x6D, 0x35, 0x10,
 0x06, 0x92, 0x24, 0x5A, 0x50, 0x61, 0x30, 0xF0,
-0x20, 0x68, 0x10, 0xF0, 0x24, 0x6B, 0x36, 0xF5,
-0xB8, 0x9B, 0xCE, 0xF4, 0x50, 0x98, 0x81, 0xF2,
+0x20, 0x68, 0x10, 0xF0, 0x24, 0x6B, 0x56, 0xF3,
+0xB4, 0x9B, 0xCE, 0xF4, 0x50, 0x98, 0x81, 0xF2,
 0x00, 0x6C, 0x01, 0x6E, 0x40, 0xEA, 0xCE, 0xF4,
 0x50, 0x98, 0x40, 0xF4, 0x14, 0x6C, 0x80, 0x6D,
 0x01, 0x6E, 0x40, 0xEA, 0x10, 0xF0, 0x24, 0x6B,
-0xCE, 0xF4, 0x50, 0x98, 0xD6, 0xF4, 0xB8, 0x9B,
+0xCE, 0xF4, 0x50, 0x98, 0xF6, 0xF2, 0xB4, 0x9B,
 0x01, 0xF0, 0x08, 0x6C, 0x00, 0x6E, 0x40, 0xEA,
 0xCE, 0xF4, 0x50, 0x98, 0x01, 0xF0, 0x14, 0x6C,
 0x1F, 0xF4, 0x00, 0x6D, 0x0F, 0x6E, 0x40, 0xEA,
-0x10, 0xF0, 0x24, 0x6A, 0x96, 0xF7, 0x1C, 0x9A,
+0x10, 0xF0, 0x24, 0x6A, 0xB6, 0xF5, 0x18, 0x9A,
 0x07, 0x92, 0x91, 0x67, 0x02, 0x6D, 0x4C, 0xE8,
-0x10, 0xF0, 0x24, 0x6A, 0xB6, 0xF7, 0x40, 0x9A,
+0x10, 0xF0, 0x24, 0x6A, 0xB6, 0xF5, 0x5C, 0x9A,
 0x4D, 0xE8, 0x00, 0x18, 0x8C, 0xC3, 0x10, 0xF0,
-0x24, 0x6A, 0x96, 0xF7, 0xE0, 0x9A, 0x91, 0x67,
+0x24, 0x6A, 0x96, 0xF5, 0xFC, 0x9A, 0x91, 0x67,
 0x00, 0x6D, 0x18, 0x6E, 0x04, 0xD0, 0x80, 0x18,
-0x7A, 0x14, 0x06, 0x95, 0x91, 0x67, 0x02, 0x67,
-0x80, 0x18, 0x2F, 0x14, 0x0C, 0x22, 0x07, 0x92,
+0x46, 0x14, 0x06, 0x95, 0x91, 0x67, 0x02, 0x67,
+0x80, 0x18, 0xFB, 0x13, 0x0C, 0x22, 0x07, 0x92,
 0x00, 0x6C, 0x01, 0x4A, 0x01, 0x22, 0x01, 0x6C,
 0xFF, 0x6B, 0x0C, 0xEB, 0x8C, 0xEB, 0x00, 0x6A,
 0x03, 0x23, 0x01, 0x6A, 0x01, 0x10, 0x00, 0x6A,
@@ -53742,81 +53474,81 @@ u8 array_mp_8821c_fw_wowlan[] = {
 0x04, 0x10, 0x0C, 0x93, 0x02, 0x73, 0x03, 0x61,
 0x05, 0x58, 0x00, 0xF1, 0x13, 0x60, 0x0C, 0x93,
 0x30, 0xF0, 0x21, 0x6A, 0x0A, 0x94, 0xB0, 0xF3,
-0x78, 0xDA, 0x10, 0xF0, 0x24, 0x6A, 0x96, 0xF7,
-0xE0, 0x9A, 0x00, 0x6D, 0x18, 0x6E, 0x80, 0x18,
-0x6F, 0x14, 0x22, 0x67, 0x0C, 0x92, 0x06, 0x5A,
+0x78, 0xDA, 0x10, 0xF0, 0x24, 0x6A, 0x96, 0xF5,
+0xFC, 0x9A, 0x00, 0x6D, 0x18, 0x6E, 0x80, 0x18,
+0x3B, 0x14, 0x22, 0x67, 0x0C, 0x92, 0x06, 0x5A,
 0x08, 0x60, 0x48, 0x33, 0x10, 0xF0, 0x24, 0x6A,
-0xF6, 0xF2, 0x04, 0x4A, 0x69, 0xE2, 0x40, 0x9A,
+0x16, 0xF1, 0x00, 0x4A, 0x69, 0xE2, 0x40, 0x9A,
 0x00, 0xEA, 0x51, 0x67, 0xDF, 0x10, 0x01, 0x6D,
 0xA1, 0xF0, 0x0C, 0x6C, 0xAB, 0xED, 0x00, 0x18,
-0xD5, 0xE3, 0x10, 0xF0, 0x24, 0x6B, 0xB6, 0xF7,
-0x64, 0x9B, 0x30, 0xF0, 0x20, 0x68, 0xCE, 0xF4,
+0x5C, 0xE3, 0x10, 0xF0, 0x24, 0x6B, 0xD6, 0xF5,
+0x60, 0x9B, 0x30, 0xF0, 0x20, 0x68, 0xCE, 0xF4,
 0xF0, 0x98, 0x4C, 0xEB, 0x10, 0xF0, 0x24, 0x6A,
-0xB6, 0xF7, 0xC8, 0x9A, 0x01, 0x6D, 0xA1, 0xF0,
+0xD6, 0xF5, 0xC4, 0x9A, 0x01, 0x6D, 0xA1, 0xF0,
 0x0C, 0x6C, 0xAB, 0xED, 0x6D, 0xEE, 0x40, 0xEF,
 0x10, 0xF0, 0x24, 0x6B, 0xCE, 0xF4, 0x50, 0x98,
-0xC1, 0xF0, 0x04, 0x6C, 0xF6, 0xF4, 0xA4, 0x9B,
+0xC1, 0xF0, 0x04, 0x6C, 0x16, 0xF3, 0xA0, 0x9B,
 0xB8, 0x10, 0x01, 0x70, 0x09, 0x61, 0x30, 0xF0,
 0x20, 0x6A, 0xCE, 0xF4, 0x50, 0x9A, 0x01, 0xF2,
 0x00, 0x6C, 0x10, 0x6D, 0x01, 0x6E, 0x08, 0x10,
 0x30, 0xF0, 0x20, 0x6A, 0xCE, 0xF4, 0x50, 0x9A,
 0x01, 0xF2, 0x00, 0x6C, 0x10, 0x6D, 0x00, 0x6E,
 0x40, 0xEA, 0x01, 0x6D, 0xA1, 0xF0, 0x0C, 0x6C,
-0xAB, 0xED, 0x00, 0x18, 0xD5, 0xE3, 0x10, 0xF0,
-0x24, 0x6B, 0xB6, 0xF7, 0xEC, 0x9B, 0x0F, 0x6E,
+0xAB, 0xED, 0x00, 0x18, 0x5C, 0xE3, 0x10, 0xF0,
+0x24, 0x6B, 0xD6, 0xF5, 0xE8, 0x9B, 0x0F, 0x6E,
 0x0C, 0xEE, 0x4C, 0xEF, 0x10, 0xF0, 0x24, 0x6A,
-0xB6, 0xF7, 0x50, 0x9A, 0xC8, 0x36, 0x01, 0x6D,
+0xD6, 0xF5, 0x4C, 0x9A, 0xC8, 0x36, 0x01, 0x6D,
 0x4D, 0xEE, 0x30, 0xF0, 0x20, 0x6A, 0xCE, 0xF4,
 0x70, 0x9A, 0xED, 0xEE, 0xA1, 0xF0, 0x0C, 0x6C,
 0xAB, 0xED, 0x40, 0xEB, 0x30, 0xF0, 0x20, 0x6B,
 0xCE, 0xF4, 0x50, 0x9B, 0x10, 0xF0, 0x24, 0x6B,
-0xF6, 0xF4, 0xA4, 0x9B, 0xC1, 0xF0, 0x04, 0x6C,
+0x16, 0xF3, 0xA0, 0x9B, 0xC1, 0xF0, 0x04, 0x6C,
 0x01, 0x6E, 0x40, 0xEA, 0x01, 0xF4, 0x01, 0x6A,
 0x4B, 0xEA, 0x2C, 0xEA, 0x01, 0xF0, 0x00, 0x6B,
 0x2F, 0x10, 0x01, 0x6D, 0xA1, 0xF0, 0x0C, 0x6C,
-0xAB, 0xED, 0x00, 0x18, 0xD5, 0xE3, 0x10, 0xF0,
-0x24, 0x6B, 0xB6, 0xF7, 0xF4, 0x9B, 0x0F, 0x6E,
+0xAB, 0xED, 0x00, 0x18, 0x5C, 0xE3, 0x10, 0xF0,
+0x24, 0x6B, 0xD6, 0xF5, 0xF0, 0x9B, 0x0F, 0x6E,
 0x0C, 0xEE, 0x4C, 0xEF, 0x10, 0xF0, 0x24, 0x6A,
-0xB6, 0xF7, 0x58, 0x9A, 0xC8, 0x36, 0x01, 0x6D,
+0xD6, 0xF5, 0x54, 0x9A, 0xC8, 0x36, 0x01, 0x6D,
 0x4D, 0xEE, 0x30, 0xF0, 0x20, 0x6A, 0xCE, 0xF4,
 0x70, 0x9A, 0xED, 0xEE, 0xA1, 0xF0, 0x0C, 0x6C,
 0xAB, 0xED, 0x40, 0xEB, 0x30, 0xF0, 0x20, 0x6B,
 0xCE, 0xF4, 0x50, 0x9B, 0x10, 0xF0, 0x24, 0x6B,
-0xF6, 0xF4, 0xA4, 0x9B, 0xC1, 0xF0, 0x04, 0x6C,
+0x16, 0xF3, 0xA0, 0x9B, 0xC1, 0xF0, 0x04, 0x6C,
 0x01, 0x6E, 0x40, 0xEA, 0x01, 0xF4, 0x01, 0x6A,
 0x4B, 0xEA, 0x2C, 0xEA, 0x00, 0xF4, 0x00, 0x6B,
 0x6D, 0xEA, 0x48, 0x10, 0x01, 0x6D, 0xA1, 0xF0,
-0x0C, 0x6C, 0xAB, 0xED, 0x00, 0x18, 0xD5, 0xE3,
-0x10, 0xF0, 0x24, 0x6B, 0xB6, 0xF7, 0x7C, 0x9B,
+0x0C, 0x6C, 0xAB, 0xED, 0x00, 0x18, 0x5C, 0xE3,
+0x10, 0xF0, 0x24, 0x6B, 0xD6, 0xF5, 0x78, 0x9B,
 0x30, 0xF0, 0x20, 0x68, 0x01, 0x6D, 0x4C, 0xEB,
 0x10, 0xF0, 0x24, 0x6A, 0xCE, 0xF4, 0xF0, 0x98,
-0xA1, 0xF0, 0x0C, 0x6C, 0xAB, 0xED, 0xD6, 0xF7,
-0xC0, 0x9A, 0x17, 0x10, 0x01, 0x6D, 0xA1, 0xF0,
-0x0C, 0x6C, 0xAB, 0xED, 0x00, 0x18, 0xD5, 0xE3,
-0x10, 0xF0, 0x24, 0x6B, 0xB6, 0xF7, 0x7C, 0x9B,
+0xA1, 0xF0, 0x0C, 0x6C, 0xAB, 0xED, 0xD6, 0xF5,
+0xDC, 0x9A, 0x17, 0x10, 0x01, 0x6D, 0xA1, 0xF0,
+0x0C, 0x6C, 0xAB, 0xED, 0x00, 0x18, 0x5C, 0xE3,
+0x10, 0xF0, 0x24, 0x6B, 0xD6, 0xF5, 0x78, 0x9B,
 0x30, 0xF0, 0x20, 0x68, 0xCE, 0xF4, 0xF0, 0x98,
-0x4C, 0xEB, 0x10, 0xF0, 0x24, 0x6A, 0xD6, 0xF7,
-0xC4, 0x9A, 0x01, 0x6D, 0xA1, 0xF0, 0x0C, 0x6C,
+0x4C, 0xEB, 0x10, 0xF0, 0x24, 0x6A, 0xF6, 0xF5,
+0xC0, 0x9A, 0x01, 0x6D, 0xA1, 0xF0, 0x0C, 0x6C,
 0xAB, 0xED, 0x6D, 0xEE, 0x40, 0xEF, 0x10, 0xF0,
-0x24, 0x6B, 0xF6, 0xF4, 0xA4, 0x9B, 0xCE, 0xF4,
+0x24, 0x6B, 0x16, 0xF3, 0xA0, 0x9B, 0xCE, 0xF4,
 0x50, 0x98, 0xC1, 0xF0, 0x04, 0x6C, 0x00, 0x6E,
 0x40, 0xEA, 0x10, 0xF0, 0x24, 0x6B, 0xCE, 0xF4,
-0x50, 0x98, 0xD6, 0xF5, 0xB8, 0x9B, 0xC1, 0xF0,
+0x50, 0x98, 0xF6, 0xF3, 0xB4, 0x9B, 0xC1, 0xF0,
 0x08, 0x6C, 0x01, 0x6E, 0x40, 0xEA, 0x01, 0xF4,
 0x00, 0x6A, 0x2D, 0xEA, 0x04, 0xD2, 0x10, 0xF0,
-0x24, 0x6A, 0x0A, 0x94, 0x96, 0xF7, 0xE0, 0x9A,
+0x24, 0x6A, 0x0A, 0x94, 0x96, 0xF5, 0xFC, 0x9A,
 0x00, 0x6D, 0x18, 0x6E, 0x01, 0x49, 0x80, 0x18,
-0x7A, 0x14, 0x00, 0x6C, 0x01, 0x21, 0x01, 0x6C,
+0x46, 0x14, 0x00, 0x6C, 0x01, 0x21, 0x01, 0x6C,
 0xFF, 0x6B, 0x4C, 0xEB, 0x8C, 0xEB, 0x06, 0x23,
-0x0A, 0x94, 0x0C, 0x95, 0x80, 0x18, 0x33, 0x14,
+0x0A, 0x94, 0x0C, 0x95, 0x80, 0x18, 0xFF, 0x13,
 0x01, 0x6A, 0x01, 0x10, 0x00, 0x6A, 0x09, 0x97,
 0x08, 0x91, 0x07, 0x90, 0x05, 0x63, 0x00, 0xEF,
 0xFB, 0x63, 0x09, 0x62, 0x08, 0xD1, 0x07, 0xD0,
 0xFF, 0x68, 0x0C, 0xED, 0x24, 0x67, 0x0D, 0xD7,
-0x04, 0xD5, 0xCC, 0xE8, 0x80, 0x18, 0x5F, 0x15,
+0x04, 0xD5, 0xCC, 0xE8, 0x80, 0x18, 0x2B, 0x15,
 0x0F, 0x22, 0x04, 0x95, 0x91, 0x67, 0x80, 0x18,
-0xA1, 0x14, 0x0A, 0x22, 0x0D, 0x96, 0x91, 0x67,
-0xB0, 0x67, 0x80, 0x18, 0xB3, 0x15, 0x4B, 0xEB,
+0x6D, 0x14, 0x0A, 0x22, 0x0D, 0x96, 0x91, 0x67,
+0xB0, 0x67, 0x80, 0x18, 0x7F, 0x15, 0x4B, 0xEB,
 0x4D, 0xEB, 0xC0, 0xF7, 0x62, 0x32, 0x01, 0x10,
 0x00, 0x6A, 0x09, 0x97, 0x08, 0x91, 0x07, 0x90,
 0x05, 0x63, 0x00, 0xEF, 0x30, 0xF0, 0x20, 0x6B,
@@ -53825,7 +53557,7 @@ u8 array_mp_8821c_fw_wowlan[] = {
 0xC0, 0xF6, 0x6C, 0xC2, 0xFF, 0x6D, 0xFF, 0x4B,
 0xAC, 0xEB, 0x00, 0x6C, 0x07, 0x5B, 0xC0, 0xF6,
 0x8F, 0xC2, 0x08, 0x60, 0x10, 0xF0, 0x24, 0x6A,
-0x68, 0x33, 0xF6, 0xF2, 0x1C, 0x4A, 0x69, 0xE2,
+0x68, 0x33, 0x16, 0xF1, 0x18, 0x4A, 0x69, 0xE2,
 0x40, 0x9A, 0x00, 0xEA, 0x01, 0x6B, 0xC0, 0xF6,
 0x6D, 0xC2, 0xC0, 0xF6, 0x8E, 0xC2, 0x0A, 0x10,
 0x30, 0xF0, 0x20, 0x6A, 0xCF, 0xF4, 0x00, 0x4A,
@@ -53855,27 +53587,27 @@ u8 array_mp_8821c_fw_wowlan[] = {
 0x6E, 0xE9, 0x05, 0x2A, 0x3B, 0x10, 0x01, 0x6A,
 0x4E, 0xE9, 0x04, 0xD2, 0x02, 0x10, 0x00, 0x6A,
 0x04, 0xD2, 0x10, 0xF0, 0x24, 0x6B, 0x30, 0xF0,
-0x20, 0x68, 0xD6, 0xF7, 0xA8, 0x9B, 0xCE, 0xF4,
+0x20, 0x68, 0xF6, 0xF5, 0xA4, 0x9B, 0xCE, 0xF4,
 0x50, 0x98, 0x4C, 0x6C, 0x02, 0x6E, 0x40, 0xEA,
 0x04, 0x93, 0x14, 0x2B, 0xCE, 0xF4, 0x50, 0x98,
 0xA1, 0xF4, 0x14, 0x6C, 0xFF, 0x6D, 0x77, 0x6E,
 0x40, 0xEA, 0x01, 0x59, 0x38, 0x67, 0x10, 0xF0,
 0x24, 0x6B, 0x02, 0x6E, 0xCE, 0xF4, 0x50, 0x98,
-0xA1, 0xF4, 0x14, 0x6C, 0xF6, 0xF4, 0xA0, 0x9B,
+0xA1, 0xF4, 0x14, 0x6C, 0xF6, 0xF2, 0xBC, 0x9B,
 0x3B, 0xE6, 0x12, 0x10, 0xCE, 0xF4, 0x50, 0x98,
 0xA1, 0xF4, 0x14, 0x6C, 0xFF, 0x6D, 0x66, 0x6E,
 0x40, 0xEA, 0x10, 0xF0, 0x24, 0x6B, 0x01, 0x59,
-0xCE, 0xF4, 0x50, 0x98, 0xF6, 0xF4, 0xA0, 0x9B,
+0xCE, 0xF4, 0x50, 0x98, 0xF6, 0xF2, 0xBC, 0x9B,
 0xD8, 0x67, 0xA1, 0xF4, 0x14, 0x6C, 0x01, 0x4E,
 0x40, 0xEA, 0x06, 0x10, 0x30, 0xF0, 0x21, 0x6A,
 0x90, 0xF3, 0x51, 0xA2, 0xC0, 0x22, 0xC3, 0x17,
 0x09, 0x97, 0x08, 0x91, 0x07, 0x90, 0x05, 0x63,
 0x00, 0xEF, 0x00, 0x65, 0xFF, 0x6A, 0x4C, 0xEC,
 0x0F, 0x5C, 0x09, 0x60, 0x10, 0xF0, 0x24, 0x6A,
-0xD6, 0xF7, 0x6C, 0x9A, 0xFC, 0x6A, 0x80, 0xA3,
+0xF6, 0xF5, 0x68, 0x9A, 0xFC, 0x6A, 0x80, 0xA3,
 0x8C, 0xEA, 0x40, 0xC3, 0x20, 0xE8, 0x24, 0x5C,
-0x0A, 0x61, 0x10, 0xF0, 0x24, 0x6B, 0xD6, 0xF7,
-0x8C, 0x9B, 0x03, 0x6D, 0x60, 0xA4, 0x4C, 0xEB,
+0x0A, 0x61, 0x10, 0xF0, 0x24, 0x6B, 0xF6, 0xF5,
+0x88, 0x9B, 0x03, 0x6D, 0x60, 0xA4, 0x4C, 0xEB,
 0xAD, 0xEB, 0x4C, 0xEB, 0x60, 0xC4, 0x20, 0xE8,
 0x10, 0xF0, 0x21, 0x6A, 0x84, 0xF4, 0x08, 0x4A,
 0x30, 0xF0, 0x20, 0x6B, 0x8E, 0xF6, 0x48, 0xDB,
@@ -53908,10 +53640,10 @@ u8 array_mp_8821c_fw_wowlan[] = {
 0x10, 0xF0, 0x21, 0x6A, 0xC6, 0xF1, 0x0C, 0x4A,
 0x30, 0xF0, 0x20, 0x6B, 0xCE, 0xF6, 0x40, 0xDB,
 0x20, 0xE8, 0x00, 0x65, 0x00, 0x00, 0x00, 0x00,
-0x65, 0xBC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
+0xE5, 0x29, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
 };
 
-u32 array_length_mp_8821c_fw_wowlan = 103304;
+u32 array_length_mp_8821c_fw_wowlan = 102608;
 
 #endif /*CONFIG_WOWLAN*/
 
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/rtl8821c/hal8821c_fw.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/rtl8821c/hal8821c_fw.h
index acaac8fc0747..9c5de81325b7 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/rtl8821c/hal8821c_fw.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/rtl8821c/hal8821c_fw.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
 *
 * Copyright(c) 2012 - 2017 Realtek Corporation.
@@ -21,17 +20,17 @@
 
 #ifdef LOAD_FW_HEADER_FROM_DRIVER
 #if (defined(CONFIG_AP_WOWLAN) || (DM_ODM_SUPPORT_TYPE & (ODM_AP)))
-extern u8 array_mp_8821c_fw_ap[115416];
+extern u8 array_mp_8821c_fw_ap[115224];
 extern u32 array_length_mp_8821c_fw_ap;
 #endif
 
 #if (DM_ODM_SUPPORT_TYPE & (ODM_WIN)) || (DM_ODM_SUPPORT_TYPE & (ODM_CE))
-extern u8 array_mp_8821c_fw_nic[138984];
+extern u8 array_mp_8821c_fw_nic[137896];
 extern u32 array_length_mp_8821c_fw_nic;
-extern u8 array_mp_8821c_fw_spic[73216];
+extern u8 array_mp_8821c_fw_spic[73056];
 extern u32 array_length_mp_8821c_fw_spic;
 #ifdef CONFIG_WOWLAN
-extern u8 array_mp_8821c_fw_wowlan[103304];
+extern u8 array_mp_8821c_fw_wowlan[102608];
 extern u32 array_length_mp_8821c_fw_wowlan;
 #endif /*CONFIG_WOWLAN*/
 #endif
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/rtl8821c/rtl8821c.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/rtl8821c/rtl8821c.h
index dc4ba62fcf4f..7685758b8998 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/rtl8821c/rtl8821c.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/rtl8821c/rtl8821c.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2016 - 2017 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/rtl8821c/rtl8821c_cmd.c b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/rtl8821c/rtl8821c_cmd.c
index 02c8fcace8e5..2a04ecedb6e7 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/rtl8821c/rtl8821c_cmd.c
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/rtl8821c/rtl8821c_cmd.c
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2016 - 2017 Realtek Corporation.
@@ -97,7 +96,7 @@ void _rtl8821c_set_FwPwrMode_cmd(PADAPTER adapter, u8 psmode, u8 rfon_ctrl)
 	u8 h2c[RTW_HALMAC_H2C_MAX_SIZE] = {0};
 	u8 PowerState = 0, awake_intvl = 1, rlbm = 0;
 	u8 allQueueUAPSD = 0;
-	char *fw_psmode_str = "";
+	char *fw_psmode_str = "UNSPECIFIED";
 #ifdef CONFIG_P2P
 	struct wifidirect_info *wdinfo = &adapter->wdinfo;
 #endif /* CONFIG_P2P */
@@ -199,8 +198,6 @@ void _rtl8821c_set_FwPwrMode_cmd(PADAPTER adapter, u8 psmode, u8 rfon_ctrl)
 			fw_psmode_str = "LPS";
 		else if (mode == 2)
 			fw_psmode_str = "WMMPS";
-		else
-			fw_psmode_str = "UNSPECIFIED";
 
 		RTW_INFO(FUNC_ADPT_FMT": fw ps mode = %s, drv ps mode = %d, rlbm = %d ,"
 				    "smart_ps = %d, allQueueUAPSD = %d, PowerState = %d\n",
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/rtl8821c/rtl8821c_dm.c b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/rtl8821c/rtl8821c_dm.c
index f4cc7b17cffc..3511768fbd44 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/rtl8821c/rtl8821c_dm.c
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/rtl8821c/rtl8821c_dm.c
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2016 - 2017 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/rtl8821c/rtl8821c_halinit.c b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/rtl8821c/rtl8821c_halinit.c
index 82c9cd44acb7..ad5fc5ad5ce4 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/rtl8821c/rtl8821c_halinit.c
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/rtl8821c/rtl8821c_halinit.c
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2016 - 2017 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/rtl8821c/rtl8821c_mac.c b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/rtl8821c/rtl8821c_mac.c
index d476d3be144a..f21fe1077e3a 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/rtl8821c/rtl8821c_mac.c
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/rtl8821c/rtl8821c_mac.c
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2016 - 2017 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/rtl8821c/rtl8821c_ops.c b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/rtl8821c/rtl8821c_ops.c
index 9e0b9eae198d..e93d84356a36 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/rtl8821c/rtl8821c_ops.c
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/rtl8821c/rtl8821c_ops.c
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2016 - 2017 Realtek Corporation.
@@ -181,8 +180,7 @@ static void Hal_EfuseParseChnlPlan(PADAPTER adapter, u8 *map, u8 autoloadfail)
 		adapter,
 		map ? &map[EEPROM_COUNTRY_CODE_8821C] : NULL,
 		map ? map[EEPROM_CHANNEL_PLAN_8821C] : 0xFF,
-		adapter->registrypriv.alpha2,
-		adapter->registrypriv.channel_plan,
+		RTW_CHPLAN_6G_NULL,
 		autoloadfail
 	);
 }
@@ -614,9 +612,10 @@ static void xmit_status_check(PADAPTER p)
 				if (diff_time > 4000) {
 
 					RTW_INFO("%s tx hang %s\n", __FUNCTION__,
-						(rtw_odm_adaptivity_needed(p)) ? "ODM_BB_ADAPTIVITY" : "");
+						!adapter_to_rfctl(p)->adaptivity_en ? "" :
+							rtw_edcca_mode_str(rtw_get_edcca_mode(adapter_to_dvobj(p), hal->current_band_type)));
 
-					if (!rtw_odm_adaptivity_needed(p)) {
+					if (!adapter_to_rfctl(p)->adaptivity_en) {
 						psrtpriv->self_dect_tx_cnt++;
 						psrtpriv->self_dect_case = 1;
 						rtw_hal_sreset_reset(p);
@@ -1793,11 +1792,11 @@ u8 rtl8821c_sethwreg(PADAPTER adapter, u8 variable, u8 *val)
 
 	case HW_VAR_RESP_SIFS:
 		/* RESP_SIFS for CCK */
-		rtw_write8(adapter, REG_RESP_SIFS_CCK_8821C, val[0]);
-		rtw_write8(adapter, REG_RESP_SIFS_CCK_8821C + 1, val[1]);
+		rtw_write8(adapter, REG_RESP_SIFS_CCK_8821C, 0x08);
+		rtw_write8(adapter, REG_RESP_SIFS_CCK_8821C + 1, 0x08);
 		/* RESP_SIFS for OFDM */
-		rtw_write8(adapter, REG_RESP_SIFS_OFDM_8821C, val[2]);
-		rtw_write8(adapter, REG_RESP_SIFS_OFDM_8821C + 1, val[3]);
+		rtw_write8(adapter, REG_RESP_SIFS_OFDM_8821C, 0x0a);
+		rtw_write8(adapter, REG_RESP_SIFS_OFDM_8821C + 1, 0x0a);
 		break;
 
 	case HW_VAR_ACK_PREAMBLE:
@@ -1960,6 +1959,7 @@ u8 rtl8821c_sethwreg(PADAPTER adapter, u8 variable, u8 *val)
 					break;
 
 				RTW_INFO("[HW_VAR_FIFO_CLEARN_UP] val=%x times:%d\n", val32, trycnt);
+				rtw_yield_os();
 			} while (--trycnt);
 			if (trycnt == 0)
 				RTW_INFO("[HW_VAR_FIFO_CLEARN_UP] Stop RX DMA failed!\n");
@@ -2132,7 +2132,6 @@ u8 rtl8821c_sethwreg(PADAPTER adapter, u8 variable, u8 *val)
 
 	/*
 		case HW_VAR_AMPDU_MAX_TIME:
-		case HW_VAR_WIRELESS_MODE:
 		case HW_VAR_USB_MODE:
 		break;
 	*/
@@ -2490,7 +2489,6 @@ void rtl8821c_gethwreg(PADAPTER adapter, u8 variable, u8 *val)
 		break;
 	/*
 		case HW_VAR_AMPDU_MAX_TIME:
-		case HW_VAR_WIRELESS_MODE:
 		case HW_VAR_USB_MODE:
 		case HW_VAR_DO_IQK:
 		case HW_VAR_SOUNDING_ENTER:
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/rtl8821c/rtl8821c_phy.c b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/rtl8821c/rtl8821c_phy.c
index ade25065a06d..a97c697cbe14 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/rtl8821c/rtl8821c_phy.c
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/rtl8821c/rtl8821c_phy.c
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2016 - 2017 Realtek Corporation.
@@ -432,6 +431,9 @@ void rtl8821c_set_tx_power_index(PADAPTER adapter, u32 powerindex, enum rf_path
 		goto exit;
 	}
 
+	/* For phydm error handling we have to pass RF_PATH_A to the phydm API,
+	 * although some RFE types of 2.4G use RF_PATH_B.
+	 */
 	reg_path = RF_PATH_A;
 	rate = MRateToHwRate(rate);
 
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/rtl8821c/sdio/rtl8821cs.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/rtl8821c/sdio/rtl8821cs.h
index c28387f75157..b44da45d79cb 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/rtl8821c/sdio/rtl8821cs.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/rtl8821c/sdio/rtl8821cs.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2016 - 2017 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/rtl8821c/sdio/rtl8821cs_halinit.c b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/rtl8821c/sdio/rtl8821cs_halinit.c
index 156f0881ed21..eec7bed72673 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/rtl8821c/sdio/rtl8821cs_halinit.c
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/rtl8821c/sdio/rtl8821cs_halinit.c
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2016 - 2017 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/rtl8821c/sdio/rtl8821cs_halinit.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/rtl8821c/sdio/rtl8821cs_halinit.h
index 874675b4d34b..d82c522be64a 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/rtl8821c/sdio/rtl8821cs_halinit.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/rtl8821c/sdio/rtl8821cs_halinit.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2016 - 2017 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/rtl8821c/sdio/rtl8821cs_halmac.c b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/rtl8821c/sdio/rtl8821cs_halmac.c
index 8a44809e2ad3..5ce34e5f5034 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/rtl8821c/sdio/rtl8821cs_halmac.c
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/rtl8821c/sdio/rtl8821cs_halmac.c
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2016 - 2018 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/rtl8821c/sdio/rtl8821cs_halmac.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/rtl8821c/sdio/rtl8821cs_halmac.h
index 76dd73c7219f..e3e4a97526cc 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/rtl8821c/sdio/rtl8821cs_halmac.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/rtl8821c/sdio/rtl8821cs_halmac.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2016 - 2017 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/rtl8821c/sdio/rtl8821cs_io.c b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/rtl8821c/sdio/rtl8821cs_io.c
index 2a098e765ae2..7b1f7cfcfc61 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/rtl8821c/sdio/rtl8821cs_io.c
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/rtl8821c/sdio/rtl8821cs_io.c
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2016 - 2017 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/rtl8821c/sdio/rtl8821cs_io.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/rtl8821c/sdio/rtl8821cs_io.h
index 5ae8aa905c05..735f0e5fac4c 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/rtl8821c/sdio/rtl8821cs_io.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/rtl8821c/sdio/rtl8821cs_io.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2016 - 2017 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/rtl8821c/sdio/rtl8821cs_led.c b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/rtl8821c/sdio/rtl8821cs_led.c
index 71175fde1436..29c6297c0395 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/rtl8821c/sdio/rtl8821cs_led.c
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/rtl8821c/sdio/rtl8821cs_led.c
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2016 - 2017 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/rtl8821c/sdio/rtl8821cs_led.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/rtl8821c/sdio/rtl8821cs_led.h
index 2f135a5d8bdb..1c1e6945e8bd 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/rtl8821c/sdio/rtl8821cs_led.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/rtl8821c/sdio/rtl8821cs_led.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2016 - 2017 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/rtl8821c/sdio/rtl8821cs_ops.c b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/rtl8821c/sdio/rtl8821cs_ops.c
index b68afb067ff7..58a81daa5b38 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/rtl8821c/sdio/rtl8821cs_ops.c
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/rtl8821c/sdio/rtl8821cs_ops.c
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2016 - 2017 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/rtl8821c/sdio/rtl8821cs_recv.c b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/rtl8821c/sdio/rtl8821cs_recv.c
index 52d2972486b2..89e8025fea16 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/rtl8821c/sdio/rtl8821cs_recv.c
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/rtl8821c/sdio/rtl8821cs_recv.c
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2016 - 2017 Realtek Corporation.
@@ -461,7 +460,7 @@ static u8 recvbuf_handler(struct recv_buf *recvbuf)
 	return ret;
 }
 
-static void rtl8821c_recv_tasklet(void *priv)
+static void rtl8821c_recv_tasklet(unsigned long priv)
 {
 	PADAPTER adapter;
 	struct recv_priv *recvpriv;
@@ -656,7 +655,7 @@ s32 rtl8821cs_recv_hdl(_adapter *padapter)
 
 }
 
-static void rtl8821c_recv_tasklet(void *priv)
+static void rtl8821c_recv_tasklet(unsigned long priv)
 {
 	_adapter *adapter = (_adapter *)priv;
 	s32 ret;
@@ -674,7 +673,7 @@ static void rtl8821c_recv_tasklet(void *priv)
 
 #else
 
-static void rtl8821c_recv_tasklet(void *priv)
+static void rtl8821c_recv_tasklet(unsigned long priv)
 {
 	PADAPTER				padapter;
 	PHAL_DATA_TYPE			pHalData;
@@ -879,7 +878,7 @@ s32 rtl8821cs_init_recv_priv(PADAPTER adapter)
 	/* 2. init tasklet */
 #ifdef PLATFORM_LINUX
 	tasklet_init(&precvpriv->recv_tasklet,
-		     (void(*)(unsigned long))rtl8821c_recv_tasklet,
+		     rtl8821c_recv_tasklet,
 		     (unsigned long)adapter);
 #endif
 
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/rtl8821c/sdio/rtl8821cs_recv.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/rtl8821c/sdio/rtl8821cs_recv.h
index 20e945244c20..0fb89c398a71 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/rtl8821c/sdio/rtl8821cs_recv.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/rtl8821c/sdio/rtl8821cs_recv.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2016 - 2017 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/rtl8821c/sdio/rtl8821cs_xmit.c b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/rtl8821c/sdio/rtl8821cs_xmit.c
index b9e303ec557d..2547256c1457 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/rtl8821c/sdio/rtl8821cs_xmit.c
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/rtl8821c/sdio/rtl8821cs_xmit.c
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2016 - 2017 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/rtl8821c/sdio/rtl8821cs_xmit.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/rtl8821c/sdio/rtl8821cs_xmit.h
index af03f12368a9..60d6168b2977 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/rtl8821c/sdio/rtl8821cs_xmit.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/hal/rtl8821c/sdio/rtl8821cs_xmit.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2016 - 2017 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/halmac.mk b/drivers/net/wireless/rockchip_wlan/rtl8821cs/halmac.mk
index e330dcf269c9..16eebc1c1b90 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/halmac.mk
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/halmac.mk
@@ -1,4 +1,3 @@
-# SPDX-License-Identifier: GPL-2.0
 # All needed files would be added to _HAL_INTFS_FILES, and it would include
 # hal/hal_halmac.c and all related files in directory hal/halmac/.
 # Before include this makefile, be sure interface (CONFIG_*_HCI) and IC
@@ -37,10 +36,6 @@ series := 88xx_v1
 ic := 8814b
 endif
 
-ifeq ($(CONFIG_RTL8723F), y)
-series := 87xx
-ic := 8723f
-endif
 ifeq ($(series), 88xx_v1)
 d2all :=
 else
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/Hal8188EPhyCfg.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/Hal8188EPhyCfg.h
index f5483bb8f65d..38983f75134f 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/Hal8188EPhyCfg.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/Hal8188EPhyCfg.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/Hal8188EPhyReg.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/Hal8188EPhyReg.h
index 94972bf7200f..2eab8313aa5d 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/Hal8188EPhyReg.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/Hal8188EPhyReg.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/Hal8188EPwrSeq.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/Hal8188EPwrSeq.h
index 4eab945a7a17..46c61abacb92 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/Hal8188EPwrSeq.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/Hal8188EPwrSeq.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/Hal8188FPhyCfg.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/Hal8188FPhyCfg.h
index a3255314712e..1bc60dc527d6 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/Hal8188FPhyCfg.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/Hal8188FPhyCfg.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/Hal8188FPhyReg.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/Hal8188FPhyReg.h
index f87c348bc333..a831faade96d 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/Hal8188FPhyReg.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/Hal8188FPhyReg.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/Hal8188FPwrSeq.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/Hal8188FPwrSeq.h
index 56088ab60aac..5cad428fdd0b 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/Hal8188FPwrSeq.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/Hal8188FPwrSeq.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2016 - 2017 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/Hal8192EPhyCfg.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/Hal8192EPhyCfg.h
index c47d84134252..021d95335d2b 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/Hal8192EPhyCfg.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/Hal8192EPhyCfg.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2012 - 2017 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/Hal8192EPhyReg.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/Hal8192EPhyReg.h
index 4cd2c35540ae..30b771111164 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/Hal8192EPhyReg.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/Hal8192EPhyReg.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2012 - 2017 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/Hal8192EPwrSeq.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/Hal8192EPwrSeq.h
index c56e0ec00b12..1f2ba8722572 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/Hal8192EPwrSeq.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/Hal8192EPwrSeq.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2012 - 2017 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/Hal8192FPhyCfg.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/Hal8192FPhyCfg.h
index 87f70efa27e8..dd9fdcc09159 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/Hal8192FPhyCfg.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/Hal8192FPhyCfg.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/Hal8192FPhyReg.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/Hal8192FPhyReg.h
index 952358a4b0e3..b82f7f98696d 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/Hal8192FPhyReg.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/Hal8192FPhyReg.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/Hal8192FPwrSeq.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/Hal8192FPwrSeq.h
index 50408b558e5f..2b0bdc7e3e2a 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/Hal8192FPwrSeq.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/Hal8192FPwrSeq.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2016 - 2017 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/Hal8703BPhyCfg.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/Hal8703BPhyCfg.h
index 059eb61dd5a0..57a421a031fd 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/Hal8703BPhyCfg.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/Hal8703BPhyCfg.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/Hal8703BPhyReg.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/Hal8703BPhyReg.h
index 75e154a48a03..881a13cfac87 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/Hal8703BPhyReg.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/Hal8703BPhyReg.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/Hal8703BPwrSeq.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/Hal8703BPwrSeq.h
index a94e9e67c4a8..0dac13ee34a9 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/Hal8703BPwrSeq.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/Hal8703BPwrSeq.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2016 - 2017 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/Hal8710BPhyCfg.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/Hal8710BPhyCfg.h
index 56caf0c695db..3c5808e92ae8 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/Hal8710BPhyCfg.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/Hal8710BPhyCfg.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/Hal8710BPhyReg.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/Hal8710BPhyReg.h
index 310c97ed8660..337e03207fed 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/Hal8710BPhyReg.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/Hal8710BPhyReg.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/Hal8710BPwrSeq.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/Hal8710BPwrSeq.h
index 8a88d07eafc1..31ad29c794c5 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/Hal8710BPwrSeq.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/Hal8710BPwrSeq.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2016 - 2017 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/Hal8723BPhyCfg.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/Hal8723BPhyCfg.h
index 02fcbf48ad2d..0f59b8b243ec 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/Hal8723BPhyCfg.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/Hal8723BPhyCfg.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/Hal8723BPhyReg.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/Hal8723BPhyReg.h
index a816352009e2..ce485c2ab4be 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/Hal8723BPhyReg.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/Hal8723BPhyReg.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/Hal8723BPwrSeq.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/Hal8723BPwrSeq.h
index 26a6cf8744e9..1aec885cbb1d 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/Hal8723BPwrSeq.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/Hal8723BPwrSeq.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2016 - 2017 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/Hal8723DPhyCfg.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/Hal8723DPhyCfg.h
index f28b9b799fe3..b8924355138b 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/Hal8723DPhyCfg.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/Hal8723DPhyCfg.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/Hal8723DPhyReg.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/Hal8723DPhyReg.h
index f8b190dc790b..036144a388bb 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/Hal8723DPhyReg.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/Hal8723DPhyReg.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/Hal8723DPwrSeq.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/Hal8723DPwrSeq.h
index 021c414c5a94..60cb53b27bd1 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/Hal8723DPwrSeq.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/Hal8723DPwrSeq.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2016 - 2017 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/Hal8723PwrSeq.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/Hal8723PwrSeq.h
index 22d600607d9b..22de83375e66 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/Hal8723PwrSeq.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/Hal8723PwrSeq.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2016 - 2017 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/Hal8812PhyCfg.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/Hal8812PhyCfg.h
index 6c9c2b2e854b..69c70d30e8ec 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/Hal8812PhyCfg.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/Hal8812PhyCfg.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/Hal8812PhyReg.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/Hal8812PhyReg.h
index e53bde42c283..521ebb202346 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/Hal8812PhyReg.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/Hal8812PhyReg.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/Hal8812PwrSeq.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/Hal8812PwrSeq.h
index 28758abc8690..498faf8114ae 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/Hal8812PwrSeq.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/Hal8812PwrSeq.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/Hal8814PhyCfg.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/Hal8814PhyCfg.h
index 0d2adbce01f5..0fdc340774c1 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/Hal8814PhyCfg.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/Hal8814PhyCfg.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/Hal8814PhyReg.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/Hal8814PhyReg.h
index 97b6d8998c20..21851a8988b7 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/Hal8814PhyReg.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/Hal8814PhyReg.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/Hal8814PwrSeq.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/Hal8814PwrSeq.h
index baedbab1b53f..0138850c91e1 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/Hal8814PwrSeq.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/Hal8814PwrSeq.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/Hal8821APwrSeq.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/Hal8821APwrSeq.h
index ffbae537c2dd..568b8e5fc1e9 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/Hal8821APwrSeq.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/Hal8821APwrSeq.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2016 - 2017 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/HalPwrSeqCmd.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/HalPwrSeqCmd.h
index 1f9a175e305e..f67ed22d1fc9 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/HalPwrSeqCmd.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/HalPwrSeqCmd.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/HalVerDef.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/HalVerDef.h
index 64d556785a45..d4e40670aba7 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/HalVerDef.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/HalVerDef.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/autoconf.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/autoconf.h
index 3a877a728cb3..e82be6a6973e 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/autoconf.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/autoconf.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2016 - 2017 Realtek Corporation.
@@ -187,6 +186,7 @@
 /*#define CONFIG_FILE_FWIMG*/
 #define CONFIG_LONG_DELAY_ISSUE
 /*#define CONFIG_PATCH_JOIN_WRONG_CHANNEL*/
+#define CONFIG_RX_PACKET_APPEND_FCS
 
 
 /*
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/basic_types.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/basic_types.h
index 2d74f018552e..45e513156e2f 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/basic_types.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/basic_types.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/byteorder/big_endian.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/byteorder/big_endian.h
index 76542f0c4867..6b1dc449e578 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/byteorder/big_endian.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/byteorder/big_endian.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/byteorder/generic.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/byteorder/generic.h
index 32d424a1d7a8..f85114bf796c 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/byteorder/generic.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/byteorder/generic.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/byteorder/little_endian.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/byteorder/little_endian.h
index 1f9287f205ad..c4b64512f296 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/byteorder/little_endian.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/byteorder/little_endian.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/byteorder/swab.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/byteorder/swab.h
index 8c3eb866c0be..a8dd46bd3a60 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/byteorder/swab.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/byteorder/swab.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/byteorder/swabb.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/byteorder/swabb.h
index 2e6b196051f9..634519a0b826 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/byteorder/swabb.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/byteorder/swabb.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/circ_buf.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/circ_buf.h
index cccb0602e27d..7a5b8ef1a202 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/circ_buf.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/circ_buf.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/cmd_osdep.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/cmd_osdep.h
index c98ba148679e..e4ba2b6d3b62 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/cmd_osdep.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/cmd_osdep.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/cmn_info/rtw_sta_info.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/cmn_info/rtw_sta_info.h
index 273046c25193..d4de0e50be23 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/cmn_info/rtw_sta_info.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/cmn_info/rtw_sta_info.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2011 Realtek Corporation. All rights reserved.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/custom_gpio.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/custom_gpio.h
index 3921d8597b34..3c67735d689a 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/custom_gpio.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/custom_gpio.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2016 - 2017 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/drv_conf.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/drv_conf.h
index 91393eb350c8..f89efa4be67b 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/drv_conf.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/drv_conf.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2019 Realtek Corporation.
@@ -73,6 +72,11 @@
 
 #endif
 
+#ifdef CONFIG_LAYER2_ROAMING
+/*#define CONFIG_RTW_ROAM_QUICKSCAN	*/	/* active_roaming is required. i.e CONFIG_ROAMING_FLAG[bit2] MUST be enabled */
+/*#define CONFIG_RTW_ROAM_QUICKSCAN_TH           60*/
+#endif
+
 /* Default enable single wiphy if driver ver >= 5.9 */
 #define RTW_SINGLE_WIPHY
 
@@ -110,17 +114,37 @@
 		#endif
 	#endif
 
+	#if (CONFIG_RTW_ANDROID >= 11)
+		#if (LINUX_VERSION_CODE >= KERNEL_VERSION(5,4,0))
+			#ifndef CONFIG_RTW_ANDROID_GKI
+			#define CONFIG_RTW_ANDROID_GKI
+			#endif
+		#endif
+
+		#ifdef CONFIG_RTW_ANDROID_GKI
+			#ifdef CONFIG_ADAPTOR_INFO_CACHING_FILE
+			#undef CONFIG_ADAPTOR_INFO_CACHING_FILE
+			#endif
+		#endif
+	#endif
+
 	#ifdef CONFIG_RTW_WIFI_HAL
 	#ifndef CONFIG_RTW_WIFI_HAL_DEBUG
 	//#define CONFIG_RTW_WIFI_HAL_DEBUG
 	#endif
+	#if (CONFIG_RTW_ANDROID < 11)
 	#ifndef CONFIG_RTW_CFGVENDOR_LLSTATS
 	#define CONFIG_RTW_CFGVENDOR_LLSTATS
 	#endif
+	#endif
 	#if (CONFIG_RTW_ANDROID < 11)
 	#ifndef CONFIG_RTW_CFGVENDOR_RANDOM_MAC_OUI
 	#define CONFIG_RTW_CFGVENDOR_RANDOM_MAC_OUI
 	#endif
+	#else
+	#ifndef CONFIG_RTW_SCAN_RAND
+	#define CONFIG_RTW_SCAN_RAND
+	#endif
 	#endif
 	#ifndef CONFIG_RTW_CFGVENDOR_RSSIMONITOR
 	#define CONFIG_RTW_CFGVENDOR_RSSIMONITOR
@@ -138,9 +162,6 @@
 	#ifndef CONFIG_KERNEL_PATCH_EXTERNAL_AUTH
 	#define CONFIG_KERNEL_PATCH_EXTERNAL_AUTH
 	#endif
-	#ifndef CONFIG_RTW_ABORT_SCAN
-	#define CONFIG_RTW_ABORT_SCAN
-	#endif
 	#endif
 	#endif // CONFIG_RTW_WIFI_HAL
 
@@ -153,6 +174,13 @@
 
 	/* Android expect dbm as the rx signal strength unit */
 	#define CONFIG_SIGNAL_DISPLAY_DBM
+
+#else // for Linux
+
+	#ifndef CONFIG_RTW_SCAN_RAND
+	#define CONFIG_RTW_SCAN_RAND
+	#endif
+
 #endif // CONFIG_RTW_ANDROID
 
 /*
@@ -226,6 +254,10 @@
 	#ifndef CONFIG_RTW_AP_FWD_B2U_FLAGS
 	#define CONFIG_RTW_AP_FWD_B2U_FLAGS 0x8 /* see RTW_AP_B2U_XXX */
 	#endif
+
+	#ifndef CONFIG_ACTIVE_TPC_REPORT
+	#define CONFIG_ACTIVE_TPC_REPORT
+	#endif
 #endif
 
 #ifdef CONFIG_RTW_MULTI_AP
@@ -299,7 +331,6 @@
 
 #define RTW_SCAN_SPARSE_MIRACAST 1
 #define RTW_SCAN_SPARSE_BG 0
-#define RTW_SCAN_SPARSE_ROAMING_ACTIVE 1
 
 #ifndef CONFIG_TX_AC_LIFETIME
 #define CONFIG_TX_AC_LIFETIME 1
@@ -341,6 +372,18 @@
 	#define CONFIG_RTW_EXCL_CHS {0}
 #endif
 
+#ifndef CONFIG_RTW_EXCL_CHS_6G
+	#define CONFIG_RTW_EXCL_CHS_6G {0}
+#endif
+
+#ifndef CONFIG_RTW_COUNTRY_IE_SLAVE_EN_ROLE
+#define CONFIG_RTW_COUNTRY_IE_SLAVE_EN_ROLE 0x03 /* BIT0 for pure STA mode, BIT1 for P2P group client */
+#endif
+
+#ifndef CONFIG_RTW_COUNTRY_IE_SLAVE_EN_IFBMP
+#define CONFIG_RTW_COUNTRY_IE_SLAVE_EN_IFBMP 0xFF /* all iface */
+#endif
+
 #ifndef CONFIG_IEEE80211_BAND_5GHZ
 	#if defined(CONFIG_RTL8821A) || defined(CONFIG_RTL8821C) \
 		|| defined(CONFIG_RTL8812A) || defined(CONFIG_RTL8822B) || defined(CONFIG_RTL8822C) \
@@ -351,6 +394,10 @@
 	#endif
 #endif
 
+#ifndef CONFIG_IEEE80211_BAND_6GHZ
+#define CONFIG_IEEE80211_BAND_6GHZ 0
+#endif
+
 #ifndef CONFIG_DFS
 #define CONFIG_DFS 1
 #endif
@@ -381,7 +428,11 @@
 #endif
 
 #ifndef CONFIG_RTW_CHPLAN
-#define CONFIG_RTW_CHPLAN 0xFF /* RTW_CHPLAN_UNSPECIFIED */
+#define CONFIG_RTW_CHPLAN 0xFFFF /* RTW_CHPLAN_IOCTL_UNSPECIFIED */
+#endif
+
+#ifndef CONFIG_RTW_CHPLAN_6G
+#define CONFIG_RTW_CHPLAN_6G 0xFFFF /* RTW_CHPLAN_IOCTL_UNSPECIFIED */
 #endif
 
 /* compatible with old fashion configuration */
@@ -417,6 +468,10 @@
 	#define CONFIG_TXPWR_LIMIT 1
 #endif
 
+#ifndef CONFIG_RTW_ACTIVE_TPC_REPORT
+#define CONFIG_RTW_ACTIVE_TPC_REPORT 1 /* 0:incapable, 1:capable, 2:auto enable */
+#endif
+
 #ifndef CONFIG_RTW_REGD_SRC
 #define CONFIG_RTW_REGD_SRC 1 /* 0:RTK_PRIV, 1:OS */
 #endif
@@ -665,8 +720,15 @@ defined(CONFIG_RTL8723F) /*|| defined(CONFIG_RTL8814A)*/
 /*#define CONFIG_DOSCAN_IN_BUSYTRAFFIC	*/
 /*#define CONFIG_PHDYM_FW_FIXRATE		*/	/*	Another way to fix tx rate	*/
 
-/*Don't release SDIO irq in suspend/resume procedure*/
-#define CONFIG_RTW_SDIO_KEEP_IRQ	0
+/*
+* CONFIG_RTW_SDIO_RELEASE_IRQ
+* == 0: static allocated
+* >= 1: release when suspend
+* >= 2: release when IPS
+*/
+#ifndef CONFIG_RTW_SDIO_RELEASE_IRQ
+#define CONFIG_RTW_SDIO_RELEASE_IRQ	2
+#endif
 
 /*
  * Add by Lucas@2016/02/15
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/drv_types.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/drv_types.h
index 870e6100b5e6..d8a035059fe3 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/drv_types.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/drv_types.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2019 Realtek Corporation.
@@ -337,12 +336,20 @@ struct registry_priv {
 	u8 tx_nss;
 	u8 rx_nss;
 
+#ifdef CONFIG_ACTIVE_TPC_REPORT
+	u8 active_tpc_report;
+#endif
+
 #ifdef CONFIG_REGD_SRC_FROM_OS
 	enum regd_src_t regd_src;
 #endif
 	char alpha2[2];
 	u8	channel_plan;
-	u8	excl_chs[MAX_CHANNEL_NUM];
+	u8	excl_chs[MAX_CHANNEL_NUM_2G_5G];
+#if CONFIG_IEEE80211_BAND_6GHZ
+	u8 channel_plan_6g;
+	u8 excl_chs_6g[MAX_CHANNEL_NUM_6G];
+#endif
 	u8	full_ch_in_p2p_handshake; /* 0: reply only softap channel, 1: reply full channel list*/
 
 #ifdef CONFIG_BT_COEXIST
@@ -380,7 +387,8 @@ struct registry_priv {
 #endif
 
 #ifdef CONFIG_80211D
-	u8 enable80211d;
+	u8 country_ie_slave_en_role;
+	u8 country_ie_slave_en_ifbmp;
 #endif
 
 	u8 ifname[16];
@@ -455,7 +463,7 @@ struct registry_priv {
 #ifdef CONFIG_DFS_MASTER
 	u8 dfs_region_domain;
 #endif
-
+	u8 amsdu_mode;
 #ifdef CONFIG_MCC_MODE
 	u8 en_mcc;
 	u32 rtw_mcc_single_tx_cri;
@@ -560,6 +568,9 @@ struct registry_priv {
 	u8 unassoc_sta_mode_of_stype[UNASOC_STA_SRC_NUM];
 	u16 max_unassoc_sta_cnt;
 #endif
+#if defined(CONFIG_CONCURRENT_MODE) && defined(CONFIG_AP_MODE)
+	u8 ap_csa_cnt;
+#endif
 };
 
 /* For registry parameters */
@@ -603,6 +614,14 @@ struct registry_priv {
 #define REGSTY_IS_11AC_24G_ENABLE(regsty) 0
 #endif
 
+#ifdef CONFIG_ACTIVE_TPC_REPORT
+#define REGSTY_IS_ACTIVE_TPC_REPORT_CAPABLE(regsty) ((regsty)->active_tpc_report != 0)
+#define REGSTY_IS_ACTIVE_TPC_REPORT_AUTO(regsty) ((regsty)->active_tpc_report == 2)
+#else
+#define REGSTY_IS_ACTIVE_TPC_REPORT_CAPABLE(regsty) 0
+#define REGSTY_IS_ACTIVE_TPC_REPORT_AUTO(regsty) 0
+#endif
+
 #ifdef CONFIG_REGD_SRC_FROM_OS
 #define REGSTY_REGD_SRC_FROM_OS(regsty) ((regsty)->regd_src == REGD_SRC_OS)
 #else
@@ -1009,10 +1028,57 @@ struct macid_ctl_t {
 
 #define TPC_MANUAL_CONSTRAINT_MAX 600 /* mB */
 
+#define COUNTRY_IE_SLAVE_EN_ROLE_STA	BIT0 /* pure STA mode */
+#define COUNTRY_IE_SLAVE_EN_ROLE_GC		BIT1 /* P2P group client */
+
+#define MAX_CSA_CNT 10
+
 struct rf_ctl_t {
+	bool disable_sw_chplan;
 	enum regd_src_t regd_src;
-	const struct country_chplan *country_ent;
+	enum rtw_regd_inr regd_inr;
+	char alpha2[2];
 	u8 ChannelPlan;
+#if CONFIG_IEEE80211_BAND_6GHZ
+	u8 chplan_6g;
+#endif
+	u8 edcca_mode_2g_override;
+#if CONFIG_IEEE80211_BAND_5GHZ
+	u8 edcca_mode_5g_override;
+#endif
+#if CONFIG_IEEE80211_BAND_6GHZ
+	u8 edcca_mode_6g_override;
+#endif
+#if CONFIG_TXPWR_LIMIT
+	u8 txpwr_lmt_override;
+#endif
+
+#if defined(CONFIG_80211AX_HE) || defined(CONFIG_80211AC_VHT)
+	u8 proto_en;
+#endif
+
+	/* initial channel plan selectors */
+	char init_alpha2[2];
+	u8 init_ChannelPlan;
+#if CONFIG_IEEE80211_BAND_6GHZ
+	u8 init_chplan_6g;
+#endif
+
+	/* channel plan selectors by user */
+	char user_alpha2[2]; /* "\x00\x00" is not set */
+	u8 user_ChannelPlan;
+#if CONFIG_IEEE80211_BAND_6GHZ
+	u8 user_chplan_6g;
+#endif
+
+#ifdef CONFIG_80211D
+	u8 country_ie_slave_en_role;
+	u8 country_ie_slave_en_ifbmp;
+
+	struct country_ie_slave_record cisr[CONFIG_IFACE_NUMBER];
+	u8 effected_cisr_id;
+#endif
+
 	u8 max_chan_nums;
 	RT_CHANNEL_INFO channel_set[MAX_CHANNEL_NUM];
 	struct op_class_pref_t **spt_op_class_ch;
@@ -1048,8 +1114,8 @@ struct rf_ctl_t {
 	_list reg_exc_list;
 	u8 regd_exc_num;
 	_list txpwr_lmt_list;
-	u8 txpwr_regd_num;
-	const char *regd_name;
+	u8 txpwr_lmt_num;
+	const char *txpwr_lmt_name[BAND_MAX];
 
 	u8 txpwr_lmt_2g_cck_ofdm_state;
 	#if CONFIG_IEEE80211_BAND_5GHZ
@@ -1062,6 +1128,24 @@ struct rf_ctl_t {
 
 	bool ch_sel_within_same_band;
 
+	u8 adaptivity_en; /* runtime status, hook to phydm */
+	u8 edcca_mode_2g;
+#if CONFIG_IEEE80211_BAND_5GHZ
+	u8 edcca_mode_5g;
+#endif
+#if CONFIG_IEEE80211_BAND_6GHZ
+	u8 edcca_mode_6g;
+#endif
+
+	u8 ap_csa_ch;
+	u8 ap_csa_switch_cnt;
+	u8 ap_csa_ch_offset;
+	u8 ap_csa_ch_width;
+	u8 ap_csa_en;
+#if defined(CONFIG_CONCURRENT_MODE) && defined(CONFIG_AP_MODE)
+	u8 ap_csa_cnt_input; /* Input from proc, default value is DEFAULT_CSA_CNT */
+#endif
+
 #if CONFIG_DFS
 	u8 csa_ch;
 	u8 csa_switch_cnt;
@@ -1103,6 +1187,22 @@ struct wow_ctl_t {
 };
 
 #define WOW_CAP_TKIP_OL BIT0
+#define WOW_CAP_HALMAC_ACCESS_PATTERN_IN_TXFIFO BIT1
+
+#define RFCTL_REG_WORLDWIDE(rfctl) (IS_ALPHA2_WORLDWIDE(rfctl->alpha2))
+#define RFCTL_REG_ALPHA2_UNSPEC(rfctl) (IS_ALPHA2_UNSPEC(rfctl->alpha2)) /* ex: only domain code is specified */
+
+#ifdef CONFIG_80211AC_VHT
+#define RFCTL_REG_EN_11AC(rfctl) (((rfctl)->proto_en & CHPLAN_PROTO_EN_AC) ? 1 : 0)
+#else
+#define RFCTL_REG_EN_11AC(rfctl) 0
+#endif
+
+#ifdef CONFIG_80211AX_HE
+#define RFCTL_REG_EN_11AX(rfctl) (((rfctl)->proto_en & CHPLAN_PROTO_EN_AX) ? 1 : 0)
+#else
+#define RFCTL_REG_EN_11AX(rfctl) 0
+#endif
 
 #define RTW_CAC_STOPPED 0
 #ifdef CONFIG_DFS_MASTER
@@ -1462,6 +1562,15 @@ struct dvobj_priv {
 	u32 rcr_bf_suspend;
 	u32 cr_ext_bf_suspend;
 #endif /* CONFIG_WOWLAN */
+#if defined (CONFIG_CONCURRENT_MODE)  && defined (CONFIG_TSF_SYNC)
+	u16 sync_tsfr_counter;
+#endif
+
+	/* WPAS maintain from w1.fi */
+#define RTW_WPAS_W1FI		0x00
+	/* WPAS maintain from android */
+#define RTW_WPAS_ANDROID	0x01
+	u8 wpas_type;
 };
 
 #define DEV_STA_NUM(_dvobj)			MSTATE_STA_NUM(&((_dvobj)->iface_state))
@@ -1492,9 +1601,13 @@ struct dvobj_priv {
 #define dvobj_to_macidctl(dvobj) (&(dvobj->macid_ctl))
 #define dvobj_to_sec_camctl(dvobj) (&(dvobj->cam_ctl))
 #define dvobj_to_regsty(dvobj) (&(dvobj->padapters[IFACE_ID0]->registrypriv))
-#if defined(CONFIG_IOCTL_CFG80211) && defined(RTW_SINGLE_WIPHY)
+#ifdef CONFIG_IOCTL_CFG80211
+#ifdef RTW_SINGLE_WIPHY
 #define dvobj_to_wiphy(dvobj) ((dvobj)->wiphy)
+#else
+#define dvobj_to_wiphy(dvobj) (adapter_to_wiphy(dvobj_get_primary_adapter(dvobj)))
 #endif
+#endif /* CONFIG_IOCTL_CFG80211 */
 #define dvobj_to_rfctl(dvobj) (&(dvobj->rf_ctl))
 #define rfctl_to_dvobj(rfctl) container_of((rfctl), struct dvobj_priv, rf_ctl)
 
@@ -1918,7 +2031,7 @@ struct _ADAPTER {
 #endif
 
 #define adapter_mac_addr(adapter) (adapter->mac_addr)
-#ifdef CONFIG_RTW_CFGVENDOR_RANDOM_MAC_OUI
+#if defined(CONFIG_RTW_CFGVENDOR_RANDOM_MAC_OUI) || defined(CONFIG_RTW_SCAN_RAND)
 #define adapter_pno_mac_addr(adapter) \
 	((adapter_wdev_data(adapter))->pno_mac_addr)
 #endif
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/drv_types_ce.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/drv_types_ce.h
index a8e8e2a07546..c00dea8e6b35 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/drv_types_ce.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/drv_types_ce.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/drv_types_gspi.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/drv_types_gspi.h
index 142ff0d5884e..c22c4972232d 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/drv_types_gspi.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/drv_types_gspi.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/drv_types_linux.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/drv_types_linux.h
index 66e88cfe4b31..91ca68b39c26 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/drv_types_linux.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/drv_types_linux.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/drv_types_pci.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/drv_types_pci.h
index 3c1432e2fd5e..2c550ecc0bed 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/drv_types_pci.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/drv_types_pci.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/drv_types_sdio.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/drv_types_sdio.h
index 5098c80f4e7e..29006d981aa3 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/drv_types_sdio.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/drv_types_sdio.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2019 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/drv_types_xp.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/drv_types_xp.h
index 7bbd2403ca71..81c45047ae11 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/drv_types_xp.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/drv_types_xp.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/ethernet.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/ethernet.h
index 88152be8a7d3..ef518cc4171d 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/ethernet.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/ethernet.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/gspi_hal.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/gspi_hal.h
index 5aefa3ed42b4..6da0f071d499 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/gspi_hal.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/gspi_hal.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/gspi_ops.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/gspi_ops.h
index 676bf658e2cb..bcfaad2e0bba 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/gspi_ops.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/gspi_ops.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/gspi_ops_linux.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/gspi_ops_linux.h
index a70f86c75e28..0ba263de8fd7 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/gspi_ops_linux.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/gspi_ops_linux.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/gspi_osintf.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/gspi_osintf.h
index b2bcf57dbc74..a94e656793af 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/gspi_osintf.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/gspi_osintf.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/h2clbk.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/h2clbk.h
index fc21f084a26f..4df14b98d1e0 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/h2clbk.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/h2clbk.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/hal_btcoex.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/hal_btcoex.h
index 0989629dd2aa..a2e125ec8146 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/hal_btcoex.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/hal_btcoex.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2013 - 2017 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/hal_btcoex_wifionly.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/hal_btcoex_wifionly.h
index 38e54ff61464..407698baa3dc 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/hal_btcoex_wifionly.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/hal_btcoex_wifionly.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2016 - 2017 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/hal_com.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/hal_com.h
index bec4a66a2550..a46f95ff60d7 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/hal_com.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/hal_com.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017 Realtek Corporation.
@@ -191,6 +190,12 @@ typedef enum _WAKEUP_REASON{
 	WOW_KEEPALIVE_WAKE 			= 0x61,
 	#endif/*CONFIG_WOW_KEEP_ALIVE_PATTERN*/
 	AP_OFFLOAD_WAKEUP				= 0x66,
+	NO_WAKE_RX_PAIRWISEKEY			= 0xB0,
+	NO_WAKE_RX_GTK				= 0xB1,
+	NO_WAKE_RX_DISASSOC			= 0xB2,
+	NO_WAKE_RX_DEAUTH			= 0xB3,
+	NO_WAKE_RX_EAPREQ_IDENTIFY		= 0xB4,
+	NO_WAKE_FW_DECISION_DISCONNECT		= 0xB5,
 	CLK_32K_UNLOCK					= 0xFD,
 	CLK_32K_LOCK					= 0xFE
 }WAKEUP_REASON;
@@ -281,7 +286,8 @@ void dump_chip_info(HAL_VERSION	ChipVersion);
 
 #define BAND_CAP_2G			BIT0
 #define BAND_CAP_5G			BIT1
-#define BAND_CAP_BIT_NUM	2
+#define BAND_CAP_6G			BIT2
+#define BAND_CAP_BIT_NUM	3
 
 #define BW_CAP_5M		BIT0
 #define BW_CAP_10M		BIT1
@@ -324,10 +330,9 @@ bool hal_chk_wl_func(_adapter *adapter, u8 func);
 
 void hal_com_config_channel_plan(
 		PADAPTER padapter,
-		char *hw_alpha2,
+		const char *hw_alpha2,
 		u8 hw_chplan,
-		char *sw_alpha2,
-		u8 sw_chplan,
+		u8 hw_chplan_6g,
 		BOOLEAN AutoLoadFail
 );
 
@@ -365,6 +370,7 @@ void rtw_dump_fw_info(void *sel, _adapter *adapter);
 void rtw_restore_hw_port_cfg(_adapter *adapter);
 void rtw_mi_set_mac_addr(_adapter *adapter);/*set mac addr when hal_init for all iface*/
 void rtw_hal_dump_macaddr(void *sel, _adapter *adapter);
+void rtw_hal_set_hw_macaddr(PADAPTER adapter, u8 *mac_addr);
 
 void rtw_init_hal_com_default_value(PADAPTER Adapter);
 
@@ -428,11 +434,15 @@ void rtw_hal_update_tx_aclt(_adapter *adapter);
 #endif
 
 void hw_var_port_switch(_adapter *adapter);
+#ifdef CONFIG_FW_MULTI_PORT_SUPPORT
+u8 rtw_hal_set_ap_bcn_imr_cmd(struct _ADAPTER *adapter, u8 enable);
+#endif
 void rtw_var_set_basic_rate(PADAPTER padapter, u8 *val);
 u8 SetHwReg(PADAPTER padapter, u8 variable, u8 *val);
 void GetHwReg(PADAPTER padapter, u8 variable, u8 *val);
 void rtw_hal_check_rxfifo_full(_adapter *adapter);
 void rtw_hal_reqtxrpt(_adapter *padapter, u8 macid);
+int rtw_get_sta_tx_stat(_adapter *adapter, u8 mac_id, u8 *macaddr);
 
 u8 SetHalDefVar(_adapter *adapter, HAL_DEF_VARIABLE variable, void *value);
 u8 GetHalDefVar(_adapter *adapter, HAL_DEF_VARIABLE variable, void *value);
@@ -624,6 +634,12 @@ void rtw_dump_wow_pattern(void *sel, struct rtl_wow_pattern *pwow_pattern, u8 id
 void rtw_wow_pattern_read_cam_ent(_adapter *adapter, u8 id, struct  rtl_wow_pattern *context);
 #endif
 
+#ifdef CONFIG_PNO_SUPPORT
+struct pno_ssid;
+void rtw_hal_construct_ProbeReq(_adapter *padapter, u8 *pframe,
+                                u32 *pLength, struct pno_ssid *ssid);
+#endif
+
 struct rtw_ndp_info {
 	u8 enable:1;
 	u8 check_remote_ip:1; /* Need to Check Sender IP or not */
@@ -734,4 +750,9 @@ static inline void rtw_enter_protsel_macsleep(_adapter *padapter, u8 port_sel) {
 static inline bool rtw_assert_protsel_macsleep(_adapter *padapter, u32 addr, u8 len) {return true; }
 static inline void rtw_leave_protsel_macsleep(_adapter *padapter) {}
 #endif
+
+#ifndef RTW_HALMAC
+void rtw_hal_init_sifs_backup(_adapter *adapter);
+#endif
+
 #endif /* __HAL_COMMON_H__ */
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/hal_com_h2c.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/hal_com_h2c.h
index 90581fdfa761..3ab2a4b05368 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/hal_com_h2c.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/hal_com_h2c.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017 Realtek Corporation.
@@ -113,6 +112,9 @@ enum h2c_cmd {
 	H2C_GPIO_CUSTOM = 0x89,
 	H2C_P2P_OFFLOAD_RSVD_PAGE = 0x8A,
 	H2C_P2P_OFFLOAD = 0x8B,
+#ifdef CONFIG_PNO_SUPPORT
+	H2C_NLO_INFO = 0x8C, /* for ICs that have HAMMAC */
+#endif
 	H2C_WAR_OFFLOAD = 0x8D,
 	H2C_WAROFLD_RSVDPAGE1 = 0x8E,
 #ifdef CONFIG_WOW_KEEP_ALIVE_PATTERN
@@ -132,6 +134,7 @@ enum h2c_cmd {
 	H2C_CUSTOMER_STR_W2 = 0xC7,
 	H2C_CUSTOMER_STR_W3 = 0xC8,
 	H2C_BT_UNKNOWN_DEVICE_WA = 0xD1,
+	H2C_SET_AP_BCN_IMR = 0xD8,
 #ifdef DBG_FW_DEBUG_MSG_PKT
 	H2C_FW_DBG_MSG_PKT = 0xE1,
 #endif /*DBG_FW_DEBUG_MSG_PKT*/
@@ -156,6 +159,7 @@ enum h2c_cmd {
 #define H2C_AP_WOW_GPIO_CTRL_LEN	4
 #define H2C_AP_PS_LEN			2
 #define H2C_PWRMODE_LEN			7
+#define H2C_AP_BCN_MIR_LEN 1
 #define H2C_PSTUNEPARAM_LEN			4
 #define H2C_MACID_CFG_LEN		7
 #define H2C_BTMP_OPER_LEN			5
@@ -172,6 +176,9 @@ enum h2c_cmd {
 #define H2C_PROBERSP_RSVDPAGE_LEN	5
 #define H2C_P2PRSVDPAGE_LOC_LEN	5
 #define H2C_P2P_OFFLOAD_LEN	3
+#ifdef CONFIG_PNO_SUPPORT
+#define H2C_NLO_INFO_LEN	2
+#endif
 #ifdef CONFIG_MCC_MODE
 	#define H2C_MCC_CTRL_LEN			7
 #ifdef CONFIG_MCC_MODE_V2
@@ -649,6 +656,11 @@ s32 rtw_hal_customer_str_write(_adapter *adapter, const u8 *cs);
 #define SET_H2CCMD_AOAC_RSVDPAGE_LOC_PROBE_PACKET(__pH2CCmd, __Value)	SET_BITS_TO_LE_1BYTE((__pH2CCmd)+1, 0, 8, __Value)
 #define SET_H2CCMD_AOAC_RSVDPAGE_LOC_SCAN_INFO(__pH2CCmd, __Value)	SET_BITS_TO_LE_1BYTE((__pH2CCmd)+2, 0, 8, __Value)
 #define SET_H2CCMD_AOAC_RSVDPAGE_LOC_SSID_INFO(__pH2CCmd, __Value)	SET_BITS_TO_LE_1BYTE((__pH2CCmd)+3, 0, 8, __Value)
+
+/* NLO SCAN offload for ICs that have HALMAC */
+#define SET_H2CCMD_NLO_FUN_EN(__pH2CCmd, __Value)                      SET_BITS_TO_LE_1BYTE((__pH2CCmd), 0, 1, __Value)
+#define SET_H2CCMD_NLO_PS_32K(__pH2CCmd, __Value)                      SET_BITS_TO_LE_1BYTE((__pH2CCmd), 1, 1, __Value)
+#define SET_H2CCMD_NLO_LOC_NLO_INFO(__pH2CCmd, __Value)        SET_BITS_TO_LE_1BYTE((__pH2CCmd)+1, 0, 8, __Value)
 #endif /* CONFIG_PNO_SUPPORT */
 
 /* _GPIO_CUSTOM_CMD_0x89 */
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/hal_com_led.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/hal_com_led.h
index 283479fcb1bc..379c4fdd107f 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/hal_com_led.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/hal_com_led.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/hal_com_phycfg.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/hal_com_phycfg.h
index 39afa46cc3c6..52bb80532a65 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/hal_com_phycfg.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/hal_com_phycfg.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017 Realtek Corporation.
@@ -147,26 +146,26 @@ u8 phy_get_pg_txpwr_idx(_adapter *pAdapter
 
 #if CONFIG_TXPWR_LIMIT
 s8 phy_get_txpwr_lmt(_adapter *adapter
-	, const char *regd_name
+	, const char *lmt_name
 	, BAND_TYPE band, enum channel_width bw
 	, u8 tlrs, u8 ntx_idx, u8 cch, u8 lock
 );
 
 s8 phy_get_txpwr_lmt_diff(_adapter *adapter
-	, const char *regd_name
+	, const char *lmt_name
 	, BAND_TYPE band, enum channel_width bw
 	, u8 rfpath, u8 rs, u8 tlrs, u8 ntx_idx, u8 cch, u8 lock
 );
 
 s8 phy_get_txpwr_lmt_sub_chs(_adapter *adapter
-	, const char *regd_name
+	, const char *lmt_name
 	, BAND_TYPE band, enum channel_width bw
 	, u8 rfpath, u8 rate, u8 ntx_idx, u8 cch, u8 opch, bool reg_max
 );
 #else
-#define phy_get_txpwr_lmt(adapter, regd_name, band, bw, tlrs, ntx_idx, cch, lock) (GET_HAL_SPEC(adapter)->txgi_max)
-#define phy_get_txpwr_lmt_diff(adapter, regd_name, band, bw, rfpath, rs, tlrs, ntx_idx, cch, lock) (GET_HAL_SPEC(adapter)->txgi_max)
-#define phy_get_txpwr_lmt_sub_chs(adapter, regd_name, band, bw, rfpath, rate, ntx_idx, cch, opch, reg_max) (GET_HAL_SPEC(adapter)->txgi_max)
+#define phy_get_txpwr_lmt(adapter, lmt_name, band, bw, tlrs, ntx_idx, cch, lock) (GET_HAL_SPEC(adapter)->txgi_max)
+#define phy_get_txpwr_lmt_diff(adapter, lmt_name, band, bw, rfpath, rs, tlrs, ntx_idx, cch, lock) (GET_HAL_SPEC(adapter)->txgi_max)
+#define phy_get_txpwr_lmt_sub_chs(adapter, lmt_name, band, bw, rfpath, rate, ntx_idx, cch, opch, reg_max) (GET_HAL_SPEC(adapter)->txgi_max)
 #endif /* CONFIG_TXPWR_LIMIT */
 
 void dump_txpwr_tpc_settings(void *sel, _adapter *adapter);
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/hal_com_reg.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/hal_com_reg.h
index fe16ef64ff5a..353a0f505650 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/hal_com_reg.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/hal_com_reg.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/hal_data.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/hal_data.h
index 516836580c4a..0da9f0ccd000 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/hal_data.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/hal_data.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017 Realtek Corporation.
@@ -343,7 +342,7 @@ struct txpwr_lmt_ent {
 		[MAX_TX_COUNT];
 #endif
 
-	char regd_name[0];
+	char name[0];
 };
 #endif /* CONFIG_TXPWR_LIMIT */
 
@@ -380,7 +379,6 @@ typedef struct hal_com_data {
 	u8				nCur40MhzPrimeSC;	/* Control channel sub-carrier */
 	u8				nCur80MhzPrimeSC;   /* used for primary 40MHz of 80MHz mode */
 	BOOLEAN		bSwChnlAndSetBWInProgress;
-	u8				bDisableSWChannelPlan; /* flag of disable software change channel plan	 */
 	u16				BasicRateSet;
 	u32				ReceiveConfig;
 #ifdef CONFIG_WIFI_MONITOR
@@ -842,6 +840,12 @@ typedef struct hal_com_data {
 	u8 dma_ch_map[32];	/* TXDESC qsel maximum size */
 #endif
 
+#ifndef RTW_HALMAC /* for SIFS initial value */
+	u16 init_reg_0x428;
+	u32 init_reg_0x514;
+	u16 init_reg_0x63a;
+	u32 init_reg_0x63c;
+#endif
 } HAL_DATA_COMMON, *PHAL_DATA_COMMON;
 
 typedef struct hal_com_data HAL_DATA_TYPE, *PHAL_DATA_TYPE;
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/hal_gspi.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/hal_gspi.h
index f9a6d2ca916c..51d491cdb505 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/hal_gspi.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/hal_gspi.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/hal_ic_cfg.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/hal_ic_cfg.h
index add47e7ee04e..b16311d3fab7 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/hal_ic_cfg.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/hal_ic_cfg.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2019 Realtek Corporation.
@@ -42,7 +41,9 @@
 #define RTL8812F_SUPPORT				0
 #define RTL8197G_SUPPORT				0
 #define RTL8710C_SUPPORT				0
-
+#define RTL8814C_SUPPORT				0
+#define RTL8735B_SUPPORT				0
+#define RTL8730A_SUPPORT				0
 
 /*#if (RTL8188E_SUPPORT==1)*/
 #define RATE_ADAPTIVE_SUPPORT			0
@@ -141,6 +142,7 @@
 	#define CONFIG_TXPWR_PG_WITH_PWR_IDX
 	#endif
 	#define CONFIG_STOP_RESUME_BCN_BY_TXPAUSE /*to fixed no bcn issue*/
+	#define CONFIG_TSF_SYNC
 #endif
 
 #ifdef CONFIG_RTL8723B
@@ -443,6 +445,10 @@
 
 	#define CONFIG_RTL8822C_XCAP_NEW_POLICY
 
+	/*#define CONFIG_NARROWBAND_SUPPORTING*/
+	#ifdef CONFIG_NARROWBAND_SUPPORTING
+		#define CONFIG_NB_VALUE         RTW_NB_CONFIG_WIDTH_10      /* RTW_NB_CONFIG_NONE / RTW_NB_CONFIG_WIDTH_10 / RTW_NB_CONFIG_WIDTH_5       */
+	#endif
 	#define CONFIG_SUPPORT_DYNAMIC_TXPWR
 #endif /* CONFIG_RTL8822C */
 
@@ -513,6 +519,10 @@
 #ifdef CONFIG_RTL8814B
 	#undef RTL8814B_SUPPORT
 	#define RTL8814B_SUPPORT				1
+	#ifdef CONFIG_RTL8814C
+		#undef RTL8814C_SUPPORT
+		#define RTL8814C_SUPPORT			1
+	#endif
 	#ifndef CONFIG_FW_C2H_PKT
 		#define CONFIG_FW_C2H_PKT
 	#endif /* CONFIG_FW_C2H_PKT */
@@ -627,18 +637,16 @@
 		#define CONFIG_WOW_PATTERN_IN_TXFIFO
 	#endif
 
-#if 0 /* todo: 8723F , need to check in the future */
 	#ifdef CONFIG_WOWLAN
 		#define CONFIG_GTK_OL
 		/*#define CONFIG_ARP_KEEP_ALIVE*/
 
 		#ifdef CONFIG_GPIO_WAKEUP
 			#ifndef WAKEUP_GPIO_IDX
-				#define WAKEUP_GPIO_IDX	6	/* WIFI Chip Side */
+				#define WAKEUP_GPIO_IDX	12	/* WIFI Chip Side */
 			#endif /* !WAKEUP_GPIO_IDX */
 		#endif /* CONFIG_GPIO_WAKEUP */
 	#endif /* CONFIG_WOWLAN */
-#endif
 
 	#ifdef CONFIG_CONCURRENT_MODE
 		#define CONFIG_AP_PORT_SWAP
@@ -707,5 +715,9 @@
 	#ifndef CONFIG_TXPWR_PG_WITH_TSSI_OFFSET
 	#define CONFIG_TXPWR_PG_WITH_TSSI_OFFSET
 	#endif
+
+	#define CONFIG_BT_EFUSE_MASK
+
+	#define CONFIG_WRITE_BCN_LEN_TO_FW
 #endif /* CONFIG_RTL8723F */
 #endif /*__HAL_IC_CFG_H__*/
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/hal_intf.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/hal_intf.h
index 05bf4c574b59..e1d83992050f 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/hal_intf.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/hal_intf.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017 Realtek Corporation.
@@ -159,7 +158,6 @@ typedef enum _HW_VARIABLES {
 	HW_VAR_CHK_MGQ_CPU_EMPTY,
 	HW_VAR_DL_BCN_SEL,
 	HW_VAR_AMPDU_MAX_TIME,
-	HW_VAR_WIRELESS_MODE,
 	HW_VAR_USB_MODE,
 	HW_VAR_PORT_SWITCH,
 	HW_VAR_PORT_CFG,
@@ -221,6 +219,9 @@ typedef enum _HW_VARIABLES {
 #ifdef CONFIG_WOWLAN
 	HW_VAR_VENDOR_WOW_MODE,
 #endif /* CONFIG_WOWLAN */
+#ifdef CONFIG_WAKE_ON_BT
+	HW_VAR_WAKE_ON_BT_GPIO_SWITCH,
+#endif
 } HW_VARIABLES;
 
 typedef enum _HAL_DEF_VARIABLE {
@@ -265,7 +266,6 @@ typedef enum _HAL_ODM_VARIABLE {
 	HAL_ODM_STA_INFO,
 	HAL_ODM_P2P_STATE,
 	HAL_ODM_WIFI_DISPLAY_STATE,
-	HAL_ODM_REGULATION,
 	HAL_ODM_INITIAL_GAIN,
 	HAL_ODM_RX_INFO_DUMP,
 	HAL_ODM_RX_Dframe_INFO,
@@ -308,6 +308,9 @@ struct hal_ops {
 	s32(*hal_mgmt_xmitframe_enqueue)(_adapter *padapter, struct xmit_frame *pxmitframe);
 #endif
 	s32(*hal_xmitframe_enqueue)(_adapter *padapter, struct xmit_frame *pxmitframe);
+	#if defined (CONFIG_CONCURRENT_MODE)  && defined (CONFIG_TSF_SYNC)
+	void(*tsf_sync)(_adapter *Adapter);
+	#endif
 #ifdef CONFIG_XMIT_THREAD_MODE
 	s32(*xmit_thread_handler)(_adapter *padapter);
 #endif
@@ -459,6 +462,7 @@ struct hal_ops {
 #ifdef CONFIG_PCI_TX_POLLING
 	void (*tx_poll_handler)(_adapter *adapter);
 #endif
+	void (*hci_flush)(_adapter *adapter, u32 queue);
 };
 
 typedef	enum _RT_EEPROM_TYPE {
@@ -854,8 +858,6 @@ s32 rtw_hal_c2h_handler(_adapter *adapter, u8 id, u8 seq, u8 plen, u8 *payload);
 s32 rtw_hal_c2h_id_handle_directly(_adapter *adapter, u8 id, u8 seq, u8 plen, u8 *payload);
 #endif
 
-s32 rtw_hal_is_disable_sw_channel_plan(PADAPTER padapter);
-
 s32 rtw_hal_macid_sleep(_adapter *adapter, u8 macid);
 s32 rtw_hal_macid_wakeup(_adapter *adapter, u8 macid);
 s32 rtw_hal_macid_sleep_all_used(_adapter *adapter);
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/hal_pg.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/hal_pg.h
index 8d91a64e8575..2df6a399cd92 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/hal_pg.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/hal_pg.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/hal_phy.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/hal_phy.h
index f96fed55d949..35f901a4968d 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/hal_phy.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/hal_phy.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/hal_phy_reg.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/hal_phy_reg.h
index 71bf022d6f8d..13d77ab415ed 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/hal_phy_reg.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/hal_phy_reg.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/hal_sdio.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/hal_sdio.h
index 51df612fa2a7..dbdbdca437d6 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/hal_sdio.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/hal_sdio.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/hal_sdio_coex.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/hal_sdio_coex.h
index f14d99818ea2..d95813a1601f 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/hal_sdio_coex.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/hal_sdio_coex.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2013 Realtek Corporation. All rights reserved.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/ieee80211.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/ieee80211.h
index 0beaa14b5bb8..87a91834992c 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/ieee80211.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/ieee80211.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017 Realtek Corporation.
@@ -76,6 +75,7 @@ enum {
 #define WLAN_STA_VHT BIT(14)
 #define WLAN_STA_WDS BIT(15)
 #define WLAN_STA_MULTI_AP BIT(16)
+#define WLAN_STA_AMSDU_DISABLE BIT(17)
 #define WLAN_STA_NONERP BIT(31)
 
 #define IEEE_CMD_SET_WPA_PARAM			1
@@ -721,6 +721,7 @@ struct ieee80211_snap_hdr {
 #define WLAN_EID_CF_PARAMS 4
 #define WLAN_EID_TIM 5
 #define WLAN_EID_IBSS_PARAMS 6
+#define WLAN_EID_COUNTRY 7
 #define WLAN_EID_CHALLENGE 16
 /* EIDs defined by IEEE 802.11h - START */
 #define WLAN_EID_PWR_CONSTRAINT 32
@@ -751,10 +752,11 @@ struct ieee80211_snap_hdr {
 #define WLAN_EID_MESH_CONFIG 113
 #define WLAN_EID_MESH_ID 114
 #define WLAN_EID_MPM 117
-#define	WLAN_EID_RANN 126
-#define	WLAN_EID_PREQ 130
-#define	WLAN_EID_PREP 131
-#define	WLAN_EID_PERR 132
+#define WLAN_EID_RANN 126
+#define WLAN_EID_EXT_CAP 127
+#define WLAN_EID_PREQ 130
+#define WLAN_EID_PREP 131
+#define WLAN_EID_PERR 132
 #define WLAN_EID_AMPE 139
 #define WLAN_EID_MIC 140
 #define WLAN_EID_VENDOR_SPECIFIC 221
@@ -764,9 +766,13 @@ struct ieee80211_snap_hdr {
 #define WLAN_EID_WIDE_BANDWIDTH_CHANNEL_SWITCH 194
 #define WLAN_EID_CHANNEL_SWITCH_WRAPPER 196
 #define WLAN_EID_VHT_OP_MODE_NOTIFY 199
+#define WLAN_EID_RSNX 244
 #define WLAN_EID_EXTENSION 255
 #define WLAN_EID_EXT_OWE_DH_PARAM 32
 
+#define WLAN_EID_EXT_CAP_MAX_LEN 10
+#define WLAN_EID_CSA_IE_LEN 3
+
 #define IEEE80211_MGMT_HDR_LEN 24
 #define IEEE80211_DATA_HDR3_LEN 24
 #define IEEE80211_DATA_HDR4_LEN 30
@@ -1274,6 +1280,7 @@ struct ieee80211_txb {
 #define MAX_OWE_IE_LEN (128)
 #define MAX_P2P_IE_LEN (256)
 #define MAX_WFD_IE_LEN (128)
+#define MAX_RSNX_IE_LEN (16)
 
 #define NETWORK_EMPTY_ESSID (1<<0)
 #define NETWORK_HAS_OFDM    (1<<1)
@@ -1605,6 +1612,29 @@ enum rtw_ieee80211_vht_actioncode {
 	RTW_WLAN_ACTION_VHT_OPMODE_NOTIFICATION = 2,
 };
 
+
+enum EXT_CAP_INFO{
+	BSS_COEXT = 0, /* 20/40 BSS Coexistence Management Support */
+	EXT_CH_SWITCH = 2, /* Extended Channel Switching */
+	WNM_SLEEP_MODE = 17, /* WNM Sleep Mode */
+	BSS_TRANSITION = 19, /* BSS Transition */
+	MULTI_BSSID = 22, /* Multiple BSSID */
+	TIME_MEASUREMENT = 23, /* Timing Measurement */
+	SSID_LIST = 25, /* SSID List */
+	TDLS_PSM = 29, /* TDLS Peer PSM Support */
+	TDLS_CH_SWITCH = 30, /* TDLS channel switching */
+	INTERWORKING = 31, /* Interworking */
+	TDLS_SUPPORT = 37, /* TDLS Support */
+	WNM_NOTIFICATION = 46, /* WNM Notification */
+	OP_MODE_NOTIFICATION = 62, /* Operating Mode Notification */
+	FTM_RESPONDER = 70, /* Fine Timing Measurement Responder */
+	FTM_INITIATOR = 71, /* Fine Timing Measurement Initiator */
+};
+
+#define CSA_SWITCH_MODE 0
+#define CSA_NEW_CH 1
+#define CSA_SWITCH_COUNT 2
+
 #define OUI_MICROSOFT 0x0050f2 /* Microsoft (also used in Wi-Fi specs)
 				* 00:50:F2 */
 #ifndef PLATFORM_FREEBSD /* Baron BSD has defined */
@@ -1840,6 +1870,7 @@ enum secondary_ch_offset {
 };
 u8 secondary_ch_offset_to_hal_ch_offset(u8 ch_offset);
 u8 hal_ch_offset_to_secondary_ch_offset(u8 ch_offset);
+u8 *rtw_set_ie_tpc_report(u8 *buf, u32 *buf_len, u8 tx_power, u8 link_margin);
 u8 *rtw_set_ie_ch_switch(u8 *buf, u32 *buf_len, u8 ch_switch_mode, u8 new_ch, u8 ch_switch_cnt);
 u8 *rtw_set_ie_secondary_ch_offset(u8 *buf, u32 *buf_len, u8 secondary_ch_offset);
 u8 *rtw_set_ie_mesh_ch_switch_parm(u8 *buf, u32 *buf_len, u8 ttl, u8 flags, u16 reason, u16 precedence);
@@ -1848,6 +1879,7 @@ u8 *rtw_get_ie(const u8 *pbuf, sint index, sint *len, sint limit);
 u8 rtw_update_rate_bymode(WLAN_BSSID_EX *pbss_network, u32 mode);
 
 u8 *rtw_get_ie_ex(const u8 *in_ie, uint in_len, u8 eid, const u8 *oui, u8 oui_len, u8 *ie, uint *ielen);
+u8 rtw_ies_update_ie(u8 *ies, uint *ies_len, uint ies_offset, u8 eid, const u8 *content, u8 content_len);
 int rtw_ies_remove_ie(u8 *ies, uint *ies_len, uint offset, u8 eid, u8 *oui, u8 oui_len);
 
 void rtw_set_supported_rate(u8 *SupportedRates, uint mode) ;
@@ -1859,6 +1891,18 @@ void rtw_set_supported_rate(u8 *SupportedRates, uint mode) ;
 #define MFP_OPTIONAL	2
 #define MFP_REQUIRED	3
 
+/*For amsdu mode */
+#define GET_RSN_CAP_SPP_OPT(cap)	LE_BITS_TO_2BYTE(((u8 *)(cap)), 10, 2)
+#define SET_RSN_CAP_SPP(cap, spp)	SET_BITS_TO_LE_2BYTE(((u8 *)(cap)), 10, 2, spp)
+#define SPP_CAP BIT(0)
+#define SPP_REQ BIT(1)
+
+enum rtw_amsdu_mode {
+	RTW_AMSDU_MODE_NON_SPP	= 0,
+	RTW_AMSDU_MODE_SPP	= 1,
+	RTW_AMSDU_MODE_ALL_DROP	= 2,
+};
+
 struct rsne_info {
 	u8 *gcs;
 	u16 pcs_cnt;
@@ -1880,7 +1924,7 @@ int rtw_get_wpa_cipher_suite(u8 *s);
 int rtw_get_rsn_cipher_suite(u8 *s);
 int rtw_get_wapi_ie(u8 *in_ie, uint in_len, u8 *wapi_ie, u16 *wapi_len);
 int rtw_parse_wpa_ie(u8 *wpa_ie, int wpa_ie_len, int *group_cipher, int *pairwise_cipher, u32 *akm);
-int rtw_parse_wpa2_ie(u8 *wpa_ie, int wpa_ie_len, int *group_cipher, int *pairwise_cipher, int *gmcs, u32 *akm, u8 *mfp_opt);
+int rtw_parse_wpa2_ie(u8 *wpa_ie, int wpa_ie_len, int *group_cipher, int *pairwise_cipher, int *gmcs, u32 *akm, u8 *mfp_opt, u8* spp_opt);
 
 int rtw_get_sec_ie(u8 *in_ie, uint in_len, u8 *rsn_ie, u16 *rsn_len, u8 *wpa_ie, u16 *wpa_len);
 
@@ -1892,6 +1936,11 @@ u8 *rtw_get_wps_attr_content(u8 *wps_ie, uint wps_ielen, u16 target_attr_id , u8
 
 u8 *rtw_get_owe_ie(const u8 *in_ie, uint in_len, u8 *owe_ie, uint *owe_ielen);
 
+void rtw_add_ext_cap_info(u8 *ext_cap_data, u8 *ext_cap_data_len, u8 cap_info);
+void rtw_remove_ext_cap_info(u8 *ext_cap_data, u8 *ext_cap_data_len, u8 cap_info);
+u8 rtw_update_ext_cap_ie(u8 *ext_cap_data, u8 ext_cap_data_len, u8 *ies, u32 *ies_len, u8 ies_offset);
+void rtw_parse_ext_cap_ie(u8 *ext_cap_data, u8 *ext_cap_data_len, u8 *ies, u32 ies_len, u8 ies_offset);
+
 /**
  * for_each_ie - iterate over continuous IEs
  * @ie:
@@ -1997,5 +2046,8 @@ void macstr2num(u8 *dst, u8 *src);
 u8 convert_ip_addr(u8 hch, u8 mch, u8 lch);
 int wifirate2_ratetbl_inx(unsigned char rate);
 
+/* For amsdu mode. */
+/*void rtw_set_spp_amsdu_mode(u8 mode, u8 *rsn_ie, int rsn_ie_len); */
+u8 rtw_check_amsdu_disable(u8 mode, u8 spp_opt);
 
 #endif /* IEEE80211_H */
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/ieee80211_ext.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/ieee80211_ext.h
index c17a2ee66504..4965863c4173 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/ieee80211_ext.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/ieee80211_ext.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/if_ether.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/if_ether.h
index 335233b55272..a3007c4ab22d 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/if_ether.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/if_ether.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/ip.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/ip.h
index 339e23d50d1d..4feb98fb072a 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/ip.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/ip.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/linux/wireless.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/linux/wireless.h
index acaa37384089..c7f4a6c9b66a 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/linux/wireless.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/linux/wireless.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/mlme_osdep.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/mlme_osdep.h
index 29b8426c59ac..131eb092560f 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/mlme_osdep.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/mlme_osdep.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/nic_spec.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/nic_spec.h
index 5e66f6c82b3b..913ef9ba801a 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/nic_spec.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/nic_spec.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/osdep_intf.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/osdep_intf.h
index 335826534cc0..63e535ee5ab7 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/osdep_intf.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/osdep_intf.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/osdep_service.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/osdep_service.h
index 4af2f6303d1c..00c1ea40479e 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/osdep_service.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/osdep_service.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017 Realtek Corporation.
@@ -27,11 +26,13 @@
 #define RTW_SDIO_READ_PORT_FAIL	7
 #define RTW_ALREADY				8
 #define RTW_RA_RESOLVING		9
-#define RTW_BMC_NO_NEED			10
+#define RTW_ORI_NO_NEED			10
 #define RTW_XBUF_UNAVAIL		11
 #define RTW_TX_BALANCE			12
 #define RTW_TX_WAIT_MORE_FRAME	13
-#define RTW_QUEUE_MGMT 14
+#define RTW_QUEUE_MGMT			14
+#define RTW_NOT_SUPPORT			15
+#define RTW_BUSY				16
 
 /* #define RTW_STATUS_TIMEDOUT -110 */
 
@@ -48,6 +49,9 @@
 
 #ifdef PLATFORM_LINUX
 	#include <linux/version.h>
+#if defined(CONFIG_RTW_ANDROID_GKI)
+	#include <linux/firmware.h>
+#endif
 #if (LINUX_VERSION_CODE >= KERNEL_VERSION(4, 11, 0))
 	#include <linux/sched/signal.h>
 	#include <linux/sched/types.h>
@@ -665,9 +669,9 @@ static inline int largest_bit_64(u64 bitmask)
 	return i;
 }
 
-#define rtw_abs(a) (a < 0 ? -a : a)
-#define rtw_min(a, b) ((a > b) ? b : a)
-#define rtw_max(a, b) ((a > b) ? a : b)
+#define rtw_abs(a) ((a) < 0 ? -(a) : (a))
+#define rtw_min(a, b) (((a) > (b)) ? (b) : (a))
+#define rtw_max(a, b) (((a) > (b)) ? (a) : (b))
 #define rtw_is_range_a_in_b(hi_a, lo_a, hi_b, lo_b) (((hi_a) <= (hi_b)) && ((lo_a) >= (lo_b)))
 #define rtw_is_range_overlap(hi_a, lo_a, hi_b, lo_b) (((hi_a) > (lo_b)) && ((lo_a) < (hi_b)))
 
@@ -710,12 +714,14 @@ extern int ATOMIC_DEC_RETURN(ATOMIC_T *v);
 extern bool ATOMIC_INC_UNLESS(ATOMIC_T *v, int u);
 
 /* File operation APIs, just for linux now */
+#if !defined(CONFIG_RTW_ANDROID_GKI)
 extern int rtw_is_dir_readable(const char *path);
+extern int rtw_store_to_file(const char *path, u8 *buf, u32 sz);
+#endif /* !defined(CONFIG_RTW_ANDROID_GKI) */
 extern int rtw_is_file_readable(const char *path);
 extern int rtw_is_file_readable_with_size(const char *path, u32 *sz);
 extern int rtw_readable_file_sz_chk(const char *path, u32 sz);
 extern int rtw_retrieve_from_file(const char *path, u8 *buf, u32 sz);
-extern int rtw_store_to_file(const char *path, u8 *buf, u32 sz);
 
 
 #ifndef PLATFORM_FREEBSD
@@ -805,7 +811,7 @@ extern u32 rtw_random32(void);
 	} while (0)
 
 void rtw_buf_free(u8 **buf, u32 *buf_len);
-void rtw_buf_update(u8 **buf, u32 *buf_len, u8 *src, u32 src_len);
+void rtw_buf_update(u8 **buf, u32 *buf_len, const u8 *src, u32 src_len);
 
 struct rtw_cbuf {
 	u32 write;
@@ -866,6 +872,7 @@ BOOLEAN is_null(char c);
 BOOLEAN is_all_null(char *c, int len);
 BOOLEAN is_eol(char c);
 BOOLEAN is_space(char c);
+BOOLEAN is_decimal(char chTmp);
 BOOLEAN IsHexDigit(char chTmp);
 BOOLEAN is_alpha(char chTmp);
 char alpha_to_upper(char c);
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/osdep_service_bsd.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/osdep_service_bsd.h
index 79eef3e731bb..f8f15d6fd2f9 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/osdep_service_bsd.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/osdep_service_bsd.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/osdep_service_ce.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/osdep_service_ce.h
index 3d6d75aa6db9..2bf65ef4741d 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/osdep_service_ce.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/osdep_service_ce.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/osdep_service_linux.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/osdep_service_linux.h
index f8fccf3aa6fa..ecbf9b7c6ed7 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/osdep_service_linux.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/osdep_service_linux.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017 Realtek Corporation.
@@ -33,7 +32,7 @@
 #include <linux/inetdevice.h>
 #include <linux/skbuff.h>
 #include <linux/circ_buf.h>
-#include <linux/uaccess.h>
+#include <asm/uaccess.h>
 #include <asm/byteorder.h>
 #include <asm/atomic.h>
 #include <asm/io.h>
@@ -527,6 +526,15 @@ static inline int rtw_merge_string(char *dst, int dst_len, const char *src1, con
 /* Atomic integer operations */
 #define ATOMIC_T atomic_t
 
+
+#if defined(DBG_MEM_ERR_FREE)
+void rtw_dbg_mem_init(void);
+void rtw_dbg_mem_deinit(void);
+#else
+#define rtw_dbg_mem_init() do {} while (0)
+#define rtw_dbg_mem_deinit() do {} while (0)
+#endif /* DBG_MEM_ERR_FREE */
+
 #define rtw_netdev_priv(netdev) (((struct rtw_netdev_priv_indicator *)netdev_priv(netdev))->priv)
 
 #define NDEV_FMT "%s"
@@ -561,5 +569,18 @@ extern struct net_device *rtw_alloc_etherdev(int sizeof_priv);
 
 #define STRUCT_PACKED __attribute__ ((packed))
 
+#ifndef fallthrough
+#if __GNUC__ >= 5 || defined(__clang__)
+#ifndef __has_attribute
+#define __has_attribute(x) 0
+#endif
+#if __has_attribute(__fallthrough__)
+#define fallthrough __attribute__((__fallthrough__))
+#endif
+#endif
+#ifndef fallthrough
+#define fallthrough do {} while (0) /* fallthrough */
+#endif
+#endif
 
 #endif /* __OSDEP_LINUX_SERVICE_H_ */
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/osdep_service_xp.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/osdep_service_xp.h
index 46cc0638665b..57e6f314e20d 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/osdep_service_xp.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/osdep_service_xp.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/pci_hal.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/pci_hal.h
index fea41748177c..6eac311a13d1 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/pci_hal.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/pci_hal.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/pci_ops.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/pci_ops.h
index 6370d5dc859d..7b95fde04a7c 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/pci_ops.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/pci_ops.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/pci_osintf.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/pci_osintf.h
index 9db032a0fa7b..077064a725bc 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/pci_osintf.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/pci_osintf.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/recv_osdep.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/recv_osdep.h
index 8d7218bfa108..43383a6857a8 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/recv_osdep.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/recv_osdep.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017 Realtek Corporation.
@@ -68,4 +67,6 @@ void dynamic_napi_th_chk (_adapter *adapter);
 #endif /* CONFIG_RTW_NAPI */
 #endif /* PLATFORM_LINUX */
 
+void rtw_rx_dbg_monitor_ip_statistic(_adapter *padapter, _pkt *pkt);
+
 #endif /*  */
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8188e_cmd.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8188e_cmd.h
index 2f26184b79a8..aba0bec14769 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8188e_cmd.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8188e_cmd.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8188e_dm.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8188e_dm.h
index c6ec32087b1a..457ae9bcab1f 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8188e_dm.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8188e_dm.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8188e_hal.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8188e_hal.h
index 8bb69e9fd117..9665896d57ed 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8188e_hal.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8188e_hal.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8188e_led.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8188e_led.h
index 5d42f8013d01..ef054675024a 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8188e_led.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8188e_led.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8188e_recv.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8188e_recv.h
index c1eeb5e5247a..31058c1b11dc 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8188e_recv.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8188e_recv.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8188e_rf.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8188e_rf.h
index ccb04cc17f94..8dc413e1dddf 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8188e_rf.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8188e_rf.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8188e_spec.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8188e_spec.h
index e87126e41ed6..802659a5fd07 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8188e_spec.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8188e_spec.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8188e_sreset.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8188e_sreset.h
index 7fa89af73715..f4ec2d88c327 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8188e_sreset.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8188e_sreset.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8188e_xmit.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8188e_xmit.h
index e86f481abcb2..9772f1258b93 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8188e_xmit.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8188e_xmit.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017 Realtek Corporation.
@@ -254,7 +253,7 @@ void fill_txdesc_force_bmc_camid(struct pkt_attrib *pattrib, struct tx_desc *ptx
 	s32 rtl8188es_xmit_buf_handler(PADAPTER padapter);
 
 	#ifdef CONFIG_SDIO_TX_TASKLET
-		void rtl8188es_xmit_tasklet(void *priv);
+		void rtl8188es_xmit_tasklet(unsigned long priv);
 	#endif
 #endif
 
@@ -268,7 +267,7 @@ void fill_txdesc_force_bmc_camid(struct pkt_attrib *pattrib, struct tx_desc *ptx
 #endif
 	s32	rtl8188eu_hal_xmitframe_enqueue(_adapter *padapter, struct xmit_frame *pxmitframe);
 	s32 rtl8188eu_xmit_buf_handler(PADAPTER padapter);
-	void rtl8188eu_xmit_tasklet(void *priv);
+	void rtl8188eu_xmit_tasklet(unsigned long priv);
 	s32 rtl8188eu_xmitframe_complete(_adapter *padapter, struct xmit_priv *pxmitpriv, struct xmit_buf *pxmitbuf);
 #endif
 
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8188f_cmd.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8188f_cmd.h
index 42f52b3df1c8..6f33708e93cc 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8188f_cmd.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8188f_cmd.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8188f_dm.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8188f_dm.h
index 146490e88a04..342ade9a515c 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8188f_dm.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8188f_dm.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8188f_hal.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8188f_hal.h
index 259f52119e68..5db99a41e50b 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8188f_hal.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8188f_hal.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8188f_led.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8188f_led.h
index 67258fde0842..ef5d1a7761a8 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8188f_led.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8188f_led.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8188f_recv.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8188f_recv.h
index f97aca291fa8..44b51fdbb9ca 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8188f_recv.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8188f_recv.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8188f_rf.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8188f_rf.h
index 6d785796f95f..a0338313b580 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8188f_rf.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8188f_rf.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8188f_spec.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8188f_spec.h
index deb97ab4b152..d947ba800627 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8188f_spec.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8188f_spec.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8188f_sreset.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8188f_sreset.h
index bd0193b3ab4d..fe56567e7396 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8188f_sreset.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8188f_sreset.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8188f_xmit.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8188f_xmit.h
index 6909796ae8be..a304a0f46a6d 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8188f_xmit.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8188f_xmit.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017 Realtek Corporation.
@@ -319,7 +318,7 @@ s32 rtl8188fu_hal_mgmt_xmitframe_enqueue(_adapter *padapter, struct xmit_frame *
 #endif
 s32	 rtl8188fu_hal_xmitframe_enqueue(_adapter *padapter, struct xmit_frame *pxmitframe);
 /* s32 rtl8812au_xmit_buf_handler(PADAPTER padapter); */
-void rtl8188fu_xmit_tasklet(void *priv);
+void rtl8188fu_xmit_tasklet(unsigned long priv);
 s32 rtl8188fu_xmitframe_complete(_adapter *padapter, struct xmit_priv *pxmitpriv, struct xmit_buf *pxmitbuf);
 void _dbg_dump_tx_info(_adapter	*padapter, int frame_tag, struct tx_desc *ptxdesc);
 #endif
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8192e_cmd.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8192e_cmd.h
index 91b2c4c228b8..a9c8be840992 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8192e_cmd.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8192e_cmd.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2012 - 2017 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8192e_dm.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8192e_dm.h
index e2439e9de05a..0a65a1be370d 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8192e_dm.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8192e_dm.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2012 - 2017 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8192e_hal.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8192e_hal.h
index 2c11d91f56ab..417147dabe78 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8192e_hal.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8192e_hal.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2012 - 2017 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8192e_led.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8192e_led.h
index b276d62b61c9..3d795c4055a8 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8192e_led.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8192e_led.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2012 - 2017 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8192e_recv.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8192e_recv.h
index 4da33890ea2e..c19a98080835 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8192e_recv.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8192e_recv.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2012 - 2017 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8192e_rf.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8192e_rf.h
index 523ace9ee990..77dca747e8fd 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8192e_rf.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8192e_rf.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2012 - 2017 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8192e_spec.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8192e_spec.h
index 2ff0768f5946..c9b2b41e6e48 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8192e_spec.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8192e_spec.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2012 - 2017 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8192e_sreset.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8192e_sreset.h
index 60e6afae36ea..78109aea468f 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8192e_sreset.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8192e_sreset.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2012 - 2017 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8192e_xmit.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8192e_xmit.h
index 3668352c5b8b..e0573ce82ebf 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8192e_xmit.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8192e_xmit.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2012 - 2017 Realtek Corporation.
@@ -365,7 +364,7 @@ void rtl8192e_cal_txdesc_chksum(u8 *ptxdesc);
 	s32	rtl8192eu_hal_xmitframe_enqueue(_adapter *padapter, struct xmit_frame *pxmitframe);
 	s32 rtl8192eu_xmit_buf_handler(PADAPTER padapter);
 	#define hal_xmit_handler rtl8192eu_xmit_buf_handler
-	void rtl8192eu_xmit_tasklet(void *priv);
+	void rtl8192eu_xmit_tasklet(unsigned long priv);
 	s32 rtl8192eu_xmitframe_complete(_adapter *padapter, struct xmit_priv *pxmitpriv, struct xmit_buf *pxmitbuf);
 #endif
 
@@ -397,7 +396,7 @@ void rtl8192e_cal_txdesc_chksum(u8 *ptxdesc);
 	s32 rtl8192es_xmit_buf_handler(PADAPTER padapter);
 
 	#ifdef CONFIG_SDIO_TX_TASKLET
-		void rtl8192es_xmit_tasklet(void *priv);
+		void rtl8192es_xmit_tasklet(unsigned long priv);
 	#endif
 #endif
 
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8192f_cmd.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8192f_cmd.h
index 69abb2208910..44ea6707b79e 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8192f_cmd.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8192f_cmd.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8192f_dm.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8192f_dm.h
index 5185d5c359fa..36ed77bb31b9 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8192f_dm.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8192f_dm.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2012 - 2017 Realtek Corporation.
@@ -24,5 +23,7 @@ void rtl8192f_HalDmWatchDog(PADAPTER Adapter);
 /* void rtl8192c_dm_CheckTXPowerTracking(PADAPTER Adapter); */
 
 /* void rtl8192c_dm_RF_Saving(PADAPTER pAdapter, u8 bForceInNormal); */
-
+#if defined (CONFIG_CONCURRENT_MODE)  && defined (CONFIG_TSF_SYNC)
+void rtl8192f_sync_tsfr(_adapter *Adapter);
+#endif/*(CONFIG_CONCURRENT_MODE)  && defined (CONFIG_TSF_SYNC)*/
 #endif
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8192f_hal.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8192f_hal.h
index acb8950cb075..e7d6db52a3cc 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8192f_hal.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8192f_hal.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017 Realtek Corporation.
@@ -129,6 +128,12 @@ typedef struct _RT_8192F_FIRMWARE_HDR {
 	#define WOWLAN_PAGE_NUM_8192F	0x00
 #endif
 
+#ifdef CONFIG_WOW_PATTERN_IN_TXFIFO
+	/* REG_TXBUF_WKCAM_OFFSET 0x1B1[15:0] */
+	#define WKCAM_OFFSET_BIT_MASK 0xFFFF
+	#define WKCAM_OFFSET_BIT_MASK_OFFSET 0
+#endif
+
 #ifdef CONFIG_PNO_SUPPORT
 	#undef WOWLAN_PAGE_NUM_8192F
 	#define WOWLAN_PAGE_NUM_8192F	0x15
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8192f_led.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8192f_led.h
index 5b68b56a3272..0dbb27cd023e 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8192f_led.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8192f_led.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8192f_recv.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8192f_recv.h
index 064d13b9c463..9fb931a7fa69 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8192f_recv.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8192f_recv.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8192f_rf.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8192f_rf.h
index 11c314c2364f..9710fb26ebea 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8192f_rf.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8192f_rf.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2012 - 2017 Realtek Corporation.
@@ -22,9 +21,6 @@
 #define CONFIG_8192F_TYPE3_DRV_DIS
 #define CONFIG_8192F_TYPE4_DRV_DIS
 /*unused*/
-#define CONFIG_8192F_TYPE18_DRV_DIS
-#define CONFIG_8192F_TYPE19_DRV_DIS
-#define CONFIG_8192F_TYPE20_DRV_DIS
 #define CONFIG_8192F_TYPE21_DRV_DIS
 #define CONFIG_8192F_TYPE22_DRV_DIS
 #define CONFIG_8192F_TYPE23_DRV_DIS
@@ -55,6 +51,9 @@
 #define CONFIG_8192F_TYPE15_DRV_DIS
 #define CONFIG_8192F_TYPE16_DRV_DIS
 #define CONFIG_8192F_TYPE17_DRV_DIS
+#define CONFIG_8192F_TYPE18_DRV_DIS
+#define CONFIG_8192F_TYPE19_DRV_DIS
+#define CONFIG_8192F_TYPE20_DRV_DIS
 #endif/*CONFIG_SDIO_HCI*/
 
 #ifdef CONFIG_USB_HCI
@@ -71,6 +70,9 @@
 #define CONFIG_8192F_TYPE15_DRV_DIS
 #define CONFIG_8192F_TYPE16_DRV_DIS
 #define CONFIG_8192F_TYPE17_DRV_DIS
+#define CONFIG_8192F_TYPE18_DRV_DIS
+#define CONFIG_8192F_TYPE19_DRV_DIS
+#define CONFIG_8192F_TYPE20_DRV_DIS
 #endif/*CONFIG_USB_HCI*/
 
 #ifdef CONFIG_PCI_HCI
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8192f_spec.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8192f_spec.h
index 01828bbf4531..b34d94483c48 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8192f_spec.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8192f_spec.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8192f_sreset.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8192f_sreset.h
index a8fca762f4b8..cf881c43184c 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8192f_sreset.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8192f_sreset.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8192f_xmit.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8192f_xmit.h
index 8c00b4ad7065..e0b84c2aa4fc 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8192f_xmit.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8192f_xmit.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017 Realtek Corporation.
@@ -514,7 +513,7 @@ void fill_txdesc_bmc_tx_rate(struct pkt_attrib *pattrib, u8 *ptxdesc);
 	s32	 rtl8192fu_hal_xmitframe_enqueue(_adapter *padapter, struct xmit_frame *pxmitframe);
 	s32 rtl8192fu_xmit_buf_handler(PADAPTER padapter);
 	#define hal_xmit_handler rtl8192fu_xmit_buf_handler
-	void rtl8192fu_xmit_tasklet(void *priv);
+	void rtl8192fu_xmit_tasklet(unsigned long priv);
 	s32 rtl8192fu_xmitframe_complete(_adapter *padapter, struct xmit_priv *pxmitpriv, struct xmit_buf *pxmitbuf);
 	void _dbg_dump_tx_info(_adapter	*padapter,int frame_tag,struct tx_desc *ptxdesc);
 #endif
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8703b_cmd.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8703b_cmd.h
index cf29f03261bd..522a3bcb7a68 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8703b_cmd.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8703b_cmd.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8703b_dm.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8703b_dm.h
index 1fe6a521d16b..912c7da079ea 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8703b_dm.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8703b_dm.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8703b_hal.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8703b_hal.h
index cbd8b0ad781f..4a83abf458ab 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8703b_hal.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8703b_hal.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8703b_led.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8703b_led.h
index 4a79ce03f984..99e590d31bc5 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8703b_led.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8703b_led.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8703b_recv.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8703b_recv.h
index 04b1f7b50c80..09672d23811b 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8703b_recv.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8703b_recv.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8703b_rf.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8703b_rf.h
index bc84a1aeed63..4148276bf4cb 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8703b_rf.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8703b_rf.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8703b_spec.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8703b_spec.h
index a71151090dad..633b23b1bf10 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8703b_spec.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8703b_spec.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8703b_sreset.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8703b_sreset.h
index 5433c19e1383..5fe53cf414a1 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8703b_sreset.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8703b_sreset.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8703b_xmit.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8703b_xmit.h
index 0c608ba56cd9..9ec00a66a564 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8703b_xmit.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8703b_xmit.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8710b_cmd.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8710b_cmd.h
index ebddcf18e5dc..0237d18ea82e 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8710b_cmd.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8710b_cmd.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8710b_dm.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8710b_dm.h
index 56412d62efe7..9a131ba05df3 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8710b_dm.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8710b_dm.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8710b_hal.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8710b_hal.h
index 23c087c76000..332112b3196c 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8710b_hal.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8710b_hal.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8710b_led.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8710b_led.h
index 1077b595f4ce..8ca346d7ad35 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8710b_led.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8710b_led.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8710b_lps_poff.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8710b_lps_poff.h
index 0528d3774a67..ea9c60e8f700 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8710b_lps_poff.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8710b_lps_poff.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8710b_recv.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8710b_recv.h
index 58a31afe51ba..ca0b8f8e75ae 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8710b_recv.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8710b_recv.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8710b_rf.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8710b_rf.h
index e76a7828e628..0b5cee616616 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8710b_rf.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8710b_rf.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8710b_spec.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8710b_spec.h
index 171144208dd1..309c3eeb4362 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8710b_spec.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8710b_spec.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8710b_sreset.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8710b_sreset.h
index cac8aacf7d76..ac5c64edd345 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8710b_sreset.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8710b_sreset.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8710b_xmit.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8710b_xmit.h
index e3e2198d44dc..b3ec6f58042e 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8710b_xmit.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8710b_xmit.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8723b_cmd.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8723b_cmd.h
index a53fdd4faf7b..d4da95640791 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8723b_cmd.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8723b_cmd.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8723b_dm.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8723b_dm.h
index 0a18c1654b42..ea517175f0bd 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8723b_dm.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8723b_dm.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8723b_hal.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8723b_hal.h
index 658db3129375..8483502464b8 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8723b_hal.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8723b_hal.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8723b_led.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8723b_led.h
index 1261c5e9a4d3..6b772cceb7ec 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8723b_led.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8723b_led.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8723b_recv.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8723b_recv.h
index e1fb2897a972..5e92713a5522 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8723b_recv.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8723b_recv.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8723b_rf.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8723b_rf.h
index d76486b7ca27..040c16647f33 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8723b_rf.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8723b_rf.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8723b_spec.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8723b_spec.h
index d8643cc4afdc..b0fb4aa41d17 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8723b_spec.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8723b_spec.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8723b_sreset.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8723b_sreset.h
index 5bae23bc608c..c97f2648ac60 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8723b_sreset.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8723b_sreset.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8723b_xmit.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8723b_xmit.h
index 8c0b360a06be..51691e931c67 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8723b_xmit.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8723b_xmit.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8723d_cmd.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8723d_cmd.h
index 1a32731b26ed..9c65b4b9e039 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8723d_cmd.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8723d_cmd.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8723d_dm.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8723d_dm.h
index f0d3a2e7de9f..0612f0620e79 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8723d_dm.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8723d_dm.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8723d_hal.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8723d_hal.h
index 7400c2f39047..d18e9abc9973 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8723d_hal.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8723d_hal.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8723d_led.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8723d_led.h
index 80d5001b88d5..1905e8bed02c 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8723d_led.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8723d_led.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8723d_lps_poff.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8723d_lps_poff.h
index 0193d46fc4d7..138a0ca66732 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8723d_lps_poff.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8723d_lps_poff.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8723d_recv.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8723d_recv.h
index d3f9adfa9915..f19ad6904a22 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8723d_recv.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8723d_recv.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8723d_rf.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8723d_rf.h
index e4625b5bb6a6..4a0a7cfb8747 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8723d_rf.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8723d_rf.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8723d_spec.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8723d_spec.h
index 72f0b8ca0845..5106b23b7722 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8723d_spec.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8723d_spec.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8723d_sreset.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8723d_sreset.h
index 6310e8208e77..db75dba73e32 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8723d_sreset.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8723d_sreset.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8723d_xmit.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8723d_xmit.h
index 918e4e6f403e..6f84515ef4f9 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8723d_xmit.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8723d_xmit.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017 Realtek Corporation.
@@ -506,7 +505,7 @@ void fill_txdesc_bmc_tx_rate(struct pkt_attrib *pattrib, u8 *ptxdesc);
 	s32 rtl8723du_hal_mgmt_xmitframe_enqueue(_adapter *padapter, struct xmit_frame *pxmitframe);
 #endif
 	s32	 rtl8723du_hal_xmitframe_enqueue(_adapter *padapter, struct xmit_frame *pxmitframe);
-	void rtl8723du_xmit_tasklet(void *priv);
+	void rtl8723du_xmit_tasklet(unsigned long priv);
 	s32 rtl8723du_xmitframe_complete(_adapter *padapter, struct xmit_priv *pxmitpriv, struct xmit_buf *pxmitbuf);
 	void _dbg_dump_tx_info(_adapter	*padapter, int frame_tag, struct tx_desc *ptxdesc);
 #endif
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8723f_hal.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8723f_hal.h
index 664b62a53900..d39e9ac07aa2 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8723f_hal.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8723f_hal.h
@@ -1,7 +1,6 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
- * Copyright(c) 2019 Realtek Corporation.
+ * Copyright(c) 2019 - 2021 Realtek Corporation.
  *
  * This program is free software; you can redistribute it and/or modify it
  * under the terms of version 2 of the GNU General Public License as
@@ -18,7 +17,7 @@
 
 #include <osdep_service.h>		/* BIT(x) */
 #include <drv_types.h>			/* PADAPTER */
-#include "../hal/halmac/halmac_api.h"	/* MAC REG definition */
+#include "../hal/halmac-rs/halmac_api.h"	/* MAC REG definition */
 
 #define MAX_RECVBUF_SZ		16384	/* 16KB (RX_FIFO_SIZE_8723F), TX: 32KB */
 
@@ -49,7 +48,8 @@
 #define BIT_GET_NETYPE4				BIT_GET_P4_NETSTATE_8723F /* hal_halmac.c */
 
 #ifdef CONFIG_WOW_PATTERN_IN_TXFIFO
-/* todo: 8723F , need to check in the future */
+#define WKCAM_OFFSET_BIT_MASK 0xFFF
+#define WKCAM_OFFSET_BIT_MASK_OFFSET 12
 #define REG_TXBUF_WKCAM_OFFSET 0x1B4 //BIT_TXBUF_WKCAM_OFFSET [24:12]
 #define REG_PKT_BUFF_ACCESS_CTRL 	0x106 /* hal_com.c */
 #endif
@@ -223,24 +223,6 @@
 /* rtw_lps_state_chk() @hal_com.c */
 #define BIT_PWRBIT_OW_EN	BIT_WMAC_TCR_PWRMGT_CTL_8723F
 
-
-/* 
-* Structure 
-*/
-struct qinfo_8723f {
-	u32 head:8;
-	u32 pkt_num:7;
-	u32 tail:8;
-	u32 ac:2;
-	u32 macid:7;
-};
-
-struct bcn_qinfo_8723f {
-	u16 head:8;
-	u16 pkt_num:8;
-};
-
-
 /* 
 * General Functions 
 */
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8723fs_hal.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8723fs_hal.h
index bd69ff116aae..f1b938af6cc0 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8723fs_hal.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8723fs_hal.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2019 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8723fu_hal.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8723fu_hal.h
index d74829ffd48f..69de77600bbc 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8723fu_hal.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8723fu_hal.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2019 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8812a_cmd.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8812a_cmd.h
index f9286cc72352..4a3473683bb7 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8812a_cmd.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8812a_cmd.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8812a_dm.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8812a_dm.h
index a8a04afae271..21a9abaa6118 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8812a_dm.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8812a_dm.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8812a_hal.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8812a_hal.h
index 9113bfff1743..3082c67c9e25 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8812a_hal.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8812a_hal.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8812a_led.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8812a_led.h
index 7396fed0d56d..30c676e526f3 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8812a_led.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8812a_led.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8812a_recv.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8812a_recv.h
index 77f06c0bf5c8..5fa06e512baf 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8812a_recv.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8812a_recv.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8812a_rf.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8812a_rf.h
index 63f3745ca97c..c5d9aaee3fad 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8812a_rf.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8812a_rf.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8812a_spec.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8812a_spec.h
index 8d038ca9d09e..37ba2472296c 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8812a_spec.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8812a_spec.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8812a_sreset.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8812a_sreset.h
index 309ada941815..d4bbd5867b24 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8812a_sreset.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8812a_sreset.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8812a_xmit.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8812a_xmit.h
index 35254ddcee76..f115d0f61730 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8812a_xmit.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8812a_xmit.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017 Realtek Corporation.
@@ -332,7 +331,7 @@ s32 rtl8812au_hal_mgmt_xmitframe_enqueue(_adapter *padapter, struct xmit_frame *
 #endif
 s32	 rtl8812au_hal_xmitframe_enqueue(_adapter *padapter, struct xmit_frame *pxmitframe);
 s32 rtl8812au_xmit_buf_handler(PADAPTER padapter);
-void rtl8812au_xmit_tasklet(void *priv);
+void rtl8812au_xmit_tasklet(unsigned long priv);
 s32 rtl8812au_xmitframe_complete(_adapter *padapter, struct xmit_priv *pxmitpriv, struct xmit_buf *pxmitbuf);
 #endif
 
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8814a_cmd.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8814a_cmd.h
index a52e108940d6..02ed2111eb00 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8814a_cmd.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8814a_cmd.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8814a_dm.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8814a_dm.h
index 002f09219bd8..9762c1b411b1 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8814a_dm.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8814a_dm.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8814a_hal.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8814a_hal.h
index 8a4bef0c2c03..65552e2163b9 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8814a_hal.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8814a_hal.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017 Realtek Corporation.
@@ -327,4 +326,6 @@ void rtl8814_stop_thread(PADAPTER padapter);
 	void rtl8814a_combo_card_WifiOnlyHwInit(PADAPTER Adapter);
 #endif
 
+void rtl8814ae_hci_flush(PADAPTER Adapter, u32 queue);
+
 #endif /* __RTL8188E_HAL_H__ */
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8814a_led.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8814a_led.h
index 755b1b6662fb..cc457921efa1 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8814a_led.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8814a_led.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8814a_recv.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8814a_recv.h
index cbe2ab717384..68da6333178c 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8814a_recv.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8814a_recv.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8814a_rf.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8814a_rf.h
index 2128eb53b484..9bb099c925a5 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8814a_rf.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8814a_rf.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8814a_spec.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8814a_spec.h
index 3c8781d6c8f5..a27ab8872c0c 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8814a_spec.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8814a_spec.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8814a_sreset.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8814a_sreset.h
index 23649b882787..d65cb98a530e 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8814a_sreset.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8814a_sreset.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8814a_xmit.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8814a_xmit.h
index 0a9af96b68ec..8901fdeab52a 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8814a_xmit.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8814a_xmit.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8814b_hal.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8814b_hal.h
index c67062f6c35c..301d1a054166 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8814b_hal.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8814b_hal.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2015 - 2017 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8814be_hal.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8814be_hal.h
index 31bcd430507a..3e124cae69de 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8814be_hal.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8814be_hal.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2015 - 2017 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8814bu_hal.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8814bu_hal.h
index 7353c152860d..aa5cef998014 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8814bu_hal.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8814bu_hal.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2015 - 2017 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8821a_spec.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8821a_spec.h
index ead9de2db0cb..1379ffc3cf9d 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8821a_spec.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8821a_spec.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2013 - 2017 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8821a_xmit.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8821a_xmit.h
index 024cca979019..28323b79cd79 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8821a_xmit.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8821a_xmit.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2013 - 2017 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8821c_dm.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8821c_dm.h
index 32cf516206f9..b1e4fe608b2a 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8821c_dm.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8821c_dm.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2016 - 2017 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8821c_hal.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8821c_hal.h
index a4a93ec1fe75..41d222ef34d9 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8821c_hal.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8821c_hal.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2016 - 2017 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8821c_spec.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8821c_spec.h
index 9e0dbb033bfa..949f349b66e9 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8821c_spec.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8821c_spec.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2016 - 2017 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8821ce_hal.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8821ce_hal.h
index b1683ad0648b..426002a30c9a 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8821ce_hal.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8821ce_hal.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2016 - 2017 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8821cs_hal.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8821cs_hal.h
index bec0e21f9761..ceecc15f966d 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8821cs_hal.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8821cs_hal.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2016 - 2017 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8821cu_hal.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8821cu_hal.h
index d21d5f5cef7e..aec437224c73 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8821cu_hal.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8821cu_hal.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2016 - 2017 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8822b_hal.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8822b_hal.h
index 201be53ab181..68ad9704172c 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8822b_hal.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8822b_hal.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2015 - 2017 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8822be_hal.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8822be_hal.h
index 38e5d6fa1536..a81445fa166f 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8822be_hal.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8822be_hal.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2015 - 2017 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8822bs_hal.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8822bs_hal.h
index bb92cbc6113e..ffaddee09832 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8822bs_hal.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8822bs_hal.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2015 - 2017 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8822bu_hal.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8822bu_hal.h
index a46fa92caf55..b040f3b334cf 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8822bu_hal.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8822bu_hal.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2015 - 2017 Realtek Corporation.
@@ -38,8 +37,8 @@
 		#ifndef CONFIG_MINIMAL_MEMORY_USAGE
 			#ifdef CONFIG_PLATFORM_NOVATEK_NT72668
 				#define MAX_RECVBUF_SZ (15360) /* 15k */
-				#elif defined(CONFIG_PLATFORM_HISILICON)
-				/* use 16k to workaround for HISILICON platform */
+				#elif defined(CONFIG_PLATFORM_HISILICON) || defined(CONFIG_PLATFORM_ARM_RTD299X)
+				/* use 16k to workaround for HISILICON and RTK TV platform */
 				#define MAX_RECVBUF_SZ (16384)
 			#else
 				#define MAX_RECVBUF_SZ (32768)
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8822c_hal.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8822c_hal.h
index ed83f45a1735..0230d934f9ea 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8822c_hal.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8822c_hal.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2015 - 2017 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8822ce_hal.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8822ce_hal.h
index 9487fde35097..f56566e05fd3 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8822ce_hal.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8822ce_hal.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2015 - 2017 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8822cs_hal.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8822cs_hal.h
index 24fa72b1367c..3e54b2a65e77 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8822cs_hal.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8822cs_hal.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2015 - 2017 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8822cu_hal.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8822cu_hal.h
index 2a354d71df9f..a0accf339356 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8822cu_hal.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtl8822cu_hal.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2015 - 2017 Realtek Corporation.
@@ -38,8 +37,8 @@
 		#ifndef CONFIG_MINIMAL_MEMORY_USAGE
 			#ifdef CONFIG_PLATFORM_NOVATEK_NT72668
 				#define MAX_RECVBUF_SZ (15360) /* 15k */
-				#elif defined(CONFIG_PLATFORM_HISILICON)
-				/* use 16k to workaround for HISILICON platform */
+				#elif defined(CONFIG_PLATFORM_HISILICON) || defined(CONFIG_PLATFORM_ARM_RTD299X)
+				/* use 16k to workaround for HISILICON and RTK TV platform */
 				#define MAX_RECVBUF_SZ (16384)
 			#else
 				#define MAX_RECVBUF_SZ (32768)
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtw_android.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtw_android.h
index 5ea84c36c24b..9bb8e32f5ec5 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtw_android.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtw_android.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtw_ap.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtw_ap.h
index ac7e7181921c..a8dbe3a17da0 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtw_ap.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtw_ap.h
@@ -1,144 +1,150 @@
-/* SPDX-License-Identifier: GPL-2.0 */
-/******************************************************************************
- *
- * Copyright(c) 2007 - 2017 Realtek Corporation.
- *
- * This program is free software; you can redistribute it and/or modify it
- * under the terms of version 2 of the GNU General Public License as
- * published by the Free Software Foundation.
- *
- * This program is distributed in the hope that it will be useful, but WITHOUT
- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
- * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for
- * more details.
- *
- *****************************************************************************/
-#ifndef __RTW_AP_H_
-#define __RTW_AP_H_
-
-
-#ifdef CONFIG_AP_MODE
-
-/* external function */
-extern void rtw_indicate_sta_assoc_event(_adapter *padapter, struct sta_info *psta);
-extern void rtw_indicate_sta_disassoc_event(_adapter *padapter, struct sta_info *psta);
-
-
-void init_mlme_ap_info(_adapter *padapter);
-void free_mlme_ap_info(_adapter *padapter);
-u8 rtw_set_tim_ie(u8 dtim_cnt, u8 dtim_period
-	, const u8 *tim_bmp, u8 tim_bmp_len, u8 *tim_ie);
-/* void update_BCNTIM(_adapter *padapter); */
-void rtw_add_bcn_ie(_adapter *padapter, WLAN_BSSID_EX *pnetwork, u8 index, u8 *data, u8 len);
-void rtw_remove_bcn_ie(_adapter *padapter, WLAN_BSSID_EX *pnetwork, u8 index);
-void _update_beacon(_adapter *padapter, u8 ie_id, u8 *oui, u8 tx, u8 flags, const char *tag);
-#define update_beacon(adapter, ie_id, oui, tx, flags) _update_beacon((adapter), (ie_id), (oui), (tx), (flags), __func__)
-/*update_beacon - (flags) can set to normal enqueue (0) and RTW_CMDF_WAIT_ACK enqueue. 
- (flags) = RTW_CMDF_DIRECTLY  is not currently implemented, it will do normal enqueue.*/
-
-void rtw_ap_update_sta_ra_info(_adapter *padapter, struct sta_info *psta);
-
-void expire_timeout_chk(_adapter *padapter);
-void update_sta_info_apmode(_adapter *padapter, struct sta_info *psta);
-void rtw_start_bss_hdl_after_chbw_decided(_adapter *adapter);
-void start_bss_network(_adapter *padapter, struct createbss_parm *parm);
-int rtw_check_beacon_data(_adapter *padapter, u8 *pbuf,  int len);
-void rtw_ap_restore_network(_adapter *padapter);
-
-#if CONFIG_RTW_MACADDR_ACL
-void rtw_macaddr_acl_init(_adapter *adapter, u8 period);
-void rtw_macaddr_acl_deinit(_adapter *adapter, u8 period);
-void rtw_macaddr_acl_clear(_adapter *adapter, u8 period);
-void rtw_set_macaddr_acl(_adapter *adapter, u8 period, int mode);
-int rtw_acl_add_sta(_adapter *adapter, u8 period, const u8 *addr);
-int rtw_acl_remove_sta(_adapter *adapter, u8 period, const u8 *addr);
-#endif /* CONFIG_RTW_MACADDR_ACL */
-
-u8 rtw_ap_set_sta_key(_adapter *adapter, const u8 *addr, u8 alg, const u8 *key, u8 keyid, u8 gk);
-u8 rtw_ap_set_pairwise_key(_adapter *padapter, struct sta_info *psta);
-int rtw_ap_set_group_key(_adapter *padapter, u8 *key, u8 alg, int keyid);
-int rtw_ap_set_wep_key(_adapter *padapter, u8 *key, u8 keylen, int keyid, u8 set_tx);
-
-#ifdef CONFIG_NATIVEAP_MLME
-void associated_clients_update(_adapter *padapter, u8 updated, u32 sta_info_type);
-void bss_cap_update_on_sta_join(_adapter *padapter, struct sta_info *psta);
-u8 bss_cap_update_on_sta_leave(_adapter *padapter, struct sta_info *psta);
-void sta_info_update(_adapter *padapter, struct sta_info *psta);
-void ap_sta_info_defer_update(_adapter *padapter, struct sta_info *psta);
-u8 ap_free_sta(_adapter *padapter, struct sta_info *psta, bool active, u16 reason, bool enqueue);
-int rtw_sta_flush(_adapter *padapter, bool enqueue);
-int rtw_ap_inform_ch_switch(_adapter *padapter, u8 new_ch, u8 ch_offset);
-void start_ap_mode(_adapter *padapter);
-void stop_ap_mode(_adapter *padapter);
-#endif
-
-void rtw_ap_update_bss_chbw(_adapter *adapter, WLAN_BSSID_EX *bss, u8 ch, u8 bw, u8 offset);
-u8 rtw_ap_chbw_decision(_adapter *adapter, u8 ifbmp, u8 excl_ifbmp
-	, s16 req_ch, s8 req_bw, s8 req_offset, u8 *ch, u8 *bw, u8 *offset, u8 *chbw_allow, bool *set_u_ch);
-
-#ifdef CONFIG_AUTO_AP_MODE
-void rtw_auto_ap_rx_msg_dump(_adapter *padapter, union recv_frame *precv_frame, u8 *ehdr_pos);
-extern void rtw_start_auto_ap(_adapter *adapter);
-#endif /* CONFIG_AUTO_AP_MODE */
-
-void rtw_ap_parse_sta_capability(_adapter *adapter, struct sta_info *sta, u8 *cap);
-u16 rtw_ap_parse_sta_supported_rates(_adapter *adapter, struct sta_info *sta, u8 *tlv_ies, u16 tlv_ies_len);
-u16 rtw_ap_parse_sta_security_ie(_adapter *adapter, struct sta_info *sta, struct rtw_ieee802_11_elems *elems);
-void rtw_ap_parse_sta_wmm_ie(_adapter *adapter, struct sta_info *sta, u8 *tlv_ies, u16 tlv_ies_len);
-void rtw_ap_parse_sta_ht_ie(_adapter *adapter, struct sta_info *sta, struct rtw_ieee802_11_elems *elems);
-void rtw_ap_parse_sta_vht_ie(_adapter *adapter, struct sta_info *sta, struct rtw_ieee802_11_elems *elems);
-void rtw_ap_parse_sta_multi_ap_ie(_adapter *adapter, struct sta_info *sta, u8 *ies, int ies_len);
-
-/* b2u flags */
-#define RTW_AP_B2U_ALL		BIT0
-#define RTW_AP_B2U_GA_UCAST	BIT1 /* WDS group addressed unicast frame, forward only */
-#define RTW_AP_B2U_BCAST	BIT2
-#define RTW_AP_B2U_IP_MCAST	BIT3
-
-#define rtw_ap_src_b2u_policy_chk(flags, da) ( \
-	(flags & RTW_AP_B2U_ALL) \
-	|| ((flags & RTW_AP_B2U_BCAST) && is_broadcast_mac_addr(da)) \
-	|| ((flags & RTW_AP_B2U_IP_MCAST) && (IP_MCAST_MAC(da) || ICMPV6_MCAST_MAC(da))) \
-	)
-
-#define rtw_ap_fwd_b2u_policy_chk(flags, da, gaucst) ( \
-	(flags & RTW_AP_B2U_ALL) \
-	|| ((flags & RTW_AP_B2U_GA_UCAST) && gaucst) \
-	|| ((flags & RTW_AP_B2U_BCAST) && is_broadcast_mac_addr(da)) \
-	|| ((flags & RTW_AP_B2U_IP_MCAST) && (IP_MCAST_MAC(da) || ICMPV6_MCAST_MAC(da))) \
-	)
-
-void dump_ap_b2u_flags(void *sel, _adapter *adapter);
-
-int rtw_ap_addr_resolve(_adapter *adapter, u16 os_qid, struct xmit_frame *xframe, _pkt *pkt, _list *b2u_list);
-int rtw_ap_rx_data_validate_hdr(_adapter *adapter, union recv_frame *rframe, struct sta_info **sta);
-int rtw_ap_rx_msdu_act_check(union recv_frame *rframe
-	, const u8 *da, const u8 *sa
-	, u8 *msdu, enum rtw_rx_llc_hdl llc_hdl
-	, struct xmit_frame **fwd_frame, _list *b2u_list);
-
-void update_bmc_sta(_adapter *padapter);
-
-#ifdef CONFIG_BMC_TX_RATE_SELECT
-void rtw_update_bmc_sta_tx_rate(_adapter *adapter);
-#endif
-
-void rtw_process_ht_action_smps(_adapter *padapter, u8 *ta, u8 ctrl_field);
-void rtw_process_public_act_bsscoex(_adapter *padapter, u8 *pframe, uint frame_len);
-#ifdef CONFIG_80211N_HT
-int rtw_ht_operation_update(_adapter *padapter);
-#endif /* CONFIG_80211N_HT */
-u8 rtw_ap_sta_states_check(_adapter *adapter);
-
-#ifdef CONFIG_FW_HANDLE_TXBCN
-#define rtw_ap_get_nums(adapter)	(adapter_to_dvobj(adapter)->nr_ap_if)
-bool rtw_ap_nums_check(_adapter *adapter);
-#endif
-
-#ifdef CONFIG_SWTIMER_BASED_TXBCN
-void tx_beacon_handlder(struct dvobj_priv *pdvobj);
-void tx_beacon_timer_handlder(void *ctx);
-#endif /*CONFIG_SWTIMER_BASED_TXBCN*/
-
-#endif /* end of CONFIG_AP_MODE */
-#endif /*__RTW_AP_H_*/
+/******************************************************************************
+ *
+ * Copyright(c) 2007 - 2017 Realtek Corporation.
+ *
+ * This program is free software; you can redistribute it and/or modify it
+ * under the terms of version 2 of the GNU General Public License as
+ * published by the Free Software Foundation.
+ *
+ * This program is distributed in the hope that it will be useful, but WITHOUT
+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
+ * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for
+ * more details.
+ *
+ *****************************************************************************/
+#ifndef __RTW_AP_H_
+#define __RTW_AP_H_
+
+
+#ifdef CONFIG_AP_MODE
+
+#define AP_CSA_DISABLE 0
+#define AP_SWITCH_CH_CSA 1
+#define STA_RX_CSA 2
+#define CSA_STA_JOINBSS 3
+#define CSA_IE_REMOVE 0xff
+#define DEFAULT_CSA_CNT 3
+
+/* external function */
+extern void rtw_indicate_sta_assoc_event(_adapter *padapter, struct sta_info *psta);
+extern void rtw_indicate_sta_disassoc_event(_adapter *padapter, struct sta_info *psta);
+
+
+void init_mlme_ap_info(_adapter *padapter);
+void free_mlme_ap_info(_adapter *padapter);
+u8 rtw_set_tim_ie(u8 dtim_cnt, u8 dtim_period
+	, const u8 *tim_bmp, u8 tim_bmp_len, u8 *tim_ie);
+/* void update_BCNTIM(_adapter *padapter); */
+void rtw_add_bcn_ie(_adapter *padapter, WLAN_BSSID_EX *pnetwork, u8 index, u8 *data, u8 len);
+void rtw_remove_bcn_ie(_adapter *padapter, WLAN_BSSID_EX *pnetwork, u8 index);
+void _update_beacon(_adapter *padapter, u8 ie_id, u8 *oui, u8 tx, u8 flags, const char *tag);
+#define update_beacon(adapter, ie_id, oui, tx, flags) _update_beacon((adapter), (ie_id), (oui), (tx), (flags), __func__)
+/*update_beacon - (flags) can set to normal enqueue (0) and RTW_CMDF_WAIT_ACK enqueue. 
+ (flags) = RTW_CMDF_DIRECTLY  is not currently implemented, it will do normal enqueue.*/
+
+void rtw_ap_update_sta_ra_info(_adapter *padapter, struct sta_info *psta);
+
+void expire_timeout_chk(_adapter *padapter);
+void update_sta_info_apmode(_adapter *padapter, struct sta_info *psta);
+void rtw_start_bss_hdl_after_chbw_decided(_adapter *adapter);
+void start_bss_network(_adapter *padapter, struct createbss_parm *parm);
+int rtw_check_beacon_data(_adapter *padapter, u8 *pbuf,  int len);
+void rtw_ap_restore_network(_adapter *padapter);
+
+#if CONFIG_RTW_MACADDR_ACL
+void rtw_macaddr_acl_init(_adapter *adapter, u8 period);
+void rtw_macaddr_acl_deinit(_adapter *adapter, u8 period);
+void rtw_macaddr_acl_clear(_adapter *adapter, u8 period);
+void rtw_set_macaddr_acl(_adapter *adapter, u8 period, int mode);
+int rtw_acl_add_sta(_adapter *adapter, u8 period, const u8 *addr);
+int rtw_acl_remove_sta(_adapter *adapter, u8 period, const u8 *addr);
+#endif /* CONFIG_RTW_MACADDR_ACL */
+
+u8 rtw_ap_set_sta_key(_adapter *adapter, const u8 *addr, u8 alg, const u8 *key, u8 keyid, u8 gk);
+u8 rtw_ap_set_pairwise_key(_adapter *padapter, struct sta_info *psta);
+int rtw_ap_set_group_key(_adapter *padapter, u8 *key, u8 alg, int keyid);
+int rtw_ap_set_wep_key(_adapter *padapter, u8 *key, u8 keylen, int keyid, u8 set_tx);
+
+#ifdef CONFIG_NATIVEAP_MLME
+void associated_clients_update(_adapter *padapter, u8 updated, u32 sta_info_type);
+void bss_cap_update_on_sta_join(_adapter *padapter, struct sta_info *psta);
+u8 bss_cap_update_on_sta_leave(_adapter *padapter, struct sta_info *psta);
+void sta_info_update(_adapter *padapter, struct sta_info *psta);
+void ap_sta_info_defer_update(_adapter *padapter, struct sta_info *psta);
+u8 ap_free_sta(_adapter *padapter, struct sta_info *psta, bool active, u16 reason, bool enqueue);
+int rtw_sta_flush(_adapter *padapter, bool enqueue);
+int rtw_ap_inform_ch_switch(_adapter *padapter, u8 new_ch, u8 ch_offset);
+void start_ap_mode(_adapter *padapter);
+void stop_ap_mode(_adapter *padapter);
+#endif
+
+void rtw_ap_update_bss_chbw(_adapter *adapter, WLAN_BSSID_EX *bss, u8 ch, u8 bw, u8 offset);
+u8 rtw_ap_chbw_decision(_adapter *adapter, u8 ifbmp, u8 excl_ifbmp
+	, s16 req_ch, s8 req_bw, s8 req_offset, u8 *ch, u8 *bw, u8 *offset, u8 *chbw_allow, bool *set_u_ch);
+
+#ifdef CONFIG_AUTO_AP_MODE
+void rtw_auto_ap_rx_msg_dump(_adapter *padapter, union recv_frame *precv_frame, u8 *ehdr_pos);
+extern void rtw_start_auto_ap(_adapter *adapter);
+#endif /* CONFIG_AUTO_AP_MODE */
+
+void rtw_ap_parse_sta_capability(_adapter *adapter, struct sta_info *sta, u8 *cap);
+u16 rtw_ap_parse_sta_supported_rates(_adapter *adapter, struct sta_info *sta, u8 *tlv_ies, u16 tlv_ies_len);
+u16 rtw_ap_parse_sta_security_ie(_adapter *adapter, struct sta_info *sta, struct rtw_ieee802_11_elems *elems);
+void rtw_ap_parse_sta_wmm_ie(_adapter *adapter, struct sta_info *sta, u8 *tlv_ies, u16 tlv_ies_len);
+void rtw_ap_parse_sta_ht_ie(_adapter *adapter, struct sta_info *sta, struct rtw_ieee802_11_elems *elems);
+void rtw_ap_parse_sta_vht_ie(_adapter *adapter, struct sta_info *sta, struct rtw_ieee802_11_elems *elems);
+void rtw_ap_parse_sta_multi_ap_ie(_adapter *adapter, struct sta_info *sta, u8 *ies, int ies_len);
+
+/* b2u flags */
+#define RTW_AP_B2U_ALL		BIT0
+#define RTW_AP_B2U_GA_UCAST	BIT1 /* WDS group addressed unicast frame, forward only */
+#define RTW_AP_B2U_BCAST	BIT2
+#define RTW_AP_B2U_IP_MCAST	BIT3
+
+#define rtw_ap_src_b2u_policy_chk(flags, da) ( \
+	(flags & RTW_AP_B2U_ALL) \
+	|| ((flags & RTW_AP_B2U_BCAST) && is_broadcast_mac_addr(da)) \
+	|| ((flags & RTW_AP_B2U_IP_MCAST) && (IP_MCAST_MAC(da) || ICMPV6_MCAST_MAC(da))) \
+	)
+
+#define rtw_ap_fwd_b2u_policy_chk(flags, da, gaucst) ( \
+	(flags & RTW_AP_B2U_ALL) \
+	|| ((flags & RTW_AP_B2U_GA_UCAST) && gaucst) \
+	|| ((flags & RTW_AP_B2U_BCAST) && is_broadcast_mac_addr(da)) \
+	|| ((flags & RTW_AP_B2U_IP_MCAST) && (IP_MCAST_MAC(da) || ICMPV6_MCAST_MAC(da))) \
+	)
+
+void dump_ap_b2u_flags(void *sel, _adapter *adapter);
+
+int rtw_ap_addr_resolve(_adapter *adapter, u16 os_qid, struct xmit_frame *xframe, _pkt *pkt, _list *f_list);
+int rtw_ap_rx_data_validate_hdr(_adapter *adapter, union recv_frame *rframe, struct sta_info **sta);
+int rtw_ap_rx_msdu_act_check(union recv_frame *rframe
+	, const u8 *da, const u8 *sa
+	, u8 *msdu, enum rtw_rx_llc_hdl llc_hdl
+	, struct xmit_frame **fwd_frame, _list *f_list);
+
+void update_bmc_sta(_adapter *padapter);
+
+#ifdef CONFIG_BMC_TX_RATE_SELECT
+void rtw_update_bmc_sta_tx_rate(_adapter *adapter);
+#endif
+
+void rtw_process_ht_action_smps(_adapter *padapter, u8 *ta, u8 ctrl_field);
+void rtw_process_public_act_bsscoex(_adapter *padapter, u8 *pframe, uint frame_len);
+#ifdef CONFIG_80211N_HT
+int rtw_ht_operation_update(_adapter *padapter);
+#endif /* CONFIG_80211N_HT */
+u8 rtw_ap_sta_states_check(_adapter *adapter);
+
+#ifdef CONFIG_FW_HANDLE_TXBCN
+#define rtw_ap_get_nums(adapter)	(adapter_to_dvobj(adapter)->nr_ap_if)
+bool rtw_ap_nums_check(_adapter *adapter);
+#endif
+
+#ifdef CONFIG_SWTIMER_BASED_TXBCN
+void tx_beacon_handlder(struct dvobj_priv *pdvobj);
+void tx_beacon_timer_handlder(void *ctx);
+#endif /*CONFIG_SWTIMER_BASED_TXBCN*/
+
+#endif /* end of CONFIG_AP_MODE */
+#endif /*__RTW_AP_H_*/
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtw_beamforming.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtw_beamforming.h
index 76be5b92eba3..4c7f006e8254 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtw_beamforming.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtw_beamforming.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtw_br_ext.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtw_br_ext.h
index 40e72a49d030..54ba75ea1df5 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtw_br_ext.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtw_br_ext.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtw_bt_mp.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtw_bt_mp.h
index fc52e9e05e11..93af3c8f068f 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtw_bt_mp.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtw_bt_mp.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtw_btcoex.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtw_btcoex.h
index 48c908d5f480..3361dbef8d94 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtw_btcoex.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtw_btcoex.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2013 - 2017 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtw_btcoex_wifionly.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtw_btcoex_wifionly.h
index ffaf36723fcc..93087ebe09a4 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtw_btcoex_wifionly.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtw_btcoex_wifionly.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2013 - 2017 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtw_byteorder.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtw_byteorder.h
index f117fe317d4e..8e6bb7a6df01 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtw_byteorder.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtw_byteorder.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtw_cmd.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtw_cmd.h
index 1e2436feef30..37a0b40ea52b 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtw_cmd.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtw_cmd.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017 Realtek Corporation.
@@ -365,6 +364,7 @@ struct sitesurvey_parm {
 	u8 bw;		/* 0: use default */
 
 	bool acs; /* aim to trigger channel selection when scan done */
+	u8 reason;
 };
 
 /*
@@ -541,12 +541,27 @@ struct set_ch_parm {
 
 struct SetChannelPlan_param {
 	enum regd_src_t regd_src;
-	const struct country_chplan *country_ent;
+	enum rtw_regd_inr inr;
+	struct country_chplan country_ent;
+	bool has_country;
 	u8 channel_plan;
+#if CONFIG_IEEE80211_BAND_6GHZ
+	u8 channel_plan_6g;
+#endif
+
+#ifdef CONFIG_80211D
+	/* used for regd_src == RTK_PRIV and inr == COUNTRY_IE */
+	struct country_ie_slave_record cisr;
+	bool has_cisr;
+#endif
+
+#ifdef PLATFORM_LINUX
+	bool rtnl_lock_needed;
+#endif
 };
 
 struct get_channel_plan_param {
-	struct get_chplan_resp **resp;
+	struct get_chplan_resp **chplan;
 };
 
 struct LedBlink_param {
@@ -563,6 +578,15 @@ struct RunInThread_param {
 	void *context;
 };
 
+#ifdef CONFIG_WRITE_BCN_LEN_TO_FW
+struct write_bcnlen_param {
+	u16 bcn_len;
+};
+#endif
+
+struct reqtxrpt_param {
+	u8 macid;
+};
 
 #define GEN_CMD_CODE(cmd)	cmd ## _CMD_
 
@@ -675,15 +699,20 @@ u8 rtw_periodic_tsf_update_end_cmd(_adapter *adapter);
 u8 rtw_set_chbw_cmd(_adapter *padapter, u8 ch, u8 bw, u8 ch_offset, u8 flags);
 u8 rtw_iqk_cmd(_adapter *padapter, u8 flags);
 
-u8 rtw_set_chplan_cmd(_adapter *adapter, int flags, u8 chplan, u8 swconfig);
-u8 rtw_set_country_cmd(_adapter *adapter, int flags, const char *country_code, u8 swconfig);
+u8 rtw_set_chplan_cmd(_adapter *adapter, int flags, u8 chplan, u8 chplan_6g, enum rtw_regd_inr inr);
+u8 rtw_set_country_cmd(_adapter *adapter, int flags, const char *country_code, enum rtw_regd_inr inr);
 #ifdef CONFIG_REGD_SRC_FROM_OS
-u8 rtw_sync_os_regd_cmd(_adapter *adapter, int flags, const char *country_code, u8 dfs_region);
+u8 rtw_sync_os_regd_cmd(_adapter *adapter, int flags, const char *country_code, u8 dfs_region, enum rtw_regd_inr inr);
+#endif
+u8 rtw_get_chplan_cmd(_adapter *adapter, int flags, struct get_chplan_resp **chplan);
+
+#ifdef CONFIG_80211D
+u8 rtw_apply_recv_country_ie_cmd(_adapter *adapter, int flags, BAND_TYPE band,u8 opch, const u8 *country_ie);
 #endif
-u8 rtw_get_chplan_cmd(_adapter *adapter, int flags, struct get_chplan_resp **resp);
 
 extern u8 rtw_led_blink_cmd(_adapter *padapter, void *pLed);
 extern u8 rtw_set_csa_cmd(_adapter *adapter);
+extern u8 rtw_set_ap_csa_cmd(_adapter *adapter);
 extern u8 rtw_tdls_cmd(_adapter *padapter, u8 *addr, u8 option);
 
 u8 rtw_mp_cmd(_adapter *adapter, u8 mp_cmd_id, u8 flags);
@@ -728,6 +757,13 @@ u8 rtw_req_per_cmd(_adapter * adapter);
 u8 rtw_tbtx_chk_cmd(_adapter *adapter);
 u8 rtw_tbtx_token_dispatch_cmd(_adapter *adapter);
 #endif
+
+#ifdef CONFIG_WRITE_BCN_LEN_TO_FW
+u8 rtw_write_bcnlen_to_fw_cmd(_adapter *padapter, u16 bcn_len);
+#endif
+
+u8 rtw_reqtxrpt_cmd(_adapter *adapter, u8 macid);
+
 #ifdef CONFIG_CTRL_TXSS_BY_TP
 struct txss_cmd_parm {
 	struct sta_info *sta;
@@ -779,6 +815,9 @@ enum rtw_cmd_id {
 	CMD_SET_MESH_PLINK_STATE, /* 21 */
 	CMD_DO_IQK, /* 22 */
 	CMD_GET_CHANPLAN, /*23*/
+	CMD_WRITE_BCN_LEN, /*24 */
+	CMD_AP_CHANSWITCH, /* 25 AP switch channel */
+	CMD_REQ_TXRPT, /* 26 */
 	CMD_ID_MAX
 };
 
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtw_debug.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtw_debug.h
index 029bf4a1475c..d6a4328248d2 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtw_debug.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtw_debug.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2019 Realtek Corporation.
@@ -388,6 +387,8 @@ ssize_t proc_set_ap_linking_test(struct file *file, const char __user *buffer, s
 
 int proc_get_rx_stat(struct seq_file *m, void *v);
 int proc_get_tx_stat(struct seq_file *m, void *v);
+int proc_get_sta_tx_stat(struct seq_file *m, void *v);
+ssize_t proc_set_sta_tx_stat(struct file *file, const char __user *buffer, size_t count, loff_t *pos, void *data);
 #ifdef CONFIG_AP_MODE
 int proc_get_all_sta_info(struct seq_file *m, void *v);
 #endif /* CONFIG_AP_MODE */
@@ -680,6 +681,11 @@ int proc_get_smps(struct seq_file *m, void *v);
 int proc_get_defs_param(struct seq_file *m, void *v);
 ssize_t proc_set_defs_param(struct file *file, const char __user *buffer, size_t count, loff_t *pos, void *data);
 
+#if defined(CONFIG_CONCURRENT_MODE) && defined(CONFIG_AP_MODE)
+ssize_t proc_set_ap_csa_cnt(struct file *file, const char __user *buffer, size_t count, loff_t *pos, void *data);
+int proc_get_ap_csa_cnt(struct seq_file *m, void *v);
+#endif
+
 #define _drv_always_		1
 #define _drv_emerg_			2
 #define _drv_alert_			3
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtw_eeprom.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtw_eeprom.h
index 02c160dc114d..62304d577f38 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtw_eeprom.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtw_eeprom.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtw_efuse.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtw_efuse.h
index e47e12896d8e..b2972d6edec6 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtw_efuse.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtw_efuse.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017 Realtek Corporation.
@@ -276,7 +275,9 @@ u8 mac_hidden_wl_func_to_hal_wl_func(u8 func);
 
 #ifdef PLATFORM_LINUX
 u8 rtw_efuse_file_read(PADAPTER padapter, u8 *filepath, u8 *buf, u32 len);
+#if !defined(CONFIG_RTW_ANDROID_GKI)
 u8 rtw_efuse_file_store(PADAPTER padapter, u8 *filepath, u8 *buf, u32 len);
+#endif /* !defined(CONFIG_RTW_ANDROID_GKI) */
 #ifdef CONFIG_EFUSE_CONFIG_FILE
 u32 rtw_read_efuse_from_file(const char *path, u8 *buf, int map_size);
 u32 rtw_read_macaddr_from_file(const char *path, u8 *buf);
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtw_event.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtw_event.h
index 517dc8f2690c..13e3f5287116 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtw_event.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtw_event.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtw_ft.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtw_ft.h
index db1c4af4e187..025f19e6729b 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtw_ft.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtw_ft.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtw_ht.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtw_ht.h
index 8b1536b5430c..8237bbe76603 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtw_ht.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtw_ht.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtw_io.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtw_io.h
index d79fd07f4d73..50291e1b88c7 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtw_io.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtw_io.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtw_ioctl.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtw_ioctl.h
index c184da8532b4..1143d97104d8 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtw_ioctl.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtw_ioctl.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtw_ioctl_query.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtw_ioctl_query.h
index c5e4787d39cd..7badcddfbbd4 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtw_ioctl_query.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtw_ioctl_query.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtw_ioctl_set.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtw_ioctl_set.h
index a846b6244c79..aeff4535208c 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtw_ioctl_set.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtw_ioctl_set.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2019 Realtek Corporation.
@@ -34,8 +33,8 @@ u8 rtw_validate_ssid(NDIS_802_11_SSID *ssid);
 
 u16 rtw_get_cur_max_rate(_adapter *adapter);
 int rtw_set_scan_mode(_adapter *adapter, RT_SCAN_TYPE scan_mode);
-int rtw_set_channel_plan(_adapter *adapter, u8 channel_plan);
-int rtw_set_country(_adapter *adapter, const char *country_code);
+int rtw_set_channel_plan(_adapter *adapter, u8 channel_plan, u8 chplan_6g, enum rtw_regd_inr inr);
+int rtw_set_country(_adapter *adapter, const char *country_code, enum rtw_regd_inr inr);
 int rtw_set_band(_adapter *adapter, u8 band);
 
 #endif
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtw_iol.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtw_iol.h
index 21e1af8a61ed..fa35a59c75c7 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtw_iol.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtw_iol.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtw_mbo.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtw_mbo.h
index 2c8a6a7e6ae5..9524cb6c6e11 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtw_mbo.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtw_mbo.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtw_mcc.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtw_mcc.h
index d895b5893ff2..5d2198b03063 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtw_mcc.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtw_mcc.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2015 - 2017 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtw_mem.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtw_mem.h
index ec1bdc399cb6..9e33ed519ed6 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtw_mem.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtw_mem.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2019 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtw_mi.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtw_mi.h
index f535eb224813..e4f240e57ccc 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtw_mi.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtw_mi.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2019 Realtek Corporation.
@@ -184,8 +183,11 @@ void rtw_mi_buddy_set_scan_deny(_adapter *adapter, u32 ms);
 u8 rtw_mi_is_scan_deny(_adapter *adapter);
 u8 rtw_mi_buddy_is_scan_deny(_adapter *adapter);
 
+#ifdef CONFIG_AP_MODE
 void rtw_mi_beacon_update(_adapter *padapter);
 void rtw_mi_buddy_beacon_update(_adapter *padapter);
+void rtw_mi_update_csa(_adapter *adapter);
+#endif
 
 #ifndef CONFIG_MI_WITH_MBSSID_CAM
 void rtw_mi_hal_dump_macaddr(void *sel, _adapter *padapter);
@@ -303,4 +305,5 @@ u8 rtw_mi_get_ld_sta_ifbmp(_adapter *adapter);
 u8 rtw_mi_get_ap_mesh_ifbmp(_adapter *adapter);
 void rtw_mi_update_ap_bmc_camid(_adapter *padapter, u8 camid_a, u8 camid_b);
 
+_adapter *rtw_mi_get_linking_adapter(_adapter *adapter);
 #endif /*__RTW_MI_H_*/
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtw_mlme.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtw_mlme.h
index 6e39dd6d9f00..197b4bc5ec6d 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtw_mlme.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtw_mlme.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2019 Realtek Corporation.
@@ -585,6 +584,7 @@ struct mlme_priv {
 	u8 roam_rssi_threshold;
 	systime last_roaming;
 	bool need_to_roam;
+        _lock   clnt_auth_lock;        /* protect the join operation in rx_tasklet & cmd_thread */
 #endif
 
 	u32 defs_lmt_sta;
@@ -604,6 +604,9 @@ struct mlme_priv {
 
 	struct wlan_network	cur_network;
 	struct wlan_network *cur_network_scanned;
+#if defined(CONFIG_CONCURRENT_MODE) && defined(CONFIG_AP_MODE)
+	struct wlan_network candidate_network;
+#endif
 
 	/* bcn check info */
 	struct beacon_keys cur_beacon_keys; /* save current beacon keys */
@@ -611,6 +614,7 @@ struct mlme_priv {
 	struct beacon_keys new_beacon_keys; /* save new beacon keys */
 	u8 new_beacon_cnts; /* if new_beacon_cnts >= threshold, ap beacon is changed */
 #endif
+	u8 bcn_cnts_after_csa;
 
 #ifdef CONFIG_ARP_KEEP_ALIVE
 	/* for arp offload keep alive */
@@ -640,6 +644,15 @@ struct mlme_priv {
 
 	struct qos_priv qospriv;
 
+#ifdef CONFIG_80211D
+	u8 *recv_country_ie;
+	u32 recv_country_ie_len;
+#endif
+
+#ifdef CONFIG_ACTIVE_TPC_REPORT
+	bool active_tpc_report;
+#endif
+
 #ifdef CONFIG_80211N_HT
 
 	/* Number of non-HT AP/stations */
@@ -683,8 +696,8 @@ struct mlme_priv {
 	u8 *wps_probe_req_ie;
 	u32 wps_probe_req_ie_len;
 
-	u8 ext_capab_ie_data[8];/*currently for ap mode only*/
-	u8 ext_capab_ie_len;
+	u8 ext_capab_ie_data[WLAN_EID_EXT_CAP_MAX_LEN];/*currently for ap mode only*/
+	u8 ext_capab_ie_len; /* content length */
 
 #if defined(CONFIG_AP_MODE) && defined (CONFIG_NATIVEAP_MLME)
 	/* Number of associated Non-ERP stations (i.e., stations using 802.11b
@@ -769,9 +782,6 @@ struct mlme_priv {
 	u8 ori_ch;
 	u8 ori_bw;
 	u8 ori_offset;
-	#ifdef CONFIG_80211AC_VHT
-	u8 ori_vht_en;
-	#endif
 
 	u8 ap_isolate;
 #endif /* #if defined (CONFIG_AP_MODE) && defined (CONFIG_NATIVEAP_MLME) */
@@ -846,11 +856,18 @@ struct mlme_priv {
 		adapter->mlmepriv.auto_scan_int_ms = ms; \
 	} while (0)
 
+#ifdef CONFIG_ACTIVE_TPC_REPORT
+#define MLME_ACTIVE_TPC_REPORT(mlme) (mlme->active_tpc_report)
+#else
+#define MLME_ACTIVE_TPC_REPORT(mlme) 0
+#endif
+
 #define RTW_AUTO_SCAN_REASON_UNSPECIFIED		0
 #define RTW_AUTO_SCAN_REASON_2040_BSS			BIT0
 #define RTW_AUTO_SCAN_REASON_ACS				BIT1
 #define RTW_AUTO_SCAN_REASON_ROAM				BIT2
-#define RTW_AUTO_SCAN_REASON_MESH_OFFCH_CAND	BIT3
+#define RTW_AUTO_SCAN_REASON_ROAM_ACTIVE			BIT3
+#define RTW_AUTO_SCAN_REASON_MESH_OFFCH_CAND		BIT4
 
 void rtw_mlme_reset_auto_scan_int(_adapter *adapter, u8 *reason);
 
@@ -1102,12 +1119,13 @@ void rtw_joinbss_reset(_adapter *padapter);
 #ifdef CONFIG_80211N_HT
 void	rtw_ht_use_default_setting(_adapter *padapter);
 void rtw_build_wmm_ie_ht(_adapter *padapter, u8 *out_ie, uint *pout_len);
-unsigned int rtw_restructure_ht_ie(_adapter *padapter, u8 *in_ie, u8 *out_ie, uint in_len, uint *pout_len, u8 channel);
+unsigned int rtw_restructure_ht_ie(_adapter *padapter, u8 *in_ie, u8 *out_ie, uint in_len, uint *pout_len, u8 channel, struct country_chplan *req_chplan);
 void rtw_update_ht_cap(_adapter *padapter, u8 *pie, uint ie_len, u8 channel);
 void rtw_issue_addbareq_cmd(_adapter *padapter, struct xmit_frame *pxmitframe, u8 issue_when_busy);
-void rtw_append_exented_cap(_adapter *padapter, u8 *out_ie, uint *pout_len);
 #endif
 
+void rtw_append_extended_cap(_adapter *padapter, u8 *out_ie, uint *pout_len);
+
 int rtw_is_same_ibss(_adapter *adapter, struct wlan_network *pnetwork);
 int is_same_network(WLAN_BSSID_EX *src, WLAN_BSSID_EX *dst, u8 feature);
 
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtw_mlme_ext.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtw_mlme_ext.h
index 05eaab784f5b..7088ed8418ca 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtw_mlme_ext.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtw_mlme_ext.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2019 Realtek Corporation.
@@ -341,6 +340,10 @@ struct mlme_ext_info {
 	NDIS_802_11_RATES_EX	SupportedRates_infra_ap;
 	u8 ht_vht_received;/*ht_vht_received used to show debug msg BIT(0):HT BIT(1):VHT */
 #endif /* ROKU_PRIVATE */
+
+#ifdef CONFIG_WRITE_BCN_LEN_TO_FW
+	u16 last_bcn_len;
+#endif
 };
 
 enum {
@@ -356,7 +359,8 @@ enum {
 
 /* The channel information about this channel including joining, scanning, and power constraints. */
 typedef struct _RT_CHANNEL_INFO {
-	u8				ChannelNum;		/* The channel number. */
+	u8 band; /* BAND_TYPE */
+	u8 ChannelNum; /* The channel number. */
 
 	/*
 	* Bitmap and its usage:
@@ -389,12 +393,18 @@ typedef struct _RT_CHANNEL_INFO {
 
 #if CONFIG_TXPWR_LIMIT
 void rtw_txpwr_init_regd(struct rf_ctl_t *rfctl);
+bool rtw_rfctl_is_current_txpwr_lmt(struct rf_ctl_t *rfctl, const char *name);
 #endif
 int rtw_rfctl_init(_adapter *adapter);
 void rtw_rfctl_deinit(_adapter *adapter);
+void rtw_rfctl_decide_init_chplan(struct rf_ctl_t *rfctl,
+	const char *hw_alpha2, u8 hw_chplan, u8 hw_chplan_6g, u8 hw_force_chplan);
 void rtw_rfctl_chplan_init(_adapter *adapter);
+bool rtw_rfctl_is_disable_sw_channel_plan(struct dvobj_priv *dvobj);
 void rtw_rfctl_update_op_mode(struct rf_ctl_t *rfctl, u8 ifbmp_mod, u8 if_op);
 
+bool rtw_rfctl_reg_allow_beacon_hint(struct rf_ctl_t *rfctl);
+
 u8 rtw_rfctl_get_dfs_domain(struct rf_ctl_t *rfctl);
 u8 rtw_rfctl_dfs_domain_unknown(struct rf_ctl_t *rfctl);
 
@@ -426,25 +436,38 @@ bool rtw_choose_shortest_waiting_ch(struct rf_ctl_t *rfctl, u8 sel_ch, u8 max_bw
 
 struct get_chplan_resp {
 	enum regd_src_t regd_src;
-	bool has_country;
-	struct country_chplan country_ent;
+	enum rtw_regd_inr regd_inr;
+	char alpha2[2];
 	u8 channel_plan;
+#if CONFIG_IEEE80211_BAND_6GHZ
+	u8 chplan_6g;
+#endif
+
 #if CONFIG_TXPWR_LIMIT
-	const char *regd_name;
+	const char *txpwr_lmt_name[BAND_MAX];
+#endif
+	u8 edcca_mode_2g;
+#if CONFIG_IEEE80211_BAND_5GHZ
+	u8 edcca_mode_5g;
+#endif
+#if CONFIG_IEEE80211_BAND_6GHZ
+	u8 edcca_mode_6g;
 #endif
 #ifdef CONFIG_DFS_MASTER
 	u8 dfs_domain;
 #endif
+	u8 proto_en;
 	u8 chset_num;
 	RT_CHANNEL_INFO chset[0];
 };
 
 #ifdef CONFIG_PROC_DEBUG
-void dump_chset(void *sel, RT_CHANNEL_INFO *ch_set, u8 chset_num);
+void dump_cur_country(void *sel, struct rf_ctl_t *rfctl);
 void dump_cur_chset(void *sel, struct rf_ctl_t *rfctl);
 #endif
 
 int rtw_chset_search_ch(RT_CHANNEL_INFO *ch_set, const u32 ch);
+int rtw_chset_search_ch_by_band(RT_CHANNEL_INFO *ch_set, BAND_TYPE band, const u32 ch);
 u8 rtw_chset_is_chbw_valid(RT_CHANNEL_INFO *ch_set, u8 ch, u8 bw, u8 offset
 	, bool allow_primary_passive, bool allow_passive);
 void rtw_chset_sync_chbw(RT_CHANNEL_INFO *ch_set, u8 *req_ch, u8 *req_bw, u8 *req_offset
@@ -518,6 +541,11 @@ struct mlme_ext_priv {
 #endif
 
 	struct ss_res		sitesurvey_res;
+#ifdef CONFIG_RTW_ROAM_QUICKSCAN
+	u8      quickscan_next;
+	u8      roam_ch_num;
+	struct  rtw_ieee80211_channel roam_ch[RTW_CHANNEL_SCAN_AMOUNT];
+#endif
 	struct mlme_ext_info	mlmext_info;/* for sta/adhoc mode, including current scanning/connecting/connected related info.
                                                       * for ap mode, network includes ap's cap_info */
 	_timer		survey_timer;
@@ -538,7 +566,9 @@ struct mlme_ext_priv {
 	systime last_scan_time;
 	u8	scan_abort;
 	u8 join_abort;
+
 	u8	tx_rate; /* TXRATE when USERATE is set. */
+	RATE_SECTION tx_rate_section; /* decided by tx_rate */
 
 	u32	retry; /* retry for issue probereq */
 
@@ -557,9 +587,6 @@ struct mlme_ext_priv {
 	unsigned char bstart_bss;
 #endif
 
-#ifdef CONFIG_80211D
-	u8 update_channel_plan_by_ap_done;
-#endif
 	/* recv_decache check for Action_public frame */
 	u8 action_public_dialog_token;
 	u16	 action_public_rxseq;
@@ -808,6 +835,10 @@ void update_beacon_info(_adapter *padapter, u8 *pframe, uint len, struct sta_inf
 #if CONFIG_DFS
 void process_csa_ie(_adapter *padapter, u8 *ies, uint ies_len);
 #endif
+#ifdef CONFIG_80211D
+bool rtw_iface_accept_country_ie(_adapter *adapter);
+void process_country_ie(_adapter *adapter, u8 *ies, uint ies_len);
+#endif
 void update_capinfo(PADAPTER Adapter, u16 updateCap);
 void update_wireless_mode(_adapter *padapter);
 void update_tx_basic_rate(_adapter *padapter, u8 modulation);
@@ -975,6 +1006,10 @@ void start_clnt_auth(_adapter *padapter);
 void start_clnt_join(_adapter *padapter);
 void start_create_ibss(_adapter *padapter);
 
+#if defined(CONFIG_LAYER2_ROAMING) && defined(CONFIG_RTW_80211K)
+void rtw_roam_nb_discover(_adapter *padapter, u8 bfroce);
+#endif
+
 unsigned int OnAssocReq(_adapter *padapter, union recv_frame *precv_frame);
 unsigned int OnAssocRsp(_adapter *padapter, union recv_frame *precv_frame);
 unsigned int OnProbeReq(_adapter *padapter, union recv_frame *precv_frame);
@@ -1146,8 +1181,11 @@ u8 rtw_set_chplan_hdl(_adapter *padapter, unsigned char *pbuf);
 u8 rtw_get_chplan_hdl(_adapter *padapter, unsigned char *pbuf);
 u8 led_blink_hdl(_adapter *padapter, unsigned char *pbuf);
 u8 set_csa_hdl(_adapter *padapter, unsigned char *pbuf);	/* Kurt: Handling DFS channel switch announcement ie. */
+u8 set_ap_csa_hdl(_adapter *adapter, unsigned char *pbuf);
 u8 tdls_hdl(_adapter *padapter, unsigned char *pbuf);
 u8 run_in_thread_hdl(_adapter *padapter, u8 *pbuf);
+u8 rtw_write_bcnlen_hdl(_adapter *padapter, u8 *pbuf);
+u8 rtw_reqtxrpt_cmd_hdl(_adapter *adapter, u8 *pbuf);
 
 int rtw_sae_preprocess(_adapter *adapter, const u8 *buf, u32 len, u8 tx);
 
@@ -1197,6 +1235,9 @@ struct rtw_cmd wlancmds[] = {
 	GEN_MLME_EXT_HANDLER(rtw_mesh_set_plink_state_cmd_hdl, NULL) /*CMD_SET_MESH_PLINK_STATE*/
 	GEN_MLME_EXT_HANDLER(rtw_iqk_hdl, NULL) /*CMD_DO_IQK*/
 	GEN_MLME_EXT_HANDLER(rtw_get_chplan_hdl, NULL) /* CMD_GET_CHANPLAN */
+	GEN_MLME_EXT_HANDLER(rtw_write_bcnlen_hdl, NULL) /* CMD_WRITE_BCN_LEN */
+	GEN_MLME_EXT_HANDLER(set_ap_csa_hdl, NULL) /* CMD_AP_CHANSWITCH */
+	GEN_MLME_EXT_HANDLER(rtw_reqtxrpt_cmd_hdl, NULL) /* CMD_REQ_TXRPT */
 };
 #endif
 
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtw_mp.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtw_mp.h
index 5fb634a79960..21689ca3527b 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtw_mp.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtw_mp.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017 Realtek Corporation.
@@ -311,6 +310,7 @@ enum {
 #endif
 	MP_SD_IREAD,
 	MP_SD_IWRITE,
+	GET_IC_TYPE,
 };
 
 struct mp_priv {
@@ -347,6 +347,7 @@ struct mp_priv {
 	u8 bandwidth;
 	u8 prime_channel_offset;
 	u8 txpoweridx;
+	s8 txpower_dbm_offset;
 	u8 rateidx;
 	u32 preamble;
 	/*	u8 modem; */
@@ -393,6 +394,7 @@ struct mp_priv {
 	BOOLEAN mplink_btx;
 
 	bool tssitrk_on;
+	bool efuse_update_on;
 	bool efuse_update_file;
 	char efuse_file_path[128];
 };
@@ -425,7 +427,8 @@ typedef struct _MP_FIRMWARE {
 } RT_MP_FIRMWARE, *PRT_MP_FIRMWARE;
 
 
-
+#define GET_MPPRIV(__padapter) (struct mp_priv*)(&(((struct _ADAPTER*)__padapter)->mppriv))
+#define GET_EFUSE_UPDATE_ON(_padapter)	(GET_MPPRIV(_padapter)->efuse_update_on)
 
 /* *********************************************************************** */
 
@@ -747,6 +750,9 @@ u32 mp_join(PADAPTER padapter, u8 mode);
 u32 hal_mpt_query_phytxok(PADAPTER	pAdapter);
 u32 mpt_get_tx_power_finalabs_val(PADAPTER	padapter, u8 rf_path);
 void mpt_trigger_tssi_tracking(PADAPTER pAdapter, u8 rf_path);
+u32 hal_mpt_tssi_turn_target_power(PADAPTER padapter, s16 power_offset, u8 path);
+void hal_mpt_tssi_set_power_offset(PADAPTER padapter, s16 power_offset, u8 path);
+
 
 
 void
@@ -909,9 +915,11 @@ int rtw_bt_efuse_mask_file(struct net_device *dev,
 int rtw_efuse_file_map(struct net_device *dev,
 		struct iw_request_info *info,
 		union iwreq_data *wrqu, char *extra);
+#if !defined(CONFIG_RTW_ANDROID_GKI)
 int rtw_efuse_file_map_store(struct net_device *dev,
 		struct iw_request_info *info,
 		union iwreq_data *wrqu, char *extra);
+#endif /* !defined(CONFIG_RTW_ANDROID_GKI) */
 int rtw_bt_efuse_file_map(struct net_device *dev,
 		struct iw_request_info *info,
 		union iwreq_data *wrqu, char *extra);
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtw_mp_phy_regdef.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtw_mp_phy_regdef.h
index 330ecbfdd957..be627800e522 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtw_mp_phy_regdef.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtw_mp_phy_regdef.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtw_odm.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtw_odm.h
index 3c94ed8b0441..21228083ab49 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtw_odm.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtw_odm.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2013 - 2017 Realtek Corporation.
@@ -77,6 +76,7 @@ void rtw_odm_init_ic_type(_adapter *adapter);
 void rtw_odm_adaptivity_config_msg(void *sel, _adapter *adapter);
 
 bool rtw_odm_adaptivity_needed(_adapter *adapter);
+void rtw_odm_adaptivity_update(struct dvobj_priv *dvobj);
 void rtw_odm_adaptivity_parm_msg(void *sel, _adapter *adapter);
 void rtw_odm_adaptivity_parm_set(_adapter *adapter, s8 th_l2h_ini, s8 th_edcca_hl_diff);
 void rtw_odm_get_perpkt_rssi(void *sel, _adapter *adapter);
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtw_p2p.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtw_p2p.h
index acab5e6190f2..8d929ad61c43 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtw_p2p.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtw_p2p.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtw_pwrctrl.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtw_pwrctrl.h
index e7de3eed7171..04fb617e27d0 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtw_pwrctrl.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtw_pwrctrl.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017 Realtek Corporation.
@@ -283,7 +282,7 @@ typedef struct pno_nlo_info {
 
 typedef struct pno_ssid {
 	u32		SSID_len;
-	u8		SSID[32];
+	u8		SSID[WLAN_SSID_MAXLEN];
 } pno_ssid_t;
 
 typedef struct pno_ssid_list {
@@ -297,6 +296,7 @@ typedef struct pno_scan_channel_info {
 	u8	active;				/* set 1 means active scan, or pasivite scan. */
 } pno_scan_channel_info_t;
 
+#ifndef RTW_HALMAC
 typedef struct pno_scan_info {
 	u8	enableRFE;			/* Enable RFE */
 	u8	period_scan_time;		/* exclusive with fast_scan_period and slow_scan_period */
@@ -309,6 +309,7 @@ typedef struct pno_scan_info {
 	u64	rfe_type;			/* rfe_type && 0x00000000000000ff */
 	pno_scan_channel_info_t ssid_channel_info[MAX_SCAN_LIST_COUNT];
 } pno_scan_info_t;
+#endif
 #endif /* CONFIG_PNO_SUPPORT */
 
 #ifdef CONFIG_LPS_POFF
@@ -513,10 +514,15 @@ struct pwrctrl_priv {
 	u8		wowlan_pattern_idx;
 	u64		wowlan_fw_iv;
 	struct rtl_priv_pattern	patterns[MAX_WKFM_CAM_NUM];
+#ifdef CONFIG_WOW_PATTERN_IN_TXFIFO
+	u8		pattern_rsvd_page_loc;
+#endif
 #ifdef CONFIG_PNO_SUPPORT
 	u8		pno_inited;
 	pno_nlo_info_t	*pnlo_info;
+	#ifndef RTW_HALMAC
 	pno_scan_info_t	*pscan_info;
+	#endif
 	pno_ssid_list_t	*pno_ssid_list;
 #endif /* CONFIG_PNO_SUPPORT */
 #ifdef CONFIG_WOW_PATTERN_HW_CAM
@@ -666,6 +672,7 @@ extern s32 rtw_register_evt_alive(PADAPTER padapter);
 extern void rtw_unregister_evt_alive(PADAPTER padapter);
 extern void cpwm_int_hdl(PADAPTER padapter, struct reportpwrstate_parm *preportpwrstate);
 extern void LPS_Leave_check(PADAPTER padapter);
+void rtw_set_lps_lclk(_adapter *padapter, u8 enable);
 #endif
 
 extern void LeaveAllPowerSaveMode(PADAPTER Adapter);
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtw_qos.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtw_qos.h
index c3011b4148d3..8e1d013e128f 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtw_qos.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtw_qos.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtw_recv.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtw_recv.h
index aeb1ddfe1b11..188457b85376 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtw_recv.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtw_recv.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017 Realtek Corporation.
@@ -78,6 +77,7 @@ extern u8 rtw_rfc1042_header[];
 
 enum addba_rsp_ack_state {
 	RTW_RECV_ACK_OR_TIMEOUT,
+	RTW_RECV_REORDER_WOW
 };
 
 /* for Rx reordering buffer control */
@@ -301,7 +301,86 @@ struct rtw_rx_ring {
 };
 #endif
 
-
+struct rtw_ip_dbg_cnt_statistic {
+	u8 enabled;
+	u8 ip[4];
+	u16 dst_port;
+	u32 ip_cnt;
+	u32 tcp_cnt;
+	u32 udp_cnt;
+	u32 frag_cnt;
+	u8 iperf_ver;	/* bit7 for debug enable */
+	u32 iperf_seq;
+	u32 iperf_err_cnt;
+	u32 iperf_out_of_order_cnt;
+
+	u32 ip_seq_chk;
+	u16 frag_offset_chk, max_frag_offset_chk;
+	u8 defrag_done;
+
+#define need_to_chk_iudp_cnt(p, s) \
+	((GET_IPV4_PROTOCOL((p)) == 0x11) && \
+	((((struct rtw_ip_dbg_cnt_statistic *)(s))->iperf_ver & 0x7f) > 0))
+#define ip_cnt_inc(s)	\
+	((struct rtw_ip_dbg_cnt_statistic *)(s))->ip_cnt++
+#define frag_cnt_inc(s)	\
+	((struct rtw_ip_dbg_cnt_statistic *)(s))->frag_cnt++
+#define tcp_udp_cnt_inc(p, s)	\
+	do {	\
+		if (GET_IPV4_PROTOCOL(p) == 0x06)	\
+			((struct rtw_ip_dbg_cnt_statistic *)(s))->tcp_cnt++;	\
+		else if (GET_IPV4_PROTOCOL(p) == 0x11)	\
+			((struct rtw_ip_dbg_cnt_statistic *)(s))->udp_cnt++;	\
+	} while(0)
+#define iudp_err_cnt_inc(s, str)	\
+	do {	\
+		struct rtw_ip_dbg_cnt_statistic *ps = \
+			(struct rtw_ip_dbg_cnt_statistic *)(s);	\
+			ps->iperf_err_cnt++;	\
+		if (((ps->iperf_ver & 0xf0) >> 7) > 0)	\
+			RTW_INFO("%s : %s-err iperf_err_cnt(%u), iperf_seq(%u)\n"\
+			,__func__, (const u8 *)(str), ps->iperf_err_cnt, ps->iperf_seq);	\
+	} while(0)
+#define iudp_err_cnt_update(s, c)	\
+	do {	\
+		struct rtw_ip_dbg_cnt_statistic *ps = \
+			(struct rtw_ip_dbg_cnt_statistic *)(s);	\
+		ps->iperf_err_cnt += ((c - 1) - ps->iperf_seq);	\
+		if (((ps->iperf_ver & 0xf0) >> 7) > 0)	\
+			RTW_INFO("%s : iperf_err_cnt(%u), cur_iperf_seq(%u), last_iperf_seq(%u)\n"\
+			,__func__, ps->iperf_err_cnt, (c), ps->iperf_seq);	\
+	} while(0)
+#define iperf_out_of_order_cnt_inc(s, c)	\
+	do {	\
+		struct rtw_ip_dbg_cnt_statistic *ps = \
+			(struct rtw_ip_dbg_cnt_statistic *)(s);	\
+		ps->iperf_out_of_order_cnt++;	\
+		if (((ps->iperf_ver & 0xf0) >> 7) > 0)	\
+			RTW_INFO("%s : iperf_out_of_order_cnt(%u), cur_iperf_seq(%u), last_iperf_seq(%u)\n"\
+			,__func__, ps->iperf_out_of_order_cnt, (c), ps->iperf_seq);	\
+	} while(0)
+
+#define iudp_ip_seq_set(s, v)	\
+	(((struct rtw_ip_dbg_cnt_statistic *)(s))->iperf_seq = (v))
+#define iudp_ip_seq_get(s)	\
+	((struct rtw_ip_dbg_cnt_statistic *)(s))->iperf_seq
+#define iudp_defrag_done_set(s, v)	\
+	(((struct rtw_ip_dbg_cnt_statistic *)(s))->defrag_done = (v))
+#define iudp_defrag_done_get(s)	\
+	((struct rtw_ip_dbg_cnt_statistic *)(s))->defrag_done
+#define iudp_ip_seq_chk_set(s, v)	\
+	(((struct rtw_ip_dbg_cnt_statistic *)(s))->ip_seq_chk = (v))
+#define iudp_ip_seq_chk_get(s)	\
+	((struct rtw_ip_dbg_cnt_statistic *)(s))->ip_seq_chk
+#define iudp_frag_offset_chk_set(s, v)	\
+	(((struct rtw_ip_dbg_cnt_statistic *)(s))->frag_offset_chk = (v))
+#define iudp_frag_offset_chk_get(s)	\
+	((struct rtw_ip_dbg_cnt_statistic *)(s))->frag_offset_chk
+#define iudp_max_frag_offset_chk_set(s, v)	\
+	(((struct rtw_ip_dbg_cnt_statistic *)(s))->max_frag_offset_chk = (v))
+#define iudp_max_frag_offset_chk_get(s)	\
+	((struct rtw_ip_dbg_cnt_statistic *)(s))->max_frag_offset_chk
+};	/* end of struct rtw_ip_dbg_cnt_statistic */
 
 /*
 accesser of recv_priv: rtw_recv_entry(dispatch / passive level); recv_thread(passive) ; returnpkt(dispatch)
@@ -365,11 +444,16 @@ struct recv_priv {
 	uint  rx_smallpacket_crcerr;
 	uint  rx_middlepacket_crcerr;
 
+	struct rtw_ip_dbg_cnt_statistic ip_statistic;
+
 #ifdef CONFIG_USB_HCI
 	/* u8 *pallocated_urb_buf; */
 	_sema allrxreturnevt;
 	uint	ff_hwaddr;
 	ATOMIC_T	rx_pending_cnt;
+#ifdef CONFIG_USB_PROTECT_RX_CLONED_SKB
+	struct sk_buff_head rx_cloned_skb_queue;
+#endif
 
 #ifdef CONFIG_USB_INTERRUPT_IN_PIPE
 #ifdef PLATFORM_LINUX
@@ -581,7 +665,7 @@ struct recv_frame_hdr {
 	u8 fragcnt;
 
 	int frame_tag;
-
+	int keytrack;
 	struct rx_pkt_attrib attrib;
 
 	uint  len;
@@ -800,6 +884,7 @@ __inline static u8 *recvframe_pull_tail(union recv_frame *precvframe, sint sz)
 
 }
 
+#if 0
 __inline static union recv_frame *rxmem_to_recvframe(u8 *rxmem)
 {
 	/* due to the design of 2048 bytes alignment of recv_frame, we can reference the union recv_frame */
@@ -839,6 +924,7 @@ __inline static u8 *pkt_to_recvdata(_pkt *pkt)
 	return	precv_frame->u.hdr.rx_data;
 
 }
+#endif
 
 
 __inline static sint get_recvframe_len(union recv_frame *precvframe)
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtw_rf.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtw_rf.h
index f3fdf8defb0c..7313f3c95e6f 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtw_rf.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtw_rf.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017 Realtek Corporation.
@@ -24,18 +23,30 @@
 #define SHORT_SLOT_TIME					9
 #define NON_SHORT_SLOT_TIME				20
 
-#define CENTER_CH_2G_40M_NUM	9
 #define CENTER_CH_2G_NUM		14
+#define CENTER_CH_2G_40M_NUM	9
+
 #define CENTER_CH_5G_20M_NUM	28	/* 20M center channels */
 #define CENTER_CH_5G_40M_NUM	14	/* 40M center channels */
 #define CENTER_CH_5G_80M_NUM	7	/* 80M center channels */
 #define CENTER_CH_5G_160M_NUM	3	/* 160M center channels */
 #define CENTER_CH_5G_ALL_NUM	(CENTER_CH_5G_20M_NUM + CENTER_CH_5G_40M_NUM + CENTER_CH_5G_80M_NUM)
 
-#define	MAX_CHANNEL_NUM_2G	CENTER_CH_2G_NUM
-#define	MAX_CHANNEL_NUM_5G	CENTER_CH_5G_20M_NUM
-#define	MAX_CHANNEL_NUM		(MAX_CHANNEL_NUM_2G + MAX_CHANNEL_NUM_5G)
-#define MAX_CHANNEL_NUM_OF_BAND rtw_max(MAX_CHANNEL_NUM_2G, MAX_CHANNEL_NUM_5G)
+#define CENTER_CH_6G_20M_NUM	64	/* 20M center channels */
+#define CENTER_CH_6G_40M_NUM	32	/* 40M center channels */
+#define CENTER_CH_6G_80M_NUM	16	/* 80M center channels */
+#define CENTER_CH_6G_160M_NUM	8	/* 160M center channels */
+
+#define	MAX_CHANNEL_NUM_2G		CENTER_CH_2G_NUM
+#define	MAX_CHANNEL_NUM_5G		CENTER_CH_5G_20M_NUM
+#define MAX_CHANNEL_NUM_6G		CENTER_CH_6G_20M_NUM
+#define MAX_CHANNEL_NUM_2G_5G	(MAX_CHANNEL_NUM_2G + MAX_CHANNEL_NUM_5G)
+
+#define	MAX_CHANNEL_NUM		( \
+	MAX_CHANNEL_NUM_2G \
+	+ (CONFIG_IEEE80211_BAND_5GHZ ? MAX_CHANNEL_NUM_5G : 0) \
+	+ (CONFIG_IEEE80211_BAND_6GHZ ? MAX_CHANNEL_NUM_6G : 0) \
+	)
 
 extern u8 center_ch_2g[CENTER_CH_2G_NUM];
 extern u8 center_ch_2g_40m[CENTER_CH_2G_40M_NUM];
@@ -97,6 +108,9 @@ enum	_REG_PREAMBLE_MODE {
 typedef enum _BAND_TYPE {
 	BAND_ON_2_4G = 0,
 	BAND_ON_5G = 1,
+#if CONFIG_IEEE80211_BAND_6GHZ
+	BAND_ON_6G = 2,
+#endif
 	BAND_MAX,
 } BAND_TYPE, *PBAND_TYPE;
 
@@ -158,7 +172,7 @@ struct op_class_pref_t {
 	u8 ch_num; /* number of chs */
 	u8 op_ch_num; /* channel number which is not static non operable */
 	u8 ir_ch_num; /* channel number which can init radiation */
-	struct op_ch_t chs[MAX_CHANNEL_NUM_OF_BAND]; /* zero(ch) terminated array */
+	struct op_ch_t chs[];
 };
 
 int op_class_pref_init(_adapter *adapter);
@@ -227,31 +241,19 @@ u8 rtw_restrict_trx_path_bmp_by_rftype(u8 trx_path_bmp, enum rf_type type, u8 *t
 void tx_path_nss_set_default(enum bb_path txpath_nss[], u8 txpath_num_nss[], u8 txpath);
 void tx_path_nss_set_full_tx(enum bb_path txpath_nss[], u8 txpath_num_nss[], u8 txpath);
 
+#if CONFIG_IEEE80211_BAND_6GHZ
+int rtw_6gch2freq(int chan);
+#endif
+
 int rtw_ch2freq(int chan);
+int rtw_ch2freq_by_band(BAND_TYPE band, int ch);
 int rtw_freq2ch(int freq);
+BAND_TYPE rtw_freq2band(int freq);
+bool rtw_freq_consecutive(int a, int b);
 bool rtw_chbw_to_freq_range(u8 ch, u8 bw, u8 offset, u32 *hi, u32 *lo);
 
 struct rf_ctl_t;
 
-typedef enum _REGULATION_TXPWR_LMT {
-	TXPWR_LMT_NONE = 0, /* no limit */
-	TXPWR_LMT_FCC = 1,
-	TXPWR_LMT_MKK = 2,
-	TXPWR_LMT_ETSI = 3,
-	TXPWR_LMT_IC = 4,
-	TXPWR_LMT_KCC = 5,
-	TXPWR_LMT_NCC = 6,
-	TXPWR_LMT_ACMA = 7,
-	TXPWR_LMT_CHILE = 8,
-	TXPWR_LMT_UKRAINE = 9,
-	TXPWR_LMT_MEXICO = 10,
-	TXPWR_LMT_CN = 11,
-	TXPWR_LMT_WW, /* smallest of all available limit, keep last */
-} REGULATION_TXPWR_LMT;
-
-extern const char *const _regd_str[];
-#define regd_str(regd) (((regd) > TXPWR_LMT_WW) ? _regd_str[TXPWR_LMT_WW] : _regd_str[(regd)])
-
 void txpwr_idx_get_dbm_str(s8 idx, u8 txgi_max, u8 txgi_pdbm, SIZE_T cwidth, char dbm_str[], u8 dbm_str_len);
 
 #define MBM_PDBM 100
@@ -265,23 +267,23 @@ struct regd_exc_ent {
 	_list list;
 	char country[2];
 	u8 domain;
-	char regd_name[0];
+	char lmt_name[0];
 };
 
 void dump_regd_exc_list(void *sel, struct rf_ctl_t *rfctl);
-void rtw_regd_exc_add_with_nlen(struct rf_ctl_t *rfctl, const char *country, u8 domain, const char *regd_name, u32 nlen);
-void rtw_regd_exc_add(struct rf_ctl_t *rfctl, const char *country, u8 domain, const char *regd_name);
+void rtw_regd_exc_add_with_nlen(struct rf_ctl_t *rfctl, const char *country, u8 domain, const char *lmt_name, u32 nlen);
+void rtw_regd_exc_add(struct rf_ctl_t *rfctl, const char *country, u8 domain, const char *lmt_name);
 struct regd_exc_ent *_rtw_regd_exc_search(struct rf_ctl_t *rfctl, const char *country, u8 domain);
 struct regd_exc_ent *rtw_regd_exc_search(struct rf_ctl_t *rfctl, const char *country, u8 domain);
 void rtw_regd_exc_list_free(struct rf_ctl_t *rfctl);
 
 void dump_txpwr_lmt(void *sel, _adapter *adapter);
-void rtw_txpwr_lmt_add_with_nlen(struct rf_ctl_t *rfctl, const char *regd_name, u32 nlen
+void rtw_txpwr_lmt_add_with_nlen(struct rf_ctl_t *rfctl, const char *lmt_name, u32 nlen
 	, u8 band, u8 bw, u8 tlrs, u8 ntx_idx, u8 ch_idx, s8 lmt);
-void rtw_txpwr_lmt_add(struct rf_ctl_t *rfctl, const char *regd_name
+void rtw_txpwr_lmt_add(struct rf_ctl_t *rfctl, const char *lmt_name
 	, u8 band, u8 bw, u8 tlrs, u8 ntx_idx, u8 ch_idx, s8 lmt);
-struct txpwr_lmt_ent *_rtw_txpwr_lmt_get_by_name(struct rf_ctl_t *rfctl, const char *regd_name);
-struct txpwr_lmt_ent *rtw_txpwr_lmt_get_by_name(struct rf_ctl_t *rfctl, const char *regd_name);
+struct txpwr_lmt_ent *_rtw_txpwr_lmt_get_by_name(struct rf_ctl_t *rfctl, const char *lmt_name);
+struct txpwr_lmt_ent *rtw_txpwr_lmt_get_by_name(struct rf_ctl_t *rfctl, const char *lmt_name);
 void rtw_txpwr_lmt_list_free(struct rf_ctl_t *rfctl);
 #endif /* CONFIG_TXPWR_LIMIT */
 
@@ -321,6 +323,11 @@ void rtw_rf_apply_tx_gain_offset(_adapter *adapter, u8 ch);
 	|| (rtw_is_5g_band3(a) && rtw_is_5g_band3(b)) \
 	|| (rtw_is_5g_band4(a) && rtw_is_5g_band4(b)))
 
+#define rtw_is_6g_band1(ch) ((ch) >= 1 && (ch) <= 93)
+#define rtw_is_6g_band2(ch) ((ch) >= 97 && (ch) <= 117)
+#define rtw_is_6g_band3(ch) ((ch) >= 121 && (ch) <= 189)
+#define rtw_is_6g_band4(ch) ((ch) >= 193 && (ch) <= 237)
+
 bool rtw_is_long_cac_range(u32 hi, u32 lo, u8 dfs_region);
 bool rtw_is_long_cac_ch(u8 ch, u8 bw, u8 offset, u8 dfs_region);
 
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtw_rm.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtw_rm.h
index 3ffc4c6ff02b..f0b28838c5df 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtw_rm.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtw_rm.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017 Realtek Corporation.
@@ -26,6 +25,10 @@ u8 rm_post_event_hdl(_adapter *padapter, u8 *pbuf);
 #define RM_CAP_ARG(x) ((u8 *)(x))[4], ((u8 *)(x))[3], ((u8 *)(x))[2], ((u8 *)(x))[1], ((u8 *)(x))[0]
 #define RM_CAP_FMT "%02x %02x%02x %02x%02x"
 
+#ifndef MIN
+#define MIN(x, y) (((x) < (y)) ? (x) : (y))
+#endif
+
 /* remember to modify rm_event_name() when adding new event */
 enum RM_EV_ID {
 	RM_EV_state_in,
@@ -101,6 +104,8 @@ int rm_send_bcn_reqs(_adapter *padapter, u8 *sta_addr, u8 op_class, u8 ch,
 	u8 n_elem_id, u8 *elem_id_list);
 void indicate_beacon_report(u8 *sta_addr,
 	u8 n_measure_rpt, u32 elem_len, u8 *elem);
+#endif /* CONFIG_RTW_80211K */
+
+void rm_update_cap(u8 *frame_head, _adapter *pa, u32 pktlen, int offset);
 
-#endif /*CONFIG_RTW_80211K */
 #endif /* __RTW_RM_H_ */
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtw_rm_fsm.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtw_rm_fsm.h
index 71fbe7a0d4c3..bbbb3d918bed 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtw_rm_fsm.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtw_rm_fsm.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 
 /******************************************************************************
  *
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtw_rm_util.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtw_rm_util.h
index 0650c4792f2a..932cfb9658b9 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtw_rm_util.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtw_rm_util.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2019 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtw_roch.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtw_roch.h
index bc0551de1a7a..2744f4803617 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtw_roch.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtw_roch.h
@@ -1,62 +1,61 @@
-/* SPDX-License-Identifier: GPL-2.0 */
-/******************************************************************************
- *
- * Copyright(c) 2007 - 2020 Realtek Corporation.
- *
- * This program is free software; you can redistribute it and/or modify it
- * under the terms of version 2 of the GNU General Public License as
- * published by the Free Software Foundation.
- *
- * This program is distributed in the hope that it will be useful, but WITHOUT
- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
- * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for
- * more details.
- *
- *****************************************************************************/
-#ifndef __RTW_ROCH_H__
-#define __RTW_ROCH_H__
-
-#include <drv_types.h>
-
-struct rtw_roch_parm;
-
-#if (defined(CONFIG_P2P) && defined(CONFIG_CONCURRENT_MODE)) || defined(CONFIG_IOCTL_CFG80211)
-struct roch_info {
-#ifdef CONFIG_CONCURRENT_MODE
-	_timer	ap_roch_ch_switch_timer;	/* Used to switch the channel between legacy AP and listen state. */
-#ifdef CONFIG_IOCTL_CFG80211
-	u32	min_home_dur;		/* min duration for traffic, home_time */
-	u32	max_away_dur;		/* max acceptable away duration, home_away_time */
-#endif
-#endif
-
-#ifdef CONFIG_IOCTL_CFG80211
-	_timer remain_on_ch_timer;
-	u8 restore_channel;
-	struct ieee80211_channel remain_on_ch_channel;
-	enum nl80211_channel_type remain_on_ch_type;
-	ATOMIC_T ro_ch_cookie_gen;
-	u64 remain_on_ch_cookie;
-	bool is_ro_ch;
-	struct wireless_dev *ro_ch_wdev;
-	systime last_ro_ch_time;		/* this will be updated at the beginning and end of ro_ch */
-#endif
-};
-#endif
-
-#ifdef CONFIG_IOCTL_CFG80211
-u8 rtw_roch_stay_in_cur_chan(_adapter *padapter);
-#endif
-
-#if (defined(CONFIG_P2P) && defined(CONFIG_CONCURRENT_MODE)) || defined(CONFIG_IOCTL_CFG80211)
-s32 rtw_roch_wk_hdl(_adapter *padapter, int intCmdType, u8 *buf);
-u8 rtw_roch_wk_cmd(_adapter *padapter, int intCmdType, struct rtw_roch_parm *roch_parm, u8 flags);
-
-#ifdef CONFIG_CONCURRENT_MODE
-void rtw_concurrent_handler(_adapter *padapter);
-#endif
-
-void rtw_init_roch_info(_adapter *padapter);
-#endif /* (defined(CONFIG_P2P) && defined(CONFIG_CONCURRENT_MODE)) || defined(CONFIG_IOCTL_CFG80211) */
-
-#endif
+/******************************************************************************
+ *
+ * Copyright(c) 2007 - 2020 Realtek Corporation.
+ *
+ * This program is free software; you can redistribute it and/or modify it
+ * under the terms of version 2 of the GNU General Public License as
+ * published by the Free Software Foundation.
+ *
+ * This program is distributed in the hope that it will be useful, but WITHOUT
+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
+ * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for
+ * more details.
+ *
+ *****************************************************************************/
+#ifndef __RTW_ROCH_H__
+#define __RTW_ROCH_H__
+
+#include <drv_types.h>
+
+struct rtw_roch_parm;
+
+#if (defined(CONFIG_P2P) && defined(CONFIG_CONCURRENT_MODE)) || defined(CONFIG_IOCTL_CFG80211)
+struct roch_info {
+#ifdef CONFIG_CONCURRENT_MODE
+	_timer	ap_roch_ch_switch_timer;	/* Used to switch the channel between legacy AP and listen state. */
+#ifdef CONFIG_IOCTL_CFG80211
+	u32	min_home_dur;		/* min duration for traffic, home_time */
+	u32	max_away_dur;		/* max acceptable away duration, home_away_time */
+#endif
+#endif
+
+#ifdef CONFIG_IOCTL_CFG80211
+	_timer remain_on_ch_timer;
+	u8 restore_channel;
+	struct ieee80211_channel remain_on_ch_channel;
+	enum nl80211_channel_type remain_on_ch_type;
+	ATOMIC_T ro_ch_cookie_gen;
+	u64 remain_on_ch_cookie;
+	bool is_ro_ch;
+	struct wireless_dev *ro_ch_wdev;
+	systime last_ro_ch_time;		/* this will be updated at the beginning and end of ro_ch */
+#endif
+};
+#endif
+
+#ifdef CONFIG_IOCTL_CFG80211
+u8 rtw_roch_stay_in_cur_chan(_adapter *padapter);
+#endif
+
+#if (defined(CONFIG_P2P) && defined(CONFIG_CONCURRENT_MODE)) || defined(CONFIG_IOCTL_CFG80211)
+s32 rtw_roch_wk_hdl(_adapter *padapter, int intCmdType, u8 *buf);
+u8 rtw_roch_wk_cmd(_adapter *padapter, int intCmdType, struct rtw_roch_parm *roch_parm, u8 flags);
+
+#ifdef CONFIG_CONCURRENT_MODE
+void rtw_concurrent_handler(_adapter *padapter);
+#endif
+
+void rtw_init_roch_info(_adapter *padapter);
+#endif /* (defined(CONFIG_P2P) && defined(CONFIG_CONCURRENT_MODE)) || defined(CONFIG_IOCTL_CFG80211) */
+
+#endif
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtw_rson.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtw_rson.h
index e9e27efe76f1..6996738b071a 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtw_rson.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtw_rson.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2011 Realtek Corporation. All rights reserved.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtw_sdio.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtw_sdio.h
index b4d28e97e298..7490b5481328 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtw_sdio.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtw_sdio.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2015 - 2017 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtw_security.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtw_security.h
index 8d938fd20209..8cd18a910517 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtw_security.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtw_security.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017 Realtek Corporation.
@@ -183,6 +182,9 @@ struct security_priv {
 	u8 owe_ie[MAX_OWE_IE_LEN];/* added in assoc req */
 	int owe_ie_len;
 
+	u8 rsnx_ie[MAX_RSNX_IE_LEN];
+	int rsnx_ie_len;
+
 	u8	binstallGrpkey;
 #ifdef CONFIG_GTK_OL
 	u8	binstallKCK_KEK;
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtw_sreset.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtw_sreset.h
index c3dda35a90a3..1fd999a9d76e 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtw_sreset.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtw_sreset.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtw_swcrypto.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtw_swcrypto.h
index bbbb0e4c8133..d35ad7d04d39 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtw_swcrypto.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtw_swcrypto.h
@@ -1,50 +1,49 @@
-/* SPDX-License-Identifier: GPL-2.0 */
-/******************************************************************************
- *
- * Copyright(c) 2007 - 2017 Realtek Corporation.
- *
- * This program is free software; you can redistribute it and/or modify it
- * under the terms of version 2 of the GNU General Public License as
- * published by the Free Software Foundation.
- *
- * This program is distributed in the hope that it will be useful, but WITHOUT
- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
- * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for
- * more details.
- *
- *****************************************************************************/
-
-#ifndef __RTW_SWCRYPTO_H_
-#define __RTW_SWCRYPTO_H_
-
-#define NEW_CRYPTO 1
-
-int _rtw_ccmp_encrypt(u8 *key, u32 key_len, uint hdrlen, u8 *frame, uint plen);
-int _rtw_ccmp_decrypt(u8 *key, u32 key_len, uint hdrlen, u8 *frame, uint plen);
-
-int _rtw_gcmp_encrypt(u8 *key, u32 key_len, uint hdrlen, u8 *frame, uint plen);
-int _rtw_gcmp_decrypt(u8 *key, u32 key_len, uint hdrlen, u8 *frame, uint plen);
-
-#ifdef CONFIG_RTW_MESH_AEK
-int _aes_siv_encrypt(const u8 *key, size_t key_len,
-	const u8 *pw, size_t pwlen,
-	size_t num_elem, const u8 *addr[], const size_t *len, u8 *out);
-int _aes_siv_decrypt(const u8 *key, size_t key_len,
-	const u8 *iv_crypt, size_t iv_c_len,
-	size_t num_elem, const u8 *addr[], const size_t *len, u8 *out);
-#endif
-
-#if defined(CONFIG_IEEE80211W) | defined(CONFIG_TDLS)
-u8 _bip_ccmp_protect(const u8 *key, size_t key_len,
-	const u8 *data, size_t data_len, u8 *mic);
-u8 _bip_gcmp_protect(u8 *whdr_pos, size_t len,
-	const u8 *key, size_t key_len,
-	const u8 *data, size_t data_len, u8 *mic);
-#endif /* CONFIG_IEEE80211W */
-
-#ifdef CONFIG_TDLS
-void _tdls_generate_tpk(void *sta, const u8 *own_addr, const u8 *bssid);
-#endif /* CONFIG_TDLS */
-
-#endif /* __RTW_SWCRYPTO_H_ */
-
+/******************************************************************************
+ *
+ * Copyright(c) 2007 - 2017 Realtek Corporation.
+ *
+ * This program is free software; you can redistribute it and/or modify it
+ * under the terms of version 2 of the GNU General Public License as
+ * published by the Free Software Foundation.
+ *
+ * This program is distributed in the hope that it will be useful, but WITHOUT
+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
+ * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for
+ * more details.
+ *
+ *****************************************************************************/
+
+#ifndef __RTW_SWCRYPTO_H_
+#define __RTW_SWCRYPTO_H_
+
+#define NEW_CRYPTO 1
+
+int _rtw_ccmp_encrypt(_adapter *padapter, u8 *key, u32 key_len, uint hdrlen, u8 *frame, uint plen);
+int _rtw_ccmp_decrypt(_adapter *padapter, u8 *key, u32 key_len, uint hdrlen, u8 *frame, uint plen);
+
+int _rtw_gcmp_encrypt(_adapter *padapter, u8 *key, u32 key_len, uint hdrlen, u8 *frame, uint plen);
+int _rtw_gcmp_decrypt(_adapter *padapter, u8 *key, u32 key_len, uint hdrlen, u8 *frame, uint plen);
+
+#ifdef CONFIG_RTW_MESH_AEK
+int _aes_siv_encrypt(const u8 *key, size_t key_len,
+	const u8 *pw, size_t pwlen,
+	size_t num_elem, const u8 *addr[], const size_t *len, u8 *out);
+int _aes_siv_decrypt(const u8 *key, size_t key_len,
+	const u8 *iv_crypt, size_t iv_c_len,
+	size_t num_elem, const u8 *addr[], const size_t *len, u8 *out);
+#endif
+
+#if defined(CONFIG_IEEE80211W) | defined(CONFIG_TDLS)
+u8 _bip_ccmp_protect(const u8 *key, size_t key_len,
+	const u8 *data, size_t data_len, u8 *mic);
+u8 _bip_gcmp_protect(u8 *whdr_pos, size_t len,
+	const u8 *key, size_t key_len,
+	const u8 *data, size_t data_len, u8 *mic);
+#endif /* CONFIG_IEEE80211W */
+
+#ifdef CONFIG_TDLS
+void _tdls_generate_tpk(void *sta, const u8 *own_addr, const u8 *bssid);
+#endif /* CONFIG_TDLS */
+
+#endif /* __RTW_SWCRYPTO_H_ */
+
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtw_tdls.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtw_tdls.h
index a18dd823c768..5c23e4ea4c2f 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtw_tdls.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtw_tdls.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtw_version.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtw_version.h
index b58594cce887..3504d031c660 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtw_version.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtw_version.h
@@ -1,3 +1,2 @@
-/* SPDX-License-Identifier: GPL-2.0 */
-#define DRIVERVERSION	"v5.12.0-8-g39bbb8dd2.20201015_COEX20200730-5151"
-#define BTCOEXVERSION	"COEX20200730-5151"
+#define DRIVERVERSION	"v5.14.2-28-g6011b0372.20220328"
+#define BTCOEXVERSION	"COEX20210319-5555"
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtw_vht.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtw_vht.h
index 725db4f98945..838ebd8f9fe7 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtw_vht.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtw_vht.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017 Realtek Corporation.
@@ -29,6 +28,14 @@
 #define	STBC_VHT_TEST_TX_ENABLE		BIT2
 #define	STBC_VHT_CAP_TX				BIT3
 
+#define	BEAMFORMING_VHT_BEAMFORMER_ENABLE	BIT(0)	/*Declare sta support beamformer*/
+#define	BEAMFORMING_VHT_BEAMFORMEE_ENABLE		BIT(1)	/*Declare sta support beamformee*/
+#define	BEAMFORMING_VHT_MU_MIMO_AP_ENABLE	BIT(2)	/*Declare sta support MU beamformer*/
+#define	BEAMFORMING_VHT_MU_MIMO_STA_ENABLE	BIT(3)	/*Declare sta support MU beamformer*/
+#define	BEAMFORMING_VHT_BEAMFORMER_TEST		BIT(4)	/*Transmiting Beamforming no matter the target supports it or not*/
+#define	BEAMFORMING_VHT_BEAMFORMER_STS_CAP	(BIT(8)|BIT(9)|BIT(10)) /*Sta BFee's capability*/
+#define	BEAMFORMING_VHT_BEAMFORMEE_SOUND_DIM (BIT(12)|BIT(13)|BIT(14))	/*Sta Bfer's capability*/
+
 /* VHT capability info */
 #define SET_VHT_CAPABILITY_ELE_MAX_MPDU_LENGTH(_pEleStart, _val)			SET_BITS_TO_LE_1BYTE(_pEleStart, 0, 2, _val)
 #define SET_VHT_CAPABILITY_ELE_CHL_WIDTH(_pEleStart, _val)			SET_BITS_TO_LE_1BYTE(_pEleStart, 2, 2, _val)
@@ -39,8 +46,9 @@
 #define SET_VHT_CAPABILITY_ELE_RX_STBC(_pEleStart, _val)				SET_BITS_TO_LE_1BYTE((_pEleStart)+1, 0, 3, _val)
 #define SET_VHT_CAPABILITY_ELE_SU_BFER(_pEleStart, _val)				SET_BITS_TO_LE_1BYTE((_pEleStart)+1, 3, 1, _val)
 #define SET_VHT_CAPABILITY_ELE_SU_BFEE(_pEleStart, _val)				SET_BITS_TO_LE_1BYTE((_pEleStart)+1, 4, 1, _val)
-#define SET_VHT_CAPABILITY_ELE_BFER_ANT_SUPP(_pEleStart, _val)				SET_BITS_TO_LE_1BYTE((_pEleStart)+1, 5, 3, _val)
-#define SET_VHT_CAPABILITY_ELE_SOUNDING_DIMENSIONS(_pEleStart, _val)				SET_BITS_TO_LE_1BYTE((_pEleStart)+2, 0, 3, _val)
+/* #define SET_VHT_CAPABILITY_ELE_BFER_ANT_SUPP(_pEleStart, _val)			SET_BITS_TO_LE_1BYTE((_pEleStart)+1, 5, 3, _val) */
+#define SET_VHT_CAPABILITY_ELE_SU_BFEE_STS_CAP(_pEleStart, _val)		SET_BITS_TO_LE_1BYTE((_pEleStart)+1, 5, 3, _val)
+#define SET_VHT_CAPABILITY_ELE_SOUNDING_DIMENSIONS(_pEleStart, _val)	SET_BITS_TO_LE_1BYTE((_pEleStart)+2, 0, 3, _val) /* B16~B18 */
 
 #define SET_VHT_CAPABILITY_ELE_MU_BFER(_pEleStart, _val)				SET_BITS_TO_LE_1BYTE((_pEleStart)+2, 3, 1, _val)
 #define SET_VHT_CAPABILITY_ELE_MU_BFEE(_pEleStart, _val)				SET_BITS_TO_LE_1BYTE((_pEleStart)+2, 4, 1, _val)
@@ -52,7 +60,9 @@
 #define SET_VHT_CAPABILITY_ELE_MCS_RX_HIGHEST_RATE(_pEleStart, _val)				SET_BITS_TO_LE_2BYTE((_pEleStart)+6, 0, 13, _val)
 #define SET_VHT_CAPABILITY_ELE_MCS_TX_MAP(_pEleStart, _val)				SET_BITS_TO_LE_2BYTE((_pEleStart)+8, 0, 16, _val)   /* B0~B15 indicate Tx MCS MAP, we write 0 to indicate MCS0~7. by page */
 #define SET_VHT_CAPABILITY_ELE_MCS_TX_HIGHEST_RATE(_pEleStart, _val)				SET_BITS_TO_LE_2BYTE((_pEleStart)+10, 0, 13, _val)
-
+#define SET_VHT_CAPABILITY_ELE_RX_ANT_PATTERN(_pEleStart, _val)		SET_BITS_TO_LE_1BYTE((_pEleStart)+3, 4, 1, _val)
+#define SET_VHT_CAPABILITY_ELE_TX_ANT_PATTERN(_pEleStart, _val)		SET_BITS_TO_LE_1BYTE((_pEleStart)+3, 5, 1, _val)
+#define SET_VHT_CAPABILITY_ELE_EXT_NSS_BW(_pEleStart, _val)			SET_BITS_TO_LE_1BYTE((_pEleStart)+3, 6, 2, _val)
 
 #define GET_VHT_CAPABILITY_ELE_MAX_MPDU_LENGTH(_pEleStart)			LE_BITS_TO_1BYTE(_pEleStart, 0, 2)
 #define GET_VHT_CAPABILITY_ELE_CHL_WIDTH(_pEleStart)				LE_BITS_TO_1BYTE(_pEleStart, 2, 2)
@@ -64,16 +74,21 @@
 #define GET_VHT_CAPABILITY_ELE_SU_BFER(_pEleStart)					LE_BITS_TO_1BYTE((_pEleStart)+1, 3, 1)
 #define GET_VHT_CAPABILITY_ELE_SU_BFEE(_pEleStart)					LE_BITS_TO_1BYTE((_pEleStart)+1, 4, 1)
 /*phydm-beamforming*/
-#define GET_VHT_CAPABILITY_ELE_SU_BFEE_STS_CAP(_pEleStart)	LE_BITS_TO_2BYTE((_pEleStart)+1, 5, 3)
+#define GET_VHT_CAPABILITY_ELE_SU_BFEE_STS_CAP(_pEleStart)	LE_BITS_TO_1BYTE((_pEleStart)+1, 5, 3)
 #define GET_VHT_CAPABILITY_ELE_SU_BFER_SOUND_DIM_NUM(_pEleStart)	LE_BITS_TO_2BYTE((_pEleStart)+2, 0, 3)
 #define GET_VHT_CAPABILITY_ELE_MU_BFER(_pEleStart)				LE_BITS_TO_1BYTE((_pEleStart)+2, 3, 1)
 #define GET_VHT_CAPABILITY_ELE_MU_BFEE(_pEleStart)				LE_BITS_TO_1BYTE((_pEleStart)+2, 4, 1)
 #define GET_VHT_CAPABILITY_ELE_TXOP_PS(_pEleStart)				LE_BITS_TO_1BYTE((_pEleStart)+2, 5, 1)
+#define GET_VHT_CAPABILITY_ELE_HTC_VHT(_pEleStart)			LE_BITS_TO_1BYTE((_pEleStart)+2, 6, 1)
 #define GET_VHT_CAPABILITY_ELE_MAX_RXAMPDU_FACTOR(_pEleStart)	LE_BITS_TO_2BYTE((_pEleStart)+2, 7, 3)
-#define GET_VHT_CAPABILITY_ELE_RX_MCS(_pEleStart)					       ((_pEleStart)+4)
-#define GET_VHT_CAPABILITY_ELE_MCS_RX_HIGHEST_RATE(_pEleStart)			LE_BITS_TO_2BYTE((_pEleStart)+6, 0, 13)
-#define GET_VHT_CAPABILITY_ELE_TX_MCS(_pEleStart)					       ((_pEleStart)+8)
-#define GET_VHT_CAPABILITY_ELE_MCS_TX_HIGHEST_RATE(_pEleStart)			LE_BITS_TO_2BYTE((_pEleStart)+10, 0, 13)
+#define GET_VHT_CAPABILITY_ELE_LINK_ADAPTION(_pEleStart)			LE_BITS_TO_1BYTE((_pEleStart)+3, 2, 2)
+#define GET_VHT_CAPABILITY_ELE_RX_ANT_PATTERN(_pEleStart)		LE_BITS_TO_1BYTE((_pEleStart)+3, 4, 1)
+#define GET_VHT_CAPABILITY_ELE_TX_ANT_PATTERN(_pEleStart)		LE_BITS_TO_1BYTE((_pEleStart)+3, 5, 1)
+#define GET_VHT_CAPABILITY_ELE_EXT_NSS_BW(_pEleStart)			LE_BITS_TO_1BYTE((_pEleStart)+3, 6, 2)
+#define GET_VHT_CAPABILITY_ELE_RX_MCS(_pEleStart)					((_pEleStart)+4)
+#define GET_VHT_CAPABILITY_ELE_MCS_RX_HIGHEST_RATE(_pEleStart)	LE_BITS_TO_2BYTE((_pEleStart)+6, 0, 13)
+#define GET_VHT_CAPABILITY_ELE_TX_MCS(_pEleStart)					((_pEleStart)+8)
+#define GET_VHT_CAPABILITY_ELE_MCS_TX_HIGHEST_RATE(_pEleStart)	LE_BITS_TO_2BYTE((_pEleStart)+10, 0, 13)
 
 
 /* VHT Operation Information Element */
@@ -85,6 +100,7 @@
 #define GET_VHT_OPERATION_ELE_CHL_WIDTH(_pEleStart)		LE_BITS_TO_1BYTE(_pEleStart, 0, 8)
 #define GET_VHT_OPERATION_ELE_CENTER_FREQ1(_pEleStart)	LE_BITS_TO_1BYTE((_pEleStart)+1, 0, 8)
 #define GET_VHT_OPERATION_ELE_CENTER_FREQ2(_pEleStart)     LE_BITS_TO_1BYTE((_pEleStart)+2, 0, 8)
+#define GET_VHT_OPERATION_ELE_BASIC_MCS_SET(_pEleStart)	LE_BITS_TO_2BYTE((_pEleStart)+3, 0, 16)
 
 /* VHT Operating Mode */
 #define SET_VHT_OPERATING_MODE_FIELD_CHNL_WIDTH(_pEleStart, _val)		SET_BITS_TO_LE_1BYTE(_pEleStart, 0, 2, _val)
@@ -125,18 +141,31 @@ struct vht_bf_cap {
 };
 
 struct vht_priv {
-	u8	vht_option;
+	/* VHT IE is configured by upper layer or not (hostapd or wpa_supplicant) */
+	u8 upper_layer_setting;
+
+	u8 vht_option;
 
 	u8	ldpc_cap;
 	u8	stbc_cap;
-	u16	beamform_cap;
+	u8 rx_stbc_nss; /* Support nss spatial stream */
+	u16 beamform_cap;
+	u8 ap_is_mu_bfer;
 	struct	vht_bf_cap ap_bf_cap;
+	u8 sgi_80m;
+	u8 sgi_160m;
 
-	u8	sgi_80m;/* short GI */
-	u8	ampdu_len;
+	u8 ampdu_len; /* A-MPDU length exponent : 0 to 7 */
 
-	u8	vht_highest_rate;
-	u8	vht_mcs_map[2];
+	u8 vht_highest_rate;
+	u8 vht_mcs_map[2];
+
+	u8 txop_ps; /* TXOP power save mode*/
+	u8 htc_vht; /* VHT variant HT Control*/
+	u8 link_adap_cap; /* VHT Link Adaptation Capable */
+	u8 tx_ant_pattern; /* Tx Antenna Pattern Consistency */
+	u8 rx_ant_pattern; /* Rx Antenna Pattern Consistency */
+	u8 ext_nss_bw; /* Extended NSS BW Support */
 
 	u8 op_present:1; /* vht_op is present */
 	u8 notify_present:1; /* vht_op_mode_notify is present */
@@ -144,6 +173,10 @@ struct vht_priv {
 	u8 vht_cap[32];
 	u8 vht_op[VHT_OP_IE_LEN];
 	u8 vht_op_mode_notify;
+
+	/* Backup these two VHT IEs from hostapd/wpa_supplicant for restore usage */
+	u8 vht_cap_ie_backup[VHT_CAP_IE_LEN];
+	u8 vht_op_ie_backup[VHT_OP_IE_LEN];
 };
 
 #ifdef ROKU_PRIVATE
@@ -175,11 +208,17 @@ void	VHT_caps_handler_infra_ap(_adapter *padapter, PNDIS_802_11_VARIABLE_IEs pIE
 #endif /* ROKU_PRIVATE */
 void	VHT_operation_handler(_adapter *padapter, PNDIS_802_11_VARIABLE_IEs pIE);
 void	rtw_process_vht_op_mode_notify(_adapter *padapter, u8 *pframe, void *sta);
-u32	rtw_restructure_vht_ie(_adapter *padapter, u8 *in_ie, u8 *out_ie, uint in_len, uint *pout_len);
+u32	rtw_restructure_vht_ie(_adapter *padapter, u8 *in_ie, u8 *out_ie, uint in_len, uint *pout_len, struct country_chplan *req_chplan);
 void	VHTOnAssocRsp(_adapter *padapter);
 u8	rtw_vht_mcsmap_to_nss(u8 *pvht_mcs_map);
 void rtw_vht_nss_to_mcsmap(u8 nss, u8 *target_mcs_map, u8 *cur_mcs_map);
 void rtw_vht_ies_attach(_adapter *padapter, WLAN_BSSID_EX *pcur_network);
 void rtw_vht_ies_detach(_adapter *padapter, WLAN_BSSID_EX *pcur_network);
 void rtw_check_for_vht20(_adapter *adapter, u8 *ies, int ies_len);
+#ifdef CONFIG_AP_MODE
+void rtw_update_drv_vht_cap(_adapter *padapter, u8 *vht_cap_ie);
+void rtw_set_vht_ext_cap(_adapter *padapter, WLAN_BSSID_EX *pnetwork);
+void rtw_check_vht_ies(_adapter *padapter, WLAN_BSSID_EX *pnetwork);
+void rtw_reattach_vht_ies(_adapter *padapter, WLAN_BSSID_EX *pnetwork);
+#endif
 #endif /* _RTW_VHT_H_ */
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtw_wapi.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtw_wapi.h
index 8e2479a46ba3..fb109f8373f7 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtw_wapi.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtw_wapi.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2016 - 2017 Realtek Corporation.
@@ -30,12 +29,12 @@
 /* WAPI trace debug */
 extern u32 wapi_debug_component;
 
-static inline void dump_buf(u8 *buf, u32 len)
+static inline void dump_wapi_buf(u8 *buf, u32 len)
 {
 	u32 i;
 	printk("-----------------Len %d----------------\n", len);
 	for (i = 0; i < len; i++)
-		printk("%2.2x-", *(buf + i));
+		printk(KERN_CONT "%2.2x-", *(buf + i));
 	printk("\n");
 }
 
@@ -48,17 +47,17 @@ static inline void dump_buf(u8 *buf, u32 len)
 #define WAPI_DATA(component, x, buf, len) \
 	do { if (wapi_debug_component & (component)) { \
 			printk("%s:\n", x);\
-			dump_buf((buf), (len)); } \
+			dump_wapi_buf((buf), (len)); } \
 	} while (0);
 
-#define RT_ASSERT_RET(_Exp)								\
+#define RT_WAPI_ASSERT_RET(_Exp)								\
 	if (!(_Exp)) {									\
 		printk("RTWLAN: ");					\
 		printk("Assertion failed! %s,%s, line=%d\n", \
 		       #_Exp, __FUNCTION__, __LINE__);          \
 		return;						\
 	}
-#define RT_ASSERT_RET_VALUE(_Exp, Ret)								\
+#define RT_WAPI_ASSERT_RET_VALUE(_Exp, Ret)								\
 	if (!(_Exp)) {									\
 		printk("RTWLAN: ");					\
 		printk("Assertion failed! %s,%s, line=%d\n", \
@@ -67,8 +66,8 @@ static inline void dump_buf(u8 *buf, u32 len)
 	}
 
 #else
-#define RT_ASSERT_RET(_Exp) do {} while (0)
-#define RT_ASSERT_RET_VALUE(_Exp, Ret) do {} while (0)
+#define RT_WAPI_ASSERT_RET(_Exp) do {} while (0)
+#define RT_WAPI_ASSERT_RET_VALUE(_Exp, Ret) do {} while (0)
 #define WAPI_TRACE(component, x, args...) do {} while (0)
 #define WAPI_DATA(component, x, buf, len) do {} while (0)
 #endif
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtw_wnm.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtw_wnm.h
index eddaf4ef8c9b..8d6bcb56a0c6 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtw_wnm.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtw_wnm.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtw_xmit.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtw_xmit.h
index 3e94d2297d95..9ac1a429cfe0 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtw_xmit.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/rtw_xmit.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2019 Realtek Corporation.
@@ -91,6 +90,8 @@
 
 #ifdef CONFIG_SINGLE_XMIT_BUF
 	#define NR_XMIT_EXTBUFF	(1)
+#elif defined(CONFIG_RTW_MGMT_QUEUE)
+	#define NR_XMIT_EXTBUFF	(64)
 #else
 	#define NR_XMIT_EXTBUFF	(32)
 #endif
@@ -196,6 +197,12 @@
 #define HWXMIT_ENTRY 4
 #endif
 
+enum DEQUEUE_TYPE {
+	UNI_BMC_DATA,
+	UNI_MGMT,
+	ALL_FRAME
+};
+
 /* For Buffer Descriptor ring architecture */
 #if defined(BUF_DESC_ARCH) || defined(CONFIG_TRX_BD_ARCH)
 	#if defined(CONFIG_RTL8192E)
@@ -864,6 +871,9 @@ struct	xmit_priv	{
 #endif
 #ifdef CONFIG_PCI_TX_POLLING
 	_timer tx_poll_timer;
+#endif
+#ifdef CONFIG_LAYER2_ROAMING
+	_queue	rpkt_queue;
 #endif
 	_lock lock_sctx;
 
@@ -986,7 +996,7 @@ u8 mgmt_xmitframe_enqueue_for_sleeping_sta(_adapter *padapter, struct xmit_frame
 #endif
 sint xmitframe_enqueue_for_sleeping_sta(_adapter *padapter, struct xmit_frame *pxmitframe);
 void stop_sta_xmit(_adapter *padapter, struct sta_info *psta);
-void wakeup_sta_to_xmit(_adapter *padapter, struct sta_info *psta);
+void wakeup_sta_to_xmit(_adapter *padapter, struct sta_info *psta, u8 dequeue_type);
 void xmit_delivery_enabled_frames(_adapter *padapter, struct sta_info *psta);
 #endif
 
@@ -1065,6 +1075,7 @@ void dump_xmit_block(void *sel, _adapter *padapter);
 void rtw_set_xmit_block(_adapter *padapter, enum XMIT_BLOCK_REASON reason);
 void rtw_clr_xmit_block(_adapter *padapter, enum XMIT_BLOCK_REASON reason);
 bool rtw_is_xmit_blocked(_adapter *padapter);
+void rtw_hci_flush(_adapter *padapter);
 
 /* include after declaring struct xmit_buf, in order to avoid warning */
 #include <xmit_osdep.h>
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/sdio_hal.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/sdio_hal.h
index 39ae2c9ad745..6e49835a4154 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/sdio_hal.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/sdio_hal.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/sdio_ops.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/sdio_ops.h
index 7d1c88016dc7..74ddeca291b5 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/sdio_ops.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/sdio_ops.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/sdio_ops_ce.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/sdio_ops_ce.h
index b4e994bddd99..d542cb7ea206 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/sdio_ops_ce.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/sdio_ops_ce.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/sdio_ops_linux.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/sdio_ops_linux.h
index bc0862fbc4a3..4bbd8fe7ff68 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/sdio_ops_linux.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/sdio_ops_linux.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/sdio_ops_xp.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/sdio_ops_xp.h
index a00a25c38fbc..d3d8764d3878 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/sdio_ops_xp.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/sdio_ops_xp.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/sdio_osintf.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/sdio_osintf.h
index b2bcf57dbc74..a94e656793af 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/sdio_osintf.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/sdio_osintf.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/sta_info.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/sta_info.h
index 2cb41a1bbf51..18216b95bfca 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/sta_info.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/sta_info.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2019 Realtek Corporation.
@@ -162,7 +161,9 @@ struct	stainfo_stats	{
 	u32 rxratecnt[128];	/* Read & Clear, in proc_get_rx_stat() */
 	u32 tx_ok_cnt;		/* Read & Clear, in proc_get_tx_stat() */
 	u32 tx_fail_cnt;	/* Read & Clear, in proc_get_tx_stat() */
+	u32 tx_fail_cnt_sum;	/* cumulative counts */
 	u32 tx_retry_cnt;	/* Read & Clear, in proc_get_tx_stat() */
+	u32 tx_retry_cnt_sum;	/* cumulative counts */
 #ifdef CONFIG_RTW_MESH
 	u32 rx_hwmp_pkts;
 	u32 last_rx_hwmp_pkts;
@@ -305,6 +306,7 @@ struct sta_info {
 	union Keytype	dot118021x_UncstKey;
 	union pn48		dot11txpn;			/* PN48 used for Unicast xmit */
 	union pn48		dot11rxpn;			/* PN48 used for Unicast recv. */
+	ATOMIC_T	keytrack;
 #ifdef CONFIG_RTW_MESH
 	/* peer's GTK, RX only */
 	u8 group_privacy;
@@ -722,9 +724,12 @@ struct	sta_priv {
 #ifdef CONFIG_ATMEL_RC_PATCH
 	u8 atmel_rc_pattern[6];
 #endif
+
+	/* tx report, single request allowed for now */
 	u8 c2h_sta_mac[ETH_ALEN];
 	u8 c2h_adapter_id;
 	struct submit_ctx *gotc2h;
+	_lock tx_rpt_lock;
 };
 
 
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/usb_hal.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/usb_hal.h
index 155ee5b858ab..2d7776f0695d 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/usb_hal.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/usb_hal.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/usb_ops.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/usb_ops.h
index fa7d81958584..a74152fbb3f4 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/usb_ops.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/usb_ops.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017 Realtek Corporation.
@@ -97,8 +96,6 @@ void usb_set_intf_ops(_adapter *padapter, struct _io_ops *pops);
 #ifdef CONFIG_RTL8723D
 void rtl8723du_set_hw_type(struct dvobj_priv *pdvobj);
 void rtl8723du_set_intf_ops(struct _io_ops *pops);
-void rtl8723du_recv_tasklet(void *priv);
-void rtl8723du_xmit_tasklet(void *priv);
 #ifdef CONFIG_SUPPORT_USB_INT
 void interrupt_handler_8723du(_adapter *padapter, u16 pkt_len, u8 *pbuf);
 #endif /* CONFIG_SUPPORT_USB_INT */
@@ -116,7 +113,6 @@ void interrupt_handler_8710bu(_adapter *padapter, u16 pkt_len, u8 *pbuf);
 
 #ifdef CONFIG_RTL8192F
 void rtl8192fu_set_hw_type(struct dvobj_priv *pdvobj);
-void rtl8192fu_xmit_tasklet(void *priv);
 #ifdef CONFIG_SUPPORT_USB_INT
 void rtl8192fu_interrupt_handler(_adapter *padapter, u16 pkt_len, u8 *pbuf);
 #endif /* CONFIG_SUPPORT_USB_INT */
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/usb_ops_linux.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/usb_ops_linux.h
index 6ed3b29b9de2..dd4665e3c456 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/usb_ops_linux.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/usb_ops_linux.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017 Realtek Corporation.
@@ -90,7 +89,7 @@ int usb_write16(struct intf_hdl *pintfhdl, u32 addr, u16 val);
 int usb_write32(struct intf_hdl *pintfhdl, u32 addr, u32 val);
 int usb_writeN(struct intf_hdl *pintfhdl, u32 addr, u32 length, u8 *pdata);
 u32 usb_read_port(struct intf_hdl *pintfhdl, u32 addr, u32 cnt, u8 *rmem);
-void usb_recv_tasklet(void *priv);
+void usb_recv_tasklet(unsigned long priv);
 
 #ifdef CONFIG_USB_INTERRUPT_IN_PIPE
 void usb_read_interrupt_complete(struct urb *purb, struct pt_regs *regs);
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/usb_osintf.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/usb_osintf.h
index 76c4443c0443..48495b492fcc 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/usb_osintf.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/usb_osintf.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/usb_vendor_req.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/usb_vendor_req.h
index 0ed06373e217..3e25878639ae 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/usb_vendor_req.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/usb_vendor_req.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/wifi.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/wifi.h
index 01d04acd2c74..4d285708f304 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/wifi.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/wifi.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017 Realtek Corporation.
@@ -606,10 +605,8 @@ static inline int IsFrameTypeData(unsigned char *pframe)
 #define _DSSET_IE_				3
 #define _TIM_IE_					5
 #define _IBSS_PARA_IE_			6
-#define _COUNTRY_IE_			7
 #define _CHLGETXT_IE_			16
 #define _SUPPORTED_CH_IE_		36
-#define _CH_SWTICH_ANNOUNCE_	37	/* Secondary Channel Offset */
 #define	_MEAS_REQ_IE_		38
 #define	_MEAS_RSP_IE_		39
 #define _RSN_IE_2_				48
@@ -637,7 +634,6 @@ static inline int IsFrameTypeData(unsigned char *pframe)
 #define _LINK_ID_IE_					101
 #define _CH_SWITCH_TIMING_		104
 #define _PTI_BUFFER_STATUS_		106
-#define _EXT_CAP_IE_				127
 #define _VENDOR_SPECIFIC_IE_		221
 
 #define	_RESERVED47_				47
@@ -702,7 +698,6 @@ typedef	enum _ELEMENT_ID {
 	EID_PTIControl				= 105, /* Defined in 802.11z */
 	EID_PUBufferStatus			= 106, /* Defined in 802.11z */
 
-	EID_EXTCapability			= 127, /* Extended Capabilities */
 	/* From S19:Aironet IE and S21:AP IP address IE in CCX v1.13, p16 and p18. */
 	EID_Aironet					= 133, /* 0x85: Aironet Element for Cisco CCX */
 	EID_CiscoIP					= 149, /* 0x95: IP Address IE for Cisco CCX */
@@ -716,6 +711,7 @@ typedef	enum _ELEMENT_ID {
 	EID_WAPI					= 68,
 	EID_VHTCapability 			= 191, /* Based on 802.11ac D2.0 */
 	EID_VHTOperation 			= 192, /* Based on 802.11ac D2.0 */
+	EID_VHTTransmitPower 		= 195,
 	EID_AID						= 197, /* Based on 802.11ac D4.0 */
 	EID_OpModeNotification		= 199, /* Based on 802.11ac D3.0 */
 } ELEMENT_ID, *PELEMENT_ID;
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/wlan_bssdef.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/wlan_bssdef.h
index 8aa6fc35cff8..38de05ced64e 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/wlan_bssdef.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/wlan_bssdef.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017 Realtek Corporation.
@@ -243,6 +242,9 @@ typedef struct _WLAN_BSSID_EX {
 	WLAN_PHY_INFO	PhyInfo;
 	u32  IELength;
 	u8  IEs[MAX_IE_SZ];	/* (timestamp, beacon interval, and capability information) */
+#ifdef	CONFIG_LAYER2_ROAMING
+	u64 tsf;
+#endif
 }
 __attribute__((packed)) WLAN_BSSID_EX, *PWLAN_BSSID_EX;
 
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/xmit_osdep.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/xmit_osdep.h
index 3efbacd6e69c..d253181f457c 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/xmit_osdep.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/include/xmit_osdep.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017 Realtek Corporation.
@@ -69,7 +68,12 @@ struct xmit_frame;
 struct xmit_buf;
 
 extern int _rtw_xmit_entry(_pkt *pkt, _nic_hdl pnetdev);
+
+#if (LINUX_VERSION_CODE >= KERNEL_VERSION(2, 6, 32))
+extern netdev_tx_t rtw_xmit_entry(_pkt *pkt, _nic_hdl pnetdev);
+#else
 extern int rtw_xmit_entry(_pkt *pkt, _nic_hdl pnetdev);
+#endif
 
 #endif /* PLATFORM_LINUX */
 
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/os_dep/linux/custom_gpio_linux.c b/drivers/net/wireless/rockchip_wlan/rtl8821cs/os_dep/linux/custom_gpio_linux.c
index e46c4be2fde8..23401b7d6b7c 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/os_dep/linux/custom_gpio_linux.c
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/os_dep/linux/custom_gpio_linux.c
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/os_dep/linux/ioctl_cfg80211.c b/drivers/net/wireless/rockchip_wlan/rtl8821cs/os_dep/linux/ioctl_cfg80211.c
index 1a201ddddbae..2d184ef56cfa 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/os_dep/linux/ioctl_cfg80211.c
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/os_dep/linux/ioctl_cfg80211.c
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2019 Realtek Corporation.
@@ -30,6 +29,8 @@
 
 #if (LINUX_VERSION_CODE >= KERNEL_VERSION(4, 0, 0))
 #define STATION_INFO_INACTIVE_TIME	BIT(NL80211_STA_INFO_INACTIVE_TIME)
+#define STATION_INFO_RX_BYTES		BIT(NL80211_STA_INFO_RX_BYTES)
+#define STATION_INFO_TX_BYTES		BIT(NL80211_STA_INFO_TX_BYTES)
 #define STATION_INFO_LLID			BIT(NL80211_STA_INFO_LLID)
 #define STATION_INFO_PLID			BIT(NL80211_STA_INFO_PLID)
 #define STATION_INFO_PLINK_STATE	BIT(NL80211_STA_INFO_PLINK_STATE)
@@ -37,10 +38,14 @@
 #define STATION_INFO_TX_BITRATE		BIT(NL80211_STA_INFO_TX_BITRATE)
 #define STATION_INFO_RX_PACKETS		BIT(NL80211_STA_INFO_RX_PACKETS)
 #define STATION_INFO_TX_PACKETS		BIT(NL80211_STA_INFO_TX_PACKETS)
+#define STATION_INFO_TX_RETRIES		BIT(NL80211_STA_INFO_TX_RETRIES)
 #define STATION_INFO_TX_FAILED		BIT(NL80211_STA_INFO_TX_FAILED)
+#define STATION_INFO_RX_BITRATE		BIT(NL80211_STA_INFO_RX_BITRATE)
 #define STATION_INFO_LOCAL_PM		BIT(NL80211_STA_INFO_LOCAL_PM)
 #define STATION_INFO_PEER_PM		BIT(NL80211_STA_INFO_PEER_PM)
 #define STATION_INFO_NONPEER_PM		BIT(NL80211_STA_INFO_NONPEER_PM)
+#define STATION_INFO_RX_BYTES64		BIT(NL80211_STA_INFO_RX_BYTES64)
+#define STATION_INFO_TX_BYTES64		BIT(NL80211_STA_INFO_TX_BYTES64)
 #define STATION_INFO_ASSOC_REQ_IES	0
 #endif /* Linux kernel >= 4.0.0 */
 
@@ -206,6 +211,36 @@ static struct ieee80211_channel rtw_5ghz_a_channels[MAX_CHANNEL_NUM_5G] = {
 	CHAN5G(165, 0),	CHAN5G(169, 0),	CHAN5G(173, 0),	CHAN5G(177, 0),
 };
 
+enum nl80211_band _rtw_band_to_nl80211_band[] = {
+	[BAND_ON_2_4G] =	NL80211_BAND_2GHZ,
+	[BAND_ON_5G] =		NL80211_BAND_5GHZ,
+#if CONFIG_IEEE80211_BAND_6GHZ
+	#if (LINUX_VERSION_CODE >= KERNEL_VERSION(5, 4, 0))
+	[BAND_ON_6G] =		NL80211_BAND_6GHZ,
+	#else
+	[BAND_ON_6G] =		NUM_NL80211_BANDS,
+	#endif
+#endif
+};
+
+BAND_TYPE _nl80211_band_to_rtw_band[] = {
+	[NL80211_BAND_2GHZ] =	BAND_ON_2_4G,
+	[NL80211_BAND_5GHZ] =	BAND_ON_5G,
+#if (LINUX_VERSION_CODE >= KERNEL_VERSION(3, 6, 0))
+	[NL80211_BAND_60GHZ] = BAND_MAX,
+#endif
+#if (LINUX_VERSION_CODE >= KERNEL_VERSION(5, 4, 0))
+	#if CONFIG_IEEE80211_BAND_6GHZ
+	[NL80211_BAND_6GHZ] =	BAND_ON_6G,
+	#else
+	[NL80211_BAND_6GHZ] =	BAND_MAX,
+	#endif
+#endif
+};
+
+
+static int rtw_cfg80211_set_assocresp_ies(struct net_device *net, const u8 *buf, int len);
+
 #if (LINUX_VERSION_CODE >= KERNEL_VERSION(3, 8, 0))
 static u8 rtw_chbw_to_cfg80211_chan_def(struct wiphy *wiphy, struct cfg80211_chan_def *chdef, u8 ch, u8 bw, u8 offset, u8 ht)
 {
@@ -258,7 +293,6 @@ static u8 rtw_chbw_to_cfg80211_chan_def(struct wiphy *wiphy, struct cfg80211_cha
 	return ret;
 }
 
-#ifdef CONFIG_RTW_MESH
 static const char *nl80211_chan_width_str(enum nl80211_chan_width cwidth)
 {
 	switch (cwidth) {
@@ -343,7 +377,7 @@ static void rtw_get_chbw_from_cfg80211_chan_def(struct cfg80211_chan_def *chdef,
 		rtw_warn_on(1);
 	};
 }
-#endif /* CONFIG_RTW_MESH */
+
 #elif (LINUX_VERSION_CODE >= KERNEL_VERSION(2, 6, 29))
 static const char *nl80211_channel_type_str(enum nl80211_channel_type ctype)
 {
@@ -455,7 +489,20 @@ u8 rtw_cfg80211_ch_switch_notify(_adapter *adapter, u8 ch, u8 bw, u8 offset,
 
 #if (LINUX_VERSION_CODE >= KERNEL_VERSION(3, 19, 0))
 	if (started) {
+#if (LINUX_VERSION_CODE >= KERNEL_VERSION(5, 11, 0))
+
+		/* --- cfg80211_ch_switch_started_notfiy() ---
+		 *  A new parameter, bool quiet, is added from Linux kernel v5.11,
+		 *  to see if block-tx was requested by the AP. since currently,
+		 *  the API is used for station before connected in rtw_chk_start_clnt_join()
+		 *  the quiet is set to false here first. May need to refine it if
+		 *  called by others with block-tx.
+		 */
+
+		cfg80211_ch_switch_started_notify(adapter->pnetdev, &chdef, 0, false);
+#else
 		cfg80211_ch_switch_started_notify(adapter->pnetdev, &chdef, 0);
+#endif
 		goto exit;
 	}
 #endif
@@ -515,6 +562,9 @@ struct ieee80211_supported_band *rtw_spt_band_alloc(BAND_TYPE band)
 	struct ieee80211_supported_band *spt_band = NULL;
 	int n_channels, n_bitrates;
 
+	if (rtw_band_to_nl80211_band(band) == NUM_NL80211_BANDS)
+		goto exit;
+
 	if (band == BAND_ON_2_4G) {
 		n_channels = MAX_CHANNEL_NUM_2G;
 		n_bitrates = RTW_G_RATES_NUM;
@@ -2450,6 +2500,76 @@ static void rtw_cfg80211_fill_mesh_only_sta_info(struct mesh_plink_ent *plink, s
 }
 #endif /* CONFIG_RTW_MESH */
 
+static void rtw_desc_rate_to_nss_mcs(u8 rate_idx, u8 sgi, u8 *nss, u8 *mcs)
+{
+	u8 mcs_in = 0, nss_in = 0;
+
+	if ((DESC_RATEMCS0 <= rate_idx) &&
+	   (rate_idx <= DESC_RATEMCS31)) {
+		mcs_in = rate_idx - DESC_RATEMCS0;
+	} else if ((DESC_RATEVHTSS1MCS0 <= rate_idx) &&
+		   (rate_idx <= DESC_RATEVHTSS4MCS9)) {
+		mcs_in = (rate_idx - DESC_RATEVHTSS1MCS0) % 10;
+		nss_in = ((rate_idx - DESC_RATEVHTSS1MCS0) / 10) + 1;
+	}
+
+	if (nss)
+		*nss = nss_in;
+	if (mcs)
+		*mcs = mcs_in;
+}
+
+static void sta_set_rate_info(_adapter *adapter, struct rate_info *rinfo,
+			      u8 rtw_rate_idx, u8 sgi, u8 bw)
+{
+	u8 mcs = 0;
+	u8 nss = 0;
+
+	rinfo->flags = 0;
+	rtw_desc_rate_to_nss_mcs(rtw_rate_idx, sgi, &nss, &mcs);
+
+	if (sgi)
+		rinfo->flags |= RATE_INFO_FLAGS_SHORT_GI;
+#if (LINUX_VERSION_CODE >= KERNEL_VERSION(4, 0, 0))
+	if (nss) {
+		rinfo->flags |= RATE_INFO_FLAGS_VHT_MCS;
+		rinfo->bw = bw == CHANNEL_WIDTH_160 ? RATE_INFO_BW_160 :
+			    bw == CHANNEL_WIDTH_80 ? RATE_INFO_BW_80 :
+			    bw == CHANNEL_WIDTH_40 ? RATE_INFO_BW_40 : RATE_INFO_BW_20;
+		rinfo->nss = nss;
+		rinfo->mcs = mcs;
+	} else if (mcs) {
+		rinfo->flags |= RATE_INFO_FLAGS_MCS;
+		rinfo->bw = bw ? RATE_INFO_BW_40 : RATE_INFO_BW_20;
+		rinfo->mcs = mcs;
+	}
+#elif (LINUX_VERSION_CODE >= KERNEL_VERSION(3, 8, 0))
+	if (nss) {
+		rinfo->flags |= RATE_INFO_FLAGS_VHT_MCS;
+		rinfo->flags |= bw == CHANNEL_WIDTH_160 ? RATE_INFO_FLAGS_160_MHZ_WIDTH :
+				bw == CHANNEL_WIDTH_80 ? RATE_INFO_FLAGS_80_MHZ_WIDTH :
+				bw == CHANNEL_WIDTH_40 ? RATE_INFO_FLAGS_40_MHZ_WIDTH : 0;
+		rinfo->nss = nss;
+		rinfo->mcs = mcs;
+	} else if (mcs) {
+		rinfo->flags |= RATE_INFO_FLAGS_MCS;
+		rinfo->flags |= bw ? RATE_INFO_FLAGS_40_MHZ_WIDTH : 0;
+		rinfo->mcs = mcs;
+	}
+#else
+	if (nss) {
+		rinfo->legacy = 0;
+		RTW_INFO("Cannot report VHT rate in current kernel version\n");
+	} else if (mcs) {
+		rinfo->flags |= RATE_INFO_FLAGS_MCS;
+		rinfo->flags |= bw ? RATE_INFO_FLAGS_40_MHZ_WIDTH : 0;
+		rinfo->mcs = mcs;
+	}
+#endif
+	if (nss == 0 && mcs == 0)
+		rinfo->legacy = rtw_desc_rate_to_bitrate(0, rtw_rate_idx, 0);
+}
+
 static int cfg80211_rtw_get_station(struct wiphy *wiphy,
 	struct net_device *ndev,
 #if (LINUX_VERSION_CODE < KERNEL_VERSION(3, 16, 0))
@@ -2521,6 +2641,8 @@ static int cfg80211_rtw_get_station(struct wiphy *wiphy,
 	}
 
 	if (psta) {
+		u8 rtw_rate_idx, sgi, bw;
+
 		if (check_fwstate(pmlmepriv, WIFI_STATION_STATE) == _FALSE
 			|| check_fwstate(pmlmepriv, WIFI_ASOC_STATE) == _FALSE
 		) {
@@ -2533,8 +2655,41 @@ static int cfg80211_rtw_get_station(struct wiphy *wiphy,
 		sinfo->rx_packets = sta_rx_data_pkts(psta);
 		sinfo->filled |= STATION_INFO_TX_PACKETS;
 		sinfo->tx_packets = psta->sta_stats.tx_pkts;
-		sinfo->filled |= STATION_INFO_TX_FAILED;
-		sinfo->tx_failed = psta->sta_stats.tx_fail_cnt;
+#if (LINUX_VERSION_CODE >= KERNEL_VERSION(3, 9, 0))
+		sinfo->filled |= STATION_INFO_RX_BYTES64;
+		sinfo->filled |= STATION_INFO_TX_BYTES64;
+#else
+		sinfo->filled |= STATION_INFO_RX_BYTES;
+		sinfo->filled |= STATION_INFO_TX_BYTES;
+#endif
+		sinfo->rx_bytes = psta->sta_stats.rx_bytes;
+		sinfo->tx_bytes = psta->sta_stats.tx_bytes;
+
+		/* Although according to cfg80211.h struct station_info */
+		/* @txrate: current unicast bitrate from this station */
+		/* We still report sinfo->txrate as bitrate to this station */
+		sinfo->filled |= STATION_INFO_TX_BITRATE;
+		rtw_rate_idx = rtw_get_current_tx_rate(padapter, psta);
+		sgi = rtw_get_current_tx_sgi(padapter, psta);
+		bw = psta->cmn.bw_mode;
+		sta_set_rate_info(padapter, &sinfo->txrate, rtw_rate_idx, sgi, bw);
+#if (LINUX_VERSION_CODE >= KERNEL_VERSION(2, 6, 39))
+		/* Although @rxrate: current unicast bitrate to this station */
+		/* We report sinfo->rxrate as bitrate from this station */
+		sinfo->filled |= STATION_INFO_RX_BITRATE;
+		rtw_rate_idx = psta->curr_rx_rate & 0x7f;
+		sgi = (psta->curr_rx_rate & 0x80) >> 7;
+		bw = psta->cmn.bw_mode;
+		sta_set_rate_info(padapter, &sinfo->rxrate, rtw_rate_idx, sgi, bw);
+#endif
+#if (LINUX_VERSION_CODE >= KERNEL_VERSION(2, 6, 37))
+		//if (rtw_get_sta_tx_stat(padapter, psta->cmn.mac_id, psta->cmn.mac_addr) != RTW_NOT_SUPPORT) {
+			sinfo->filled |= STATION_INFO_TX_FAILED;
+			sinfo->filled |= STATION_INFO_TX_RETRIES;
+			sinfo->tx_failed = psta->sta_stats.tx_fail_cnt_sum;
+			sinfo->tx_retries = psta->sta_stats.tx_retry_cnt_sum;
+		//}
+#endif
 	}
 
 #ifdef CONFIG_RTW_MESH
@@ -2802,9 +2957,11 @@ u32 rtw_cfg80211_wait_scan_req_empty(_adapter *adapter, u32 timeout_ms)
 
 	pass_ms = rtw_get_passing_time_ms(start);
 
-	if (empty == _FALSE && pass_ms > timeout_ms)
+	if (empty == _FALSE && pass_ms > timeout_ms) {
 		RTW_PRINT(FUNC_ADPT_FMT" pass_ms:%u, timeout\n"
 			, FUNC_ADPT_ARG(adapter), pass_ms);
+		rtw_cfg80211_indicate_scan_done(adapter, _TRUE);
+	}
 
 	return pass_ms;
 }
@@ -3001,8 +3158,8 @@ static int rtw_cfg80211_set_probe_req_wpsp2pie(_adapter *padapter, char *buf, in
 			_rtw_memcpy(pmlmepriv->p2p_probe_req_ie, p2p_ie, p2p_ielen);
 			pmlmepriv->p2p_probe_req_ie_len = p2p_ielen;
 
-			if (rtw_get_p2p_attr_content(p2p_ie, p2p_ielen, P2P_ATTR_LISTEN_CH, (u8 *)listen_ch_attr, (uint *) &attr_contentlen)
-				&& attr_contentlen == 5) {
+			attr_contentlen = sizeof(listen_ch_attr);
+			if (rtw_get_p2p_attr_content(p2p_ie, p2p_ielen, P2P_ATTR_LISTEN_CH, (u8 *)listen_ch_attr, (uint *) &attr_contentlen)) {
 				if (wdinfo->listen_channel !=  listen_ch_attr[4]) {
 					RTW_INFO(FUNC_ADPT_FMT" listen channel - country:%c%c%c, class:%u, ch:%u\n",
 						FUNC_ADPT_ARG(padapter), listen_ch_attr[0], listen_ch_attr[1], listen_ch_attr[2],
@@ -3182,6 +3339,21 @@ static int cfg80211_rtw_scan(struct wiphy *wiphy
 	RTW_INFO(FUNC_ADPT_FMT"%s\n", FUNC_ADPT_ARG(padapter)
 		, wdev == wiphy_to_pd_wdev(wiphy) ? " PD" : "");
 
+#ifdef CONFIG_RTW_SCAN_RAND
+#if (LINUX_VERSION_CODE >= KERNEL_VERSION(3, 19, 0))
+	if (request->flags & NL80211_SCAN_FLAG_RANDOM_ADDR) {
+		get_random_mask_addr(pwdev_priv->pno_mac_addr, request->mac_addr,
+				     request->mac_addr_mask);
+		print_hex_dump(KERN_DEBUG, "random mac_addr: ", 
+			DUMP_PREFIX_OFFSET, 16, 1, pwdev_priv->pno_mac_addr, ETH_ALEN, 1);
+	}
+	else
+		memset(pwdev_priv->pno_mac_addr, 0xFF, ETH_ALEN);
+
+#endif
+#endif
+
+
 #if 1
 	ssc_chk = rtw_sitesurvey_condition_check(padapter, _TRUE);
 
@@ -3517,8 +3689,7 @@ static int cfg80211_rtw_scan(struct wiphy *wiphy
 	return ret;
 }
 
-#if (LINUX_VERSION_CODE >= KERNEL_VERSION(4, 5, 0)) && \
-    defined(CONFIG_RTW_ABORT_SCAN)
+#if (LINUX_VERSION_CODE >= KERNEL_VERSION(4, 5, 0))
 static void cfg80211_rtw_abort_scan(struct wiphy *wiphy,
 				    struct wireless_dev *wdev)
 {
@@ -3773,7 +3944,8 @@ static int rtw_cfg80211_set_wpa_ie(_adapter *padapter, u8 *pie, size_t ielen)
 	int ret = 0;
 	int wpa_ielen = 0;
 	int wpa2_ielen = 0;
-	u8 *pwpa, *pwpa2;
+	int rsnx_ielen = 0;
+	u8 *pwpa, *pwpa2, *prsnx;
 	u8 null_addr[] = {0, 0, 0, 0, 0, 0};
 
 	if (pie == NULL || !ielen) {
@@ -3817,14 +3989,33 @@ static int rtw_cfg80211_set_wpa_ie(_adapter *padapter, u8 *pie, size_t ielen)
 
 	pwpa2 = rtw_get_wpa2_ie(buf, &wpa2_ielen, ielen);
 	if (pwpa2 && wpa2_ielen > 0) {
-		if (rtw_parse_wpa2_ie(pwpa2, wpa2_ielen + 2, &group_cipher, &pairwise_cipher, NULL, NULL, &mfp_opt) == _SUCCESS) {
+		if (rtw_parse_wpa2_ie(pwpa2, wpa2_ielen + 2, &group_cipher, &pairwise_cipher, NULL, NULL, &mfp_opt, NULL) == _SUCCESS) {
 			padapter->securitypriv.dot11AuthAlgrthm = dot11AuthAlgrthm_8021X;
 			padapter->securitypriv.ndisauthtype = Ndis802_11AuthModeWPA2PSK;
 			_rtw_memcpy(padapter->securitypriv.supplicant_ie, &pwpa2[0], wpa2_ielen + 2);
 
 			RTW_INFO("got wpa2_ie, wpa2_ielen:%u\n", wpa2_ielen);
 		}
-	}
+
+		prsnx = rtw_get_ie(buf, WLAN_EID_RSNX, &rsnx_ielen, ielen);
+		if (prsnx && (rsnx_ielen > 0)) {
+			if ((rsnx_ielen + 2) <= MAX_RSNX_IE_LEN) {
+				_rtw_memset(padapter->securitypriv.rsnx_ie, 0,
+					MAX_RSNX_IE_LEN);
+				padapter->securitypriv.rsnx_ie_len = \
+					(rsnx_ielen + 2);
+				_rtw_memcpy(padapter->securitypriv.rsnx_ie,
+					prsnx,
+				padapter->securitypriv.rsnx_ie_len);
+			} else
+				RTW_ERR("%s:no more buf to save RSNX Cap!\n",
+					__func__);
+		} else {
+			_rtw_memset(padapter->securitypriv.rsnx_ie, 0,
+					MAX_RSNX_IE_LEN);
+			padapter->securitypriv.rsnx_ie_len = 0;
+		}
+	} /* end of (pwpa2 && wpa2_ielen > 0) */
 
 	if (group_cipher == 0)
 		group_cipher = WPA_CIPHER_NONE;
@@ -4643,7 +4834,6 @@ static void _rtw_set_pmksa(struct net_device *ndev,
 
 			_rtw_memcpy(psecuritypriv->PMKIDList[index].PMKID, pmkid, WLAN_PMKID_LEN);
 			psecuritypriv->PMKIDList[index].bUsed = _TRUE;
-			psecuritypriv->PMKIDIndex = index + 1;
 			blInserted = _TRUE;
 			break;
 		}
@@ -5213,9 +5403,11 @@ static int rtw_add_beacon(_adapter *adapter, const u8 *head, size_t head_len, co
 	}
 #endif /* CONFIG_P2P */
 
-	/* pbss_network->IEs will not include p2p_ie, wfd ie */
-	rtw_ies_remove_ie(pbuf, &len, _BEACON_IE_OFFSET_, _VENDOR_SPECIFIC_IE_, P2P_OUI, 4);
-	rtw_ies_remove_ie(pbuf, &len, _BEACON_IE_OFFSET_, _VENDOR_SPECIFIC_IE_, WFD_OUI, 4);
+	if (adapter_to_dvobj(adapter)->wpas_type == RTW_WPAS_ANDROID) {
+		/* pbss_network->IEs will not include p2p_ie, wfd ie */
+		rtw_ies_remove_ie(pbuf, &len, _BEACON_IE_OFFSET_, _VENDOR_SPECIFIC_IE_, P2P_OUI, 4);
+		rtw_ies_remove_ie(pbuf, &len, _BEACON_IE_OFFSET_, _VENDOR_SPECIFIC_IE_, WFD_OUI, 4);
+	}
 
 	if (rtw_check_beacon_data(adapter, pbuf,  len) == _SUCCESS) {
 #ifdef CONFIG_P2P
@@ -5297,6 +5489,13 @@ static int cfg80211_rtw_start_ap(struct wiphy *wiphy, struct net_device *ndev,
 		goto exit;
 	}
 
+	if (adapter_to_dvobj(adapter)->wpas_type == RTW_WPAS_W1FI) {
+		struct mlme_ext_priv *pmlmeext = &(adapter->mlmeextpriv);
+
+		/* turn on the beacon send */
+		pmlmeext->bstart_bss = _TRUE;
+	}
+
 	/* Kernel < v5.x, the auth_type set as NL80211_AUTHTYPE_AUTOMATIC. if
 	 * the AKM SAE in the RSN IE, we have to update the auth_type for SAE in
 	 * rtw_check_beacon_data().
@@ -5312,6 +5511,17 @@ static int cfg80211_rtw_start_ap(struct wiphy *wiphy, struct net_device *ndev,
 	ret = rtw_add_beacon(adapter, settings->beacon.head, settings->beacon.head_len,
 		settings->beacon.tail, settings->beacon.tail_len);
 
+#ifdef CONFIG_RTW_80211R_AP
+	rtw_ft_update_assocresp_ies(ndev, settings);
+#endif
+
+	if (settings->beacon.assocresp_ies &&
+		settings->beacon.assocresp_ies_len > 0) {
+		rtw_cfg80211_set_assocresp_ies(ndev,
+			settings->beacon.assocresp_ies,
+			settings->beacon.assocresp_ies_len);
+	}
+
 	if (settings->ssid && settings->ssid_len) {
 		WLAN_BSSID_EX *pbss_network = &adapter->mlmepriv.cur_network.network;
 		WLAN_BSSID_EX *pbss_network_ext = &adapter->mlmeextpriv.mlmext_info.network;
@@ -5336,6 +5546,37 @@ static int cfg80211_rtw_start_ap(struct wiphy *wiphy, struct net_device *ndev,
 	return ret;
 }
 
+static int rtw_cfg80211_set_assocresp_ies(struct net_device *net, const u8 *buf, int len)
+{
+	int ret = 0;
+	_adapter *padapter = (_adapter *)rtw_netdev_priv(net);
+	struct mlme_priv *pmlmepriv = &(padapter->mlmepriv);
+
+	RTW_INFO("%s, ielen=%d\n", __func__, len);
+
+	if (len <= 0)
+		goto exit;
+
+	if (pmlmepriv->assoc_rsp) {
+		u32 free_len = pmlmepriv->assoc_rsp_len;
+
+		pmlmepriv->assoc_rsp_len = 0;
+		rtw_mfree(pmlmepriv->assoc_rsp, free_len);
+		pmlmepriv->assoc_rsp = NULL;
+	}
+
+	pmlmepriv->assoc_rsp = rtw_malloc(len);
+	if (pmlmepriv->assoc_rsp == NULL) {
+		RTW_INFO("%s()-%d: rtw_malloc() ERROR!\n", __FUNCTION__, __LINE__);
+		return -EINVAL;
+	}
+	_rtw_memcpy(pmlmepriv->assoc_rsp, buf, len);
+	pmlmepriv->assoc_rsp_len = len;
+
+exit:
+	return ret;
+}
+
 static int cfg80211_rtw_change_beacon(struct wiphy *wiphy, struct net_device *ndev,
 		struct cfg80211_beacon_data *info)
 {
@@ -5344,6 +5585,19 @@ static int cfg80211_rtw_change_beacon(struct wiphy *wiphy, struct net_device *nd
 
 	RTW_INFO(FUNC_NDEV_FMT"\n", FUNC_NDEV_ARG(ndev));
 
+#ifdef not_yet
+	/*
+	 * @proberesp_ies: extra information element(s) to add into Probe Response
+	 *	frames or %NULL
+	 * @proberesp_ies_len: length of proberesp_ies in octets
+	 */
+	if (info->proberesp_ies_len > 0)
+		rtw_cfg80211_set_proberesp_ies(ndev, info->proberesp_ies, info->proberesp_ies_len);
+#endif /* not_yet */
+
+	if (info->assocresp_ies_len > 0)
+		rtw_cfg80211_set_assocresp_ies(ndev, info->assocresp_ies, info->assocresp_ies_len);
+
 	ret = rtw_add_beacon(adapter, info->head, info->head_len, info->tail, info->tail_len);
 
 	return ret;
@@ -6392,6 +6646,7 @@ static int rtw_cfg80211_set_probe_resp_wpsp2pie(struct net_device *net, char *bu
 			#endif
 
 			/* Check P2P Capability ATTR */
+			attr_contentlen = sizeof(cap_attr);
 			if (rtw_get_p2p_attr_content(p2p_ie, p2p_ielen, P2P_ATTR_CAPABILITY, (u8 *)&cap_attr, (uint *) &attr_contentlen)) {
 				u8 grp_cap = 0;
 				/* RTW_INFO( "[%s] Got P2P Capability Attr!!\n", __FUNCTION__ ); */
@@ -6768,7 +7023,7 @@ static void rtw_get_chbwoff_from_cfg80211_chan_def(
 	switch (chandef->width) {
 	case NL80211_CHAN_WIDTH_20_NOHT:
 		*ht = 0;
-		/* fall through */
+		fallthrough;
 	case NL80211_CHAN_WIDTH_20:
 		*bw = CHANNEL_WIDTH_20;
 		*offset = HAL_PRIME_CHNL_OFFSET_DONT_CARE;
@@ -6883,6 +7138,7 @@ void rtw_cfg80211_external_auth_request(_adapter *padapter, union recv_frame *rf
 		pmlmeinfo->network.Ssid.SsidLength);
 	params.key_mgmt_suite = 0x8ac0f00;
 
+	RTW_INFO("external auth: use kernel API: cfg80211_external_auth_request()\n");
 	cfg80211_external_auth_request(netdev,
 		(struct cfg80211_external_auth_params *)&params, GFP_ATOMIC);
 #elif (KERNEL_VERSION(2, 6, 37) <= LINUX_VERSION_CODE)
@@ -6892,13 +7148,16 @@ void rtw_cfg80211_external_auth_request(_adapter *padapter, union recv_frame *rf
 	_rtw_memcpy(frame + 10, adapter_mac_addr(padapter), ETH_ALEN);
 	_rtw_memcpy(frame + 16, get_my_bssid(&pmlmeinfo->network), ETH_ALEN);
 	RTW_PUT_LE32((frame + 18), 0x8ac0f00);
+	RTW_PUT_LE32((frame + 24), 0x0003);
 
 	if (pmlmeinfo->network.Ssid.SsidLength) {
-		*(frame + 23) = pmlmeinfo->network.Ssid.SsidLength;
-		_rtw_memcpy(frame + 24, pmlmeinfo->network.Ssid.Ssid,
+		*(frame + 26) = pmlmeinfo->network.Ssid.SsidLength;
+		_rtw_memcpy(frame + 27, pmlmeinfo->network.Ssid.Ssid,
 			pmlmeinfo->network.Ssid.SsidLength);
-		frame_len = 24 + pmlmeinfo->network.Ssid.SsidLength;
+		frame_len = 27 + pmlmeinfo->network.Ssid.SsidLength;
 	}
+
+	RTW_INFO("external auth: with wpa_supplicant patch\n");
 	rtw_cfg80211_rx_mgmt(wdev, freq, 0, frame, frame_len, GFP_ATOMIC);
 #endif
 }
@@ -7170,6 +7429,7 @@ void rtw_cfg80211_issue_p2p_provision_request(_adapter *padapter, const u8 *buf,
 	pwdinfo->tx_prov_disc_info.wps_config_method_request = WPS_CM_PUSH_BUTTON;
 
 	rtw_get_wps_ie(frame_body + _PUBLIC_ACTION_IE_OFFSET_, frame_body_len - _PUBLIC_ACTION_IE_OFFSET_, wpsie, &wpsielen);
+	wps_devicepassword_id_len = sizeof(wps_devicepassword_id);
 	rtw_get_wps_attr_content(wpsie, wpsielen, WPS_ATTR_DEVICE_PWID, (u8 *) &wps_devicepassword_id, &wps_devicepassword_id_len);
 	wps_devicepassword_id = be16_to_cpu(wps_devicepassword_id);
 
@@ -7197,7 +7457,9 @@ void rtw_cfg80211_issue_p2p_provision_request(_adapter *padapter, const u8 *buf,
 
 	if (rtw_get_p2p_ie(frame_body + _PUBLIC_ACTION_IE_OFFSET_, frame_body_len - _PUBLIC_ACTION_IE_OFFSET_, p2p_ie, &p2p_ielen)) {
 
+		devinfo_contentlen = sizeof(devinfo_content);
 		rtw_get_p2p_attr_content(p2p_ie, p2p_ielen, P2P_ATTR_DEVICE_INFO, devinfo_content, &devinfo_contentlen);
+		capability_len = sizeof(capability);
 		rtw_get_p2p_attr_content(p2p_ie, p2p_ielen, P2P_ATTR_CAPABILITY, (u8 *)&capability, &capability_len);
 
 	}
@@ -8295,13 +8557,13 @@ static void cfg80211_rtw_mgmt_frame_register(struct wiphy *wiphy,
 		else
 			CLR_CFG80211_REPORT_MGMT(pwdev_priv, IEEE80211_STYPE_AUTH);
 		break;
-#ifdef not_yet
 	case IEEE80211_STYPE_PROBE_REQ: /* 0x0040 */
 		if (reg > 0)
 			SET_CFG80211_REPORT_MGMT(pwdev_priv, IEEE80211_STYPE_PROBE_REQ);
 		else
 			CLR_CFG80211_REPORT_MGMT(pwdev_priv, IEEE80211_STYPE_PROBE_REQ);
 		break;
+#ifdef not_yet
 	case IEEE80211_STYPE_ACTION: /* 0x00D0 */
 		if (reg > 0)
 			SET_CFG80211_REPORT_MGMT(pwdev_priv, IEEE80211_STYPE_ACTION);
@@ -8336,7 +8598,9 @@ static void cfg80211_rtw_update_mgmt_frame_register(
 	padapter = (_adapter *)rtw_netdev_priv(ndev);
 	pwdev_priv = adapter_wdev_data(padapter);
 
-	rtw_stypes_mask = BIT(IEEE80211_STYPE_AUTH >> 4);
+	/* Driver only supports Auth and Probe request */
+	rtw_stypes_mask = BIT(IEEE80211_STYPE_AUTH >> 4) |
+			  BIT(IEEE80211_STYPE_PROBE_REQ >> 4);
 
 #ifdef CONFIG_DEBUG_CFG80211
 	RTW_INFO(FUNC_ADPT_FMT " global_stypes:0x%08x interface_stypes:0x%08x\n",
@@ -9592,7 +9856,11 @@ ret = rtw_android_cfg80211_pno_setup(dev, ssids,
 }
 
 static int cfg80211_rtw_sched_scan_stop(struct wiphy *wiphy,
-		struct net_device *dev)
+		struct net_device *dev
+#if (LINUX_VERSION_CODE >= KERNEL_VERSION(4, 12, 0))
+		, u64 reqid
+#endif
+)
 {
 	return rtw_android_pno_enable(dev, _FALSE);
 }
@@ -9608,12 +9876,12 @@ int	cfg80211_rtw_resume(struct wiphy *wiphy) {
 	_adapter *padapter;
 	struct pwrctrl_priv *pwrpriv;
 	struct mlme_priv *pmlmepriv;
-	padapter = wiphy_to_adapter(wiphy);
-	pwrpriv = adapter_to_pwrctl(padapter);
-	pmlmepriv = &padapter->mlmepriv;
 	struct sitesurvey_parm parm;
 	int i, len;
 
+	padapter = wiphy_to_adapter(wiphy);
+	pwrpriv = adapter_to_pwrctl(padapter);
+	pmlmepriv = &padapter->mlmepriv;
 
 	RTW_DBG("==> %s\n",__func__);
 	if (pwrpriv->wowlan_last_wake_reason == RX_PNO) {
@@ -9645,7 +9913,11 @@ int	cfg80211_rtw_resume(struct wiphy *wiphy) {
 		}
 		
 		_enter_critical_bh(&pmlmepriv->lock, &irqL);
+#if (LINUX_VERSION_CODE >= KERNEL_VERSION(4, 12, 0))
+		cfg80211_sched_scan_results(padapter->rtw_wdev->wiphy, 0);
+#else
 		cfg80211_sched_scan_results(padapter->rtw_wdev->wiphy);
+#endif
 		_exit_critical_bh(&pmlmepriv->lock, &irqL);
 
 	}
@@ -10032,9 +10304,16 @@ static int rtw_cfg80211_init_wiphy(_adapter *adapter, struct wiphy *wiphy)
 	/* wiphy->flags |= WIPHY_FLAG_OFFCHAN_TX | WIPHY_FLAG_HAVE_AP_SME; */
 #endif
 
-#if defined(CONFIG_PM) && (LINUX_VERSION_CODE >= KERNEL_VERSION(3, 0, 0) && \
-			   LINUX_VERSION_CODE < KERNEL_VERSION(4, 12, 0))
-	wiphy->flags |= WIPHY_FLAG_SUPPORTS_SCHED_SCAN;
+#if (KERNEL_VERSION(3, 2, 0) <= LINUX_VERSION_CODE)
+	wiphy->flags |= WIPHY_FLAG_AP_UAPSD;
+#endif
+
+#if defined(CONFIG_PM) && (LINUX_VERSION_CODE >= KERNEL_VERSION(3, 0, 0))
+#if (LINUX_VERSION_CODE >= KERNEL_VERSION(4, 12, 0))
+ 	wiphy->max_sched_scan_reqs = 1;
+#else
+  	wiphy->flags |= WIPHY_FLAG_SUPPORTS_SCHED_SCAN;
+#endif
 #ifdef CONFIG_PNO_SUPPORT
 	wiphy->max_sched_scan_ssids = MAX_PNO_LIST_COUNT;
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(3, 2, 0)
@@ -10103,6 +10382,12 @@ static int rtw_cfg80211_init_wiphy(_adapter *adapter, struct wiphy *wiphy)
 	wiphy->features |= NL80211_FEATURE_SAE;
 #endif
 
+#ifdef CONFIG_RTW_SCAN_RAND
+	#if (KERNEL_VERSION(3, 19, 0) <= LINUX_VERSION_CODE)
+	wiphy->features |= NL80211_FEATURE_SCAN_RANDOM_MAC_ADDR;
+	#endif
+#endif
+
 #if (LINUX_VERSION_CODE >= KERNEL_VERSION(3, 11, 0))
 #ifdef CONFIG_WIFI_MONITOR
 	/* Currently only for Monitor debugging */
@@ -10110,6 +10395,13 @@ static int rtw_cfg80211_init_wiphy(_adapter *adapter, struct wiphy *wiphy)
 #endif
 #endif /* (LINUX_VERSION_CODE >= KERNEL_VERSION(3, 11, 0)) */
 
+#if (LINUX_VERSION_CODE >= KERNEL_VERSION(3, 12, 0))
+	wiphy->flags |= WIPHY_FLAG_HAS_CHANNEL_SWITCH;
+#endif
+#if (LINUX_VERSION_CODE >= KERNEL_VERSION(3, 16, 0))
+	wiphy->max_num_csa_counters = MAX_CSA_CNT;
+#endif
+
 	ret = _SUCCESS;
 
 exit:
@@ -10323,6 +10615,10 @@ void rtw_cfg80211_external_auth_status(struct wiphy *wiphy, struct net_device *d
 			buf = NULL;
 			len = 0;
 		}
+#endif
+	} else if (psta && (params->status == WLAN_STATUS_UNSPECIFIED_FAILURE)) {
+#ifdef CONFIG_AP_MODE
+		rtw_cfg80211_indicate_sta_disassoc(padapter, psta->cmn.mac_addr, WLAN_STATUS_UNSPECIFIED_FAILURE);
 #endif
 	} else {
 		/* STA mode */
@@ -10330,6 +10626,120 @@ void rtw_cfg80211_external_auth_status(struct wiphy *wiphy, struct net_device *d
 	}
 }
 
+#ifdef CONFIG_AP_MODE
+static int check_channel(_adapter* padapter,u8 ch, u8 bw, u8 offset) {
+	int ret = _SUCCESS;
+	u8 ifbmp_s = rtw_mi_get_ld_sta_ifbmp(padapter);
+	u8 u_ch, u_bw, u_offset;
+	struct rf_ctl_t *rfctl = adapter_to_rfctl(padapter);
+	struct mlme_priv *pmlmepriv = &(padapter->mlmepriv);
+	struct	mlme_ext_priv *pmlmeext = &padapter->mlmeextpriv;
+	
+	u_ch = rtw_mi_get_union_chan(padapter);
+	u_bw = rtw_mi_get_union_bw(padapter);
+	u_offset = rtw_mi_get_union_offset(padapter);
+	
+	if (rtw_chset_search_ch(rfctl->channel_set, ch) < 0
+		|| rtw_chset_is_ch_non_ocp(rfctl->channel_set, ch)) {
+		ret = _FAIL;
+		RTW_INFO("ch not legal %d,%d,%d\n", ch, bw, offset);
+	} else if(pmlmeext->cur_channel == ch && pmlmeext->cur_bwmode == bw && pmlmeext->cur_ch_offset == offset) {
+		/* channel, bandwidth, offset doesn't change */
+		ret = _FAIL;
+		RTW_INFO("ch same, skip switching %d,%d,%d ==> %d,%d,%d  (union:%d,%d,%d)\n",
+		 pmlmeext->cur_channel, pmlmeext->cur_bwmode, pmlmeext->cur_ch_offset, ch, bw, offset, u_ch, u_bw, u_offset);
+	} else if((u_ch != ch || (offset != HAL_PRIME_CHNL_OFFSET_DONT_CARE && u_offset != offset)) && ifbmp_s) {
+		ret = _FAIL;
+		RTW_INFO("must follow STA's ch, %d,%d,%d ==> %d,%d,%d  (union:%d,%d,%d)\n",
+		 pmlmeext->cur_channel, pmlmeext->cur_bwmode, pmlmeext->cur_ch_offset, ch, bw, offset, u_ch, u_bw, u_offset);
+	} else {
+		RTW_INFO("channel switch.%d,%d,%d ==> %d,%d,%d  (union:%d,%d,%d)\n",
+		 pmlmeext->cur_channel, pmlmeext->cur_bwmode, pmlmeext->cur_ch_offset, ch, bw, offset, u_ch, u_bw, u_offset);
+	}
+	return ret;
+}
+
+#if (LINUX_VERSION_CODE >= KERNEL_VERSION(3, 12, 0))
+static int cfg80211_rtw_channel_switch(struct wiphy *wiphy,
+				struct net_device *dev,
+				struct cfg80211_csa_settings *params)
+{
+	_adapter *padapter = NULL;
+	struct dvobj_priv *dvobj = NULL;
+	PNDIS_802_11_VARIABLE_IEs	pIE;
+	u8 *ies;
+	u8 mode = 0, count = 0, bw = CHANNEL_WIDTH_20, ch = 0, offset = HAL_PRIME_CHNL_OFFSET_DONT_CARE, ht = 0, vht = 0, ifbmp = 0, enable = 1;
+	u32 i, ies_len;
+	struct rf_ctl_t *rfctl;
+
+	padapter = (_adapter *)rtw_netdev_priv(dev);
+	dvobj = adapter_to_dvobj(padapter);
+	rfctl = dvobj_to_rfctl(dvobj);
+
+	ifbmp = rtw_mi_get_ap_mesh_ifbmp(padapter);
+
+	if(params && params->chandef.chan) {
+
+		rtw_get_chbw_from_cfg80211_chan_def(&params->chandef, &ht, &ch, &bw, &offset);
+
+		if (check_channel(padapter, ch, bw, offset) == _FAIL)
+			return -EINVAL;
+
+		if (!ch) {
+			RTW_INFO(" => ch:%u invalid\n", ch);
+			return -EINVAL;
+		}
+		
+		/* return error code when switch process is running */
+		if(rfctl->ap_csa_en == AP_SWITCH_CH_CSA || rfctl->ap_csa_en == STA_RX_CSA
+			|| rfctl->ap_csa_en == CSA_STA_JOINBSS)
+			return -EINVAL;
+		
+		/* todo, disable vht or something */
+		vht = ht && ch > 14 && bw >= CHANNEL_WIDTH_80;
+		RTW_INFO(" => ch:%u,%u,%u, ht:%u, vht:%u\n", ch, bw, offset, ht, vht);
+
+		if(params->beacon_csa.tail) {
+			/* dump_ies(RTW_DBGDUMP, (char *) params->beacon_csa.tail, params->beacon_csa.tail_len); */
+			ies = (u8 *)params->beacon_csa.tail;
+			ies_len = params->beacon_csa.tail_len;
+			for (i = 0; i + 1 < ies_len;) {
+				pIE = (PNDIS_802_11_VARIABLE_IEs)(ies + i);
+
+				switch (pIE->ElementID) {
+				case WLAN_EID_CHANNEL_SWITCH:
+					mode = *(pIE->data);
+					ch = *(pIE->data + 1);
+					count = *(pIE->data + 2);
+					RTW_INFO("CSA IE, mode=%d, ch=%d, count=%d\n", mode, ch, count);
+					break;
+				default:
+					break;
+				}
+				i += (pIE->Length + 2);
+			}
+
+			if (count == 0) {
+				RTW_INFO("CSA count should not be 0\n");
+				return -EINVAL;
+			}
+
+			if (ifbmp && count > 0) {
+				rfctl->ap_csa_en = AP_SWITCH_CH_CSA;
+				rfctl->ap_csa_ch = ch;
+				rfctl->ap_csa_switch_cnt = count;
+				rfctl->ap_csa_ch_offset = offset;
+				rfctl->ap_csa_ch_width = bw;
+				rtw_set_ap_csa_cmd(padapter);
+			}
+		}
+	}
+
+	return 0;
+}
+#endif /* (LINUX_VERSION_CODE >= KERNEL_VERSION(3, 12, 0)) */
+#endif /* CONFIG_AP_MODE */
+
 static struct cfg80211_ops rtw_cfg80211_ops = {
 	.change_virtual_intf = cfg80211_rtw_change_iface,
 	.add_key = cfg80211_rtw_add_key,
@@ -10344,8 +10754,7 @@ static struct cfg80211_ops rtw_cfg80211_ops = {
 #endif /*CONFIG_GTK_OL*/
 	.get_station = cfg80211_rtw_get_station,
 	.scan = cfg80211_rtw_scan,
-#if (LINUX_VERSION_CODE >= KERNEL_VERSION(4, 5, 0)) && \
-    defined(CONFIG_RTW_ABORT_SCAN)
+#if (LINUX_VERSION_CODE >= KERNEL_VERSION(4, 5, 0))
 	.abort_scan = cfg80211_rtw_abort_scan,
 #endif
 	.set_wiphy_params = cfg80211_rtw_set_wiphy_params,
@@ -10464,6 +10873,11 @@ static struct cfg80211_ops rtw_cfg80211_ops = {
     || defined(CONFIG_KERNEL_PATCH_EXTERNAL_AUTH)
 	.external_auth = cfg80211_rtw_external_auth,
 #endif
+#ifdef CONFIG_AP_MODE
+#if (LINUX_VERSION_CODE >= KERNEL_VERSION(3, 12, 0))
+	.channel_switch = cfg80211_rtw_channel_switch,
+#endif
+#endif /* #ifdef CONFIG_AP_MODE */
 };
 
 struct wiphy *rtw_wiphy_alloc(_adapter *padapter, struct device *dev)
@@ -10488,6 +10902,8 @@ struct wiphy *rtw_wiphy_alloc(_adapter *padapter, struct device *dev)
 	wiphy_data->txpwr_total_lmt_mbm = UNSPECIFIED_MBM;
 	wiphy_data->txpwr_total_target_mbm = UNSPECIFIED_MBM;
 
+	rtw_regd_init(wiphy);
+
 	if (rtw_cfg80211_init_wiphy(padapter, wiphy) != _SUCCESS) {
 		rtw_wiphy_free(wiphy);
 		wiphy = NULL;
@@ -10507,6 +10923,8 @@ void rtw_wiphy_free(struct wiphy *wiphy)
 
 	RTW_INFO(FUNC_WIPHY_FMT"\n", FUNC_WIPHY_ARG(wiphy));
 
+	rtw_regd_deinit(wiphy);
+
 	if (wiphy->bands[NL80211_BAND_2GHZ]) {
 		rtw_spt_band_free(wiphy->bands[NL80211_BAND_2GHZ]);
 		wiphy->bands[NL80211_BAND_2GHZ] = NULL;
@@ -10521,6 +10939,9 @@ void rtw_wiphy_free(struct wiphy *wiphy)
 
 int rtw_wiphy_register(struct wiphy *wiphy)
 {
+	struct get_chplan_resp *chplan;
+	int ret;
+
 	RTW_INFO(FUNC_WIPHY_FMT"\n", FUNC_WIPHY_ARG(wiphy));
 
 #if ( (LINUX_VERSION_CODE >= KERNEL_VERSION(3, 14, 0)) \
@@ -10528,9 +10949,21 @@ int rtw_wiphy_register(struct wiphy *wiphy)
 	rtw_cfgvendor_attach(wiphy);
 #endif
 
-	rtw_regd_init(wiphy);
+	ret = wiphy_register(wiphy);
+	if (ret != 0) {
+		RTW_INFO(FUNC_WIPHY_FMT" wiphy_register() return %d\n", FUNC_WIPHY_ARG(wiphy), ret);
+		goto exit;
+	}
+
+	rtw_chset_hook_os_channels(dvobj_to_rfctl(wiphy_to_dvobj(wiphy)));
 
-	return wiphy_register(wiphy);
+	if (rtw_get_chplan_cmd(wiphy_to_adapter(wiphy), RTW_CMDF_DIRECTLY, &chplan) == _SUCCESS)
+		rtw_regd_change_complete_sync(wiphy, chplan, 1);
+	else
+		rtw_warn_on(1);
+
+exit:
+	return ret;
 }
 
 void rtw_wiphy_unregister(struct wiphy *wiphy)
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/os_dep/linux/ioctl_cfg80211.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/os_dep/linux/ioctl_cfg80211.h
index 7e32d47afae1..f3e6d791aaa2 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/os_dep/linux/ioctl_cfg80211.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/os_dep/linux/ioctl_cfg80211.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017 Realtek Corporation.
@@ -186,7 +185,7 @@ struct rtw_wdev_priv {
 	ATOMIC_T switch_ch_to;
 #endif
 
-#ifdef CONFIG_RTW_CFGVENDOR_RANDOM_MAC_OUI
+#if defined(CONFIG_RTW_CFGVENDOR_RANDOM_MAC_OUI) || defined(CONFIG_RTW_SCAN_RAND)
 	u8 pno_mac_addr[ETH_ALEN];
 	u16 pno_scan_seq_num;
 #endif
@@ -246,6 +245,10 @@ struct rtw_wiphy_data {
 	struct wireless_dev *pd_wdev; /* P2P device wdev */
 #endif
 
+	_list async_regd_change_list;
+	_mutex async_regd_change_mutex;
+	_workitem async_regd_change_work;
+
 	s16 txpwr_total_lmt_mbm;	/* EIRP */
 	s16 txpwr_total_target_mbm;	/* EIRP */
 };
@@ -439,9 +442,11 @@ u8 rtw_cfg80211_ch_switch_notify(_adapter *adapter, u8 ch, u8 bw, u8 offset, u8
 #define NUM_NL80211_BANDS IEEE80211_NUM_BANDS
 #endif
 
-#define rtw_band_to_nl80211_band(band) \
-	(band == BAND_ON_2_4G) ? NL80211_BAND_2GHZ : \
-	(band == BAND_ON_5G) ? NL80211_BAND_5GHZ : NUM_NL80211_BANDS
+extern enum nl80211_band _rtw_band_to_nl80211_band[];
+#define rtw_band_to_nl80211_band(band) (((band) < BAND_MAX) ? _rtw_band_to_nl80211_band[(band)] : NUM_NL80211_BANDS)
+
+extern BAND_TYPE _nl80211_band_to_rtw_band[];
+#define nl80211_band_to_rtw_band(band) (((band) < NUM_NL80211_BANDS) ? _nl80211_band_to_rtw_band[(band)] : BAND_MAX)
 
 #if (LINUX_VERSION_CODE < KERNEL_VERSION(2, 6, 36))
 #define NL80211_TX_POWER_AUTOMATIC	TX_POWER_AUTOMATIC
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/os_dep/linux/ioctl_linux.c b/drivers/net/wireless/rockchip_wlan/rtl8821cs/os_dep/linux/ioctl_linux.c
index dee2947d1d68..57f1ca545859 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/os_dep/linux/ioctl_linux.c
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/os_dep/linux/ioctl_linux.c
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2019 Realtek Corporation.
@@ -1060,7 +1059,7 @@ static int rtw_set_wpa_ie(_adapter *padapter, char *pie, unsigned short ielen)
 			_rtw_memcpy(padapter->securitypriv.supplicant_ie, &buf[0], ielen);
 		}
 
-		if (rtw_parse_wpa2_ie(buf, ielen, &group_cipher, &pairwise_cipher, NULL, NULL, &mfp_opt) == _SUCCESS) {
+		if (rtw_parse_wpa2_ie(buf, ielen, &group_cipher, &pairwise_cipher, NULL, NULL, &mfp_opt, NULL) == _SUCCESS) {
 			padapter->securitypriv.dot11AuthAlgrthm = dot11AuthAlgrthm_8021X;
 			padapter->securitypriv.ndisauthtype = Ndis802_11AuthModeWPA2PSK;
 			_rtw_memcpy(padapter->securitypriv.supplicant_ie, &buf[0], ielen);
@@ -1487,7 +1486,6 @@ static int rtw_wx_set_pmkid(struct net_device *dev,
 
 				_rtw_memcpy(psecuritypriv->PMKIDList[j].PMKID, pPMK->pmkid, IW_PMKID_LEN);
 				psecuritypriv->PMKIDList[j].bUsed = _TRUE;
-				psecuritypriv->PMKIDIndex = j + 1;
 				blInserted = _TRUE;
 				break;
 			}
@@ -3436,9 +3434,11 @@ static int rtw_wx_set_channel_plan(struct net_device *dev,
 				   union iwreq_data *wrqu, char *extra)
 {
 	_adapter *padapter = (_adapter *)rtw_netdev_priv(dev);
-	u8 channel_plan_req = (u8)(*((int *)wrqu));
+	u16 channel_plan_req = (u16)(*((int *)wrqu));
 
-	if (_SUCCESS != rtw_set_channel_plan(padapter, channel_plan_req))
+	rtw_chplan_ioctl_input_mapping(&channel_plan_req, NULL);
+
+	if (_SUCCESS != rtw_set_channel_plan(padapter, channel_plan_req, RTW_CHPLAN_6G_UNSPECIFIED, RTW_REGD_SET_BY_USER))
 		return -EPERM;
 
 	return 0;
@@ -3933,10 +3933,12 @@ static int rtw_p2p_set_go_nego_ssid(struct net_device *dev,
 	_adapter *padapter = (_adapter *)rtw_netdev_priv(dev);
 	struct wifidirect_info *pwdinfo = &(padapter->wdinfo);
 
-	if (wrqu->data.length > WLAN_SSID_MAXLEN - 1)
-		return -EINVAL;
-
 	RTW_INFO("[%s] ssid = %s, len = %zu\n", __FUNCTION__, extra, strlen(extra));
+	if( strlen(extra) > WPS_MAX_DEVICE_NAME_LEN){
+		RTW_ERR("Invalid strlen(extra): %zu\n", strlen(extra));
+		rtw_warn_on(1);
+		return -1;
+	}
 	_rtw_memcpy(pwdinfo->nego_ssid, extra, strlen(extra));
 	pwdinfo->nego_ssidlen = strlen(extra);
 
@@ -3954,9 +3956,6 @@ static int rtw_p2p_set_intent(struct net_device *dev,
 	struct wifidirect_info			*pwdinfo = &(padapter->wdinfo);
 	u8							intent = pwdinfo->intent;
 
-	if (wrqu->data.length >= 4096)
-		return -1;
-
 	extra[wrqu->data.length] = 0x00;
 
 	intent = rtw_atoi(extra);
@@ -3982,9 +3981,6 @@ static int rtw_p2p_set_listen_ch(struct net_device *dev,
 	struct wifidirect_info *pwdinfo = &(padapter->wdinfo);
 	u8	listen_ch = pwdinfo->listen_channel;	/*	Listen channel number */
 
-	if (wrqu->data.length >= 4096)
-		return -1;
-
 	extra[wrqu->data.length] = 0x00;
 	listen_ch = rtw_atoi(extra);
 
@@ -4012,9 +4008,6 @@ static int rtw_p2p_set_op_ch(struct net_device *dev,
 	struct wifidirect_info *pwdinfo = &(padapter->wdinfo);
 	u8	op_ch = pwdinfo->operating_channel;	/*	Operating channel number */
 
-	if (wrqu->data.length >= 4096)
-		return -1;
-
 	extra[wrqu->data.length] = 0x00;
 
 	op_ch = (u8) rtw_atoi(extra);
@@ -4089,11 +4082,14 @@ static int rtw_p2p_setDN(struct net_device *dev,
 	_adapter *padapter = (_adapter *)rtw_netdev_priv(dev);
 	struct wifidirect_info *pwdinfo = &(padapter->wdinfo);
 
-	if (wrqu->data.length > WPS_MAX_DEVICE_NAME_LEN - 1)
-		return -EINVAL;
 
 	RTW_INFO("[%s] %s %d\n", __FUNCTION__, extra, wrqu->data.length - 1);
 	_rtw_memset(pwdinfo->device_name, 0x00, WPS_MAX_DEVICE_NAME_LEN);
+	if( wrqu->data.length - 1 > WPS_MAX_DEVICE_NAME_LEN){
+		RTW_ERR("Invalid wrqu->data.length:%d\n", wrqu->data.length - 1);
+		rtw_warn_on(1);
+		return -1;
+	}	
 	_rtw_memcpy(pwdinfo->device_name, extra, wrqu->data.length - 1);
 	pwdinfo->device_name_len = wrqu->data.length - 1;
 
@@ -4320,6 +4316,7 @@ static int rtw_p2p_get_wps_configmethod(struct net_device *dev,
 
 			wpsie = rtw_get_wps_ie_from_scan_queue(&pnetwork->network.IEs[0], pnetwork->network.IELength, NULL, &wpsie_len, pnetwork->network.Reserved[0]);
 			if (wpsie) {
+				attr_contentlen = sizeof(attr_content);
 				rtw_get_wps_attr_content(wpsie, wpsie_len, WPS_ATTR_CONF_METHOD, (u8 *)&attr_content, &attr_contentlen);
 				if (attr_contentlen) {
 					attr_content = be16_to_cpu(attr_content);
@@ -4453,6 +4450,7 @@ static int rtw_p2p_get_go_device_address(struct net_device *dev,
 					/*	The P2P Device Info attribute is included in the probe response frame. */
 
 					_rtw_memset(attr_content, 0x00, 100);
+					attr_contentlen = sizeof(attr_content);
 					if (rtw_get_p2p_attr_content(p2pie, p2pielen, P2P_ATTR_DEVICE_ID, attr_content, &attr_contentlen)) {
 						/*	Handle the P2P Device ID attribute of Beacon first */
 						blnMatch = 1;
@@ -4535,6 +4533,7 @@ static int rtw_p2p_get_device_type(struct net_device *dev,
 
 			wpsie = rtw_get_wps_ie_from_scan_queue(&pnetwork->network.IEs[0], pnetwork->network.IELength, NULL, &wpsie_len, pnetwork->network.Reserved[0]);
 			if (wpsie) {
+				dev_type_len = sizeof(dev_type);
 				rtw_get_wps_attr_content(wpsie, wpsie_len, WPS_ATTR_PRIMARY_DEV_TYPE, dev_type, &dev_type_len);
 				if (dev_type_len) {
 					u16	type = 0;
@@ -4609,6 +4608,7 @@ static int rtw_p2p_get_device_name(struct net_device *dev,
 
 			wpsie = rtw_get_wps_ie_from_scan_queue(&pnetwork->network.IEs[0], pnetwork->network.IELength, NULL, &wpsie_len, pnetwork->network.Reserved[0]);
 			if (wpsie) {
+				dev_len = sizeof(dev_name);
 				rtw_get_wps_attr_content(wpsie, wpsie_len, WPS_ATTR_DEVICE_NAME, dev_name, &dev_len);
 				if (dev_len) {
 					sprintf(dev_name_str, "\n\nN=%s", dev_name);
@@ -4649,7 +4649,7 @@ static int rtw_p2p_get_invitation_procedure(struct net_device *dev,
 	struct wlan_network *pnetwork = NULL;
 	u8 blnMatch = 0;
 	u8 *p2pie;
-	uint p2pielen = 0, attr_contentlen = 0;
+	uint p2pielen = 0, attr_contentlen = 2;
 	u8 attr_content[2] = { 0x00 };
 	u8 inv_proc_str[P2P_PRIVATE_IOCTL_SET_LEN] = { 0x00 };
 
@@ -4680,6 +4680,7 @@ static int rtw_p2p_get_invitation_procedure(struct net_device *dev,
 			if (p2pie) {
 				while (p2pie) {
 					/* _rtw_memset( attr_content, 0x00, 2); */
+					attr_contentlen = sizeof(attr_content);
 					if (rtw_get_p2p_attr_content(p2pie, p2pielen, P2P_ATTR_CAPABILITY, attr_content, &attr_contentlen)) {
 						/*	Handle the P2P capability attribute */
 						blnMatch = 1;
@@ -4852,7 +4853,7 @@ static int rtw_p2p_invite_req(struct net_device *dev,
 	uint						uintPeerChannel = 0;
 	u8						attr_content[50] = { 0x00 };
 	u8						*p2pie;
-	uint						p2pielen = 0, attr_contentlen = 0;
+	uint						p2pielen = 0, attr_contentlen = 50;
 	_irqL					irqL;
 	struct tx_invite_req_info	*pinvite_req_info = &pwdinfo->invitereq_info;
 #ifdef CONFIG_CONCURRENT_MODE
@@ -4910,6 +4911,7 @@ static int rtw_p2p_invite_req(struct net_device *dev,
 			/*	The P2P Device ID attribute is included in the Beacon frame. */
 			/*	The P2P Device Info attribute is included in the probe response frame. */
 
+			attr_contentlen = sizeof(attr_content);
 			if (rtw_get_p2p_attr_content(p2pie, p2pielen, P2P_ATTR_DEVICE_ID, attr_content, &attr_contentlen)) {
 				/*	Handle the P2P Device ID attribute of Beacon first */
 				if (_rtw_memcmp(attr_content, pinvite_req_info->peer_macaddr, ETH_ALEN)) {
@@ -5125,7 +5127,7 @@ static int rtw_p2p_set_pc(struct net_device *dev,
 	struct	wlan_network	*pnetwork = NULL;
 	u8					attr_content[50] = { 0x00 };
 	u8 *p2pie;
-	uint					p2pielen = 0, attr_contentlen = 0;
+	uint					p2pielen = 0, attr_contentlen = 50;
 	_irqL				irqL;
 	uint					uintPeerChannel = 0;
 
@@ -5165,6 +5167,7 @@ static int rtw_p2p_set_pc(struct net_device *dev,
 			/*	The P2P Device ID attribute is included in the Beacon frame. */
 			/*	The P2P Device Info attribute is included in the probe response frame. */
 			printk("[%s] Got P2P IE\n", __FUNCTION__);
+			attr_contentlen = sizeof(attr_content);
 			if (rtw_get_p2p_attr_content(p2pie, p2pielen, P2P_ATTR_DEVICE_ID, attr_content, &attr_contentlen)) {
 				/*	Handle the P2P Device ID attribute of Beacon first */
 				printk("[%s] P2P_ATTR_DEVICE_ID\n", __FUNCTION__);
@@ -5337,7 +5340,7 @@ static int rtw_p2p_prov_disc(struct net_device *dev,
 	uint					uintPeerChannel = 0;
 	u8					attr_content[100] = { 0x00 };
 	u8 *p2pie;
-	uint					p2pielen = 0, attr_contentlen = 0;
+	uint					p2pielen = 0, attr_contentlen = 100;
 	_irqL				irqL;
 #ifdef CONFIG_CONCURRENT_MODE
 	struct roch_info 		*prochinfo = &padapter->rochinfo;
@@ -5406,7 +5409,7 @@ static int rtw_p2p_prov_disc(struct net_device *dev,
 			while (p2pie) {
 				/*	The P2P Device ID attribute is included in the Beacon frame. */
 				/*	The P2P Device Info attribute is included in the probe response frame. */
-
+				attr_contentlen = sizeof(attr_content);
 				if (rtw_get_p2p_attr_content(p2pie, p2pielen, P2P_ATTR_DEVICE_ID, attr_content, &attr_contentlen)) {
 					/*	Handle the P2P Device ID attribute of Beacon first */
 					if (_rtw_memcmp(attr_content, peerMAC, ETH_ALEN)) {
@@ -7877,7 +7880,7 @@ static int rtw_wx_set_priv(struct net_device *dev,
 	case ANDROID_WIFI_CMD_COUNTRY: {
 		char country_code[10];
 		sscanf(ext, "%*s %s", country_code);
-		rtw_set_country(padapter, country_code);
+		rtw_set_country(padapter, country_code, RTW_REGD_SET_BY_USER);
 		sprintf(ext, "OK");
 	}
 		break;
@@ -8470,6 +8473,31 @@ int rtw_vendor_ie_set(struct net_device *dev, struct iw_request_info *info, unio
 }
 #endif
 
+static int rtw_get_ic_type(struct net_device *dev,
+				struct iw_request_info *info,
+				union iwreq_data *wrqu, char *extra)
+{
+	_adapter *padapter = (_adapter *)rtw_netdev_priv(dev);
+	struct pwrctrl_priv *pwrctrlpriv = adapter_to_pwrctl(padapter);
+	char *pstring = extra;
+	u8 regdata;
+
+#ifdef CONFIG_RTL8822C
+	_rtw_memset(pstring, 0, wrqu->data.length);
+
+	regdata = (rtw_read32(padapter, 0xF0) & 0xf000) >> 12;
+	RTW_INFO("%s: f0[15:12]= 0x%x\n", __FUNCTION__, regdata);
+
+	if (regdata == 0x04)
+		pstring += sprintf(pstring , ":%s\n" ,"rtl8822c-vbs");
+	else
+		pstring += sprintf(pstring , ":%s\n" ,"rtl8822c-vs");
+
+	wrqu->data.length = strlen(extra);
+#endif
+	return 0;
+}
+
 static int rtw_mp_efuse_get(struct net_device *dev,
 			    struct iw_request_info *info,
 			    union iwreq_data *wdata, char *extra)
@@ -9886,14 +9914,29 @@ static int rtw_mp_efuse_set(struct net_device *dev,
 		sprintf(extra, "write mac addr to fake map OK\n");
 	} else if(strcmp(tmp[0], "update") == 0) {
 		RTW_INFO("To Use new eFuse map ver3\n");
+
 		if (tmp[1] != 0x00) {
-			pmp_priv->efuse_update_file = _TRUE;
-			strcpy(pmp_priv->efuse_file_path , tmp[1]);
-			RTW_INFO("Got file path %s\n", pmp_priv->efuse_file_path);
+			if (strcmp(tmp[1], "fake") == 0) {
+				pmp_priv->efuse_update_on = _TRUE;
+				RTW_INFO("Set efuse update without file\n");
+			} else if (strcmp(tmp[1], "phy") == 0) {
+				pmp_priv->efuse_update_file = _FALSE;
+				pmp_priv->efuse_update_on = _FALSE;
+				RTW_INFO("Set efuse update with phy\n");
+			} else {
+				pmp_priv->efuse_update_file = _TRUE;
+				strcpy(pmp_priv->efuse_file_path , tmp[1]);
+				RTW_INFO("Got file path %s\n", pmp_priv->efuse_file_path);
+			}
 		}
 		/*step read efuse/eeprom data and get mac_addr*/
 		if (padapter->hal_func.read_adapter_info(padapter)) {
 			_rtw_memset(extra, '\0', strlen(extra));
+			#ifdef CONFIG_TXPWR_PG_WITH_PWR_IDX
+			if (pHalData->txpwr_pg_mode == TXPWR_PG_WITH_PWR_IDX)
+				hal_load_txpwr_info(padapter);
+			#endif
+			phy_load_tx_power_ext_info(padapter, 1);
 			sprintf(extra, "eFuse Update OK\n");
 			RTW_INFO("eFuse Update OK\n");
 		} else {
@@ -9901,8 +9944,8 @@ static int rtw_mp_efuse_set(struct net_device *dev,
 			sprintf(extra, "eFuse Update FAIL\n");
 			RTW_INFO("eFuse Update FAIL\n");
 		}
-		pmp_priv->efuse_update_file = _FALSE;
-		RTW_INFO("To Use new eFuse map done ver3\n");
+
+		RTW_INFO("To Use new eFuse map ver3 done\n");
 	} else if (strcmp(tmp[0], "analyze") == 0) {
 
 		rtw_efuse_analyze(padapter, EFUSE_WIFI, 0);
@@ -10235,8 +10278,12 @@ static int rtw_priv_mp_get(struct net_device *dev,
 		status = rtw_efuse_file_map(dev, info, wdata, extra);
 		break;
 	case EFUSE_FILE_STORE:
+#if !defined(CONFIG_RTW_ANDROID_GKI)
 		RTW_INFO("mp_get EFUSE_FILE_STORE\n");
 		status = rtw_efuse_file_map_store(dev, info, wdata, extra);
+#else
+		RTW_ERR("Android GKI doesn't support: mp_get EFUSE_FILE_STORE\n");
+#endif /* !defined(CONFIG_RTW_ANDROID_GKI) */
 		break;
 	case MP_TX:
 		RTW_INFO("mp_get MP_TX\n");
@@ -10574,6 +10621,10 @@ static int rtw_priv_get(struct net_device *dev,
 				rtw_vendor_ie_get(dev , info , wdata , extra);
 				break;
 #endif
+			case GET_IC_TYPE:
+				RTW_INFO("get IC Type\n");
+				rtw_get_ic_type(dev , info , wdata , extra);
+				break;
 			default:
 				return -EIO;
 			}
@@ -12396,6 +12447,7 @@ static const struct iw_priv_args rtw_private_args[] = {
 	{ MP_SD_IREAD, IW_PRIV_TYPE_CHAR | 1024, IW_PRIV_TYPE_CHAR | IW_PRIV_SIZE_MASK, "sd_iread" },
 	{ MP_SD_IWRITE, IW_PRIV_TYPE_CHAR | 1024, IW_PRIV_TYPE_CHAR | IW_PRIV_SIZE_MASK, "sd_iwrite" },
 #endif
+	{ GET_IC_TYPE, IW_PRIV_TYPE_CHAR | 1024, IW_PRIV_TYPE_CHAR | IW_PRIV_SIZE_MASK, "ic_type" },
 };
 
 
@@ -12887,11 +12939,6 @@ static int _rtw_ioctl_wext_private(struct net_device *dev, union iwreq_data *wrq
 		extra = buffer;
 
 	handler = priv[priv_args[k].cmd - SIOCIWFIRSTPRIV];
-	if (handler == NULL) {
-		err = -EINVAL;
-		goto exit;
-	}
-
 	err = handler(dev, NULL, &wdata, extra);
 
 	/* If we have to get some data */
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/os_dep/linux/ioctl_mp.c b/drivers/net/wireless/rockchip_wlan/rtl8821cs/os_dep/linux/ioctl_mp.c
index 45b85a5911ab..f014313ca675 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/os_dep/linux/ioctl_mp.c
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/os_dep/linux/ioctl_mp.c
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017 Realtek Corporation.
@@ -534,12 +533,16 @@ int rtw_mp_channel(struct net_device *dev,
 	channel = rtw_atoi(input);
 	/*RTW_INFO("%s: channel=%d\n", __func__, channel);*/
 	_rtw_memset(extra, 0, wrqu->length);
-	sprintf(extra, "Change channel %d to channel %d", padapter->mppriv.channel , channel);
-	padapter->mppriv.channel = channel;
-	rtw_hal_set_hwreg(padapter, HW_VAR_CHECK_TXBUF, 0);
-	rtw_adjust_chbw(padapter, channel, &pmppriv->bandwidth, &pmppriv->prime_channel_offset);
-	SetChannel(padapter);
-	pHalData->current_channel = channel;
+
+	if (channel != pmppriv->channel) {
+		sprintf(extra, "Change channel %d to channel %d", padapter->mppriv.channel , channel);
+		pmppriv->channel = channel;
+		rtw_hal_set_hwreg(padapter, HW_VAR_CHECK_TXBUF, 0);
+		rtw_adjust_chbw(padapter, channel, &pmppriv->bandwidth, &pmppriv->prime_channel_offset);
+		SetChannel(padapter);
+		pHalData->current_channel = channel;
+	} else
+		sprintf(extra, "No change current channel:%d", pmppriv->channel);
 
 	wrqu->length = strlen(extra);
 	return 0;
@@ -596,15 +599,18 @@ int rtw_mp_bandwidth(struct net_device *dev,
 	if (sscanf(input, "40M=%hhd,shortGI=%hhd", &bandwidth, &sg) > 0)
 		RTW_INFO("%s: bw=%hhd sg=%hhd\n", __func__, bandwidth , sg);
 
-	rtw_adjust_chbw(padapter, pmppriv->channel, &bandwidth, &pmppriv->prime_channel_offset);
+	if (bandwidth != pmppriv->bandwidth) {
+		rtw_adjust_chbw(padapter, pmppriv->channel, &bandwidth, &pmppriv->prime_channel_offset);
 
-	padapter->mppriv.bandwidth = (u8)bandwidth;
-	padapter->mppriv.preamble = sg;
-	_rtw_memset(extra, 0, wrqu->length);
-	sprintf(extra, "Change BW %d to BW %d\n", pHalData->current_channel_bw , bandwidth);
-	rtw_hal_set_hwreg(padapter, HW_VAR_CHECK_TXBUF, 0);
-	SetBandwidth(padapter);
-	pHalData->current_channel_bw = bandwidth;
+		pmppriv->bandwidth = (u8)bandwidth;
+		pmppriv->preamble = sg;
+		_rtw_memset(extra, 0, wrqu->length);
+		sprintf(extra, "Change BW %d to BW %d\n", pHalData->current_channel_bw , bandwidth);
+		rtw_hal_set_hwreg(padapter, HW_VAR_CHECK_TXBUF, 0);
+		SetBandwidth(padapter);
+		pHalData->current_channel_bw = bandwidth;
+	} else
+		sprintf(extra, "No change current BW %d\n", pmppriv->bandwidth);
 
 	wrqu->length = strlen(extra);
 
@@ -695,10 +701,14 @@ int rtw_mp_txpower(struct net_device *dev,
 	u32 idx_a = 0, idx_b = 0, idx_c = 0, idx_d = 0;
 	int MsetPower = 1;
 	u8 input[RTW_IWD_MAX_LEN];
+	char pout_str_buf[7];
 	u8 res = 0;
+	char *pextra;
 
 	PADAPTER padapter = rtw_netdev_priv(dev);
 	PMPT_CONTEXT		pMptCtx = &(padapter->mppriv.mpt_ctx);
+	struct mp_priv *pmppriv = &padapter ->mppriv;
+	struct hal_spec_t *hal_spec = GET_HAL_SPEC(padapter);
 
 	if (rtw_do_mp_iwdata_len_chk(__func__, wrqu->length))
 		return -EFAULT;
@@ -708,10 +718,10 @@ int rtw_mp_txpower(struct net_device *dev,
 
 	MsetPower = strncmp(input, "off", 3);
 	if (MsetPower == 0) {
-		padapter->mppriv.bSetTxPower = 0;
+		pmppriv->bSetTxPower = 0;
 		sprintf(extra, "MP Set power off");
 	} else {
-			res = sscanf(input, "patha=%d,pathb=%d,pathc=%d,pathd=%d", &idx_a, &idx_b, &idx_c, &idx_d);
+		if (sscanf(input, "patha=%d,pathb=%d,pathc=%d,pathd=%d", &idx_a, &idx_b, &idx_c, &idx_d) >= 1) {
 			if (res < 1) {
 				if(isdigit(input[0])){
 					idx_a = rtw_atoi(input);
@@ -719,22 +729,143 @@ int rtw_mp_txpower(struct net_device *dev,
 				} else
 					RTW_INFO("Invalid format on %s !, Get patha=%d,pathb=%d,pathc=%d,pathd=%d\n", input , idx_a , idx_b , idx_c , idx_d);
 			}
-		if (res > 0 || idx_a !=0)
-			sprintf(extra, "Set power level path_A:%d path_B:%d path_C:%d path_D:%d", idx_a , idx_b , idx_c , idx_d);
-		else
-			sprintf(extra, "Invalid format on string :%s ", input);
+			pmppriv->txpoweridx = (u8)idx_a;
+			pMptCtx->TxPwrLevel[RF_PATH_A] = (u8)idx_a;
+			pMptCtx->TxPwrLevel[RF_PATH_B] = (u8)idx_b;
+			pMptCtx->TxPwrLevel[RF_PATH_C] = (u8)idx_c;
+			pMptCtx->TxPwrLevel[RF_PATH_D]  = (u8)idx_d;
+			padapter->mppriv.bSetTxPower = 1;
+
+			SetTxPower(padapter);
+		} else if (sscanf(input, "a_dbm=%d", &idx_a) >= 1) {
+			s32 db_temp = 0;
+			s16 pout  = 0;
+			u32 poutdbm  = 0;
+			u32 poutdbm_int;
+			u32 poutdbm_dec;
+			if (idx_a < 9 || idx_a >= 22) {
+				sprintf(extra, "Error input:%d,Tune dBm range is 9-22\n", idx_a);
+				goto invalid_param_format;
+			}
+
+			db_temp = (s16)hal_mpt_tssi_turn_target_power(padapter, pout, RF_PATH_A);
+			RTW_INFO("%s: mpt_tssi_turn_target_power db_temp=%d\n", __func__, db_temp);
 
-		padapter->mppriv.txpoweridx = (u8)idx_a;
+			pout = idx_a*100 - db_temp;
+			poutdbm = hal_mpt_tssi_turn_target_power(padapter, pout, RF_PATH_A);
+			sprintf(extra, "Path A Set power dbm :%d\n", idx_a);
 
-		pMptCtx->TxPwrLevel[RF_PATH_A] = (u8)idx_a;
-		pMptCtx->TxPwrLevel[RF_PATH_B] = (u8)idx_b;
-		pMptCtx->TxPwrLevel[RF_PATH_C] = (u8)idx_c;
-		pMptCtx->TxPwrLevel[RF_PATH_D]  = (u8)idx_d;
-		padapter->mppriv.bSetTxPower = 1;
+			pmppriv->bSetTxPower = 1;
+		} else if (sscanf(input, "b_dbm=%d", &idx_b) >= 1) {
+			s32 db_temp = 0;
+			s16 pout  = 0;
+			u32 poutdbm  = 0;
+
+			if (idx_b < 9 || idx_b >= 22) {
+				sprintf(extra, "Error input:%d,Tune dBm range is 9-22\n", idx_b);
+				goto invalid_param_format;
+			}
+			db_temp = (s16)hal_mpt_tssi_turn_target_power(padapter, pout, RF_PATH_B);
+			RTW_INFO("%s: mpt_tssi_turn_target_power db_temp=%d\n", __func__, db_temp);
+
+			pout = idx_b*100 - db_temp;
+			poutdbm = hal_mpt_tssi_turn_target_power(padapter, pout, RF_PATH_B);
+			sprintf(extra, "Path B Set power dbm :%d\n", idx_b);
+
+			pmppriv->bSetTxPower = 1;
+		} else if (strncmp(input, "pwroffset", 9) == 0) {/*pwroffset patha/pathb=-9 ~ 9*/
+			u8 signed_flag = 0;
+			u8 rfpath = 0xff;
+			int int_num = 0;
+			u32 dec_num = 0;
+			s16 pout = 0;
+			int i;
+			u32 poutdbm;
+			u8 poutdbm_int;
+			u8 poutdbm_dec;
+
+			if (sscanf(input+10, "patha=%7s", pout_str_buf) == 1) {
+				rfpath = 0;
+			} else if (sscanf(input+10, "pathb=%7s", pout_str_buf) == 1) {
+				rfpath = 1;
+			} else {
+				sprintf(extra, "[pwroffset patha/pathb=-9.00 ~ 9.00]");
+				goto invalid_param_format;
+			}
+
+			if(pout_str_buf[0] == '-')
+				signed_flag = 1;
+			i = sscanf(pout_str_buf, "%d.%3u", &int_num, &dec_num);
+			pout = int_num * 100;
+			if(i == 2) {
+				dec_num = (dec_num < 10) ? dec_num * 10 : dec_num;
+				pout += ((pout < 0 || signed_flag == 1) ? -dec_num : dec_num);
+			}
 
-		SetTxPower(padapter);
+			if (pout < -900 || pout > 900 || rfpath == 0xff) {
+				sprintf(extra, "CMD Format:[pwroffset patha/pathb=-9.00 ~ 9.00]\n"
+						" each scale step value must 0.25 or -0.25\n"
+						" scale limit range is -9.00 - 9.00");
+				goto invalid_param_format;
+			}
+
+			pmppriv->txpower_dbm_offset = pout;
+			RTW_INFO("%s: pout = %d\n", __func__, pout);
+			hal_mpt_tssi_set_power_offset(padapter, pout, rfpath);
+			sprintf(extra, "Config power offset:%d OK\n", pout);
+		} else if (strncmp(input, "dbm", 3) == 0) {
+			u8 signed_flag = 0;
+			u8 ret = 0xff;
+			int int_num = 0;
+			u32 dec_num = 0;
+			s16 pout = 0;
+			int i;
+			u32 poutdbm = 0;
+			s32 db_temp = 0;
+			s16 pset = 0;
+			u8 rfpath;
+
+			if (sscanf(input, "dbm=%7s", pout_str_buf) == 1) {
+				ret = 0;
+			} else {
+				sprintf(extra, "[dbm =0 ~ 20.00]");
+				goto invalid_param_format;
+			}
+
+			if(pout_str_buf[0] == '-')
+				signed_flag = 1;
+			i = sscanf(pout_str_buf, "%d.%3u", &int_num, &dec_num);
+
+			pset = int_num * 100;
+			if(i == 2) {
+				dec_num = (dec_num < 10) ? dec_num * 10 : dec_num;
+				pset += ((pset < 0 || signed_flag == 1) ? -dec_num : dec_num);
+			}
+
+			if (pset < 900 || pset > 2200 || ret == 0xff) {
+				sprintf(extra, "CMD Format:[dbm= 9.00 ~ 22.00]\n"
+					" each scale step value must 0.25 or -0.25\n");
+				goto invalid_param_format;
+			}
+			for (rfpath = 0; rfpath < hal_spec->rf_reg_path_num; rfpath++) {
+				db_temp = (s16)hal_mpt_tssi_turn_target_power(padapter, pout, rfpath);
+				pout = pset - db_temp;
+				RTW_INFO("%s: path[%d] db_temp=%d pout = %d\n", __func__, rfpath, db_temp, pout);
+				poutdbm = hal_mpt_tssi_turn_target_power(padapter, pout, rfpath);
+			}
+			poutdbm = db_temp + pout;
+
+			sprintf(extra, "Path Set power dbm :%d.%d\n", poutdbm / 100, poutdbm % 100);
+		}else {
+			if (res > 0 || idx_a !=0)
+				sprintf(extra, "Set power level path_A:%d path_B:%d path_C:%d path_D:%d",
+						idx_a , idx_b , idx_c , idx_d);
+			else
+				sprintf(extra, "Invalid format on string :%s ", input);
+		}
 	}
 
+invalid_param_format:
 	wrqu->length = strlen(extra);
 	return 0;
 }
@@ -1598,7 +1729,11 @@ int rtw_mp_SetRFPath(struct net_device *dev,
 	} else {
 		bMain = MP_PHY_QueryRFPathSwitch(padapter);
 		RTW_INFO("%s:Query RF Path = %s\n", __func__, (bMain ? "Main":"Aux"));
-		sprintf(extra, "RF Path %s\n" , (bMain ? "1":"0"));
+		if (IS_HARDWARE_TYPE_8821C(padapter))
+			sprintf(extra, "RF Path %s\n" ,
+				(bMain ? "ANT1/S0/PathB Mode: 0":"ANT2/S1/PathA Mode: 1"));
+		else
+			sprintf(extra, "RF Path %s\n" , (bMain ? "1":"0"));
 	}
 
 	wrqu->length = strlen(extra);
@@ -1887,14 +2022,32 @@ int rtw_mp_get_tsside(struct net_device *dev,
 		signed_flag = 1;
 	i = sscanf(pout_str_buf, "%d.%3u", &integer_num, &decimal_num);
 	pout = integer_num * 1000;
-	if(i == 2) {
-		/* Convert decimal number
-		 * ex : 0.1 => 100, -0.1 => 100
-		 */
-		decimal_num = (decimal_num < 10) ? decimal_num * 100 : decimal_num;
-		decimal_num = (decimal_num < 100) ? decimal_num * 10 : decimal_num;
+	RTW_INFO("%s() pout1 = %d\n", __func__, pout);
+
+	if (i == 2) {
+	/* Convert decimal number
+	* ex : 0.1 => 100, 0.01 => 10, 0.001 => 1.
+	*/
+		u8 idx = 0;
+		u32 dec = 0;
+		u8 str_len = 0;
+		char *token, *tmp[3] = {};
+
+		pextra = pout_str_buf;
+		while ((token = strsep (&pextra,".")) != NULL) {
+			tmp[idx] = token;
+			RTW_INFO("%s() token %d = %s strlen =%ld\n", __func__,
+				idx, tmp[idx], strlen(tmp[idx]));
+			idx++;
+		}
+
+		str_len = strlen(tmp[1]);
+		dec = rtw_atoi(tmp[1]);
+		decimal_num = (str_len == 1) ? dec * 100: (str_len == 2) ? dec * 10: dec;
+		RTW_INFO("%s() decimal_num  = %d\n", __func__, decimal_num);
 		pout += ((pout < 0 || signed_flag == 1) ? -decimal_num : decimal_num);
 	}
+	RTW_INFO("%s() pout2 = %d\n", __func__, pout);
 	if(pout < -15000 || 25000 < pout)
 		goto invalid_param_format;
 #endif
@@ -1907,13 +2060,13 @@ int rtw_mp_get_tsside(struct net_device *dev,
 #endif
 
 	if (rfpath == 0)
-		sprintf(extra, "patha=%d", tssi_de);
+		sprintf(extra, "patha=%d hex=%02x", tssi_de, (u8)tssi_de);
 	else if (rfpath == 1)
-		sprintf(extra, "pathb=%d", tssi_de);
+		sprintf(extra, "pathb=%d hex=%02x", tssi_de, (u8)tssi_de);
 	else if (rfpath == 2)
-		sprintf(extra, "pathc=%d", tssi_de);
+		sprintf(extra, "pathc=%d hex=%02x", tssi_de, (u8)tssi_de);
 	else if (rfpath == 3)
-		sprintf(extra, "pathd=%d", tssi_de);
+		sprintf(extra, "pathd=%d hex=%02x", tssi_de, (u8)tssi_de);
 
 	wrqu->length = strlen(extra);
 	return 0;
@@ -2115,9 +2268,11 @@ int rtw_mp_pretx_proc(PADAPTER padapter, u8 bStartTest, char *extra)
 			is_supported_ht(padapter->registrypriv.wireless_mode))
 			pmp_priv->tx.attrib.ht_en = 1;
 #endif
-		pmp_priv->tx.stop = 0;
-		pmp_priv->tx.count = 1;
-		SetPacketTx(padapter);
+		if (!IS_HARDWARE_TYPE_JAGUAR3(padapter) && !IS_HARDWARE_TYPE_JAGUAR3_11N(padapter)) {
+			pmp_priv->tx.stop = 0;
+			pmp_priv->tx.count = 1;
+			SetPacketTx(padapter);
+		}
 	} else
 		pmp_priv->mode = MP_ON;
 
@@ -2591,7 +2746,6 @@ int rtw_mp_hwtx(struct net_device *dev,
 
 #if defined(CONFIG_RTL8814A) || defined(CONFIG_RTL8821B) || defined(CONFIG_RTL8822B) \
 	|| defined(CONFIG_RTL8821C) || defined(CONFIG_RTL8822C) || defined(CONFIG_RTL8723F)
-/* todo: 8723F */
 	if (copy_from_user(extra, wrqu->data.pointer, wrqu->data.length))
 		return -EFAULT;
 	*(extra + wrqu->data.length) = '\0';
@@ -2913,6 +3067,7 @@ int rtw_efuse_file_map(struct net_device *dev,
 }
 
 
+#if !defined(CONFIG_RTW_ANDROID_GKI)
 int rtw_efuse_file_map_store(struct net_device *dev,
 				struct iw_request_info *info,
 				union iwreq_data *wrqu, char *extra)
@@ -2950,6 +3105,7 @@ int rtw_efuse_file_map_store(struct net_device *dev,
 	wrqu->data.length = strlen(extra);
 	return 0;
 }
+#endif /* !defined(CONFIG_RTW_ANDROID_GKI) */
 
 int rtw_bt_efuse_file_map(struct net_device *dev,
 				struct iw_request_info *info,
@@ -3072,7 +3228,7 @@ int rtw_mp_link(struct net_device *dev,
 		/* tmp[0],[1],[2] */
 		/* txdata,00e04c871200........... */
 		if (strcmp(tmp[0], "txdata") == 0) {
-			if (tmp[1] == NULL) {
+			if ((tmp[1] == NULL)) {
 				err = -EINVAL;
 				goto exit;
 			}
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/os_dep/linux/mlme_linux.c b/drivers/net/wireless/rockchip_wlan/rtl8821cs/os_dep/linux/mlme_linux.c
index a88a19e8eac5..6fd24e8e2f3b 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/os_dep/linux/mlme_linux.c
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/os_dep/linux/mlme_linux.c
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/os_dep/linux/nlrtw.c b/drivers/net/wireless/rockchip_wlan/rtl8821cs/os_dep/linux/nlrtw.c
index b0a3fdafbd15..14d164b7ac95 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/os_dep/linux/nlrtw.c
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/os_dep/linux/nlrtw.c
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2020 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/os_dep/linux/nlrtw.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/os_dep/linux/nlrtw.h
index 97ed7955e300..374002a8a057 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/os_dep/linux/nlrtw.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/os_dep/linux/nlrtw.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2020 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/os_dep/linux/os_intfs.c b/drivers/net/wireless/rockchip_wlan/rtl8821cs/os_dep/linux/os_intfs.c
index 4c20e113d673..3f03174af84b 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/os_dep/linux/os_intfs.c
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/os_dep/linux/os_intfs.c
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2019 Realtek Corporation.
@@ -193,7 +192,8 @@ int rtw_uapsd_ac_enable = 0x0;
 
 #if defined(CONFIG_RTL8814A)
 	int rtw_pwrtrim_enable = 2; /* disable kfree , rename to power trim disable */
-#elif defined(CONFIG_RTL8821C) || defined(CONFIG_RTL8822B) || defined(CONFIG_RTL8822C)
+#elif defined(CONFIG_RTL8821C) || defined(CONFIG_RTL8822B) || defined(CONFIG_RTL8822C) \
+		|| defined(CONFIG_RTL8723F)
 	/*PHYDM API, must enable by default*/
 	int rtw_pwrtrim_enable = 1;
 #else
@@ -359,6 +359,12 @@ module_param(rtw_rx_path_lmt, int, 0644); /* limit of RX path number, 0: not spe
 module_param(rtw_tx_nss, int, 0644);
 module_param(rtw_rx_nss, int, 0644);
 
+#ifdef CONFIG_ACTIVE_TPC_REPORT
+int rtw_active_tpc_report = CONFIG_RTW_ACTIVE_TPC_REPORT;
+module_param(rtw_active_tpc_report, int, 0644);
+MODULE_PARM_DESC(rtw_active_tpc_report, "Active TPC report, 0:incapable, 1:capable, 2:auto enable");
+#endif
+
 #ifdef CONFIG_REGD_SRC_FROM_OS
 static uint rtw_regd_src = CONFIG_RTW_REGD_SRC;
 module_param(rtw_regd_src, uint, 0644);
@@ -370,15 +376,36 @@ char *rtw_country_code = rtw_country_unspecified;
 module_param(rtw_country_code, charp, 0644);
 MODULE_PARM_DESC(rtw_country_code, "The default country code (in alpha2)");
 
-int rtw_channel_plan = CONFIG_RTW_CHPLAN;
-module_param(rtw_channel_plan, int, 0644);
+uint rtw_channel_plan = CONFIG_RTW_CHPLAN;
+module_param(rtw_channel_plan, uint, 0644);
 MODULE_PARM_DESC(rtw_channel_plan, "The default chplan ID when rtw_alpha2 is not specified or valid");
 
-static uint rtw_excl_chs[MAX_CHANNEL_NUM] = CONFIG_RTW_EXCL_CHS;
+static uint rtw_excl_chs[MAX_CHANNEL_NUM_2G_5G] = CONFIG_RTW_EXCL_CHS;
 static int rtw_excl_chs_num = 0;
 module_param_array(rtw_excl_chs, uint, &rtw_excl_chs_num, 0644);
 MODULE_PARM_DESC(rtw_excl_chs, "exclusive channel array");
 
+#if CONFIG_IEEE80211_BAND_6GHZ
+uint rtw_channel_plan_6g = CONFIG_RTW_CHPLAN_6G;
+module_param(rtw_channel_plan_6g, uint, 0644);
+MODULE_PARM_DESC(rtw_channel_plan_6g, "The default chplan_6g ID when rtw_alpha2 is not specified or valid");
+
+static uint rtw_excl_chs_6g[MAX_CHANNEL_NUM_6G] = CONFIG_RTW_EXCL_CHS_6G;
+static int rtw_excl_chs_6g_num = 0;
+module_param_array(rtw_excl_chs_6g, uint, &rtw_excl_chs_6g_num, 0644);
+MODULE_PARM_DESC(rtw_excl_chs_6g, "exclusive channel array");
+#endif /* CONFIG_IEEE80211_BAND_6GHZ */
+
+#ifdef CONFIG_80211D
+static uint rtw_country_ie_slave_en_role = CONFIG_RTW_COUNTRY_IE_SLAVE_EN_ROLE;
+module_param(rtw_country_ie_slave_en_role, uint, 0644);
+MODULE_PARM_DESC(rtw_country_ie_slave_en_role, "802.11d country IE slave enable role: BIT0:pure STA mode, BIT1:P2P group client");
+
+static uint rtw_country_ie_slave_en_ifbmp = CONFIG_RTW_COUNTRY_IE_SLAVE_EN_IFBMP;
+module_param(rtw_country_ie_slave_en_ifbmp, uint, 0644);
+MODULE_PARM_DESC(rtw_country_ie_slave_en_ifbmp, "802.11d country IE slave enable iface bitmap");
+#endif
+
 /*if concurrent softap + p2p(GO) is needed, this param lets p2p response full channel list.
 But Softap must be SHUT DOWN once P2P decide to set up connection and become a GO.*/
 #ifdef CONFIG_FULL_CH_IN_P2P_HANDSHAKE
@@ -434,10 +461,6 @@ int rtw_hw_wps_pbc = 1;
 int rtw_hw_wps_pbc = 0;
 #endif
 
-#ifdef CONFIG_80211D
-int rtw_80211d = 0;
-#endif
-
 #ifdef CONFIG_PCI_ASPM
 /* CLK_REQ:BIT0 L0s:BIT1 ASPM_L1:BIT2 L1Off:BIT3*/
 int	rtw_pci_aspm_enable = 0x5;
@@ -647,11 +670,6 @@ MODULE_PARM_DESC(rtw_fw_mp_bt_file_path, "The path of fw for MP-BT image");
 #endif /* CONFIG_MP_INCLUDED */
 #endif /* CONFIG_FILE_FWIMG */
 
-#ifdef CONFIG_80211D
-module_param(rtw_80211d, int, 0644);
-MODULE_PARM_DESC(rtw_80211d, "Enable 802.11d mechanism");
-#endif
-
 #ifdef CONFIG_ADVANCE_OTA
 /*	BIT(0): OTA continuous rotated test within low RSSI,1R CCA in path B
 	BIT(1) & BIT(2): OTA continuous rotated test with low high RSSI */
@@ -670,7 +688,7 @@ MODULE_PARM_DESC(rtw_hiq_filter, "0:allow all, 1:allow special, 2:deny all");
 
 uint rtw_adaptivity_en = CONFIG_RTW_ADAPTIVITY_EN;
 module_param(rtw_adaptivity_en, uint, 0644);
-MODULE_PARM_DESC(rtw_adaptivity_en, "0:disable, 1:enable");
+MODULE_PARM_DESC(rtw_adaptivity_en, "0:disable, 1:enable, 2:auto");
 
 uint rtw_adaptivity_mode = CONFIG_RTW_ADAPTIVITY_MODE;
 module_param(rtw_adaptivity_mode, uint, 0644);
@@ -690,6 +708,10 @@ module_param(rtw_dfs_region_domain, uint, 0644);
 MODULE_PARM_DESC(rtw_dfs_region_domain, "0:NONE, 1:FCC, 2:MKK, 3:ETSI");
 #endif
 
+uint rtw_amsdu_mode = RTW_AMSDU_MODE_NON_SPP;
+module_param(rtw_amsdu_mode, uint, 0644);
+MODULE_PARM_DESC(rtw_amsdu_mode, "0:non-spp, 1:spp, 2:all drop");
+
 uint rtw_amplifier_type_2g = CONFIG_RTW_AMPLIFIER_TYPE_2G;
 module_param(rtw_amplifier_type_2g, uint, 0644);
 MODULE_PARM_DESC(rtw_amplifier_type_2g, "BIT3:2G ext-PA, BIT4:2G ext-LNA");
@@ -1107,19 +1129,70 @@ void rtw_regsty_load_target_tx_power(struct registry_priv *regsty)
 #endif /* CONFIG_IEEE80211_BAND_5GHZ */
 }
 
+inline void rtw_regsty_load_chplan(struct registry_priv *regsty)
+{
+	u16 chplan = RTW_CHPLAN_UNSPECIFIED;
+	u16 chplan_6g = RTW_CHPLAN_6G_UNSPECIFIED;
+
+	chplan = rtw_channel_plan;
+#if CONFIG_IEEE80211_BAND_6GHZ
+	chplan_6g = rtw_channel_plan_6g;
+#endif
+
+	rtw_chplan_ioctl_input_mapping(&chplan, &chplan_6g);
+
+	regsty->channel_plan = chplan;
+#if CONFIG_IEEE80211_BAND_6GHZ
+	regsty->channel_plan_6g = chplan_6g;
+#endif
+}
+
+inline void rtw_regsty_load_alpha2(struct registry_priv *regsty)
+{
+	if (strlen(rtw_country_code) != 2
+		|| (!IS_ALPHA2_WORLDWIDE(rtw_country_code)
+			&& (is_alpha(rtw_country_code[0]) == _FALSE
+				|| is_alpha(rtw_country_code[1]) == _FALSE)
+			)
+	) {
+		if (rtw_country_code != rtw_country_unspecified)
+			RTW_ERR("%s discard rtw_country_code not in alpha2 or \"%s\"\n", __func__, WORLDWIDE_ALPHA2);
+		SET_UNSPEC_ALPHA2(regsty->alpha2);
+	} else
+		_rtw_memcpy(regsty->alpha2, rtw_country_code, 2);
+}
+
 inline void rtw_regsty_load_excl_chs(struct registry_priv *regsty)
 {
 	int i;
 	int ch_num = 0;
 
-	for (i = 0; i < MAX_CHANNEL_NUM; i++)
+	for (i = 0; i < MAX_CHANNEL_NUM_2G_5G; i++)
 		if (((u8)rtw_excl_chs[i]) != 0)
 			regsty->excl_chs[ch_num++] = (u8)rtw_excl_chs[i];
 
-	if (ch_num < MAX_CHANNEL_NUM)
+	if (ch_num < MAX_CHANNEL_NUM_2G_5G)
 		regsty->excl_chs[ch_num] = 0;
+
+#if CONFIG_IEEE80211_BAND_6GHZ
+	ch_num = 0;
+	for (i = 0; i < MAX_CHANNEL_NUM_6G; i++)
+		if (((u8)rtw_excl_chs_6g[i]) != 0)
+			regsty->excl_chs_6g[ch_num++] = (u8)rtw_excl_chs_6g[i];
+
+	if (ch_num < MAX_CHANNEL_NUM_6G)
+		regsty->excl_chs_6g[ch_num] = 0;
+#endif
 }
 
+#ifdef CONFIG_80211D
+inline void rtw_regsty_load_country_ie_slave_settings(struct registry_priv *regsty)
+{
+	regsty->country_ie_slave_en_role = rtw_country_ie_slave_en_role;
+	regsty->country_ie_slave_en_ifbmp = rtw_country_ie_slave_en_ifbmp;
+}
+#endif
+
 #ifdef CONFIG_80211N_HT
 inline void rtw_regsty_init_rx_ampdu_sz_limit(struct registry_priv *regsty)
 {
@@ -1316,6 +1389,10 @@ uint loadparam(_adapter *padapter)
 
 	registry_par->wifi_spec = (u8)rtw_wifi_spec;
 
+#ifdef CONFIG_ACTIVE_TPC_REPORT
+	registry_par->active_tpc_report = (u8)rtw_active_tpc_report;
+#endif
+
 #ifdef CONFIG_REGD_SRC_FROM_OS
 	if (regd_src_is_valid(rtw_regd_src))
 		registry_par->regd_src = (u8)rtw_regd_src;
@@ -1325,18 +1402,12 @@ uint loadparam(_adapter *padapter)
 	}
 #endif
 
-	if (strlen(rtw_country_code) != 2
-		|| is_alpha(rtw_country_code[0]) == _FALSE
-		|| is_alpha(rtw_country_code[1]) == _FALSE
-	) {
-		if (rtw_country_code != rtw_country_unspecified)
-			RTW_ERR("%s discard rtw_country_code not in alpha2\n", __func__);
-		_rtw_memset(registry_par->alpha2, 0xFF, 2);
-	} else
-		_rtw_memcpy(registry_par->alpha2, rtw_country_code, 2);
-
-	registry_par->channel_plan = (u8)rtw_channel_plan;
+	rtw_regsty_load_alpha2(registry_par);
+	rtw_regsty_load_chplan(registry_par);
 	rtw_regsty_load_excl_chs(registry_par);
+#ifdef CONFIG_80211D
+	rtw_regsty_load_country_ie_slave_settings(registry_par);
+#endif
 
 	registry_par->full_ch_in_p2p_handshake = (u8)rtw_full_ch_in_p2p_handshake;
 #ifdef CONFIG_BT_COEXIST
@@ -1376,10 +1447,6 @@ uint loadparam(_adapter *padapter)
 	registry_par->fw_iol = rtw_fw_iol;
 #endif
 
-#ifdef CONFIG_80211D
-	registry_par->enable80211d = (u8)rtw_80211d;
-#endif
-
 	snprintf(registry_par->ifname, 16, "%s", ifname);
 	snprintf(registry_par->if2name, 16, "%s", if2name);
 
@@ -1461,6 +1528,8 @@ uint loadparam(_adapter *padapter)
 	#endif
 #endif
 
+	registry_par->amsdu_mode = (u8)rtw_amsdu_mode;
+
 #ifdef CONFIG_MCC_MODE
 	registry_par->en_mcc = (u8)rtw_en_mcc;
 	registry_par->rtw_mcc_ap_bw20_target_tx_tp = (u32)rtw_mcc_ap_bw20_target_tx_tp;
@@ -1618,29 +1687,7 @@ static int rtw_net_set_mac_address(struct net_device *pnetdev, void *addr)
 	_rtw_memcpy(adapter_mac_addr(padapter), sa->sa_data, ETH_ALEN); /* set mac addr to adapter */
 	_rtw_memcpy(pnetdev->dev_addr, sa->sa_data, ETH_ALEN); /* set mac addr to net_device */
 
-#if 0
-	if (rtw_is_hw_init_completed(padapter)) {
-		rtw_ps_deny(padapter, PS_DENY_IOCTL);
-		LeaveAllPowerSaveModeDirect(padapter); /* leave PS mode for guaranteeing to access hw register successfully */
-
-#ifdef CONFIG_MI_WITH_MBSSID_CAM
-		rtw_hal_change_macaddr_mbid(padapter, sa->sa_data);
-#else
-		rtw_hal_set_hwreg(padapter, HW_VAR_MAC_ADDR, sa->sa_data); /* set mac addr to mac register */
-#endif
-
-		rtw_ps_deny_cancel(padapter, PS_DENY_IOCTL);
-	}
-#else
-	rtw_ps_deny(padapter, PS_DENY_IOCTL);
-	LeaveAllPowerSaveModeDirect(padapter); /* leave PS mode for guaranteeing to access hw register successfully */
-#ifdef CONFIG_MI_WITH_MBSSID_CAM
-	rtw_hal_change_macaddr_mbid(padapter, sa->sa_data);
-#else
-	rtw_hal_set_hwreg(padapter, HW_VAR_MAC_ADDR, sa->sa_data); /* set mac addr to mac register */
-#endif
-	rtw_ps_deny_cancel(padapter, PS_DENY_IOCTL);
-#endif
+	rtw_hal_set_hw_macaddr(padapter, sa->sa_data);
 
 	RTW_INFO(FUNC_ADPT_FMT": Set Mac Addr to "MAC_FMT" Successfully\n"
 		 , FUNC_ADPT_ARG(padapter), MAC_ARG(sa->sa_data));
@@ -2578,6 +2625,8 @@ struct dvobj_priv *devobj_init(void)
 {
 	struct dvobj_priv *pdvobj = NULL;
 
+	rtw_dbg_mem_init();
+
 	pdvobj = (struct dvobj_priv *)rtw_zmalloc(sizeof(*pdvobj));
 	if (pdvobj == NULL)
 		return NULL;
@@ -2659,6 +2708,9 @@ struct dvobj_priv *devobj_init(void)
 #endif 
 	pdvobj->scan_deny = _FALSE;
 
+	/* wpas type default from w1.fi */
+	pdvobj->wpas_type = RTW_WPAS_W1FI;
+
 	return pdvobj;
 
 }
@@ -2725,6 +2777,8 @@ void devobj_deinit(struct dvobj_priv *pdvobj)
 	_rtw_spinlock_free(&(pdvobj->ap_if_q.lock));
 #endif
 	rtw_mfree((u8 *)pdvobj, sizeof(*pdvobj));
+
+	rtw_dbg_mem_deinit();
 }
 
 inline u8 rtw_rtnl_lock_needed(struct dvobj_priv *dvobj)
@@ -2864,6 +2918,9 @@ u8 rtw_init_drv_sw(_adapter *padapter)
 			dvobj->tx_aclt_force_val.en = 0xFF;
 		}
 		#endif
+		#if defined (CONFIG_CONCURRENT_MODE)  && defined (CONFIG_TSF_SYNC)
+		dvobj->sync_tsfr_counter = 0x0;
+		#endif
 	}
 
 	ret8 = rtw_init_default_value(padapter);
@@ -2984,6 +3041,9 @@ u8 rtw_init_drv_sw(_adapter *padapter)
 		RTW_INFO("%s: initialize MP private data Fail!\n", __func__);
 #endif
 
+	if (is_primary_adapter(padapter))
+		rtw_edcca_mode_update(adapter_to_dvobj(padapter));
+
 	rtw_hal_dm_init(padapter);
 
 	if (is_primary_adapter(padapter))
@@ -4761,6 +4821,9 @@ void rtw_dev_unload(PADAPTER padapter)
 	struct dvobj_priv *pobjpriv = padapter->dvobj;
 	struct debug_priv *pdbgpriv = &pobjpriv->drv_dbg;
 	struct cmd_priv *pcmdpriv = &padapter->cmdpriv;
+#ifdef CONFIG_WAKE_ON_BT
+	u8	disable = 0;
+#endif
 
 	if (padapter->bup == _TRUE) {
 		RTW_INFO("==> "FUNC_ADPT_FMT"\n", FUNC_ADPT_ARG(padapter));
@@ -4773,6 +4836,10 @@ void rtw_dev_unload(PADAPTER padapter)
 #endif /* CONFIG_GPIO_WAKEUP */
 #endif /* CONFIG_WOWLAN */
 
+#ifdef CONFIG_WAKE_ON_BT
+	rtw_hal_set_hwreg(padapter, HW_VAR_WAKE_ON_BT_GPIO_SWITCH, (u8 *)(&disable));
+#endif
+
 		rtw_set_drv_stopped(padapter);
 #ifdef CONFIG_XMIT_ACK
 		if (padapter->xmitpriv.ack_tx)
@@ -4894,7 +4961,9 @@ int rtw_suspend_wow(_adapter *padapter)
 	struct dvobj_priv *dvobj = adapter_to_dvobj(padapter);
 	_adapter *iface = NULL;
 	struct hal_spec_t *hal_spec = GET_HAL_SPEC(padapter);
-
+#ifdef CONFIG_WAKE_ON_BT
+	u8 enable = 1;
+#endif
 	RTW_INFO("==> "FUNC_ADPT_FMT" entry....\n", FUNC_ADPT_ARG(padapter));
 
 
@@ -4904,129 +4973,141 @@ int rtw_suspend_wow(_adapter *padapter)
 	RTW_INFO("wowlan_p2p_enable: %d\n", pwrpriv->wowlan_p2p_enable);
 #endif
 
-	if (pwrpriv->wowlan_mode == _TRUE) {
-		rtw_mi_netif_stop_queue(padapter);
-		#ifdef CONFIG_CONCURRENT_MODE
-		rtw_mi_buddy_netif_carrier_off(padapter);
-		#endif
+	rtw_mi_netif_stop_queue(padapter);
+	#ifdef CONFIG_CONCURRENT_MODE
+	rtw_mi_buddy_netif_carrier_off(padapter);
+	#endif
 
-		/* 0. Power off LED */
-		rtw_led_control(padapter, LED_CTL_POWER_OFF);
+	/* 0. Power off LED */
+	rtw_led_control(padapter, LED_CTL_POWER_OFF);
+
+#ifdef CONFIG_WAKE_ON_BT
+	rtw_hal_set_hwreg(padapter, HW_VAR_WAKE_ON_BT_GPIO_SWITCH, (u8 *)(&enable));
+#endif
 
 #if defined(CONFIG_SDIO_HCI) || defined(CONFIG_GSPI_HCI)
-		/* 2.only for SDIO disable interrupt */
-		rtw_intf_stop(padapter);
+	/* 2.only for SDIO disable interrupt */
+	rtw_intf_stop(padapter);
 
-		/* 2.1 clean interrupt */
-		rtw_hal_clear_interrupt(padapter);
+	/* 2.1 clean interrupt */
+	rtw_hal_clear_interrupt(padapter);
 #endif /* CONFIG_SDIO_HCI */
-		
-		/* enable ac lifetime during scan to avoid txfifo not empty. */
-		dvobj->lifetime_en = rtw_read8(padapter, 0x426);
-		dvobj->pkt_lifetime = rtw_read32(padapter, 0x4c0);
-		rtw_write8(padapter, 0x426, rtw_read8(padapter, 0x426) | 0x0f);
-		if(hal_spec->tx_aclt_unit_factor == 1) {
-			rtw_write16(padapter, 0x4c0, 0x1000);	// unit: 32us. 131ms 
-			rtw_write16(padapter, 0x4c0 + 2 , 0x1000);	// unit: 32us. 131ms
-		} else {
-			rtw_write16(padapter, 0x4c0, 0x0200);	// unit: 256us. 131ms 
-			rtw_write16(padapter, 0x4c0 + 2 , 0x0200);	// unit: 256us. 131ms
-		}
-		for (i = 0; i < dvobj->iface_nums; i++) {
-			iface = dvobj->padapters[i];
-			if ((iface) && rtw_is_adapter_up(iface)) {
-				rtw_write_port_cancel(iface);
-				RTW_INFO(ADPT_FMT " write port cancel\n", ADPT_ARG(iface));
-			}
+
+	/* enable ac lifetime during scan to avoid txfifo not empty. */
+	dvobj->lifetime_en = rtw_read8(padapter, 0x426);
+	dvobj->pkt_lifetime = rtw_read32(padapter, 0x4c0);
+	rtw_write8(padapter, 0x426, rtw_read8(padapter, 0x426) | 0x0f);
+	if(hal_spec->tx_aclt_unit_factor == 1) {
+		rtw_write16(padapter, 0x4c0, 0x1000);	// unit: 32us. 131ms
+		rtw_write16(padapter, 0x4c0 + 2 , 0x1000);	// unit: 32us. 131ms
+	} else {
+		rtw_write16(padapter, 0x4c0, 0x0200);	// unit: 256us. 131ms
+		rtw_write16(padapter, 0x4c0 + 2 , 0x0200);	// unit: 256us. 131ms
+	}
+	for (i = 0; i < dvobj->iface_nums; i++) {
+		iface = dvobj->padapters[i];
+		if ((iface) && rtw_is_adapter_up(iface)) {
+			rtw_write_port_cancel(iface);
+			RTW_INFO(ADPT_FMT " write port cancel\n", ADPT_ARG(iface));
 		}
-		RTW_INFO("lifetime_en=%x, pkt_lifetime=%x\n", rtw_read8(padapter, 0x426), rtw_read32(padapter, 0x4c0));
-		rtw_msleep_os(200);
-		
-		/* 1. stop thread */
-		rtw_set_drv_stopped(padapter);	/*for stop thread*/
-		rtw_mi_stop_drv_threads(padapter);
+	}
+	RTW_INFO("lifetime_en=%x, pkt_lifetime=%x\n", rtw_read8(padapter, 0x426), rtw_read32(padapter, 0x4c0));
+	rtw_msleep_os(200);
+
+	/* 1. stop thread */
+	rtw_set_drv_stopped(padapter);	/*for stop thread*/
+	rtw_mi_stop_drv_threads(padapter);
 
-		rtw_clr_drv_stopped(padapter);	/*for 32k command*/
+	rtw_clr_drv_stopped(padapter);	/*for 32k command*/
 
-		/* #ifdef CONFIG_LPS */
-		/* rtw_set_ps_mode(padapter, PS_MODE_ACTIVE, 0, 0, "WOWLAN"); */
-		/* #endif */
+	/* #ifdef CONFIG_LPS */
+	/* rtw_set_ps_mode(padapter, PS_MODE_ACTIVE, 0, 0, "WOWLAN"); */
+	/* #endif */
 
-		#ifdef CONFIG_SDIO_HCI
-		/* 2.2 free irq */
-		#if !(CONFIG_RTW_SDIO_KEEP_IRQ)
-		sdio_free_irq(adapter_to_dvobj(padapter));
-		#endif
-		#endif/*CONFIG_SDIO_HCI*/
+	#if defined(CONFIG_SDIO_HCI) && (CONFIG_RTW_SDIO_RELEASE_IRQ >= 1)
+	sdio_free_irq(adapter_to_dvobj(padapter));
+	#endif
 
 #ifdef CONFIG_RUNTIME_PORT_SWITCH
-		if (rtw_port_switch_chk(padapter)) {
-			RTW_INFO(" ### PORT SWITCH ###\n");
-			rtw_hal_set_hwreg(padapter, HW_VAR_PORT_SWITCH, NULL);
-		}
+	if (rtw_port_switch_chk(padapter)) {
+		RTW_INFO(" ### PORT SWITCH ###\n");
+		rtw_hal_set_hwreg(padapter, HW_VAR_PORT_SWITCH, NULL);
+	}
 #endif
-		if(registry_par->suspend_type == FW_IPS_WRC)
-			rtw_hal_set_hwreg(padapter, HW_VAR_VENDOR_WOW_MODE, &en);
+	if(registry_par->suspend_type == FW_IPS_WRC)
+		rtw_hal_set_hwreg(padapter, HW_VAR_VENDOR_WOW_MODE, &en);
 #ifdef CONFIG_LPS
-		rtw_wow_lps_level_decide(padapter, _TRUE);
-#endif
-		poidparam.subcode = WOWLAN_ENABLE;
-		rtw_hal_set_hwreg(padapter, HW_VAR_WOWLAN, (u8 *)&poidparam);
-		if (rtw_chk_roam_flags(padapter, RTW_ROAM_ON_RESUME)) {
-			if (check_fwstate(pmlmepriv, WIFI_STATION_STATE)
-			    && check_fwstate(pmlmepriv, WIFI_ASOC_STATE)) {
-				RTW_INFO("%s %s(" MAC_FMT "), length:%d assoc_ssid.length:%d\n", __FUNCTION__,
-					pmlmepriv->cur_network.network.Ssid.Ssid,
-					MAC_ARG(pmlmepriv->cur_network.network.MacAddress),
-					pmlmepriv->cur_network.network.Ssid.SsidLength,
-					 pmlmepriv->assoc_ssid.SsidLength);
-
-				rtw_set_to_roam(padapter, 0);
-			}
+	if (!pwrpriv->wowlan_pno_enable) {
+		if(pwrpriv->wowlan_power_mgmt != PS_MODE_ACTIVE) {
+			rtw_wow_lps_level_decide(padapter, _TRUE);
 		}
+	}
+#endif
+	poidparam.subcode = WOWLAN_ENABLE;
+	rtw_hal_set_hwreg(padapter, HW_VAR_WOWLAN, (u8 *)&poidparam);
+	if (rtw_chk_roam_flags(padapter, RTW_ROAM_ON_RESUME)) {
+		if (check_fwstate(pmlmepriv, WIFI_STATION_STATE)
+		    && check_fwstate(pmlmepriv, WIFI_ASOC_STATE)) {
+			RTW_INFO("%s %s(" MAC_FMT "), length:%d assoc_ssid.length:%d\n", __FUNCTION__,
+				pmlmepriv->cur_network.network.Ssid.Ssid,
+				MAC_ARG(pmlmepriv->cur_network.network.MacAddress),
+				pmlmepriv->cur_network.network.Ssid.SsidLength,
+				 pmlmepriv->assoc_ssid.SsidLength);
 
-		RTW_PRINT("%s: wowmode suspending\n", __func__);
-
-		if (check_fwstate(pmlmepriv, WIFI_UNDER_SURVEY) == _TRUE) {
-			RTW_PRINT("%s: fw_under_survey\n", __func__);
-			rtw_indicate_scan_done(padapter, 1);
-			clr_fwstate(pmlmepriv, WIFI_UNDER_SURVEY);
+			rtw_set_to_roam(padapter, 0);
 		}
+	}
 
-		if (rtw_mi_check_status(padapter, MI_LINKED)) {
-			ch =  rtw_mi_get_union_chan(padapter);
-			bw = rtw_mi_get_union_bw(padapter);
-			offset = rtw_mi_get_union_offset(padapter);
-			RTW_INFO(FUNC_ADPT_FMT" back to linked/linking union - ch:%u, bw:%u, offset:%u\n",
-				 FUNC_ADPT_ARG(padapter), ch, bw, offset);
-			set_channel_bwmode(padapter, ch, offset, bw);
-		}
+	RTW_PRINT("%s: wowmode suspending\n", __func__);
+
+	if (check_fwstate(pmlmepriv, WIFI_UNDER_SURVEY) == _TRUE) {
+		RTW_PRINT("%s: fw_under_survey\n", __func__);
+		rtw_indicate_scan_done(padapter, 1);
+		clr_fwstate(pmlmepriv, WIFI_UNDER_SURVEY);
+	}
+
+	if (rtw_mi_check_status(padapter, MI_LINKED)) {
+		ch =  rtw_mi_get_union_chan(padapter);
+		bw = rtw_mi_get_union_bw(padapter);
+		offset = rtw_mi_get_union_offset(padapter);
+		RTW_INFO(FUNC_ADPT_FMT" back to linked/linking union - ch:%u, bw:%u, offset:%u\n",
+			 FUNC_ADPT_ARG(padapter), ch, bw, offset);
+		set_channel_bwmode(padapter, ch, offset, bw);
+	}
 
 #ifdef CONFIG_CONCURRENT_MODE
-		rtw_mi_buddy_suspend_free_assoc_resource(padapter);
+	rtw_mi_buddy_suspend_free_assoc_resource(padapter);
 #endif
 
 #ifdef CONFIG_BT_COEXIST
-		rtw_btcoex_SuspendNotify(padapter, BTCOEX_SUSPEND_STATE_SUSPEND_KEEP_ANT);
+	rtw_btcoex_SuspendNotify(padapter, BTCOEX_SUSPEND_STATE_SUSPEND_KEEP_ANT);
 #endif
 
-		if (pwrpriv->wowlan_pno_enable) {
-			RTW_PRINT("%s: pno: %d\n", __func__,
-				  pwrpriv->wowlan_pno_enable);
+	if (pwrpriv->wowlan_pno_enable) {
+		RTW_PRINT("%s: pno: %d\n", __func__, pwrpriv->wowlan_pno_enable);
+#ifndef RTW_HALMAC
 #ifdef CONFIG_FWLPS_IN_IPS
-			rtw_set_fw_in_ips_mode(padapter, _TRUE);
+		rtw_set_fw_in_ips_mode(padapter, _TRUE);
 #endif
-		}
+#else /* RTW_HALMAC */
+		// TODO(Owen): Controlled by wowlan lps_level
+		/* Although ICs with HALMAC can have NLO PS (and LCLK) via H2C 0x8C,
+		 * we write RPWM here so that the enter/leave LCLK actions can be
+		 * symmetrical.
+		 */
+#ifdef CONFIG_LPS_LCLK
+		rtw_set_lps_lclk(padapter, _TRUE);
+#endif
+#endif
+	}
 #ifdef CONFIG_LPS
-		else {
-			if(pwrpriv->wowlan_power_mgmt != PS_MODE_ACTIVE) {
-				rtw_set_ps_mode(padapter, pwrpriv->wowlan_power_mgmt, 0, 0, "WOWLAN");
-			}
+	else {
+		if(pwrpriv->wowlan_power_mgmt != PS_MODE_ACTIVE) {
+			rtw_set_ps_mode(padapter, pwrpriv->wowlan_power_mgmt, 0, 0, "WOWLAN");
 		}
+	}
 #endif /* #ifdef CONFIG_LPS */
 
-	} else
-		RTW_PRINT("%s: ### ERROR ### wowlan_mode=%d\n", __FUNCTION__, pwrpriv->wowlan_mode);
 	RTW_INFO("<== "FUNC_ADPT_FMT" exit....\n", FUNC_ADPT_ARG(padapter));
 	return ret;
 }
@@ -5064,12 +5145,9 @@ int rtw_suspend_ap_wow(_adapter *padapter)
 	rtw_mi_stop_drv_threads(padapter);
 	rtw_clr_drv_stopped(padapter);	/*for 32k command*/
 
-	#ifdef CONFIG_SDIO_HCI
-	/* 2.2 free irq */
-	#if !(CONFIG_RTW_SDIO_KEEP_IRQ)
+	#if defined(CONFIG_SDIO_HCI) && (CONFIG_RTW_SDIO_RELEASE_IRQ >= 1)
 	sdio_free_irq(adapter_to_dvobj(padapter));
 	#endif
-	#endif/*CONFIG_SDIO_HCI*/
 
 #ifdef CONFIG_RUNTIME_PORT_SWITCH
 	if (rtw_port_switch_chk(padapter)) {
@@ -5077,8 +5155,13 @@ int rtw_suspend_ap_wow(_adapter *padapter)
 		rtw_hal_set_hwreg(padapter, HW_VAR_PORT_SWITCH, NULL);
 	}
 #endif
-
-	rtw_wow_lps_level_decide(padapter, _TRUE);
+#ifdef CONFIG_LPS
+	if (!pwrpriv->wowlan_pno_enable) {
+		if(pwrpriv->wowlan_power_mgmt != PS_MODE_ACTIVE) {
+			rtw_wow_lps_level_decide(padapter, _TRUE);
+		}
+	}
+#endif
 	poidparam.subcode = WOWLAN_AP_ENABLE;
 	rtw_hal_set_hwreg(padapter, HW_VAR_WOWLAN, (u8 *)&poidparam);
 
@@ -5154,7 +5237,7 @@ int rtw_suspend_normal(_adapter *padapter)
 	#ifdef CONFIG_SDIO_HCI
 	sdio_deinit(adapter_to_dvobj(padapter));
 
-	#if !(CONFIG_RTW_SDIO_KEEP_IRQ)
+	#if (CONFIG_RTW_SDIO_RELEASE_IRQ >= 1)
 	sdio_free_irq(adapter_to_dvobj(padapter));
 	#endif
 	#endif /*CONFIG_SDIO_HCI*/
@@ -5285,81 +5368,82 @@ int rtw_resume_process_wow(_adapter *padapter)
 	}
 
 	pwrpriv->wowlan_in_resume = _TRUE;
-#ifdef CONFIG_PNO_SUPPORT
+
+	if (pwrpriv->wowlan_pno_enable) {
+		RTW_PRINT("%s: pno: %d\n", __func__, pwrpriv->wowlan_pno_enable);
+#ifndef RTW_HALMAC
 #ifdef CONFIG_FWLPS_IN_IPS
-	if (pwrpriv->wowlan_pno_enable)
 		rtw_set_fw_in_ips_mode(padapter, _FALSE);
-#endif /* CONFIG_FWLPS_IN_IPS */
-#endif/* CONFIG_PNO_SUPPORT */
-
-	if (pwrpriv->wowlan_mode == _TRUE) {
+#endif
+#else /* RTW_HALMAC */
+#ifdef CONFIG_LPS_LCLK
+		// TODO(Owen): Controlled by wowlan lps_level
+		rtw_set_lps_lclk(padapter, _FALSE);
+#endif
+#endif
+	} else {
 #ifdef CONFIG_LPS
 		if(pwrpriv->wowlan_power_mgmt != PS_MODE_ACTIVE) {
 			rtw_set_ps_mode(padapter, PS_MODE_ACTIVE, 0, 0, "WOWLAN");
 			rtw_wow_lps_level_decide(padapter, _FALSE);
 		}
 #endif /* CONFIG_LPS */
+	}
 
-		rtw_write8(padapter, 0x426, psdpriv->lifetime_en);
-		rtw_write32(padapter, 0x4c0, psdpriv->pkt_lifetime);
+	rtw_write8(padapter, 0x426, psdpriv->lifetime_en);
+	rtw_write32(padapter, 0x4c0, psdpriv->pkt_lifetime);
 
-		pwrpriv->bFwCurrentInPSMode = _FALSE;
+	pwrpriv->bFwCurrentInPSMode = _FALSE;
 
 #if defined(CONFIG_SDIO_HCI) || defined(CONFIG_PCI_HCI)
-		rtw_mi_intf_stop(padapter);
-		rtw_hal_clear_interrupt(padapter);
+	rtw_mi_intf_stop(padapter);
+	rtw_hal_clear_interrupt(padapter);
 #endif
 
-		#ifdef CONFIG_SDIO_HCI
-		#if !(CONFIG_RTW_SDIO_KEEP_IRQ)
-		if (sdio_alloc_irq(adapter_to_dvobj(padapter)) != _SUCCESS) {
-			ret = -1;
-			goto exit;
-		}
-		#endif
-		#endif/*CONFIG_SDIO_HCI*/
+	#if defined(CONFIG_SDIO_HCI) && (CONFIG_RTW_SDIO_RELEASE_IRQ >= 1)
+	if (sdio_alloc_irq(adapter_to_dvobj(padapter)) != _SUCCESS) {
+		ret = -1;
+		goto exit;
+	}
+	#endif
 
-		/* Disable WOW, set H2C command */
-		poidparam.subcode = WOWLAN_DISABLE;
-		rtw_hal_set_hwreg(padapter, HW_VAR_WOWLAN, (u8 *)&poidparam);
+	/* Disable WOW, set H2C command */
+	poidparam.subcode = WOWLAN_DISABLE;
+	rtw_hal_set_hwreg(padapter, HW_VAR_WOWLAN, (u8 *)&poidparam);
 
 #ifdef CONFIG_CONCURRENT_MODE
-		rtw_mi_buddy_reset_drv_sw(padapter);
+	rtw_mi_buddy_reset_drv_sw(padapter);
 #endif
 
-		psta = rtw_get_stainfo(&padapter->stapriv, get_bssid(&padapter->mlmepriv));
-		if (psta)
-			set_sta_rate(padapter, psta);
+	psta = rtw_get_stainfo(&padapter->stapriv, get_bssid(&padapter->mlmepriv));
+	if (psta)
+		set_sta_rate(padapter, psta);
 
 
-		rtw_clr_drv_stopped(padapter);
-		RTW_INFO("%s: wowmode resuming, DriverStopped:%s\n", __func__, rtw_is_drv_stopped(padapter) ? "True" : "False");
-		
-		if(registry_par->suspend_type == FW_IPS_WRC)
-			rtw_hal_set_hwreg(padapter, HW_VAR_VENDOR_WOW_MODE, &en);
-		
-		rtw_mi_start_drv_threads(padapter);
+	rtw_clr_drv_stopped(padapter);
+	RTW_INFO("%s: wowmode resuming, DriverStopped:%s\n", __func__, rtw_is_drv_stopped(padapter) ? "True" : "False");
 
-		rtw_mi_intf_start(padapter);
-		
-		if(registry_par->suspend_type == FW_IPS_DISABLE_BBRF && !check_fwstate(pmlmepriv, WIFI_ASOC_STATE)) {
-			if (!rtw_is_surprise_removed(padapter)) {
-				rtw_hal_deinit(padapter);
-				rtw_hal_init(padapter);
-			}
-			RTW_INFO("FW_IPS_DISABLE_BBRF hal deinit, hal init \n");
+	if(registry_par->suspend_type == FW_IPS_WRC)
+		rtw_hal_set_hwreg(padapter, HW_VAR_VENDOR_WOW_MODE, &en);
+
+	rtw_mi_start_drv_threads(padapter);
+
+	rtw_mi_intf_start(padapter);
+
+	if(registry_par->suspend_type == FW_IPS_DISABLE_BBRF && !check_fwstate(pmlmepriv, WIFI_ASOC_STATE)) {
+		if (!rtw_is_surprise_removed(padapter)) {
+			rtw_hal_deinit(padapter);
+			rtw_hal_init(padapter);
 		}
+		RTW_INFO("FW_IPS_DISABLE_BBRF hal deinit, hal init \n");
+	}
 
 #ifdef CONFIG_CONCURRENT_MODE
-		rtw_mi_buddy_netif_carrier_on(padapter);
+	rtw_mi_buddy_netif_carrier_on(padapter);
 #endif
 
-		/* start netif queue */
-		rtw_mi_netif_wake_queue(padapter);
-
-	} else
-
-		RTW_PRINT("%s: ### ERROR ### wowlan_mode=%d\n", __FUNCTION__, pwrpriv->wowlan_mode);
+	/* start netif queue */
+	rtw_mi_netif_wake_queue(padapter);
 
 	if (padapter->pid[1] != 0) {
 		RTW_INFO("pid[1]:%d\n", padapter->pid[1]);
@@ -5459,14 +5543,13 @@ int rtw_resume_process_ap_wow(_adapter *padapter)
 
 	rtw_hal_clear_interrupt(padapter);
 
-	#ifdef CONFIG_SDIO_HCI
-	#if !(CONFIG_RTW_SDIO_KEEP_IRQ)
+	#if defined(CONFIG_SDIO_HCI) && (CONFIG_RTW_SDIO_RELEASE_IRQ >= 1)
 	if (sdio_alloc_irq(adapter_to_dvobj(padapter)) != _SUCCESS) {
 		ret = -1;
 		goto exit;
 	}
 	#endif
-	#endif/*CONFIG_SDIO_HCI*/
+
 	/* Disable WOW, set H2C command */
 	poidparam.subcode = WOWLAN_AP_DISABLE;
 	rtw_hal_set_hwreg(padapter, HW_VAR_WOWLAN, (u8 *)&poidparam);
@@ -5602,14 +5685,12 @@ int rtw_resume_process_normal(_adapter *padapter)
 	rtw_clr_surprise_removed(padapter);
 	rtw_hal_disable_interrupt(padapter);
 
-	#ifdef CONFIG_SDIO_HCI
-	#if !(CONFIG_RTW_SDIO_KEEP_IRQ)
+	#if defined(CONFIG_SDIO_HCI) && (CONFIG_RTW_SDIO_RELEASE_IRQ >= 1)
 	if (sdio_alloc_irq(adapter_to_dvobj(padapter)) != _SUCCESS) {
 		ret = -1;
 		goto exit;
 	}
 	#endif
-	#endif/*CONFIG_SDIO_HCI*/
 
 	rtw_mi_reset_drv_sw(padapter);
 
@@ -5649,6 +5730,9 @@ int rtw_resume_common(_adapter *padapter)
 	int ret = 0;
 	systime start_time = rtw_get_current_time();
 	struct pwrctrl_priv *pwrpriv = adapter_to_pwrctl(padapter);
+#ifdef CONFIG_WAKE_ON_BT
+	u8 disable = 0;
+#endif
 
 	if (pwrpriv == NULL)
 		return 0;
@@ -5675,6 +5759,10 @@ int rtw_resume_common(_adapter *padapter)
 #endif /* CONFIG_AP_WOWLAN */
 	}
 
+#ifdef CONFIG_WAKE_ON_BT
+	rtw_hal_set_hwreg(padapter, HW_VAR_WAKE_ON_BT_GPIO_SWITCH, (u8 *)(&disable));
+#endif
+
 	pwrpriv->bInSuspend = _FALSE;
 	pwrpriv->wowlan_in_resume = _FALSE;
 
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/os_dep/linux/recv_linux.c b/drivers/net/wireless/rockchip_wlan/rtl8821cs/os_dep/linux/recv_linux.c
index e0f7fe1976de..00a69f2c350d 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/os_dep/linux/recv_linux.c
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/os_dep/linux/recv_linux.c
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017 Realtek Corporation.
@@ -140,6 +139,7 @@ int rtw_os_alloc_recvframe(_adapter *padapter, union recv_frame *precvframe, u8
 
 		precvframe->u.hdr.pkt = rtw_skb_clone(pskb);
 		if (precvframe->u.hdr.pkt) {
+			RTW_INFO("%s: rtw_skb_clone success, RX throughput may be low!\n", __FUNCTION__);
 			precvframe->u.hdr.pkt->dev = padapter->pnetdev;
 			precvframe->u.hdr.rx_head = precvframe->u.hdr.rx_data = precvframe->u.hdr.rx_tail = pdata;
 			precvframe->u.hdr.rx_end =  pdata + alloc_sz;
@@ -210,7 +210,7 @@ void rtw_os_recv_resource_free(struct recv_priv *precvpriv)
 }
 
 #if defined(CONFIG_SDIO_HCI) || defined(CONFIG_GSPI_HCI)
-#if !defined(CONFIG_RTL8822B) && !defined(CONFIG_RTL8822C)
+#if !defined(CONFIG_RTL8822B) && !defined(CONFIG_RTL8822C) && !defined(CONFIG_RTL8723F)
 #ifdef CONFIG_SDIO_RX_COPY
 static int sdio_init_recvbuf_with_skb(struct recv_priv *recvpriv, struct recv_buf *rbuf, u32 size)
 {
@@ -250,7 +250,7 @@ static int sdio_init_recvbuf_with_skb(struct recv_priv *recvpriv, struct recv_bu
 	return _SUCCESS;
 }
 #endif /* CONFIG_SDIO_RX_COPY */
-#endif /* !defined(CONFIG_RTL8822B) && !defined(CONFIG_RTL8822C) */
+#endif /* !defined(CONFIG_RTL8822B) && !defined(CONFIG_RTL8822C) && !defined(CONFIG_RTL8723F) */
 #endif /* defined(CONFIG_SDIO_HCI) || defined(CONFIG_GSPI_HCI) */
 
 /* alloc os related resource in struct recv_buf */
@@ -287,7 +287,7 @@ int rtw_os_recvbuf_resource_alloc(_adapter *padapter, struct recv_buf *precvbuf,
 #endif /* CONFIG_USE_USB_BUFFER_ALLOC_RX */
 
 #elif defined(CONFIG_SDIO_HCI) || defined(CONFIG_GSPI_HCI)
-	#if !defined(CONFIG_RTL8822B) && !defined(CONFIG_RTL8822C)
+	#if !defined(CONFIG_RTL8822B) && !defined(CONFIG_RTL8822C) && !defined(CONFIG_RTL8723F)
 	#ifdef CONFIG_SDIO_RX_COPY
 	res = sdio_init_recvbuf_with_skb(&padapter->recvpriv, precvbuf, size);
 	#endif
@@ -518,6 +518,10 @@ void rtw_os_recv_indicate_pkt(_adapter *padapter, _pkt *pkt, union recv_frame *r
 		pkt->protocol = eth_type_trans(pkt, padapter->pnetdev);
 		pkt->dev = padapter->pnetdev;
 		pkt->ip_summed = CHECKSUM_NONE; /* CONFIG_TCP_CSUM_OFFLOAD_RX */
+
+		if (padapter->recvpriv.ip_statistic.enabled)
+			rtw_rx_dbg_monitor_ip_statistic(padapter, pkt);
+
 #ifdef CONFIG_TCP_CSUM_OFFLOAD_RX
 		if ((rframe->u.hdr.attrib.csum_valid == 1)
 		    && (rframe->u.hdr.attrib.csum_err == 0))
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/os_dep/linux/rhashtable.c b/drivers/net/wireless/rockchip_wlan/rtl8821cs/os_dep/linux/rhashtable.c
index e910d6fbcfe6..af9c9aec8a1e 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/os_dep/linux/rhashtable.c
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/os_dep/linux/rhashtable.c
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /*
  * Resizable, Scalable, Concurrent Hash Table
  *
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/os_dep/linux/rhashtable.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/os_dep/linux/rhashtable.h
index d6e7a55037ee..a6db3257bc48 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/os_dep/linux/rhashtable.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/os_dep/linux/rhashtable.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /*
  * Resizable, Scalable, Concurrent Hash Table
  *
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/os_dep/linux/rtw_android.c b/drivers/net/wireless/rockchip_wlan/rtl8821cs/os_dep/linux/rtw_android.c
index 98fe38ab054e..50dcfed967d8 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/os_dep/linux/rtw_android.c
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/os_dep/linux/rtw_android.c
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017 Realtek Corporation.
@@ -323,7 +322,7 @@ int rtw_android_cfg80211_pno_setup(struct net_device *net,
 #ifdef CONFIG_PNO_SET_DEBUG
 	rtw_dev_pno_debug(net);
 #endif
-exit_proc:
+
 	return res;
 }
 
@@ -344,10 +343,12 @@ int rtw_android_pno_enable(struct net_device *net, int pno_enable)
 				rtw_mfree((u8 *)pwrctl->pno_ssid_list, sizeof(pno_ssid_list_t));
 				pwrctl->pno_ssid_list = NULL;
 			}
+			#ifndef RTW_HALMAC
 			if (pwrctl->pscan_info != NULL) {
 				rtw_mfree((u8 *)pwrctl->pscan_info, sizeof(pno_scan_info_t));
 				pwrctl->pscan_info = NULL;
 			}
+			#endif
 		}
 		return 0;
 	} else
@@ -406,7 +407,7 @@ int rtw_android_set_country(struct net_device *net, char *command, int total_len
 	char *country_code = command + strlen(android_wifi_cmd_str[ANDROID_WIFI_CMD_COUNTRY]) + 1;
 	int ret = _FAIL;
 
-	ret = rtw_set_country(adapter, country_code);
+	ret = rtw_set_country(adapter, country_code, RTW_REGD_SET_BY_USER);
 
 	return (ret == _SUCCESS) ? 0 : -1;
 }
@@ -833,6 +834,7 @@ int rtw_android_priv_cmd(struct net_device *net, struct ifreq *ifr, int cmd)
 	case ANDROID_WIFI_CMD_SET_AP_WPS_P2P_IE: {
 		int skip = strlen(android_wifi_cmd_str[ANDROID_WIFI_CMD_SET_AP_WPS_P2P_IE]) + 3;
 		bytes_written = rtw_cfg80211_set_mgnt_wpsp2pie(net, command + skip, priv_cmd.total_len - skip, *(command + skip - 2) - '0');
+		adapter_to_dvobj(padapter)->wpas_type = RTW_WPAS_ANDROID;
 		break;
 	}
 	#endif
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/os_dep/linux/rtw_cfgvendor.c b/drivers/net/wireless/rockchip_wlan/rtl8821cs/os_dep/linux/rtw_cfgvendor.c
index 441c1f0fee02..f24813e9320e 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/os_dep/linux/rtw_cfgvendor.c
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/os_dep/linux/rtw_cfgvendor.c
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017 Realtek Corporation.
@@ -23,7 +22,7 @@
 /*
 #include <linux/kernel.h>
 #include <linux/if_arp.h>
-#include <linux/uaccess.h>
+#include <asm/uaccess.h>
 
 #include <linux/kernel.h>
 #include <linux/kthread.h>
@@ -281,7 +280,7 @@ int rtw_dev_get_feature_set(struct net_device *dev)
 
 #ifdef CONFIG_RTW_WIFI_HAL
 	feature_set |= WIFI_FEATURE_CONFIG_NDO;
-#ifdef CONFIG_RTW_CFGVENDOR_RANDOM_MAC_OUI
+#if defined(CONFIG_RTW_CFGVENDOR_RANDOM_MAC_OUI) || defined(CONFIG_RTW_SCAN_RAND)
 	feature_set |= WIFI_FEATURE_SCAN_RAND;
 #endif
 #endif
@@ -1566,6 +1565,7 @@ static int rtw_cfgvendor_logger_get_rx_pkt_fates(struct wiphy *wiphy,
 }
 
 #endif /* CONFIG_RTW_CFGVENDOR_WIFI_LOGGER */
+
 #ifdef CONFIG_RTW_WIFI_HAL
 #ifdef CONFIG_RTW_CFGVENDOR_RANDOM_MAC_OUI
 
@@ -1600,21 +1600,6 @@ void rtw_hal_pno_random_gen_mac_addr(PADAPTER adapter)
 #endif
 }
 
-void rtw_hal_set_hw_mac_addr(PADAPTER adapter, u8 *mac_addr)
-{
-	rtw_ps_deny(adapter, PS_DENY_IOCTL);
-	LeaveAllPowerSaveModeDirect(adapter);
-
-#ifdef CONFIG_MI_WITH_MBSSID_CAM
-	rtw_hal_change_macaddr_mbid(adapter, mac_addr);
-#else
-	rtw_hal_set_hwreg(adapter, HW_VAR_MAC_ADDR, mac_addr);
-#endif
-#ifdef CONFIG_RTW_DEBUG
-	rtw_hal_dump_macaddr(RTW_DBGDUMP, adapter);
-#endif
-	rtw_ps_deny_cancel(adapter, PS_DENY_IOCTL);
-}
 
 static int rtw_cfgvendor_set_rand_mac_oui(struct wiphy *wiphy,
 		struct wireless_dev *wdev, const void  *data, int len)
@@ -1671,7 +1656,6 @@ static int rtw_cfgvendor_set_rand_mac_oui(struct wiphy *wiphy,
 
 	return err;
 }
-
 #endif
 
 #ifdef CONFIG_RTW_CFGVENDOR_WIFI_OFFLOAD
@@ -1745,7 +1729,7 @@ static int rtw_cfgvendor_set_country(struct wiphy *wiphy,
 
 	RTW_INFO("%s country_code:\"%c%c\" \n", __func__, country_code[0], country_code[1]);
 
-	rtw_set_country(padapter, country_code);
+	rtw_set_country(padapter, country_code, RTW_REGD_SET_BY_USER);
 
 	return err;
 }
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/os_dep/linux/rtw_cfgvendor.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/os_dep/linux/rtw_cfgvendor.h
index 82924ced4389..0b758174d291 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/os_dep/linux/rtw_cfgvendor.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/os_dep/linux/rtw_cfgvendor.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017 Realtek Corporation.
@@ -592,14 +591,6 @@ typedef struct {
    u32 aggressive_statistics_gathering; // set for field debug mode. Driver should collect all statistics regardless of performance impact.
 } wifi_link_layer_params;
 
-#define RSSI_MONITOR_EVT_VERSION   1
-typedef struct {
-    u8 version;
-    s8 cur_rssi;
-    mac_addr BSSID;
-} rssi_monitor_evt;
-
-
 /* wifi statistics bitmap  */
 #define WIFI_STATS_RADIO              0x00000001      // all radio statistics
 #define WIFI_STATS_RADIO_CCA          0x00000002      // cca_busy_time (within radio statistics)
@@ -626,12 +617,16 @@ extern int rtw_cfgvendor_send_hotlist_event(struct wiphy *wiphy,
 
 #ifdef CONFIG_RTW_CFGVENDOR_RSSIMONITOR
 void rtw_cfgvendor_rssi_monitor_evt(_adapter *padapter);
+#define RSSI_MONITOR_EVT_VERSION   1
+typedef struct {
+    u8 version;
+    s8 cur_rssi;
+    mac_addr BSSID;
+} rssi_monitor_evt;
 #endif
 
 #ifdef CONFIG_RTW_CFGVENDOR_RANDOM_MAC_OUI
 void rtw_hal_pno_random_gen_mac_addr(PADAPTER adapter);
-void rtw_hal_set_hw_mac_addr(PADAPTER adapter, u8 *mac_addr);
 #endif
 
-
 #endif /* _RTW_CFGVENDOR_H_ */
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/os_dep/linux/rtw_proc.c b/drivers/net/wireless/rockchip_wlan/rtl8821cs/os_dep/linux/rtw_proc.c
index f260455ecfee..79f9e5c27a03 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/os_dep/linux/rtw_proc.c
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/os_dep/linux/rtw_proc.c
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2019 Realtek Corporation.
@@ -162,9 +161,40 @@ static int proc_get_mstat(struct seq_file *m, void *v)
 }
 #endif /* DBG_MEM_ALLOC */
 
+static bool regd_info;
 static int proc_get_country_chplan_map(struct seq_file *m, void *v)
 {
-	dump_country_chplan_map(m);
+	dump_country_chplan_map(m, regd_info);
+	return 0;
+}
+
+static ssize_t proc_set_country_chplan_map(struct file *file, const char __user *buffer, size_t count, loff_t *pos, void *data)
+{
+	char tmp[32];
+	int regd_info_val;
+
+	if (count < 1)
+		return -EINVAL;
+
+	if (count > sizeof(tmp)) {
+		rtw_warn_on(1);
+		return -EFAULT;
+	}
+
+	if (buffer && !copy_from_user(tmp, buffer, count)) {
+		int num = sscanf(tmp, "%d", &regd_info_val);
+
+		if (num >= 1)
+			regd_info = regd_info_val ? 1 : 0;
+	} else
+		return -EFAULT;
+
+	return count;
+}
+
+static int proc_get_country_list(struct seq_file *m, void *v)
+{
+	dump_country_list(m);
 	return 0;
 }
 
@@ -174,6 +204,26 @@ static int proc_get_chplan_id_list(struct seq_file *m, void *v)
 	return 0;
 }
 
+static int proc_get_chplan_country_list(struct seq_file *m, void *v)
+{
+	dump_chplan_country_list(m);
+	return 0;
+}
+
+#if CONFIG_IEEE80211_BAND_6GHZ
+static int proc_get_chplan_6g_id_list(struct seq_file *m, void *v)
+{
+	dump_chplan_6g_id_list(m);
+	return 0;
+}
+
+static int proc_get_chplan_6g_country_list(struct seq_file *m, void *v)
+{
+	dump_chplan_6g_country_list(m);
+	return 0;
+}
+#endif
+
 #ifdef CONFIG_RTW_DEBUG
 static int proc_get_chplan_test(struct seq_file *m, void *v)
 {
@@ -228,8 +278,14 @@ const struct rtw_proc_hdl drv_proc_hdls[] = {
 #ifdef DBG_MEM_ALLOC
 	RTW_PROC_HDL_SSEQ("mstat", proc_get_mstat, NULL),
 #endif /* DBG_MEM_ALLOC */
-	RTW_PROC_HDL_SSEQ("country_chplan_map", proc_get_country_chplan_map, NULL),
+	RTW_PROC_HDL_SSEQ("country_chplan_map", proc_get_country_chplan_map, proc_set_country_chplan_map),
+	RTW_PROC_HDL_SSEQ("country_list", proc_get_country_list, NULL),
 	RTW_PROC_HDL_SSEQ("chplan_id_list", proc_get_chplan_id_list, NULL),
+	RTW_PROC_HDL_SSEQ("chplan_country_list", proc_get_chplan_country_list, NULL),
+#if CONFIG_IEEE80211_BAND_6GHZ
+	RTW_PROC_HDL_SSEQ("chplan_6g_id_list", proc_get_chplan_6g_id_list, NULL),
+	RTW_PROC_HDL_SSEQ("chplan_6g_country_list", proc_get_chplan_6g_country_list, NULL),
+#endif
 #ifdef CONFIG_RTW_DEBUG
 	RTW_PROC_HDL_SSEQ("chplan_test", proc_get_chplan_test, NULL),
 #endif
@@ -1505,7 +1561,8 @@ static ssize_t proc_set_chan_plan(struct file *file, const char __user *buffer,
 	struct net_device *dev = data;
 	_adapter *padapter = (_adapter *)rtw_netdev_priv(dev);
 	char tmp[32];
-	u8 chan_plan = RTW_CHPLAN_UNSPECIFIED;
+	u16 chplan = RTW_CHPLAN_UNSPECIFIED;
+	u16 chplan_6g = RTW_CHPLAN_6G_UNSPECIFIED;
 
 	if (!padapter)
 		return -EFAULT;
@@ -1521,12 +1578,14 @@ static ssize_t proc_set_chan_plan(struct file *file, const char __user *buffer,
 	}
 
 	if (buffer && !copy_from_user(tmp, buffer, count)) {
-		int num = sscanf(tmp, "%hhx", &chan_plan);
-		if (num !=  1)
+		int num = sscanf(tmp, "%hx %hx", &chplan, &chplan_6g);
+		if (num < 1)
 			return count;
+
+		rtw_chplan_ioctl_input_mapping(&chplan, &chplan_6g);
 	}
 
-	rtw_set_channel_plan(padapter, chan_plan);
+	rtw_set_channel_plan(padapter, chplan, chplan_6g, RTW_REGD_SET_BY_USER);
 
 	return count;
 }
@@ -1537,10 +1596,7 @@ static int proc_get_country_code(struct seq_file *m, void *v)
 	_adapter *adapter = (_adapter *)rtw_netdev_priv(dev);
 	struct rf_ctl_t *rfctl = adapter_to_rfctl(adapter);
 
-	if (rfctl->country_ent)
-		dump_country_chplan(m, rfctl->country_ent);
-	else
-		RTW_PRINT_SEL(m, "unspecified\n");
+	dump_cur_country(m, rfctl);
 
 	return 0;
 }
@@ -1568,7 +1624,7 @@ static ssize_t proc_set_country_code(struct file *file, const char __user *buffe
 	if (num !=	2)
 		return count;
 
-	rtw_set_country(padapter, alpha2);
+	rtw_set_country(padapter, alpha2, RTW_REGD_SET_BY_USER);
 
 exit:
 	return count;
@@ -1945,6 +2001,62 @@ static ssize_t proc_set_ch_sel_policy(struct file *file, const char __user *buff
 	return count;
 }
 
+#ifdef CONFIG_80211D
+static int proc_get_country_ie_slave_en_conds(struct seq_file *m, void *v)
+{
+	struct net_device *dev = m->private;
+	_adapter *adapter = (_adapter *)rtw_netdev_priv(dev);
+	struct rf_ctl_t *rfctl = adapter_to_rfctl(adapter);
+
+	RTW_PRINT_SEL(m, "%-4s %-5s\n", "role", "ifbmp");
+	RTW_PRINT_SEL(m, "0x%02x  0x%02x\n"
+		, rfctl->country_ie_slave_en_role
+		, rfctl->country_ie_slave_en_ifbmp
+	);
+
+	return 0;
+}
+
+static ssize_t proc_set_country_ie_slave_en_conds(struct file *file, const char __user *buffer, size_t count, loff_t *pos, void *data)
+{
+	struct net_device *dev = data;
+	_adapter *adapter = (_adapter *)rtw_netdev_priv(dev);
+	struct rf_ctl_t *rfctl = adapter_to_rfctl(adapter);
+	char tmp[32];
+
+	if (count < 1)
+		return -EFAULT;
+
+	if (count > sizeof(tmp)) {
+		rtw_warn_on(1);
+		return -EFAULT;
+	}
+
+	if (buffer && !copy_from_user(tmp, buffer, count)) {
+		u8 role, ifbmp;
+		int num = sscanf(tmp, "%hhx %hhx", &role, &ifbmp);
+
+		if (num >= 1)
+			rfctl->country_ie_slave_en_role = role;
+		if (num >= 2)
+			rfctl->country_ie_slave_en_ifbmp = ifbmp;
+	}
+
+	return count;
+}
+
+static int proc_get_country_ie_slave_records(struct seq_file *m, void *v)
+{
+	struct net_device *dev = m->private;
+	_adapter *adapter = (_adapter *)rtw_netdev_priv(dev);
+	struct rf_ctl_t *rfctl = adapter_to_rfctl(adapter);
+
+	dump_country_ie_slave_records(m, rfctl, 0);
+
+	return 0;
+}
+#endif /* CONFIG_80211D */
+
 #ifdef CONFIG_DFS_MASTER
 static int proc_get_dfs_test_case(struct seq_file *m, void *v)
 {
@@ -5168,6 +5280,104 @@ int proc_get_cur_beacon_keys(struct seq_file *m, void *v)
 	return 0;
 }
 
+static int proc_get_wpas_info(struct seq_file *m, void *v)
+{
+	struct net_device *dev = m->private;
+	_adapter *padapter = (_adapter *)rtw_netdev_priv(dev);
+
+	RTW_PRINT_SEL(m, "WPAS_INFO: %s\n",
+		(RTW_WPAS_W1FI == adapter_to_dvobj(padapter)->wpas_type) ? "w1.fi (0)" : "android (1)");
+
+	return 0;
+}
+
+static ssize_t proc_set_wpas_info(struct file *file,
+	const char __user *buffer, size_t count, loff_t *pos, void *data)
+{
+	struct net_device *dev = data;
+	_adapter *padapter = (_adapter *)rtw_netdev_priv(dev);
+	char tmp[32];
+	int val;
+
+	if (count < 1)
+		return -EINVAL;
+
+	if (count > sizeof(tmp)) {
+		rtw_warn_on(1);
+		return -EFAULT;
+	}
+
+	if (buffer && !copy_from_user(tmp, buffer, count)) {
+		int num = sscanf(tmp, "%d ", &val);
+
+		if (RTW_WPAS_W1FI == val)
+			adapter_to_dvobj(padapter)->wpas_type = RTW_WPAS_W1FI;
+		else if (RTW_WPAS_ANDROID == val)
+			adapter_to_dvobj(padapter)->wpas_type = RTW_WPAS_ANDROID;
+		else
+			return -EFAULT;
+	} else
+		return -EFAULT;
+
+	return count;
+}
+
+static int proc_get_amsdu_mode(struct seq_file *m, void *v)
+{
+	struct net_device *dev = m->private;
+	_adapter *padapter = (_adapter *)rtw_netdev_priv(dev);
+	struct registry_priv	*pregpriv = &padapter->registrypriv;
+
+	if (pregpriv) {
+		if (pregpriv->amsdu_mode == RTW_AMSDU_MODE_NON_SPP)
+			RTW_PRINT_SEL(m, "amsdu mode: NON-SPP\n");
+		else if (pregpriv->amsdu_mode == RTW_AMSDU_MODE_SPP)
+			RTW_PRINT_SEL(m, "amsdu mode: SPP\n");
+		else if (pregpriv->amsdu_mode == RTW_AMSDU_MODE_ALL_DROP)
+			RTW_PRINT_SEL(m, "amsdu mode: ALL DROP\n");
+		else
+			RTW_PRINT_SEL(m, "unexpected amsdu mode\n");
+	}
+
+	return 0;
+}
+
+static ssize_t proc_set_amsdu_mode(struct file *file, const char __user *buffer, size_t count, loff_t *pos, void *data)
+{
+	struct net_device *dev = data;
+	_adapter *padapter = (_adapter *)rtw_netdev_priv(dev);
+	struct registry_priv	*pregpriv = &padapter->registrypriv;
+	char tmp[32];
+	u32 mode;
+	u8 bw_2g;
+	u8 bw_5g;
+
+	if (count < 1)
+		return -EFAULT;
+
+	if (count > sizeof(tmp)) {
+		rtw_warn_on(1);
+		return -EFAULT;
+	}
+
+	if (buffer && !copy_from_user(tmp, buffer, count)) {
+
+		int num = sscanf(tmp, "%d", &mode);
+
+		if (mode == RTW_AMSDU_MODE_NON_SPP
+			|| mode == RTW_AMSDU_MODE_SPP
+			|| mode == RTW_AMSDU_MODE_ALL_DROP) {
+			pregpriv->amsdu_mode = mode;
+			RTW_INFO("amsdu mode=%u\n", mode);
+		} else {
+			RTW_INFO("set unexpected mode = %d, won't apply\n", mode);
+		}
+	}
+
+	return count;
+
+}
+
 /*
 * rtw_adapter_proc:
 * init/deinit when register/unregister net_device
@@ -5412,6 +5622,10 @@ const struct rtw_proc_hdl adapter_proc_hdls[] = {
 	RTW_PROC_HDL_SSEQ("pre_link_sta", proc_get_pre_link_sta, proc_set_pre_link_sta),
 #endif
 	RTW_PROC_HDL_SSEQ("ch_sel_policy", proc_get_ch_sel_policy, proc_set_ch_sel_policy),
+#ifdef CONFIG_80211D
+	RTW_PROC_HDL_SSEQ("country_ie_slave_en_conds", proc_get_country_ie_slave_en_conds, proc_set_country_ie_slave_en_conds),
+	RTW_PROC_HDL_SSEQ("country_ie_slave_records", proc_get_country_ie_slave_records, NULL),
+#endif
 #ifdef CONFIG_DFS_MASTER
 	RTW_PROC_HDL_SSEQ("dfs_test_case", proc_get_dfs_test_case, proc_set_dfs_test_case),
 	RTW_PROC_HDL_SSEQ("update_non_ocp", NULL, proc_set_update_non_ocp),
@@ -5504,6 +5718,7 @@ const struct rtw_proc_hdl adapter_proc_hdls[] = {
 	RTW_PROC_HDL_SSEQ("rx_stat", proc_get_rx_stat, NULL),
 
 	RTW_PROC_HDL_SSEQ("tx_stat", proc_get_tx_stat, NULL),
+	RTW_PROC_HDL_SSEQ("sta_tx_stat", proc_get_sta_tx_stat, proc_set_sta_tx_stat),
 	/**** PHY Capability ****/
 	RTW_PROC_HDL_SSEQ("phy_cap", proc_get_phy_cap, NULL),
 #ifdef CONFIG_80211N_HT
@@ -5626,6 +5841,12 @@ const struct rtw_proc_hdl adapter_proc_hdls[] = {
 #endif /* CONFIG_OFFLOAD_MDNS_V4 || CONFIG_OFFLOAD_MDNS_V6 */
 #endif /* CONFIG_WAR_OFFLOAD */
 
+	RTW_PROC_HDL_SSEQ("wpas_info", proc_get_wpas_info, proc_set_wpas_info),
+	RTW_PROC_HDL_SSEQ("rtw_amsdu_mode", proc_get_amsdu_mode, proc_set_amsdu_mode),
+
+#if defined(CONFIG_CONCURRENT_MODE) && defined(CONFIG_AP_MODE)
+	RTW_PROC_HDL_SSEQ("ap_csa_cnt", proc_get_ap_csa_cnt, proc_set_ap_csa_cnt),
+#endif
 };
 
 const int adapter_proc_hdls_num = sizeof(adapter_proc_hdls) / sizeof(struct rtw_proc_hdl);
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/os_dep/linux/rtw_proc.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/os_dep/linux/rtw_proc.h
index 0f1b6a30bc74..9247e3637e31 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/os_dep/linux/rtw_proc.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/os_dep/linux/rtw_proc.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/os_dep/linux/rtw_rhashtable.c b/drivers/net/wireless/rockchip_wlan/rtl8821cs/os_dep/linux/rtw_rhashtable.c
index cb997e36108a..df303b237366 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/os_dep/linux/rtw_rhashtable.c
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/os_dep/linux/rtw_rhashtable.c
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/os_dep/linux/rtw_rhashtable.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/os_dep/linux/rtw_rhashtable.h
index 64e52beedf5d..af5ba7e4dbb0 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/os_dep/linux/rtw_rhashtable.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/os_dep/linux/rtw_rhashtable.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/os_dep/linux/sdio_intf.c b/drivers/net/wireless/rockchip_wlan/rtl8821cs/os_dep/linux/sdio_intf.c
index 4eca7948a317..e9a1cd2fefa4 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/os_dep/linux/sdio_intf.c
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/os_dep/linux/sdio_intf.c
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2019 Realtek Corporation.
@@ -104,7 +103,8 @@ static const struct sdio_device_id sdio_ids[] = {
 #endif
 
 #ifdef CONFIG_RTL8723F
-	{SDIO_DEVICE(0x024c, 0xB733), .class = SDIO_CLASS_WLAN, .driver_data = RTL8723F},
+	{SDIO_DEVICE(0x024c, 0xB733), .class = SDIO_CLASS_WLAN, .driver_data = RTL8723F}, /* SDIO+UART */
+	{SDIO_DEVICE(0x024c, 0xB73A), .class = SDIO_CLASS_WLAN, .driver_data = RTL8723F}, /* SDIO multi */
 #endif
 
 #if defined(RTW_ENABLE_WIFI_CONTROL_FUNC) /* temporarily add this to accept all sdio wlan id */
@@ -184,10 +184,14 @@ int sdio_alloc_irq(struct dvobj_priv *dvobj)
 	sdio_claim_host(func);
 
 	err = sdio_claim_irq(func, &sd_sync_int_hdl);
-	if (err) {
+	if (err && err != -EBUSY) {
 		dvobj->drv_dbg.dbg_sdio_alloc_irq_error_cnt++;
 		RTW_PRINT("%s: sdio_claim_irq FAIL(%d)!\n", __func__, err);
+	} else if (err == -EBUSY) {
+		RTW_DBG("%s: sdio_claim_irq -EBUSY\n", __func__);
+		err = 0;
 	} else {
+		RTW_DBG("%s: sdio_claim_irq SUCCESS\n", __func__);
 		dvobj->drv_dbg.dbg_sdio_alloc_irq_cnt++;
 		dvobj->irq_alloc = 1;
 	}
@@ -213,8 +217,10 @@ void sdio_free_irq(struct dvobj_priv *dvobj)
 			if (err) {
 				dvobj->drv_dbg.dbg_sdio_free_irq_error_cnt++;
 				RTW_ERR("%s: sdio_release_irq FAIL(%d)!\n", __func__, err);
-			} else
+			} else {
+				RTW_DBG("%s: sdio_release_irq SUCCESS\n", __func__);
 				dvobj->drv_dbg.dbg_sdio_free_irq_cnt++;
+			}
 			sdio_release_host(func);
 		}
 		dvobj->irq_alloc = 0;
@@ -797,6 +803,10 @@ static void sd_intf_start(PADAPTER padapter)
 		return;
 	}
 
+#if (CONFIG_RTW_SDIO_RELEASE_IRQ >= 2)
+	sdio_alloc_irq(adapter_to_dvobj(padapter));
+#endif
+
 	/* hal dep */
 	rtw_hal_enable_interrupt(padapter);
 }
@@ -810,6 +820,10 @@ static void sd_intf_stop(PADAPTER padapter)
 
 	/* hal dep */
 	rtw_hal_disable_interrupt(padapter);
+
+#if (CONFIG_RTW_SDIO_RELEASE_IRQ >= 2)
+	sdio_free_irq(adapter_to_dvobj(padapter));
+#endif
 }
 
 
@@ -1063,8 +1077,10 @@ static int rtw_drv_init(
 	rtd2885_wlan_netlink_sendMsg("linkup", "8712");
 #endif
 
+#if (CONFIG_RTW_SDIO_RELEASE_IRQ <= 1)
 	if (sdio_alloc_irq(dvobj) != _SUCCESS)
 		goto os_ndevs_deinit;
+#endif
 
 #ifdef CONFIG_GPIO_WAKEUP
 #ifdef CONFIG_PLATFORM_ARM_SUN6I
@@ -1088,7 +1104,9 @@ static int rtw_drv_init(
 
 	status = _SUCCESS;
 
+#if (CONFIG_RTW_SDIO_RELEASE_IRQ <= 1)
 os_ndevs_deinit:
+#endif
 	if (status != _SUCCESS)
 		rtw_os_ndevs_deinit(dvobj);
 free_if_vir:
@@ -1191,8 +1209,8 @@ extern int pm_netdev_close(struct net_device *pnetdev, u8 bnormal);
 
 static int rtw_sdio_suspend(struct device *dev)
 {
-	struct sdio_func *func = dev_to_sdio_func(dev);
-	struct dvobj_priv *psdpriv;
+	struct sdio_func *func = NULL;
+	struct dvobj_priv *psdpriv = NULL;
 	struct pwrctrl_priv *pwrpriv = NULL;
 	_adapter *padapter = NULL;
 	struct debug_priv *pdbgpriv = NULL;
@@ -1204,7 +1222,11 @@ static int rtw_sdio_suspend(struct device *dev)
 #endif
 
 	if (dev == NULL)
-		goto exit;
+		return ret;
+
+	func = dev_to_sdio_func(dev);
+	if(func == NULL)
+		return ret;
 
 	psdpriv = sdio_get_drvdata(func);
 	if (psdpriv == NULL)
@@ -1226,6 +1248,7 @@ static int rtw_sdio_suspend(struct device *dev)
 
 	ret = rtw_suspend_common(padapter);
 
+exit:
 #ifdef CONFIG_RTW_SDIO_PM_KEEP_POWER
 #if (LINUX_VERSION_CODE >= KERNEL_VERSION(2, 6, 34))
 	/* Android 4.0 don't support WIFI close power */
@@ -1246,7 +1269,7 @@ static int rtw_sdio_suspend(struct device *dev)
 	}
 #endif
 #endif
-exit:
+
 	return ret;
 }
 int rtw_resume_process(_adapter *padapter)
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/os_dep/linux/sdio_ops_linux.c b/drivers/net/wireless/rockchip_wlan/rtl8821cs/os_dep/linux/sdio_ops_linux.c
index cd33c7bd749e..af6a9636ec37 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/os_dep/linux/sdio_ops_linux.c
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/os_dep/linux/sdio_ops_linux.c
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2019 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/os_dep/linux/wifi_regd.c b/drivers/net/wireless/rockchip_wlan/rtl8821cs/os_dep/linux/wifi_regd.c
index 2ad754df1039..ea45dc491650 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/os_dep/linux/wifi_regd.c
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/os_dep/linux/wifi_regd.c
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2009-2010 - 2017 Realtek Corporation.
@@ -17,16 +16,245 @@
 #include <drv_types.h>
 
 #ifdef CONFIG_IOCTL_CFG80211
-static void rtw_regd_overide_flags(struct wiphy *wiphy, struct rf_ctl_t *rfctl)
+void rtw_chset_hook_os_channels(struct rf_ctl_t *rfctl)
 {
+	struct wiphy *wiphy = dvobj_to_wiphy(rfctl_to_dvobj(rfctl));
 	RT_CHANNEL_INFO *channel_set = rfctl->channel_set;
 	u8 max_chan_nums = rfctl->max_chan_nums;
-	struct ieee80211_supported_band *sband;
 	struct ieee80211_channel *ch;
-	unsigned int i, j;
+	unsigned int i;
 	u16 channel;
 	u32 freq;
 
+	for (i = 0; i < max_chan_nums; i++) {
+		channel = channel_set[i].ChannelNum;
+		#if CONFIG_IEEE80211_BAND_6GHZ
+		if (channel_set[i].band == BAND_ON_6G)
+			continue; /* TODO: wiphy with 6G band */
+		else
+		#endif
+			freq = rtw_ch2freq(channel);
+		ch = ieee80211_get_channel(wiphy, freq);
+		if (!ch) {
+			rtw_warn_on(1);
+			continue;
+		}
+
+		channel_set[i].os_chan = ch;
+	}
+}
+
+#if (LINUX_VERSION_CODE >= KERNEL_VERSION(4, 0, 0))
+bool rtw_regd_is_wiphy_self_managed(struct wiphy *wiphy)
+{
+	return rtw_rfctl_is_disable_sw_channel_plan(wiphy_to_dvobj(wiphy))
+		|| !REGSTY_REGD_SRC_FROM_OS(dvobj_to_regsty(wiphy_to_dvobj(wiphy)));
+}
+
+static struct ieee80211_reg_rule rtw_get_ieee80211_reg_rule(struct get_chplan_resp *chplan, BAND_TYPE band, int last_end_freq, int start_freq, int end_freq, int next_start_freq, u32 flags)
+{
+	struct ieee80211_reg_rule rule = REG_RULE(
+		start_freq - 10, end_freq + 10, 20, 6, 20,
+		((flags & RTW_CHF_NO_IR) ? NL80211_RRF_NO_IR : 0)
+		//| ((flags & RTW_CHF_DFS) ? NL80211_RRF_DFS : 0) /* TODO: DFS */
+	);
+
+	int regd_max_bw = 160;
+	int frange_max_bw = 160;
+
+	if (!(chplan->proto_en & CHPLAN_PROTO_EN_AC) || band == BAND_ON_2_4G)
+		regd_max_bw = 40;
+	/* TODO: !RFCTL_REG_EN_11HT(rfctl) limit to 20MHz  */
+
+	while ((end_freq - start_freq + 20) < frange_max_bw) {
+		frange_max_bw /= 2;
+		if (frange_max_bw == 20)
+			break;
+	}
+	rule.freq_range.max_bandwidth_khz = MHZ_TO_KHZ(rtw_min(regd_max_bw, frange_max_bw));
+
+	if (regd_max_bw > frange_max_bw
+		&& (rtw_freq_consecutive(last_end_freq, start_freq)
+			|| rtw_freq_consecutive(end_freq, next_start_freq)
+		)
+	)
+		rule.flags |= NL80211_RRF_AUTO_BW;
+
+	if (regd_max_bw < 40)
+		rule.flags |= NL80211_RRF_NO_HT40;
+	if (regd_max_bw < 80)
+		rule.flags |= NL80211_RRF_NO_80MHZ;
+	if (regd_max_bw < 160)
+		rule.flags |= NL80211_RRF_NO_160MHZ;
+
+	return rule;
+}
+
+static int rtw_build_wiphy_regd(struct wiphy *wiphy, struct get_chplan_resp *chplan, struct ieee80211_regdomain **regd)
+{
+	int i;
+	RT_CHANNEL_INFO *chinfo;
+	BAND_TYPE start_band, band;
+	int last_end_freq, start_freq, end_freq, freq;
+	u32 start_flags, flags;
+	struct ieee80211_regdomain *r;
+	int rule_num = 0;
+	bool build = 0;
+
+	if (regd)
+		*regd = NULL;
+
+loop:
+	start_band = BAND_MAX;
+	last_end_freq = 0;
+	for (i = 0; i < chplan->chset_num; i++) {
+		chinfo = &chplan->chset[i];
+		freq = rtw_ch2freq_by_band(chinfo->band, chinfo->ChannelNum);
+		if (!freq) {
+			RTW_WARN(FUNC_WIPHY_FMT" rtw_ch2freq_by_band(%s, %u) fail\n"
+				, FUNC_WIPHY_ARG(wiphy), band_str(chinfo->band), chinfo->ChannelNum);
+			continue;
+		}
+		band = chinfo->band;
+		flags = chinfo->flags & (RTW_CHF_NO_IR | RTW_CHF_DFS);
+
+		if (start_band == BAND_MAX) {
+			start_band = band;
+			start_freq = end_freq = freq;
+			start_flags = flags;
+			continue;
+		}
+
+		if (start_band == band
+			&& start_flags == flags
+			&& rtw_freq_consecutive(end_freq, freq)
+		) {
+			end_freq = freq;
+			continue;
+		}
+
+		/* create rule */
+		if (build) {
+			RTW_DBG("add rule_%02d(%s, %d, %d, 0x%x)\n"
+				, r->n_reg_rules, band_str(start_band), start_freq, end_freq, start_flags);
+			r->reg_rules[r->n_reg_rules++] = rtw_get_ieee80211_reg_rule(chplan, start_band
+				, last_end_freq, start_freq, end_freq, freq, start_flags);
+		} else
+			rule_num++;
+
+		/* start a new rule */
+		start_band = band;
+		last_end_freq = end_freq;
+		start_freq = end_freq = freq;
+		start_flags = flags;
+	}
+
+	if (start_band != BAND_MAX) {
+		/* create rule */
+		if (build) {
+			RTW_DBG("add rule_%02d(%s, %d, %d, 0x%x)\n"
+				, r->n_reg_rules, band_str(start_band), start_freq, end_freq, start_flags);
+			r->reg_rules[r->n_reg_rules++] = rtw_get_ieee80211_reg_rule(chplan, start_band
+				, last_end_freq, start_freq, end_freq, 0, start_flags);
+		} else
+			rule_num++;
+	}
+
+	if (!build) {
+		/* switch to build phase */
+		build = 1;
+		if (!regd)
+			goto exit;
+
+		r = rtw_zmalloc(sizeof(**regd) + sizeof(struct ieee80211_reg_rule) * rule_num);
+		if (!r) {
+			rule_num = -1;
+			goto exit;
+		}
+
+		_rtw_memcpy(r->alpha2, chplan->alpha2, 2);
+		r->alpha2[2] = 0;
+		r->dfs_region = NL80211_DFS_UNSET;
+		goto loop;
+	}
+
+	*regd = r;
+
+exit:
+	return rule_num;
+}
+
+static void rtw_regd_disable_no_20mhz_chs(struct wiphy *wiphy)
+{
+	struct ieee80211_supported_band *sband;
+	struct ieee80211_channel *ch;
+	unsigned int i, j;
+
+	for (i = 0; i < NUM_NL80211_BANDS; i++) {
+		sband = wiphy->bands[i];
+		if (!sband)
+			continue;
+		for (j = 0; j < sband->n_channels; j++) {
+			ch = &sband->channels[j];
+			if (!ch)
+				continue;
+			if (ch->flags & IEEE80211_CHAN_NO_20MHZ) {
+				RTW_INFO(FUNC_WIPHY_FMT" disable band:%d ch:%u w/o 20MHz\n", FUNC_WIPHY_ARG(wiphy), ch->band, ch->hw_value);
+				ch->flags = IEEE80211_CHAN_DISABLED;
+			}
+		}
+	}
+}
+
+void rtw_update_wiphy_regd(struct wiphy *wiphy, struct get_chplan_resp *chplan, bool rtnl_lock_needed)
+{
+	struct ieee80211_regdomain *regd;
+	int ret;
+
+	ret = rtw_build_wiphy_regd(wiphy, chplan, &regd);
+	if (ret == -1) {
+		RTW_WARN(FUNC_WIPHY_FMT" rtw_build_wiphy_regd() fail\n", FUNC_WIPHY_ARG(wiphy));
+		return;
+	}
+
+	if (ret == 0) {
+		RTW_WARN(FUNC_WIPHY_FMT" rtw_build_wiphy_regd() builds empty regd, bypass regd setting\n", FUNC_WIPHY_ARG(wiphy));
+		goto free_regd;
+	}
+
+	if (rtnl_lock_needed)
+		rtnl_lock();
+
+	#if (LINUX_VERSION_CODE >= KERNEL_VERSION(5, 12, 0))
+	ret = regulatory_set_wiphy_regd_sync(wiphy, regd);
+	#else
+	ret = regulatory_set_wiphy_regd_sync_rtnl(wiphy, regd);
+	#endif
+
+	rtw_regd_disable_no_20mhz_chs(wiphy);
+
+	if (rtnl_lock_needed)
+		rtnl_unlock();
+
+	if (ret != 0)
+		RTW_INFO(FUNC_WIPHY_FMT" regulatory_set_wiphy_regd_sync_rtnl return %d\n", FUNC_WIPHY_ARG(wiphy), ret);
+
+free_regd:
+	rtw_mfree(regd, sizeof(*regd) + sizeof(struct ieee80211_reg_rule) * regd->n_reg_rules);
+}
+#endif /* (LINUX_VERSION_CODE >= KERNEL_VERSION(4, 0, 0)) */
+
+static void rtw_regd_overide_flags(struct wiphy *wiphy, struct get_chplan_resp *chplan, bool rtnl_lock_needed)
+{
+	RT_CHANNEL_INFO *channel_set = chplan->chset;
+	u8 max_chan_nums = chplan->chset_num;
+	struct ieee80211_supported_band *sband;
+	struct ieee80211_channel *ch;
+	unsigned int i, j;
+
+	if (rtnl_lock_needed)
+		rtnl_lock();
+
 	/* all channels disable */
 	for (i = 0; i < NUM_NL80211_BANDS; i++) {
 		sband = wiphy->bands[i];
@@ -42,13 +270,9 @@ static void rtw_regd_overide_flags(struct wiphy *wiphy, struct rf_ctl_t *rfctl)
 
 	/* channels apply by channel plans. */
 	for (i = 0; i < max_chan_nums; i++) {
-		channel = channel_set[i].ChannelNum;
-		freq = rtw_ch2freq(channel);
-		ch = ieee80211_get_channel(wiphy, freq);
-		if (!ch) {
-			rtw_warn_on(1);
+		ch = channel_set[i].os_chan;
+		if (!ch)
 			continue;
-		}
 
 		/* enable */
 		ch->flags = 0;
@@ -59,7 +283,9 @@ static void rtw_regd_overide_flags(struct wiphy *wiphy, struct rf_ctl_t *rfctl)
 			* bypass IEEE80211_CHAN_RADAR when configured with radar detection
 			* to prevent from hostapd blocking DFS channels
 			*/
-			if (rtw_rfctl_dfs_domain_unknown(rfctl))
+			#ifdef CONFIG_DFS_MASTER
+			if (chplan->dfs_domain == RTW_DFS_REGD_NONE)
+			#endif
 				ch->flags |= IEEE80211_CHAN_RADAR;
 		}
 
@@ -71,48 +297,46 @@ static void rtw_regd_overide_flags(struct wiphy *wiphy, struct rf_ctl_t *rfctl)
 			#endif
 		}
 	}
+
+	if (rtnl_lock_needed)
+		rtnl_unlock();
 }
 
 #ifdef CONFIG_REGD_SRC_FROM_OS
-static void rtw_regd_apply_dfs_flags(struct rf_ctl_t *rfctl)
+static void rtw_regd_apply_dfs_flags(struct get_chplan_resp *chplan, bool rtnl_lock_needed)
 {
-	RT_CHANNEL_INFO *channel_set = rfctl->channel_set;
-	u8 max_chan_nums = rfctl->max_chan_nums;
+	RT_CHANNEL_INFO *channel_set = chplan->chset;
+	u8 max_chan_nums = chplan->chset_num;
 	unsigned int i;
 	struct ieee80211_channel *chan;
 
+	if (rtnl_lock_needed)
+		rtnl_lock();
+
 	/* channels apply by channel plans. */
 	for (i = 0; i < max_chan_nums; i++) {
 		chan = channel_set[i].os_chan;
+		if (!chan) {
+			rtw_warn_on(1);
+			continue;
+		}
 		if (channel_set[i].flags & RTW_CHF_DFS) {
 			/*
 			* before integrating with nl80211 flow
 			* clear IEEE80211_CHAN_RADAR when configured with radar detection
 			* to prevent from hostapd blocking DFS channels
 			*/
-			if (!rtw_rfctl_dfs_domain_unknown(rfctl))
+			#ifdef CONFIG_DFS_MASTER
+			if (chplan->dfs_domain != RTW_DFS_REGD_NONE)
 				chan->flags &= ~IEEE80211_CHAN_RADAR;
+			#endif
 		}
 	}
-}
-#endif
-
-void rtw_regd_apply_flags(struct wiphy *wiphy)
-{
-	struct dvobj_priv *dvobj = wiphy_to_dvobj(wiphy);
-	struct rf_ctl_t *rfctl = dvobj_to_rfctl(dvobj);
 
-	if (rfctl->regd_src == REGD_SRC_RTK_PRIV)
-		rtw_regd_overide_flags(wiphy, rfctl);
-#ifdef CONFIG_REGD_SRC_FROM_OS
-	else if (rfctl->regd_src == REGD_SRC_OS)
-		rtw_regd_apply_dfs_flags(rfctl);
-#endif
-	else
-		rtw_warn_on(1);
+	if (rtnl_lock_needed)
+		rtnl_unlock();
 }
 
-#ifdef CONFIG_REGD_SRC_FROM_OS
 /* init_channel_set_from_wiphy */
 u8 rtw_os_init_channel_set(_adapter *padapter, RT_CHANNEL_INFO *channel_set)
 {
@@ -142,6 +366,7 @@ u8 rtw_os_init_channel_set(_adapter *padapter, RT_CHANNEL_INFO *channel_set)
 			}
 
 			channel_set[chanset_size].ChannelNum = chan->hw_value;
+			channel_set[chanset_size].band = nl80211_band_to_rtw_band(i);
 			#if (LINUX_VERSION_CODE < KERNEL_VERSION(3, 14, 0))
 			if (chan->flags & (IEEE80211_CHAN_NO_IBSS | IEEE80211_CHAN_PASSIVE_SCAN))
 			#else
@@ -234,6 +459,22 @@ static enum rtw_dfs_regd nl80211_dfs_regions_to_rtw_dfs_region(enum nl80211_dfs_
 #endif /* (LINUX_VERSION_CODE >= KERNEL_VERSION(3, 3, 0)) */
 #endif /* CONFIG_REGD_SRC_FROM_OS */
 
+static enum rtw_regd_inr nl80211_reg_initiator_to_rtw_regd_inr(enum nl80211_reg_initiator initiator)
+{
+	switch (initiator) {
+	case NL80211_REGDOM_SET_BY_DRIVER:
+		return RTW_REGD_SET_BY_DRIVER;
+	case NL80211_REGDOM_SET_BY_CORE:
+		return RTW_REGD_SET_BY_CORE;
+	case NL80211_REGDOM_SET_BY_USER:
+		return RTW_REGD_SET_BY_USER;
+	case NL80211_REGDOM_SET_BY_COUNTRY_IE:
+		return RTW_REGD_SET_BY_COUNTRY_IE;
+	}
+	rtw_warn_on(1);
+	return RTW_REGD_SET_BY_NUM;
+};
+
 #ifdef CONFIG_RTW_DEBUG
 static const char *nl80211_reg_initiator_str(enum nl80211_reg_initiator initiator)
 {
@@ -342,8 +583,12 @@ static void dump_requlatory_request(void *sel, struct regulatory_request *reques
 static void rtw_reg_notifier(struct wiphy *wiphy, struct regulatory_request *request)
 {
 	struct dvobj_priv *dvobj = wiphy_to_dvobj(wiphy);
-	struct rf_ctl_t *rfctl = dvobj_to_rfctl(dvobj);
 	struct registry_priv *regsty = dvobj_to_regsty(dvobj);
+	enum rtw_regd_inr inr;
+
+#if (LINUX_VERSION_CODE >= KERNEL_VERSION(3, 11, 0))
+	rtw_set_rtnl_lock_holder(dvobj, current);
+#endif
 
 #ifdef CONFIG_RTW_DEBUG
 	if (rtw_drv_log_level >= _DRV_INFO_) {
@@ -352,6 +597,8 @@ static void rtw_reg_notifier(struct wiphy *wiphy, struct regulatory_request *req
 	}
 #endif
 
+	inr = nl80211_reg_initiator_to_rtw_regd_inr(request->initiator);
+
 #ifdef CONFIG_REGD_SRC_FROM_OS
 	if (REGSTY_REGD_SRC_FROM_OS(regsty)) {
 		enum rtw_dfs_regd dfs_region =  RTW_DFS_REGD_NONE;
@@ -361,25 +608,35 @@ static void rtw_reg_notifier(struct wiphy *wiphy, struct regulatory_request *req
 		#endif
 
 		/* trigger command to sync regulatory form OS */
-		rtw_sync_os_regd_cmd(wiphy_to_adapter(wiphy), RTW_CMDF_WAIT_ACK, request->alpha2, dfs_region);
+		rtw_sync_os_regd_cmd(wiphy_to_adapter(wiphy), RTW_CMDF_WAIT_ACK, request->alpha2, dfs_region, inr);
 	} else
 #endif
 	{
 		/* use alpha2 as input to select the corresponding channel plan settings defined by Realtek */
+		struct get_chplan_resp *chplan;
+
 		switch (request->initiator) {
-		case NL80211_REGDOM_SET_BY_DRIVER:
-			break;
-		case NL80211_REGDOM_SET_BY_CORE:
-			break;
 		case NL80211_REGDOM_SET_BY_USER:
-			rtw_set_country(wiphy_to_adapter(wiphy), request->alpha2);
+			rtw_set_country(wiphy_to_adapter(wiphy), request->alpha2, inr);
 			break;
+		case NL80211_REGDOM_SET_BY_DRIVER:
+		case NL80211_REGDOM_SET_BY_CORE:
 		case NL80211_REGDOM_SET_BY_COUNTRY_IE:
+		default:
+			#if (LINUX_VERSION_CODE >= KERNEL_VERSION(4, 0, 0))
+			rtw_warn_on(rtw_regd_is_wiphy_self_managed(wiphy));
+			#endif
+			if (rtw_get_chplan_cmd(wiphy_to_adapter(wiphy), RTW_CMDF_WAIT_ACK, &chplan) == _SUCCESS)
+				rtw_regd_change_complete_sync(wiphy, chplan, 0);
+			else
+				rtw_warn_on(1);
 			break;
 		}
-
-		rtw_regd_apply_flags(wiphy);
 	}
+
+#if (LINUX_VERSION_CODE >= KERNEL_VERSION(3, 11, 0))
+	rtw_set_rtnl_lock_holder(dvobj, NULL);
+#endif
 }
 
 #if (LINUX_VERSION_CODE < KERNEL_VERSION(3, 9, 0))
@@ -390,8 +647,39 @@ static int rtw_reg_notifier_return(struct wiphy *wiphy, struct regulatory_reques
 }
 #endif
 
+struct async_regd_change_evt {
+	_list list; /* async_regd_change_list */
+	struct wiphy *wiphy;
+	struct get_chplan_resp *chplan;
+};
+
+static void async_regd_change_work_hdl(_workitem *work)
+{
+	struct rtw_wiphy_data *wiphy_data = container_of(work, struct rtw_wiphy_data, async_regd_change_work);
+	struct async_regd_change_evt *evt;
+	_irqL irqL;
+	_list *list, *head = &wiphy_data->async_regd_change_list;
+
+	while (1) {
+		_enter_critical_mutex(&wiphy_data->async_regd_change_mutex, &irqL);
+		list = rtw_is_list_empty(head) ? NULL : get_next(head);
+		if (list)
+			rtw_list_delete(list);
+		_exit_critical_mutex(&wiphy_data->async_regd_change_mutex, &irqL);
+
+		if (!list)
+			break;
+
+		evt = LIST_CONTAINOR(list, struct async_regd_change_evt, list);
+		rtw_regd_change_complete_sync(evt->wiphy, evt->chplan, 1);
+		rtw_mfree(evt, sizeof(*evt));
+	}
+}
+
 int rtw_regd_init(struct wiphy *wiphy)
 {
+	struct rtw_wiphy_data *wiphy_data = rtw_wiphy_priv(wiphy);
+
 #if (LINUX_VERSION_CODE < KERNEL_VERSION(3, 9, 0))
 	wiphy->reg_notifier = rtw_reg_notifier_return;
 #else
@@ -406,6 +694,100 @@ int rtw_regd_init(struct wiphy *wiphy)
 	wiphy->regulatory_flags &= ~REGULATORY_DISABLE_BEACON_HINTS;
 #endif
 
+#if (LINUX_VERSION_CODE >= KERNEL_VERSION(3, 19, 0))
+	wiphy->regulatory_flags |= REGULATORY_IGNORE_STALE_KICKOFF;
+#endif
+
+#if (LINUX_VERSION_CODE >= KERNEL_VERSION(4, 0, 0))
+	if (rtw_regd_is_wiphy_self_managed(wiphy))
+		wiphy->regulatory_flags |= REGULATORY_WIPHY_SELF_MANAGED;
+#endif
+
+	_rtw_init_listhead(&wiphy_data->async_regd_change_list);
+	_rtw_mutex_init(&wiphy_data->async_regd_change_mutex);
+	_init_workitem(&wiphy_data->async_regd_change_work, async_regd_change_work_hdl, NULL);
+
 	return 0;
 }
+
+static void rtw_regd_async_regd_change_list_free(struct wiphy *wiphy)
+{
+	struct rtw_wiphy_data *wiphy_data = rtw_wiphy_priv(wiphy);
+	struct async_regd_change_evt *evt;
+	struct get_chplan_resp *chplan;
+	_irqL irqL;
+	_list *cur, *head;
+
+	_enter_critical_mutex(&wiphy_data->async_regd_change_mutex, &irqL);
+
+	head = &wiphy_data->async_regd_change_list;
+	cur = get_next(head);
+
+	while ((rtw_end_of_queue_search(head, cur)) == _FALSE) {
+		evt = LIST_CONTAINOR(cur, struct async_regd_change_evt, list);
+		chplan = evt->chplan;
+		cur = get_next(cur);
+		rtw_list_delete(&evt->list);
+		rtw_vmfree(chplan, sizeof(*chplan) + sizeof(RT_CHANNEL_INFO) * chplan->chset_num);
+		rtw_mfree(evt, sizeof(*evt));
+	}
+
+	_exit_critical_mutex(&wiphy_data->async_regd_change_mutex, &irqL);
+}
+
+void rtw_regd_deinit(struct wiphy *wiphy)
+{
+	struct rtw_wiphy_data *wiphy_data = rtw_wiphy_priv(wiphy);
+
+	_cancel_workitem_sync(&wiphy_data->async_regd_change_work);
+	rtw_regd_async_regd_change_list_free(wiphy);
+	_rtw_mutex_free(&wiphy_data->async_regd_change_mutex);
+}
+
+void rtw_regd_change_complete_sync(struct wiphy *wiphy, struct get_chplan_resp *chplan, bool rtnl_lock_needed)
+{
+	if (chplan->regd_src == REGD_SRC_RTK_PRIV) {
+		#if (LINUX_VERSION_CODE >= KERNEL_VERSION(4, 0, 0))
+		if (rtw_regd_is_wiphy_self_managed(wiphy))
+			rtw_update_wiphy_regd(wiphy, chplan, rtnl_lock_needed);
+		else
+		#endif
+			rtw_regd_overide_flags(wiphy, chplan, rtnl_lock_needed);
+	}
+#ifdef CONFIG_REGD_SRC_FROM_OS
+	else if (chplan->regd_src == REGD_SRC_OS)
+		rtw_regd_apply_dfs_flags(chplan, rtnl_lock_needed);
+#endif
+	else
+		rtw_warn_on(1);
+
+	rtw_vmfree(chplan, sizeof(struct get_chplan_resp) + sizeof(RT_CHANNEL_INFO) * chplan->chset_num);
+}
+
+int rtw_regd_change_complete_async(struct wiphy *wiphy, struct get_chplan_resp *chplan)
+{
+	struct rtw_wiphy_data *wiphy_data = rtw_wiphy_priv(wiphy);
+	struct async_regd_change_evt *evt;
+	_irqL irqL;
+
+	evt = rtw_malloc(sizeof(*evt));
+	if (!evt) {
+		rtw_vmfree(chplan, sizeof(struct get_chplan_resp) + sizeof(RT_CHANNEL_INFO) * chplan->chset_num);
+		return _FAIL;
+	}
+
+	_rtw_init_listhead(&evt->list);
+	evt->wiphy = wiphy;
+	evt->chplan = chplan;
+
+	_enter_critical_mutex(&wiphy_data->async_regd_change_mutex, &irqL);
+
+	rtw_list_insert_tail(&evt->list, &wiphy_data->async_regd_change_list);
+
+	_exit_critical_mutex(&wiphy_data->async_regd_change_mutex, &irqL);
+
+	_set_workitem(&wiphy_data->async_regd_change_work);
+
+	return _SUCCESS;
+}
 #endif /* CONFIG_IOCTL_CFG80211 */
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/os_dep/linux/wifi_regd.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/os_dep/linux/wifi_regd.h
index d87be171a890..c7e2f2cef859 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/os_dep/linux/wifi_regd.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/os_dep/linux/wifi_regd.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2009-2010 - 2017 Realtek Corporation.
@@ -17,12 +16,15 @@
 #ifndef __WIFI_REGD_H__
 #define __WIFI_REGD_H__
 
-void rtw_regd_apply_flags(struct wiphy *wiphy);
+void rtw_chset_hook_os_channels(struct rf_ctl_t *rfctl);
+void rtw_regd_change_complete_sync(struct wiphy *wiphy, struct get_chplan_resp *chplan, bool rtnl_lock_needed);
+int rtw_regd_change_complete_async(struct wiphy *wiphy, struct get_chplan_resp *chplan);
 #ifdef CONFIG_REGD_SRC_FROM_OS
 struct _RT_CHANNEL_INFO;
 u8 rtw_os_init_channel_set(_adapter *padapter, struct _RT_CHANNEL_INFO *channel_set);
 s16 rtw_os_get_total_txpwr_regd_lmt_mbm(_adapter *adapter, u8 cch, enum channel_width bw);
 #endif
 int rtw_regd_init(struct wiphy *wiphy);
+void rtw_regd_deinit(struct wiphy *wiphy);
 
 #endif /* __WIFI_REGD_H__ */
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/os_dep/linux/xmit_linux.c b/drivers/net/wireless/rockchip_wlan/rtl8821cs/os_dep/linux/xmit_linux.c
index 3e1f28b0377f..efe11c98ae50 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/os_dep/linux/xmit_linux.c
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/os_dep/linux/xmit_linux.c
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017 Realtek Corporation.
@@ -390,7 +389,11 @@ int _rtw_xmit_entry(_pkt *pkt, _nic_hdl pnetdev)
 	}
 	DBG_COUNTER(padapter->tx_logs.os_tx);
 
-	if (rtw_if_up(padapter) == _FALSE) {
+	if ((rtw_if_up(padapter) == _FALSE)
+#ifdef CONFIG_LAYER2_ROAMING
+		&&(!padapter->mlmepriv.roam_network)
+#endif
+	){
 		DBG_COUNTER(padapter->tx_logs.os_tx_err_up);
 		#ifdef DBG_TX_DROP_FRAME
 		RTW_INFO("DBG_TX_DROP_FRAME %s if_up fail\n", __FUNCTION__);
@@ -511,7 +514,11 @@ s32 rtw_alibaba_mesh_xmit_entry(_pkt *pkt, struct net_device *ndev)
 }
 #endif
 
+#if (LINUX_VERSION_CODE >= KERNEL_VERSION(2, 6, 32))
+netdev_tx_t rtw_xmit_entry(_pkt *pkt, _nic_hdl pnetdev)
+#else
 int rtw_xmit_entry(_pkt *pkt, _nic_hdl pnetdev)
+#endif
 {
 	_adapter *padapter = (_adapter *)rtw_netdev_priv(pnetdev);
 	struct	mlme_priv	*pmlmepriv = &(padapter->mlmepriv);
@@ -520,7 +527,8 @@ int rtw_xmit_entry(_pkt *pkt, _nic_hdl pnetdev)
 	if (pkt) {
 #ifdef CONFIG_CUSTOMER_ALIBABA_GENERAL
 		if (check_alibaba_meshpkt(pkt)) {
-			return rtw_alibaba_mesh_xmit_entry(pkt, pnetdev);
+			ret = rtw_alibaba_mesh_xmit_entry(pkt, pnetdev);
+			goto out;
 		}
 #endif
 		if (check_fwstate(pmlmepriv, WIFI_MONITOR_STATE) == _TRUE) {
@@ -535,5 +543,12 @@ int rtw_xmit_entry(_pkt *pkt, _nic_hdl pnetdev)
 
 	}
 
+#ifdef CONFIG_CUSTOMER_ALIBABA_GENERAL
+out:
+#endif
+#if (LINUX_VERSION_CODE >= KERNEL_VERSION(2, 6, 32))
+	return (ret == 0) ? NETDEV_TX_OK : NETDEV_TX_BUSY;
+#else
 	return ret;
+#endif
 }
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/os_dep/osdep_service.c b/drivers/net/wireless/rockchip_wlan/rtl8821cs/os_dep/osdep_service.c
index 70fb6d51397c..2f6afb067d1a 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/os_dep/osdep_service.c
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/os_dep/osdep_service.c
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2007 - 2017 Realtek Corporation.
@@ -29,6 +28,151 @@ atomic_t _malloc_size = ATOMIC_INIT(0);
 #endif /* DBG_MEMORY_LEAK */
 
 
+#ifdef DBG_MEM_ERR_FREE
+
+#if (KERNEL_VERSION(3, 7, 0) <= LINUX_VERSION_CODE)
+
+#define DBG_MEM_HASHBITS 10
+
+#define DBG_MEM_TYPE_PHY 0
+#define DBG_MEM_TYPE_VIR 1
+
+/*
+ * DBG_MEM_ERR_FREE is only for the debug purpose.
+ *
+ * There is the limitation that this mechanism only can
+ * support one wifi device, and has problem if there
+ * are two or more wifi devices with one driver on
+ * the same system. It's because dbg_mem_ht is global
+ * variable, and if we move this dbg_mem_ht into struct
+ * dvobj_priv to support more wifi devices, the memory
+ * allocation functions, like rtw_malloc(), need to have
+ * the parameter dvobj to get relative hash table, and
+ * then it is the huge changes for the driver currently.
+ *
+ */
+struct hlist_head dbg_mem_ht[1 << DBG_MEM_HASHBITS];
+
+struct hash_mem {
+	void *mem;
+	int sz;
+	int type;
+	struct hlist_node node;
+};
+
+#endif /* LINUX_VERSION_CODE */
+
+void rtw_dbg_mem_init(void)
+{
+#if (KERNEL_VERSION(3, 7, 0) <= LINUX_VERSION_CODE)
+	hash_init(dbg_mem_ht);
+#endif /* LINUX_VERSION_CODE */
+}
+
+void rtw_dbg_mem_deinit(void)
+{
+#if (KERNEL_VERSION(3, 7, 0) <= LINUX_VERSION_CODE)
+	struct hlist_head *head;
+	struct hlist_node *p;
+	int i;
+
+	for (i = 0; i < HASH_SIZE(dbg_mem_ht); i++) {
+		head = &dbg_mem_ht[i];
+		p = head->first;
+		while (p) {
+			struct hlist_node *prev;
+			struct hash_mem *hm;
+
+			hm = container_of(p, struct hash_mem, node);
+			prev = p;
+			p = p->next;
+
+			RTW_ERR("%s: memory leak - 0x%x\n", __func__, hm->mem);
+			hash_del(prev);
+			kfree(hm);
+		}
+	}
+#endif /* LINUX_VERSION_CODE */
+}
+
+#if (KERNEL_VERSION(3, 7, 0) <= LINUX_VERSION_CODE)
+struct hash_mem *rtw_dbg_mem_find(void *mem)
+{
+	struct hash_mem *hm;
+	struct hlist_head *head;
+	struct hlist_node *p;
+
+	head = &dbg_mem_ht[hash_64((u64)(mem), DBG_MEM_HASHBITS)];
+
+	p = head->first;
+	while (p) {
+		hm = container_of(p, struct hash_mem, node);
+		if (hm->mem == mem)
+			goto out;
+		p = p->next;
+	}
+	hm = NULL;
+out:
+	return hm;
+}
+
+void rtw_dbg_mem_alloc(void *mem, int sz, int type)
+{
+	struct hash_mem *hm;
+
+	hm = rtw_dbg_mem_find(mem);
+	if (!hm) {
+		hm = (struct hash_mem *)kmalloc(sizeof(*hm), GFP_ATOMIC);
+		hm->mem = mem;
+		hm->sz = sz;
+		hm->type = type;
+		hash_add(dbg_mem_ht, &hm->node, (u64)(mem));
+	} else {
+		RTW_ERR("%s mem(%x) is in hash already\n", __func__, mem);
+		rtw_warn_on(1);
+	}
+}
+
+bool rtw_dbg_mem_free(void *mem, int sz, int type)
+{
+	struct hash_mem *hm;
+	bool ret;
+
+	hm = rtw_dbg_mem_find(mem);
+	if (!hm) {
+		RTW_ERR("%s cannot find allocated memory: %x\n",
+			__func__, mem);
+		rtw_warn_on(1);
+		return false;
+	}
+
+	if (hm->sz != sz) {
+		RTW_ERR("%s memory (%x) size mismatch free(%d) != alloc(%d)\n",
+			__func__, mem, sz, hm->sz);
+		rtw_warn_on(1);
+		ret = false;
+		goto out;
+	}
+
+	if (hm->type != type) {
+		RTW_ERR("%s memory (%x) type mismatch free(%d) != alloc(%d)\n",
+			__func__, mem, type, hm->type);
+		rtw_warn_on(1);
+		ret = false;
+		goto out;
+	}
+	ret = true;
+
+out:
+	hash_del(&hm->node);
+	kfree(hm);
+
+	return ret;
+}
+
+#endif /* LINUX_VERSION_CODE */
+#endif /* DBG_MEM_ERR_FREE */
+
 #if defined(PLATFORM_LINUX)
 /*
 * Translate the OS dependent @param error_code to OS independent RTW_STATUS_CODE
@@ -88,6 +232,11 @@ inline void *_rtw_vmalloc(u32 sz)
 	NdisAllocateMemoryWithTag(&pbuf, sz, RT_TAG);
 #endif
 
+#ifdef DBG_MEM_ERR_FREE
+	if (pbuf)
+		rtw_dbg_mem_alloc(pbuf, sz, DBG_MEM_TYPE_VIR);
+#endif /* DBG_MEM_ERR_FREE */
+
 #ifdef DBG_MEMORY_LEAK
 #ifdef PLATFORM_LINUX
 	if (pbuf != NULL) {
@@ -122,6 +271,11 @@ inline void *_rtw_zvmalloc(u32 sz)
 
 inline void _rtw_vmfree(void *pbuf, u32 sz)
 {
+#ifdef DBG_MEM_ERR_FREE
+	if (!rtw_dbg_mem_free(pbuf, sz, DBG_MEM_TYPE_VIR))
+		return;
+#endif /* DBG_MEM_ERR_FREE */
+
 #ifdef PLATFORM_LINUX
 	vfree(pbuf);
 #endif
@@ -162,6 +316,11 @@ void *_rtw_malloc(u32 sz)
 
 #endif
 
+#ifdef DBG_MEM_ERR_FREE
+	if (pbuf)
+		rtw_dbg_mem_alloc(pbuf, sz, DBG_MEM_TYPE_PHY);
+#endif /* DBG_MEM_ERR_FREE */
+
 #ifdef DBG_MEMORY_LEAK
 #ifdef PLATFORM_LINUX
 	if (pbuf != NULL) {
@@ -192,7 +351,6 @@ void *_rtw_zmalloc(u32 sz)
 #ifdef PLATFORM_WINDOWS
 		NdisFillMemory(pbuf, sz, 0);
 #endif
-
 	}
 
 	return pbuf;
@@ -202,6 +360,11 @@ void *_rtw_zmalloc(u32 sz)
 void _rtw_mfree(void *pbuf, u32 sz)
 {
 
+#ifdef DBG_MEM_ERR_FREE
+	if (!rtw_dbg_mem_free(pbuf, sz, DBG_MEM_TYPE_PHY))
+		return;
+#endif /* DBG_MEM_ERR_FREE */
+
 #ifdef PLATFORM_LINUX
 #ifdef RTK_DMP_PLATFORM
 	if (sz > 0x4000)
@@ -2378,6 +2541,7 @@ inline bool ATOMIC_INC_UNLESS(ATOMIC_T *v, int u)
 }
 
 #ifdef PLATFORM_LINUX
+#if !defined(CONFIG_RTW_ANDROID_GKI)
 /*
 * Open a file with the specific @param path, @param flag, @param mode
 * @param fpp the pointer of struct file pointer to get struct file pointer while file opening is success
@@ -2497,18 +2661,22 @@ static int isFileReadable(const char *path, u32 *sz)
 {
 	struct file *fp;
 	int ret = 0;
+	#if (LINUX_VERSION_CODE < KERNEL_VERSION(5, 10, 0))
 	mm_segment_t oldfs;
+	#endif
 	char buf;
 
 	fp = filp_open(path, O_RDONLY, 0);
 	if (IS_ERR(fp))
 		ret = PTR_ERR(fp);
 	else {
+		#if (LINUX_VERSION_CODE < KERNEL_VERSION(5, 10, 0))
 		oldfs = get_fs();
 		#if (LINUX_VERSION_CODE >= KERNEL_VERSION(5, 1, 0))
 		set_fs(KERNEL_DS);
 		#else
-		set_fs(KERNEL_DS);
+		set_fs(get_ds());
+		#endif
 		#endif
 
 		if (1 != readFile(fp, &buf, 1))
@@ -2522,51 +2690,14 @@ static int isFileReadable(const char *path, u32 *sz)
 			#endif
 		}
 
+		#if (LINUX_VERSION_CODE < KERNEL_VERSION(5, 10, 0))
 		set_fs(oldfs);
+		#endif
 		filp_close(fp, NULL);
 	}
 	return ret;
 }
 
-/*
-* Open the file with @param path and retrive the file content into memory starting from @param buf for @param sz at most
-* @param path the path of the file to open and read
-* @param buf the starting address of the buffer to store file content
-* @param sz how many bytes to read at most
-* @return the byte we've read, or Linux specific error code
-*/
-static int retriveFromFile(const char *path, u8 *buf, u32 sz)
-{
-	int ret = -1;
-	mm_segment_t oldfs;
-	struct file *fp;
-
-	if (path && buf) {
-		ret = openFile(&fp, path, O_RDONLY, 0);
-		if (0 == ret) {
-			RTW_INFO("%s openFile path:%s fp=%p\n", __FUNCTION__, path , fp);
-
-			oldfs = get_fs();
-			#if (LINUX_VERSION_CODE >= KERNEL_VERSION(5, 1, 0))
-			set_fs(KERNEL_DS);
-			#else
-			set_fs(KERNEL_DS);
-			#endif
-			ret = readFile(fp, buf, sz);
-			set_fs(oldfs);
-			closeFile(fp);
-
-			RTW_INFO("%s readFile, ret:%d\n", __FUNCTION__, ret);
-
-		} else
-			RTW_INFO("%s openFile path:%s Fail, ret:%d\n", __FUNCTION__, path, ret);
-	} else {
-		RTW_INFO("%s NULL pointer\n", __FUNCTION__);
-		ret =  -EINVAL;
-	}
-	return ret;
-}
-
 /*
 * Open the file with @param path and wirte @param sz byte of data starting from @param buf into the file
 * @param path the path of the file to open and write
@@ -2577,7 +2708,9 @@ static int retriveFromFile(const char *path, u8 *buf, u32 sz)
 static int storeToFile(const char *path, u8 *buf, u32 sz)
 {
 	int ret = 0;
+	#if (LINUX_VERSION_CODE < KERNEL_VERSION(5, 10, 0))
 	mm_segment_t oldfs;
+	#endif
 	struct file *fp;
 
 	if (path && buf) {
@@ -2585,14 +2718,20 @@ static int storeToFile(const char *path, u8 *buf, u32 sz)
 		if (0 == ret) {
 			RTW_INFO("%s openFile path:%s fp=%p\n", __FUNCTION__, path , fp);
 
+			#if (LINUX_VERSION_CODE < KERNEL_VERSION(5, 10, 0))
 			oldfs = get_fs();
 			#if (LINUX_VERSION_CODE >= KERNEL_VERSION(5, 1, 0))
 			set_fs(KERNEL_DS);
 			#else
-			set_fs(KERNEL_DS);
+			set_fs(get_ds());
 			#endif
+			#endif
+
 			ret = writeFile(fp, buf, sz);
+
+			#if (LINUX_VERSION_CODE < KERNEL_VERSION(5, 10, 0))
 			set_fs(oldfs);
+			#endif
 			closeFile(fp);
 
 			RTW_INFO("%s writeFile, ret:%d\n", __FUNCTION__, ret);
@@ -2605,8 +2744,10 @@ static int storeToFile(const char *path, u8 *buf, u32 sz)
 	}
 	return ret;
 }
+#endif /* !defined(CONFIG_RTW_ANDROID_GKI)*/
 #endif /* PLATFORM_LINUX */
 
+#if !defined(CONFIG_RTW_ANDROID_GKI)
 /*
 * Test if the specifi @param path is a direct and readable
 * @param path the path of the direct to test
@@ -2624,6 +2765,117 @@ int rtw_is_dir_readable(const char *path)
 	return _FALSE;
 #endif
 }
+#endif /* !defined(CONFIG_RTW_ANDROID_GKI) */
+
+/*
+* Open the file with @param path and retrive the file content into memory starting from @param buf for @param sz at most
+* @param path the path of the file to open and read
+* @param buf the starting address of the buffer to store file content
+* @param sz how many bytes to read at most
+* @return the byte we've read, or Linux specific error code
+*/
+static int retriveFromFile(const char *path, u8 *buf, u32 sz)
+{
+#if defined(CONFIG_RTW_ANDROID_GKI)
+	int ret = -EINVAL;
+	const struct firmware *fw = NULL;
+	char* const delim = "/";
+	char *name, *token, *cur, *path_tmp = NULL;
+
+
+	if (path == NULL || buf == NULL) {
+		RTW_ERR("%s() NULL pointer\n", __func__);
+		goto err;
+	}
+
+	path_tmp = kstrdup(path, GFP_KERNEL);
+	if (path_tmp == NULL) {
+		RTW_ERR("%s() cannot copy path for parsing file name\n", __func__);
+		goto err;
+	}
+
+	/* parsing file name from path */
+	cur = path_tmp;
+	token = strsep(&cur, delim);
+	while (token != NULL) {
+		token = strsep(&cur, delim);
+		if(token)
+			name = token;
+	}
+
+	if (name == NULL) {
+		RTW_ERR("%s() parsing file name fail\n", __func__);
+		goto err;
+	}
+
+	/* request_firmware() will find file in /vendor/firmware but not in path */
+	ret = request_firmware(&fw, name, NULL);
+	if (ret == 0) {
+		RTW_INFO("%s() Success. retrieve file : %s, file size : %zu\n", __func__, name, fw->size);
+
+		if ((u32)fw->size < sz) {
+			_rtw_memcpy(buf, fw->data, (u32)fw->size);
+			ret = (u32)fw->size;
+			goto exit;
+		} else {
+			RTW_ERR("%s() file size : %zu exceed buf size : %u\n", __func__, fw->size, sz);
+			ret = -EFBIG;
+			goto err;
+		}
+	} else {
+		RTW_ERR("%s() Fail. retrieve file : %s, error : %d\n", __func__, name, ret);
+		goto err;
+	}
+
+
+
+err:
+	RTW_ERR("%s() Fail. retrieve file : %s, error : %d\n", __func__, path, ret);
+exit:
+	if (path_tmp)
+		kfree(path_tmp);
+	if (fw)
+		release_firmware(fw);
+	return ret;
+#else /* !defined(CONFIG_RTW_ANDROID_GKI) */
+	int ret = -1;
+	#if (LINUX_VERSION_CODE < KERNEL_VERSION(5, 10, 0))
+	mm_segment_t oldfs;
+	#endif
+	struct file *fp;
+
+	if (path && buf) {
+		ret = openFile(&fp, path, O_RDONLY, 0);
+		if (0 == ret) {
+			RTW_INFO("%s openFile path:%s fp=%p\n", __FUNCTION__, path , fp);
+
+			#if (LINUX_VERSION_CODE < KERNEL_VERSION(5, 10, 0))
+			oldfs = get_fs();
+			#if (LINUX_VERSION_CODE >= KERNEL_VERSION(5, 1, 0))
+			set_fs(KERNEL_DS);
+			#else
+			set_fs(get_ds());
+			#endif
+			#endif
+
+			ret = readFile(fp, buf, sz);
+
+			#if (LINUX_VERSION_CODE < KERNEL_VERSION(5, 10, 0))
+			set_fs(oldfs);
+			#endif
+			closeFile(fp);
+
+			RTW_INFO("%s readFile, ret:%d\n", __FUNCTION__, ret);
+
+		} else
+			RTW_INFO("%s openFile path:%s Fail, ret:%d\n", __FUNCTION__, path, ret);
+	} else {
+		RTW_INFO("%s NULL pointer\n", __FUNCTION__);
+		ret =  -EINVAL;
+	}
+	return ret;
+#endif /* defined(CONFIG_RTW_ANDROID_GKI) */
+}
 
 /*
 * Test if the specifi @param path is a file and readable
@@ -2633,10 +2885,15 @@ int rtw_is_dir_readable(const char *path)
 int rtw_is_file_readable(const char *path)
 {
 #ifdef PLATFORM_LINUX
+#if !defined(CONFIG_RTW_ANDROID_GKI)
 	if (isFileReadable(path, NULL) == 0)
 		return _TRUE;
 	else
 		return _FALSE;
+#else
+	RTW_INFO("%s() Android GKI prohibbit kernel_read, return _TRUE\n", __func__);
+	return  _TRUE;
+#endif /* !defined(CONFIG_RTW_ANDROID_GKI) */
 #else
 	/* Todo... */
 	return _FALSE;
@@ -2652,10 +2909,16 @@ int rtw_is_file_readable(const char *path)
 int rtw_is_file_readable_with_size(const char *path, u32 *sz)
 {
 #ifdef PLATFORM_LINUX
+#if !defined(CONFIG_RTW_ANDROID_GKI)
 	if (isFileReadable(path, sz) == 0)
 		return _TRUE;
 	else
 		return _FALSE;
+#else
+	RTW_INFO("%s() Android GKI prohibbit kernel_read, return _TRUE\n", __func__);
+	*sz = 0;
+	return  _TRUE;
+#endif /* !defined(CONFIG_RTW_ANDROID_GKI) */
 #else
 	/* Todo... */
 	return _FALSE;
@@ -2699,6 +2962,7 @@ int rtw_retrieve_from_file(const char *path, u8 *buf, u32 sz)
 #endif
 }
 
+#if !defined(CONFIG_RTW_ANDROID_GKI)
 /*
 * Open the file with @param path and wirte @param sz byte of data starting from @param buf into the file
 * @param path the path of the file to open and write
@@ -2716,6 +2980,7 @@ int rtw_store_to_file(const char *path, u8 *buf, u32 sz)
 	return 0;
 #endif
 }
+#endif /* !defined(CONFIG_RTW_ANDROID_GKI) */
 
 #ifdef PLATFORM_LINUX
 struct net_device *rtw_alloc_etherdev_with_old_priv(int sizeof_priv, void *old_priv)
@@ -2922,7 +3187,7 @@ void rtw_buf_free(u8 **buf, u32 *buf_len)
 	}
 }
 
-void rtw_buf_update(u8 **buf, u32 *buf_len, u8 *src, u32 src_len)
+void rtw_buf_update(u8 **buf, u32 *buf_len, const u8 *src, u32 src_len)
 {
 	u32 ori_len = 0, dup_len = 0;
 	u8 *ori = NULL;
@@ -3349,6 +3614,20 @@ inline BOOLEAN is_space(char c)
 		return _FALSE;
 }
 
+/**
+* is_decimal -
+*
+* Return	TRUE if chTmp is represent for decimal digit
+*		FALSE otherwise.
+*/
+inline BOOLEAN is_decimal(char chTmp)
+{
+	if ((chTmp >= '0' && chTmp <= '9'))
+		return _TRUE;
+	else
+		return _FALSE;
+}
+
 /**
 * IsHexDigit -
 *
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/platform/custom_country_chplan.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/platform/custom_country_chplan.h
index dfe139612178..69ab5d5bae7b 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/platform/custom_country_chplan.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/platform/custom_country_chplan.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2013 - 2017 Realtek Corporation.
@@ -18,6 +17,6 @@
 #error "Before removing these error notifications, please make sure regulatory certification requirements of your target markets"
 
 static const struct country_chplan CUSTOMIZED_country_chplan_map[] = {
-	COUNTRY_CHPLAN_ENT("TW", 0x76, 1), /* Taiwan */
+	COUNTRY_CHPLAN_ENT("TW", 0x76, 0x00, DEF    , 1, 1), /* Taiwan */
 };
 
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/platform/platform_ARM_SUN50IW1P1_sdio.c b/drivers/net/wireless/rockchip_wlan/rtl8821cs/platform/platform_ARM_SUN50IW1P1_sdio.c
index 76df77886d70..2586455de8c3 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/platform/platform_ARM_SUN50IW1P1_sdio.c
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/platform/platform_ARM_SUN50IW1P1_sdio.c
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2013 - 2017 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/platform/platform_ARM_SUNnI_sdio.c b/drivers/net/wireless/rockchip_wlan/rtl8821cs/platform/platform_ARM_SUNnI_sdio.c
index 11e0736b31c0..8a52aa90cb0d 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/platform/platform_ARM_SUNnI_sdio.c
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/platform/platform_ARM_SUNnI_sdio.c
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2013 - 2017 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/platform/platform_ARM_SUNxI_sdio.c b/drivers/net/wireless/rockchip_wlan/rtl8821cs/platform/platform_ARM_SUNxI_sdio.c
index c1937844918d..795b7e7f7998 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/platform/platform_ARM_SUNxI_sdio.c
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/platform/platform_ARM_SUNxI_sdio.c
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2013 - 2017 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/platform/platform_ARM_SUNxI_usb.c b/drivers/net/wireless/rockchip_wlan/rtl8821cs/platform/platform_ARM_SUNxI_usb.c
index caf6a6ecabd7..9c2abc4f6f44 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/platform/platform_ARM_SUNxI_usb.c
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/platform/platform_ARM_SUNxI_usb.c
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2013 - 2017 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/platform/platform_ARM_WMT_sdio.c b/drivers/net/wireless/rockchip_wlan/rtl8821cs/platform/platform_ARM_WMT_sdio.c
index b4f59209b4ee..d85002c15fd3 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/platform/platform_ARM_WMT_sdio.c
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/platform/platform_ARM_WMT_sdio.c
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2013 - 2017 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/platform/platform_RTK_DMP_usb.c b/drivers/net/wireless/rockchip_wlan/rtl8821cs/platform/platform_RTK_DMP_usb.c
index cd15f96d157a..cb740b2eebb5 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/platform/platform_RTK_DMP_usb.c
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/platform/platform_RTK_DMP_usb.c
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2013 - 2017 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/platform/platform_aml_s905_sdio.c b/drivers/net/wireless/rockchip_wlan/rtl8821cs/platform/platform_aml_s905_sdio.c
index 1ce4e06fd2d4..334ca03c9801 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/platform/platform_aml_s905_sdio.c
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/platform/platform_aml_s905_sdio.c
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2016 - 2018 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/platform/platform_aml_s905_sdio.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/platform/platform_aml_s905_sdio.h
index f8cebf1073a5..2b87576dd629 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/platform/platform_aml_s905_sdio.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/platform/platform_aml_s905_sdio.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2016 - 2018 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/platform/platform_arm_act_sdio.c b/drivers/net/wireless/rockchip_wlan/rtl8821cs/platform/platform_arm_act_sdio.c
index a106b36aa290..ad7b6cfed455 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/platform/platform_arm_act_sdio.c
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/platform/platform_arm_act_sdio.c
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2013 - 2017 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/platform/platform_hisilicon_hi3798_sdio.c b/drivers/net/wireless/rockchip_wlan/rtl8821cs/platform/platform_hisilicon_hi3798_sdio.c
index 4ecbcf0add29..11a08320ed82 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/platform/platform_hisilicon_hi3798_sdio.c
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/platform/platform_hisilicon_hi3798_sdio.c
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2017 - 2018 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/platform/platform_hisilicon_hi3798_sdio.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/platform/platform_hisilicon_hi3798_sdio.h
index 07a4e6a6e62b..1ad42406f014 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/platform/platform_hisilicon_hi3798_sdio.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/platform/platform_hisilicon_hi3798_sdio.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2017 - 2018 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/platform/platform_ops.c b/drivers/net/wireless/rockchip_wlan/rtl8821cs/platform/platform_ops.c
index a3b8f9e36908..10766aad8e3b 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/platform/platform_ops.c
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/platform/platform_ops.c
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2013 - 2017 Realtek Corporation.
@@ -19,13 +18,10 @@
  *	0:	power on successfully
  *	others: power on failed
  */
-#include <linux/rfkill-wlan.h>
-extern unsigned int oob_irq;
 int platform_wifi_power_on(void)
 {
 	int ret = 0;
 
-	oob_irq = rockchip_wifi_get_oob_irq();
 
 	return ret;
 }
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/platform/platform_ops.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/platform/platform_ops.h
index 6f8588e8670b..12caf3c853a1 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/platform/platform_ops.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/platform/platform_ops.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2013 - 2017 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/platform/platform_sprd_sdio.c b/drivers/net/wireless/rockchip_wlan/rtl8821cs/platform/platform_sprd_sdio.c
index 4a0240f491a7..34061d05d428 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/platform/platform_sprd_sdio.c
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/platform/platform_sprd_sdio.c
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2013 - 2017 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/platform/platform_zte_zx296716_sdio.c b/drivers/net/wireless/rockchip_wlan/rtl8821cs/platform/platform_zte_zx296716_sdio.c
index abd82a0ca28e..472d24d8563c 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/platform/platform_zte_zx296716_sdio.c
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/platform/platform_zte_zx296716_sdio.c
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2016 - 2018 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/platform/platform_zte_zx296716_sdio.h b/drivers/net/wireless/rockchip_wlan/rtl8821cs/platform/platform_zte_zx296716_sdio.h
index a03647ccf664..3a4fba1a5743 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/platform/platform_zte_zx296716_sdio.h
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/platform/platform_zte_zx296716_sdio.h
@@ -1,4 +1,3 @@
-/* SPDX-License-Identifier: GPL-2.0 */
 /******************************************************************************
  *
  * Copyright(c) 2016 - 2018 Realtek Corporation.
diff --git a/drivers/net/wireless/rockchip_wlan/rtl8821cs/rtl8821c.mk b/drivers/net/wireless/rockchip_wlan/rtl8821cs/rtl8821c.mk
index 30b74c2b7407..28e21cdc9ab5 100644
--- a/drivers/net/wireless/rockchip_wlan/rtl8821cs/rtl8821c.mk
+++ b/drivers/net/wireless/rockchip_wlan/rtl8821cs/rtl8821c.mk
@@ -1,4 +1,3 @@
-# SPDX-License-Identifier: GPL-2.0
 EXTRA_CFLAGS += -DCONFIG_RTL8821C
 
 ifeq ($(CONFIG_USB_HCI), y)
-- 
2.25.1

